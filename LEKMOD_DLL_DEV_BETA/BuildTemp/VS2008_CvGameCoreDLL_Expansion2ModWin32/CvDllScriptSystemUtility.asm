; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\EnormousApplePie\Desktop\Lekmod DLL versions\v31\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvDllScriptSystemUtility.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_CIV5_XP2_DLL_VERSION DD FLAT:$SG217172
_DATA	ENDS
CONST	SEGMENT
$SG217172 DB	'1.0.0', 00H
	ORG $+2
$SG224987 DB	'MapScriptName', 00H
	ORG $+2
$SG224988 DB	'ActivePlayer', 00H
	ORG $+3
$SG224989 DB	'WorldSize', 00H
	ORG $+2
$SG224990 DB	'Climate', 00H
$SG224991 DB	'SeaLevel', 00H
	ORG $+3
$SG224992 DB	'Era', 00H
$SG224993 DB	'GameSpeed', 00H
	ORG $+2
$SG224994 DB	'VictoryType', 00H
$SG224995 DB	'GameType', 00H
	ORG $+3
$SG224996 DB	'InitialTurn', 00H
$SG224997 DB	'FinalTurn', 00H
	ORG $+2
$SG224998 DB	'StartYear', 00H
	ORG $+2
$SG224999 DB	'FinalDate', 00H
	ORG $+2
$SG225000 DB	'Calendar', 00H
	ORG $+3
$SG225001 DB	'NormalizedScore', 00H
$SG225002 DB	'MapHeight', 00H
	ORG $+2
$SG225003 DB	'MapWidth', 00H
	ORG $+3
$SG225011 DB	'Civilization', 00H
	ORG $+3
$SG225012 DB	'Leader', 00H
	ORG $+1
$SG225013 DB	'PlayerColor', 00H
$SG225014 DB	'Difficulty', 00H
	ORG $+1
$SG225015 DB	'LeaderName', 00H
	ORG $+1
$SG225016 DB	'CivDescription', 00H
	ORG $+1
$SG225017 DB	'CivShortDescription', 00H
$SG225018 DB	'CivAdjective', 00H
	ORG $+3
$SG225030 DB	'Scores', 00H
	ORG $+1
$SG225031 DB	'PlayerInfo', 00H
	ORG $+1
$SG225038 DB	'Turn', 00H
	ORG $+3
$SG225039 DB	'Type', 00H
	ORG $+3
$SG225041 DB	'Player', 00H
	ORG $+1
$SG225042 DB	'Text', 00H
	ORG $+3
$SG225050 DB	'X', 00H
	ORG $+2
$SG225051 DB	'Y', 00H
	ORG $+2
$SG225052 DB	'Plots', 00H
	ORG $+2
$SG225053 DB	'Messages', 00H
	ORG $+3
$SG225071 DB	'PlotType', 00H
	ORG $+3
$SG225072 DB	'TerrainType', 00H
$SG225073 DB	'FeatureType', 00H
$SG225074 DB	'NEOfRiver', 00H
	ORG $+2
$SG225075 DB	'WOfRiver', 00H
	ORG $+3
$SG225076 DB	'NWOfRiver', 00H
	ORG $+2
$SG225077 DB	'Plots', 00H
	ORG $+2
$SG225090 DB	'__instances', 00H
$SG225091 DB	'__mode', 00H
	ORG $+1
$SG225092 DB	'v', 00H
	ORG $+2
$SG225094 DB	'__instances', 00H
$SG225097 DB	'__instance', 00H
	ORG $+1
$SG225098 DB	'__index', 00H
$SG225113 DB	'__instance', 00H
	ORG $+1
$SG225119 DB	'Not a valid instance.  Either the instance is NULL or yo'
	DB	'u used ''.'' instead of '':''.', 00H
	ORG $+1
$SG225139 DB	'__instances', 00H
$SG225140 DB	'__mode', 00H
	ORG $+1
$SG225141 DB	'v', 00H
	ORG $+2
$SG225143 DB	'__instances', 00H
$SG225146 DB	'__instance', 00H
	ORG $+1
$SG225147 DB	'__index', 00H
$SG225162 DB	'__instance', 00H
	ORG $+1
$SG225168 DB	'Not a valid instance.  Either the instance is NULL or yo'
	DB	'u used ''.'' instead of '':''.', 00H
	ORG $+1
$SG225302 DB	'__instances', 00H
$SG225303 DB	'__mode', 00H
	ORG $+1
$SG225304 DB	'v', 00H
	ORG $+2
$SG225306 DB	'__instances', 00H
$SG225309 DB	'__instance', 00H
	ORG $+1
$SG225310 DB	'__index', 00H
$SG225325 DB	'__instance', 00H
	ORG $+1
$SG225331 DB	'Not a valid instance.  Either the instance is NULL or yo'
	DB	'u used ''.'' instead of '':''.', 00H
	ORG $+1
$SG225342 DB	'__instances', 00H
$SG225343 DB	'__mode', 00H
	ORG $+1
$SG225344 DB	'v', 00H
	ORG $+2
$SG225346 DB	'__instances', 00H
$SG225349 DB	'__instance', 00H
	ORG $+1
$SG225350 DB	'__index', 00H
$SG225365 DB	'__instance', 00H
	ORG $+1
$SG225371 DB	'Not a valid instance.  Either the instance is NULL or yo'
	DB	'u used ''.'' instead of '':''.', 00H
	ORG $+1
_guidICvUnknown DD 0d89ba82fH
	DW	09fa3H
	DW	04696H
	DB	0b3H
	DB	0f4H
	DB	052H
	DB	0bdH
	DB	0b1H
	DB	01H
	DB	0cfH
	DB	0b2H
_guidICvScriptSystemUtility1 DD 0c004434cH
	DW	0878eH
	DW	04bcdH
	DB	0baH
	DB	0b2H
	DB	04cH
	DB	0eeH
	DB	034H
	DB	01dH
	DB	071H
	DB	01bH
CONST	ENDS
PUBLIC	_IsEqualGUID
; Function compile flags: /Ogtpy
; File c:\program files\microsoft sdks\windows\v6.0a\include\guiddef.h
;	COMDAT _IsEqualGUID
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID PROC					; COMDAT

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

	mov	ecx, DWORD PTR _rguid2$[esp-4]
	mov	edx, DWORD PTR _rguid1$[esp-4]
	mov	eax, 16					; 00000010H
	push	esi
	npad	2
$LL4@IsEqualGUI:
	mov	esi, DWORD PTR [edx]
	cmp	esi, DWORD PTR [ecx]
	jne	SHORT $LN5@IsEqualGUI
	sub	eax, 4
	add	ecx, 4
	add	edx, 4
	cmp	eax, 4
	jae	SHORT $LL4@IsEqualGUI
	xor	eax, eax
	xor	edx, edx
	test	eax, eax
	sete	dl
	pop	esi
	mov	eax, edx

; 162  : }

	ret	0
$LN5@IsEqualGUI:

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

	movzx	eax, BYTE PTR [edx]
	movzx	esi, BYTE PTR [ecx]
	sub	eax, esi
	jne	SHORT $LN7@IsEqualGUI
	movzx	eax, BYTE PTR [edx+1]
	movzx	esi, BYTE PTR [ecx+1]
	sub	eax, esi
	jne	SHORT $LN7@IsEqualGUI
	movzx	eax, BYTE PTR [edx+2]
	movzx	esi, BYTE PTR [ecx+2]
	sub	eax, esi
	jne	SHORT $LN7@IsEqualGUI
	movzx	eax, BYTE PTR [edx+3]
	movzx	ecx, BYTE PTR [ecx+3]
	sub	eax, ecx
$LN7@IsEqualGUI:
	sar	eax, 31					; 0000001fH
	or	eax, 1
	xor	edx, edx
	test	eax, eax
	sete	dl
	pop	esi
	mov	eax, edx

; 162  : }

	ret	0
_IsEqualGUID ENDP
_TEXT	ENDS
PUBLIC	_==
; Function compile flags: /Ogtpy
;	COMDAT _==
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==	PROC						; COMDAT

; 194  :     return IsEqualGUID(guidOne,guidOther);

	jmp	_IsEqualGUID
_==	ENDP
_TEXT	ENDS
PUBLIC	??_7ICvUnknown@@6B@				; ICvUnknown::`vftable'
PUBLIC	??0ICvUnknown@@QAE@XZ				; ICvUnknown::ICvUnknown
PUBLIC	??_R4ICvUnknown@@6B@				; ICvUnknown::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVICvUnknown@@@8				; ICvUnknown `RTTI Type Descriptor'
PUBLIC	??_R3ICvUnknown@@8				; ICvUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICvUnknown@@8				; ICvUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICvUnknown@@8			; ICvUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@ICvUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICvUnknown@@8 DD FLAT:??_R0?AVICvUnknown@@@8 ; ICvUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICvUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2ICvUnknown@@8
rdata$r	SEGMENT
??_R2ICvUnknown@@8 DD FLAT:??_R1A@?0A@EA@ICvUnknown@@8	; ICvUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ICvUnknown@@8
rdata$r	SEGMENT
??_R3ICvUnknown@@8 DD 00H				; ICvUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ICvUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVICvUnknown@@@8
_DATA	SEGMENT
??_R0?AVICvUnknown@@@8 DD FLAT:??_7type_info@@6B@	; ICvUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVICvUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ICvUnknown@@6B@
rdata$r	SEGMENT
??_R4ICvUnknown@@6B@ DD 00H				; ICvUnknown::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVICvUnknown@@@8
	DD	FLAT:??_R3ICvUnknown@@8
rdata$r	ENDS
;	COMDAT ??_7ICvUnknown@@6B@
CONST	SEGMENT
??_7ICvUnknown@@6B@ DD FLAT:??_R4ICvUnknown@@6B@	; ICvUnknown::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0ICvUnknown@@QAE@XZ
_TEXT	SEGMENT
??0ICvUnknown@@QAE@XZ PROC				; ICvUnknown::ICvUnknown, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7ICvUnknown@@6B@
	ret	0
??0ICvUnknown@@QAE@XZ ENDP				; ICvUnknown::ICvUnknown
_TEXT	ENDS
PUBLIC	??_7CvDllScriptSystemUtility@@6B@		; CvDllScriptSystemUtility::`vftable'
PUBLIC	??1CvDllScriptSystemUtility@@QAE@XZ		; CvDllScriptSystemUtility::~CvDllScriptSystemUtility
PUBLIC	??_R4CvDllScriptSystemUtility@@6B@		; CvDllScriptSystemUtility::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCvDllScriptSystemUtility@@@8		; CvDllScriptSystemUtility `RTTI Type Descriptor'
PUBLIC	??_R3CvDllScriptSystemUtility@@8		; CvDllScriptSystemUtility::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CvDllScriptSystemUtility@@8		; CvDllScriptSystemUtility::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CvDllScriptSystemUtility@@8	; CvDllScriptSystemUtility::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ICvScriptSystemUtility1@@8	; ICvScriptSystemUtility1::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVICvScriptSystemUtility1@@@8		; ICvScriptSystemUtility1 `RTTI Type Descriptor'
PUBLIC	??_R3ICvScriptSystemUtility1@@8			; ICvScriptSystemUtility1::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICvScriptSystemUtility1@@8			; ICvScriptSystemUtility1::`RTTI Base Class Array'
PUBLIC	?QueryInterface@CvDllScriptSystemUtility@@UAGPAXU_GUID@@@Z ; CvDllScriptSystemUtility::QueryInterface
PUBLIC	?Destroy@CvDllScriptSystemUtility@@EAGXXZ	; CvDllScriptSystemUtility::Destroy
PUBLIC	?RegisterScriptLibraries@CvDllScriptSystemUtility@@UAGXPAUlua_State@@@Z ; CvDllScriptSystemUtility::RegisterScriptLibraries
PUBLIC	?PushCvCityInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvCity1@@@Z ; CvDllScriptSystemUtility::PushCvCityInstance
PUBLIC	?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z ; CvDllScriptSystemUtility::GetCvCityInstance
PUBLIC	?PushCvDealInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvDeal1@@@Z ; CvDllScriptSystemUtility::PushCvDealInstance
PUBLIC	?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z ; CvDllScriptSystemUtility::GetCvDealInstance
PUBLIC	?PushCvPlotInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvPlot1@@@Z ; CvDllScriptSystemUtility::PushCvPlotInstance
PUBLIC	?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z ; CvDllScriptSystemUtility::GetCvPlotInstance
PUBLIC	?PushCvUnitInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvUnit1@@@Z ; CvDllScriptSystemUtility::PushCvUnitInstance
PUBLIC	?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z ; CvDllScriptSystemUtility::GetCvUnitInstance
PUBLIC	?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z ; CvDllScriptSystemUtility::PushReplayFromStream
;	COMDAT ??_R2ICvScriptSystemUtility1@@8
; File c:\users\enormousapplepie\desktop\lekmod dll versions\v31\lekmod_dll\cvgamecoredll_expansion2\cvdllscriptsystemutility.cpp
rdata$r	SEGMENT
??_R2ICvScriptSystemUtility1@@8 DD FLAT:??_R1A@?0A@EA@ICvScriptSystemUtility1@@8 ; ICvScriptSystemUtility1::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICvUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICvScriptSystemUtility1@@8
rdata$r	SEGMENT
??_R3ICvScriptSystemUtility1@@8 DD 00H			; ICvScriptSystemUtility1::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICvScriptSystemUtility1@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVICvScriptSystemUtility1@@@8
_DATA	SEGMENT
??_R0?AVICvScriptSystemUtility1@@@8 DD FLAT:??_7type_info@@6B@ ; ICvScriptSystemUtility1 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVICvScriptSystemUtility1@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ICvScriptSystemUtility1@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICvScriptSystemUtility1@@8 DD FLAT:??_R0?AVICvScriptSystemUtility1@@@8 ; ICvScriptSystemUtility1::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICvScriptSystemUtility1@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CvDllScriptSystemUtility@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CvDllScriptSystemUtility@@8 DD FLAT:??_R0?AVCvDllScriptSystemUtility@@@8 ; CvDllScriptSystemUtility::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CvDllScriptSystemUtility@@8
rdata$r	ENDS
;	COMDAT ??_R2CvDllScriptSystemUtility@@8
rdata$r	SEGMENT
??_R2CvDllScriptSystemUtility@@8 DD FLAT:??_R1A@?0A@EA@CvDllScriptSystemUtility@@8 ; CvDllScriptSystemUtility::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICvScriptSystemUtility1@@8
	DD	FLAT:??_R1A@?0A@EA@ICvUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CvDllScriptSystemUtility@@8
rdata$r	SEGMENT
??_R3CvDllScriptSystemUtility@@8 DD 00H			; CvDllScriptSystemUtility::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CvDllScriptSystemUtility@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCvDllScriptSystemUtility@@@8
_DATA	SEGMENT
??_R0?AVCvDllScriptSystemUtility@@@8 DD FLAT:??_7type_info@@6B@ ; CvDllScriptSystemUtility `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCvDllScriptSystemUtility@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CvDllScriptSystemUtility@@6B@
rdata$r	SEGMENT
??_R4CvDllScriptSystemUtility@@6B@ DD 00H		; CvDllScriptSystemUtility::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCvDllScriptSystemUtility@@@8
	DD	FLAT:??_R3CvDllScriptSystemUtility@@8
rdata$r	ENDS
;	COMDAT ??_7CvDllScriptSystemUtility@@6B@
CONST	SEGMENT
??_7CvDllScriptSystemUtility@@6B@ DD FLAT:??_R4CvDllScriptSystemUtility@@6B@ ; CvDllScriptSystemUtility::`vftable'
	DD	FLAT:?QueryInterface@CvDllScriptSystemUtility@@UAGPAXU_GUID@@@Z
	DD	FLAT:?Destroy@CvDllScriptSystemUtility@@EAGXXZ
	DD	FLAT:?RegisterScriptLibraries@CvDllScriptSystemUtility@@UAGXPAUlua_State@@@Z
	DD	FLAT:?PushCvCityInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvCity1@@@Z
	DD	FLAT:?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z
	DD	FLAT:?PushCvDealInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvDeal1@@@Z
	DD	FLAT:?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z
	DD	FLAT:?PushCvPlotInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvPlot1@@@Z
	DD	FLAT:?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z
	DD	FLAT:?PushCvUnitInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvUnit1@@@Z
	DD	FLAT:?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z
	DD	FLAT:?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??1CvDllScriptSystemUtility@@QAE@XZ
_TEXT	SEGMENT
??1CvDllScriptSystemUtility@@QAE@XZ PROC		; CvDllScriptSystemUtility::~CvDllScriptSystemUtility, COMDAT
; _this$ = ecx

; 32   : {

	mov	DWORD PTR [ecx], OFFSET ??_7CvDllScriptSystemUtility@@6B@

; 33   : }

	ret	0
??1CvDllScriptSystemUtility@@QAE@XZ ENDP		; CvDllScriptSystemUtility::~CvDllScriptSystemUtility
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Destroy@CvDllScriptSystemUtility@@EAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Destroy@CvDllScriptSystemUtility@@EAGXXZ PROC		; CvDllScriptSystemUtility::Destroy, COMDAT

; 48   : 	//Do Nothing, object is managed externally.
; 49   : }

	ret	4
?Destroy@CvDllScriptSystemUtility@@EAGXXZ ENDP		; CvDllScriptSystemUtility::Destroy
_TEXT	ENDS
PUBLIC	??3CvDllScriptSystemUtility@@SAXPAX@Z		; CvDllScriptSystemUtility::operator delete
EXTRN	?Free@CvDllGameContext@@SAXPAX@Z:PROC		; CvDllGameContext::Free
; Function compile flags: /Ogtpy
;	COMDAT ??3CvDllScriptSystemUtility@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CvDllScriptSystemUtility@@SAXPAX@Z PROC		; CvDllScriptSystemUtility::operator delete, COMDAT

; 53   : 	CvDllGameContext::Free(p);

	jmp	?Free@CvDllGameContext@@SAXPAX@Z	; CvDllGameContext::Free
??3CvDllScriptSystemUtility@@SAXPAX@Z ENDP		; CvDllScriptSystemUtility::operator delete
_TEXT	ENDS
PUBLIC	??2CvDllScriptSystemUtility@@SAPAXI@Z		; CvDllScriptSystemUtility::operator new
EXTRN	?Allocate@CvDllGameContext@@SAPAXI@Z:PROC	; CvDllGameContext::Allocate
; Function compile flags: /Ogtpy
;	COMDAT ??2CvDllScriptSystemUtility@@SAPAXI@Z
_TEXT	SEGMENT
_bytes$ = 8						; size = 4
??2CvDllScriptSystemUtility@@SAPAXI@Z PROC		; CvDllScriptSystemUtility::operator new, COMDAT

; 58   : 	return CvDllGameContext::Allocate(bytes);

	jmp	?Allocate@CvDllGameContext@@SAPAXI@Z	; CvDllGameContext::Allocate
??2CvDllScriptSystemUtility@@SAPAXI@Z ENDP		; CvDllScriptSystemUtility::operator new
_TEXT	ENDS
EXTRN	?RegisterScriptData@LuaSupport@@YAXPAUlua_State@@@Z:PROC ; LuaSupport::RegisterScriptData
; Function compile flags: /Ogtpy
;	COMDAT ?RegisterScriptLibraries@CvDllScriptSystemUtility@@UAGXPAUlua_State@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_L$ = 12						; size = 4
?RegisterScriptLibraries@CvDllScriptSystemUtility@@UAGXPAUlua_State@@@Z PROC ; CvDllScriptSystemUtility::RegisterScriptLibraries, COMDAT

; 63   : 	LuaSupport::RegisterScriptData(L);

	mov	eax, DWORD PTR _L$[esp-4]
	push	eax
	call	?RegisterScriptData@LuaSupport@@YAXPAUlua_State@@@Z ; LuaSupport::RegisterScriptData
	pop	ecx

; 64   : }

	ret	8
?RegisterScriptLibraries@CvDllScriptSystemUtility@@UAGXPAUlua_State@@@Z ENDP ; CvDllScriptSystemUtility::RegisterScriptLibraries
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
EXTRN	_lua_pushnil:PROC
EXTRN	_lua_remove:PROC
EXTRN	_lua_pushlightuserdata:PROC
EXTRN	_lua_rawget:PROC
EXTRN	?PushMethods@CvLuaCity@@SAXPAUlua_State@@H@Z:PROC ; CvLuaCity::PushMethods
EXTRN	_lua_gettop:PROC
EXTRN	_lua_setfield:PROC
EXTRN	_lua_pushvalue:PROC
EXTRN	_lua_setmetatable:PROC
EXTRN	_lua_rawset:PROC
EXTRN	_lua_pushstring:PROC
EXTRN	_lua_createtable:PROC
EXTRN	_lua_settop:PROC
EXTRN	_lua_type:PROC
EXTRN	_lua_getfield:PROC
EXTRN	?GetTypeName@CvLuaCity@@SAPBDXZ:PROC		; CvLuaCity::GetTypeName
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\lekmod dll versions\v31\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z PROC ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push, COMDAT

; 39   : {

	push	edi

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	mov	edi, DWORD PTR _pkType$[esp]
	test	edi, edi
	je	$LN4@Push
	push	ebx
	push	ebp
	push	esi

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaCity@@SAPBDXZ		; CvLuaCity::GetTypeName
	mov	esi, DWORD PTR _L$[esp+12]
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_getfield

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN7@Push

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 59   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET $SG225090
	push	esi
	call	_lua_pushstring

; 63   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET $SG225091
	push	esi
	call	_lua_pushstring

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET $SG225092
	push	esi
	call	_lua_pushstring
	add	esp, 68					; 00000044H

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	push	esi
	call	_lua_pushvalue

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaCity@@SAPBDXZ		; CvLuaCity::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_setfield

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	push	esi
	call	_lua_gettop
	push	eax
	push	esi
	call	?PushMethods@CvLuaCity@@SAXPAUlua_State@@H@Z ; CvLuaCity::PushMethods
	add	esp, 56					; 00000038H
$LN7@Push:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET $SG225094
	push	esi
	mov	ebx, eax
	call	_lua_pushstring

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	mov	ebp, eax
	call	_lua_pushlightuserdata

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	SHORT $LN2@Push

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 97   : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET $SG225097
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET $SG225098
	push	esi
	call	_lua_pushstring

; 102  : 			lua_pushvalue(L, type_index);

	push	ebx
	push	esi
	call	_lua_pushvalue
	add	esp, 68					; 00000044H

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_pushvalue

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	push	ebp
	push	esi
	call	_lua_rawset
	add	esp, 40					; 00000028H
$LN2@Push:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	push	ebp
	push	esi
	call	_lua_remove

; 114  : 		lua_remove(L, type_index);

	push	ebx
	push	esi
	call	_lua_remove
	add	esp, 16					; 00000010H
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
$LN4@Push:

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else
; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushnil
	add	esp, 4
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ENDP ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
EXTRN	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z:PROC ; CvLuaCity::HandleMissingInstance
EXTRN	_luaL_error:PROC
EXTRN	_lua_touserdata:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance, COMDAT

; 127  : {

	push	ebx
	push	ebp
	push	esi

; 128  : 	const int stack_size = lua_gettop(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	mov	ebp, eax

; 129  : 	bool bFail = true;
; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;
; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	eax, DWORD PTR _idx$[esp+16]
	push	eax
	push	esi
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN3@GetInstanc

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	mov	ecx, DWORD PTR _idx$[esp+12]
	push	OFFSET $SG225113
	push	ecx
	push	esi
	call	_lua_getfield

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN3@GetInstanc

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8

; 138  : 			if(pkInstance)

	test	edi, edi
	je	SHORT $LN3@GetInstanc

; 139  : 			{
; 140  : 				bFail = false;

	xor	bl, bl
$LN3@GetInstanc:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	test	bl, bl
	je	SHORT $LN9@GetInstanc
	cmp	BYTE PTR _bErrorOnFail$[esp+12], 0
	je	SHORT $LN9@GetInstanc

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[esp+12], 1
	jne	SHORT $LN1@GetInstanc

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET $SG225119
	push	esi
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc:

; 151  : 		Derived::HandleMissingInstance(L);

	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN9@GetInstanc:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 154  : }

	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAXPAUlua_State@@PAVCvDeal@@@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::Push
EXTRN	?PushMethods@CvLuaDeal@@SAXPAUlua_State@@H@Z:PROC ; CvLuaDeal::PushMethods
EXTRN	?GetTypeName@CvLuaDeal@@SAPBDXZ:PROC		; CvLuaDeal::GetTypeName
; Function compile flags: /Ogtpy
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAXPAUlua_State@@PAVCvDeal@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAXPAUlua_State@@PAVCvDeal@@@Z PROC ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::Push, COMDAT

; 39   : {

	push	edi

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	mov	edi, DWORD PTR _pkType$[esp]
	test	edi, edi
	je	$LN4@Push@2
	push	ebx
	push	ebp
	push	esi

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaDeal@@SAPBDXZ		; CvLuaDeal::GetTypeName
	mov	esi, DWORD PTR _L$[esp+12]
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_getfield

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN7@Push@2

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 59   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET $SG225139
	push	esi
	call	_lua_pushstring

; 63   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET $SG225140
	push	esi
	call	_lua_pushstring

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET $SG225141
	push	esi
	call	_lua_pushstring
	add	esp, 68					; 00000044H

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	push	esi
	call	_lua_pushvalue

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaDeal@@SAPBDXZ		; CvLuaDeal::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_setfield

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	push	esi
	call	_lua_gettop
	push	eax
	push	esi
	call	?PushMethods@CvLuaDeal@@SAXPAUlua_State@@H@Z ; CvLuaDeal::PushMethods
	add	esp, 56					; 00000038H
$LN7@Push@2:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET $SG225143
	push	esi
	mov	ebx, eax
	call	_lua_pushstring

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	mov	ebp, eax
	call	_lua_pushlightuserdata

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	SHORT $LN2@Push@2

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 97   : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET $SG225146
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET $SG225147
	push	esi
	call	_lua_pushstring

; 102  : 			lua_pushvalue(L, type_index);

	push	ebx
	push	esi
	call	_lua_pushvalue
	add	esp, 68					; 00000044H

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_pushvalue

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	push	ebp
	push	esi
	call	_lua_rawset
	add	esp, 40					; 00000028H
$LN2@Push@2:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	push	ebp
	push	esi
	call	_lua_remove

; 114  : 		lua_remove(L, type_index);

	push	ebx
	push	esi
	call	_lua_remove
	add	esp, 16					; 00000010H
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
$LN4@Push@2:

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else
; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushnil
	add	esp, 4
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAXPAUlua_State@@PAVCvDeal@@@Z ENDP ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::Push
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
EXTRN	?HandleMissingInstance@CvLuaDeal@@SAXPAUlua_State@@@Z:PROC ; CvLuaDeal::HandleMissingInstance
; Function compile flags: /Ogtpy
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance, COMDAT

; 127  : {

	push	ebx
	push	ebp
	push	esi

; 128  : 	const int stack_size = lua_gettop(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	mov	ebp, eax

; 129  : 	bool bFail = true;
; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;
; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	eax, DWORD PTR _idx$[esp+16]
	push	eax
	push	esi
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN3@GetInstanc@2

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	mov	ecx, DWORD PTR _idx$[esp+12]
	push	OFFSET $SG225162
	push	ecx
	push	esi
	call	_lua_getfield

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN3@GetInstanc@2

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8

; 138  : 			if(pkInstance)

	test	edi, edi
	je	SHORT $LN3@GetInstanc@2

; 139  : 			{
; 140  : 				bFail = false;

	xor	bl, bl
$LN3@GetInstanc@2:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	test	bl, bl
	je	SHORT $LN9@GetInstanc@2
	cmp	BYTE PTR _bErrorOnFail$[esp+12], 0
	je	SHORT $LN9@GetInstanc@2

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[esp+12], 1
	jne	SHORT $LN1@GetInstanc@2

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET $SG225168
	push	esi
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc@2:

; 151  : 		Derived::HandleMissingInstance(L);

	push	esi
	call	?HandleMissingInstance@CvLuaDeal@@SAXPAUlua_State@@@Z ; CvLuaDeal::HandleMissingInstance
	add	esp, 4
$LN9@GetInstanc@2:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 154  : }

	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
EXTRN	?PushMethods@CvLuaPlot@@SAXPAUlua_State@@H@Z:PROC ; CvLuaPlot::PushMethods
EXTRN	?GetTypeName@CvLuaPlot@@SAPBDXZ:PROC		; CvLuaPlot::GetTypeName
; Function compile flags: /Ogtpy
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z PROC ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push, COMDAT

; 39   : {

	push	edi

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	mov	edi, DWORD PTR _pkType$[esp]
	test	edi, edi
	je	$LN4@Push@3
	push	ebx
	push	ebp
	push	esi

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaPlot@@SAPBDXZ		; CvLuaPlot::GetTypeName
	mov	esi, DWORD PTR _L$[esp+12]
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_getfield

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN7@Push@3

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 59   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET $SG225302
	push	esi
	call	_lua_pushstring

; 63   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET $SG225303
	push	esi
	call	_lua_pushstring

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET $SG225304
	push	esi
	call	_lua_pushstring
	add	esp, 68					; 00000044H

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	push	esi
	call	_lua_pushvalue

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaPlot@@SAPBDXZ		; CvLuaPlot::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_setfield

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	push	esi
	call	_lua_gettop
	push	eax
	push	esi
	call	?PushMethods@CvLuaPlot@@SAXPAUlua_State@@H@Z ; CvLuaPlot::PushMethods
	add	esp, 56					; 00000038H
$LN7@Push@3:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET $SG225306
	push	esi
	mov	ebx, eax
	call	_lua_pushstring

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	mov	ebp, eax
	call	_lua_pushlightuserdata

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	SHORT $LN2@Push@3

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 97   : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET $SG225309
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET $SG225310
	push	esi
	call	_lua_pushstring

; 102  : 			lua_pushvalue(L, type_index);

	push	ebx
	push	esi
	call	_lua_pushvalue
	add	esp, 68					; 00000044H

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_pushvalue

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	push	ebp
	push	esi
	call	_lua_rawset
	add	esp, 40					; 00000028H
$LN2@Push@3:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	push	ebp
	push	esi
	call	_lua_remove

; 114  : 		lua_remove(L, type_index);

	push	ebx
	push	esi
	call	_lua_remove
	add	esp, 16					; 00000010H
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
$LN4@Push@3:

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else
; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushnil
	add	esp, 4
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ENDP ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
EXTRN	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z:PROC ; CvLuaPlot::HandleMissingInstance
; Function compile flags: /Ogtpy
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance, COMDAT

; 127  : {

	push	ebx
	push	ebp
	push	esi

; 128  : 	const int stack_size = lua_gettop(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	mov	ebp, eax

; 129  : 	bool bFail = true;
; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;
; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	eax, DWORD PTR _idx$[esp+16]
	push	eax
	push	esi
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN3@GetInstanc@3

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	mov	ecx, DWORD PTR _idx$[esp+12]
	push	OFFSET $SG225325
	push	ecx
	push	esi
	call	_lua_getfield

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN3@GetInstanc@3

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8

; 138  : 			if(pkInstance)

	test	edi, edi
	je	SHORT $LN3@GetInstanc@3

; 139  : 			{
; 140  : 				bFail = false;

	xor	bl, bl
$LN3@GetInstanc@3:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	test	bl, bl
	je	SHORT $LN9@GetInstanc@3
	cmp	BYTE PTR _bErrorOnFail$[esp+12], 0
	je	SHORT $LN9@GetInstanc@3

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[esp+12], 1
	jne	SHORT $LN1@GetInstanc@3

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET $SG225331
	push	esi
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc@3:

; 151  : 		Derived::HandleMissingInstance(L);

	push	esi
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 4
$LN9@GetInstanc@3:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 154  : }

	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
EXTRN	?PushMethods@CvLuaUnit@@SAXPAUlua_State@@H@Z:PROC ; CvLuaUnit::PushMethods
EXTRN	?GetTypeName@CvLuaUnit@@SAPBDXZ:PROC		; CvLuaUnit::GetTypeName
; Function compile flags: /Ogtpy
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z PROC ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push, COMDAT

; 39   : {

	push	edi

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	mov	edi, DWORD PTR _pkType$[esp]
	test	edi, edi
	je	$LN4@Push@4
	push	ebx
	push	ebp
	push	esi

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaUnit@@SAPBDXZ		; CvLuaUnit::GetTypeName
	mov	esi, DWORD PTR _L$[esp+12]
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_getfield

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN7@Push@4

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 59   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET $SG225342
	push	esi
	call	_lua_pushstring

; 63   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET $SG225343
	push	esi
	call	_lua_pushstring

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET $SG225344
	push	esi
	call	_lua_pushstring
	add	esp, 68					; 00000044H

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	push	esi
	call	_lua_pushvalue

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaUnit@@SAPBDXZ		; CvLuaUnit::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_setfield

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	push	esi
	call	_lua_gettop
	push	eax
	push	esi
	call	?PushMethods@CvLuaUnit@@SAXPAUlua_State@@H@Z ; CvLuaUnit::PushMethods
	add	esp, 56					; 00000038H
$LN7@Push@4:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET $SG225346
	push	esi
	mov	ebx, eax
	call	_lua_pushstring

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	mov	ebp, eax
	call	_lua_pushlightuserdata

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	SHORT $LN2@Push@4

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 97   : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET $SG225349
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET $SG225350
	push	esi
	call	_lua_pushstring

; 102  : 			lua_pushvalue(L, type_index);

	push	ebx
	push	esi
	call	_lua_pushvalue
	add	esp, 68					; 00000044H

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_pushvalue

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	push	ebp
	push	esi
	call	_lua_rawset
	add	esp, 40					; 00000028H
$LN2@Push@4:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	push	ebp
	push	esi
	call	_lua_remove

; 114  : 		lua_remove(L, type_index);

	push	ebx
	push	esi
	call	_lua_remove
	add	esp, 16					; 00000010H
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
$LN4@Push@4:

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else
; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushnil
	add	esp, 4
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ENDP ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
EXTRN	?HandleMissingInstance@CvLuaUnit@@SAXPAUlua_State@@@Z:PROC ; CvLuaUnit::HandleMissingInstance
; Function compile flags: /Ogtpy
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance, COMDAT

; 127  : {

	push	ebx
	push	ebp
	push	esi

; 128  : 	const int stack_size = lua_gettop(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	mov	ebp, eax

; 129  : 	bool bFail = true;
; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;
; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	eax, DWORD PTR _idx$[esp+16]
	push	eax
	push	esi
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN3@GetInstanc@4

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	mov	ecx, DWORD PTR _idx$[esp+12]
	push	OFFSET $SG225365
	push	ecx
	push	esi
	call	_lua_getfield

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN3@GetInstanc@4

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8

; 138  : 			if(pkInstance)

	test	edi, edi
	je	SHORT $LN3@GetInstanc@4

; 139  : 			{
; 140  : 				bFail = false;

	xor	bl, bl
$LN3@GetInstanc@4:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	test	bl, bl
	je	SHORT $LN9@GetInstanc@4
	cmp	BYTE PTR _bErrorOnFail$[esp+12], 0
	je	SHORT $LN9@GetInstanc@4

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[esp+12], 1
	jne	SHORT $LN1@GetInstanc@4

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET $SG225371
	push	esi
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc@4:

; 151  : 		Derived::HandleMissingInstance(L);

	push	esi
	call	?HandleMissingInstance@CvLuaUnit@@SAXPAUlua_State@@@Z ; CvLuaUnit::HandleMissingInstance
	add	esp, 4
$LN9@GetInstanc@4:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 154  : }

	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
_TEXT	ENDS
PUBLIC	??BCvString@@QBEPBDXZ				; CvString::operator char const *
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\lekmod dll versions\v31\lekmod_dll\cvgamecoredllutil\include\cvstring.h
;	COMDAT ??BCvString@@QBEPBDXZ
_TEXT	SEGMENT
??BCvString@@QBEPBDXZ PROC				; CvString::operator char const *, COMDAT
; _this$ = ecx

; 31   : 	operator const char*() const 	{ return c_str(); }												

	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
??BCvString@@QBEPBDXZ ENDP				; CvString::operator char const *
_TEXT	ENDS
PUBLIC	?GetInterfaceId@ICvUnknown@@SG?AU_GUID@@XZ	; ICvUnknown::GetInterfaceId
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\lekmod dll versions\v31\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces.h
;	COMDAT ?GetInterfaceId@ICvUnknown@@SG?AU_GUID@@XZ
_TEXT	SEGMENT
$T225577 = 8						; size = 4
?GetInterfaceId@ICvUnknown@@SG?AU_GUID@@XZ PROC		; ICvUnknown::GetInterfaceId, COMDAT

; 306  : 	static GUID DLLCALL GetInterfaceId(){ return guidICvUnknown; }

	mov	eax, DWORD PTR $T225577[esp-4]
	mov	ecx, DWORD PTR _guidICvUnknown
	mov	edx, DWORD PTR _guidICvUnknown+4
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _guidICvUnknown+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _guidICvUnknown+12
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	ret	4
?GetInterfaceId@ICvUnknown@@SG?AU_GUID@@XZ ENDP		; ICvUnknown::GetInterfaceId
_TEXT	ENDS
PUBLIC	?GetInterfaceId@ICvScriptSystemUtility1@@SG?AU_GUID@@XZ ; ICvScriptSystemUtility1::GetInterfaceId
; Function compile flags: /Ogtpy
;	COMDAT ?GetInterfaceId@ICvScriptSystemUtility1@@SG?AU_GUID@@XZ
_TEXT	SEGMENT
$T225581 = 8						; size = 4
?GetInterfaceId@ICvScriptSystemUtility1@@SG?AU_GUID@@XZ PROC ; ICvScriptSystemUtility1::GetInterfaceId, COMDAT

; 807  : 	static GUID DLLCALL GetInterfaceId() { return guidICvScriptSystemUtility1; }

	mov	eax, DWORD PTR $T225581[esp-4]
	mov	ecx, DWORD PTR _guidICvScriptSystemUtility1
	mov	edx, DWORD PTR _guidICvScriptSystemUtility1+4
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _guidICvScriptSystemUtility1+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _guidICvScriptSystemUtility1+12
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	ret	4
?GetInterfaceId@ICvScriptSystemUtility1@@SG?AU_GUID@@XZ ENDP ; ICvScriptSystemUtility1::GetInterfaceId
_TEXT	ENDS
PUBLIC	??_7ICvScriptSystemUtility1@@6B@		; ICvScriptSystemUtility1::`vftable'
PUBLIC	??0ICvScriptSystemUtility1@@QAE@XZ		; ICvScriptSystemUtility1::ICvScriptSystemUtility1
PUBLIC	??_R4ICvScriptSystemUtility1@@6B@		; ICvScriptSystemUtility1::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICvScriptSystemUtility1@@6B@
rdata$r	SEGMENT
??_R4ICvScriptSystemUtility1@@6B@ DD 00H		; ICvScriptSystemUtility1::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVICvScriptSystemUtility1@@@8
	DD	FLAT:??_R3ICvScriptSystemUtility1@@8
rdata$r	ENDS
;	COMDAT ??_7ICvScriptSystemUtility1@@6B@
CONST	SEGMENT
??_7ICvScriptSystemUtility1@@6B@ DD FLAT:??_R4ICvScriptSystemUtility1@@6B@ ; ICvScriptSystemUtility1::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0ICvScriptSystemUtility1@@QAE@XZ
_TEXT	SEGMENT
??0ICvScriptSystemUtility1@@QAE@XZ PROC			; ICvScriptSystemUtility1::ICvScriptSystemUtility1, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7ICvScriptSystemUtility1@@6B@
	ret	0
??0ICvScriptSystemUtility1@@QAE@XZ ENDP			; ICvScriptSystemUtility1::ICvScriptSystemUtility1
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\lekmod dll versions\v31\lekmod_dll\cvgamecoredll_expansion2\cvdllscriptsystemutility.cpp
_TEXT	ENDS
;	COMDAT ?QueryInterface@CvDllScriptSystemUtility@@UAGPAXU_GUID@@@Z
_TEXT	SEGMENT
$T225593 = -16						; size = 16
$T225591 = -16						; size = 16
_this$ = 8						; size = 4
_guidInterface$ = 12					; size = 16
?QueryInterface@CvDllScriptSystemUtility@@UAGPAXU_GUID@@@Z PROC ; CvDllScriptSystemUtility::QueryInterface, COMDAT

; 36   : {

	sub	esp, 16					; 00000010H

; 37   : 	if(guidInterface == ICvUnknown::GetInterfaceId() ||
; 38   : 	        guidInterface == ICvScriptSystemUtility1::GetInterfaceId())

	mov	ecx, DWORD PTR _guidICvUnknown+4
	mov	edx, DWORD PTR _guidICvUnknown+8
	mov	eax, DWORD PTR _guidICvUnknown
	mov	DWORD PTR $T225591[esp+20], ecx
	lea	ecx, DWORD PTR $T225591[esp+16]
	mov	DWORD PTR $T225591[esp+24], edx
	mov	DWORD PTR $T225591[esp+16], eax
	mov	eax, DWORD PTR _guidICvUnknown+12
	push	ecx
	lea	edx, DWORD PTR _guidInterface$[esp+16]
	push	edx
	mov	DWORD PTR $T225591[esp+36], eax
	call	_IsEqualGUID
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@QueryInter
	mov	ecx, DWORD PTR _guidICvScriptSystemUtility1+4
	mov	edx, DWORD PTR _guidICvScriptSystemUtility1+8
	mov	eax, DWORD PTR _guidICvScriptSystemUtility1
	mov	DWORD PTR $T225593[esp+20], ecx
	lea	ecx, DWORD PTR $T225593[esp+16]
	mov	DWORD PTR $T225593[esp+24], edx
	mov	DWORD PTR $T225593[esp+16], eax
	mov	eax, DWORD PTR _guidICvScriptSystemUtility1+12
	push	ecx
	lea	edx, DWORD PTR _guidInterface$[esp+16]
	push	edx
	mov	DWORD PTR $T225593[esp+36], eax
	call	_IsEqualGUID
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@QueryInter

; 41   : 	}
; 42   : 
; 43   : 	return NULL;
; 44   : }

	add	esp, 16					; 00000010H
	ret	20					; 00000014H
$LN1@QueryInter:

; 39   : 	{
; 40   : 		return this;

	mov	eax, DWORD PTR _this$[esp+12]

; 41   : 	}
; 42   : 
; 43   : 	return NULL;
; 44   : }

	add	esp, 16					; 00000010H
	ret	20					; 00000014H
?QueryInterface@CvDllScriptSystemUtility@@UAGPAXU_GUID@@@Z ENDP ; CvDllScriptSystemUtility::QueryInterface
_TEXT	ENDS
EXTRN	?GetInstance@CvDllCity@@QAEPAVCvCity@@XZ:PROC	; CvDllCity::GetInstance
; Function compile flags: /Ogtpy
;	COMDAT ?PushCvCityInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvCity1@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_L$ = 12						; size = 4
_pkCity$ = 16						; size = 4
?PushCvCityInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvCity1@@@Z PROC ; CvDllScriptSystemUtility::PushCvCityInstance, COMDAT

; 67   : {

	push	esi

; 68   : 	if(NULL != L && NULL != pkCity)

	mov	esi, DWORD PTR _L$[esp]
	test	esi, esi
	je	SHORT $LN2@PushCvCity
	mov	ecx, DWORD PTR _pkCity$[esp]
	test	ecx, ecx
	je	SHORT $LN2@PushCvCity

; 69   : 	{
; 70   : 		CvDllCity* pkDllCity = static_cast<CvDllCity*>(pkCity);
; 71   : 		CvLuaCity::Push(L, pkDllCity->GetInstance());

	call	?GetInstance@CvDllCity@@QAEPAVCvCity@@XZ ; CvDllCity::GetInstance
	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8
	pop	esi

; 76   : 	}
; 77   : }

	ret	12					; 0000000cH
$LN2@PushCvCity:

; 72   : 	}
; 73   : 	else
; 74   : 	{
; 75   : 		lua_pushnil(L);

	push	esi
	call	_lua_pushnil
	add	esp, 4
	pop	esi

; 76   : 	}
; 77   : }

	ret	12					; 0000000cH
?PushCvCityInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvCity1@@@Z ENDP ; CvDllScriptSystemUtility::PushCvCityInstance
_TEXT	ENDS
EXTRN	??3CvDllCity@@SAXPAX@Z:PROC			; CvDllCity::operator delete
EXTRN	??0CvDllCity@@QAE@PAVCvCity@@@Z:PROC		; CvDllCity::CvDllCity
EXTRN	??2CvDllCity@@SAPAXI@Z:PROC			; CvDllCity::operator new
EXTRN	___CxxFrameHandler3:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z$0
__ehfuncinfo$?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_L$ = 12						; size = 4
_index$ = 16						; size = 4
_bErrorOnFail$ = 20					; size = 1
$T225616 = 20						; size = 4
?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z PROC ; CvDllScriptSystemUtility::GetCvCityInstance, COMDAT

; 80   : {

	mov	eax, DWORD PTR fs:0

; 81   : 	CvCity* pkCity = CvLuaCity::GetInstance(L, index, bErrorOnFail);

	mov	ecx, DWORD PTR _index$[esp-4]
	mov	edx, DWORD PTR _L$[esp-4]
	push	-1
	push	__ehhandler$?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	mov	eax, DWORD PTR _bErrorOnFail$[esp+8]
	push	esi
	push	eax
	push	ecx
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	mov	esi, eax
	add	esp, 12					; 0000000cH

; 82   : 	return (NULL != pkCity)? new CvDllCity(pkCity) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetCvCityI
	push	12					; 0000000cH
	call	??2CvDllCity@@SAPAXI@Z			; CvDllCity::operator new
	add	esp, 4
	mov	DWORD PTR $T225616[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetCvCityI
	push	esi
	mov	ecx, eax
	call	??0CvDllCity@@QAE@PAVCvCity@@@Z		; CvDllCity::CvDllCity

; 83   : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	16					; 00000010H
$LN5@GetCvCityI:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z$0:
	mov	eax, DWORD PTR $T225616[ebp-4]
	push	eax
	call	??3CvDllCity@@SAXPAX@Z			; CvDllCity::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z ENDP ; CvDllScriptSystemUtility::GetCvCityInstance
EXTRN	?GetInstance@CvDllDeal@@QAEPAVCvDeal@@XZ:PROC	; CvDllDeal::GetInstance
; Function compile flags: /Ogtpy
;	COMDAT ?PushCvDealInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvDeal1@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_L$ = 12						; size = 4
_pkDeal$ = 16						; size = 4
?PushCvDealInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvDeal1@@@Z PROC ; CvDllScriptSystemUtility::PushCvDealInstance, COMDAT

; 86   : {

	push	esi

; 87   : 	if(NULL != L && NULL != pkDeal)

	mov	esi, DWORD PTR _L$[esp]
	test	esi, esi
	je	SHORT $LN2@PushCvDeal
	mov	ecx, DWORD PTR _pkDeal$[esp]
	test	ecx, ecx
	je	SHORT $LN2@PushCvDeal

; 88   : 	{
; 89   : 		CvDllDeal* pkDllDeal = static_cast<CvDllDeal*>(pkDeal);
; 90   : 		CvLuaDeal::Push(L, pkDllDeal->GetInstance());

	call	?GetInstance@CvDllDeal@@QAEPAVCvDeal@@XZ ; CvDllDeal::GetInstance
	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAXPAUlua_State@@PAVCvDeal@@@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::Push
	add	esp, 8
	pop	esi

; 95   : 	}
; 96   : }

	ret	12					; 0000000cH
$LN2@PushCvDeal:

; 91   : 	}
; 92   : 	else
; 93   : 	{
; 94   : 		lua_pushnil(L);

	push	esi
	call	_lua_pushnil
	add	esp, 4
	pop	esi

; 95   : 	}
; 96   : }

	ret	12					; 0000000cH
?PushCvDealInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvDeal1@@@Z ENDP ; CvDllScriptSystemUtility::PushCvDealInstance
_TEXT	ENDS
EXTRN	??3CvDllDeal@@SAXPAX@Z:PROC			; CvDllDeal::operator delete
EXTRN	??0CvDllDeal@@QAE@PAVCvDeal@@@Z:PROC		; CvDllDeal::CvDllDeal
EXTRN	??2CvDllDeal@@SAPAXI@Z:PROC			; CvDllDeal::operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z$0
__ehfuncinfo$?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_L$ = 12						; size = 4
_index$ = 16						; size = 4
_bErrorOnFail$ = 20					; size = 1
$T225638 = 20						; size = 4
?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z PROC ; CvDllScriptSystemUtility::GetCvDealInstance, COMDAT

; 99   : {

	mov	eax, DWORD PTR fs:0

; 100  : 	CvDeal* pkDeal = CvLuaDeal::GetInstance(L, index, bErrorOnFail);

	mov	ecx, DWORD PTR _index$[esp-4]
	mov	edx, DWORD PTR _L$[esp-4]
	push	-1
	push	__ehhandler$?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	mov	eax, DWORD PTR _bErrorOnFail$[esp+8]
	push	esi
	push	eax
	push	ecx
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	mov	esi, eax
	add	esp, 12					; 0000000cH

; 101  : 	return (NULL != pkDeal)? new CvDllDeal(pkDeal) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetCvDealI
	push	12					; 0000000cH
	call	??2CvDllDeal@@SAPAXI@Z			; CvDllDeal::operator new
	add	esp, 4
	mov	DWORD PTR $T225638[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetCvDealI
	push	esi
	mov	ecx, eax
	call	??0CvDllDeal@@QAE@PAVCvDeal@@@Z		; CvDllDeal::CvDllDeal

; 102  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	16					; 00000010H
$LN5@GetCvDealI:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z$0:
	mov	eax, DWORD PTR $T225638[ebp-4]
	push	eax
	call	??3CvDllDeal@@SAXPAX@Z			; CvDllDeal::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z ENDP ; CvDllScriptSystemUtility::GetCvDealInstance
EXTRN	?GetInstance@CvDllPlot@@QAEPAVCvPlot@@XZ:PROC	; CvDllPlot::GetInstance
; Function compile flags: /Ogtpy
;	COMDAT ?PushCvPlotInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvPlot1@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_L$ = 12						; size = 4
_pkPlot$ = 16						; size = 4
?PushCvPlotInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvPlot1@@@Z PROC ; CvDllScriptSystemUtility::PushCvPlotInstance, COMDAT

; 105  : {

	push	esi

; 106  : 	if(NULL != L && NULL != pkPlot)

	mov	esi, DWORD PTR _L$[esp]
	test	esi, esi
	je	SHORT $LN2@PushCvPlot
	mov	ecx, DWORD PTR _pkPlot$[esp]
	test	ecx, ecx
	je	SHORT $LN2@PushCvPlot

; 107  : 	{
; 108  : 		CvDllPlot* pkDllPlot = static_cast<CvDllPlot*>(pkPlot);
; 109  : 		CvLuaPlot::Push(L, pkDllPlot->GetInstance());

	call	?GetInstance@CvDllPlot@@QAEPAVCvPlot@@XZ ; CvDllPlot::GetInstance
	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8
	pop	esi

; 114  : 	}
; 115  : }

	ret	12					; 0000000cH
$LN2@PushCvPlot:

; 110  : 	}
; 111  : 	else
; 112  : 	{
; 113  : 		lua_pushnil(L);

	push	esi
	call	_lua_pushnil
	add	esp, 4
	pop	esi

; 114  : 	}
; 115  : }

	ret	12					; 0000000cH
?PushCvPlotInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvPlot1@@@Z ENDP ; CvDllScriptSystemUtility::PushCvPlotInstance
_TEXT	ENDS
EXTRN	??3CvDllPlot@@SAXPAX@Z:PROC			; CvDllPlot::operator delete
EXTRN	??0CvDllPlot@@QAE@PAVCvPlot@@@Z:PROC		; CvDllPlot::CvDllPlot
EXTRN	??2CvDllPlot@@SAPAXI@Z:PROC			; CvDllPlot::operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z$0
__ehfuncinfo$?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_L$ = 12						; size = 4
_index$ = 16						; size = 4
_bErrorOnFail$ = 20					; size = 1
$T225657 = 20						; size = 4
?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z PROC ; CvDllScriptSystemUtility::GetCvPlotInstance, COMDAT

; 118  : {

	mov	eax, DWORD PTR fs:0

; 119  : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, index, bErrorOnFail);

	mov	ecx, DWORD PTR _index$[esp-4]
	mov	edx, DWORD PTR _L$[esp-4]
	push	-1
	push	__ehhandler$?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	mov	eax, DWORD PTR _bErrorOnFail$[esp+8]
	push	esi
	push	eax
	push	ecx
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
	mov	esi, eax
	add	esp, 12					; 0000000cH

; 120  : 	return (NULL != pkPlot)? new CvDllPlot(pkPlot) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetCvPlotI
	push	12					; 0000000cH
	call	??2CvDllPlot@@SAPAXI@Z			; CvDllPlot::operator new
	add	esp, 4
	mov	DWORD PTR $T225657[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetCvPlotI
	push	esi
	mov	ecx, eax
	call	??0CvDllPlot@@QAE@PAVCvPlot@@@Z		; CvDllPlot::CvDllPlot

; 121  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	16					; 00000010H
$LN5@GetCvPlotI:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z$0:
	mov	eax, DWORD PTR $T225657[ebp-4]
	push	eax
	call	??3CvDllPlot@@SAXPAX@Z			; CvDllPlot::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z ENDP ; CvDllScriptSystemUtility::GetCvPlotInstance
EXTRN	?GetInstance@CvDllUnit@@QAEPAVCvUnit@@XZ:PROC	; CvDllUnit::GetInstance
; Function compile flags: /Ogtpy
;	COMDAT ?PushCvUnitInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvUnit1@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_L$ = 12						; size = 4
_pkUnit$ = 16						; size = 4
?PushCvUnitInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvUnit1@@@Z PROC ; CvDllScriptSystemUtility::PushCvUnitInstance, COMDAT

; 124  : {

	push	esi

; 125  : 	if(NULL != L && NULL != pkUnit)

	mov	esi, DWORD PTR _L$[esp]
	test	esi, esi
	je	SHORT $LN2@PushCvUnit
	mov	ecx, DWORD PTR _pkUnit$[esp]
	test	ecx, ecx
	je	SHORT $LN2@PushCvUnit

; 126  : 	{
; 127  : 		CvDllUnit* pkDllUnit = static_cast<CvDllUnit*>(pkUnit);
; 128  : 		CvLuaUnit::Push(L, pkDllUnit->GetInstance());

	call	?GetInstance@CvDllUnit@@QAEPAVCvUnit@@XZ ; CvDllUnit::GetInstance
	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
	add	esp, 8
	pop	esi

; 133  : 	}
; 134  : }

	ret	12					; 0000000cH
$LN2@PushCvUnit:

; 129  : 	}
; 130  : 	else
; 131  : 	{
; 132  : 		lua_pushnil(L);

	push	esi
	call	_lua_pushnil
	add	esp, 4
	pop	esi

; 133  : 	}
; 134  : }

	ret	12					; 0000000cH
?PushCvUnitInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvUnit1@@@Z ENDP ; CvDllScriptSystemUtility::PushCvUnitInstance
_TEXT	ENDS
EXTRN	??3CvDllUnit@@SAXPAX@Z:PROC			; CvDllUnit::operator delete
EXTRN	??0CvDllUnit@@QAE@PAVCvUnit@@@Z:PROC		; CvDllUnit::CvDllUnit
EXTRN	??2CvDllUnit@@SAPAXI@Z:PROC			; CvDllUnit::operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z$0
__ehfuncinfo$?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_L$ = 12						; size = 4
_index$ = 16						; size = 4
_bErrorOnFail$ = 20					; size = 1
$T225676 = 20						; size = 4
?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z PROC ; CvDllScriptSystemUtility::GetCvUnitInstance, COMDAT

; 137  : {

	mov	eax, DWORD PTR fs:0

; 138  : 	CvUnit* pkUnit = CvLuaUnit::GetInstance(L, index, bErrorOnFail);

	mov	ecx, DWORD PTR _index$[esp-4]
	mov	edx, DWORD PTR _L$[esp-4]
	push	-1
	push	__ehhandler$?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	mov	eax, DWORD PTR _bErrorOnFail$[esp+8]
	push	esi
	push	eax
	push	ecx
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
	mov	esi, eax
	add	esp, 12					; 0000000cH

; 139  : 	return (NULL != pkUnit)? new CvDllUnit(pkUnit) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetCvUnitI
	push	12					; 0000000cH
	call	??2CvDllUnit@@SAPAXI@Z			; CvDllUnit::operator new
	add	esp, 4
	mov	DWORD PTR $T225676[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetCvUnitI
	push	esi
	mov	ecx, eax
	call	??0CvDllUnit@@QAE@PAVCvUnit@@@Z		; CvDllUnit::CvDllUnit

; 140  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	16					; 00000010H
$LN5@GetCvUnitI:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z$0:
	mov	eax, DWORD PTR $T225676[ebp-4]
	push	eax
	call	??3CvDllUnit@@SAXPAX@Z			; CvDllUnit::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z ENDP ; CvDllScriptSystemUtility::GetCvUnitInstance
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?getPlotState@CvReplayInfo@@QBE_NIIIAAUPlotState@1@@Z:PROC ; CvReplayInfo::getPlotState
EXTRN	?getPlot@CvReplayMessage@@QBE_NIAAH0@Z:PROC	; CvReplayMessage::getPlot
EXTRN	?getNumPlots@CvReplayMessage@@QBEIXZ:PROC	; CvReplayMessage::getNumPlots
EXTRN	?getText@CvReplayMessage@@QBEABVCvString@@XZ:PROC ; CvReplayMessage::getText
EXTRN	?getPlayer@CvReplayMessage@@QBE?AW4PlayerTypes@@XZ:PROC ; CvReplayMessage::getPlayer
EXTRN	?getType@CvReplayMessage@@QBE?AW4ReplayMessageTypes@@XZ:PROC ; CvReplayMessage::getType
EXTRN	?getTurn@CvReplayMessage@@QBEHXZ:PROC		; CvReplayMessage::getTurn
EXTRN	?getReplayMessage@CvReplayInfo@@QBEPBVCvReplayMessage@@I@Z:PROC ; CvReplayInfo::getReplayMessage
EXTRN	?getNumReplayMessages@CvReplayInfo@@QBEIXZ:PROC	; CvReplayInfo::getNumReplayMessages
EXTRN	_lua_rawseti:PROC
EXTRN	?getPlayerDataSetName@CvReplayInfo@@QBEPBDI@Z:PROC ; CvReplayInfo::getPlayerDataSetName
EXTRN	?getPlayerDataSetValue@CvReplayInfo@@QBE_NIIIAAH@Z:PROC ; CvReplayInfo::getPlayerDataSetValue
EXTRN	?getPlayerCivAdjective@CvReplayInfo@@QBEPBDH@Z:PROC ; CvReplayInfo::getPlayerCivAdjective
EXTRN	?getPlayerShortCivDescription@CvReplayInfo@@QBEPBDH@Z:PROC ; CvReplayInfo::getPlayerShortCivDescription
EXTRN	?getPlayerCivDescription@CvReplayInfo@@QBEPBDH@Z:PROC ; CvReplayInfo::getPlayerCivDescription
EXTRN	?getPlayerLeaderName@CvReplayInfo@@QBEPBDH@Z:PROC ; CvReplayInfo::getPlayerLeaderName
EXTRN	?getPlayerDifficulty@CvReplayInfo@@QBE?AW4HandicapTypes@@H@Z:PROC ; CvReplayInfo::getPlayerDifficulty
EXTRN	?getPlayerColor@CvReplayInfo@@QBE?AW4PlayerColorTypes@@H@Z:PROC ; CvReplayInfo::getPlayerColor
EXTRN	?getPlayerLeader@CvReplayInfo@@QBE?AW4LeaderHeadTypes@@H@Z:PROC ; CvReplayInfo::getPlayerLeader
EXTRN	?getPlayerCivilization@CvReplayInfo@@QBE?AW4CivilizationTypes@@H@Z:PROC ; CvReplayInfo::getPlayerCivilization
EXTRN	?getNumPlayerDataSets@CvReplayInfo@@QBEIXZ:PROC	; CvReplayInfo::getNumPlayerDataSets
EXTRN	?getNumPlayers@CvReplayInfo@@QBEHXZ:PROC	; CvReplayInfo::getNumPlayers
EXTRN	?getMapWidth@CvReplayInfo@@QBEHXZ:PROC		; CvReplayInfo::getMapWidth
EXTRN	?getMapHeight@CvReplayInfo@@QBEHXZ:PROC		; CvReplayInfo::getMapHeight
EXTRN	?getNormalizedScore@CvReplayInfo@@QBEHXZ:PROC	; CvReplayInfo::getNormalizedScore
EXTRN	?getCalendar@CvReplayInfo@@QBE?AW4CalendarTypes@@XZ:PROC ; CvReplayInfo::getCalendar
EXTRN	?getFinalDate@CvReplayInfo@@QBEPBDXZ:PROC	; CvReplayInfo::getFinalDate
EXTRN	?getStartYear@CvReplayInfo@@QBEHXZ:PROC		; CvReplayInfo::getStartYear
EXTRN	?getFinalTurn@CvReplayInfo@@QBEHXZ:PROC		; CvReplayInfo::getFinalTurn
EXTRN	?getInitialTurn@CvReplayInfo@@QBEHXZ:PROC	; CvReplayInfo::getInitialTurn
EXTRN	?getGameType@CvReplayInfo@@QBE?AW4GameTypes@@XZ:PROC ; CvReplayInfo::getGameType
EXTRN	?getVictoryType@CvReplayInfo@@QBE?AW4VictoryTypes@@XZ:PROC ; CvReplayInfo::getVictoryType
EXTRN	?getGameSpeed@CvReplayInfo@@QBE?AW4GameSpeedTypes@@XZ:PROC ; CvReplayInfo::getGameSpeed
EXTRN	?getEra@CvReplayInfo@@QBE?AW4EraTypes@@XZ:PROC	; CvReplayInfo::getEra
EXTRN	?getSeaLevel@CvReplayInfo@@QBE?AW4SeaLevelTypes@@XZ:PROC ; CvReplayInfo::getSeaLevel
EXTRN	?getClimate@CvReplayInfo@@QBE?AW4ClimateTypes@@XZ:PROC ; CvReplayInfo::getClimate
EXTRN	?getWorldSize@CvReplayInfo@@QBE?AW4WorldSizeTypes@@XZ:PROC ; CvReplayInfo::getWorldSize
EXTRN	_lua_pushinteger:PROC
EXTRN	?getActivePlayer@CvReplayInfo@@QBEHXZ:PROC	; CvReplayInfo::getActivePlayer
EXTRN	?getMapScriptName@CvReplayInfo@@QBEABVCvString@@XZ:PROC ; CvReplayInfo::getMapScriptName
EXTRN	?read@CvReplayInfo@@QAE_NAAVFDataStream@@@Z:PROC ; CvReplayInfo::read
EXTRN	??0CvReplayInfo@@QAE@XZ:PROC			; CvReplayInfo::CvReplayInfo
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT xdata$x
; File c:\users\enormousapplepie\desktop\lekmod dll versions\v31\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z$0
__ehfuncinfo$?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\lekmod dll versions\v31\lekmod_dll\cvgamecoredll_expansion2\cvdllscriptsystemutility.cpp
xdata$x	ENDS
;	COMDAT ?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z
_TEXT	SEGMENT
_iValue$225028 = -48					; size = 4
_numReplayMessages$225032 = -44				; size = 4
_uiNumDataSets$225005 = -44				; size = 4
_uiHeight$225054 = -40					; size = 4
_numPlots$225043 = -40					; size = 4
_iFinalTurn$225019 = -40				; size = 4
_uiWidth$225055 = -36					; size = 4
_iPlotY$225049 = -36					; size = 4
_numPlayers$225004 = -36				; size = 4
_idx$225056 = -32					; size = 4
_t$224986 = -32						; size = 4
$T225692 = -32						; size = 4
_plotState$225069 = -28					; size = 16
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_uiY$225057 = 12					; size = 4
_iPlotX$225048 = 12					; size = 4
_iTurn$225020 = 12					; size = 4
_L$ = 12						; size = 4
_uiX$225061 = 16					; size = 4
_i$225033 = 16						; size = 4
_uiDataSet$225024 = 16					; size = 4
_stream$ = 16						; size = 4
?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z PROC ; CvDllScriptSystemUtility::PushReplayFromStream, COMDAT

; 143  : {

	push	-1
	push	__ehhandler$?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 36					; 00000024H
	push	ebx
	push	edi

; 144  : 	CvReplayInfo* pkReplay = FNEW(CvReplayInfo(), c_eMPoolTypeGame, 0);

	push	232					; 000000e8H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T225692[esp+56], eax
	xor	ebx, ebx
	mov	DWORD PTR __$EHRec$[esp+64], ebx
	cmp	eax, ebx
	je	SHORT $LN32@PushReplay
	mov	ecx, eax
	call	??0CvReplayInfo@@QAE@XZ			; CvReplayInfo::CvReplayInfo
	mov	edi, eax
	jmp	SHORT $LN33@PushReplay
$LN32@PushReplay:
	xor	edi, edi
$LN33@PushReplay:
	mov	DWORD PTR __$EHRec$[esp+64], -1

; 145  : #ifndef AUI_WARNING_FIXES
; 146  : 	if(pkReplay)

	cmp	edi, ebx
	je	$LN38@PushReplay

; 147  : #endif
; 148  : 	{
; 149  : 		if(!pkReplay->read(stream))

	mov	eax, DWORD PTR _stream$[esp+52]
	push	eax
	mov	ecx, edi
	call	?read@CvReplayInfo@@QAE_NAAVFDataStream@@@Z ; CvReplayInfo::read
	test	al, al
	jne	SHORT $LN28@PushReplay

; 150  : 		{
; 151  : 			delete pkReplay;

	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, edi
	call	eax
	pop	edi
	pop	ebx

; 359  : 	}
; 360  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+48]
	mov	DWORD PTR fs:0, ecx
	add	esp, 48					; 00000030H
	ret	12					; 0000000cH
$LN28@PushReplay:
	push	ebp
	push	esi

; 152  : 			pkReplay = NULL;
; 153  : 		}
; 154  : 	}
; 155  : 
; 156  : 	if(pkReplay)
; 157  : 	{
; 158  : 		lua_createtable(L, 0, 0);

	mov	esi, DWORD PTR _L$[esp+60]
	push	ebx
	push	ebx
	push	esi
	call	_lua_createtable

; 159  : 		const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop
	mov	ebp, eax
	add	esp, 16					; 00000010H

; 160  : 
; 161  : 		lua_pushstring(L, pkReplay->getMapScriptName());

	mov	ecx, edi
	mov	DWORD PTR _t$224986[esp+64], ebp
	call	?getMapScriptName@CvReplayInfo@@QBEABVCvString@@XZ ; CvReplayInfo::getMapScriptName
	mov	ecx, eax
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring

; 162  : 		lua_setfield(L, t, "MapScriptName");

	push	OFFSET $SG224987
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 163  : 
; 164  : 		lua_pushinteger(L, pkReplay->getActivePlayer());

	mov	ecx, edi
	call	?getActivePlayer@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getActivePlayer
	push	eax
	push	esi
	call	_lua_pushinteger

; 165  : 		lua_setfield(L, t, "ActivePlayer");

	push	OFFSET $SG224988
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 166  : 
; 167  : 		lua_pushinteger(L, pkReplay->getWorldSize());

	mov	ecx, edi
	call	?getWorldSize@CvReplayInfo@@QBE?AW4WorldSizeTypes@@XZ ; CvReplayInfo::getWorldSize
	push	eax
	push	esi
	call	_lua_pushinteger

; 168  : 		lua_setfield(L, t, "WorldSize");

	push	OFFSET $SG224989
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 169  : 
; 170  : 		lua_pushinteger(L, pkReplay->getClimate());

	mov	ecx, edi
	call	?getClimate@CvReplayInfo@@QBE?AW4ClimateTypes@@XZ ; CvReplayInfo::getClimate
	push	eax
	push	esi
	call	_lua_pushinteger

; 171  : 		lua_setfield(L, t, "Climate");

	push	OFFSET $SG224990
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 172  : 
; 173  : 		lua_pushinteger(L, pkReplay->getSeaLevel());

	mov	ecx, edi
	call	?getSeaLevel@CvReplayInfo@@QBE?AW4SeaLevelTypes@@XZ ; CvReplayInfo::getSeaLevel
	push	eax
	push	esi
	call	_lua_pushinteger

; 174  : 		lua_setfield(L, t, "SeaLevel");

	push	OFFSET $SG224991
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 175  : 
; 176  : 		lua_pushinteger(L, pkReplay->getEra());

	mov	ecx, edi
	call	?getEra@CvReplayInfo@@QBE?AW4EraTypes@@XZ ; CvReplayInfo::getEra
	push	eax
	push	esi
	call	_lua_pushinteger

; 177  : 		lua_setfield(L, t, "Era");

	push	OFFSET $SG224992
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 178  : 
; 179  : 		lua_pushinteger(L, pkReplay->getGameSpeed());

	mov	ecx, edi
	call	?getGameSpeed@CvReplayInfo@@QBE?AW4GameSpeedTypes@@XZ ; CvReplayInfo::getGameSpeed
	push	eax
	push	esi
	call	_lua_pushinteger

; 180  : 		lua_setfield(L, t, "GameSpeed");

	push	OFFSET $SG224993
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 181  : 
; 182  : 		lua_pushinteger(L, pkReplay->getVictoryType());

	mov	ecx, edi
	call	?getVictoryType@CvReplayInfo@@QBE?AW4VictoryTypes@@XZ ; CvReplayInfo::getVictoryType
	push	eax
	push	esi
	call	_lua_pushinteger

; 183  : 		lua_setfield(L, t, "VictoryType");

	push	OFFSET $SG224994
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 184  : 
; 185  : 		lua_pushinteger(L, pkReplay->getGameType());

	mov	ecx, edi
	call	?getGameType@CvReplayInfo@@QBE?AW4GameTypes@@XZ ; CvReplayInfo::getGameType
	push	eax
	push	esi
	call	_lua_pushinteger

; 186  : 		lua_setfield(L, t, "GameType");

	push	OFFSET $SG224995
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 187  : 
; 188  : 		lua_pushinteger(L, pkReplay->getInitialTurn());

	mov	ecx, edi
	call	?getInitialTurn@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getInitialTurn
	push	eax
	push	esi
	call	_lua_pushinteger

; 189  : 		lua_setfield(L, t, "InitialTurn");

	push	OFFSET $SG224996
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 190  : 
; 191  : 		lua_pushinteger(L, pkReplay->getFinalTurn());

	mov	ecx, edi
	call	?getFinalTurn@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getFinalTurn
	push	eax
	push	esi
	call	_lua_pushinteger

; 192  : 		lua_setfield(L, t, "FinalTurn");

	push	OFFSET $SG224997
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 193  : 
; 194  : 		lua_pushinteger(L, pkReplay->getStartYear());

	mov	ecx, edi
	call	?getStartYear@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getStartYear
	push	eax
	push	esi
	call	_lua_pushinteger

; 195  : 		lua_setfield(L, t, "StartYear");

	push	OFFSET $SG224998
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 196  : 
; 197  : 		lua_pushstring(L, pkReplay->getFinalDate());

	mov	ecx, edi
	call	?getFinalDate@CvReplayInfo@@QBEPBDXZ	; CvReplayInfo::getFinalDate
	push	eax
	push	esi
	call	_lua_pushstring

; 198  : 		lua_setfield(L, t, "FinalDate");

	push	OFFSET $SG224999
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 199  : 
; 200  : 		lua_pushinteger(L, pkReplay->getCalendar());

	mov	ecx, edi
	call	?getCalendar@CvReplayInfo@@QBE?AW4CalendarTypes@@XZ ; CvReplayInfo::getCalendar
	push	eax
	push	esi
	call	_lua_pushinteger

; 201  : 		lua_setfield(L, t, "Calendar");

	push	OFFSET $SG225000
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 202  : 
; 203  : 		lua_pushinteger(L, pkReplay->getNormalizedScore());

	mov	ecx, edi
	call	?getNormalizedScore@CvReplayInfo@@QBEHXZ ; CvReplayInfo::getNormalizedScore
	push	eax
	push	esi
	call	_lua_pushinteger

; 204  : 		lua_setfield(L, t, "NormalizedScore");

	push	OFFSET $SG225001
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 205  : 
; 206  : 		lua_pushinteger(L, pkReplay->getMapHeight());

	mov	ecx, edi
	call	?getMapHeight@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getMapHeight
	push	eax
	push	esi
	call	_lua_pushinteger

; 207  : 		lua_setfield(L, t, "MapHeight");

	push	OFFSET $SG225002
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 208  : 
; 209  : 		lua_pushinteger(L, pkReplay->getMapWidth());

	mov	ecx, edi
	call	?getMapWidth@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getMapWidth
	push	eax
	push	esi
	call	_lua_pushinteger

; 210  : 		lua_setfield(L, t, "MapWidth");

	push	OFFSET $SG225003
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 211  : 
; 212  : 		const int numPlayers = pkReplay->getNumPlayers();

	mov	ecx, edi
	call	?getNumPlayers@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getNumPlayers

; 213  : 		lua_createtable(L, numPlayers, 0);

	push	ebx
	push	eax
	push	esi
	mov	DWORD PTR _numPlayers$225004[esp+76], eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 214  : 
; 215  : 		const unsigned int uiNumDataSets = pkReplay->getNumPlayerDataSets();

	mov	ecx, edi
	call	?getNumPlayerDataSets@CvReplayInfo@@QBEIXZ ; CvReplayInfo::getNumPlayerDataSets

; 216  : 
; 217  : 		for(int iPlayer = 0; iPlayer < numPlayers; iPlayer++)

	cmp	DWORD PTR _numPlayers$225004[esp+64], ebx
	mov	DWORD PTR _uiNumDataSets$225005[esp+64], eax
	jle	$LN24@PushReplay
	npad	4
$LL61@PushReplay:

; 218  : 		{
; 219  : 			lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 220  : 			const int playerIdx = lua_gettop(L);

	push	esi
	call	_lua_gettop
	add	esp, 16					; 00000010H

; 221  : 
; 222  : 			lua_pushinteger(L, pkReplay->getPlayerCivilization(iPlayer));

	push	ebx
	mov	ecx, edi
	mov	ebp, eax
	call	?getPlayerCivilization@CvReplayInfo@@QBE?AW4CivilizationTypes@@H@Z ; CvReplayInfo::getPlayerCivilization
	push	eax
	push	esi
	call	_lua_pushinteger

; 223  : 			lua_setfield(L, playerIdx, "Civilization");

	push	OFFSET $SG225011
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 224  : 
; 225  : 			lua_pushinteger(L, pkReplay->getPlayerLeader(iPlayer));

	push	ebx
	mov	ecx, edi
	call	?getPlayerLeader@CvReplayInfo@@QBE?AW4LeaderHeadTypes@@H@Z ; CvReplayInfo::getPlayerLeader
	push	eax
	push	esi
	call	_lua_pushinteger

; 226  : 			lua_setfield(L, playerIdx, "Leader");

	push	OFFSET $SG225012
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 227  : 
; 228  : 			lua_pushinteger(L, pkReplay->getPlayerColor(iPlayer));

	push	ebx
	mov	ecx, edi
	call	?getPlayerColor@CvReplayInfo@@QBE?AW4PlayerColorTypes@@H@Z ; CvReplayInfo::getPlayerColor
	push	eax
	push	esi
	call	_lua_pushinteger

; 229  : 			lua_setfield(L, playerIdx, "PlayerColor");

	push	OFFSET $SG225013
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 230  : 
; 231  : 			lua_pushinteger(L, pkReplay->getPlayerDifficulty(iPlayer));

	push	ebx
	mov	ecx, edi
	call	?getPlayerDifficulty@CvReplayInfo@@QBE?AW4HandicapTypes@@H@Z ; CvReplayInfo::getPlayerDifficulty
	push	eax
	push	esi
	call	_lua_pushinteger

; 232  : 			lua_setfield(L, playerIdx, "Difficulty");

	push	OFFSET $SG225014
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 233  : 
; 234  : 			lua_pushstring(L , pkReplay->getPlayerLeaderName(iPlayer));

	push	ebx
	mov	ecx, edi
	call	?getPlayerLeaderName@CvReplayInfo@@QBEPBDH@Z ; CvReplayInfo::getPlayerLeaderName
	push	eax
	push	esi
	call	_lua_pushstring

; 235  : 			lua_setfield(L, playerIdx, "LeaderName");

	push	OFFSET $SG225015
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 236  : 
; 237  : 			lua_pushstring(L, pkReplay->getPlayerCivDescription(iPlayer));

	push	ebx
	mov	ecx, edi
	call	?getPlayerCivDescription@CvReplayInfo@@QBEPBDH@Z ; CvReplayInfo::getPlayerCivDescription
	push	eax
	push	esi
	call	_lua_pushstring

; 238  : 			lua_setfield(L, playerIdx, "CivDescription");

	push	OFFSET $SG225016
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 239  : 
; 240  : 			lua_pushstring(L, pkReplay->getPlayerShortCivDescription(iPlayer));

	push	ebx
	mov	ecx, edi
	call	?getPlayerShortCivDescription@CvReplayInfo@@QBEPBDH@Z ; CvReplayInfo::getPlayerShortCivDescription
	push	eax
	push	esi
	call	_lua_pushstring

; 241  : 			lua_setfield(L, playerIdx, "CivShortDescription");

	push	OFFSET $SG225017
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 242  : 
; 243  : 			lua_pushstring(L, pkReplay->getPlayerCivAdjective(iPlayer));

	push	ebx
	mov	ecx, edi
	call	?getPlayerCivAdjective@CvReplayInfo@@QBEPBDH@Z ; CvReplayInfo::getPlayerCivAdjective
	push	eax
	push	esi
	call	_lua_pushstring

; 244  : 			lua_setfield(L, playerIdx, "CivAdjective");

	push	OFFSET $SG225018
	push	ebp
	push	esi
	call	_lua_setfield

; 245  : 
; 246  : 			lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable
	add	esp, 32					; 00000020H

; 247  : 			int iFinalTurn = pkReplay->getFinalTurn();

	mov	ecx, edi
	call	?getFinalTurn@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getFinalTurn

; 248  : 
; 249  : 			for(int iTurn = pkReplay->getInitialTurn(); iTurn <= iFinalTurn; ++iTurn)

	mov	ecx, edi
	mov	DWORD PTR _iFinalTurn$225019[esp+64], eax
	call	?getInitialTurn@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getInitialTurn
	cmp	eax, DWORD PTR _iFinalTurn$225019[esp+64]
	mov	DWORD PTR _iTurn$225020[esp+60], eax
	jg	$LN21@PushReplay
	npad	1
$LL23@PushReplay:

; 250  : 			{
; 251  : 				lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 252  : 
; 253  : 				for(unsigned int uiDataSet = 0; uiDataSet < uiNumDataSets; ++uiDataSet)

	cmp	DWORD PTR _uiNumDataSets$225005[esp+64], 0
	mov	DWORD PTR _uiDataSet$225024[esp+60], 0
	jbe	SHORT $LN18@PushReplay
	npad	4
$LL62@PushReplay:

; 254  : 				{
; 255  : 					int iValue = 0;
; 256  : 					if(pkReplay->getPlayerDataSetValue(iPlayer, uiDataSet, iTurn, iValue))

	mov	edx, DWORD PTR _iTurn$225020[esp+60]
	mov	eax, DWORD PTR _uiDataSet$225024[esp+60]
	lea	ecx, DWORD PTR _iValue$225028[esp+64]
	push	ecx
	push	edx
	push	eax
	push	ebx
	mov	ecx, edi
	mov	DWORD PTR _iValue$225028[esp+80], 0
	call	?getPlayerDataSetValue@CvReplayInfo@@QBE_NIIIAAH@Z ; CvReplayInfo::getPlayerDataSetValue
	test	al, al
	je	SHORT $LN19@PushReplay

; 257  : 					{
; 258  : 						lua_pushinteger(L, iValue);

	mov	ecx, DWORD PTR _iValue$225028[esp+64]
	push	ecx
	push	esi
	call	_lua_pushinteger

; 259  : 						lua_setfield(L, -2, pkReplay->getPlayerDataSetName(uiDataSet));

	mov	edx, DWORD PTR _uiDataSet$225024[esp+68]
	add	esp, 8
	push	edx
	mov	ecx, edi
	call	?getPlayerDataSetName@CvReplayInfo@@QBEPBDI@Z ; CvReplayInfo::getPlayerDataSetName
	push	eax
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 12					; 0000000cH
$LN19@PushReplay:
	mov	eax, DWORD PTR _uiDataSet$225024[esp+60]
	inc	eax
	mov	DWORD PTR _uiDataSet$225024[esp+60], eax
	cmp	eax, DWORD PTR _uiNumDataSets$225005[esp+64]
	jb	SHORT $LL62@PushReplay
$LN18@PushReplay:

; 260  : 					}
; 261  : 				}
; 262  : 
; 263  : 				lua_rawseti(L, -2, iTurn);

	mov	eax, DWORD PTR _iTurn$225020[esp+60]
	push	eax
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	mov	eax, DWORD PTR _iTurn$225020[esp+72]
	inc	eax
	add	esp, 12					; 0000000cH
	cmp	eax, DWORD PTR _iFinalTurn$225019[esp+64]
	mov	DWORD PTR _iTurn$225020[esp+60], eax
	jle	$LL23@PushReplay
$LN21@PushReplay:

; 264  : 			}
; 265  : 			lua_setfield(L, playerIdx, "Scores");

	push	OFFSET $SG225030
	push	ebp
	push	esi
	call	_lua_setfield

; 266  : 
; 267  : 			lua_rawseti(L, -2, iPlayer + 1);	//Adjust iPlayer to be 1-based instead of 0-based.

	inc	ebx
	push	ebx
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	add	esp, 24					; 00000018H
	cmp	ebx, DWORD PTR _numPlayers$225004[esp+64]
	jl	$LL61@PushReplay

; 216  : 
; 217  : 		for(int iPlayer = 0; iPlayer < numPlayers; iPlayer++)

	mov	ebp, DWORD PTR _t$224986[esp+64]
$LN24@PushReplay:

; 268  : 		}
; 269  : 		lua_setfield(L, t, "PlayerInfo");

	push	OFFSET $SG225031
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 270  : 
; 271  : 		const int numReplayMessages = pkReplay->getNumReplayMessages();

	mov	ecx, edi
	call	?getNumReplayMessages@CvReplayInfo@@QBEIXZ ; CvReplayInfo::getNumReplayMessages
	mov	ebx, eax

; 272  : 		lua_createtable(L, numReplayMessages, 0);

	push	0
	push	ebx
	push	esi
	mov	DWORD PTR _numReplayMessages$225032[esp+76], ebx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 273  : 		for(int i = 0; i < numReplayMessages; i++)

	mov	DWORD PTR _i$225033[esp+60], 0
	test	ebx, ebx
	jle	$LN63@PushReplay
	npad	6
$LL64@PushReplay:

; 274  : 		{
; 275  : 			const CvReplayMessage* pkMessage = pkReplay->getReplayMessage(i);

	mov	ecx, DWORD PTR _i$225033[esp+60]
	push	ecx
	mov	ecx, edi
	call	?getReplayMessage@CvReplayInfo@@QBEPBVCvReplayMessage@@I@Z ; CvReplayInfo::getReplayMessage

; 276  : 			lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	mov	ebp, eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 277  : 
; 278  : 			lua_pushinteger(L, pkMessage->getTurn());

	mov	ecx, ebp
	call	?getTurn@CvReplayMessage@@QBEHXZ	; CvReplayMessage::getTurn
	push	eax
	push	esi
	call	_lua_pushinteger

; 279  : 			lua_setfield(L, -2, "Turn");

	push	OFFSET $SG225038
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 280  : 
; 281  : 			lua_pushinteger(L, pkMessage->getType());

	mov	ecx, ebp
	call	?getType@CvReplayMessage@@QBE?AW4ReplayMessageTypes@@XZ ; CvReplayMessage::getType
	push	eax
	push	esi
	call	_lua_pushinteger

; 282  : 			lua_setfield(L, -2, "Type");

	push	OFFSET $SG225039
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 283  : 
; 284  : 			int iPlayer = pkMessage->getPlayer();

	mov	ecx, ebp
	call	?getPlayer@CvReplayMessage@@QBE?AW4PlayerTypes@@XZ ; CvReplayMessage::getPlayer

; 285  : 			lua_pushinteger(L, (iPlayer > -1)? iPlayer + 1 : iPlayer);	//Adjust iPlayer to match the 1-based index scheme.

	cmp	eax, -1
	jle	SHORT $LN36@PushReplay
	inc	eax
$LN36@PushReplay:
	push	eax
	push	esi
	call	_lua_pushinteger

; 286  : 			lua_setfield(L, -2, "Player");

	push	OFFSET $SG225041
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 287  : 
; 288  : 			lua_pushstring(L, pkMessage->getText());

	mov	ecx, ebp
	call	?getText@CvReplayMessage@@QBEABVCvString@@XZ ; CvReplayMessage::getText
	mov	ecx, eax
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring

; 289  : 			lua_setfield(L, -2, "Text");

	push	OFFSET $SG225042
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 290  : 
; 291  : 			const int numPlots = pkMessage->getNumPlots();

	mov	ecx, ebp
	call	?getNumPlots@CvReplayMessage@@QBEIXZ	; CvReplayMessage::getNumPlots

; 292  : 			lua_createtable(L, numPlots, 0);

	push	0
	push	eax
	push	esi
	mov	DWORD PTR _numPlots$225043[esp+76], eax
	call	_lua_createtable

; 293  : 			for(int iPlot = 0; iPlot < numPlots; ++iPlot)

	xor	eax, eax
	add	esp, 12					; 0000000cH
	xor	ebx, ebx
	cmp	DWORD PTR _numPlots$225043[esp+64], eax
	jle	SHORT $LN11@PushReplay
	jmp	SHORT $LN13@PushReplay
$LL65@PushReplay:
	xor	eax, eax
$LN13@PushReplay:

; 294  : 			{
; 295  : 				int iPlotX = 0;
; 296  : 				int iPlotY = 0;
; 297  : 				pkMessage->getPlot(iPlot, iPlotX, iPlotY);

	lea	edx, DWORD PTR _iPlotY$225049[esp+64]
	mov	DWORD PTR _iPlotX$225048[esp+60], eax
	mov	DWORD PTR _iPlotY$225049[esp+64], eax
	push	edx
	lea	eax, DWORD PTR _iPlotX$225048[esp+64]
	push	eax
	push	ebx
	mov	ecx, ebp
	call	?getPlot@CvReplayMessage@@QBE_NIAAH0@Z	; CvReplayMessage::getPlot

; 298  : 
; 299  : 				lua_createtable(L, 0, 2);

	push	2
	push	0
	push	esi
	call	_lua_createtable

; 300  : 				lua_pushinteger(L, iPlotX);

	mov	ecx, DWORD PTR _iPlotX$225048[esp+72]
	push	ecx
	push	esi
	call	_lua_pushinteger

; 301  : 				lua_setfield(L, -2, "X");

	push	OFFSET $SG225050
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 302  : 
; 303  : 				lua_pushinteger(L, iPlotY);

	mov	edx, DWORD PTR _iPlotY$225049[esp+96]
	push	edx
	push	esi
	call	_lua_pushinteger

; 304  : 				lua_setfield(L, -2, "Y");

	push	OFFSET $SG225051
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 305  : 
; 306  : 				lua_rawseti(L, -2, iPlot + 1);

	inc	ebx
	push	ebx
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	add	esp, 64					; 00000040H
	cmp	ebx, DWORD PTR _numPlots$225043[esp+64]
	jl	SHORT $LL65@PushReplay
$LN11@PushReplay:

; 307  : 			}
; 308  : 			lua_setfield(L, -2, "Plots");

	push	OFFSET $SG225052
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 309  : 
; 310  : 			lua_rawseti(L, -2, i);

	mov	ebx, DWORD PTR _i$225033[esp+72]
	push	ebx
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	inc	ebx
	add	esp, 24					; 00000018H
	cmp	ebx, DWORD PTR _numReplayMessages$225032[esp+64]
	mov	DWORD PTR _i$225033[esp+60], ebx
	jl	$LL64@PushReplay

; 273  : 		for(int i = 0; i < numReplayMessages; i++)

	mov	ebp, DWORD PTR _t$224986[esp+64]
$LN63@PushReplay:

; 311  : 		}
; 312  : 		lua_setfield(L, t, "Messages");

	push	OFFSET $SG225053
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 313  : 
; 314  : 		const int uiHeight = pkReplay->getMapHeight();

	mov	ecx, edi
	call	?getMapHeight@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getMapHeight
	mov	ebx, eax

; 315  : 		const int uiWidth = pkReplay->getMapWidth();

	mov	ecx, edi
	mov	DWORD PTR _uiHeight$225054[esp+64], ebx
	call	?getMapWidth@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getMapWidth
	mov	DWORD PTR _uiWidth$225055[esp+64], eax

; 316  : 
; 317  : 		lua_createtable(L, uiHeight * uiWidth, 0);

	imul	eax, ebx
	push	0
	push	eax
	push	esi
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 318  : 		int idx = 1;

	mov	DWORD PTR _idx$225056[esp+64], 1

; 319  : 		for(int uiY = 0; uiY < uiHeight; ++uiY)

	mov	DWORD PTR _uiY$225057[esp+60], 0
	test	ebx, ebx
	jle	$LN8@PushReplay
	npad	5
$LL67@PushReplay:

; 320  : 		{
; 321  : 			for(int uiX = 0; uiX < uiWidth; ++uiX)

	cmp	DWORD PTR _uiWidth$225055[esp+64], 0
	mov	DWORD PTR _uiX$225061[esp+60], 0
	jle	$LN9@PushReplay
$LL66@PushReplay:

; 322  : 			{
; 323  : 				lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 324  : 				for(int i = pkReplay->getInitialTurn(); i <= pkReplay->getFinalTurn(); ++i)

	mov	ecx, edi
	call	?getInitialTurn@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getInitialTurn
	mov	ecx, edi
	mov	ebx, eax
	call	?getFinalTurn@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getFinalTurn
	cmp	ebx, eax
	jg	$LN2@PushReplay
	npad	8
$LL4@PushReplay:

; 325  : 				{
; 326  : 					CvReplayInfo::PlotState plotState;
; 327  : 					if(pkReplay->getPlotState(uiX, uiY, i, plotState))

	mov	ecx, DWORD PTR _uiY$225057[esp+60]
	mov	edx, DWORD PTR _uiX$225061[esp+60]
	lea	eax, DWORD PTR _plotState$225069[esp+64]
	push	eax
	push	ebx
	push	ecx
	push	edx
	mov	ecx, edi
	call	?getPlotState@CvReplayInfo@@QBE_NIIIAAUPlotState@1@@Z ; CvReplayInfo::getPlotState
	test	al, al
	je	$LN3@PushReplay

; 328  : 					{
; 329  : 						lua_createtable(L, 6, 0);

	push	0
	push	6
	push	esi
	call	_lua_createtable

; 330  : 
; 331  : 						lua_pushinteger(L, plotState.m_ePlotType);

	mov	eax, DWORD PTR _plotState$225069[esp+76]
	push	eax
	push	esi
	call	_lua_pushinteger

; 332  : 						lua_setfield(L, -2, "PlotType");

	push	OFFSET $SG225071
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 333  : 
; 334  : 						lua_pushinteger(L, plotState.m_eTerrain);

	mov	ecx, DWORD PTR _plotState$225069[esp+100]
	push	ecx
	push	esi
	call	_lua_pushinteger

; 335  : 						lua_setfield(L, -2, "TerrainType");

	push	OFFSET $SG225072
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 336  : 
; 337  : 						lua_pushinteger(L, plotState.m_eFeature);

	mov	edx, DWORD PTR _plotState$225069[esp+124]
	push	edx
	push	esi
	call	_lua_pushinteger

; 338  : 						lua_setfield(L, -2, "FeatureType");

	push	OFFSET $SG225073
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 339  : 
; 340  : 						lua_pushinteger(L, plotState.m_bNEOfRiver);

	movzx	eax, BYTE PTR _plotState$225069[esp+148]
	add	esp, 72					; 00000048H
	push	eax
	push	esi
	call	_lua_pushinteger

; 341  : 						lua_setfield(L, -2, "NEOfRiver");

	push	OFFSET $SG225074
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 342  : 
; 343  : 						lua_pushinteger(L, plotState.m_bWOfRiver);

	movzx	ecx, BYTE PTR _plotState$225069[esp+97]
	push	ecx
	push	esi
	call	_lua_pushinteger

; 344  : 						lua_setfield(L, -2, "WOfRiver");

	push	OFFSET $SG225075
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 345  : 
; 346  : 						lua_pushinteger(L, plotState.m_bNWOfRiver);

	movzx	edx, BYTE PTR _plotState$225069[esp+118]
	push	edx
	push	esi
	call	_lua_pushinteger

; 347  : 						lua_setfield(L, -2, "NWOfRiver");

	push	OFFSET $SG225076
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 348  : 
; 349  : 						lua_rawseti(L, -2, i);

	push	ebx
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	add	esp, 72					; 00000048H
$LN3@PushReplay:
	mov	ecx, edi
	inc	ebx
	call	?getFinalTurn@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getFinalTurn
	cmp	ebx, eax
	jle	$LL4@PushReplay
$LN2@PushReplay:

; 350  : 					}
; 351  : 				}
; 352  : 
; 353  : 				lua_rawseti(L, -2, idx++);

	mov	ebx, DWORD PTR _idx$225056[esp+64]
	push	ebx
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	mov	eax, DWORD PTR _uiX$225061[esp+72]
	inc	eax
	inc	ebx
	add	esp, 12					; 0000000cH
	cmp	eax, DWORD PTR _uiWidth$225055[esp+64]
	mov	DWORD PTR _idx$225056[esp+64], ebx
	mov	DWORD PTR _uiX$225061[esp+60], eax
	jl	$LL66@PushReplay

; 320  : 		{
; 321  : 			for(int uiX = 0; uiX < uiWidth; ++uiX)

	mov	ebx, DWORD PTR _uiHeight$225054[esp+64]
$LN9@PushReplay:

; 319  : 		for(int uiY = 0; uiY < uiHeight; ++uiY)

	mov	eax, DWORD PTR _uiY$225057[esp+60]
	inc	eax
	cmp	eax, ebx
	mov	DWORD PTR _uiY$225057[esp+60], eax
	jl	$LL67@PushReplay
$LN8@PushReplay:

; 354  : 			}
; 355  : 		}
; 356  : 		lua_setfield(L, t, "Plots");

	push	OFFSET $SG225077
	push	ebp
	push	esi
	call	_lua_setfield

; 357  : 
; 358  : 		delete pkReplay;

	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax]
	add	esp, 12					; 0000000cH
	push	1
	mov	ecx, edi
	call	edx
	pop	esi
	pop	ebp
$LN38@PushReplay:

; 359  : 	}
; 360  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 48					; 00000030H
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z$0:
	mov	eax, DWORD PTR $T225692[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z ENDP ; CvDllScriptSystemUtility::PushReplayFromStream
PUBLIC	??0CvDllScriptSystemUtility@@QAE@XZ		; CvDllScriptSystemUtility::CvDllScriptSystemUtility
; Function compile flags: /Ogtpy
;	COMDAT ??0CvDllScriptSystemUtility@@QAE@XZ
_TEXT	SEGMENT
??0CvDllScriptSystemUtility@@QAE@XZ PROC		; CvDllScriptSystemUtility::CvDllScriptSystemUtility, COMDAT
; _this$ = ecx

; 28   : {

	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7CvDllScriptSystemUtility@@6B@

; 29   : }

	ret	0
??0CvDllScriptSystemUtility@@QAE@XZ ENDP		; CvDllScriptSystemUtility::CvDllScriptSystemUtility
_TEXT	ENDS
END
