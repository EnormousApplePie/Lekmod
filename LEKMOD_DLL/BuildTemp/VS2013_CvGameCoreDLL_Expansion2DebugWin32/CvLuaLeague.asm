; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\Lua\CvLuaLeague.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BL@FKIJHDNO@Instance?5no?5longer?5exists?4?$AA@ ; `string'
PUBLIC	?HandleMissingInstance@CvLuaLeague@@SAXPAUlua_State@@@Z ; CvLuaLeague::HandleMissingInstance
EXTRN	_luaL_error:PROC
;	COMDAT ??_C@_0BL@FKIJHDNO@Instance?5no?5longer?5exists?4?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
CONST	SEGMENT
??_C@_0BL@FKIJHDNO@Instance?5no?5longer?5exists?4?$AA@ DB 'Instance no lo'
	DB	'nger exists.', 00H				; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?HandleMissingInstance@CvLuaLeague@@SAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?HandleMissingInstance@CvLuaLeague@@SAXPAUlua_State@@@Z PROC ; CvLuaLeague::HandleMissingInstance, COMDAT

; 24   : {

	push	ebp
	mov	ebp, esp

; 25   : 	luaL_error(L, "Instance no longer exists.");

	push	OFFSET ??_C@_0BL@FKIJHDNO@Instance?5no?5longer?5exists?4?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_error
	add	esp, 8

; 26   : }

	pop	ebp
	ret	0
?HandleMissingInstance@CvLuaLeague@@SAXPAUlua_State@@@Z ENDP ; CvLuaLeague::HandleMissingInstance
_TEXT	ENDS
PUBLIC	??_C@_0CC@PDDCOCG@GetGreatPersonRateModifierDetail@ ; `string'
PUBLIC	?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetGreatPersonRateModifierDetails
PUBLIC	??_C@_0BO@JEPINGLG@GetLeagueSplashNextEraDetails?$AA@ ; `string'
PUBLIC	?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetLeagueSplashNextEraDetails
PUBLIC	??_C@_0BO@BNGGNCGE@GetLeagueSplashThisEraDetails?$AA@ ; `string'
PUBLIC	?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetLeagueSplashThisEraDetails
PUBLIC	??_C@_0BL@IKLAENDM@GetLeagueSplashDescription?$AA@ ; `string'
PUBLIC	?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetLeagueSplashDescription
PUBLIC	??_C@_0BF@LFEJNHDO@GetLeagueSplashTitle?$AA@	; `string'
PUBLIC	?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetLeagueSplashTitle
PUBLIC	??_C@_0BJ@MGHBCEEL@GetCurrentEffectsSummary?$AA@ ; `string'
PUBLIC	?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetCurrentEffectsSummary
PUBLIC	??_C@_0BM@LOKNNDFL@GetProjectRewardTierDetails?$AA@ ; `string'
PUBLIC	?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetProjectRewardTierDetails
PUBLIC	??_C@_0BC@NEHABPCF@GetProjectDetails?$AA@	; `string'
PUBLIC	?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetProjectDetails
PUBLIC	??_C@_0BB@HFPEGOLL@GetMemberDetails?$AA@	; `string'
PUBLIC	?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetMemberDetails
PUBLIC	??_C@_0BF@LKFONIAO@GetResolutionDetails?$AA@	; `string'
PUBLIC	?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetResolutionDetails
PUBLIC	??_C@_0BC@GHFLNJON@GetResolutionName?$AA@	; `string'
PUBLIC	?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetResolutionName
PUBLIC	??_C@_0CD@KEBJNABH@GetScienceyGreatPersonRateModifi@ ; `string'
PUBLIC	?lGetScienceyGreatPersonRateModifier@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetScienceyGreatPersonRateModifier
PUBLIC	??_C@_0CA@MEFDDIKM@GetArtsyGreatPersonRateModifier?$AA@ ; `string'
PUBLIC	?lGetArtsyGreatPersonRateModifier@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetArtsyGreatPersonRateModifier
PUBLIC	??_C@_0BN@NPOPEEOH@GetContributionTierThreshold?$AA@ ; `string'
PUBLIC	?lGetContributionTierThreshold@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetContributionTierThreshold
PUBLIC	??_C@_0BK@JAOFJLKC@GetMemberContributionTier?$AA@ ; `string'
PUBLIC	?lGetMemberContributionTier@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetMemberContributionTier
PUBLIC	??_C@_0BG@EIELDKCC@GetMemberContribution?$AA@	; `string'
PUBLIC	?lGetMemberContribution@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetMemberContribution
PUBLIC	??_C@_0P@KLGFICJH@GetProjectCost?$AA@		; `string'
PUBLIC	?lGetProjectCost@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetProjectCost
PUBLIC	??_C@_0CA@NNPAOBKN@GetProjectBuildingCostPerPlayer?$AA@ ; `string'
PUBLIC	?lGetProjectBuildingCostPerPlayer@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetProjectBuildingCostPerPlayer
PUBLIC	??_C@_0BI@OJLJHOLD@GetProjectCostPerPlayer?$AA@	; `string'
PUBLIC	?lGetProjectCostPerPlayer@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetProjectCostPerPlayer
PUBLIC	??_C@_0BC@PHJIEINH@IsProjectComplete?$AA@	; `string'
PUBLIC	?lIsProjectComplete@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsProjectComplete
PUBLIC	??_C@_0BA@PGNCFIEM@IsProjectActive?$AA@		; `string'
PUBLIC	?lIsProjectActive@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsProjectActive
PUBLIC	??_C@_0BA@FNMFABBO@IsUnitedNations?$AA@		; `string'
PUBLIC	?lIsUnitedNations@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsUnitedNations
PUBLIC	??_C@_0O@ENIONLHJ@GetHostMember?$AA@		; `string'
PUBLIC	?lGetHostMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetHostMember
PUBLIC	??_C@_0N@OKGJKCIM@IsHostMember?$AA@		; `string'
PUBLIC	?lIsHostMember@CvLuaLeague@@KAHPAUlua_State@@@Z	; CvLuaLeague::lIsHostMember
PUBLIC	??_C@_0BP@NPBJEJDE@GetRemainingProposalsForMember?$AA@ ; `string'
PUBLIC	?lGetRemainingProposalsForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetRemainingProposalsForMember
PUBLIC	??_C@_0L@HCIPMFLP@CanPropose?$AA@		; `string'
PUBLIC	?lCanPropose@CvLuaLeague@@KAHPAUlua_State@@@Z	; CvLuaLeague::lCanPropose
PUBLIC	??_C@_0CA@BILNONIL@CalculateStartingVotesForMember?$AA@ ; `string'
PUBLIC	?lCalculateStartingVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCalculateStartingVotesForMember
PUBLIC	??_C@_0BG@GADOINGK@GetCoreVotesForMember?$AA@	; `string'
PUBLIC	?lGetCoreVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetCoreVotesForMember
PUBLIC	??_C@_0BH@OJOPFOC@GetSpentVotesForMember?$AA@	; `string'
PUBLIC	?lGetSpentVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetSpentVotesForMember
PUBLIC	??_C@_0BL@NBGAJBDI@GetRemainingVotesForMember?$AA@ ; `string'
PUBLIC	?lGetRemainingVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetRemainingVotesForMember
PUBLIC	??_C@_07LNJEEOLD@CanVote?$AA@			; `string'
PUBLIC	?lCanVote@CvLuaLeague@@KAHPAUlua_State@@@Z	; CvLuaLeague::lCanVote
PUBLIC	??_C@_08JHGFNMOF@IsMember?$AA@			; `string'
PUBLIC	?lIsMember@CvLuaLeague@@KAHPAUlua_State@@@Z	; CvLuaLeague::lIsMember
PUBLIC	??_C@_0BF@IKODDOHC@GetActiveResolutions?$AA@	; `string'
PUBLIC	?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetActiveResolutions
PUBLIC	??_C@_0BJ@NEJELCDP@GetRepealProposalsOnHold?$AA@ ; `string'
PUBLIC	?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetRepealProposalsOnHold
PUBLIC	??_C@_0BD@BLPBFJKH@GetRepealProposals?$AA@	; `string'
PUBLIC	?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetRepealProposals
PUBLIC	??_C@_0BI@NPGOPCHH@GetEnactProposalsOnHold?$AA@	; `string'
PUBLIC	?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetEnactProposalsOnHold
PUBLIC	??_C@_0BC@DAEECNAH@GetEnactProposals?$AA@	; `string'
PUBLIC	?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetEnactProposals
PUBLIC	??_C@_0BH@JOIFFIJO@GetInactiveResolutions?$AA@	; `string'
PUBLIC	?lGetInactiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetInactiveResolutions
PUBLIC	??_C@_0BB@KFCCPMDB@GetTextForChoice?$AA@	; `string'
PUBLIC	?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetTextForChoice
PUBLIC	??_C@_0BG@KEEJAAOJ@GetChoicesForDecision?$AA@	; `string'
PUBLIC	?lGetChoicesForDecision@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetChoicesForDecision
PUBLIC	??_C@_0L@ODJNPJDC@IsProposed?$AA@		; `string'
PUBLIC	?lIsProposed@CvLuaLeague@@KAHPAUlua_State@@@Z	; CvLuaLeague::lIsProposed
PUBLIC	??_C@_0BB@LBCCNIGN@CanProposeRepeal?$AA@	; `string'
PUBLIC	?lCanProposeRepeal@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCanProposeRepeal
PUBLIC	??_C@_0BA@NPKLMNCG@CanProposeEnact?$AA@		; `string'
PUBLIC	?lCanProposeEnact@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCanProposeEnact
PUBLIC	??_C@_0BJ@HOFJGMOP@CanProposeEnactAnyChoice?$AA@ ; `string'
PUBLIC	?lCanProposeEnactAnyChoice@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCanProposeEnactAnyChoice
PUBLIC	??_C@_0BM@FNIJDPFK@GetTurnsUntilVictorySession?$AA@ ; `string'
PUBLIC	?lGetTurnsUntilVictorySession@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetTurnsUntilVictorySession
PUBLIC	??_C@_0BF@BLGMLOFN@GetTurnsUntilSession?$AA@	; `string'
PUBLIC	?lGetTurnsUntilSession@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetTurnsUntilSession
PUBLIC	??_C@_0BD@OJCJMLBI@IsInSpecialSession?$AA@	; `string'
PUBLIC	?lIsInSpecialSession@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsInSpecialSession
PUBLIC	??_C@_0M@HHBGPGPF@IsInSession?$AA@		; `string'
PUBLIC	?lIsInSession@CvLuaLeague@@KAHPAUlua_State@@@Z	; CvLuaLeague::lIsInSession
PUBLIC	??_C@_0BE@FIDJCGAI@CanChangeCustomName?$AA@	; `string'
PUBLIC	?lCanChangeCustomName@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCanChangeCustomName
PUBLIC	??_C@_07MMGEHGCI@GetName?$AA@			; `string'
PUBLIC	?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z	; CvLuaLeague::lGetName
PUBLIC	??_C@_05CLBJHDA@GetID?$AA@			; `string'
PUBLIC	?lGetID@CvLuaLeague@@KAHPAUlua_State@@@Z	; CvLuaLeague::lGetID
PUBLIC	??_C@_06OAPDBHPB@IsNone?$AA@			; `string'
PUBLIC	?lIsNone@CvLuaLeague@@KAHPAUlua_State@@@Z	; CvLuaLeague::lIsNone
PUBLIC	?PushMethods@CvLuaLeague@@SAXPAUlua_State@@H@Z	; CvLuaLeague::PushMethods
EXTRN	_lua_setfield:PROC
EXTRN	_lua_pushcclosure:PROC
;	COMDAT ??_C@_0CC@PDDCOCG@GetGreatPersonRateModifierDetail@
CONST	SEGMENT
??_C@_0CC@PDDCOCG@GetGreatPersonRateModifierDetail@ DB 'GetGreatPersonRat'
	DB	'eModifierDetails', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@JEPINGLG@GetLeagueSplashNextEraDetails?$AA@
CONST	SEGMENT
??_C@_0BO@JEPINGLG@GetLeagueSplashNextEraDetails?$AA@ DB 'GetLeagueSplash'
	DB	'NextEraDetails', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BNGGNCGE@GetLeagueSplashThisEraDetails?$AA@
CONST	SEGMENT
??_C@_0BO@BNGGNCGE@GetLeagueSplashThisEraDetails?$AA@ DB 'GetLeagueSplash'
	DB	'ThisEraDetails', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@IKLAENDM@GetLeagueSplashDescription?$AA@
CONST	SEGMENT
??_C@_0BL@IKLAENDM@GetLeagueSplashDescription?$AA@ DB 'GetLeagueSplashDes'
	DB	'cription', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LFEJNHDO@GetLeagueSplashTitle?$AA@
CONST	SEGMENT
??_C@_0BF@LFEJNHDO@GetLeagueSplashTitle?$AA@ DB 'GetLeagueSplashTitle', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MGHBCEEL@GetCurrentEffectsSummary?$AA@
CONST	SEGMENT
??_C@_0BJ@MGHBCEEL@GetCurrentEffectsSummary?$AA@ DB 'GetCurrentEffectsSum'
	DB	'mary', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@LOKNNDFL@GetProjectRewardTierDetails?$AA@
CONST	SEGMENT
??_C@_0BM@LOKNNDFL@GetProjectRewardTierDetails?$AA@ DB 'GetProjectRewardT'
	DB	'ierDetails', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NEHABPCF@GetProjectDetails?$AA@
CONST	SEGMENT
??_C@_0BC@NEHABPCF@GetProjectDetails?$AA@ DB 'GetProjectDetails', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HFPEGOLL@GetMemberDetails?$AA@
CONST	SEGMENT
??_C@_0BB@HFPEGOLL@GetMemberDetails?$AA@ DB 'GetMemberDetails', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LKFONIAO@GetResolutionDetails?$AA@
CONST	SEGMENT
??_C@_0BF@LKFONIAO@GetResolutionDetails?$AA@ DB 'GetResolutionDetails', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GHFLNJON@GetResolutionName?$AA@
CONST	SEGMENT
??_C@_0BC@GHFLNJON@GetResolutionName?$AA@ DB 'GetResolutionName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@KEBJNABH@GetScienceyGreatPersonRateModifi@
CONST	SEGMENT
??_C@_0CD@KEBJNABH@GetScienceyGreatPersonRateModifi@ DB 'GetScienceyGreat'
	DB	'PersonRateModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@MEFDDIKM@GetArtsyGreatPersonRateModifier?$AA@
CONST	SEGMENT
??_C@_0CA@MEFDDIKM@GetArtsyGreatPersonRateModifier?$AA@ DB 'GetArtsyGreat'
	DB	'PersonRateModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@NPOPEEOH@GetContributionTierThreshold?$AA@
CONST	SEGMENT
??_C@_0BN@NPOPEEOH@GetContributionTierThreshold?$AA@ DB 'GetContributionT'
	DB	'ierThreshold', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JAOFJLKC@GetMemberContributionTier?$AA@
CONST	SEGMENT
??_C@_0BK@JAOFJLKC@GetMemberContributionTier?$AA@ DB 'GetMemberContributi'
	DB	'onTier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EIELDKCC@GetMemberContribution?$AA@
CONST	SEGMENT
??_C@_0BG@EIELDKCC@GetMemberContribution?$AA@ DB 'GetMemberContribution', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KLGFICJH@GetProjectCost?$AA@
CONST	SEGMENT
??_C@_0P@KLGFICJH@GetProjectCost?$AA@ DB 'GetProjectCost', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NNPAOBKN@GetProjectBuildingCostPerPlayer?$AA@
CONST	SEGMENT
??_C@_0CA@NNPAOBKN@GetProjectBuildingCostPerPlayer?$AA@ DB 'GetProjectBui'
	DB	'ldingCostPerPlayer', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OJLJHOLD@GetProjectCostPerPlayer?$AA@
CONST	SEGMENT
??_C@_0BI@OJLJHOLD@GetProjectCostPerPlayer?$AA@ DB 'GetProjectCostPerPlay'
	DB	'er', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PHJIEINH@IsProjectComplete?$AA@
CONST	SEGMENT
??_C@_0BC@PHJIEINH@IsProjectComplete?$AA@ DB 'IsProjectComplete', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PGNCFIEM@IsProjectActive?$AA@
CONST	SEGMENT
??_C@_0BA@PGNCFIEM@IsProjectActive?$AA@ DB 'IsProjectActive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FNMFABBO@IsUnitedNations?$AA@
CONST	SEGMENT
??_C@_0BA@FNMFABBO@IsUnitedNations?$AA@ DB 'IsUnitedNations', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ENIONLHJ@GetHostMember?$AA@
CONST	SEGMENT
??_C@_0O@ENIONLHJ@GetHostMember?$AA@ DB 'GetHostMember', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OKGJKCIM@IsHostMember?$AA@
CONST	SEGMENT
??_C@_0N@OKGJKCIM@IsHostMember?$AA@ DB 'IsHostMember', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@NPBJEJDE@GetRemainingProposalsForMember?$AA@
CONST	SEGMENT
??_C@_0BP@NPBJEJDE@GetRemainingProposalsForMember?$AA@ DB 'GetRemainingPr'
	DB	'oposalsForMember', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HCIPMFLP@CanPropose?$AA@
CONST	SEGMENT
??_C@_0L@HCIPMFLP@CanPropose?$AA@ DB 'CanPropose', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@BILNONIL@CalculateStartingVotesForMember?$AA@
CONST	SEGMENT
??_C@_0CA@BILNONIL@CalculateStartingVotesForMember?$AA@ DB 'CalculateStar'
	DB	'tingVotesForMember', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GADOINGK@GetCoreVotesForMember?$AA@
CONST	SEGMENT
??_C@_0BG@GADOINGK@GetCoreVotesForMember?$AA@ DB 'GetCoreVotesForMember', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OJOPFOC@GetSpentVotesForMember?$AA@
CONST	SEGMENT
??_C@_0BH@OJOPFOC@GetSpentVotesForMember?$AA@ DB 'GetSpentVotesForMember', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NBGAJBDI@GetRemainingVotesForMember?$AA@
CONST	SEGMENT
??_C@_0BL@NBGAJBDI@GetRemainingVotesForMember?$AA@ DB 'GetRemainingVotesF'
	DB	'orMember', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07LNJEEOLD@CanVote?$AA@
CONST	SEGMENT
??_C@_07LNJEEOLD@CanVote?$AA@ DB 'CanVote', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08JHGFNMOF@IsMember?$AA@
CONST	SEGMENT
??_C@_08JHGFNMOF@IsMember?$AA@ DB 'IsMember', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IKODDOHC@GetActiveResolutions?$AA@
CONST	SEGMENT
??_C@_0BF@IKODDOHC@GetActiveResolutions?$AA@ DB 'GetActiveResolutions', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NEJELCDP@GetRepealProposalsOnHold?$AA@
CONST	SEGMENT
??_C@_0BJ@NEJELCDP@GetRepealProposalsOnHold?$AA@ DB 'GetRepealProposalsOn'
	DB	'Hold', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BLPBFJKH@GetRepealProposals?$AA@
CONST	SEGMENT
??_C@_0BD@BLPBFJKH@GetRepealProposals?$AA@ DB 'GetRepealProposals', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NPGOPCHH@GetEnactProposalsOnHold?$AA@
CONST	SEGMENT
??_C@_0BI@NPGOPCHH@GetEnactProposalsOnHold?$AA@ DB 'GetEnactProposalsOnHo'
	DB	'ld', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DAEECNAH@GetEnactProposals?$AA@
CONST	SEGMENT
??_C@_0BC@DAEECNAH@GetEnactProposals?$AA@ DB 'GetEnactProposals', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JOIFFIJO@GetInactiveResolutions?$AA@
CONST	SEGMENT
??_C@_0BH@JOIFFIJO@GetInactiveResolutions?$AA@ DB 'GetInactiveResolutions'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KFCCPMDB@GetTextForChoice?$AA@
CONST	SEGMENT
??_C@_0BB@KFCCPMDB@GetTextForChoice?$AA@ DB 'GetTextForChoice', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KEEJAAOJ@GetChoicesForDecision?$AA@
CONST	SEGMENT
??_C@_0BG@KEEJAAOJ@GetChoicesForDecision?$AA@ DB 'GetChoicesForDecision', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ODJNPJDC@IsProposed?$AA@
CONST	SEGMENT
??_C@_0L@ODJNPJDC@IsProposed?$AA@ DB 'IsProposed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LBCCNIGN@CanProposeRepeal?$AA@
CONST	SEGMENT
??_C@_0BB@LBCCNIGN@CanProposeRepeal?$AA@ DB 'CanProposeRepeal', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NPKLMNCG@CanProposeEnact?$AA@
CONST	SEGMENT
??_C@_0BA@NPKLMNCG@CanProposeEnact?$AA@ DB 'CanProposeEnact', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HOFJGMOP@CanProposeEnactAnyChoice?$AA@
CONST	SEGMENT
??_C@_0BJ@HOFJGMOP@CanProposeEnactAnyChoice?$AA@ DB 'CanProposeEnactAnyCh'
	DB	'oice', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@FNIJDPFK@GetTurnsUntilVictorySession?$AA@
CONST	SEGMENT
??_C@_0BM@FNIJDPFK@GetTurnsUntilVictorySession?$AA@ DB 'GetTurnsUntilVict'
	DB	'orySession', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BLGMLOFN@GetTurnsUntilSession?$AA@
CONST	SEGMENT
??_C@_0BF@BLGMLOFN@GetTurnsUntilSession?$AA@ DB 'GetTurnsUntilSession', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OJCJMLBI@IsInSpecialSession?$AA@
CONST	SEGMENT
??_C@_0BD@OJCJMLBI@IsInSpecialSession?$AA@ DB 'IsInSpecialSession', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HHBGPGPF@IsInSession?$AA@
CONST	SEGMENT
??_C@_0M@HHBGPGPF@IsInSession?$AA@ DB 'IsInSession', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FIDJCGAI@CanChangeCustomName?$AA@
CONST	SEGMENT
??_C@_0BE@FIDJCGAI@CanChangeCustomName?$AA@ DB 'CanChangeCustomName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07MMGEHGCI@GetName?$AA@
CONST	SEGMENT
??_C@_07MMGEHGCI@GetName?$AA@ DB 'GetName', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CLBJHDA@GetID?$AA@
CONST	SEGMENT
??_C@_05CLBJHDA@GetID?$AA@ DB 'GetID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OAPDBHPB@IsNone?$AA@
CONST	SEGMENT
??_C@_06OAPDBHPB@IsNone?$AA@ DB 'IsNone', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?PushMethods@CvLuaLeague@@SAXPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
?PushMethods@CvLuaLeague@@SAXPAUlua_State@@H@Z PROC	; CvLuaLeague::PushMethods, COMDAT

; 29   : {

	push	ebp
	mov	ebp, esp

; 30   : 	Method(IsNone);

	push	0
	push	OFFSET ?lIsNone@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsNone
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_06OAPDBHPB@IsNone?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 31   : 	
; 32   : 	Method(GetID);

	push	0
	push	OFFSET ?lGetID@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetID
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_05CLBJHDA@GetID?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 33   : 	Method(GetName);

	push	0
	push	OFFSET ?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetName
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07MMGEHGCI@GetName?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 34   : 	Method(CanChangeCustomName);

	push	0
	push	OFFSET ?lCanChangeCustomName@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCanChangeCustomName
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@FIDJCGAI@CanChangeCustomName?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 35   : 
; 36   : 	Method(IsInSession);

	push	0
	push	OFFSET ?lIsInSession@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsInSession
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@HHBGPGPF@IsInSession?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 37   : 	Method(IsInSpecialSession);

	push	0
	push	OFFSET ?lIsInSpecialSession@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsInSpecialSession
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@OJCJMLBI@IsInSpecialSession?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 38   : 	Method(GetTurnsUntilSession);

	push	0
	push	OFFSET ?lGetTurnsUntilSession@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetTurnsUntilSession
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@BLGMLOFN@GetTurnsUntilSession?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 39   : 	Method(GetTurnsUntilVictorySession);

	push	0
	push	OFFSET ?lGetTurnsUntilVictorySession@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetTurnsUntilVictorySession
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@FNIJDPFK@GetTurnsUntilVictorySession?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 40   : 
; 41   : 	Method(CanProposeEnactAnyChoice);

	push	0
	push	OFFSET ?lCanProposeEnactAnyChoice@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCanProposeEnactAnyChoice
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@HOFJGMOP@CanProposeEnactAnyChoice?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 42   : 	Method(CanProposeEnact);

	push	0
	push	OFFSET ?lCanProposeEnact@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCanProposeEnact
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@NPKLMNCG@CanProposeEnact?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 43   : 	Method(CanProposeRepeal);

	push	0
	push	OFFSET ?lCanProposeRepeal@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCanProposeRepeal
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@LBCCNIGN@CanProposeRepeal?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 44   : 	Method(IsProposed);

	push	0
	push	OFFSET ?lIsProposed@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsProposed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@ODJNPJDC@IsProposed?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 45   : 	Method(GetChoicesForDecision);

	push	0
	push	OFFSET ?lGetChoicesForDecision@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetChoicesForDecision
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@KEEJAAOJ@GetChoicesForDecision?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 46   : 	Method(GetTextForChoice);

	push	0
	push	OFFSET ?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetTextForChoice
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@KFCCPMDB@GetTextForChoice?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 47   : 	Method(GetInactiveResolutions);

	push	0
	push	OFFSET ?lGetInactiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetInactiveResolutions
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@JOIFFIJO@GetInactiveResolutions?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 48   : 	Method(GetEnactProposals);

	push	0
	push	OFFSET ?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetEnactProposals
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@DAEECNAH@GetEnactProposals?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 49   : 	Method(GetEnactProposalsOnHold);

	push	0
	push	OFFSET ?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetEnactProposalsOnHold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@NPGOPCHH@GetEnactProposalsOnHold?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 50   : 	Method(GetRepealProposals);

	push	0
	push	OFFSET ?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetRepealProposals
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@BLPBFJKH@GetRepealProposals?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 51   : 	Method(GetRepealProposalsOnHold);

	push	0
	push	OFFSET ?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetRepealProposalsOnHold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@NEJELCDP@GetRepealProposalsOnHold?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 52   : 	Method(GetActiveResolutions);

	push	0
	push	OFFSET ?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetActiveResolutions
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@IKODDOHC@GetActiveResolutions?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 53   : 
; 54   : 	Method(IsMember);

	push	0
	push	OFFSET ?lIsMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsMember
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08JHGFNMOF@IsMember?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 55   : 	Method(CanVote);

	push	0
	push	OFFSET ?lCanVote@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCanVote
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07LNJEEOLD@CanVote?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 56   : 	Method(GetRemainingVotesForMember);

	push	0
	push	OFFSET ?lGetRemainingVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetRemainingVotesForMember
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@NBGAJBDI@GetRemainingVotesForMember?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 57   : 	Method(GetSpentVotesForMember);

	push	0
	push	OFFSET ?lGetSpentVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetSpentVotesForMember
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@OJOPFOC@GetSpentVotesForMember?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 58   : 	Method(GetCoreVotesForMember);

	push	0
	push	OFFSET ?lGetCoreVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetCoreVotesForMember
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@GADOINGK@GetCoreVotesForMember?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 59   : 	Method(CalculateStartingVotesForMember);

	push	0
	push	OFFSET ?lCalculateStartingVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCalculateStartingVotesForMember
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@BILNONIL@CalculateStartingVotesForMember?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 60   : 	Method(CanPropose);

	push	0
	push	OFFSET ?lCanPropose@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCanPropose
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@HCIPMFLP@CanPropose?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 61   : 	Method(GetRemainingProposalsForMember);

	push	0
	push	OFFSET ?lGetRemainingProposalsForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetRemainingProposalsForMember
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@NPBJEJDE@GetRemainingProposalsForMember?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 62   : 
; 63   : 	Method(IsHostMember);

	push	0
	push	OFFSET ?lIsHostMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsHostMember
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@OKGJKCIM@IsHostMember?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 64   : 	Method(GetHostMember);

	push	0
	push	OFFSET ?lGetHostMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetHostMember
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@ENIONLHJ@GetHostMember?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 65   : 	Method(IsUnitedNations);

	push	0
	push	OFFSET ?lIsUnitedNations@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsUnitedNations
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@FNMFABBO@IsUnitedNations?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 66   : 
; 67   : 	Method(IsProjectActive);

	push	0
	push	OFFSET ?lIsProjectActive@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsProjectActive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@PGNCFIEM@IsProjectActive?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 68   : 	Method(IsProjectComplete);

	push	0
	push	OFFSET ?lIsProjectComplete@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsProjectComplete
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@PHJIEINH@IsProjectComplete?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 69   : 	Method(GetProjectCostPerPlayer);

	push	0
	push	OFFSET ?lGetProjectCostPerPlayer@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetProjectCostPerPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@OJLJHOLD@GetProjectCostPerPlayer?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 70   : 	Method(GetProjectBuildingCostPerPlayer);

	push	0
	push	OFFSET ?lGetProjectBuildingCostPerPlayer@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetProjectBuildingCostPerPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@NNPAOBKN@GetProjectBuildingCostPerPlayer?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 71   : 	Method(GetProjectCost);

	push	0
	push	OFFSET ?lGetProjectCost@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetProjectCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@KLGFICJH@GetProjectCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 72   : 	Method(GetMemberContribution);

	push	0
	push	OFFSET ?lGetMemberContribution@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetMemberContribution
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@EIELDKCC@GetMemberContribution?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 73   : 	Method(GetMemberContributionTier);

	push	0
	push	OFFSET ?lGetMemberContributionTier@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetMemberContributionTier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@JAOFJLKC@GetMemberContributionTier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 74   : 	Method(GetContributionTierThreshold);

	push	0
	push	OFFSET ?lGetContributionTierThreshold@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetContributionTierThreshold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@NPOPEEOH@GetContributionTierThreshold?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 75   : 
; 76   : 	Method(GetArtsyGreatPersonRateModifier);

	push	0
	push	OFFSET ?lGetArtsyGreatPersonRateModifier@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetArtsyGreatPersonRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@MEFDDIKM@GetArtsyGreatPersonRateModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 77   : 	Method(GetScienceyGreatPersonRateModifier);

	push	0
	push	OFFSET ?lGetScienceyGreatPersonRateModifier@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetScienceyGreatPersonRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@KEBJNABH@GetScienceyGreatPersonRateModifi@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 78   : 	
; 79   : 	Method(GetResolutionName);

	push	0
	push	OFFSET ?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetResolutionName
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@GHFLNJON@GetResolutionName?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 80   : 	Method(GetResolutionDetails);

	push	0
	push	OFFSET ?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetResolutionDetails
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@LKFONIAO@GetResolutionDetails?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 81   : 	Method(GetMemberDetails);

	push	0
	push	OFFSET ?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetMemberDetails
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@HFPEGOLL@GetMemberDetails?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 82   : 	Method(GetProjectDetails);

	push	0
	push	OFFSET ?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetProjectDetails
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@NEHABPCF@GetProjectDetails?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 83   : 	Method(GetProjectRewardTierDetails);

	push	0
	push	OFFSET ?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetProjectRewardTierDetails
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@LOKNNDFL@GetProjectRewardTierDetails?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 84   : 	Method(GetCurrentEffectsSummary);

	push	0
	push	OFFSET ?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetCurrentEffectsSummary
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@MGHBCEEL@GetCurrentEffectsSummary?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 85   : 	Method(GetLeagueSplashTitle);

	push	0
	push	OFFSET ?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetLeagueSplashTitle
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@LFEJNHDO@GetLeagueSplashTitle?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 86   : 	Method(GetLeagueSplashDescription);

	push	0
	push	OFFSET ?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetLeagueSplashDescription
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@IKLAENDM@GetLeagueSplashDescription?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 87   : 	Method(GetLeagueSplashThisEraDetails);

	push	0
	push	OFFSET ?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetLeagueSplashThisEraDetails
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@BNGGNCGE@GetLeagueSplashThisEraDetails?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 88   : 	Method(GetLeagueSplashNextEraDetails);

	push	0
	push	OFFSET ?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetLeagueSplashNextEraDetails
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@JEPINGLG@GetLeagueSplashNextEraDetails?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 89   : 	Method(GetGreatPersonRateModifierDetails);

	push	0
	push	OFFSET ?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetGreatPersonRateModifierDetails
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@PDDCOCG@GetGreatPersonRateModifierDetail@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 90   : }

	pop	ebp
	ret	0
?PushMethods@CvLuaLeague@@SAXPAUlua_State@@H@Z ENDP	; CvLuaLeague::PushMethods
_TEXT	ENDS
PUBLIC	??_C@_06PBBCAFHL@League?$AA@			; `string'
PUBLIC	?GetTypeName@CvLuaLeague@@SAPBDXZ		; CvLuaLeague::GetTypeName
;	COMDAT ??_C@_06PBBCAFHL@League?$AA@
CONST	SEGMENT
??_C@_06PBBCAFHL@League?$AA@ DB 'League', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?GetTypeName@CvLuaLeague@@SAPBDXZ
_TEXT	SEGMENT
?GetTypeName@CvLuaLeague@@SAPBDXZ PROC			; CvLuaLeague::GetTypeName, COMDAT

; 93   : {

	push	ebp
	mov	ebp, esp

; 94   : 	return "League";

	mov	eax, OFFSET ??_C@_06PBBCAFHL@League?$AA@

; 95   : }

	pop	ebp
	ret	0
?GetTypeName@CvLuaLeague@@SAPBDXZ ENDP			; CvLuaLeague::GetTypeName
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
EXTRN	_lua_pushboolean:PROC
; Function compile flags: /Odtp
;	COMDAT ?lIsNone@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bDoesNotExist$ = -1					; size = 1
_L$ = 8							; size = 4
?lIsNone@CvLuaLeague@@KAHPAUlua_State@@@Z PROC		; CvLuaLeague::lIsNone, COMDAT

; 101  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 102  : #ifdef AUI_WARNING_FIXES
; 103  : 	const bool bDoesNotExist = (GetInstance(L, 1, false) == NULL);
; 104  : 	lua_pushboolean(L, bDoesNotExist ? 1 : 0);
; 105  : #else
; 106  : 	const bool bDoesNotExist = (GetInstance(L, false) == NULL);

	push	1
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	test	eax, eax
	sete	cl
	mov	BYTE PTR _bDoesNotExist$[ebp], cl

; 107  : 	lua_pushboolean(L, bDoesNotExist);

	movzx	edx, BYTE PTR _bDoesNotExist$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 108  : #endif
; 109  : 	return 1;

	mov	eax, 1

; 110  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsNone@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP		; CvLuaLeague::lIsNone
_TEXT	ENDS
EXTRN	_lua_pushinteger:PROC
EXTRN	?GetID@CvLeague@@QBE?AW4LeagueTypes@@XZ:PROC	; CvLeague::GetID
; Function compile flags: /Odtp
;	COMDAT ?lGetID@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetID@CvLuaLeague@@KAHPAUlua_State@@@Z PROC		; CvLuaLeague::lGetID, COMDAT

; 114  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 115  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 116  : 
; 117  : 	const int iValue = (int) pLeague->GetID();

	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetID@CvLeague@@QBE?AW4LeagueTypes@@XZ	; CvLeague::GetID
	mov	DWORD PTR _iValue$[ebp], eax

; 118  : 	lua_pushinteger(L, iValue);

	mov	ecx, DWORD PTR _iValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 119  : 	return 1;

	mov	eax, 1

; 120  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetID@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP		; CvLuaLeague::lGetID
_TEXT	ENDS
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_??1String@Localization@@UAE@XZ:PROC
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	_lua_pushstring:PROC
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
EXTRN	__imp_?toUTF8@String@Localization@@QAEPBDXZ:PROC
EXTRN	?GetName@CvLeague@@QAE?AVString@Localization@@XZ:PROC ; CvLeague::GetName
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv93 = -140						; size = 4
$T218902 = -136						; size = 4
$T218891 = -132						; size = 4
_pLeague$ = -128					; size = 4
_strName$ = -124					; size = 80
_sResult$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z PROC		; CvLuaLeague::lGetName, COMDAT

; 124  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 128				; 00000080H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 125  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 126  : 
; 127  : 	Localization::String strName = pLeague->GetName();

	lea	ecx, DWORD PTR _strName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetName@CvLeague@@QAE?AVString@Localization@@XZ ; CvLeague::GetName
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 128  : 	const CvString sResult = strName.toUTF8();

	lea	ecx, DWORD PTR _strName$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T218902[ebp], eax
	cmp	DWORD PTR $T218902[ebp], 0
	je	SHORT $LN7@lGetName
	mov	edx, DWORD PTR $T218902[ebp]
	mov	DWORD PTR tv93[ebp], edx
	jmp	SHORT $LN8@lGetName
$LN7@lGetName:
	mov	DWORD PTR tv93[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN8@lGetName:
	mov	eax, DWORD PTR tv93[ebp]
	push	eax
	lea	ecx, DWORD PTR _sResult$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 129  : 	lua_pushstring(L, sResult);

	lea	ecx, DWORD PTR _sResult$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 130  : 	return 1;

	mov	DWORD PTR $T218891[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sResult$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strName$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	eax, DWORD PTR $T218891[ebp]

; 131  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _strName$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _sResult$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP		; CvLuaLeague::lGetName
EXTRN	?CanChangeCustomName@CvLeague@@QAE_NW4PlayerTypes@@@Z:PROC ; CvLeague::CanChangeCustomName
EXTRN	_lua_tointeger:PROC
; Function compile flags: /Odtp
;	COMDAT ?lCanChangeCustomName@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -12						; size = 4
_bValue$ = -5						; size = 1
_ePlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lCanChangeCustomName@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lCanChangeCustomName, COMDAT

; 135  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 136  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 137  : 	PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 138  : 
; 139  : 	const bool bValue = pLeague->CanChangeCustomName(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?CanChangeCustomName@CvLeague@@QAE_NW4PlayerTypes@@@Z ; CvLeague::CanChangeCustomName
	mov	BYTE PTR _bValue$[ebp], al

; 140  : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 141  : 	return 1;

	mov	eax, 1

; 142  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanChangeCustomName@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lCanChangeCustomName
_TEXT	ENDS
EXTRN	?IsInSession@CvLeague@@QAE_NXZ:PROC		; CvLeague::IsInSession
; Function compile flags: /Odtp
;	COMDAT ?lIsInSession@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -8						; size = 4
_bValue$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsInSession@CvLuaLeague@@KAHPAUlua_State@@@Z PROC	; CvLuaLeague::lIsInSession, COMDAT

; 146  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 147  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 148  : 
; 149  : 	const bool bValue = pLeague->IsInSession();

	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?IsInSession@CvLeague@@QAE_NXZ		; CvLeague::IsInSession
	mov	BYTE PTR _bValue$[ebp], al

; 150  : 	lua_pushboolean(L, bValue);

	movzx	ecx, BYTE PTR _bValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 151  : 	return 1;

	mov	eax, 1

; 152  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsInSession@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP	; CvLuaLeague::lIsInSession
_TEXT	ENDS
EXTRN	?IsInSpecialSession@CvLeague@@QAE_NXZ:PROC	; CvLeague::IsInSpecialSession
; Function compile flags: /Odtp
;	COMDAT ?lIsInSpecialSession@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -8						; size = 4
_bValue$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsInSpecialSession@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lIsInSpecialSession, COMDAT

; 156  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 157  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 158  : 
; 159  : 	const bool bValue = pLeague->IsInSpecialSession();

	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?IsInSpecialSession@CvLeague@@QAE_NXZ	; CvLeague::IsInSpecialSession
	mov	BYTE PTR _bValue$[ebp], al

; 160  : 	lua_pushboolean(L, bValue);

	movzx	ecx, BYTE PTR _bValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 161  : 	return 1;

	mov	eax, 1

; 162  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsInSpecialSession@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lIsInSpecialSession
_TEXT	ENDS
EXTRN	?GetTurnsUntilSession@CvLeague@@QBEHXZ:PROC	; CvLeague::GetTurnsUntilSession
; Function compile flags: /Odtp
;	COMDAT ?lGetTurnsUntilSession@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetTurnsUntilSession@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetTurnsUntilSession, COMDAT

; 166  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 167  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 168  : 
; 169  : 	const int iValue = pLeague->GetTurnsUntilSession();

	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetTurnsUntilSession@CvLeague@@QBEHXZ	; CvLeague::GetTurnsUntilSession
	mov	DWORD PTR _iValue$[ebp], eax

; 170  : 	lua_pushinteger(L, iValue);

	mov	ecx, DWORD PTR _iValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 171  : 	return 1;

	mov	eax, 1

; 172  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTurnsUntilSession@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetTurnsUntilSession
_TEXT	ENDS
EXTRN	?GetTurnsUntilVictorySession@CvLeague@@QAEHXZ:PROC ; CvLeague::GetTurnsUntilVictorySession
; Function compile flags: /Odtp
;	COMDAT ?lGetTurnsUntilVictorySession@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetTurnsUntilVictorySession@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetTurnsUntilVictorySession, COMDAT

; 176  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 177  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 178  : 
; 179  : 	const int iValue = pLeague->GetTurnsUntilVictorySession();

	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetTurnsUntilVictorySession@CvLeague@@QAEHXZ ; CvLeague::GetTurnsUntilVictorySession
	mov	DWORD PTR _iValue$[ebp], eax

; 180  : 	lua_pushinteger(L, iValue);

	mov	ecx, DWORD PTR _iValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 181  : 	return 1;

	mov	eax, 1

; 182  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTurnsUntilVictorySession@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetTurnsUntilVictorySession
_TEXT	ENDS
EXTRN	?CanProposeEnactAnyChoice@CvLeague@@QAE_NW4ResolutionTypes@@W4PlayerTypes@@@Z:PROC ; CvLeague::CanProposeEnactAnyChoice
; Function compile flags: /Odtp
;	COMDAT ?lCanProposeEnactAnyChoice@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -16						; size = 4
_bValue$ = -9						; size = 1
_eResolution$ = -8					; size = 4
_eProposer$ = -4					; size = 4
_L$ = 8							; size = 4
?lCanProposeEnactAnyChoice@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lCanProposeEnactAnyChoice, COMDAT

; 186  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 187  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 188  : 	const ResolutionTypes eResolution = (ResolutionTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eResolution$[ebp], eax

; 189  : 	const PlayerTypes eProposer = (PlayerTypes) lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eProposer$[ebp], eax

; 190  : 
; 191  : 	const bool bValue = pLeague->CanProposeEnactAnyChoice(eResolution, eProposer);

	mov	eax, DWORD PTR _eProposer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eResolution$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?CanProposeEnactAnyChoice@CvLeague@@QAE_NW4ResolutionTypes@@W4PlayerTypes@@@Z ; CvLeague::CanProposeEnactAnyChoice
	mov	BYTE PTR _bValue$[ebp], al

; 192  : 	lua_pushboolean(L, bValue);

	movzx	edx, BYTE PTR _bValue$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 193  : 	return 1;

	mov	eax, 1

; 194  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanProposeEnactAnyChoice@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lCanProposeEnactAnyChoice
_TEXT	ENDS
EXTRN	?CanProposeEnact@CvLeague@@QAE_NW4ResolutionTypes@@W4PlayerTypes@@HPAVCvString@@@Z:PROC ; CvLeague::CanProposeEnact
; Function compile flags: /Odtp
;	COMDAT ?lCanProposeEnact@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -20						; size = 4
_bValue$ = -13						; size = 1
_iChoice$ = -12						; size = 4
_eResolution$ = -8					; size = 4
_eProposer$ = -4					; size = 4
_L$ = 8							; size = 4
?lCanProposeEnact@CvLuaLeague@@KAHPAUlua_State@@@Z PROC	; CvLuaLeague::lCanProposeEnact, COMDAT

; 198  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 199  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 200  : 	const ResolutionTypes eResolution = (ResolutionTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eResolution$[ebp], eax

; 201  : 	const PlayerTypes eProposer = (PlayerTypes) lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eProposer$[ebp], eax

; 202  : 	const int iChoice = lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iChoice$[ebp], eax

; 203  : 
; 204  : 	const bool bValue = pLeague->CanProposeEnact(eResolution, eProposer, iChoice);

	push	0
	mov	ecx, DWORD PTR _iChoice$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eProposer$[ebp]
	push	edx
	mov	eax, DWORD PTR _eResolution$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?CanProposeEnact@CvLeague@@QAE_NW4ResolutionTypes@@W4PlayerTypes@@HPAVCvString@@@Z ; CvLeague::CanProposeEnact
	mov	BYTE PTR _bValue$[ebp], al

; 205  : 	lua_pushboolean(L, bValue);

	movzx	ecx, BYTE PTR _bValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 206  : 	return 1;

	mov	eax, 1

; 207  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanProposeEnact@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP	; CvLuaLeague::lCanProposeEnact
_TEXT	ENDS
EXTRN	?CanProposeRepeal@CvLeague@@QAE_NHW4PlayerTypes@@PAVCvString@@@Z:PROC ; CvLeague::CanProposeRepeal
; Function compile flags: /Odtp
;	COMDAT ?lCanProposeRepeal@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -16						; size = 4
_bValue$ = -9						; size = 1
_iResolutionID$ = -8					; size = 4
_eProposer$ = -4					; size = 4
_L$ = 8							; size = 4
?lCanProposeRepeal@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lCanProposeRepeal, COMDAT

; 211  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 212  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 213  : 	const int iResolutionID = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iResolutionID$[ebp], eax

; 214  : 	const PlayerTypes eProposer = (PlayerTypes) lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eProposer$[ebp], eax

; 215  : 
; 216  : 	const bool bValue = pLeague->CanProposeRepeal(iResolutionID, eProposer);

	push	0
	mov	eax, DWORD PTR _eProposer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iResolutionID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?CanProposeRepeal@CvLeague@@QAE_NHW4PlayerTypes@@PAVCvString@@@Z ; CvLeague::CanProposeRepeal
	mov	BYTE PTR _bValue$[ebp], al

; 217  : 	lua_pushboolean(L, bValue);

	movzx	edx, BYTE PTR _bValue$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 218  : 	return 1;

	mov	eax, 1

; 219  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanProposeRepeal@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lCanProposeRepeal
_TEXT	ENDS
EXTRN	?IsProposed@CvLeague@@QAE_NH_N0@Z:PROC		; CvLeague::IsProposed
EXTRN	_lua_toboolean:PROC
; Function compile flags: /Odtp
;	COMDAT ?lIsProposed@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -16						; size = 4
_bValue$ = -9						; size = 1
_iResolutionID$ = -8					; size = 4
_bRepeal$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsProposed@CvLuaLeague@@KAHPAUlua_State@@@Z PROC	; CvLuaLeague::lIsProposed, COMDAT

; 223  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 224  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 225  : 	const int iResolutionID = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iResolutionID$[ebp], eax

; 226  : 	const bool bRepeal = lua_toboolean(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bRepeal$[ebp], al

; 227  : 
; 228  : 	const bool bValue = pLeague->IsProposed(iResolutionID, bRepeal);

	push	0
	movzx	ecx, BYTE PTR _bRepeal$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iResolutionID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?IsProposed@CvLeague@@QAE_NH_N0@Z	; CvLeague::IsProposed
	mov	BYTE PTR _bValue$[ebp], al

; 229  : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 230  : 	return 1;

	mov	eax, 1

; 231  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsProposed@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP	; CvLuaLeague::lIsProposed
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ ; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >
PUBLIC	?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
EXTRN	_lua_rawseti:PROC
EXTRN	?GetChoicesForDecision@CvLeague@@QAE?AV?$vector@HV?$allocator@H@std@@@std@@W4ResolutionDecisionTypes@@W4PlayerTypes@@@Z:PROC ; CvLeague::GetChoicesForDecision
EXTRN	_lua_gettop:PROC
EXTRN	_lua_createtable:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?lGetChoicesForDecision@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetChoicesForDecision@CvLuaLeague@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetChoicesForDecision@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetChoicesForDecision@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetChoicesForDecision@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv143 = -112						; size = 4
$T218986 = -80						; size = 4
__Tmp$218971 = -76					; size = 4
$T218954 = -72						; size = 4
$T218943 = -68						; size = 4
$T218942 = -64						; size = 4
$T218941 = -60						; size = 4
_iChoice$217395 = -56					; size = 4
_it$217388 = -52					; size = 4
_pLeague$ = -48						; size = 4
_t$ = -44						; size = 4
_iIndex$ = -40						; size = 4
_eDecision$ = -36					; size = 4
_eDecider$ = -32					; size = 4
_v$ = -28						; size = 16
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetChoicesForDecision@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetChoicesForDecision, COMDAT

; 235  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetChoicesForDecision@CvLuaLeague@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 100				; 00000064H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 236  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 237  : 	const ResolutionDecisionTypes eDecision = (ResolutionDecisionTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eDecision$[ebp], eax

; 238  : 	const PlayerTypes eDecider = (PlayerTypes) lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eDecider$[ebp], eax

; 239  : 
; 240  : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 241  : 	const int t = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$[ebp], eax

; 242  : 	int iIndex = 1;

	mov	DWORD PTR _iIndex$[ebp], 1

; 243  : 
; 244  : 	std::vector<int> v = pLeague->GetChoicesForDecision(eDecision, eDecider);

	mov	edx, DWORD PTR _eDecider$[ebp]
	push	edx
	mov	eax, DWORD PTR _eDecision$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetChoicesForDecision@CvLeague@@QAE?AV?$vector@HV?$allocator@H@std@@@std@@W4ResolutionDecisionTypes@@W4PlayerTypes@@@Z ; CvLeague::GetChoicesForDecision

; 245  : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 246  : 	for (std::vector<int>::iterator it = v.begin(); it != v.end(); ++it)
; 247  : #else
; 248  : 	for (std::vector<int>::iterator it = v.begin(); it != v.end(); it++)

	mov	edx, DWORD PTR _v$[ebp+4]
	mov	DWORD PTR $T218954[ebp], edx
	mov	eax, DWORD PTR $T218954[ebp]
	mov	DWORD PTR _it$217388[ebp], eax
	jmp	SHORT $LN3@lGetChoice
$LN2@lGetChoice:
	mov	ecx, DWORD PTR _it$217388[ebp]
	mov	DWORD PTR __Tmp$218971[ebp], ecx
	mov	edx, DWORD PTR _it$217388[ebp]
	add	edx, 4
	mov	DWORD PTR _it$217388[ebp], edx
	mov	eax, DWORD PTR __Tmp$218971[ebp]
	mov	DWORD PTR $T218941[ebp], eax
$LN3@lGetChoice:
	mov	ecx, DWORD PTR _v$[ebp+8]
	mov	DWORD PTR $T218986[ebp], ecx
	mov	edx, DWORD PTR $T218986[ebp]
	mov	DWORD PTR $T218942[ebp], edx
	mov	eax, DWORD PTR _it$217388[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T218942[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN1@lGetChoice

; 249  : #endif
; 250  : 	{
; 251  : 		const int iChoice = (*it);

	mov	ecx, DWORD PTR _it$217388[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _iChoice$217395[ebp], edx

; 252  : 		lua_pushinteger(L, iChoice);

	mov	eax, DWORD PTR _iChoice$217395[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 253  : 		lua_rawseti(L, t, iIndex++);

	mov	edx, DWORD PTR _iIndex$[ebp]
	mov	DWORD PTR tv143[ebp], edx
	mov	eax, DWORD PTR tv143[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _iIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _iIndex$[ebp], eax

; 254  : 	}

	jmp	SHORT $LN2@lGetChoice
$LN1@lGetChoice:

; 255  : 	return 1;

	mov	DWORD PTR $T218943[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _v$[ebp]
	call	?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T218943[ebp]

; 256  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetChoicesForDecision@CvLuaLeague@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _v$[ebp]
	jmp	??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ
__ehhandler$?lGetChoicesForDecision@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetChoicesForDecision@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetChoicesForDecision@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetChoicesForDecision
PUBLIC	__$ArrayPad$
EXTRN	?GetTextForChoice@CvLeague@@QAE?AVCvString@@W4ResolutionDecisionTypes@@H@Z:PROC ; CvLeague::GetTextForChoice
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T219073 = -60						; size = 4
_pLeague$ = -56						; size = 4
_iChoice$ = -52						; size = 4
_sResult$ = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
_eDecision$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetTextForChoice, COMDAT

; 260  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 261  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 262  : 	const ResolutionDecisionTypes eDecision = (ResolutionDecisionTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eDecision$[ebp], eax

; 263  : 	const int iChoice = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iChoice$[ebp], eax

; 264  : 
; 265  : 	const CvString sResult = pLeague->GetTextForChoice(eDecision, iChoice);

	mov	eax, DWORD PTR _iChoice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eDecision$[ebp]
	push	ecx
	lea	edx, DWORD PTR _sResult$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetTextForChoice@CvLeague@@QAE?AVCvString@@W4ResolutionDecisionTypes@@H@Z ; CvLeague::GetTextForChoice
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 266  : 	lua_pushstring(L, sResult);

	lea	ecx, DWORD PTR _sResult$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 267  : 	return 1;

	mov	DWORD PTR $T219073[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sResult$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T219073[ebp]

; 268  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sResult$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetTextForChoice
PUBLIC	??1?$_Vector_val@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE@XZ ; std::_Vector_val<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::~_Vector_val<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >
PUBLIC	?_Tidy@?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@IAEXXZ ; std::vector<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::_Tidy
PUBLIC	??_C@_04KOACHJEN@Type?$AA@			; `string'
EXTRN	?GetInactiveResolutions@CvLeague@@QBE?AV?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@XZ:PROC ; CvLeague::GetInactiveResolutions
;	COMDAT ??_C@_04KOACHJEN@Type?$AA@
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
CONST	SEGMENT
??_C@_04KOACHJEN@Type?$AA@ DB 'Type', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?lGetInactiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInactiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetInactiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetInactiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetInactiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv139 = -100						; size = 4
$T219126 = -64						; size = 4
$T219102 = -60						; size = 4
$T219091 = -56						; size = 4
$T219090 = -52						; size = 4
_t$217870 = -48						; size = 4
_eResolution$217871 = -44				; size = 4
_it$217864 = -40					; size = 4
_pLeague$ = -36						; size = 4
_iIndex$ = -32						; size = 4
_v$ = -28						; size = 16
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInactiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetInactiveResolutions, COMDAT

; 272  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetInactiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 273  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 274  : 
; 275  : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 276  : 	int iIndex = 1;

	mov	DWORD PTR _iIndex$[ebp], 1

; 277  : 
; 278  : #ifdef AUI_WARNING_FIXES
; 279  : 	const std::vector<ResolutionTypes>& v = pLeague->GetInactiveResolutions();
; 280  : 	for (std::vector<ResolutionTypes>::const_iterator it = v.begin(); it != v.end(); ++it)
; 281  : #else
; 282  : 	std::vector<ResolutionTypes> v = pLeague->GetInactiveResolutions();

	lea	edx, DWORD PTR _v$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetInactiveResolutions@CvLeague@@QBE?AV?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@XZ ; CvLeague::GetInactiveResolutions

; 283  : 	for(std::vector<ResolutionTypes>::iterator it = v.begin(); it != v.end(); ++it)

	mov	eax, DWORD PTR _v$[ebp+4]
	mov	DWORD PTR $T219102[ebp], eax
	mov	ecx, DWORD PTR $T219102[ebp]
	mov	DWORD PTR _it$217864[ebp], ecx
	jmp	SHORT $LN3@lGetInacti
$LN2@lGetInacti:
	mov	edx, DWORD PTR _it$217864[ebp]
	add	edx, 4
	mov	DWORD PTR _it$217864[ebp], edx
$LN3@lGetInacti:
	mov	eax, DWORD PTR _v$[ebp+8]
	mov	DWORD PTR $T219126[ebp], eax
	mov	ecx, DWORD PTR $T219126[ebp]
	mov	DWORD PTR $T219090[ebp], ecx
	mov	edx, DWORD PTR _it$217864[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR $T219090[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN1@lGetInacti

; 284  : #endif
; 285  : 	{
; 286  : 		lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 287  : 		const int t = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$217870[ebp], eax

; 288  : 
; 289  : 		const ResolutionTypes eResolution = (*it);

	mov	edx, DWORD PTR _it$217864[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _eResolution$217871[ebp], eax

; 290  : 		lua_pushinteger(L, eResolution);

	mov	ecx, DWORD PTR _eResolution$217871[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 291  : 		lua_setfield(L, t, "Type");

	push	OFFSET ??_C@_04KOACHJEN@Type?$AA@
	mov	eax, DWORD PTR _t$217870[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 292  : 
; 293  : 		lua_rawseti(L, -2, iIndex++);

	mov	edx, DWORD PTR _iIndex$[ebp]
	mov	DWORD PTR tv139[ebp], edx
	mov	eax, DWORD PTR tv139[ebp]
	push	eax
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _iIndex$[ebp]
	add	edx, 1
	mov	DWORD PTR _iIndex$[ebp], edx

; 294  : 	}

	jmp	$LN2@lGetInacti
$LN1@lGetInacti:

; 295  : 	return 1;

	mov	DWORD PTR $T219091[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _v$[ebp]
	call	?_Tidy@?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@IAEXXZ ; std::vector<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T219091[ebp]

; 296  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInactiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _v$[ebp]
	jmp	??1?$_Vector_val@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE@XZ
__ehhandler$?lGetInactiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetInactiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInactiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetInactiveResolutions
PUBLIC	??1?$BaseVector@VCvEnactProposal@@$0A@@@QAE@XZ	; BaseVector<CvEnactProposal,0>::~BaseVector<CvEnactProposal,0>
PUBLIC	??1?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvEnactProposal,2,0,297,0>::~FStaticVector<CvEnactProposal,2,0,297,0>
PUBLIC	?Free@?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvEnactProposal@@I@Z ; FStaticVector<CvEnactProposal,2,0,297,0>::Free
PUBLIC	?lProposalTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvProposal@@@Z ; CvLuaLeague::lProposalTableHelper
PUBLIC	__$ArrayPad$
EXTRN	?GetEnactProposals@CvLeague@@QBE?AV?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@XZ:PROC ; CvLeague::GetEnactProposals
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv134 = -900						; size = 4
$T219243 = -888						; size = 4
_t$217885 = -884					; size = 4
_it$217881 = -880					; size = 4
_pLeague$ = -876					; size = 4
_iIndex$ = -872						; size = 4
_v$ = -868						; size = 848
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetEnactProposals, COMDAT

; 300  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 888				; 00000378H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 301  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 302  : 
; 303  : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 304  : 	int iIndex = 1;

	mov	DWORD PTR _iIndex$[ebp], 1

; 305  : 
; 306  : #ifdef AUI_WARNING_FIXES
; 307  : 	const EnactProposalList& v = pLeague->GetEnactProposals();
; 308  : 	for (EnactProposalList::const_iterator it = v.begin(); it != v.end(); ++it)
; 309  : #else
; 310  : 	EnactProposalList v = pLeague->GetEnactProposals();

	lea	edx, DWORD PTR _v$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetEnactProposals@CvLeague@@QBE?AV?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@XZ ; CvLeague::GetEnactProposals
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 311  : 	for(EnactProposalList::iterator it = v.begin(); it != v.end(); ++it)

	mov	eax, DWORD PTR _v$[ebp]
	mov	DWORD PTR _it$217881[ebp], eax
	jmp	SHORT $LN9@lGetEnactP
$LN2@lGetEnactP:
	mov	ecx, DWORD PTR _it$217881[ebp]
	add	ecx, 416				; 000001a0H
	mov	DWORD PTR _it$217881[ebp], ecx
$LN9@lGetEnactP:
	mov	edx, DWORD PTR _v$[ebp+4]
	imul	edx, 416				; 000001a0H
	add	edx, DWORD PTR _v$[ebp]
	cmp	DWORD PTR _it$217881[ebp], edx
	je	SHORT $LN1@lGetEnactP

; 312  : #endif
; 313  : 	{
; 314  : 		lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 315  : 		const int t = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$217885[ebp], eax

; 316  : 
; 317  : 		lProposalTableHelper(L, t, (*it));

	mov	edx, DWORD PTR _it$217881[ebp]
	push	edx
	mov	eax, DWORD PTR _t$217885[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?lProposalTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvProposal@@@Z ; CvLuaLeague::lProposalTableHelper
	add	esp, 12					; 0000000cH

; 318  : 
; 319  : 		lua_rawseti(L, -2, iIndex++);

	mov	edx, DWORD PTR _iIndex$[ebp]
	mov	DWORD PTR tv134[ebp], edx
	mov	eax, DWORD PTR tv134[ebp]
	push	eax
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _iIndex$[ebp]
	add	edx, 1
	mov	DWORD PTR _iIndex$[ebp], edx

; 320  : 	}

	jmp	$LN2@lGetEnactP
$LN1@lGetEnactP:

; 321  : 	return 1;

	mov	DWORD PTR $T219243[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _v$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _v$[ebp]
	call	?Free@?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvEnactProposal@@I@Z ; FStaticVector<CvEnactProposal,2,0,297,0>::Free
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T219243[ebp]

; 322  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _v$[ebp]
	jmp	??1?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvEnactProposal,2,0,297,0>::~FStaticVector<CvEnactProposal,2,0,297,0>
__unwindfunclet$?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _v$[ebp]
	jmp	??1?$BaseVector@VCvEnactProposal@@$0A@@@QAE@XZ ; BaseVector<CvEnactProposal,0>::~BaseVector<CvEnactProposal,0>
__ehhandler$?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-892]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetEnactProposals
PUBLIC	__$ArrayPad$
EXTRN	?GetEnactProposalsOnHold@CvLeague@@QBE?AV?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@XZ:PROC ; CvLeague::GetEnactProposalsOnHold
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv134 = -900						; size = 4
$T219286 = -888						; size = 4
_t$217898 = -884					; size = 4
_it$217894 = -880					; size = 4
_pLeague$ = -876					; size = 4
_iIndex$ = -872						; size = 4
_v$ = -868						; size = 848
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetEnactProposalsOnHold, COMDAT

; 326  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 888				; 00000378H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 327  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 328  : 
; 329  : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 330  : 	int iIndex = 1;

	mov	DWORD PTR _iIndex$[ebp], 1

; 331  : 
; 332  : #ifdef AUI_WARNING_FIXES
; 333  : 	const EnactProposalList& v = pLeague->GetEnactProposalsOnHold();
; 334  : 	for (EnactProposalList::const_iterator it = v.begin(); it != v.end(); ++it)
; 335  : #else
; 336  : 	EnactProposalList v = pLeague->GetEnactProposalsOnHold();

	lea	edx, DWORD PTR _v$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetEnactProposalsOnHold@CvLeague@@QBE?AV?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@XZ ; CvLeague::GetEnactProposalsOnHold
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 337  : 	for(EnactProposalList::iterator it = v.begin(); it != v.end(); ++it)

	mov	eax, DWORD PTR _v$[ebp]
	mov	DWORD PTR _it$217894[ebp], eax
	jmp	SHORT $LN9@lGetEnactP@2
$LN2@lGetEnactP@2:
	mov	ecx, DWORD PTR _it$217894[ebp]
	add	ecx, 416				; 000001a0H
	mov	DWORD PTR _it$217894[ebp], ecx
$LN9@lGetEnactP@2:
	mov	edx, DWORD PTR _v$[ebp+4]
	imul	edx, 416				; 000001a0H
	add	edx, DWORD PTR _v$[ebp]
	cmp	DWORD PTR _it$217894[ebp], edx
	je	SHORT $LN1@lGetEnactP@2

; 338  : #endif
; 339  : 	{
; 340  : 		lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 341  : 		const int t = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$217898[ebp], eax

; 342  : 
; 343  : 		lProposalTableHelper(L, t, (*it));

	mov	edx, DWORD PTR _it$217894[ebp]
	push	edx
	mov	eax, DWORD PTR _t$217898[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?lProposalTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvProposal@@@Z ; CvLuaLeague::lProposalTableHelper
	add	esp, 12					; 0000000cH

; 344  : 
; 345  : 		lua_rawseti(L, -2, iIndex++);

	mov	edx, DWORD PTR _iIndex$[ebp]
	mov	DWORD PTR tv134[ebp], edx
	mov	eax, DWORD PTR tv134[ebp]
	push	eax
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _iIndex$[ebp]
	add	edx, 1
	mov	DWORD PTR _iIndex$[ebp], edx

; 346  : 	}

	jmp	$LN2@lGetEnactP@2
$LN1@lGetEnactP@2:

; 347  : 	return 1;

	mov	DWORD PTR $T219286[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _v$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _v$[ebp]
	call	?Free@?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvEnactProposal@@I@Z ; FStaticVector<CvEnactProposal,2,0,297,0>::Free
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T219286[ebp]

; 348  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _v$[ebp]
	jmp	??1?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvEnactProposal,2,0,297,0>::~FStaticVector<CvEnactProposal,2,0,297,0>
__unwindfunclet$?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _v$[ebp]
	jmp	??1?$BaseVector@VCvEnactProposal@@$0A@@@QAE@XZ ; BaseVector<CvEnactProposal,0>::~BaseVector<CvEnactProposal,0>
__ehhandler$?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-892]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetEnactProposalsOnHold
PUBLIC	??1?$BaseVector@VCvRepealProposal@@$0A@@@QAE@XZ	; BaseVector<CvRepealProposal,0>::~BaseVector<CvRepealProposal,0>
PUBLIC	??1?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvRepealProposal,2,0,297,0>::~FStaticVector<CvRepealProposal,2,0,297,0>
PUBLIC	?Free@?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvRepealProposal@@I@Z ; FStaticVector<CvRepealProposal,2,0,297,0>::Free
PUBLIC	??_C@_0P@JILAJOPJ@RepealDecision?$AA@		; `string'
PUBLIC	??_C@_0BD@LAPDJHLA@TargetResolutionID?$AA@	; `string'
PUBLIC	__$ArrayPad$
EXTRN	?GetRepealDecision@CvRepealProposal@@QAEPAVCvVoterDecision@@XZ:PROC ; CvRepealProposal::GetRepealDecision
EXTRN	?GetTargetResolutionID@CvRepealProposal@@QBEHXZ:PROC ; CvRepealProposal::GetTargetResolutionID
EXTRN	?GetRepealProposals@CvLeague@@QBE?AV?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@XZ:PROC ; CvLeague::GetRepealProposals
;	COMDAT ??_C@_0P@JILAJOPJ@RepealDecision?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0P@JILAJOPJ@RepealDecision?$AA@ DB 'RepealDecision', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LAPDJHLA@TargetResolutionID?$AA@
CONST	SEGMENT
??_C@_0BD@LAPDJHLA@TargetResolutionID?$AA@ DB 'TargetResolutionID', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv157 = -1488						; size = 4
tv147 = -1484						; size = 4
$T219329 = -1472					; size = 4
_t$217911 = -1468					; size = 4
_it$217907 = -1464					; size = 4
_pLeague$ = -1460					; size = 4
_iIndex$ = -1456					; size = 4
_v$ = -1452						; size = 1432
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetRepealProposals, COMDAT

; 352  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1476				; 000005c4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 353  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 354  : 
; 355  : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 356  : 	int iIndex = 1;

	mov	DWORD PTR _iIndex$[ebp], 1

; 357  : 
; 358  : #ifdef AUI_WARNING_FIXES
; 359  : 	const RepealProposalList& v = pLeague->GetRepealProposals();
; 360  : 	for (RepealProposalList::const_iterator it = v.begin(); it != v.end(); ++it)
; 361  : #else
; 362  : 	RepealProposalList v = pLeague->GetRepealProposals();

	lea	edx, DWORD PTR _v$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetRepealProposals@CvLeague@@QBE?AV?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@XZ ; CvLeague::GetRepealProposals
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 363  : 	for(RepealProposalList::iterator it = v.begin(); it != v.end(); ++it)

	mov	eax, DWORD PTR _v$[ebp]
	mov	DWORD PTR _it$217907[ebp], eax
	jmp	SHORT $LN9@lGetRepeal
$LN2@lGetRepeal:
	mov	ecx, DWORD PTR _it$217907[ebp]
	add	ecx, 708				; 000002c4H
	mov	DWORD PTR _it$217907[ebp], ecx
$LN9@lGetRepeal:
	mov	edx, DWORD PTR _v$[ebp+4]
	imul	edx, 708				; 000002c4H
	add	edx, DWORD PTR _v$[ebp]
	cmp	DWORD PTR _it$217907[ebp], edx
	je	$LN1@lGetRepeal

; 364  : #endif
; 365  : 	{
; 366  : 		lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 367  : 		const int t = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$217911[ebp], eax

; 368  : 
; 369  : 		lProposalTableHelper(L, t, (*it));

	mov	edx, DWORD PTR _it$217907[ebp]
	push	edx
	mov	eax, DWORD PTR _t$217911[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?lProposalTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvProposal@@@Z ; CvLuaLeague::lProposalTableHelper
	add	esp, 12					; 0000000cH

; 370  : 
; 371  : 		lua_pushinteger(L, (*it).GetTargetResolutionID());

	mov	ecx, DWORD PTR _it$217907[ebp]
	call	?GetTargetResolutionID@CvRepealProposal@@QBEHXZ ; CvRepealProposal::GetTargetResolutionID
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 372  : 		lua_setfield(L, t, "TargetResolutionID");

	push	OFFSET ??_C@_0BD@LAPDJHLA@TargetResolutionID?$AA@
	mov	eax, DWORD PTR _t$217911[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 373  : 
; 374  : 		lua_pushinteger(L, (*it).GetRepealDecision()->GetDecision());

	mov	ecx, DWORD PTR _it$217907[ebp]
	call	?GetRepealDecision@CvRepealProposal@@QAEPAVCvVoterDecision@@XZ ; CvRepealProposal::GetRepealDecision
	mov	DWORD PTR tv147[ebp], eax
	mov	edx, DWORD PTR tv147[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv147[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 375  : 		lua_setfield(L, t, "RepealDecision");

	push	OFFSET ??_C@_0P@JILAJOPJ@RepealDecision?$AA@
	mov	ecx, DWORD PTR _t$217911[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 376  : 
; 377  : 		lua_rawseti(L, -2, iIndex++);

	mov	eax, DWORD PTR _iIndex$[ebp]
	mov	DWORD PTR tv157[ebp], eax
	mov	ecx, DWORD PTR tv157[ebp]
	push	ecx
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _iIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _iIndex$[ebp], eax

; 378  : 	}

	jmp	$LN2@lGetRepeal
$LN1@lGetRepeal:

; 379  : 	return 1;

	mov	DWORD PTR $T219329[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _v$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _v$[ebp]
	push	edx
	lea	ecx, DWORD PTR _v$[ebp]
	call	?Free@?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvRepealProposal@@I@Z ; FStaticVector<CvRepealProposal,2,0,297,0>::Free
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T219329[ebp]

; 380  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _v$[ebp]
	jmp	??1?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvRepealProposal,2,0,297,0>::~FStaticVector<CvRepealProposal,2,0,297,0>
__unwindfunclet$?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _v$[ebp]
	jmp	??1?$BaseVector@VCvRepealProposal@@$0A@@@QAE@XZ ; BaseVector<CvRepealProposal,0>::~BaseVector<CvRepealProposal,0>
__ehhandler$?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1480]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetRepealProposals
PUBLIC	__$ArrayPad$
EXTRN	?GetRepealProposalsOnHold@CvLeague@@QBE?AV?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@XZ:PROC ; CvLeague::GetRepealProposalsOnHold
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv157 = -1488						; size = 4
tv147 = -1484						; size = 4
$T219372 = -1472					; size = 4
_t$217926 = -1468					; size = 4
_it$217922 = -1464					; size = 4
_pLeague$ = -1460					; size = 4
_iIndex$ = -1456					; size = 4
_v$ = -1452						; size = 1432
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetRepealProposalsOnHold, COMDAT

; 384  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1476				; 000005c4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 385  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 386  : 
; 387  : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 388  : 	int iIndex = 1;

	mov	DWORD PTR _iIndex$[ebp], 1

; 389  : 
; 390  : #ifdef AUI_WARNING_FIXES
; 391  : 	const RepealProposalList& v = pLeague->GetRepealProposalsOnHold();
; 392  : 	for (RepealProposalList::const_iterator it = v.begin(); it != v.end(); ++it)
; 393  : #else
; 394  : 	RepealProposalList v = pLeague->GetRepealProposalsOnHold();

	lea	edx, DWORD PTR _v$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetRepealProposalsOnHold@CvLeague@@QBE?AV?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@XZ ; CvLeague::GetRepealProposalsOnHold
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 395  : 	for(RepealProposalList::iterator it = v.begin(); it != v.end(); ++it)

	mov	eax, DWORD PTR _v$[ebp]
	mov	DWORD PTR _it$217922[ebp], eax
	jmp	SHORT $LN9@lGetRepeal@2
$LN2@lGetRepeal@2:
	mov	ecx, DWORD PTR _it$217922[ebp]
	add	ecx, 708				; 000002c4H
	mov	DWORD PTR _it$217922[ebp], ecx
$LN9@lGetRepeal@2:
	mov	edx, DWORD PTR _v$[ebp+4]
	imul	edx, 708				; 000002c4H
	add	edx, DWORD PTR _v$[ebp]
	cmp	DWORD PTR _it$217922[ebp], edx
	je	$LN1@lGetRepeal@2

; 396  : #endif
; 397  : 	{
; 398  : 		lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 399  : 		const int t = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$217926[ebp], eax

; 400  : 
; 401  : 		lProposalTableHelper(L, t, (*it));

	mov	edx, DWORD PTR _it$217922[ebp]
	push	edx
	mov	eax, DWORD PTR _t$217926[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?lProposalTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvProposal@@@Z ; CvLuaLeague::lProposalTableHelper
	add	esp, 12					; 0000000cH

; 402  : 
; 403  : 		lua_pushinteger(L, (*it).GetTargetResolutionID());

	mov	ecx, DWORD PTR _it$217922[ebp]
	call	?GetTargetResolutionID@CvRepealProposal@@QBEHXZ ; CvRepealProposal::GetTargetResolutionID
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 404  : 		lua_setfield(L, t, "TargetResolutionID");

	push	OFFSET ??_C@_0BD@LAPDJHLA@TargetResolutionID?$AA@
	mov	eax, DWORD PTR _t$217926[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 405  : 
; 406  : 		lua_pushinteger(L, (*it).GetRepealDecision()->GetDecision());

	mov	ecx, DWORD PTR _it$217922[ebp]
	call	?GetRepealDecision@CvRepealProposal@@QAEPAVCvVoterDecision@@XZ ; CvRepealProposal::GetRepealDecision
	mov	DWORD PTR tv147[ebp], eax
	mov	edx, DWORD PTR tv147[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv147[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 407  : 		lua_setfield(L, t, "RepealDecision");

	push	OFFSET ??_C@_0P@JILAJOPJ@RepealDecision?$AA@
	mov	ecx, DWORD PTR _t$217926[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 408  : 
; 409  : 		lua_rawseti(L, -2, iIndex++);

	mov	eax, DWORD PTR _iIndex$[ebp]
	mov	DWORD PTR tv157[ebp], eax
	mov	ecx, DWORD PTR tv157[ebp]
	push	ecx
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _iIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _iIndex$[ebp], eax

; 410  : 	}

	jmp	$LN2@lGetRepeal@2
$LN1@lGetRepeal@2:

; 411  : 	return 1;

	mov	DWORD PTR $T219372[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _v$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _v$[ebp]
	push	edx
	lea	ecx, DWORD PTR _v$[ebp]
	call	?Free@?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvRepealProposal@@I@Z ; FStaticVector<CvRepealProposal,2,0,297,0>::Free
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T219372[ebp]

; 412  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _v$[ebp]
	jmp	??1?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvRepealProposal,2,0,297,0>::~FStaticVector<CvRepealProposal,2,0,297,0>
__unwindfunclet$?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _v$[ebp]
	jmp	??1?$BaseVector@VCvRepealProposal@@$0A@@@QAE@XZ ; BaseVector<CvRepealProposal,0>::~BaseVector<CvRepealProposal,0>
__ehhandler$?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1480]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetRepealProposalsOnHold
PUBLIC	??1?$BaseVector@VCvActiveResolution@@$0A@@@QAE@XZ ; BaseVector<CvActiveResolution,0>::~BaseVector<CvActiveResolution,0>
PUBLIC	??1?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvActiveResolution,12,0,297,0>::~FStaticVector<CvActiveResolution,12,0,297,0>
PUBLIC	?Free@?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@IAEXPAVCvActiveResolution@@I@Z ; FStaticVector<CvActiveResolution,12,0,297,0>::Free
PUBLIC	??_C@_0M@FOCBBDDB@TurnEnacted?$AA@		; `string'
PUBLIC	?lResolutionTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvResolution@@@Z ; CvLuaLeague::lResolutionTableHelper
PUBLIC	__$ArrayPad$
EXTRN	?GetTurnEnacted@CvActiveResolution@@QBEHXZ:PROC	; CvActiveResolution::GetTurnEnacted
EXTRN	?GetActiveResolutions@CvLeague@@QBE?AV?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@XZ:PROC ; CvLeague::GetActiveResolutions
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0M@FOCBBDDB@TurnEnacted?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0M@FOCBBDDB@TurnEnacted?$AA@ DB 'TurnEnacted', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv141 = -5060						; size = 4
$T219415 = -5048					; size = 4
_t$217939 = -5044					; size = 4
_it$217935 = -5040					; size = 4
_pLeague$ = -5036					; size = 4
_iIndex$ = -5032					; size = 4
_v$ = -5028						; size = 5008
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetActiveResolutions, COMDAT

; 416  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 5048				; 000013b8H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 417  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 418  : 
; 419  : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 420  : 	int iIndex = 1;

	mov	DWORD PTR _iIndex$[ebp], 1

; 421  : 
; 422  : #ifdef AUI_WARNING_FIXES
; 423  : 	const ActiveResolutionList& v = pLeague->GetActiveResolutions();
; 424  : 	for (ActiveResolutionList::const_iterator it = v.begin(); it != v.end(); ++it)
; 425  : #else
; 426  : 	ActiveResolutionList v = pLeague->GetActiveResolutions();

	lea	edx, DWORD PTR _v$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetActiveResolutions@CvLeague@@QBE?AV?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@XZ ; CvLeague::GetActiveResolutions
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 427  : 	for(ActiveResolutionList::iterator it = v.begin(); it != v.end(); ++it)

	mov	eax, DWORD PTR _v$[ebp]
	mov	DWORD PTR _it$217935[ebp], eax
	jmp	SHORT $LN9@lGetActive
$LN2@lGetActive:
	mov	ecx, DWORD PTR _it$217935[ebp]
	add	ecx, 416				; 000001a0H
	mov	DWORD PTR _it$217935[ebp], ecx
$LN9@lGetActive:
	mov	edx, DWORD PTR _v$[ebp+4]
	imul	edx, 416				; 000001a0H
	add	edx, DWORD PTR _v$[ebp]
	cmp	DWORD PTR _it$217935[ebp], edx
	je	$LN1@lGetActive

; 428  : #endif
; 429  : 	{
; 430  : 		lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 431  : 		const int t = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$217939[ebp], eax

; 432  : 
; 433  : 		lResolutionTableHelper(L, t, (*it));

	mov	edx, DWORD PTR _it$217935[ebp]
	push	edx
	mov	eax, DWORD PTR _t$217939[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?lResolutionTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvResolution@@@Z ; CvLuaLeague::lResolutionTableHelper
	add	esp, 12					; 0000000cH

; 434  : 
; 435  : 		lua_pushinteger(L, (*it).GetTurnEnacted());

	mov	ecx, DWORD PTR _it$217935[ebp]
	call	?GetTurnEnacted@CvActiveResolution@@QBEHXZ ; CvActiveResolution::GetTurnEnacted
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 436  : 		lua_setfield(L, t, "TurnEnacted");

	push	OFFSET ??_C@_0M@FOCBBDDB@TurnEnacted?$AA@
	mov	eax, DWORD PTR _t$217939[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 437  : 
; 438  : 		lua_rawseti(L, -2, iIndex++);

	mov	edx, DWORD PTR _iIndex$[ebp]
	mov	DWORD PTR tv141[ebp], edx
	mov	eax, DWORD PTR tv141[ebp]
	push	eax
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _iIndex$[ebp]
	add	edx, 1
	mov	DWORD PTR _iIndex$[ebp], edx

; 439  : 	}

	jmp	$LN2@lGetActive
$LN1@lGetActive:

; 440  : 	return 1;

	mov	DWORD PTR $T219415[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _v$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _v$[ebp]
	call	?Free@?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@IAEXPAVCvActiveResolution@@I@Z ; FStaticVector<CvActiveResolution,12,0,297,0>::Free
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T219415[ebp]

; 441  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _v$[ebp]
	jmp	??1?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvActiveResolution,12,0,297,0>::~FStaticVector<CvActiveResolution,12,0,297,0>
__unwindfunclet$?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _v$[ebp]
	jmp	??1?$BaseVector@VCvActiveResolution@@$0A@@@QAE@XZ ; BaseVector<CvActiveResolution,0>::~BaseVector<CvActiveResolution,0>
__ehhandler$?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-5052]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetActiveResolutions
EXTRN	?IsMember@CvLeague@@QBE_NW4PlayerTypes@@@Z:PROC	; CvLeague::IsMember
; Function compile flags: /Odtp
;	COMDAT ?lIsMember@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -12						; size = 4
_bValue$ = -5						; size = 1
_ePlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsMember@CvLuaLeague@@KAHPAUlua_State@@@Z PROC	; CvLuaLeague::lIsMember, COMDAT

; 445  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 446  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 447  : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 448  : 
; 449  : 	const bool bValue = pLeague->IsMember(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?IsMember@CvLeague@@QBE_NW4PlayerTypes@@@Z ; CvLeague::IsMember
	mov	BYTE PTR _bValue$[ebp], al

; 450  : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 451  : 	return 1;

	mov	eax, 1

; 452  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsMember@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP	; CvLuaLeague::lIsMember
_TEXT	ENDS
EXTRN	?CanVote@CvLeague@@QAE_NW4PlayerTypes@@@Z:PROC	; CvLeague::CanVote
; Function compile flags: /Odtp
;	COMDAT ?lCanVote@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -12						; size = 4
_bValue$ = -5						; size = 1
_ePlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lCanVote@CvLuaLeague@@KAHPAUlua_State@@@Z PROC		; CvLuaLeague::lCanVote, COMDAT

; 456  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 457  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 458  : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 459  : 
; 460  : 	const bool bValue = pLeague->CanVote(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?CanVote@CvLeague@@QAE_NW4PlayerTypes@@@Z ; CvLeague::CanVote
	mov	BYTE PTR _bValue$[ebp], al

; 461  : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 462  : 	return 1;

	mov	eax, 1

; 463  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanVote@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP		; CvLuaLeague::lCanVote
_TEXT	ENDS
EXTRN	?GetRemainingVotesForMember@CvLeague@@QAEHW4PlayerTypes@@@Z:PROC ; CvLeague::GetRemainingVotesForMember
; Function compile flags: /Odtp
;	COMDAT ?lGetRemainingVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -12						; size = 4
_ePlayer$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetRemainingVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetRemainingVotesForMember, COMDAT

; 467  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 468  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 469  : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 470  : 
; 471  : 	const int iValue = pLeague->GetRemainingVotesForMember(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetRemainingVotesForMember@CvLeague@@QAEHW4PlayerTypes@@@Z ; CvLeague::GetRemainingVotesForMember
	mov	DWORD PTR _iValue$[ebp], eax

; 472  : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 473  : 	return 1;

	mov	eax, 1

; 474  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetRemainingVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetRemainingVotesForMember
_TEXT	ENDS
EXTRN	?GetSpentVotesForMember@CvLeague@@QAEHW4PlayerTypes@@@Z:PROC ; CvLeague::GetSpentVotesForMember
; Function compile flags: /Odtp
;	COMDAT ?lGetSpentVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -12						; size = 4
_ePlayer$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetSpentVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetSpentVotesForMember, COMDAT

; 478  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 479  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 480  : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 481  : 
; 482  : 	const int iValue = pLeague->GetSpentVotesForMember(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetSpentVotesForMember@CvLeague@@QAEHW4PlayerTypes@@@Z ; CvLeague::GetSpentVotesForMember
	mov	DWORD PTR _iValue$[ebp], eax

; 483  : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 484  : 	return 1;

	mov	eax, 1

; 485  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetSpentVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetSpentVotesForMember
_TEXT	ENDS
EXTRN	?GetCoreVotesForMember@CvLeague@@QAEHW4PlayerTypes@@@Z:PROC ; CvLeague::GetCoreVotesForMember
; Function compile flags: /Odtp
;	COMDAT ?lGetCoreVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -12						; size = 4
_ePlayer$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCoreVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetCoreVotesForMember, COMDAT

; 489  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 490  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 491  : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 492  : 
; 493  : 	const int iValue = pLeague->GetCoreVotesForMember(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetCoreVotesForMember@CvLeague@@QAEHW4PlayerTypes@@@Z ; CvLeague::GetCoreVotesForMember
	mov	DWORD PTR _iValue$[ebp], eax

; 494  : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 495  : 	return 1;

	mov	eax, 1

; 496  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCoreVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetCoreVotesForMember
_TEXT	ENDS
EXTRN	?CalculateStartingVotesForMember@CvLeague@@QAEHW4PlayerTypes@@_N@Z:PROC ; CvLeague::CalculateStartingVotesForMember
; Function compile flags: /Odtp
;	COMDAT ?lCalculateStartingVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -12						; size = 4
_ePlayer$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lCalculateStartingVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lCalculateStartingVotesForMember, COMDAT

; 500  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 501  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 502  : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 503  : 
; 504  : 	const int iValue = pLeague->CalculateStartingVotesForMember(ePlayer);

	push	0
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?CalculateStartingVotesForMember@CvLeague@@QAEHW4PlayerTypes@@_N@Z ; CvLeague::CalculateStartingVotesForMember
	mov	DWORD PTR _iValue$[ebp], eax

; 505  : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 506  : 	return 1;

	mov	eax, 1

; 507  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCalculateStartingVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lCalculateStartingVotesForMember
_TEXT	ENDS
EXTRN	?CanPropose@CvLeague@@QAE_NW4PlayerTypes@@@Z:PROC ; CvLeague::CanPropose
; Function compile flags: /Odtp
;	COMDAT ?lCanPropose@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -12						; size = 4
_bValue$ = -5						; size = 1
_ePlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lCanPropose@CvLuaLeague@@KAHPAUlua_State@@@Z PROC	; CvLuaLeague::lCanPropose, COMDAT

; 511  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 512  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 513  : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 514  : 
; 515  : 	const bool bValue = pLeague->CanPropose(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?CanPropose@CvLeague@@QAE_NW4PlayerTypes@@@Z ; CvLeague::CanPropose
	mov	BYTE PTR _bValue$[ebp], al

; 516  : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 517  : 	return 1;

	mov	eax, 1

; 518  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanPropose@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP	; CvLuaLeague::lCanPropose
_TEXT	ENDS
EXTRN	?GetRemainingProposalsForMember@CvLeague@@QAEHW4PlayerTypes@@@Z:PROC ; CvLeague::GetRemainingProposalsForMember
; Function compile flags: /Odtp
;	COMDAT ?lGetRemainingProposalsForMember@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -12						; size = 4
_ePlayer$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetRemainingProposalsForMember@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetRemainingProposalsForMember, COMDAT

; 522  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 523  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 524  : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 525  : 
; 526  : 	const int iValue = pLeague->GetRemainingProposalsForMember(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetRemainingProposalsForMember@CvLeague@@QAEHW4PlayerTypes@@@Z ; CvLeague::GetRemainingProposalsForMember
	mov	DWORD PTR _iValue$[ebp], eax

; 527  : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 528  : 	return 1;

	mov	eax, 1

; 529  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetRemainingProposalsForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetRemainingProposalsForMember
_TEXT	ENDS
EXTRN	?IsHostMember@CvLeague@@QBE_NW4PlayerTypes@@@Z:PROC ; CvLeague::IsHostMember
; Function compile flags: /Odtp
;	COMDAT ?lIsHostMember@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -12						; size = 4
_bValue$ = -5						; size = 1
_ePlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsHostMember@CvLuaLeague@@KAHPAUlua_State@@@Z PROC	; CvLuaLeague::lIsHostMember, COMDAT

; 533  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 534  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 535  : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 536  : 
; 537  : 	const bool bValue = pLeague->IsHostMember(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?IsHostMember@CvLeague@@QBE_NW4PlayerTypes@@@Z ; CvLeague::IsHostMember
	mov	BYTE PTR _bValue$[ebp], al

; 538  : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 539  : 	return 1;

	mov	eax, 1

; 540  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsHostMember@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP	; CvLuaLeague::lIsHostMember
_TEXT	ENDS
EXTRN	?GetHostMember@CvLeague@@QBE?AW4PlayerTypes@@XZ:PROC ; CvLeague::GetHostMember
; Function compile flags: /Odtp
;	COMDAT ?lGetHostMember@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -8						; size = 4
_eHost$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetHostMember@CvLuaLeague@@KAHPAUlua_State@@@Z PROC	; CvLuaLeague::lGetHostMember, COMDAT

; 544  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 545  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 546  : 	
; 547  : 	const PlayerTypes eHost = pLeague->GetHostMember();

	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetHostMember@CvLeague@@QBE?AW4PlayerTypes@@XZ ; CvLeague::GetHostMember
	mov	DWORD PTR _eHost$[ebp], eax

; 548  : 	lua_pushinteger(L, (int)eHost);

	mov	ecx, DWORD PTR _eHost$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 549  : 	return 1;

	mov	eax, 1

; 550  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetHostMember@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP	; CvLuaLeague::lGetHostMember
_TEXT	ENDS
EXTRN	?IsUnitedNations@CvLeague@@QBE_NXZ:PROC		; CvLeague::IsUnitedNations
; Function compile flags: /Odtp
;	COMDAT ?lIsUnitedNations@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -8						; size = 4
_bValue$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsUnitedNations@CvLuaLeague@@KAHPAUlua_State@@@Z PROC	; CvLuaLeague::lIsUnitedNations, COMDAT

; 554  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 555  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 556  : 
; 557  : 	const bool bValue = pLeague->IsUnitedNations();

	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?IsUnitedNations@CvLeague@@QBE_NXZ	; CvLeague::IsUnitedNations
	mov	BYTE PTR _bValue$[ebp], al

; 558  : 	lua_pushboolean(L, bValue);

	movzx	ecx, BYTE PTR _bValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 559  : 	return 1;

	mov	eax, 1

; 560  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsUnitedNations@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP	; CvLuaLeague::lIsUnitedNations
_TEXT	ENDS
EXTRN	?IsProjectActive@CvLeague@@QBE_NW4LeagueProjectTypes@@@Z:PROC ; CvLeague::IsProjectActive
; Function compile flags: /Odtp
;	COMDAT ?lIsProjectActive@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -12						; size = 4
_bValue$ = -5						; size = 1
_eLeagueProject$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsProjectActive@CvLuaLeague@@KAHPAUlua_State@@@Z PROC	; CvLuaLeague::lIsProjectActive, COMDAT

; 564  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 565  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 566  : 	const LeagueProjectTypes eLeagueProject = (LeagueProjectTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eLeagueProject$[ebp], eax

; 567  : 
; 568  : 	const bool bValue = pLeague->IsProjectActive(eLeagueProject);

	mov	edx, DWORD PTR _eLeagueProject$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?IsProjectActive@CvLeague@@QBE_NW4LeagueProjectTypes@@@Z ; CvLeague::IsProjectActive
	mov	BYTE PTR _bValue$[ebp], al

; 569  : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 570  : 	return 1;

	mov	eax, 1

; 571  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsProjectActive@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP	; CvLuaLeague::lIsProjectActive
_TEXT	ENDS
EXTRN	?IsProjectComplete@CvLeague@@QBE_NW4LeagueProjectTypes@@@Z:PROC ; CvLeague::IsProjectComplete
; Function compile flags: /Odtp
;	COMDAT ?lIsProjectComplete@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -12						; size = 4
_bValue$ = -5						; size = 1
_eLeagueProject$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsProjectComplete@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lIsProjectComplete, COMDAT

; 575  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 576  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 577  : 	const LeagueProjectTypes eLeagueProject = (LeagueProjectTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eLeagueProject$[ebp], eax

; 578  : 
; 579  : 	const bool bValue = pLeague->IsProjectComplete(eLeagueProject);

	mov	edx, DWORD PTR _eLeagueProject$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?IsProjectComplete@CvLeague@@QBE_NW4LeagueProjectTypes@@@Z ; CvLeague::IsProjectComplete
	mov	BYTE PTR _bValue$[ebp], al

; 580  : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 581  : 	return 1;

	mov	eax, 1

; 582  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsProjectComplete@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lIsProjectComplete
_TEXT	ENDS
EXTRN	?GetProjectCostPerPlayer@CvLeague@@QBEHW4LeagueProjectTypes@@@Z:PROC ; CvLeague::GetProjectCostPerPlayer
; Function compile flags: /Odtp
;	COMDAT ?lGetProjectCostPerPlayer@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -12						; size = 4
_iValue$ = -8						; size = 4
_eLeagueProject$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetProjectCostPerPlayer@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetProjectCostPerPlayer, COMDAT

; 587  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 588  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 589  : 	const LeagueProjectTypes eLeagueProject = (LeagueProjectTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eLeagueProject$[ebp], eax

; 590  : 
; 591  : 	const int iValue = pLeague->GetProjectCostPerPlayer(eLeagueProject);

	mov	edx, DWORD PTR _eLeagueProject$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetProjectCostPerPlayer@CvLeague@@QBEHW4LeagueProjectTypes@@@Z ; CvLeague::GetProjectCostPerPlayer
	mov	DWORD PTR _iValue$[ebp], eax

; 592  : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 593  : 	return 1;

	mov	eax, 1

; 594  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetProjectCostPerPlayer@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetProjectCostPerPlayer
_TEXT	ENDS
EXTRN	?GetProjectBuildingCostPerPlayer@CvLeague@@QBEHW4BuildingTypes@@@Z:PROC ; CvLeague::GetProjectBuildingCostPerPlayer
; Function compile flags: /Odtp
;	COMDAT ?lGetProjectBuildingCostPerPlayer@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -12						; size = 4
_iValue$ = -8						; size = 4
_eRewardBuilding$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetProjectBuildingCostPerPlayer@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetProjectBuildingCostPerPlayer, COMDAT

; 598  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 599  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 600  : 	const BuildingTypes eRewardBuilding = (BuildingTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eRewardBuilding$[ebp], eax

; 601  : 
; 602  : 	const int iValue = pLeague->GetProjectBuildingCostPerPlayer(eRewardBuilding);

	mov	edx, DWORD PTR _eRewardBuilding$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetProjectBuildingCostPerPlayer@CvLeague@@QBEHW4BuildingTypes@@@Z ; CvLeague::GetProjectBuildingCostPerPlayer
	mov	DWORD PTR _iValue$[ebp], eax

; 603  : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 604  : 	return 1;

	mov	eax, 1

; 605  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetProjectBuildingCostPerPlayer@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetProjectBuildingCostPerPlayer
_TEXT	ENDS
EXTRN	?GetProjectCost@CvLeague@@QBEHW4LeagueProjectTypes@@@Z:PROC ; CvLeague::GetProjectCost
; Function compile flags: /Odtp
;	COMDAT ?lGetProjectCost@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -12						; size = 4
_iValue$ = -8						; size = 4
_eLeagueProject$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetProjectCost@CvLuaLeague@@KAHPAUlua_State@@@Z PROC	; CvLuaLeague::lGetProjectCost, COMDAT

; 609  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 610  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 611  : 	const LeagueProjectTypes eLeagueProject = (LeagueProjectTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eLeagueProject$[ebp], eax

; 612  : 
; 613  : 	const int iValue = pLeague->GetProjectCost(eLeagueProject);

	mov	edx, DWORD PTR _eLeagueProject$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetProjectCost@CvLeague@@QBEHW4LeagueProjectTypes@@@Z ; CvLeague::GetProjectCost
	mov	DWORD PTR _iValue$[ebp], eax

; 614  : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 615  : 	return 1;

	mov	eax, 1

; 616  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetProjectCost@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP	; CvLuaLeague::lGetProjectCost
_TEXT	ENDS
EXTRN	?GetMemberContribution@CvLeague@@QBEHW4PlayerTypes@@W4LeagueProjectTypes@@@Z:PROC ; CvLeague::GetMemberContribution
; Function compile flags: /Odtp
;	COMDAT ?lGetMemberContribution@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -16						; size = 4
_ePlayer$ = -12						; size = 4
_iValue$ = -8						; size = 4
_eLeagueProject$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetMemberContribution@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetMemberContribution, COMDAT

; 620  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 621  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 622  : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 623  : 	const LeagueProjectTypes eLeagueProject = (LeagueProjectTypes) lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eLeagueProject$[ebp], eax

; 624  : 
; 625  : 	const int iValue = pLeague->GetMemberContribution(ePlayer, eLeagueProject);

	mov	eax, DWORD PTR _eLeagueProject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetMemberContribution@CvLeague@@QBEHW4PlayerTypes@@W4LeagueProjectTypes@@@Z ; CvLeague::GetMemberContribution
	mov	DWORD PTR _iValue$[ebp], eax

; 626  : 	lua_pushinteger(L, iValue);

	mov	edx, DWORD PTR _iValue$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 627  : 	return 1;

	mov	eax, 1

; 628  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMemberContribution@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetMemberContribution
_TEXT	ENDS
EXTRN	?GetMemberContributionTier@CvLeague@@QAE?AW4ContributionTier@1@W4PlayerTypes@@W4LeagueProjectTypes@@@Z:PROC ; CvLeague::GetMemberContributionTier
; Function compile flags: /Odtp
;	COMDAT ?lGetMemberContributionTier@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -16						; size = 4
_ePlayer$ = -12						; size = 4
_iValue$ = -8						; size = 4
_eLeagueProject$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetMemberContributionTier@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetMemberContributionTier, COMDAT

; 632  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 633  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 634  : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 635  : 	const LeagueProjectTypes eLeagueProject = (LeagueProjectTypes) lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eLeagueProject$[ebp], eax

; 636  : 
; 637  : 	const int iValue = pLeague->GetMemberContributionTier(ePlayer, eLeagueProject);

	mov	eax, DWORD PTR _eLeagueProject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetMemberContributionTier@CvLeague@@QAE?AW4ContributionTier@1@W4PlayerTypes@@W4LeagueProjectTypes@@@Z ; CvLeague::GetMemberContributionTier
	mov	DWORD PTR _iValue$[ebp], eax

; 638  : 	lua_pushinteger(L, iValue);

	mov	edx, DWORD PTR _iValue$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 639  : 	return 1;

	mov	eax, 1

; 640  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMemberContributionTier@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetMemberContributionTier
_TEXT	ENDS
EXTRN	?GetContributionTierThreshold@CvLeague@@QAEMW4ContributionTier@1@W4LeagueProjectTypes@@@Z:PROC ; CvLeague::GetContributionTierThreshold
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp
;	COMDAT ?lGetContributionTierThreshold@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -20						; size = 4
_eTier$ = -16						; size = 4
_fValue$ = -12						; size = 4
_iValue$ = -8						; size = 4
_eLeagueProject$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetContributionTierThreshold@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetContributionTierThreshold, COMDAT

; 644  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 645  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 646  : 	const CvLeague::ContributionTier eTier = (CvLeague::ContributionTier) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eTier$[ebp], eax

; 647  : 	const LeagueProjectTypes eLeagueProject = (LeagueProjectTypes) lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eLeagueProject$[ebp], eax

; 648  : 
; 649  : 	float fValue = pLeague->GetContributionTierThreshold(eTier, eLeagueProject);

	mov	eax, DWORD PTR _eLeagueProject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eTier$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetContributionTierThreshold@CvLeague@@QAEMW4ContributionTier@1@W4LeagueProjectTypes@@@Z ; CvLeague::GetContributionTierThreshold
	fstp	DWORD PTR _fValue$[ebp]

; 650  : 	const int iValue = (int) fValue;

	cvttss2si edx, DWORD PTR _fValue$[ebp]
	mov	DWORD PTR _iValue$[ebp], edx

; 651  : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 652  : 	return 1;

	mov	eax, 1

; 653  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetContributionTierThreshold@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetContributionTierThreshold
_TEXT	ENDS
EXTRN	?GetArtsyGreatPersonRateModifier@CvLeague@@QAEHXZ:PROC ; CvLeague::GetArtsyGreatPersonRateModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetArtsyGreatPersonRateModifier@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetArtsyGreatPersonRateModifier@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetArtsyGreatPersonRateModifier, COMDAT

; 657  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 658  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 659  : 
; 660  : 	int iValue = pLeague->GetArtsyGreatPersonRateModifier();

	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetArtsyGreatPersonRateModifier@CvLeague@@QAEHXZ ; CvLeague::GetArtsyGreatPersonRateModifier
	mov	DWORD PTR _iValue$[ebp], eax

; 661  : 	lua_pushinteger(L, iValue);

	mov	ecx, DWORD PTR _iValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 662  : 	return 1;

	mov	eax, 1

; 663  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetArtsyGreatPersonRateModifier@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetArtsyGreatPersonRateModifier
_TEXT	ENDS
EXTRN	?GetScienceyGreatPersonRateModifier@CvLeague@@QAEHXZ:PROC ; CvLeague::GetScienceyGreatPersonRateModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetScienceyGreatPersonRateModifier@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pLeague$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetScienceyGreatPersonRateModifier@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetScienceyGreatPersonRateModifier, COMDAT

; 667  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 668  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 669  : 
; 670  : 	int iValue = pLeague->GetScienceyGreatPersonRateModifier();

	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetScienceyGreatPersonRateModifier@CvLeague@@QAEHXZ ; CvLeague::GetScienceyGreatPersonRateModifier
	mov	DWORD PTR _iValue$[ebp], eax

; 671  : 	lua_pushinteger(L, iValue);

	mov	ecx, DWORD PTR _iValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 672  : 	return 1;

	mov	eax, 1

; 673  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetScienceyGreatPersonRateModifier@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetScienceyGreatPersonRateModifier
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?GetResolutionName@CvLeague@@QAE?AVCvString@@W4ResolutionTypes@@HH_N@Z:PROC ; CvLeague::GetResolutionName
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T219502 = -68						; size = 4
_pLeague$ = -64						; size = 4
_iResolutionID$ = -60					; size = 4
_iProposerChoice$ = -56					; size = 4
_eResolution$ = -52					; size = 4
_bIncludePrefix$ = -45					; size = 1
_sValue$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetResolutionName, COMDAT

; 677  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 678  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 679  : 	const ResolutionTypes eResolution = (ResolutionTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eResolution$[ebp], eax

; 680  : 	const int iResolutionID = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iResolutionID$[ebp], eax

; 681  : 	const int iProposerChoice = lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iProposerChoice$[ebp], eax

; 682  : 	const bool bIncludePrefix = lua_toboolean(L, 5);

	push	5
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bIncludePrefix$[ebp], dl

; 683  : 
; 684  : 	CvString sValue = pLeague->GetResolutionName(eResolution, iResolutionID, iProposerChoice, bIncludePrefix);

	movzx	eax, BYTE PTR _bIncludePrefix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iProposerChoice$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iResolutionID$[ebp]
	push	edx
	mov	eax, DWORD PTR _eResolution$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sValue$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetResolutionName@CvLeague@@QAE?AVCvString@@W4ResolutionTypes@@HH_N@Z ; CvLeague::GetResolutionName
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 685  : 	lua_pushstring(L, sValue.c_str());

	lea	ecx, DWORD PTR _sValue$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 686  : 	return 1;

	mov	DWORD PTR $T219502[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sValue$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T219502[ebp]

; 687  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sValue$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetResolutionName
PUBLIC	__$ArrayPad$
EXTRN	?GetResolutionDetails@CvLeague@@QAE?AVCvString@@W4ResolutionTypes@@W4PlayerTypes@@HH@Z:PROC ; CvLeague::GetResolutionDetails
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T219517 = -68						; size = 4
_pLeague$ = -64						; size = 4
_iResolutionID$ = -60					; size = 4
_iProposerChoice$ = -56					; size = 4
_eResolution$ = -52					; size = 4
_eObserver$ = -48					; size = 4
_sValue$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetResolutionDetails, COMDAT

; 691  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 692  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 693  : 	const ResolutionTypes eResolution = (ResolutionTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eResolution$[ebp], eax

; 694  : 	const PlayerTypes eObserver = (PlayerTypes) lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eObserver$[ebp], eax

; 695  : 	const int iResolutionID = lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iResolutionID$[ebp], eax

; 696  : 	const int iProposerChoice = lua_tointeger(L, 5);

	push	5
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iProposerChoice$[ebp], eax

; 697  : 
; 698  : 	CvString sValue = pLeague->GetResolutionDetails(eResolution, eObserver, iResolutionID, iProposerChoice);

	mov	edx, DWORD PTR _iProposerChoice$[ebp]
	push	edx
	mov	eax, DWORD PTR _iResolutionID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eObserver$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eResolution$[ebp]
	push	edx
	lea	eax, DWORD PTR _sValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetResolutionDetails@CvLeague@@QAE?AVCvString@@W4ResolutionTypes@@W4PlayerTypes@@HH@Z ; CvLeague::GetResolutionDetails
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 699  : 	lua_pushstring(L, sValue.c_str());

	lea	ecx, DWORD PTR _sValue$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 700  : 	return 1;

	mov	DWORD PTR $T219517[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sValue$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T219517[ebp]

; 701  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sValue$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetResolutionDetails
PUBLIC	__$ArrayPad$
EXTRN	?GetMemberDetails@CvLeague@@QAE?AVCvString@@W4PlayerTypes@@0@Z:PROC ; CvLeague::GetMemberDetails
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T219532 = -60						; size = 4
_pLeague$ = -56						; size = 4
_eMember$ = -52						; size = 4
_eObserver$ = -48					; size = 4
_sValue$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetMemberDetails, COMDAT

; 705  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 706  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 707  : 	const PlayerTypes eMember = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMember$[ebp], eax

; 708  : 	const PlayerTypes eObserver = (PlayerTypes) lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eObserver$[ebp], eax

; 709  : 
; 710  : 	CvString sValue = pLeague->GetMemberDetails(eMember, eObserver);

	mov	eax, DWORD PTR _eObserver$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eMember$[ebp]
	push	ecx
	lea	edx, DWORD PTR _sValue$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetMemberDetails@CvLeague@@QAE?AVCvString@@W4PlayerTypes@@0@Z ; CvLeague::GetMemberDetails
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 711  : 	lua_pushstring(L, sValue.c_str());

	lea	ecx, DWORD PTR _sValue$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 712  : 	return 1;

	mov	DWORD PTR $T219532[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sValue$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T219532[ebp]

; 713  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sValue$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetMemberDetails
PUBLIC	__$ArrayPad$
EXTRN	?GetProjectDetails@CvLeague@@QAE?AVCvString@@W4LeagueProjectTypes@@W4PlayerTypes@@@Z:PROC ; CvLeague::GetProjectDetails
EXTRN	_luaL_optinteger:PROC
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T219547 = -60						; size = 4
_pLeague$ = -56						; size = 4
_eProject$ = -52					; size = 4
_eObserver$ = -48					; size = 4
_sValue$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetProjectDetails, COMDAT

; 717  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 718  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 719  : 	const LeagueProjectTypes eProject = (LeagueProjectTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eProject$[ebp], eax

; 720  : 	const PlayerTypes eObserver = (PlayerTypes) luaL_optint(L, 3, NO_PLAYER);

	push	-1
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _eObserver$[ebp], eax

; 721  : 
; 722  : 	CvString sValue = pLeague->GetProjectDetails(eProject, eObserver);

	mov	eax, DWORD PTR _eObserver$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eProject$[ebp]
	push	ecx
	lea	edx, DWORD PTR _sValue$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetProjectDetails@CvLeague@@QAE?AVCvString@@W4LeagueProjectTypes@@W4PlayerTypes@@@Z ; CvLeague::GetProjectDetails
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 723  : 	lua_pushstring(L, sValue.c_str());

	lea	ecx, DWORD PTR _sValue$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 724  : 	return 1;

	mov	DWORD PTR $T219547[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sValue$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T219547[ebp]

; 725  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sValue$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetProjectDetails
PUBLIC	__$ArrayPad$
EXTRN	?GetProjectRewardTierDetails@CvLeague@@QAE?AVCvString@@HW4LeagueProjectTypes@@W4PlayerTypes@@@Z:PROC ; CvLeague::GetProjectRewardTierDetails
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T219562 = -64						; size = 4
_pLeague$ = -60						; size = 4
_eProject$ = -56					; size = 4
_eObserver$ = -52					; size = 4
_iTier$ = -48						; size = 4
_sValue$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetProjectRewardTierDetails, COMDAT

; 729  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 52					; 00000034H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 730  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 731  : 	const int iTier = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iTier$[ebp], eax

; 732  : 	const LeagueProjectTypes eProject = (LeagueProjectTypes) lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eProject$[ebp], eax

; 733  : 	const PlayerTypes eObserver = (PlayerTypes) luaL_optint(L, 4, NO_PLAYER);

	push	-1
	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _eObserver$[ebp], eax

; 734  : 
; 735  : 	CvString sValue = pLeague->GetProjectRewardTierDetails(iTier, eProject, eObserver);

	mov	ecx, DWORD PTR _eObserver$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eProject$[ebp]
	push	edx
	mov	eax, DWORD PTR _iTier$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sValue$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetProjectRewardTierDetails@CvLeague@@QAE?AVCvString@@HW4LeagueProjectTypes@@W4PlayerTypes@@@Z ; CvLeague::GetProjectRewardTierDetails
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 736  : 	lua_pushstring(L, sValue.c_str());

	lea	ecx, DWORD PTR _sValue$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 737  : 	return 1;

	mov	DWORD PTR $T219562[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sValue$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T219562[ebp]

; 738  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sValue$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetProjectRewardTierDetails
PUBLIC	??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ; std::_Vector_val<CvString,std::allocator<CvString> >::~_Vector_val<CvString,std::allocator<CvString> >
PUBLIC	??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ; std::vector<CvString,std::allocator<CvString> >::~vector<CvString,std::allocator<CvString> >
PUBLIC	?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ ; std::vector<CvString,std::allocator<CvString> >::_Tidy
PUBLIC	__$ArrayPad$
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:PROC
EXTRN	?GetCurrentEffectsSummary@CvLeague@@QAE?AV?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@W4PlayerTypes@@@Z:PROC ; CvLeague::GetCurrentEffectsSummary
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z$4
__ehfuncinfo$?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T219586 = -84						; size = 4
$T219577 = -80						; size = 4
_s$218169 = -76						; size = 28
__$ArrayPad$ = -48					; size = 4
_i$218165 = -44						; size = 4
_pLeague$ = -40						; size = 4
_vsEffects$ = -36					; size = 16
_t$ = -20						; size = 4
_eObserver$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetCurrentEffectsSummary, COMDAT

; 742  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 108				; 0000006cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 743  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 744  : 	const PlayerTypes eObserver = (PlayerTypes) luaL_optint(L, 2, NO_PLAYER);

	push	-1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _eObserver$[ebp], eax

; 745  : 
; 746  : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 747  : 	const int t = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$[ebp], eax

; 748  : #ifdef AUI_WARNING_FIXES
; 749  : 	const std::vector<CvString>& vsEffects = pLeague->GetCurrentEffectsSummary(eObserver);
; 750  : #else
; 751  : 	std::vector<CvString> vsEffects = pLeague->GetCurrentEffectsSummary(eObserver);

	mov	ecx, DWORD PTR _eObserver$[ebp]
	push	ecx
	lea	edx, DWORD PTR _vsEffects$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetCurrentEffectsSummary@CvLeague@@QAE?AV?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@W4PlayerTypes@@@Z ; CvLeague::GetCurrentEffectsSummary
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 752  : #endif
; 753  : 	for(uint i = 0; i < vsEffects.size(); i++)

	mov	DWORD PTR _i$218165[ebp], 0
	jmp	SHORT $LN8@lGetCurren
$LN2@lGetCurren:
	mov	eax, DWORD PTR _i$218165[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218165[ebp], eax
$LN8@lGetCurren:
	mov	eax, DWORD PTR _vsEffects$[ebp+8]
	sub	eax, DWORD PTR _vsEffects$[ebp+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	cmp	DWORD PTR _i$218165[ebp], eax
	jae	SHORT $LN1@lGetCurren

; 754  : 	{
; 755  : 		const CvString s = vsEffects[i];

	mov	edx, DWORD PTR _i$218165[ebp]
	imul	edx, 28					; 0000001cH
	add	edx, DWORD PTR _vsEffects$[ebp+4]
	mov	DWORD PTR $T219586[ebp], edx
	mov	eax, DWORD PTR $T219586[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$218169[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 756  : 		lua_pushstring(L, s);

	lea	ecx, DWORD PTR _s$218169[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 757  : 		lua_rawseti(L, t, i + 1);

	mov	edx, DWORD PTR _i$218165[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH

; 758  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _s$218169[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	SHORT $LN2@lGetCurren
$LN1@lGetCurren:

; 759  : 
; 760  : 	return 1;

	mov	DWORD PTR $T219577[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _vsEffects$[ebp]
	call	?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ ; std::vector<CvString,std::allocator<CvString> >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T219577[ebp]

; 761  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _vsEffects$[ebp]
	jmp	??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ; std::vector<CvString,std::allocator<CvString> >::~vector<CvString,std::allocator<CvString> >
__unwindfunclet$?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _s$218169[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z$4:
	lea	ecx, DWORD PTR _vsEffects$[ebp]
	jmp	??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
__ehhandler$?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-112]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetCurrentEffectsSummary
PUBLIC	__$ArrayPad$
EXTRN	?GetLeagueSplashTitle@CvLeague@@QAE?AVCvString@@W4LeagueSpecialSessionTypes@@_N@Z:PROC ; CvLeague::GetLeagueSplashTitle
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T219728 = -60						; size = 4
_pLeague$ = -56						; size = 4
_eGoverningSpecialSession$ = -52			; size = 4
_bJustFounded$ = -45					; size = 1
_sValue$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetLeagueSplashTitle, COMDAT

; 765  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 766  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 767  : 	const LeagueSpecialSessionTypes eGoverningSpecialSession = (LeagueSpecialSessionTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eGoverningSpecialSession$[ebp], eax

; 768  : 	const bool bJustFounded = lua_toboolean(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bJustFounded$[ebp], al

; 769  : 
; 770  : 	CvString sValue = pLeague->GetLeagueSplashTitle(eGoverningSpecialSession, bJustFounded);

	movzx	ecx, BYTE PTR _bJustFounded$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eGoverningSpecialSession$[ebp]
	push	edx
	lea	eax, DWORD PTR _sValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetLeagueSplashTitle@CvLeague@@QAE?AVCvString@@W4LeagueSpecialSessionTypes@@_N@Z ; CvLeague::GetLeagueSplashTitle
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 771  : 	lua_pushstring(L, sValue.c_str());

	lea	ecx, DWORD PTR _sValue$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 772  : 	return 1;

	mov	DWORD PTR $T219728[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sValue$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T219728[ebp]

; 773  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sValue$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetLeagueSplashTitle
PUBLIC	__$ArrayPad$
EXTRN	?GetLeagueSplashDescription@CvLeague@@QAE?AVCvString@@W4LeagueSpecialSessionTypes@@_N@Z:PROC ; CvLeague::GetLeagueSplashDescription
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T219743 = -60						; size = 4
_pLeague$ = -56						; size = 4
_eGoverningSpecialSession$ = -52			; size = 4
_bJustFounded$ = -45					; size = 1
_sValue$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetLeagueSplashDescription, COMDAT

; 777  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 778  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 779  : 	const LeagueSpecialSessionTypes eGoverningSpecialSession = (LeagueSpecialSessionTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eGoverningSpecialSession$[ebp], eax

; 780  : 	const bool bJustFounded = lua_toboolean(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bJustFounded$[ebp], al

; 781  : 
; 782  : 	CvString sValue = pLeague->GetLeagueSplashDescription(eGoverningSpecialSession, bJustFounded);

	movzx	ecx, BYTE PTR _bJustFounded$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eGoverningSpecialSession$[ebp]
	push	edx
	lea	eax, DWORD PTR _sValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetLeagueSplashDescription@CvLeague@@QAE?AVCvString@@W4LeagueSpecialSessionTypes@@_N@Z ; CvLeague::GetLeagueSplashDescription
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 783  : 	lua_pushstring(L, sValue.c_str());

	lea	ecx, DWORD PTR _sValue$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 784  : 	return 1;

	mov	DWORD PTR $T219743[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sValue$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T219743[ebp]

; 785  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sValue$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetLeagueSplashDescription
PUBLIC	__$ArrayPad$
EXTRN	?GetLeagueSplashThisEraDetails@CvLeague@@QAE?AVCvString@@W4LeagueSpecialSessionTypes@@_N@Z:PROC ; CvLeague::GetLeagueSplashThisEraDetails
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T219758 = -60						; size = 4
_pLeague$ = -56						; size = 4
_eGoverningSpecialSession$ = -52			; size = 4
_bJustFounded$ = -45					; size = 1
_sValue$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetLeagueSplashThisEraDetails, COMDAT

; 789  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 790  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 791  : 	const LeagueSpecialSessionTypes eGoverningSpecialSession = (LeagueSpecialSessionTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eGoverningSpecialSession$[ebp], eax

; 792  : 	const bool bJustFounded = lua_toboolean(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bJustFounded$[ebp], al

; 793  : 
; 794  : 	CvString sValue = pLeague->GetLeagueSplashThisEraDetails(eGoverningSpecialSession, bJustFounded);

	movzx	ecx, BYTE PTR _bJustFounded$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eGoverningSpecialSession$[ebp]
	push	edx
	lea	eax, DWORD PTR _sValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetLeagueSplashThisEraDetails@CvLeague@@QAE?AVCvString@@W4LeagueSpecialSessionTypes@@_N@Z ; CvLeague::GetLeagueSplashThisEraDetails
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 795  : 	lua_pushstring(L, sValue.c_str());

	lea	ecx, DWORD PTR _sValue$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 796  : 	return 1;

	mov	DWORD PTR $T219758[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sValue$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T219758[ebp]

; 797  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sValue$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetLeagueSplashThisEraDetails
PUBLIC	__$ArrayPad$
EXTRN	?GetLeagueSplashNextEraDetails@CvLeague@@QAE?AVCvString@@W4LeagueSpecialSessionTypes@@_N@Z:PROC ; CvLeague::GetLeagueSplashNextEraDetails
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T219773 = -60						; size = 4
_pLeague$ = -56						; size = 4
_eGoverningSpecialSession$ = -52			; size = 4
_bJustFounded$ = -45					; size = 1
_sValue$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetLeagueSplashNextEraDetails, COMDAT

; 801  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 802  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 803  : 	const LeagueSpecialSessionTypes eGoverningSpecialSession = (LeagueSpecialSessionTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eGoverningSpecialSession$[ebp], eax

; 804  : 	const bool bJustFounded = lua_toboolean(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bJustFounded$[ebp], al

; 805  : 
; 806  : 	CvString sValue = pLeague->GetLeagueSplashNextEraDetails(eGoverningSpecialSession, bJustFounded);

	movzx	ecx, BYTE PTR _bJustFounded$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eGoverningSpecialSession$[ebp]
	push	edx
	lea	eax, DWORD PTR _sValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetLeagueSplashNextEraDetails@CvLeague@@QAE?AVCvString@@W4LeagueSpecialSessionTypes@@_N@Z ; CvLeague::GetLeagueSplashNextEraDetails
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 807  : 	lua_pushstring(L, sValue.c_str());

	lea	ecx, DWORD PTR _sValue$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 808  : 	return 1;

	mov	DWORD PTR $T219773[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sValue$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T219773[ebp]

; 809  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sValue$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetLeagueSplashNextEraDetails
PUBLIC	__$ArrayPad$
EXTRN	?GetGreatPersonRateModifierDetails@CvLeague@@QAE?AVCvString@@W4UnitClassTypes@@@Z:PROC ; CvLeague::GetGreatPersonRateModifierDetails
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T219788 = -56						; size = 4
_pLeague$ = -52						; size = 4
_eGreatPersonClass$ = -48				; size = 4
_sValue$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetGreatPersonRateModifierDetails, COMDAT

; 813  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 814  : 	CvLeague* pLeague = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLeague$[ebp], eax

; 815  : 	const UnitClassTypes eGreatPersonClass = (UnitClassTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eGreatPersonClass$[ebp], eax

; 816  : 
; 817  : 	CvString sValue = pLeague->GetGreatPersonRateModifierDetails(eGreatPersonClass);

	mov	edx, DWORD PTR _eGreatPersonClass$[ebp]
	push	edx
	lea	eax, DWORD PTR _sValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?GetGreatPersonRateModifierDetails@CvLeague@@QAE?AVCvString@@W4UnitClassTypes@@@Z ; CvLeague::GetGreatPersonRateModifierDetails
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 818  : 	lua_pushstring(L, sValue.c_str());

	lea	ecx, DWORD PTR _sValue$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 819  : 	return 1;

	mov	DWORD PTR $T219788[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sValue$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T219788[ebp]

; 820  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sValue$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetGreatPersonRateModifierDetails
PUBLIC	??_C@_0BB@LPAJHOKG@ProposerDecision?$AA@	; `string'
PUBLIC	??_C@_0O@OCAEMALA@VoterDecision?$AA@		; `string'
PUBLIC	??_C@_02OLOABKKD@ID?$AA@			; `string'
EXTRN	?GetProposerDecision@CvResolution@@QAEPAVCvProposerDecision@@XZ:PROC ; CvResolution::GetProposerDecision
EXTRN	?GetVoterDecision@CvResolution@@QAEPAVCvVoterDecision@@XZ:PROC ; CvResolution::GetVoterDecision
EXTRN	?GetType@CvResolution@@QBE?AW4ResolutionTypes@@XZ:PROC ; CvResolution::GetType
EXTRN	?GetID@CvResolution@@QBEHXZ:PROC		; CvResolution::GetID
;	COMDAT ??_C@_0BB@LPAJHOKG@ProposerDecision?$AA@
CONST	SEGMENT
??_C@_0BB@LPAJHOKG@ProposerDecision?$AA@ DB 'ProposerDecision', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OCAEMALA@VoterDecision?$AA@
CONST	SEGMENT
??_C@_0O@OCAEMALA@VoterDecision?$AA@ DB 'VoterDecision', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02OLOABKKD@ID?$AA@
CONST	SEGMENT
??_C@_02OLOABKKD@ID?$AA@ DB 'ID', 00H			; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?lResolutionTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvResolution@@@Z
_TEXT	SEGMENT
tv133 = -8						; size = 4
tv85 = -4						; size = 4
_L$ = 8							; size = 4
_iTop$ = 12						; size = 4
_resolution$ = 16					; size = 4
?lResolutionTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvResolution@@@Z PROC ; CvLuaLeague::lResolutionTableHelper, COMDAT

; 829  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 830  : 	lua_pushinteger(L, resolution.GetID());

	mov	ecx, DWORD PTR _resolution$[ebp]
	call	?GetID@CvResolution@@QBEHXZ		; CvResolution::GetID
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 831  : 	lua_setfield(L, iTop, "ID");

	push	OFFSET ??_C@_02OLOABKKD@ID?$AA@
	mov	ecx, DWORD PTR _iTop$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 832  : 	
; 833  : 	lua_pushinteger(L, resolution.GetType());

	mov	ecx, DWORD PTR _resolution$[ebp]
	call	?GetType@CvResolution@@QBE?AW4ResolutionTypes@@XZ ; CvResolution::GetType
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 834  : 	lua_setfield(L, iTop, "Type");

	push	OFFSET ??_C@_04KOACHJEN@Type?$AA@
	mov	ecx, DWORD PTR _iTop$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 835  : 
; 836  : 	lua_pushinteger(L, resolution.GetVoterDecision()->GetDecision());

	mov	ecx, DWORD PTR _resolution$[ebp]
	call	?GetVoterDecision@CvResolution@@QAEPAVCvVoterDecision@@XZ ; CvResolution::GetVoterDecision
	mov	DWORD PTR tv85[ebp], eax
	mov	eax, DWORD PTR tv85[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv85[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 837  : 	lua_setfield(L, iTop, "VoterDecision");

	push	OFFSET ??_C@_0O@OCAEMALA@VoterDecision?$AA@
	mov	edx, DWORD PTR _iTop$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 838  : 
; 839  : 	lua_pushinteger(L, resolution.GetProposerDecision()->GetDecision());

	mov	ecx, DWORD PTR _resolution$[ebp]
	call	?GetProposerDecision@CvResolution@@QAEPAVCvProposerDecision@@XZ ; CvResolution::GetProposerDecision
	mov	DWORD PTR tv133[ebp], eax
	mov	ecx, DWORD PTR tv133[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv133[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 840  : 	lua_setfield(L, iTop, "ProposerDecision");

	push	OFFSET ??_C@_0BB@LPAJHOKG@ProposerDecision?$AA@
	mov	edx, DWORD PTR _iTop$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 841  : 
; 842  : 	return 0;

	xor	eax, eax

; 843  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lResolutionTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvResolution@@@Z ENDP ; CvLuaLeague::lResolutionTableHelper
_TEXT	ENDS
PUBLIC	??_C@_0P@POABIOJ@ProposalPlayer?$AA@		; `string'
EXTRN	?GetProposalPlayer@CvProposal@@QBE?AW4PlayerTypes@@XZ:PROC ; CvProposal::GetProposalPlayer
;	COMDAT ??_C@_0P@POABIOJ@ProposalPlayer?$AA@
CONST	SEGMENT
??_C@_0P@POABIOJ@ProposalPlayer?$AA@ DB 'ProposalPlayer', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?lProposalTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvProposal@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_iTop$ = 12						; size = 4
_proposal$ = 16						; size = 4
?lProposalTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvProposal@@@Z PROC ; CvLuaLeague::lProposalTableHelper, COMDAT

; 850  : {

	push	ebp
	mov	ebp, esp

; 851  : 	lResolutionTableHelper(L, iTop, proposal);

	mov	eax, DWORD PTR _proposal$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iTop$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?lResolutionTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvResolution@@@Z ; CvLuaLeague::lResolutionTableHelper
	add	esp, 12					; 0000000cH

; 852  : 
; 853  : 	lua_pushinteger(L, proposal.GetProposalPlayer());

	mov	ecx, DWORD PTR _proposal$[ebp]
	call	?GetProposalPlayer@CvProposal@@QBE?AW4PlayerTypes@@XZ ; CvProposal::GetProposalPlayer
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 854  : 	lua_setfield(L, iTop, "ProposalPlayer");

	push	OFFSET ??_C@_0P@POABIOJ@ProposalPlayer?$AA@
	mov	ecx, DWORD PTR _iTop$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 855  : 	
; 856  : 	return 0;

	xor	eax, eax

; 857  : }

	pop	ebp
	ret	0
?lProposalTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvProposal@@@Z ENDP ; CvLuaLeague::lProposalTableHelper
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -52						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ PROC ; std::vector<CvString,std::allocator<CvString> >::~vector<CvString,std::allocator<CvString> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 559  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ ; std::vector<CvString,std::allocator<CvString> >::_Tidy

; 560  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
__ehhandler$??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ENDP ; std::vector<CvString,std::allocator<CvString> >::~vector<CvString,std::allocator<CvString> >
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$??1?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??1?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
__$EHRec$ = -12						; size = 12
??1?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<CvEnactProposal,2,0,297,0>::~FStaticVector<CvEnactProposal,2,0,297,0>, COMDAT
; _this$ = ecx

; 617  : 	~FStaticVector(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvEnactProposal@@I@Z ; FStaticVector<CvEnactProposal,2,0,297,0>::Free

; 619  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@VCvEnactProposal@@$0A@@@QAE@XZ ; BaseVector<CvEnactProposal,0>::~BaseVector<CvEnactProposal,0>
__ehhandler$??1?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<CvEnactProposal,2,0,297,0>::~FStaticVector<CvEnactProposal,2,0,297,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??1?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
__$EHRec$ = -12						; size = 12
??1?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<CvRepealProposal,2,0,297,0>::~FStaticVector<CvRepealProposal,2,0,297,0>, COMDAT
; _this$ = ecx

; 617  : 	~FStaticVector(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvRepealProposal@@I@Z ; FStaticVector<CvRepealProposal,2,0,297,0>::Free

; 619  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@VCvRepealProposal@@$0A@@@QAE@XZ ; BaseVector<CvRepealProposal,0>::~BaseVector<CvRepealProposal,0>
__ehhandler$??1?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<CvRepealProposal,2,0,297,0>::~FStaticVector<CvRepealProposal,2,0,297,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??1?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
__$EHRec$ = -12						; size = 12
??1?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<CvActiveResolution,12,0,297,0>::~FStaticVector<CvActiveResolution,12,0,297,0>, COMDAT
; _this$ = ecx

; 617  : 	~FStaticVector(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@IAEXPAVCvActiveResolution@@I@Z ; FStaticVector<CvActiveResolution,12,0,297,0>::Free

; 619  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@VCvActiveResolution@@$0A@@@QAE@XZ ; BaseVector<CvActiveResolution,0>::~BaseVector<CvActiveResolution,0>
__ehhandler$??1?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<CvActiveResolution,12,0,297,0>::~FStaticVector<CvActiveResolution,12,0,297,0>
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<CvString,std::allocator<CvString> >::~_Vector_val<CvString,std::allocator<CvString> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<CvString,std::allocator<CvString> >::~_Vector_val<CvString,std::allocator<CvString> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::~_Vector_val<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::~_Vector_val<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -40						; size = 4
$T220129 = -36						; size = 4
$T220128 = -32						; size = 4
$T220124 = -28						; size = 4
$T220123 = -24						; size = 4
$T220100 = -20						; size = 4
$T220099 = -16						; size = 4
$T220078 = -12						; size = 4
$T220077 = -8						; size = 4
__Cat$220107 = -2					; size = 1
$T220105 = -1						; size = 1
?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ PROC ; std::vector<CvString,std::allocator<CvString> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	DWORD PTR _this$[ebp], ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	$LN1@Tidy

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T220124[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T220123[ebp], ecx
	mov	edx, DWORD PTR $T220124[ebp]
	mov	DWORD PTR $T220100[ebp], edx
	mov	eax, DWORD PTR $T220123[ebp]
	mov	DWORD PTR $T220099[ebp], eax
	mov	cl, BYTE PTR __Cat$220107[ebp]
	mov	BYTE PTR $T220105[ebp], cl
	mov	edx, DWORD PTR $T220100[ebp]
	mov	DWORD PTR $T220078[ebp], edx
	mov	eax, DWORD PTR $T220099[ebp]
	mov	DWORD PTR $T220077[ebp], eax
	jmp	SHORT $LN12@Tidy
$LN11@Tidy:
	mov	ecx, DWORD PTR $T220077[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR $T220077[ebp], ecx
$LN12@Tidy:
	mov	edx, DWORD PTR $T220077[ebp]
	cmp	edx, DWORD PTR $T220078[ebp]
	je	SHORT $LN4@Tidy
	mov	ecx, DWORD PTR $T220077[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	xor	eax, eax
	and	eax, 1
	je	SHORT $LN15@Tidy
	mov	ecx, DWORD PTR $T220077[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN15@Tidy:
	jmp	SHORT $LN11@Tidy
$LN4@Tidy:

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	mov	eax, ecx
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR $T220129[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T220128[ebp], eax
	mov	ecx, DWORD PTR $T220128[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@Tidy:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 1135 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ ENDP ; std::vector<CvString,std::allocator<CvString> >::_Tidy
_TEXT	ENDS
EXTRN	?FireFreeAlignedNoTracking@@YAXPAX@Z:PROC	; FireFreeAlignedNoTracking
EXTRN	??1CvEnactProposal@@QAE@XZ:PROC			; CvEnactProposal::~CvEnactProposal
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?Free@?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvEnactProposal@@I@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T220137 = -8						; size = 4
_i$220140 = -4						; size = 4
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Free@?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvEnactProposal@@I@Z PROC ; FStaticVector<CvEnactProposal,2,0,297,0>::Free, COMDAT
; _this$ = ecx

; 809  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 810  : 		if( !bPODType) Destroy(pVal, uiNumElements);

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@Free
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN2@Free
	mov	DWORD PTR _i$220140[ebp], 0
	jmp	SHORT $LN7@Free
$LN6@Free:
	mov	edx, DWORD PTR _i$220140[ebp]
	add	edx, 1
	mov	DWORD PTR _i$220140[ebp], edx
$LN7@Free:
	mov	eax, DWORD PTR _i$220140[ebp]
	cmp	eax, DWORD PTR _uiNumElements$[ebp]
	jae	SHORT $LN2@Free
	mov	ecx, DWORD PTR _i$220140[ebp]
	imul	ecx, 416				; 000001a0H
	add	ecx, DWORD PTR _pVal$[ebp]
	mov	DWORD PTR $T220137[ebp], ecx
	mov	ecx, DWORD PTR $T220137[ebp]
	call	??1CvEnactProposal@@QAE@XZ		; CvEnactProposal::~CvEnactProposal
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN12@Free
	mov	eax, DWORD PTR $T220137[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN12@Free:
	jmp	SHORT $LN6@Free
$LN2@Free:

; 811  : 		if( pVal != (T*)m_aData )

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	cmp	DWORD PTR _pVal$[ebp], ecx
	je	SHORT $LN3@Free

; 812  : 			FFREEALIGNED( (unsigned char*)pVal );

	mov	edx, DWORD PTR _pVal$[ebp]
	push	edx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN3@Free:

; 813  : 	};

	mov	esp, ebp
	pop	ebp
	ret	8
?Free@?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvEnactProposal@@I@Z ENDP ; FStaticVector<CvEnactProposal,2,0,297,0>::Free
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$BaseVector@VCvEnactProposal@@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$BaseVector@VCvEnactProposal@@$0A@@@QAE@XZ PROC	; BaseVector<CvEnactProposal,0>::~BaseVector<CvEnactProposal,0>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$BaseVector@VCvEnactProposal@@$0A@@@QAE@XZ ENDP	; BaseVector<CvEnactProposal,0>::~BaseVector<CvEnactProposal,0>
_TEXT	ENDS
EXTRN	??1CvRepealProposal@@QAE@XZ:PROC		; CvRepealProposal::~CvRepealProposal
; Function compile flags: /Odtp
;	COMDAT ?Free@?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvRepealProposal@@I@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T220157 = -8						; size = 4
_i$220160 = -4						; size = 4
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Free@?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvRepealProposal@@I@Z PROC ; FStaticVector<CvRepealProposal,2,0,297,0>::Free, COMDAT
; _this$ = ecx

; 809  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 810  : 		if( !bPODType) Destroy(pVal, uiNumElements);

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@Free@2
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN2@Free@2
	mov	DWORD PTR _i$220160[ebp], 0
	jmp	SHORT $LN7@Free@2
$LN6@Free@2:
	mov	edx, DWORD PTR _i$220160[ebp]
	add	edx, 1
	mov	DWORD PTR _i$220160[ebp], edx
$LN7@Free@2:
	mov	eax, DWORD PTR _i$220160[ebp]
	cmp	eax, DWORD PTR _uiNumElements$[ebp]
	jae	SHORT $LN2@Free@2
	mov	ecx, DWORD PTR _i$220160[ebp]
	imul	ecx, 708				; 000002c4H
	add	ecx, DWORD PTR _pVal$[ebp]
	mov	DWORD PTR $T220157[ebp], ecx
	mov	ecx, DWORD PTR $T220157[ebp]
	call	??1CvRepealProposal@@QAE@XZ		; CvRepealProposal::~CvRepealProposal
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN12@Free@2
	mov	eax, DWORD PTR $T220157[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN12@Free@2:
	jmp	SHORT $LN6@Free@2
$LN2@Free@2:

; 811  : 		if( pVal != (T*)m_aData )

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	cmp	DWORD PTR _pVal$[ebp], ecx
	je	SHORT $LN3@Free@2

; 812  : 			FFREEALIGNED( (unsigned char*)pVal );

	mov	edx, DWORD PTR _pVal$[ebp]
	push	edx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN3@Free@2:

; 813  : 	};

	mov	esp, ebp
	pop	ebp
	ret	8
?Free@?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvRepealProposal@@I@Z ENDP ; FStaticVector<CvRepealProposal,2,0,297,0>::Free
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$BaseVector@VCvRepealProposal@@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$BaseVector@VCvRepealProposal@@$0A@@@QAE@XZ PROC	; BaseVector<CvRepealProposal,0>::~BaseVector<CvRepealProposal,0>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$BaseVector@VCvRepealProposal@@$0A@@@QAE@XZ ENDP	; BaseVector<CvRepealProposal,0>::~BaseVector<CvRepealProposal,0>
_TEXT	ENDS
EXTRN	??1CvActiveResolution@@QAE@XZ:PROC		; CvActiveResolution::~CvActiveResolution
; Function compile flags: /Odtp
;	COMDAT ?Free@?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@IAEXPAVCvActiveResolution@@I@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T220177 = -8						; size = 4
_i$220184 = -4						; size = 4
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Free@?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@IAEXPAVCvActiveResolution@@I@Z PROC ; FStaticVector<CvActiveResolution,12,0,297,0>::Free, COMDAT
; _this$ = ecx

; 809  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 810  : 		if( !bPODType) Destroy(pVal, uiNumElements);

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@Free@3
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN2@Free@3
	mov	DWORD PTR _i$220184[ebp], 0
	jmp	SHORT $LN7@Free@3
$LN6@Free@3:
	mov	edx, DWORD PTR _i$220184[ebp]
	add	edx, 1
	mov	DWORD PTR _i$220184[ebp], edx
$LN7@Free@3:
	mov	eax, DWORD PTR _i$220184[ebp]
	cmp	eax, DWORD PTR _uiNumElements$[ebp]
	jae	SHORT $LN2@Free@3
	mov	ecx, DWORD PTR _i$220184[ebp]
	imul	ecx, 416				; 000001a0H
	add	ecx, DWORD PTR _pVal$[ebp]
	mov	DWORD PTR $T220177[ebp], ecx
	mov	ecx, DWORD PTR $T220177[ebp]
	call	??1CvActiveResolution@@QAE@XZ		; CvActiveResolution::~CvActiveResolution
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN12@Free@3
	mov	eax, DWORD PTR $T220177[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN12@Free@3:
	jmp	SHORT $LN6@Free@3
$LN2@Free@3:

; 811  : 		if( pVal != (T*)m_aData )

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	cmp	DWORD PTR _pVal$[ebp], ecx
	je	SHORT $LN3@Free@3

; 812  : 			FFREEALIGNED( (unsigned char*)pVal );

	mov	edx, DWORD PTR _pVal$[ebp]
	push	edx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN3@Free@3:

; 813  : 	};

	mov	esp, ebp
	pop	ebp
	ret	8
?Free@?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@IAEXPAVCvActiveResolution@@I@Z ENDP ; FStaticVector<CvActiveResolution,12,0,297,0>::Free
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$BaseVector@VCvActiveResolution@@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$BaseVector@VCvActiveResolution@@$0A@@@QAE@XZ PROC	; BaseVector<CvActiveResolution,0>::~BaseVector<CvActiveResolution,0>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$BaseVector@VCvActiveResolution@@$0A@@@QAE@XZ ENDP	; BaseVector<CvActiveResolution,0>::~BaseVector<CvActiveResolution,0>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -36						; size = 4
$T220258 = -32						; size = 4
$T220257 = -28						; size = 4
$T220253 = -24						; size = 4
$T220252 = -20						; size = 4
$T220234 = -16						; size = 4
$T220233 = -12						; size = 4
$T220217 = -8						; size = 4
__Cat$220240 = -2					; size = 1
$T220237 = -1						; size = 1
?_Tidy@?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@IAEXXZ PROC ; std::vector<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Tidy@2

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T220253[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T220252[ebp], ecx
	mov	edx, DWORD PTR $T220253[ebp]
	mov	DWORD PTR $T220234[ebp], edx
	mov	eax, DWORD PTR $T220252[ebp]
	mov	DWORD PTR $T220233[ebp], eax
	mov	cl, BYTE PTR __Cat$220240[ebp]
	mov	BYTE PTR $T220237[ebp], cl
	mov	edx, DWORD PTR $T220233[ebp]
	mov	DWORD PTR $T220217[ebp], edx
	jmp	SHORT $LN12@Tidy@2
$LN11@Tidy@2:
	mov	eax, DWORD PTR $T220217[ebp]
	add	eax, 4
	mov	DWORD PTR $T220217[ebp], eax
$LN12@Tidy@2:
	mov	ecx, DWORD PTR $T220217[ebp]
	cmp	ecx, DWORD PTR $T220234[ebp]
	je	SHORT $LN4@Tidy@2
	jmp	SHORT $LN11@Tidy@2
$LN4@Tidy@2:

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	mov	DWORD PTR $T220258[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T220257[ebp], eax
	mov	ecx, DWORD PTR $T220257[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@Tidy@2:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 1135 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@IAEXXZ ENDP ; std::vector<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::_Tidy
_TEXT	ENDS
PUBLIC	??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@ ; `string'
PUBLIC	??_C@_0L@GCADIOHF@__instance?$AA@		; `string'
EXTRN	_lua_settop:PROC
EXTRN	_lua_touserdata:PROC
EXTRN	_lua_getfield:PROC
EXTRN	_lua_type:PROC
;	COMDAT ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
CONST	SEGMENT
??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@ DB 'Not a val'
	DB	'id instance.  Either the instance is NULL or you used ''.'' i'
	DB	'nstead of '':''.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GCADIOHF@__instance?$AA@
CONST	SEGMENT
??_C@_0L@GCADIOHF@__instance?$AA@ DB '__instance', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_stack_size$ = -12					; size = 4
_pkInstance$ = -8					; size = 4
_bFail$ = -1						; size = 1
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 128  : 	const int stack_size = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _stack_size$[ebp], eax

; 129  : 	bool bFail = true;

	mov	BYTE PTR _bFail$[ebp], 1

; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;

	mov	DWORD PTR _pkInstance$[ebp], 0

; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 5
	jne	SHORT $LN5@GetInstanc

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN5@GetInstanc

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$[ebp], eax

; 138  : 			if(pkInstance)

	cmp	DWORD PTR _pkInstance$[ebp], 0
	je	SHORT $LN5@GetInstanc

; 139  : 			{
; 140  : 				bFail = false;

	mov	BYTE PTR _bFail$[ebp], 0
$LN5@GetInstanc:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	mov	ecx, DWORD PTR _stack_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	movzx	eax, BYTE PTR _bFail$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetInstanc
	movzx	ecx, BYTE PTR _bErrorOnFail$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@GetInstanc

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[ebp], 1
	jne	SHORT $LN1@GetInstanc

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc:

; 151  : 		Derived::HandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?HandleMissingInstance@CvLuaLeague@@SAXPAUlua_State@@@Z ; CvLuaLeague::HandleMissingInstance
	add	esp, 4
$LN2@GetInstanc:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, DWORD PTR _pkInstance$[ebp]

; 154  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
_TEXT	ENDS
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T220308 = -28						; size = 4
$T220307 = -24						; size = 4
$T220303 = -20						; size = 4
$T220302 = -16						; size = 4
$T220291 = -12						; size = 4
$T220290 = -8						; size = 4
__Cat$220297 = -2					; size = 1
$T220294 = -1						; size = 1
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ PROC	; std::vector<int,std::allocator<int> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Tidy@3

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T220303[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T220302[ebp], ecx
	mov	edx, DWORD PTR $T220303[ebp]
	mov	DWORD PTR $T220291[ebp], edx
	mov	eax, DWORD PTR $T220302[ebp]
	mov	DWORD PTR $T220290[ebp], eax
	mov	cl, BYTE PTR __Cat$220297[ebp]
	mov	BYTE PTR $T220294[ebp], cl

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	mov	DWORD PTR $T220308[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T220307[ebp], eax
	mov	ecx, DWORD PTR $T220307[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@Tidy@3:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 1135 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ENDP	; std::vector<int,std::allocator<int> >::_Tidy
_TEXT	ENDS
END
