; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\Lua\CvLuaCity.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0CD@COEJMCEC@GetReligionCityRangeStrikeModifi@ ; `string'
PUBLIC	?lGetReligionCityRangeStrikeModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetReligionCityRangeStrikeModifier
PUBLIC	??_C@_0BJ@FDKOKGMB@GetNumForcedWorkingPlots?$AA@ ; `string'
PUBLIC	?lGetNumForcedWorkingPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumForcedWorkingPlots
PUBLIC	??_C@_0BJ@EJFOMIDN@GetCultureFromSpecialist?$AA@ ; `string'
PUBLIC	?lGetCultureFromSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCultureFromSpecialist
PUBLIC	??_C@_0BD@LMIDJJOI@GetSpecialistYield?$AA@	; `string'
PUBLIC	?lGetSpecialistYield@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistYield
PUBLIC	??_C@_0BB@KGFIABNE@CanPlaceUnitHere?$AA@	; `string'
PUBLIC	?lCanPlaceUnitHere@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanPlaceUnitHere
PUBLIC	??_C@_0BA@JCDPNDEK@GetNumCityPlots?$AA@		; `string'
PUBLIC	?lGetNumCityPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumCityPlots
PUBLIC	??_C@_0CD@BMMNEKOO@GetBuildingGlobalEspionageModifi@ ; `string'
PUBLIC	?lGetBuildingGlobalEspionageModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingGlobalEspionageModifier
PUBLIC	??_C@_0BN@KJGALFCA@GetBuildingEspionageModifier?$AA@ ; `string'
PUBLIC	?lGetBuildingEspionageModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingEspionageModifier
PUBLIC	??_C@_0BH@IJFNGACL@SetBuildingYieldChange?$AA@	; `string'
PUBLIC	?lSetBuildingYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetBuildingYieldChange
PUBLIC	??_C@_0BH@IIHDEHPE@GetBuildingYieldChange?$AA@	; `string'
PUBLIC	?lGetBuildingYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingYieldChange
PUBLIC	??_C@_0BE@PCCBFHJN@GetOrderQueueLength?$AA@	; `string'
PUBLIC	?lGetOrderQueueLength@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetOrderQueueLength
PUBLIC	??_C@_08BEEKLBOG@PopOrder?$AA@			; `string'
PUBLIC	?lPopOrder@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lPopOrder
PUBLIC	??_C@_09BPJOHKFH@PushOrder?$AA@			; `string'
PUBLIC	?lPushOrder@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lPushOrder
PUBLIC	??_C@_0BA@OFIEGGCN@ClearOrderQueue?$AA@		; `string'
PUBLIC	?lClearOrderQueue@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lClearOrderQueue
PUBLIC	??_C@_0BL@MHAHLBOF@GetNumGreatWorksInBuilding?$AA@ ; `string'
PUBLIC	?lGetNumGreatWorksInBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumGreatWorksInBuilding
PUBLIC	??_C@_0BD@IFLPGFLJ@IsHoldingGreatWork?$AA@	; `string'
PUBLIC	?lIsHoldingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsHoldingGreatWork
PUBLIC	??_C@_0BF@DIKBHKDI@SetBuildingGreatWork?$AA@	; `string'
PUBLIC	?lSetBuildingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetBuildingGreatWork
PUBLIC	??_C@_0BF@GBLMGMGP@GetBuildingGreatWork?$AA@	; `string'
PUBLIC	?lGetBuildingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingGreatWork
PUBLIC	??_C@_0CA@FAHLOAIH@GetTotalBaseBuildingMaintenance?$AA@ ; `string'
PUBLIC	?lGetTotalBaseBuildingMaintenance@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetTotalBaseBuildingMaintenance
PUBLIC	??_C@_0BG@NPBALGAL@GetSellBuildingRefund?$AA@	; `string'
PUBLIC	?lGetSellBuildingRefund@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSellBuildingRefund
PUBLIC	??_C@_0BD@ONJFGLJC@IsBuildingSellable?$AA@	; `string'
PUBLIC	?lIsBuildingSellable@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsBuildingSellable
PUBLIC	??_C@_0BD@MCLNCOID@GetNumFreeBuilding?$AA@	; `string'
PUBLIC	?lGetNumFreeBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumFreeBuilding
PUBLIC	??_C@_0BD@HIGFIIBM@SetNumRealBuilding?$AA@	; `string'
PUBLIC	?lSetNumRealBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetNumRealBuilding
PUBLIC	??_C@_0BD@ICEPLOPE@GetNumRealBuilding?$AA@	; `string'
PUBLIC	?lGetNumRealBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumRealBuilding
PUBLIC	??_C@_0BE@MNHDNBKJ@IsForcedWorkingPlot?$AA@	; `string'
PUBLIC	?lIsForcedWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsForcedWorkingPlot
PUBLIC	??_C@_0BB@MLMHPGAK@AlterWorkingPlot?$AA@	; `string'
PUBLIC	?lAlterWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lAlterWorkingPlot
PUBLIC	??_C@_0O@CBDHABDH@IsWorkingPlot?$AA@		; `string'
PUBLIC	?lIsWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsWorkingPlot
PUBLIC	??_C@_0BK@LJEHDMDL@GetAirStrikeDefenseDamage?$AA@ ; `string'
PUBLIC	?lGetAirStrikeDefenseDamage@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetAirStrikeDefenseDamage
PUBLIC	??_C@_0BC@IGMINMDO@RangeCombatDamage?$AA@	; `string'
PUBLIC	?lRangeCombatDamage@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lRangeCombatDamage
PUBLIC	??_C@_0BH@GENLCPG@RangeCombatUnitDefense?$AA@	; `string'
PUBLIC	?lRangeCombatUnitDefense@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lRangeCombatUnitDefense
PUBLIC	??_C@_0CB@EMMFCPOC@HasPerformedRangedStrikeThisTurn@ ; `string'
PUBLIC	?lHasPerformedRangedStrikeThisTurn@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lHasPerformedRangedStrikeThisTurn
PUBLIC	??_C@_0BB@HFDCOJOB@CanRangeStrikeAt?$AA@	; `string'
PUBLIC	?lCanRangeStrikeAt@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanRangeStrikeAt
PUBLIC	??_C@_0BC@PPBGFDPB@CanRangeStrikeNow?$AA@	; `string'
PUBLIC	?lCanRangeStrikeNow@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanRangeStrikeNow
PUBLIC	??_C@_0P@CDOKKCEP@CanRangeStrike?$AA@		; `string'
PUBLIC	?lCanRangeStrike@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanRangeStrike
PUBLIC	??_C@_0BA@NIPPNLFL@GetMaxHitPoints?$AA@		; `string'
PUBLIC	?lGetMaxHitPoints@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetMaxHitPoints
PUBLIC	??_C@_0N@OECJINCP@ChangeDamage?$AA@		; `string'
PUBLIC	?lChangeDamage@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lChangeDamage
PUBLIC	??_C@_09LEHOBNAL@SetDamage?$AA@			; `string'
PUBLIC	?lSetDamage@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lSetDamage
PUBLIC	??_C@_09JKDLDMJJ@GetDamage?$AA@			; `string'
PUBLIC	?lGetDamage@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetDamage
PUBLIC	??_C@_0BB@GOIDKIFF@GetStrengthValue?$AA@	; `string'
PUBLIC	?lGetStrengthValue@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetStrengthValue
PUBLIC	??_C@_0BE@POOBMJHD@UpdateStrengthValue?$AA@	; `string'
PUBLIC	?lUpdateStrengthValue@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lUpdateStrengthValue
PUBLIC	??_C@_0BM@IHAGDLPN@GetSpecialistFreeExperience?$AA@ ; `string'
PUBLIC	?lGetSpecialistFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistFreeExperience
PUBLIC	??_C@_0BA@IKABNDKF@IsFreePromotion?$AA@		; `string'
PUBLIC	?lIsFreePromotion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsFreePromotion
PUBLIC	??_C@_0BG@IMOAGJCF@GetFreePromotionCount?$AA@	; `string'
PUBLIC	?lGetFreePromotionCount@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFreePromotionCount
PUBLIC	??_C@_0BM@JLBDEMAE@GetUnitCombatFreeExperience?$AA@ ; `string'
PUBLIC	?lGetUnitCombatFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitCombatFreeExperience
PUBLIC	??_C@_0BE@MHBNFFJG@IsForcedAvoidGrowth?$AA@	; `string'
PUBLIC	?lIsForcedAvoidGrowth@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsForcedAvoidGrowth
PUBLIC	??_C@_0N@FAOCLHCN@SetFocusType?$AA@		; `string'
PUBLIC	?lSetFocusType@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lSetFocusType
PUBLIC	??_C@_0N@CEFMHLGB@GetFocusType?$AA@		; `string'
PUBLIC	?lGetFocusType@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetFocusType
PUBLIC	??_C@_0BK@NJJDCLIJ@IsNoAutoAssignSpecialists?$AA@ ; `string'
PUBLIC	?lIsNoAutoAssignSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsNoAutoAssignSpecialists
PUBLIC	??_C@_0BF@FLFDINC@DoVerifyWorkingPlots?$AA@	; `string'
PUBLIC	?lDoVerifyWorkingPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lDoVerifyWorkingPlots
PUBLIC	??_C@_0BF@KEIPLLG@DoReallocateCitizens?$AA@	; `string'
PUBLIC	?lDoReallocateCitizens@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lDoReallocateCitizens
PUBLIC	??_C@_0BM@PGFEFAIL@GetNumSpecialistsInBuilding?$AA@ ; `string'
PUBLIC	?lGetNumSpecialistsInBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumSpecialistsInBuilding
PUBLIC	??_C@_0CM@FNFNICHP@ChangeSpecialistGreatPersonProgr@ ; `string'
PUBLIC	?lChangeSpecialistGreatPersonProgressTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeSpecialistGreatPersonProgressTimes100
PUBLIC	??_C@_0CJ@BIFDLHCL@GetSpecialistGreatPersonProgress@ ; `string'
PUBLIC	?lGetSpecialistGreatPersonProgressTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistGreatPersonProgressTimes100
PUBLIC	??_C@_0CB@HDCLCODD@GetSpecialistGreatPersonProgress@ ; `string'
PUBLIC	?lGetSpecialistGreatPersonProgress@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistGreatPersonProgress
PUBLIC	??_C@_0BD@IINBNMBF@GetSpecialistCount?$AA@	; `string'
PUBLIC	?lGetSpecialistCount@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistCount
PUBLIC	??_C@_0CD@HKGINKIM@GetNumSpecialistsAllowedByBuildi@ ; `string'
PUBLIC	?lGetNumSpecialistsAllowedByBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumSpecialistsAllowedByBuilding
PUBLIC	??_C@_0BO@KFIIIIKB@GetSpecialistUpgradeThreshold?$AA@ ; `string'
PUBLIC	?lGetSpecialistUpgradeThreshold@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistUpgradeThreshold
PUBLIC	??_C@_0BN@EOHIHCLK@IsCanAddSpecialistToBuilding?$AA@ ; `string'
PUBLIC	?lIsCanAddSpecialistToBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsCanAddSpecialistToBuilding
PUBLIC	??_C@_0BF@BKIOFMPC@ChangeUnitProduction?$AA@	; `string'
PUBLIC	?lChangeUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeUnitProduction
PUBLIC	??_C@_0BC@KBOCLBOG@SetUnitProduction?$AA@	; `string'
PUBLIC	?lSetUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetUnitProduction
PUBLIC	??_C@_0BC@IEOJDKPI@GetUnitProduction?$AA@	; `string'
PUBLIC	?lGetUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitProduction
PUBLIC	??_C@_0BI@IGCHMDBE@GetBuildingOriginalTime?$AA@	; `string'
PUBLIC	?lGetBuildingOriginalTime@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingOriginalTime
PUBLIC	??_C@_0BJ@KDCBJMJP@GetBuildingOriginalOwner?$AA@ ; `string'
PUBLIC	?lGetBuildingOriginalOwner@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingOriginalOwner
PUBLIC	??_C@_0BN@BPJFOHCL@ChangeBuildingProductionTime?$AA@ ; `string'
PUBLIC	?lChangeBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBuildingProductionTime
PUBLIC	??_C@_0BK@JNDCOJAJ@SetBuildingProductionTime?$AA@ ; `string'
PUBLIC	?lSetBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetBuildingProductionTime
PUBLIC	??_C@_0BK@BNPECEKP@GetBuildingProductionTime?$AA@ ; `string'
PUBLIC	?lGetBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingProductionTime
PUBLIC	??_C@_0BJ@MMEAFHDF@ChangeBuildingProduction?$AA@ ; `string'
PUBLIC	?lChangeBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBuildingProduction
PUBLIC	??_C@_0BG@CHPKJKKB@SetBuildingProduction?$AA@	; `string'
PUBLIC	?lSetBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetBuildingProduction
PUBLIC	??_C@_0BG@NCKMEDOA@GetBuildingProduction?$AA@	; `string'
PUBLIC	?lGetBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingProduction
PUBLIC	??_C@_0BD@GIKEEJCO@IsHasResourceLocal?$AA@	; `string'
PUBLIC	?lIsHasResourceLocal@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsHasResourceLocal
PUBLIC	??_C@_07DEJFEJPJ@SetName?$AA@			; `string'
PUBLIC	?lSetName@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lSetName
PUBLIC	??_C@_07MMGEHGCI@GetName?$AA@			; `string'
PUBLIC	?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetName
PUBLIC	??_C@_0L@PJBAHION@GetNameKey?$AA@		; `string'
PUBLIC	?lGetNameKey@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetNameKey
PUBLIC	??_C@_0M@JIOPKDAN@SetRevealed?$AA@		; `string'
PUBLIC	?lSetRevealed@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lSetRevealed
PUBLIC	??_C@_0L@KNACFKBL@IsRevealed?$AA@		; `string'
PUBLIC	?lIsRevealed@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsRevealed
PUBLIC	??_C@_0M@HHHODKFL@IsEverOwned?$AA@		; `string'
PUBLIC	?lIsEverOwned@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsEverOwned
PUBLIC	??_C@_0BM@CIOKPJJB@GetDomainProductionModifier?$AA@ ; `string'
PUBLIC	?lGetDomainProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetDomainProductionModifier
PUBLIC	??_C@_0BI@GMGIGBHD@GetDomainFreeExperience?$AA@	; `string'
PUBLIC	?lGetDomainFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetDomainFreeExperience
PUBLIC	??_C@_0BO@GICAENNG@GetExtraSpecialistYieldOfType?$AA@ ; `string'
PUBLIC	?lGetExtraSpecialistYieldOfType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetExtraSpecialistYieldOfType
PUBLIC	??_C@_0BI@GIDAMOKL@GetExtraSpecialistYield?$AA@	; `string'
PUBLIC	?lGetExtraSpecialistYield@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetExtraSpecialistYield
PUBLIC	??_C@_0BF@MPEACCAJ@GetYieldRateModifier?$AA@	; `string'
PUBLIC	?lGetYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetYieldRateModifier
PUBLIC	??_C@_0BF@OFJHKEGP@GetYieldRateTimes100?$AA@	; `string'
PUBLIC	?lGetYieldRateTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetYieldRateTimes100
PUBLIC	??_C@_0N@LGPNBIDL@GetYieldRate?$AA@		; `string'
PUBLIC	?lGetYieldRate@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetYieldRate
PUBLIC	??_C@_0BJ@BHAAEGH@GetBaseYieldRateModifier?$AA@	; `string'
PUBLIC	?lGetBaseYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateModifier
PUBLIC	??_C@_0BH@FHGKGLBM@GetYieldPerPopTimes100?$AA@	; `string'
PUBLIC	?lGetYieldPerPopTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetYieldPerPopTimes100
PUBLIC	??_C@_0CA@JHBINGGO@ChangeBaseYieldRateFromReligion?$AA@ ; `string'
PUBLIC	?lChangeBaseYieldRateFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseYieldRateFromReligion
PUBLIC	??_C@_0BN@KLEGLAHD@GetBaseYieldRateFromReligion?$AA@ ; `string'
PUBLIC	?lGetBaseYieldRateFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromReligion
PUBLIC	??_C@_0BM@MDOMEKI@ChangeBaseYieldRateFromMisc?$AA@ ; `string'
PUBLIC	?lChangeBaseYieldRateFromMisc@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseYieldRateFromMisc
PUBLIC	??_C@_0BJ@GOEKGL@GetBaseYieldRateFromMisc?$AA@	; `string'
PUBLIC	?lGetBaseYieldRateFromMisc@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromMisc
PUBLIC	??_C@_0CD@JHMJIOOA@ChangeBaseYieldRateFromSpecialis@ ; `string'
PUBLIC	?lChangeBaseYieldRateFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseYieldRateFromSpecialists
PUBLIC	??_C@_0CA@DMEDAOCN@GetBaseYieldRateFromSpecialists?$AA@ ; `string'
PUBLIC	?lGetBaseYieldRateFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromSpecialists
PUBLIC	??_C@_0CB@OMALCKC@ChangeBaseYieldRateFromBuildings@ ; `string'
PUBLIC	?lChangeBaseYieldRateFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseYieldRateFromBuildings
PUBLIC	??_C@_0BO@GNPKIABN@GetBaseYieldRateFromBuildings?$AA@ ; `string'
PUBLIC	?lGetBaseYieldRateFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromBuildings
PUBLIC	??_C@_0BP@LEPGAIDG@ChangeBaseYieldRateFromTerrain?$AA@ ; `string'
PUBLIC	?lChangeBaseYieldRateFromTerrain@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseYieldRateFromTerrain
PUBLIC	??_C@_0BM@OJHEMEBC@GetBaseYieldRateFromTerrain?$AA@ ; `string'
PUBLIC	?lGetBaseYieldRateFromTerrain@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromTerrain
PUBLIC	??_C@_0BP@JIPPGLFE@GetBaseYieldRateFromGreatWorks?$AA@ ; `string'
PUBLIC	?lGetBaseYieldRateFromGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromGreatWorks
PUBLIC	??_C@_0BB@PNJLKNIG@GetBaseYieldRate?$AA@	; `string'
PUBLIC	?lGetBaseYieldRate@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRate
PUBLIC	??_C@_0BB@KFDOAKNK@GetLakePlotYield?$AA@	; `string'
PUBLIC	?lGetLakePlotYield@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetLakePlotYield
PUBLIC	??_C@_0BC@KGMJBNBB@GetRiverPlotYield?$AA@	; `string'
PUBLIC	?lGetRiverPlotYield@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetRiverPlotYield
PUBLIC	??_C@_0BA@DGPKBBEO@GetSeaPlotYield?$AA@		; `string'
PUBLIC	?lGetSeaPlotYield@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSeaPlotYield
PUBLIC	??_C@_0BB@FBHJECJI@GetOriginalOwner?$AA@	; `string'
PUBLIC	?lGetOriginalOwner@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetOriginalOwner
PUBLIC	??_C@_0BB@HFDBFLDN@GetPreviousOwner?$AA@	; `string'
PUBLIC	?lGetPreviousOwner@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetPreviousOwner
PUBLIC	??_C@_07KIJFBNDA@GetTeam?$AA@			; `string'
PUBLIC	?lGetTeam@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetTeam
PUBLIC	??_C@_08BODJMJJB@GetOwner?$AA@			; `string'
PUBLIC	?lGetOwner@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetOwner
PUBLIC	??_C@_0BB@JHJGLAIL@SetCitySizeBoost?$AA@	; `string'
PUBLIC	?lSetCitySizeBoost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetCitySizeBoost
PUBLIC	??_C@_0BH@PFIOINMP@SetProductionAutomated?$AA@	; `string'
PUBLIC	?lSetProductionAutomated@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetProductionAutomated
PUBLIC	??_C@_0BG@FJMABPLB@IsProductionAutomated?$AA@	; `string'
PUBLIC	?lIsProductionAutomated@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionAutomated
PUBLIC	??_C@_0BF@HABAGOM@GetNumThingsProduced?$AA@	; `string'
PUBLIC	?lGetNumThingsProduced@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumThingsProduced
PUBLIC	??_C@_0BO@HIBOMBIM@ChangeWeLoveTheKingDayCounter?$AA@ ; `string'
PUBLIC	?lChangeWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeWeLoveTheKingDayCounter
PUBLIC	??_C@_0BL@KNPMCHGG@SetWeLoveTheKingDayCounter?$AA@ ; `string'
PUBLIC	?lSetWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetWeLoveTheKingDayCounter
PUBLIC	??_C@_0BL@JCMJOHHG@GetWeLoveTheKingDayCounter?$AA@ ; `string'
PUBLIC	?lGetWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetWeLoveTheKingDayCounter
PUBLIC	??_C@_0M@OAAFKHBJ@IsBlockaded?$AA@		; `string'
PUBLIC	?lIsBlockaded@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsBlockaded
PUBLIC	??_C@_0L@EHIPGLHP@SetDrafted?$AA@		; `string'
PUBLIC	?lSetDrafted@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lSetDrafted
PUBLIC	??_C@_09BPNOIHFH@IsDrafted?$AA@			; `string'
PUBLIC	?lIsDrafted@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsDrafted
PUBLIC	??_C@_0N@DKLPEECK@SetNeverLost?$AA@		; `string'
PUBLIC	?lSetNeverLost@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lSetNeverLost
PUBLIC	??_C@_0M@MOFOBMIC@IsNeverLost?$AA@		; `string'
PUBLIC	?lIsNeverLost@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsNeverLost
PUBLIC	??_C@_0BC@JBPFIKFP@GetLocalHappiness?$AA@	; `string'
PUBLIC	?lGetLocalHappiness@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetLocalHappiness
PUBLIC	??_C@_0N@BPJGOLFM@GetHappiness?$AA@		; `string'
PUBLIC	?lGetHappiness@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetHappiness
PUBLIC	??_C@_0BK@NJJIHGAG@GetHappinessFromBuildings?$AA@ ; `string'
PUBLIC	?lGetHappinessFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetHappinessFromBuildings
PUBLIC	??_C@_09JPCAHBOM@SetPuppet?$AA@			; `string'
PUBLIC	?lSetPuppet@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lSetPuppet
PUBLIC	??_C@_08KGIAEINB@IsPuppet?$AA@			; `string'
PUBLIC	?lIsPuppet@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsPuppet
PUBLIC	??_C@_0M@FPGBPAFO@SetOccupied?$AA@		; `string'
PUBLIC	?lSetOccupied@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lSetOccupied
PUBLIC	??_C@_0L@GKIMAJEI@IsOccupied?$AA@		; `string'
PUBLIC	?lIsOccupied@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsOccupied
PUBLIC	??_C@_0BC@GFDDGGHF@ChangeRazingTurns?$AA@	; `string'
PUBLIC	?lChangeRazingTurns@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeRazingTurns
PUBLIC	??_C@_0P@PBGEJBFI@GetRazingTurns?$AA@		; `string'
PUBLIC	?lGetRazingTurns@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetRazingTurns
PUBLIC	??_C@_08KDEDLHLC@IsRazing?$AA@			; `string'
PUBLIC	?lIsRazing@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsRazing
PUBLIC	??_C@_0BG@OGCOMNIG@ChangeResistanceTurns?$AA@	; `string'
PUBLIC	?lChangeResistanceTurns@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeResistanceTurns
PUBLIC	??_C@_0BD@GGFEDPO@GetResistanceTurns?$AA@	; `string'
PUBLIC	?lGetResistanceTurns@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetResistanceTurns
PUBLIC	??_C@_0N@OIFCCPFM@IsResistance?$AA@		; `string'
PUBLIC	?lIsResistance@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsResistance
PUBLIC	??_C@_0BA@IIFNIAFM@GetNukeModifier?$AA@		; `string'
PUBLIC	?lGetNukeModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNukeModifier
PUBLIC	??_C@_0BC@KJGDLEFF@GetFreeExperience?$AA@	; `string'
PUBLIC	?lGetFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFreeExperience
PUBLIC	??_C@_0BD@IFIIOABK@GetBuildingDefense?$AA@	; `string'
PUBLIC	?lGetBuildingDefense@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingDefense
PUBLIC	??_C@_0BL@EMAHKCFF@GetSpaceProductionModifier?$AA@ ; `string'
PUBLIC	?lGetSpaceProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpaceProductionModifier
PUBLIC	??_C@_0BO@FAMIPBGF@GetMilitaryProductionModifier?$AA@ ; `string'
PUBLIC	?lGetMilitaryProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetMilitaryProductionModifier
PUBLIC	??_C@_0BF@FMCOGOGC@SetFeatureProduction?$AA@	; `string'
PUBLIC	?lSetFeatureProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetFeatureProduction
PUBLIC	??_C@_0BF@FDDHIDF@GetFeatureProduction?$AA@	; `string'
PUBLIC	?lGetFeatureProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFeatureProduction
PUBLIC	??_C@_0BG@FEEBJMBN@SetOverflowProduction?$AA@	; `string'
PUBLIC	?lSetOverflowProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetOverflowProduction
PUBLIC	??_C@_0BG@KBBHEFFM@GetOverflowProduction?$AA@	; `string'
PUBLIC	?lGetOverflowProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetOverflowProduction
PUBLIC	??_C@_0BG@DCGGEPDG@GetMaxFoodKeptPercent?$AA@	; `string'
PUBLIC	?lGetMaxFoodKeptPercent@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetMaxFoodKeptPercent
PUBLIC	??_C@_0M@GIFBHLGG@GetFoodKept?$AA@		; `string'
PUBLIC	?lGetFoodKept@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetFoodKept
PUBLIC	??_C@_0L@HHFPNGJH@ChangeFood?$AA@		; `string'
PUBLIC	?lChangeFood@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lChangeFood
PUBLIC	??_C@_07POKFJACE@SetFood?$AA@			; `string'
PUBLIC	?lSetFood@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lSetFood
PUBLIC	??_C@_0BA@EBLNMIHG@GetFoodTimes100?$AA@		; `string'
PUBLIC	?lGetFoodTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFoodTimes100
PUBLIC	??_C@_07GFEKPPF@GetFood?$AA@			; `string'
PUBLIC	?lGetFood@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetFood
PUBLIC	??_C@_0BI@HOIIKDFF@IsNoOccupiedUnhappiness?$AA@	; `string'
PUBLIC	?lIsNoOccupiedUnhappiness@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsNoOccupiedUnhappiness
PUBLIC	??_C@_0P@DFIEFIFC@ChangeHealRate?$AA@		; `string'
PUBLIC	?lChangeHealRate@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lChangeHealRate
PUBLIC	??_C@_0CE@JOONDJO@GetLocalResourceWonderProduction@ ; `string'
PUBLIC	?lGetLocalResourceWonderProductionMod@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetLocalResourceWonderProductionMod
PUBLIC	??_C@_0BP@CBAFPBHG@ChangeWonderProductionModifier?$AA@ ; `string'
PUBLIC	?lChangeWonderProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeWonderProductionModifier
PUBLIC	??_C@_0BM@HMIHDNFC@GetWonderProductionModifier?$AA@ ; `string'
PUBLIC	?lGetWonderProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetWonderProductionModifier
PUBLIC	??_C@_0BA@BEIGCOAF@GetNumBuildings?$AA@		; `string'
PUBLIC	?lGetNumBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumBuildings
PUBLIC	??_C@_0BG@HCJMDOLN@GetNumNationalWonders?$AA@	; `string'
PUBLIC	?lGetNumNationalWonders@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumNationalWonders
PUBLIC	??_C@_0BC@OBPJLAFA@GetNumTeamWonders?$AA@	; `string'
PUBLIC	?lGetNumTeamWonders@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumTeamWonders
PUBLIC	??_C@_0BD@FHKHHPIG@GetNumWorldWonders?$AA@	; `string'
PUBLIC	?lGetNumWorldWonders@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumWorldWonders
PUBLIC	??_C@_0CA@FHBADINH@GetNumTradeRoutesAddingPressure?$AA@ ; `string'
PUBLIC	?lGetNumTradeRoutesAddingPressure@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumTradeRoutesAddingPressure
PUBLIC	??_C@_0CC@JAADPGKC@GetLeagueBuildingClassYieldChang@ ; `string'
PUBLIC	?lGetLeagueBuildingClassYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetLeagueBuildingClassYieldChange
PUBLIC	??_C@_0CE@IHEOCEID@GetReligionBuildingClassYieldCha@ ; `string'
PUBLIC	?lGetReligionBuildingClassYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetReligionBuildingClassYieldChange
PUBLIC	??_C@_0CC@ENMDKGLO@GetReligionBuildingClassHappines@ ; `string'
PUBLIC	?lGetReligionBuildingClassHappiness@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetReligionBuildingClassHappiness
PUBLIC	??_C@_0BD@FBGNFBCF@AdoptReligionFully?$AA@	; `string'
PUBLIC	?lAdoptReligionFully@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lAdoptReligionFully
PUBLIC	??_C@_0BI@DDLKPOAO@ConvertPercentFollowers?$AA@	; `string'
PUBLIC	?lConvertPercentFollowers@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lConvertPercentFollowers
PUBLIC	??_C@_0BD@JAFNIAKI@GetPressurePerTurn?$AA@	; `string'
PUBLIC	?lGetPressurePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetPressurePerTurn
PUBLIC	??_C@_0CD@GBBECGLH@GetSecondaryReligionPantheonBeli@ ; `string'
PUBLIC	?lGetSecondaryReligionPantheonBelief@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSecondaryReligionPantheonBelief
PUBLIC	??_C@_0BF@KNGLOBDC@GetSecondaryReligion?$AA@	; `string'
PUBLIC	?lGetSecondaryReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSecondaryReligion
PUBLIC	??_C@_0BF@CPDBKIPJ@GetReligiousMajority?$AA@	; `string'
PUBLIC	?lGetReligiousMajority@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetReligiousMajority
PUBLIC	??_C@_0BA@BEJIHHEO@GetNumFollowers?$AA@		; `string'
PUBLIC	?lGetNumFollowers@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumFollowers
PUBLIC	??_C@_0BG@DCMLICBF@IsHolyCityAnyReligion?$AA@	; `string'
PUBLIC	?lIsHolyCityAnyReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsHolyCityAnyReligion
PUBLIC	??_C@_0BG@HPDNEPKN@IsHolyCityForReligion?$AA@	; `string'
PUBLIC	?lIsHolyCityForReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsHolyCityForReligion
PUBLIC	??_C@_0BB@PGCOPPAF@IsReligionInCity?$AA@	; `string'
PUBLIC	?lIsReligionInCity@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsReligionInCity
PUBLIC	??_C@_0BM@FBEILFDB@GetFaithPerTurnFromReligion?$AA@ ; `string'
PUBLIC	?lGetFaithPerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPerTurnFromReligion
PUBLIC	??_C@_0BK@EKHAOHLH@GetFaithPerTurnFromTraits?$AA@ ; `string'
PUBLIC	?lGetFaithPerTurnFromTraits@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPerTurnFromTraits
PUBLIC	??_C@_0BM@OJAFMOHF@GetFaithPerTurnFromPolicies?$AA@ ; `string'
PUBLIC	?lGetFaithPerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPerTurnFromPolicies
PUBLIC	??_C@_0BN@PFNCKOKE@GetFaithPerTurnFromBuildings?$AA@ ; `string'
PUBLIC	?lGetFaithPerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPerTurnFromBuildings
PUBLIC	??_C@_0BA@CIJNECBN@GetFaithPerTurn?$AA@		; `string'
PUBLIC	?lGetFaithPerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPerTurn
PUBLIC	??_C@_0BC@IDIDCDN@GetThemingTooltip?$AA@	; `string'
PUBLIC	?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetThemingTooltip
PUBLIC	??_C@_0BA@PNNDDOA@GetThemingBonus?$AA@		; `string'
PUBLIC	?lGetThemingBonus@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetThemingBonus
PUBLIC	??_C@_0BH@OADCDAOP@IsThemingBonusPossible?$AA@	; `string'
PUBLIC	?lIsThemingBonusPossible@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsThemingBonusPossible
PUBLIC	??_C@_0BI@KDLLAHHF@GetFaithBuildingTourism?$AA@	; `string'
PUBLIC	?lGetFaithBuildingTourism@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithBuildingTourism
PUBLIC	??_C@_0BA@JEEBJAFO@ClearGreatWorks?$AA@		; `string'
PUBLIC	?lClearGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lClearGreatWorks
PUBLIC	??_C@_0BF@CDKAAHGE@GetTotalSlotsTooltip?$AA@	; `string'
PUBLIC	?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetTotalSlotsTooltip
PUBLIC	??_C@_0BG@CNAADLGC@GetFilledSlotsTooltip?$AA@	; `string'
PUBLIC	?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFilledSlotsTooltip
PUBLIC	??_C@_0BC@OAAAMMGM@GetTourismTooltip?$AA@	; `string'
PUBLIC	?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetTourismTooltip
PUBLIC	??_C@_0BF@MHJNCJDK@GetTourismMultiplier?$AA@	; `string'
PUBLIC	?lGetTourismMultiplier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetTourismMultiplier
PUBLIC	??_C@_0P@PJMIHAEJ@GetBaseTourism?$AA@		; `string'
PUBLIC	?lGetBaseTourism@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetBaseTourism
PUBLIC	??_C@_0BF@FMOOCJFI@GetNumGreatWorkSlots?$AA@	; `string'
PUBLIC	?lGetNumGreatWorkSlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumGreatWorkSlots
PUBLIC	??_C@_0BB@ILOKIPKM@GetNumGreatWorks?$AA@	; `string'
PUBLIC	?lGetNumGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumGreatWorks
PUBLIC	??_C@_0BK@NOKONBPA@ChangeCultureRateModifier?$AA@ ; `string'
PUBLIC	?lChangeCultureRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeCultureRateModifier
PUBLIC	??_C@_0BH@CIAJBLLP@GetCultureRateModifier?$AA@	; `string'
PUBLIC	?lGetCultureRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCultureRateModifier
PUBLIC	??_C@_0CB@DONKGGML@GetJONSCulturePerTurnFromLeagues@ ; `string'
PUBLIC	?lGetJONSCulturePerTurnFromLeagues@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromLeagues
PUBLIC	??_C@_0CC@INODDPGK@GetJONSCulturePerTurnFromReligio@ ; `string'
PUBLIC	?lGetJONSCulturePerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromReligion
PUBLIC	??_C@_0CA@MKHKHIDI@GetJONSCulturePerTurnFromTraits?$AA@ ; `string'
PUBLIC	?lGetJONSCulturePerTurnFromTraits@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromTraits
PUBLIC	??_C@_0CE@HOPIHKFI@GetJONSCulturePerTurnFromGreatWo@ ; `string'
PUBLIC	?lGetJONSCulturePerTurnFromGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromGreatWorks
PUBLIC	??_C@_0CI@GIJOCEDC@ChangeJONSCulturePerTurnFromSpec@ ; `string'
PUBLIC	?lChangeJONSCulturePerTurnFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCulturePerTurnFromSpecialists
PUBLIC	??_C@_0CF@DFBDEFBH@GetJONSCulturePerTurnFromSpecial@ ; `string'
PUBLIC	?lGetJONSCulturePerTurnFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromSpecialists
PUBLIC	??_C@_0CF@KGECMFIH@ChangeJONSCulturePerTurnFromPoli@ ; `string'
PUBLIC	?lChangeJONSCulturePerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCulturePerTurnFromPolicies
PUBLIC	??_C@_0CC@DFKOEECO@GetJONSCulturePerTurnFromPolicie@ ; `string'
PUBLIC	?lGetJONSCulturePerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromPolicies
PUBLIC	??_C@_0CG@KGCOHKJP@ChangeJONSCulturePerTurnFromBuil@ ; `string'
PUBLIC	?lChangeJONSCulturePerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCulturePerTurnFromBuildings
PUBLIC	??_C@_0CD@JLHINFC@GetJONSCulturePerTurnFromBuildin@ ; `string'
PUBLIC	?lGetJONSCulturePerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromBuildings
PUBLIC	??_C@_0BK@CGPFDHCN@GetBaseJONSCulturePerTurn?$AA@ ; `string'
PUBLIC	?lGetBaseJONSCulturePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseJONSCulturePerTurn
PUBLIC	??_C@_0BG@IMDBELFE@GetJONSCulturePerTurn?$AA@	; `string'
PUBLIC	?lGetJONSCulturePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurn
PUBLIC	??_C@_0BI@MNIAPCAO@GetJONSCultureThreshold?$AA@	; `string'
PUBLIC	?lGetJONSCultureThreshold@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCultureThreshold
PUBLIC	??_C@_0BL@IFAKDEMK@DoJONSCultureLevelIncrease?$AA@ ; `string'
PUBLIC	?lDoJONSCultureLevelIncrease@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lDoJONSCultureLevelIncrease
PUBLIC	??_C@_0BH@CKDHJLDP@ChangeJONSCultureLevel?$AA@	; `string'
PUBLIC	?lChangeJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCultureLevel
PUBLIC	??_C@_0BE@NKCCGJMD@SetJONSCultureLevel?$AA@	; `string'
PUBLIC	?lSetJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetJONSCultureLevel
PUBLIC	??_C@_0BE@HEAJCJLP@GetJONSCultureLevel?$AA@	; `string'
PUBLIC	?lGetJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCultureLevel
PUBLIC	??_C@_0BO@HDNKJLLK@GetJONSCulturePerTurnTimes100?$AA@ ; `string'
PUBLIC	?lGetJONSCulturePerTurnTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnTimes100
PUBLIC	??_C@_0CA@BEBPGHLA@ChangeJONSCultureStoredTimes100?$AA@ ; `string'
PUBLIC	?lChangeJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCultureStoredTimes100
PUBLIC	??_C@_0BN@PJOHOOHJ@SetJONSCultureStoredTimes100?$AA@ ; `string'
PUBLIC	?lSetJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetJONSCultureStoredTimes100
PUBLIC	??_C@_0BN@CIEBABKN@GetJONSCultureStoredTimes100?$AA@ ; `string'
PUBLIC	?lGetJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCultureStoredTimes100
PUBLIC	??_C@_0BI@EBCOCIEG@ChangeJONSCultureStored?$AA@	; `string'
PUBLIC	?lChangeJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCultureStored
PUBLIC	??_C@_0BF@PFNFIDID@SetJONSCultureStored?$AA@	; `string'
PUBLIC	?lSetJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetJONSCultureStored
PUBLIC	??_C@_0BF@KMMIJFNE@GetJONSCultureStored?$AA@	; `string'
PUBLIC	?lGetJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCultureStored
PUBLIC	??_C@_0BL@NNNBCPJN@GetGreatPeopleRateModifier?$AA@ ; `string'
PUBLIC	?lGetGreatPeopleRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGreatPeopleRateModifier
PUBLIC	??_C@_0BK@KDPOINAO@ChangeBaseGreatPeopleRate?$AA@ ; `string'
PUBLIC	?lChangeBaseGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseGreatPeopleRate
PUBLIC	??_C@_0CA@KMDLAMII@GetTotalGreatPeopleRateModifier?$AA@ ; `string'
PUBLIC	?lGetTotalGreatPeopleRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetTotalGreatPeopleRateModifier
PUBLIC	??_C@_0BD@EJKIAKHA@GetGreatPeopleRate?$AA@	; `string'
PUBLIC	?lGetGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGreatPeopleRate
PUBLIC	??_C@_0BH@FFFJEHEB@GetBaseGreatPeopleRate?$AA@	; `string'
PUBLIC	?lGetBaseGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseGreatPeopleRate
PUBLIC	??_C@_0BC@KLEPOAKG@GetNumGreatPeople?$AA@	; `string'
PUBLIC	?lGetNumGreatPeople@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumGreatPeople
PUBLIC	??_C@_0BF@DCMBNE@SetHighestPopulation?$AA@	; `string'
PUBLIC	?lSetHighestPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetHighestPopulation
PUBLIC	??_C@_0BF@FJCPNHID@GetHighestPopulation?$AA@	; `string'
PUBLIC	?lGetHighestPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetHighestPopulation
PUBLIC	??_C@_0BC@KOHBIIDL@GetRealPopulation?$AA@	; `string'
PUBLIC	?lGetRealPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetRealPopulation
PUBLIC	??_C@_0BB@DMBKLBGC@ChangePopulation?$AA@	; `string'
PUBLIC	?lChangePopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangePopulation
PUBLIC	??_C@_0O@HAMIKLJM@SetPopulation?$AA@		; `string'
PUBLIC	?lSetPopulation@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lSetPopulation
PUBLIC	??_C@_0O@PNGBIOL@GetPopulation?$AA@		; `string'
PUBLIC	?lGetPopulation@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetPopulation
PUBLIC	??_C@_0BI@IICLLOKC@GetGameTurnLastExpanded?$AA@	; `string'
PUBLIC	?lGetGameTurnLastExpanded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGameTurnLastExpanded
PUBLIC	??_C@_0BE@GPLNLMHN@GetGameTurnAcquired?$AA@	; `string'
PUBLIC	?lGetGameTurnAcquired@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGameTurnAcquired
PUBLIC	??_C@_0BD@PEMIOCBG@GetGameTurnFounded?$AA@	; `string'
PUBLIC	?lGetGameTurnFounded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGameTurnFounded
PUBLIC	??_C@_0BC@ECAKDE@GetGarrisonedUnit?$AA@		; `string'
PUBLIC	?lGetGarrisonedUnit@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGarrisonedUnit
PUBLIC	??_C@_0O@JAHGGNPO@CanBuyAnyPlot?$AA@		; `string'
PUBLIC	?lCanBuyAnyPlot@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanBuyAnyPlot
PUBLIC	??_C@_0P@CLDNCOML@GetBuyPlotCost?$AA@		; `string'
PUBLIC	?lGetBuyPlotCost@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetBuyPlotCost
PUBLIC	??_C@_0BD@EKOODAKH@GetBuyablePlotList?$AA@	; `string'
PUBLIC	?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuyablePlotList
PUBLIC	??_C@_0BD@DPMBBFOK@GetNextBuyablePlot?$AA@	; `string'
PUBLIC	?lGetNextBuyablePlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNextBuyablePlot
PUBLIC	??_C@_0N@ELCKKIDJ@CanBuyPlotAt?$AA@		; `string'
PUBLIC	?lCanBuyPlotAt@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanBuyPlotAt
PUBLIC	??_C@_0L@MJKINFAP@CanBuyPlot?$AA@		; `string'
PUBLIC	?lCanBuyPlot@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanBuyPlot
PUBLIC	??_C@_0N@JOMCKPIG@GetRallyPlot?$AA@		; `string'
PUBLIC	?lGetRallyPlot@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetRallyPlot
PUBLIC	??_C@_09CNIEIFHO@WaterArea?$AA@			; `string'
PUBLIC	?lWaterArea@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lWaterArea
PUBLIC	??_C@_04KPICECCB@Area?$AA@			; `string'
PUBLIC	?lArea@CvLuaCity@@KAHPAUlua_State@@@Z		; CvLuaCity::lArea
PUBLIC	??_C@_04HIOGLPHN@Plot?$AA@			; `string'
PUBLIC	?lPlot@CvLuaCity@@KAHPAUlua_State@@@Z		; CvLuaCity::lPlot
PUBLIC	??_C@_06FBGHKGAE@AtPlot?$AA@			; `string'
PUBLIC	?lAtPlot@CvLuaCity@@KAHPAUlua_State@@@Z		; CvLuaCity::lAtPlot
PUBLIC	??_C@_02DKLFHNOI@At?$AA@			; `string'
PUBLIC	?lAt@CvLuaCity@@KAHPAUlua_State@@@Z		; CvLuaCity::lAt
PUBLIC	??_C@_04OHHHKNBL@GetY?$AA@			; `string'
PUBLIC	?lGetY@CvLuaCity@@KAHPAUlua_State@@@Z		; CvLuaCity::lGetY
PUBLIC	??_C@_04POGMJMFK@GetX?$AA@			; `string'
PUBLIC	?lGetX@CvLuaCity@@KAHPAUlua_State@@@Z		; CvLuaCity::lGetX
PUBLIC	??_C@_05CLBJHDA@GetID?$AA@			; `string'
PUBLIC	?lGetID@CvLuaCity@@KAHPAUlua_State@@@Z		; CvLuaCity::lGetID
PUBLIC	??_C@_0BF@OPJCOPIH@GetNumActiveBuilding?$AA@	; `string'
PUBLIC	?lGetNumActiveBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumActiveBuilding
PUBLIC	??_C@_0O@ELHLCIIC@IsHasBuilding?$AA@		; `string'
PUBLIC	?lIsHasBuilding@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsHasBuilding
PUBLIC	??_C@_0P@EOHOGKJK@GetNumBuilding?$AA@		; `string'
PUBLIC	?lGetNumBuilding@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetNumBuilding
PUBLIC	??_C@_0BD@OEGDKNCP@MaxHurryPopulation?$AA@	; `string'
PUBLIC	?lMaxHurryPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lMaxHurryPopulation
PUBLIC	??_C@_0BA@IMHIGCAF@HurryProduction?$AA@		; `string'
PUBLIC	?lHurryProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lHurryProduction
PUBLIC	??_C@_0BA@CCMOKMFO@HurryPopulation?$AA@		; `string'
PUBLIC	?lHurryPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lHurryPopulation
PUBLIC	??_C@_09FLEJKCEK@HurryGold?$AA@			; `string'
PUBLIC	?lHurryGold@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lHurryGold
PUBLIC	??_C@_09PDHBPCJG@HurryCost?$AA@			; `string'
PUBLIC	?lHurryCost@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lHurryCost
PUBLIC	??_C@_0P@KBNPLEGK@ProductionLeft?$AA@		; `string'
PUBLIC	?lProductionLeft@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lProductionLeft
PUBLIC	??_C@_0BA@NJNOJFJN@GrowthThreshold?$AA@		; `string'
PUBLIC	?lGrowthThreshold@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGrowthThreshold
PUBLIC	??_C@_0BH@LJBNHLKM@FoodDifferenceTimes100?$AA@	; `string'
PUBLIC	?lFoodDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lFoodDifferenceTimes100
PUBLIC	??_C@_0P@CNHJHJIP@FoodDifference?$AA@		; `string'
PUBLIC	?lFoodDifference@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lFoodDifference
PUBLIC	??_C@_0BA@BJLFGBFC@FoodConsumption?$AA@		; `string'
PUBLIC	?lFoodConsumption@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lFoodConsumption
PUBLIC	??_C@_09HEMCEJGG@IsCoastal?$AA@			; `string'
PUBLIC	?lIsCoastal@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsCoastal
PUBLIC	??_C@_0BH@ONOJLMEH@IsOriginalMajorCapital?$AA@	; `string'
PUBLIC	?lIsOriginalMajorCapital@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsOriginalMajorCapital
PUBLIC	??_C@_0BC@PAPJEFNG@IsOriginalCapital?$AA@	; `string'
PUBLIC	?lIsOriginalCapital@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsOriginalCapital
PUBLIC	??_C@_09MGCHGMCG@IsCapital?$AA@			; `string'
PUBLIC	?lIsCapital@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsCapital
PUBLIC	??_C@_09OLGPEPPJ@IsVisible?$AA@			; `string'
PUBLIC	?lIsVisible@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsVisible
PUBLIC	??_C@_07NIJBBMLI@IsHuman?$AA@			; `string'
PUBLIC	?lIsHuman@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsHuman
PUBLIC	??_C@_0M@NJNEDJLP@IsBarbarian?$AA@		; `string'
PUBLIC	?lIsBarbarian@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsBarbarian
PUBLIC	??_C@_0BA@LACHPPMM@GetCitySizeType?$AA@		; `string'
PUBLIC	?lGetCitySizeType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCitySizeType
PUBLIC	??_C@_0BA@GLKLOHNJ@GetArtStyleType?$AA@		; `string'
PUBLIC	?lGetArtStyleType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetArtStyleType
PUBLIC	??_C@_0BD@DDPEHEOB@GetPersonalityType?$AA@	; `string'
PUBLIC	?lGetPersonalityType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetPersonalityType
PUBLIC	??_C@_0BE@OGLFKPOE@GetCivilizationType?$AA@	; `string'
PUBLIC	?lGetCivilizationType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCivilizationType
PUBLIC	??_C@_0BA@NDPGKNBO@GetHandicapType?$AA@		; `string'
PUBLIC	?lGetHandicapType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetHandicapType
PUBLIC	??_C@_0BN@GNJODLOF@GetResourceYieldRateModifier?$AA@ ; `string'
PUBLIC	?lGetResourceYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetResourceYieldRateModifier
PUBLIC	??_C@_09KGDNLPBA@Conscript?$AA@			; `string'
PUBLIC	?lConscript@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lConscript
PUBLIC	??_C@_0N@PLNBPBNI@CanConscript?$AA@		; `string'
PUBLIC	?lCanConscript@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanConscript
PUBLIC	??_C@_0BL@PLEBJCEL@ConscriptMinCityPopulation?$AA@ ; `string'
PUBLIC	?lConscriptMinCityPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lConscriptMinCityPopulation
PUBLIC	??_C@_0BH@IGNMDIJF@GetConscriptPopulation?$AA@	; `string'
PUBLIC	?lGetConscriptPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetConscriptPopulation
PUBLIC	??_C@_0BB@EGKBFCJM@GetConscriptUnit?$AA@	; `string'
PUBLIC	?lGetConscriptUnit@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetConscriptUnit
PUBLIC	??_C@_05PELKKPHE@Hurry?$AA@			; `string'
PUBLIC	?lHurry@CvLuaCity@@KAHPAUlua_State@@@Z		; CvLuaCity::lHurry
PUBLIC	??_C@_08IDKGLCCG@CanHurry?$AA@			; `string'
PUBLIC	?lCanHurry@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanHurry
PUBLIC	??_C@_0BN@IGNDNHOA@GetExtraProductionDifference?$AA@ ; `string'
PUBLIC	?lGetExtraProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetExtraProductionDifference
PUBLIC	??_C@_0CA@IIOBOOCG@GetSpecialistProductionModifier?$AA@ ; `string'
PUBLIC	?lGetSpecialistProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistProductionModifier
PUBLIC	??_C@_0BN@FIGLLOHP@GetProjectProductionModifier?$AA@ ; `string'
PUBLIC	?lGetProjectProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProjectProductionModifier
PUBLIC	??_C@_0BO@BOIFPPNB@GetBuildingProductionModifier?$AA@ ; `string'
PUBLIC	?lGetBuildingProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingProductionModifier
PUBLIC	??_C@_0BK@CAONOBAD@GetUnitProductionModifier?$AA@ ; `string'
PUBLIC	?lGetUnitProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitProductionModifier
PUBLIC	??_C@_0CD@FAGAIJM@GetRawProductionDifferenceTimes1@ ; `string'
PUBLIC	?lGetRawProductionDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetRawProductionDifferenceTimes100
PUBLIC	??_C@_0CH@BNPOEMEH@GetCurrentProductionDifferenceTi@ ; `string'
PUBLIC	?lGetCurrentProductionDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCurrentProductionDifferenceTimes100
PUBLIC	??_C@_0BL@KEJICAMN@GetRawProductionDifference?$AA@ ; `string'
PUBLIC	?lGetRawProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetRawProductionDifference
PUBLIC	??_C@_0BP@DPKFHAM@GetCurrentProductionDifference?$AA@ ; `string'
PUBLIC	?lGetCurrentProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCurrentProductionDifference
PUBLIC	??_C@_0BG@COALBBFM@GetProductionModifier?$AA@	; `string'
PUBLIC	?lGetProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionModifier
PUBLIC	??_C@_0BI@LBFPCPLM@GetYieldModifierTooltip?$AA@	; `string'
PUBLIC	?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetYieldModifierTooltip
PUBLIC	??_C@_0BB@JCKMHPDJ@ChangeProduction?$AA@	; `string'
PUBLIC	?lChangeProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeProduction
PUBLIC	??_C@_0O@NOHOGFMH@SetProduction?$AA@		; `string'
PUBLIC	?lSetProduction@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lSetProduction
PUBLIC	??_C@_0BH@JBKNIEHE@GetProjectPurchaseCost?$AA@	; `string'
PUBLIC	?lGetProjectPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProjectPurchaseCost
PUBLIC	??_C@_0BN@CMKEAJOA@GetBuildingFaithPurchaseCost?$AA@ ; `string'
PUBLIC	?lGetBuildingFaithPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingFaithPurchaseCost
PUBLIC	??_C@_0BI@EOCLNJGF@GetBuildingPurchaseCost?$AA@	; `string'
PUBLIC	?lGetBuildingPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingPurchaseCost
PUBLIC	??_C@_0BJ@CKMNAAAH@GetUnitFaithPurchaseCost?$AA@ ; `string'
PUBLIC	?lGetUnitFaithPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitFaithPurchaseCost
PUBLIC	??_C@_0BE@OFOJNOOB@GetUnitPurchaseCost?$AA@	; `string'
PUBLIC	?lGetUnitPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitPurchaseCost
PUBLIC	??_C@_0O@NIIMABIN@IsCanPurchase?$AA@		; `string'
PUBLIC	?lIsCanPurchase@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsCanPurchase
PUBLIC	??_C@_0BE@GBMHNAJH@CreateApolloProgram?$AA@	; `string'
PUBLIC	?lCreateApolloProgram@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCreateApolloProgram
PUBLIC	??_C@_0CB@EFOFIEPO@GetSpecialistProductionTurnsLeft@ ; `string'
PUBLIC	?lGetSpecialistProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistProductionTurnsLeft
PUBLIC	??_C@_0BO@FHICOHPO@GetProjectProductionTurnsLeft?$AA@ ; `string'
PUBLIC	?lGetProjectProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProjectProductionTurnsLeft
PUBLIC	??_C@_0BP@GGKKIHFA@GetBuildingProductionTurnsLeft?$AA@ ; `string'
PUBLIC	?lGetBuildingProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingProductionTurnsLeft
PUBLIC	??_C@_0BL@OEJFMLG@GetUnitProductionTurnsLeft?$AA@ ; `string'
PUBLIC	?lGetUnitProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitProductionTurnsLeft
PUBLIC	??_C@_0BH@PFJDPGCD@GetProductionTurnsLeft?$AA@	; `string'
PUBLIC	?lGetProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionTurnsLeft
PUBLIC	??_C@_0BL@JBMFKMKF@GetProjectProductionNeeded?$AA@ ; `string'
PUBLIC	?lGetProjectProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProjectProductionNeeded
PUBLIC	??_C@_0BM@GGLBNBDE@GetBuildingProductionNeeded?$AA@ ; `string'
PUBLIC	?lGetBuildingProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingProductionNeeded
PUBLIC	??_C@_0BI@LJANCJHB@GetUnitProductionNeeded?$AA@	; `string'
PUBLIC	?lGetUnitProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitProductionNeeded
PUBLIC	??_C@_0BE@BJPFPGBE@GetProductionNeeded?$AA@	; `string'
PUBLIC	?lGetProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionNeeded
PUBLIC	??_C@_0BG@ENMJHDK@GetProductionTimes100?$AA@	; `string'
PUBLIC	?lGetProductionTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionTimes100
PUBLIC	??_C@_0O@KBGANGLA@GetProduction?$AA@		; `string'
PUBLIC	?lGetProduction@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetProduction
PUBLIC	??_C@_0BF@LICEFFKA@IsUnitFoodProduction?$AA@	; `string'
PUBLIC	?lIsUnitFoodProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsUnitFoodProduction
PUBLIC	??_C@_0BG@EDLGFJKE@GetFirstBuildingOrder?$AA@	; `string'
PUBLIC	?lGetFirstBuildingOrder@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFirstBuildingOrder
PUBLIC	??_C@_0BC@LOPIPDKF@GetNumTrainUnitAI?$AA@	; `string'
PUBLIC	?lGetNumTrainUnitAI@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumTrainUnitAI
PUBLIC	??_C@_0BC@BMCPAEED@GetOrderFromQueue?$AA@	; `string'
PUBLIC	?lGetOrderFromQueue@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetOrderFromQueue
PUBLIC	??_C@_0BI@GOLELKAA@GetFirstSpecialistOrder?$AA@	; `string'
PUBLIC	?lGetFirstSpecialistOrder@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFirstSpecialistOrder
PUBLIC	??_C@_0BF@KCLLEIOH@GetFirstProjectOrder?$AA@	; `string'
PUBLIC	?lGetFirstProjectOrder@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFirstProjectOrder
PUBLIC	??_C@_0BC@MEAEELJJ@GetFirstUnitOrder?$AA@	; `string'
PUBLIC	?lGetFirstUnitOrder@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFirstUnitOrder
PUBLIC	??_C@_0BB@FDBBPKLD@IsFoodProduction?$AA@	; `string'
PUBLIC	?lIsFoodProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsFoodProduction
PUBLIC	??_C@_0BO@NIKBHNEM@GetGeneralProductionTurnsLeft?$AA@ ; `string'
PUBLIC	?lGetGeneralProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGeneralProductionTurnsLeft
PUBLIC	??_C@_0BF@IAGNNOMA@GetProductionNameKey?$AA@	; `string'
PUBLIC	?lGetProductionNameKey@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionNameKey
PUBLIC	??_C@_0BF@NPELMAGE@GetProductionProcess?$AA@	; `string'
PUBLIC	?lGetProductionProcess@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionProcess
PUBLIC	??_C@_0BI@FNNHALBC@GetProductionSpecialist?$AA@	; `string'
PUBLIC	?lGetProductionSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionSpecialist
PUBLIC	??_C@_0BF@IBDMJHKC@GetProductionProject?$AA@	; `string'
PUBLIC	?lGetProductionProject@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionProject
PUBLIC	??_C@_0BG@GMPDFJII@GetProductionBuilding?$AA@	; `string'
PUBLIC	?lGetProductionBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionBuilding
PUBLIC	??_C@_0BE@JMGMMAKO@GetProductionUnitAI?$AA@	; `string'
PUBLIC	?lGetProductionUnitAI@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionUnitAI
PUBLIC	??_C@_0BC@HHAFHDBH@GetProductionUnit?$AA@	; `string'
PUBLIC	?lGetProductionUnit@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionUnit
PUBLIC	??_C@_0BI@PMHACJOD@AddProductionExperience?$AA@	; `string'
PUBLIC	?lAddProductionExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lAddProductionExperience
PUBLIC	??_C@_0BI@HOMJNLCG@GetProductionExperience?$AA@	; `string'
PUBLIC	?lGetProductionExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionExperience
PUBLIC	??_C@_0BG@FDHDEEDP@CanContinueProduction?$AA@	; `string'
PUBLIC	?lCanContinueProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanContinueProduction
PUBLIC	??_C@_0BE@IPGILDGA@IsProductionProcess?$AA@	; `string'
PUBLIC	?lIsProductionProcess@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionProcess
PUBLIC	??_C@_0BH@PMKLPINJ@IsProductionSpecialist?$AA@	; `string'
PUBLIC	?lIsProductionSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionSpecialist
PUBLIC	??_C@_0BE@NBBPOEKG@IsProductionProject?$AA@	; `string'
PUBLIC	?lIsProductionProject@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionProject
PUBLIC	??_C@_0BF@GLMOLOOC@IsProductionBuilding?$AA@	; `string'
PUBLIC	?lIsProductionBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionBuilding
PUBLIC	??_C@_0BB@MEBAJFDN@IsProductionUnit?$AA@	; `string'
PUBLIC	?lIsProductionUnit@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionUnit
PUBLIC	??_C@_0BE@DDFAINDE@IsProductionLimited?$AA@	; `string'
PUBLIC	?lIsProductionLimited@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionLimited
PUBLIC	??_C@_0N@GIHKPEF@IsProduction?$AA@		; `string'
PUBLIC	?lIsProduction@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsProduction
PUBLIC	??_C@_0BB@IKLMJKMH@GetFoodTurnsLeft?$AA@	; `string'
PUBLIC	?lGetFoodTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFoodTurnsLeft
PUBLIC	??_C@_0BH@MCIHHEDJ@DoPickResourceDemanded?$AA@	; `string'
PUBLIC	?lDoPickResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lDoPickResourceDemanded
PUBLIC	??_C@_0BE@HDAFCNHJ@SetResourceDemanded?$AA@	; `string'
PUBLIC	?lSetResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetResourceDemanded
PUBLIC	??_C@_0BE@NNCOGNAF@GetResourceDemanded?$AA@	; `string'
PUBLIC	?lGetResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetResourceDemanded
PUBLIC	??_C@_0BN@GDJGPHKP@IsBuildingLocalResourceValid?$AA@ ; `string'
PUBLIC	?lIsBuildingLocalResourceValid@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsBuildingLocalResourceValid
PUBLIC	??_C@_07OPIONNNI@CanJoin?$AA@			; `string'
PUBLIC	?lCanJoin@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanJoin
PUBLIC	??_C@_0CA@GGJPFJGL@GetFaithPurchaseBuildingTooltip?$AA@ ; `string'
PUBLIC	?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPurchaseBuildingTooltip
PUBLIC	??_C@_0BL@FAPMIPIE@GetPurchaseBuildingTooltip?$AA@ ; `string'
PUBLIC	?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetPurchaseBuildingTooltip
PUBLIC	??_C@_0BM@MAHKFKLD@GetFaithPurchaseUnitTooltip?$AA@ ; `string'
PUBLIC	?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPurchaseUnitTooltip
PUBLIC	??_C@_0BH@CFONLAFB@GetPurchaseUnitTooltip?$AA@	; `string'
PUBLIC	?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetPurchaseUnitTooltip
PUBLIC	??_C@_0M@LBFPGCCN@CanMaintain?$AA@		; `string'
PUBLIC	?lCanMaintain@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanMaintain
PUBLIC	??_C@_0L@DCAJPLNN@CanPrepare?$AA@		; `string'
PUBLIC	?lCanPrepare@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanPrepare
PUBLIC	??_C@_09ENLCPIFP@CanCreate?$AA@			; `string'
PUBLIC	?lCanCreate@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanCreate
PUBLIC	??_C@_0N@OBKNDGPF@CanConstruct?$AA@		; `string'
PUBLIC	?lCanConstruct@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanConstruct
PUBLIC	??_C@_0BE@IHIHNENF@CanConstructTooltip?$AA@	; `string'
PUBLIC	?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanConstructTooltip
PUBLIC	??_C@_08BCMOJMKA@CanTrain?$AA@			; `string'
PUBLIC	?lCanTrain@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanTrain
PUBLIC	??_C@_0BA@EKMJEJJ@CanTrainTooltip?$AA@		; `string'
PUBLIC	?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanTrainTooltip
PUBLIC	??_C@_0BB@PMKDJFAN@IsBuildingsMaxed?$AA@	; `string'
PUBLIC	?lIsBuildingsMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsBuildingsMaxed
PUBLIC	??_C@_0BH@PEGJHPHH@IsNationalWondersMaxed?$AA@	; `string'
PUBLIC	?lIsNationalWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsNationalWondersMaxed
PUBLIC	??_C@_0BD@ILFMPGB@IsTeamWondersMaxed?$AA@	; `string'
PUBLIC	?lIsTeamWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsTeamWondersMaxed
PUBLIC	??_C@_0BE@MLOPBNAH@IsWorldWondersMaxed?$AA@	; `string'
PUBLIC	?lIsWorldWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsWorldWondersMaxed
PUBLIC	??_C@_0BF@DHLOKDMI@AllUpgradesAvailable?$AA@	; `string'
PUBLIC	?lAllUpgradesAvailable@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lAllUpgradesAvailable
PUBLIC	??_C@_0BC@NIDNNACB@FindYieldRateRank?$AA@	; `string'
PUBLIC	?lFindYieldRateRank@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lFindYieldRateRank
PUBLIC	??_C@_0BG@HJIHCGBJ@FindBaseYieldRateRank?$AA@	; `string'
PUBLIC	?lFindBaseYieldRateRank@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lFindBaseYieldRateRank
PUBLIC	??_C@_0BD@CLJOHCFG@FindPopulationRank?$AA@	; `string'
PUBLIC	?lFindPopulationRank@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lFindPopulationRank
PUBLIC	??_C@_0BD@ENGGNHLP@CountNumRiverPlots?$AA@	; `string'
PUBLIC	?lCountNumRiverPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCountNumRiverPlots
PUBLIC	??_C@_0BD@BBABDIP@CountNumWaterPlots?$AA@	; `string'
PUBLIC	?lCountNumWaterPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCountNumWaterPlots
PUBLIC	??_C@_0BG@FBLIMDFF@CountNumImprovedPlots?$AA@	; `string'
PUBLIC	?lCountNumImprovedPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCountNumImprovedPlots
PUBLIC	??_C@_0BF@DHGDDLG@ClearWorkingOverride?$AA@	; `string'
PUBLIC	?lClearWorkingOverride@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lClearWorkingOverride
PUBLIC	??_C@_0BA@PODKKBHB@IsPlotBlockaded?$AA@		; `string'
PUBLIC	?lIsPlotBlockaded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsPlotBlockaded
PUBLIC	??_C@_07BKPKDGDP@CanWork?$AA@			; `string'
PUBLIC	?lCanWork@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanWork
PUBLIC	??_C@_0BB@EPAKKPKO@GetCityIndexPlot?$AA@	; `string'
PUBLIC	?lGetCityIndexPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCityIndexPlot
PUBLIC	??_C@_0BB@JDCFJGPM@GetCityPlotIndex?$AA@	; `string'
PUBLIC	?lGetCityPlotIndex@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCityPlotIndex
PUBLIC	??_C@_0BB@JGGOEKHG@ChooseProduction?$AA@	; `string'
PUBLIC	?lChooseProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChooseProduction
PUBLIC	??_C@_06LFMCFBGM@DoTask?$AA@			; `string'
PUBLIC	?lDoTask@CvLuaCity@@KAHPAUlua_State@@@Z		; CvLuaCity::lDoTask
PUBLIC	??_C@_0BD@NCKCFLCG@CreateGreatAdmiral?$AA@	; `string'
PUBLIC	?lCreateGreatAdmiral@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCreateGreatAdmiral
PUBLIC	??_C@_0BD@PBNOMGLK@CreateGreatGeneral?$AA@	; `string'
PUBLIC	?lCreateGreatGeneral@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCreateGreatGeneral
PUBLIC	??_C@_04NIFFMPNM@Kill?$AA@			; `string'
PUBLIC	?lKill@CvLuaCity@@KAHPAUlua_State@@@Z		; CvLuaCity::lKill
PUBLIC	??_C@_06OAPDBHPB@IsNone?$AA@			; `string'
PUBLIC	?lIsNone@CvLuaCity@@KAHPAUlua_State@@@Z		; CvLuaCity::lIsNone
PUBLIC	?PushMethods@CvLuaCity@@SAXPAUlua_State@@H@Z	; CvLuaCity::PushMethods
EXTRN	_lua_setfield:PROC
EXTRN	_lua_pushcclosure:PROC
;	COMDAT ??_C@_0CD@COEJMCEC@GetReligionCityRangeStrikeModifi@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
CONST	SEGMENT
??_C@_0CD@COEJMCEC@GetReligionCityRangeStrikeModifi@ DB 'GetReligionCityR'
	DB	'angeStrikeModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FDKOKGMB@GetNumForcedWorkingPlots?$AA@
CONST	SEGMENT
??_C@_0BJ@FDKOKGMB@GetNumForcedWorkingPlots?$AA@ DB 'GetNumForcedWorkingP'
	DB	'lots', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EJFOMIDN@GetCultureFromSpecialist?$AA@
CONST	SEGMENT
??_C@_0BJ@EJFOMIDN@GetCultureFromSpecialist?$AA@ DB 'GetCultureFromSpecia'
	DB	'list', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LMIDJJOI@GetSpecialistYield?$AA@
CONST	SEGMENT
??_C@_0BD@LMIDJJOI@GetSpecialistYield?$AA@ DB 'GetSpecialistYield', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KGFIABNE@CanPlaceUnitHere?$AA@
CONST	SEGMENT
??_C@_0BB@KGFIABNE@CanPlaceUnitHere?$AA@ DB 'CanPlaceUnitHere', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JCDPNDEK@GetNumCityPlots?$AA@
CONST	SEGMENT
??_C@_0BA@JCDPNDEK@GetNumCityPlots?$AA@ DB 'GetNumCityPlots', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@BMMNEKOO@GetBuildingGlobalEspionageModifi@
CONST	SEGMENT
??_C@_0CD@BMMNEKOO@GetBuildingGlobalEspionageModifi@ DB 'GetBuildingGloba'
	DB	'lEspionageModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KJGALFCA@GetBuildingEspionageModifier?$AA@
CONST	SEGMENT
??_C@_0BN@KJGALFCA@GetBuildingEspionageModifier?$AA@ DB 'GetBuildingEspio'
	DB	'nageModifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IJFNGACL@SetBuildingYieldChange?$AA@
CONST	SEGMENT
??_C@_0BH@IJFNGACL@SetBuildingYieldChange?$AA@ DB 'SetBuildingYieldChange'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IIHDEHPE@GetBuildingYieldChange?$AA@
CONST	SEGMENT
??_C@_0BH@IIHDEHPE@GetBuildingYieldChange?$AA@ DB 'GetBuildingYieldChange'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PCCBFHJN@GetOrderQueueLength?$AA@
CONST	SEGMENT
??_C@_0BE@PCCBFHJN@GetOrderQueueLength?$AA@ DB 'GetOrderQueueLength', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08BEEKLBOG@PopOrder?$AA@
CONST	SEGMENT
??_C@_08BEEKLBOG@PopOrder?$AA@ DB 'PopOrder', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BPJOHKFH@PushOrder?$AA@
CONST	SEGMENT
??_C@_09BPJOHKFH@PushOrder?$AA@ DB 'PushOrder', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OFIEGGCN@ClearOrderQueue?$AA@
CONST	SEGMENT
??_C@_0BA@OFIEGGCN@ClearOrderQueue?$AA@ DB 'ClearOrderQueue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MHAHLBOF@GetNumGreatWorksInBuilding?$AA@
CONST	SEGMENT
??_C@_0BL@MHAHLBOF@GetNumGreatWorksInBuilding?$AA@ DB 'GetNumGreatWorksIn'
	DB	'Building', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IFLPGFLJ@IsHoldingGreatWork?$AA@
CONST	SEGMENT
??_C@_0BD@IFLPGFLJ@IsHoldingGreatWork?$AA@ DB 'IsHoldingGreatWork', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DIKBHKDI@SetBuildingGreatWork?$AA@
CONST	SEGMENT
??_C@_0BF@DIKBHKDI@SetBuildingGreatWork?$AA@ DB 'SetBuildingGreatWork', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GBLMGMGP@GetBuildingGreatWork?$AA@
CONST	SEGMENT
??_C@_0BF@GBLMGMGP@GetBuildingGreatWork?$AA@ DB 'GetBuildingGreatWork', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FAHLOAIH@GetTotalBaseBuildingMaintenance?$AA@
CONST	SEGMENT
??_C@_0CA@FAHLOAIH@GetTotalBaseBuildingMaintenance?$AA@ DB 'GetTotalBaseB'
	DB	'uildingMaintenance', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NPBALGAL@GetSellBuildingRefund?$AA@
CONST	SEGMENT
??_C@_0BG@NPBALGAL@GetSellBuildingRefund?$AA@ DB 'GetSellBuildingRefund', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@ONJFGLJC@IsBuildingSellable?$AA@
CONST	SEGMENT
??_C@_0BD@ONJFGLJC@IsBuildingSellable?$AA@ DB 'IsBuildingSellable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MCLNCOID@GetNumFreeBuilding?$AA@
CONST	SEGMENT
??_C@_0BD@MCLNCOID@GetNumFreeBuilding?$AA@ DB 'GetNumFreeBuilding', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HIGFIIBM@SetNumRealBuilding?$AA@
CONST	SEGMENT
??_C@_0BD@HIGFIIBM@SetNumRealBuilding?$AA@ DB 'SetNumRealBuilding', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@ICEPLOPE@GetNumRealBuilding?$AA@
CONST	SEGMENT
??_C@_0BD@ICEPLOPE@GetNumRealBuilding?$AA@ DB 'GetNumRealBuilding', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MNHDNBKJ@IsForcedWorkingPlot?$AA@
CONST	SEGMENT
??_C@_0BE@MNHDNBKJ@IsForcedWorkingPlot?$AA@ DB 'IsForcedWorkingPlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MLMHPGAK@AlterWorkingPlot?$AA@
CONST	SEGMENT
??_C@_0BB@MLMHPGAK@AlterWorkingPlot?$AA@ DB 'AlterWorkingPlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CBDHABDH@IsWorkingPlot?$AA@
CONST	SEGMENT
??_C@_0O@CBDHABDH@IsWorkingPlot?$AA@ DB 'IsWorkingPlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LJEHDMDL@GetAirStrikeDefenseDamage?$AA@
CONST	SEGMENT
??_C@_0BK@LJEHDMDL@GetAirStrikeDefenseDamage?$AA@ DB 'GetAirStrikeDefense'
	DB	'Damage', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IGMINMDO@RangeCombatDamage?$AA@
CONST	SEGMENT
??_C@_0BC@IGMINMDO@RangeCombatDamage?$AA@ DB 'RangeCombatDamage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GENLCPG@RangeCombatUnitDefense?$AA@
CONST	SEGMENT
??_C@_0BH@GENLCPG@RangeCombatUnitDefense?$AA@ DB 'RangeCombatUnitDefense', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@EMMFCPOC@HasPerformedRangedStrikeThisTurn@
CONST	SEGMENT
??_C@_0CB@EMMFCPOC@HasPerformedRangedStrikeThisTurn@ DB 'HasPerformedRang'
	DB	'edStrikeThisTurn', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HFDCOJOB@CanRangeStrikeAt?$AA@
CONST	SEGMENT
??_C@_0BB@HFDCOJOB@CanRangeStrikeAt?$AA@ DB 'CanRangeStrikeAt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PPBGFDPB@CanRangeStrikeNow?$AA@
CONST	SEGMENT
??_C@_0BC@PPBGFDPB@CanRangeStrikeNow?$AA@ DB 'CanRangeStrikeNow', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CDOKKCEP@CanRangeStrike?$AA@
CONST	SEGMENT
??_C@_0P@CDOKKCEP@CanRangeStrike?$AA@ DB 'CanRangeStrike', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NIPPNLFL@GetMaxHitPoints?$AA@
CONST	SEGMENT
??_C@_0BA@NIPPNLFL@GetMaxHitPoints?$AA@ DB 'GetMaxHitPoints', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OECJINCP@ChangeDamage?$AA@
CONST	SEGMENT
??_C@_0N@OECJINCP@ChangeDamage?$AA@ DB 'ChangeDamage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09LEHOBNAL@SetDamage?$AA@
CONST	SEGMENT
??_C@_09LEHOBNAL@SetDamage?$AA@ DB 'SetDamage', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JKDLDMJJ@GetDamage?$AA@
CONST	SEGMENT
??_C@_09JKDLDMJJ@GetDamage?$AA@ DB 'GetDamage', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GOIDKIFF@GetStrengthValue?$AA@
CONST	SEGMENT
??_C@_0BB@GOIDKIFF@GetStrengthValue?$AA@ DB 'GetStrengthValue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@POOBMJHD@UpdateStrengthValue?$AA@
CONST	SEGMENT
??_C@_0BE@POOBMJHD@UpdateStrengthValue?$AA@ DB 'UpdateStrengthValue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IHAGDLPN@GetSpecialistFreeExperience?$AA@
CONST	SEGMENT
??_C@_0BM@IHAGDLPN@GetSpecialistFreeExperience?$AA@ DB 'GetSpecialistFree'
	DB	'Experience', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IKABNDKF@IsFreePromotion?$AA@
CONST	SEGMENT
??_C@_0BA@IKABNDKF@IsFreePromotion?$AA@ DB 'IsFreePromotion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IMOAGJCF@GetFreePromotionCount?$AA@
CONST	SEGMENT
??_C@_0BG@IMOAGJCF@GetFreePromotionCount?$AA@ DB 'GetFreePromotionCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JLBDEMAE@GetUnitCombatFreeExperience?$AA@
CONST	SEGMENT
??_C@_0BM@JLBDEMAE@GetUnitCombatFreeExperience?$AA@ DB 'GetUnitCombatFree'
	DB	'Experience', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MHBNFFJG@IsForcedAvoidGrowth?$AA@
CONST	SEGMENT
??_C@_0BE@MHBNFFJG@IsForcedAvoidGrowth?$AA@ DB 'IsForcedAvoidGrowth', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FAOCLHCN@SetFocusType?$AA@
CONST	SEGMENT
??_C@_0N@FAOCLHCN@SetFocusType?$AA@ DB 'SetFocusType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CEFMHLGB@GetFocusType?$AA@
CONST	SEGMENT
??_C@_0N@CEFMHLGB@GetFocusType?$AA@ DB 'GetFocusType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@NJJDCLIJ@IsNoAutoAssignSpecialists?$AA@
CONST	SEGMENT
??_C@_0BK@NJJDCLIJ@IsNoAutoAssignSpecialists?$AA@ DB 'IsNoAutoAssignSpeci'
	DB	'alists', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FLFDINC@DoVerifyWorkingPlots?$AA@
CONST	SEGMENT
??_C@_0BF@FLFDINC@DoVerifyWorkingPlots?$AA@ DB 'DoVerifyWorkingPlots', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KEIPLLG@DoReallocateCitizens?$AA@
CONST	SEGMENT
??_C@_0BF@KEIPLLG@DoReallocateCitizens?$AA@ DB 'DoReallocateCitizens', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@PGFEFAIL@GetNumSpecialistsInBuilding?$AA@
CONST	SEGMENT
??_C@_0BM@PGFEFAIL@GetNumSpecialistsInBuilding?$AA@ DB 'GetNumSpecialists'
	DB	'InBuilding', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@FNFNICHP@ChangeSpecialistGreatPersonProgr@
CONST	SEGMENT
??_C@_0CM@FNFNICHP@ChangeSpecialistGreatPersonProgr@ DB 'ChangeSpecialist'
	DB	'GreatPersonProgressTimes100', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@BIFDLHCL@GetSpecialistGreatPersonProgress@
CONST	SEGMENT
??_C@_0CJ@BIFDLHCL@GetSpecialistGreatPersonProgress@ DB 'GetSpecialistGre'
	DB	'atPersonProgressTimes100', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@HDCLCODD@GetSpecialistGreatPersonProgress@
CONST	SEGMENT
??_C@_0CB@HDCLCODD@GetSpecialistGreatPersonProgress@ DB 'GetSpecialistGre'
	DB	'atPersonProgress', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IINBNMBF@GetSpecialistCount?$AA@
CONST	SEGMENT
??_C@_0BD@IINBNMBF@GetSpecialistCount?$AA@ DB 'GetSpecialistCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HKGINKIM@GetNumSpecialistsAllowedByBuildi@
CONST	SEGMENT
??_C@_0CD@HKGINKIM@GetNumSpecialistsAllowedByBuildi@ DB 'GetNumSpecialist'
	DB	'sAllowedByBuilding', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@KFIIIIKB@GetSpecialistUpgradeThreshold?$AA@
CONST	SEGMENT
??_C@_0BO@KFIIIIKB@GetSpecialistUpgradeThreshold?$AA@ DB 'GetSpecialistUp'
	DB	'gradeThreshold', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@EOHIHCLK@IsCanAddSpecialistToBuilding?$AA@
CONST	SEGMENT
??_C@_0BN@EOHIHCLK@IsCanAddSpecialistToBuilding?$AA@ DB 'IsCanAddSpeciali'
	DB	'stToBuilding', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BKIOFMPC@ChangeUnitProduction?$AA@
CONST	SEGMENT
??_C@_0BF@BKIOFMPC@ChangeUnitProduction?$AA@ DB 'ChangeUnitProduction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KBOCLBOG@SetUnitProduction?$AA@
CONST	SEGMENT
??_C@_0BC@KBOCLBOG@SetUnitProduction?$AA@ DB 'SetUnitProduction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IEOJDKPI@GetUnitProduction?$AA@
CONST	SEGMENT
??_C@_0BC@IEOJDKPI@GetUnitProduction?$AA@ DB 'GetUnitProduction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IGCHMDBE@GetBuildingOriginalTime?$AA@
CONST	SEGMENT
??_C@_0BI@IGCHMDBE@GetBuildingOriginalTime?$AA@ DB 'GetBuildingOriginalTi'
	DB	'me', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KDCBJMJP@GetBuildingOriginalOwner?$AA@
CONST	SEGMENT
??_C@_0BJ@KDCBJMJP@GetBuildingOriginalOwner?$AA@ DB 'GetBuildingOriginalO'
	DB	'wner', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@BPJFOHCL@ChangeBuildingProductionTime?$AA@
CONST	SEGMENT
??_C@_0BN@BPJFOHCL@ChangeBuildingProductionTime?$AA@ DB 'ChangeBuildingPr'
	DB	'oductionTime', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JNDCOJAJ@SetBuildingProductionTime?$AA@
CONST	SEGMENT
??_C@_0BK@JNDCOJAJ@SetBuildingProductionTime?$AA@ DB 'SetBuildingProducti'
	DB	'onTime', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@BNPECEKP@GetBuildingProductionTime?$AA@
CONST	SEGMENT
??_C@_0BK@BNPECEKP@GetBuildingProductionTime?$AA@ DB 'GetBuildingProducti'
	DB	'onTime', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MMEAFHDF@ChangeBuildingProduction?$AA@
CONST	SEGMENT
??_C@_0BJ@MMEAFHDF@ChangeBuildingProduction?$AA@ DB 'ChangeBuildingProduc'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CHPKJKKB@SetBuildingProduction?$AA@
CONST	SEGMENT
??_C@_0BG@CHPKJKKB@SetBuildingProduction?$AA@ DB 'SetBuildingProduction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NCKMEDOA@GetBuildingProduction?$AA@
CONST	SEGMENT
??_C@_0BG@NCKMEDOA@GetBuildingProduction?$AA@ DB 'GetBuildingProduction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GIKEEJCO@IsHasResourceLocal?$AA@
CONST	SEGMENT
??_C@_0BD@GIKEEJCO@IsHasResourceLocal?$AA@ DB 'IsHasResourceLocal', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DEJFEJPJ@SetName?$AA@
CONST	SEGMENT
??_C@_07DEJFEJPJ@SetName?$AA@ DB 'SetName', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07MMGEHGCI@GetName?$AA@
CONST	SEGMENT
??_C@_07MMGEHGCI@GetName?$AA@ DB 'GetName', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PJBAHION@GetNameKey?$AA@
CONST	SEGMENT
??_C@_0L@PJBAHION@GetNameKey?$AA@ DB 'GetNameKey', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JIOPKDAN@SetRevealed?$AA@
CONST	SEGMENT
??_C@_0M@JIOPKDAN@SetRevealed?$AA@ DB 'SetRevealed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KNACFKBL@IsRevealed?$AA@
CONST	SEGMENT
??_C@_0L@KNACFKBL@IsRevealed?$AA@ DB 'IsRevealed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HHHODKFL@IsEverOwned?$AA@
CONST	SEGMENT
??_C@_0M@HHHODKFL@IsEverOwned?$AA@ DB 'IsEverOwned', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@CIOKPJJB@GetDomainProductionModifier?$AA@
CONST	SEGMENT
??_C@_0BM@CIOKPJJB@GetDomainProductionModifier?$AA@ DB 'GetDomainProducti'
	DB	'onModifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GMGIGBHD@GetDomainFreeExperience?$AA@
CONST	SEGMENT
??_C@_0BI@GMGIGBHD@GetDomainFreeExperience?$AA@ DB 'GetDomainFreeExperien'
	DB	'ce', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@GICAENNG@GetExtraSpecialistYieldOfType?$AA@
CONST	SEGMENT
??_C@_0BO@GICAENNG@GetExtraSpecialistYieldOfType?$AA@ DB 'GetExtraSpecial'
	DB	'istYieldOfType', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GIDAMOKL@GetExtraSpecialistYield?$AA@
CONST	SEGMENT
??_C@_0BI@GIDAMOKL@GetExtraSpecialistYield?$AA@ DB 'GetExtraSpecialistYie'
	DB	'ld', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MPEACCAJ@GetYieldRateModifier?$AA@
CONST	SEGMENT
??_C@_0BF@MPEACCAJ@GetYieldRateModifier?$AA@ DB 'GetYieldRateModifier', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OFJHKEGP@GetYieldRateTimes100?$AA@
CONST	SEGMENT
??_C@_0BF@OFJHKEGP@GetYieldRateTimes100?$AA@ DB 'GetYieldRateTimes100', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LGPNBIDL@GetYieldRate?$AA@
CONST	SEGMENT
??_C@_0N@LGPNBIDL@GetYieldRate?$AA@ DB 'GetYieldRate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BHAAEGH@GetBaseYieldRateModifier?$AA@
CONST	SEGMENT
??_C@_0BJ@BHAAEGH@GetBaseYieldRateModifier?$AA@ DB 'GetBaseYieldRateModif'
	DB	'ier', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FHGKGLBM@GetYieldPerPopTimes100?$AA@
CONST	SEGMENT
??_C@_0BH@FHGKGLBM@GetYieldPerPopTimes100?$AA@ DB 'GetYieldPerPopTimes100'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JHBINGGO@ChangeBaseYieldRateFromReligion?$AA@
CONST	SEGMENT
??_C@_0CA@JHBINGGO@ChangeBaseYieldRateFromReligion?$AA@ DB 'ChangeBaseYie'
	DB	'ldRateFromReligion', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KLEGLAHD@GetBaseYieldRateFromReligion?$AA@
CONST	SEGMENT
??_C@_0BN@KLEGLAHD@GetBaseYieldRateFromReligion?$AA@ DB 'GetBaseYieldRate'
	DB	'FromReligion', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MDOMEKI@ChangeBaseYieldRateFromMisc?$AA@
CONST	SEGMENT
??_C@_0BM@MDOMEKI@ChangeBaseYieldRateFromMisc?$AA@ DB 'ChangeBaseYieldRat'
	DB	'eFromMisc', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GOEKGL@GetBaseYieldRateFromMisc?$AA@
CONST	SEGMENT
??_C@_0BJ@GOEKGL@GetBaseYieldRateFromMisc?$AA@ DB 'GetBaseYieldRateFromMi'
	DB	'sc', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@JHMJIOOA@ChangeBaseYieldRateFromSpecialis@
CONST	SEGMENT
??_C@_0CD@JHMJIOOA@ChangeBaseYieldRateFromSpecialis@ DB 'ChangeBaseYieldR'
	DB	'ateFromSpecialists', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@DMEDAOCN@GetBaseYieldRateFromSpecialists?$AA@
CONST	SEGMENT
??_C@_0CA@DMEDAOCN@GetBaseYieldRateFromSpecialists?$AA@ DB 'GetBaseYieldR'
	DB	'ateFromSpecialists', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@OMALCKC@ChangeBaseYieldRateFromBuildings@
CONST	SEGMENT
??_C@_0CB@OMALCKC@ChangeBaseYieldRateFromBuildings@ DB 'ChangeBaseYieldRa'
	DB	'teFromBuildings', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@GNPKIABN@GetBaseYieldRateFromBuildings?$AA@
CONST	SEGMENT
??_C@_0BO@GNPKIABN@GetBaseYieldRateFromBuildings?$AA@ DB 'GetBaseYieldRat'
	DB	'eFromBuildings', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@LEPGAIDG@ChangeBaseYieldRateFromTerrain?$AA@
CONST	SEGMENT
??_C@_0BP@LEPGAIDG@ChangeBaseYieldRateFromTerrain?$AA@ DB 'ChangeBaseYiel'
	DB	'dRateFromTerrain', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OJHEMEBC@GetBaseYieldRateFromTerrain?$AA@
CONST	SEGMENT
??_C@_0BM@OJHEMEBC@GetBaseYieldRateFromTerrain?$AA@ DB 'GetBaseYieldRateF'
	DB	'romTerrain', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@JIPPGLFE@GetBaseYieldRateFromGreatWorks?$AA@
CONST	SEGMENT
??_C@_0BP@JIPPGLFE@GetBaseYieldRateFromGreatWorks?$AA@ DB 'GetBaseYieldRa'
	DB	'teFromGreatWorks', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PNJLKNIG@GetBaseYieldRate?$AA@
CONST	SEGMENT
??_C@_0BB@PNJLKNIG@GetBaseYieldRate?$AA@ DB 'GetBaseYieldRate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KFDOAKNK@GetLakePlotYield?$AA@
CONST	SEGMENT
??_C@_0BB@KFDOAKNK@GetLakePlotYield?$AA@ DB 'GetLakePlotYield', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KGMJBNBB@GetRiverPlotYield?$AA@
CONST	SEGMENT
??_C@_0BC@KGMJBNBB@GetRiverPlotYield?$AA@ DB 'GetRiverPlotYield', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DGPKBBEO@GetSeaPlotYield?$AA@
CONST	SEGMENT
??_C@_0BA@DGPKBBEO@GetSeaPlotYield?$AA@ DB 'GetSeaPlotYield', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FBHJECJI@GetOriginalOwner?$AA@
CONST	SEGMENT
??_C@_0BB@FBHJECJI@GetOriginalOwner?$AA@ DB 'GetOriginalOwner', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HFDBFLDN@GetPreviousOwner?$AA@
CONST	SEGMENT
??_C@_0BB@HFDBFLDN@GetPreviousOwner?$AA@ DB 'GetPreviousOwner', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07KIJFBNDA@GetTeam?$AA@
CONST	SEGMENT
??_C@_07KIJFBNDA@GetTeam?$AA@ DB 'GetTeam', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08BODJMJJB@GetOwner?$AA@
CONST	SEGMENT
??_C@_08BODJMJJB@GetOwner?$AA@ DB 'GetOwner', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JHJGLAIL@SetCitySizeBoost?$AA@
CONST	SEGMENT
??_C@_0BB@JHJGLAIL@SetCitySizeBoost?$AA@ DB 'SetCitySizeBoost', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PFIOINMP@SetProductionAutomated?$AA@
CONST	SEGMENT
??_C@_0BH@PFIOINMP@SetProductionAutomated?$AA@ DB 'SetProductionAutomated'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FJMABPLB@IsProductionAutomated?$AA@
CONST	SEGMENT
??_C@_0BG@FJMABPLB@IsProductionAutomated?$AA@ DB 'IsProductionAutomated', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HABAGOM@GetNumThingsProduced?$AA@
CONST	SEGMENT
??_C@_0BF@HABAGOM@GetNumThingsProduced?$AA@ DB 'GetNumThingsProduced', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@HIBOMBIM@ChangeWeLoveTheKingDayCounter?$AA@
CONST	SEGMENT
??_C@_0BO@HIBOMBIM@ChangeWeLoveTheKingDayCounter?$AA@ DB 'ChangeWeLoveThe'
	DB	'KingDayCounter', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@KNPMCHGG@SetWeLoveTheKingDayCounter?$AA@
CONST	SEGMENT
??_C@_0BL@KNPMCHGG@SetWeLoveTheKingDayCounter?$AA@ DB 'SetWeLoveTheKingDa'
	DB	'yCounter', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JCMJOHHG@GetWeLoveTheKingDayCounter?$AA@
CONST	SEGMENT
??_C@_0BL@JCMJOHHG@GetWeLoveTheKingDayCounter?$AA@ DB 'GetWeLoveTheKingDa'
	DB	'yCounter', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OAAFKHBJ@IsBlockaded?$AA@
CONST	SEGMENT
??_C@_0M@OAAFKHBJ@IsBlockaded?$AA@ DB 'IsBlockaded', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EHIPGLHP@SetDrafted?$AA@
CONST	SEGMENT
??_C@_0L@EHIPGLHP@SetDrafted?$AA@ DB 'SetDrafted', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BPNOIHFH@IsDrafted?$AA@
CONST	SEGMENT
??_C@_09BPNOIHFH@IsDrafted?$AA@ DB 'IsDrafted', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DKLPEECK@SetNeverLost?$AA@
CONST	SEGMENT
??_C@_0N@DKLPEECK@SetNeverLost?$AA@ DB 'SetNeverLost', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MOFOBMIC@IsNeverLost?$AA@
CONST	SEGMENT
??_C@_0M@MOFOBMIC@IsNeverLost?$AA@ DB 'IsNeverLost', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JBPFIKFP@GetLocalHappiness?$AA@
CONST	SEGMENT
??_C@_0BC@JBPFIKFP@GetLocalHappiness?$AA@ DB 'GetLocalHappiness', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BPJGOLFM@GetHappiness?$AA@
CONST	SEGMENT
??_C@_0N@BPJGOLFM@GetHappiness?$AA@ DB 'GetHappiness', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@NJJIHGAG@GetHappinessFromBuildings?$AA@
CONST	SEGMENT
??_C@_0BK@NJJIHGAG@GetHappinessFromBuildings?$AA@ DB 'GetHappinessFromBui'
	DB	'ldings', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09JPCAHBOM@SetPuppet?$AA@
CONST	SEGMENT
??_C@_09JPCAHBOM@SetPuppet?$AA@ DB 'SetPuppet', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08KGIAEINB@IsPuppet?$AA@
CONST	SEGMENT
??_C@_08KGIAEINB@IsPuppet?$AA@ DB 'IsPuppet', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FPGBPAFO@SetOccupied?$AA@
CONST	SEGMENT
??_C@_0M@FPGBPAFO@SetOccupied?$AA@ DB 'SetOccupied', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GKIMAJEI@IsOccupied?$AA@
CONST	SEGMENT
??_C@_0L@GKIMAJEI@IsOccupied?$AA@ DB 'IsOccupied', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GFDDGGHF@ChangeRazingTurns?$AA@
CONST	SEGMENT
??_C@_0BC@GFDDGGHF@ChangeRazingTurns?$AA@ DB 'ChangeRazingTurns', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PBGEJBFI@GetRazingTurns?$AA@
CONST	SEGMENT
??_C@_0P@PBGEJBFI@GetRazingTurns?$AA@ DB 'GetRazingTurns', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08KDEDLHLC@IsRazing?$AA@
CONST	SEGMENT
??_C@_08KDEDLHLC@IsRazing?$AA@ DB 'IsRazing', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OGCOMNIG@ChangeResistanceTurns?$AA@
CONST	SEGMENT
??_C@_0BG@OGCOMNIG@ChangeResistanceTurns?$AA@ DB 'ChangeResistanceTurns', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GGFEDPO@GetResistanceTurns?$AA@
CONST	SEGMENT
??_C@_0BD@GGFEDPO@GetResistanceTurns?$AA@ DB 'GetResistanceTurns', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OIFCCPFM@IsResistance?$AA@
CONST	SEGMENT
??_C@_0N@OIFCCPFM@IsResistance?$AA@ DB 'IsResistance', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IIFNIAFM@GetNukeModifier?$AA@
CONST	SEGMENT
??_C@_0BA@IIFNIAFM@GetNukeModifier?$AA@ DB 'GetNukeModifier', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KJGDLEFF@GetFreeExperience?$AA@
CONST	SEGMENT
??_C@_0BC@KJGDLEFF@GetFreeExperience?$AA@ DB 'GetFreeExperience', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IFIIOABK@GetBuildingDefense?$AA@
CONST	SEGMENT
??_C@_0BD@IFIIOABK@GetBuildingDefense?$AA@ DB 'GetBuildingDefense', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EMAHKCFF@GetSpaceProductionModifier?$AA@
CONST	SEGMENT
??_C@_0BL@EMAHKCFF@GetSpaceProductionModifier?$AA@ DB 'GetSpaceProduction'
	DB	'Modifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@FAMIPBGF@GetMilitaryProductionModifier?$AA@
CONST	SEGMENT
??_C@_0BO@FAMIPBGF@GetMilitaryProductionModifier?$AA@ DB 'GetMilitaryProd'
	DB	'uctionModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FMCOGOGC@SetFeatureProduction?$AA@
CONST	SEGMENT
??_C@_0BF@FMCOGOGC@SetFeatureProduction?$AA@ DB 'SetFeatureProduction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FDDHIDF@GetFeatureProduction?$AA@
CONST	SEGMENT
??_C@_0BF@FDDHIDF@GetFeatureProduction?$AA@ DB 'GetFeatureProduction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FEEBJMBN@SetOverflowProduction?$AA@
CONST	SEGMENT
??_C@_0BG@FEEBJMBN@SetOverflowProduction?$AA@ DB 'SetOverflowProduction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KBBHEFFM@GetOverflowProduction?$AA@
CONST	SEGMENT
??_C@_0BG@KBBHEFFM@GetOverflowProduction?$AA@ DB 'GetOverflowProduction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DCGGEPDG@GetMaxFoodKeptPercent?$AA@
CONST	SEGMENT
??_C@_0BG@DCGGEPDG@GetMaxFoodKeptPercent?$AA@ DB 'GetMaxFoodKeptPercent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GIFBHLGG@GetFoodKept?$AA@
CONST	SEGMENT
??_C@_0M@GIFBHLGG@GetFoodKept?$AA@ DB 'GetFoodKept', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HHFPNGJH@ChangeFood?$AA@
CONST	SEGMENT
??_C@_0L@HHFPNGJH@ChangeFood?$AA@ DB 'ChangeFood', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07POKFJACE@SetFood?$AA@
CONST	SEGMENT
??_C@_07POKFJACE@SetFood?$AA@ DB 'SetFood', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EBLNMIHG@GetFoodTimes100?$AA@
CONST	SEGMENT
??_C@_0BA@EBLNMIHG@GetFoodTimes100?$AA@ DB 'GetFoodTimes100', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07GFEKPPF@GetFood?$AA@
CONST	SEGMENT
??_C@_07GFEKPPF@GetFood?$AA@ DB 'GetFood', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HOIIKDFF@IsNoOccupiedUnhappiness?$AA@
CONST	SEGMENT
??_C@_0BI@HOIIKDFF@IsNoOccupiedUnhappiness?$AA@ DB 'IsNoOccupiedUnhappine'
	DB	'ss', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DFIEFIFC@ChangeHealRate?$AA@
CONST	SEGMENT
??_C@_0P@DFIEFIFC@ChangeHealRate?$AA@ DB 'ChangeHealRate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@JOONDJO@GetLocalResourceWonderProduction@
CONST	SEGMENT
??_C@_0CE@JOONDJO@GetLocalResourceWonderProduction@ DB 'GetLocalResourceW'
	DB	'onderProductionMod', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@CBAFPBHG@ChangeWonderProductionModifier?$AA@
CONST	SEGMENT
??_C@_0BP@CBAFPBHG@ChangeWonderProductionModifier?$AA@ DB 'ChangeWonderPr'
	DB	'oductionModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HMIHDNFC@GetWonderProductionModifier?$AA@
CONST	SEGMENT
??_C@_0BM@HMIHDNFC@GetWonderProductionModifier?$AA@ DB 'GetWonderProducti'
	DB	'onModifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BEIGCOAF@GetNumBuildings?$AA@
CONST	SEGMENT
??_C@_0BA@BEIGCOAF@GetNumBuildings?$AA@ DB 'GetNumBuildings', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HCJMDOLN@GetNumNationalWonders?$AA@
CONST	SEGMENT
??_C@_0BG@HCJMDOLN@GetNumNationalWonders?$AA@ DB 'GetNumNationalWonders', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OBPJLAFA@GetNumTeamWonders?$AA@
CONST	SEGMENT
??_C@_0BC@OBPJLAFA@GetNumTeamWonders?$AA@ DB 'GetNumTeamWonders', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FHKHHPIG@GetNumWorldWonders?$AA@
CONST	SEGMENT
??_C@_0BD@FHKHHPIG@GetNumWorldWonders?$AA@ DB 'GetNumWorldWonders', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FHBADINH@GetNumTradeRoutesAddingPressure?$AA@
CONST	SEGMENT
??_C@_0CA@FHBADINH@GetNumTradeRoutesAddingPressure?$AA@ DB 'GetNumTradeRo'
	DB	'utesAddingPressure', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@JAADPGKC@GetLeagueBuildingClassYieldChang@
CONST	SEGMENT
??_C@_0CC@JAADPGKC@GetLeagueBuildingClassYieldChang@ DB 'GetLeagueBuildin'
	DB	'gClassYieldChange', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@IHEOCEID@GetReligionBuildingClassYieldCha@
CONST	SEGMENT
??_C@_0CE@IHEOCEID@GetReligionBuildingClassYieldCha@ DB 'GetReligionBuild'
	DB	'ingClassYieldChange', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@ENMDKGLO@GetReligionBuildingClassHappines@
CONST	SEGMENT
??_C@_0CC@ENMDKGLO@GetReligionBuildingClassHappines@ DB 'GetReligionBuild'
	DB	'ingClassHappiness', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FBGNFBCF@AdoptReligionFully?$AA@
CONST	SEGMENT
??_C@_0BD@FBGNFBCF@AdoptReligionFully?$AA@ DB 'AdoptReligionFully', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@DDLKPOAO@ConvertPercentFollowers?$AA@
CONST	SEGMENT
??_C@_0BI@DDLKPOAO@ConvertPercentFollowers?$AA@ DB 'ConvertPercentFollowe'
	DB	'rs', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JAFNIAKI@GetPressurePerTurn?$AA@
CONST	SEGMENT
??_C@_0BD@JAFNIAKI@GetPressurePerTurn?$AA@ DB 'GetPressurePerTurn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@GBBECGLH@GetSecondaryReligionPantheonBeli@
CONST	SEGMENT
??_C@_0CD@GBBECGLH@GetSecondaryReligionPantheonBeli@ DB 'GetSecondaryReli'
	DB	'gionPantheonBelief', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KNGLOBDC@GetSecondaryReligion?$AA@
CONST	SEGMENT
??_C@_0BF@KNGLOBDC@GetSecondaryReligion?$AA@ DB 'GetSecondaryReligion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CPDBKIPJ@GetReligiousMajority?$AA@
CONST	SEGMENT
??_C@_0BF@CPDBKIPJ@GetReligiousMajority?$AA@ DB 'GetReligiousMajority', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BEJIHHEO@GetNumFollowers?$AA@
CONST	SEGMENT
??_C@_0BA@BEJIHHEO@GetNumFollowers?$AA@ DB 'GetNumFollowers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DCMLICBF@IsHolyCityAnyReligion?$AA@
CONST	SEGMENT
??_C@_0BG@DCMLICBF@IsHolyCityAnyReligion?$AA@ DB 'IsHolyCityAnyReligion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HPDNEPKN@IsHolyCityForReligion?$AA@
CONST	SEGMENT
??_C@_0BG@HPDNEPKN@IsHolyCityForReligion?$AA@ DB 'IsHolyCityForReligion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PGCOPPAF@IsReligionInCity?$AA@
CONST	SEGMENT
??_C@_0BB@PGCOPPAF@IsReligionInCity?$AA@ DB 'IsReligionInCity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@FBEILFDB@GetFaithPerTurnFromReligion?$AA@
CONST	SEGMENT
??_C@_0BM@FBEILFDB@GetFaithPerTurnFromReligion?$AA@ DB 'GetFaithPerTurnFr'
	DB	'omReligion', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EKHAOHLH@GetFaithPerTurnFromTraits?$AA@
CONST	SEGMENT
??_C@_0BK@EKHAOHLH@GetFaithPerTurnFromTraits?$AA@ DB 'GetFaithPerTurnFrom'
	DB	'Traits', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OJAFMOHF@GetFaithPerTurnFromPolicies?$AA@
CONST	SEGMENT
??_C@_0BM@OJAFMOHF@GetFaithPerTurnFromPolicies?$AA@ DB 'GetFaithPerTurnFr'
	DB	'omPolicies', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PFNCKOKE@GetFaithPerTurnFromBuildings?$AA@
CONST	SEGMENT
??_C@_0BN@PFNCKOKE@GetFaithPerTurnFromBuildings?$AA@ DB 'GetFaithPerTurnF'
	DB	'romBuildings', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CIJNECBN@GetFaithPerTurn?$AA@
CONST	SEGMENT
??_C@_0BA@CIJNECBN@GetFaithPerTurn?$AA@ DB 'GetFaithPerTurn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IDIDCDN@GetThemingTooltip?$AA@
CONST	SEGMENT
??_C@_0BC@IDIDCDN@GetThemingTooltip?$AA@ DB 'GetThemingTooltip', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PNNDDOA@GetThemingBonus?$AA@
CONST	SEGMENT
??_C@_0BA@PNNDDOA@GetThemingBonus?$AA@ DB 'GetThemingBonus', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OADCDAOP@IsThemingBonusPossible?$AA@
CONST	SEGMENT
??_C@_0BH@OADCDAOP@IsThemingBonusPossible?$AA@ DB 'IsThemingBonusPossible'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KDLLAHHF@GetFaithBuildingTourism?$AA@
CONST	SEGMENT
??_C@_0BI@KDLLAHHF@GetFaithBuildingTourism?$AA@ DB 'GetFaithBuildingTouri'
	DB	'sm', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JEEBJAFO@ClearGreatWorks?$AA@
CONST	SEGMENT
??_C@_0BA@JEEBJAFO@ClearGreatWorks?$AA@ DB 'ClearGreatWorks', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CDKAAHGE@GetTotalSlotsTooltip?$AA@
CONST	SEGMENT
??_C@_0BF@CDKAAHGE@GetTotalSlotsTooltip?$AA@ DB 'GetTotalSlotsTooltip', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CNAADLGC@GetFilledSlotsTooltip?$AA@
CONST	SEGMENT
??_C@_0BG@CNAADLGC@GetFilledSlotsTooltip?$AA@ DB 'GetFilledSlotsTooltip', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OAAAMMGM@GetTourismTooltip?$AA@
CONST	SEGMENT
??_C@_0BC@OAAAMMGM@GetTourismTooltip?$AA@ DB 'GetTourismTooltip', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MHJNCJDK@GetTourismMultiplier?$AA@
CONST	SEGMENT
??_C@_0BF@MHJNCJDK@GetTourismMultiplier?$AA@ DB 'GetTourismMultiplier', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PJMIHAEJ@GetBaseTourism?$AA@
CONST	SEGMENT
??_C@_0P@PJMIHAEJ@GetBaseTourism?$AA@ DB 'GetBaseTourism', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FMOOCJFI@GetNumGreatWorkSlots?$AA@
CONST	SEGMENT
??_C@_0BF@FMOOCJFI@GetNumGreatWorkSlots?$AA@ DB 'GetNumGreatWorkSlots', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ILOKIPKM@GetNumGreatWorks?$AA@
CONST	SEGMENT
??_C@_0BB@ILOKIPKM@GetNumGreatWorks?$AA@ DB 'GetNumGreatWorks', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@NOKONBPA@ChangeCultureRateModifier?$AA@
CONST	SEGMENT
??_C@_0BK@NOKONBPA@ChangeCultureRateModifier?$AA@ DB 'ChangeCultureRateMo'
	DB	'difier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CIAJBLLP@GetCultureRateModifier?$AA@
CONST	SEGMENT
??_C@_0BH@CIAJBLLP@GetCultureRateModifier?$AA@ DB 'GetCultureRateModifier'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@DONKGGML@GetJONSCulturePerTurnFromLeagues@
CONST	SEGMENT
??_C@_0CB@DONKGGML@GetJONSCulturePerTurnFromLeagues@ DB 'GetJONSCulturePe'
	DB	'rTurnFromLeagues', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@INODDPGK@GetJONSCulturePerTurnFromReligio@
CONST	SEGMENT
??_C@_0CC@INODDPGK@GetJONSCulturePerTurnFromReligio@ DB 'GetJONSCulturePe'
	DB	'rTurnFromReligion', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@MKHKHIDI@GetJONSCulturePerTurnFromTraits?$AA@
CONST	SEGMENT
??_C@_0CA@MKHKHIDI@GetJONSCulturePerTurnFromTraits?$AA@ DB 'GetJONSCultur'
	DB	'ePerTurnFromTraits', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@HOPIHKFI@GetJONSCulturePerTurnFromGreatWo@
CONST	SEGMENT
??_C@_0CE@HOPIHKFI@GetJONSCulturePerTurnFromGreatWo@ DB 'GetJONSCulturePe'
	DB	'rTurnFromGreatWorks', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@GIJOCEDC@ChangeJONSCulturePerTurnFromSpec@
CONST	SEGMENT
??_C@_0CI@GIJOCEDC@ChangeJONSCulturePerTurnFromSpec@ DB 'ChangeJONSCultur'
	DB	'ePerTurnFromSpecialists', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@DFBDEFBH@GetJONSCulturePerTurnFromSpecial@
CONST	SEGMENT
??_C@_0CF@DFBDEFBH@GetJONSCulturePerTurnFromSpecial@ DB 'GetJONSCulturePe'
	DB	'rTurnFromSpecialists', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@KGECMFIH@ChangeJONSCulturePerTurnFromPoli@
CONST	SEGMENT
??_C@_0CF@KGECMFIH@ChangeJONSCulturePerTurnFromPoli@ DB 'ChangeJONSCultur'
	DB	'ePerTurnFromPolicies', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@DFKOEECO@GetJONSCulturePerTurnFromPolicie@
CONST	SEGMENT
??_C@_0CC@DFKOEECO@GetJONSCulturePerTurnFromPolicie@ DB 'GetJONSCulturePe'
	DB	'rTurnFromPolicies', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@KGCOHKJP@ChangeJONSCulturePerTurnFromBuil@
CONST	SEGMENT
??_C@_0CG@KGCOHKJP@ChangeJONSCulturePerTurnFromBuil@ DB 'ChangeJONSCultur'
	DB	'ePerTurnFromBuildings', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@JLHINFC@GetJONSCulturePerTurnFromBuildin@
CONST	SEGMENT
??_C@_0CD@JLHINFC@GetJONSCulturePerTurnFromBuildin@ DB 'GetJONSCulturePer'
	DB	'TurnFromBuildings', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CGPFDHCN@GetBaseJONSCulturePerTurn?$AA@
CONST	SEGMENT
??_C@_0BK@CGPFDHCN@GetBaseJONSCulturePerTurn?$AA@ DB 'GetBaseJONSCultureP'
	DB	'erTurn', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IMDBELFE@GetJONSCulturePerTurn?$AA@
CONST	SEGMENT
??_C@_0BG@IMDBELFE@GetJONSCulturePerTurn?$AA@ DB 'GetJONSCulturePerTurn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MNIAPCAO@GetJONSCultureThreshold?$AA@
CONST	SEGMENT
??_C@_0BI@MNIAPCAO@GetJONSCultureThreshold?$AA@ DB 'GetJONSCultureThresho'
	DB	'ld', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@IFAKDEMK@DoJONSCultureLevelIncrease?$AA@
CONST	SEGMENT
??_C@_0BL@IFAKDEMK@DoJONSCultureLevelIncrease?$AA@ DB 'DoJONSCultureLevel'
	DB	'Increase', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CKDHJLDP@ChangeJONSCultureLevel?$AA@
CONST	SEGMENT
??_C@_0BH@CKDHJLDP@ChangeJONSCultureLevel?$AA@ DB 'ChangeJONSCultureLevel'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NKCCGJMD@SetJONSCultureLevel?$AA@
CONST	SEGMENT
??_C@_0BE@NKCCGJMD@SetJONSCultureLevel?$AA@ DB 'SetJONSCultureLevel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HEAJCJLP@GetJONSCultureLevel?$AA@
CONST	SEGMENT
??_C@_0BE@HEAJCJLP@GetJONSCultureLevel?$AA@ DB 'GetJONSCultureLevel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@HDNKJLLK@GetJONSCulturePerTurnTimes100?$AA@
CONST	SEGMENT
??_C@_0BO@HDNKJLLK@GetJONSCulturePerTurnTimes100?$AA@ DB 'GetJONSCultureP'
	DB	'erTurnTimes100', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@BEBPGHLA@ChangeJONSCultureStoredTimes100?$AA@
CONST	SEGMENT
??_C@_0CA@BEBPGHLA@ChangeJONSCultureStoredTimes100?$AA@ DB 'ChangeJONSCul'
	DB	'tureStoredTimes100', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PJOHOOHJ@SetJONSCultureStoredTimes100?$AA@
CONST	SEGMENT
??_C@_0BN@PJOHOOHJ@SetJONSCultureStoredTimes100?$AA@ DB 'SetJONSCultureSt'
	DB	'oredTimes100', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@CIEBABKN@GetJONSCultureStoredTimes100?$AA@
CONST	SEGMENT
??_C@_0BN@CIEBABKN@GetJONSCultureStoredTimes100?$AA@ DB 'GetJONSCultureSt'
	DB	'oredTimes100', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EBCOCIEG@ChangeJONSCultureStored?$AA@
CONST	SEGMENT
??_C@_0BI@EBCOCIEG@ChangeJONSCultureStored?$AA@ DB 'ChangeJONSCultureStor'
	DB	'ed', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PFNFIDID@SetJONSCultureStored?$AA@
CONST	SEGMENT
??_C@_0BF@PFNFIDID@SetJONSCultureStored?$AA@ DB 'SetJONSCultureStored', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KMMIJFNE@GetJONSCultureStored?$AA@
CONST	SEGMENT
??_C@_0BF@KMMIJFNE@GetJONSCultureStored?$AA@ DB 'GetJONSCultureStored', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NNNBCPJN@GetGreatPeopleRateModifier?$AA@
CONST	SEGMENT
??_C@_0BL@NNNBCPJN@GetGreatPeopleRateModifier?$AA@ DB 'GetGreatPeopleRate'
	DB	'Modifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KDPOINAO@ChangeBaseGreatPeopleRate?$AA@
CONST	SEGMENT
??_C@_0BK@KDPOINAO@ChangeBaseGreatPeopleRate?$AA@ DB 'ChangeBaseGreatPeop'
	DB	'leRate', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KMDLAMII@GetTotalGreatPeopleRateModifier?$AA@
CONST	SEGMENT
??_C@_0CA@KMDLAMII@GetTotalGreatPeopleRateModifier?$AA@ DB 'GetTotalGreat'
	DB	'PeopleRateModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EJKIAKHA@GetGreatPeopleRate?$AA@
CONST	SEGMENT
??_C@_0BD@EJKIAKHA@GetGreatPeopleRate?$AA@ DB 'GetGreatPeopleRate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FFFJEHEB@GetBaseGreatPeopleRate?$AA@
CONST	SEGMENT
??_C@_0BH@FFFJEHEB@GetBaseGreatPeopleRate?$AA@ DB 'GetBaseGreatPeopleRate'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KLEPOAKG@GetNumGreatPeople?$AA@
CONST	SEGMENT
??_C@_0BC@KLEPOAKG@GetNumGreatPeople?$AA@ DB 'GetNumGreatPeople', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DCMBNE@SetHighestPopulation?$AA@
CONST	SEGMENT
??_C@_0BF@DCMBNE@SetHighestPopulation?$AA@ DB 'SetHighestPopulation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FJCPNHID@GetHighestPopulation?$AA@
CONST	SEGMENT
??_C@_0BF@FJCPNHID@GetHighestPopulation?$AA@ DB 'GetHighestPopulation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KOHBIIDL@GetRealPopulation?$AA@
CONST	SEGMENT
??_C@_0BC@KOHBIIDL@GetRealPopulation?$AA@ DB 'GetRealPopulation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DMBKLBGC@ChangePopulation?$AA@
CONST	SEGMENT
??_C@_0BB@DMBKLBGC@ChangePopulation?$AA@ DB 'ChangePopulation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HAMIKLJM@SetPopulation?$AA@
CONST	SEGMENT
??_C@_0O@HAMIKLJM@SetPopulation?$AA@ DB 'SetPopulation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PNGBIOL@GetPopulation?$AA@
CONST	SEGMENT
??_C@_0O@PNGBIOL@GetPopulation?$AA@ DB 'GetPopulation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IICLLOKC@GetGameTurnLastExpanded?$AA@
CONST	SEGMENT
??_C@_0BI@IICLLOKC@GetGameTurnLastExpanded?$AA@ DB 'GetGameTurnLastExpand'
	DB	'ed', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GPLNLMHN@GetGameTurnAcquired?$AA@
CONST	SEGMENT
??_C@_0BE@GPLNLMHN@GetGameTurnAcquired?$AA@ DB 'GetGameTurnAcquired', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PEMIOCBG@GetGameTurnFounded?$AA@
CONST	SEGMENT
??_C@_0BD@PEMIOCBG@GetGameTurnFounded?$AA@ DB 'GetGameTurnFounded', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ECAKDE@GetGarrisonedUnit?$AA@
CONST	SEGMENT
??_C@_0BC@ECAKDE@GetGarrisonedUnit?$AA@ DB 'GetGarrisonedUnit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JAHGGNPO@CanBuyAnyPlot?$AA@
CONST	SEGMENT
??_C@_0O@JAHGGNPO@CanBuyAnyPlot?$AA@ DB 'CanBuyAnyPlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CLDNCOML@GetBuyPlotCost?$AA@
CONST	SEGMENT
??_C@_0P@CLDNCOML@GetBuyPlotCost?$AA@ DB 'GetBuyPlotCost', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EKOODAKH@GetBuyablePlotList?$AA@
CONST	SEGMENT
??_C@_0BD@EKOODAKH@GetBuyablePlotList?$AA@ DB 'GetBuyablePlotList', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DPMBBFOK@GetNextBuyablePlot?$AA@
CONST	SEGMENT
??_C@_0BD@DPMBBFOK@GetNextBuyablePlot?$AA@ DB 'GetNextBuyablePlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ELCKKIDJ@CanBuyPlotAt?$AA@
CONST	SEGMENT
??_C@_0N@ELCKKIDJ@CanBuyPlotAt?$AA@ DB 'CanBuyPlotAt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MJKINFAP@CanBuyPlot?$AA@
CONST	SEGMENT
??_C@_0L@MJKINFAP@CanBuyPlot?$AA@ DB 'CanBuyPlot', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JOMCKPIG@GetRallyPlot?$AA@
CONST	SEGMENT
??_C@_0N@JOMCKPIG@GetRallyPlot?$AA@ DB 'GetRallyPlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09CNIEIFHO@WaterArea?$AA@
CONST	SEGMENT
??_C@_09CNIEIFHO@WaterArea?$AA@ DB 'WaterArea', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04KPICECCB@Area?$AA@
CONST	SEGMENT
??_C@_04KPICECCB@Area?$AA@ DB 'Area', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HIOGLPHN@Plot?$AA@
CONST	SEGMENT
??_C@_04HIOGLPHN@Plot?$AA@ DB 'Plot', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FBGHKGAE@AtPlot?$AA@
CONST	SEGMENT
??_C@_06FBGHKGAE@AtPlot?$AA@ DB 'AtPlot', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKLFHNOI@At?$AA@
CONST	SEGMENT
??_C@_02DKLFHNOI@At?$AA@ DB 'At', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04OHHHKNBL@GetY?$AA@
CONST	SEGMENT
??_C@_04OHHHKNBL@GetY?$AA@ DB 'GetY', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04POGMJMFK@GetX?$AA@
CONST	SEGMENT
??_C@_04POGMJMFK@GetX?$AA@ DB 'GetX', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CLBJHDA@GetID?$AA@
CONST	SEGMENT
??_C@_05CLBJHDA@GetID?$AA@ DB 'GetID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OPJCOPIH@GetNumActiveBuilding?$AA@
CONST	SEGMENT
??_C@_0BF@OPJCOPIH@GetNumActiveBuilding?$AA@ DB 'GetNumActiveBuilding', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ELHLCIIC@IsHasBuilding?$AA@
CONST	SEGMENT
??_C@_0O@ELHLCIIC@IsHasBuilding?$AA@ DB 'IsHasBuilding', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EOHOGKJK@GetNumBuilding?$AA@
CONST	SEGMENT
??_C@_0P@EOHOGKJK@GetNumBuilding?$AA@ DB 'GetNumBuilding', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OEGDKNCP@MaxHurryPopulation?$AA@
CONST	SEGMENT
??_C@_0BD@OEGDKNCP@MaxHurryPopulation?$AA@ DB 'MaxHurryPopulation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IMHIGCAF@HurryProduction?$AA@
CONST	SEGMENT
??_C@_0BA@IMHIGCAF@HurryProduction?$AA@ DB 'HurryProduction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CCMOKMFO@HurryPopulation?$AA@
CONST	SEGMENT
??_C@_0BA@CCMOKMFO@HurryPopulation?$AA@ DB 'HurryPopulation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09FLEJKCEK@HurryGold?$AA@
CONST	SEGMENT
??_C@_09FLEJKCEK@HurryGold?$AA@ DB 'HurryGold', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09PDHBPCJG@HurryCost?$AA@
CONST	SEGMENT
??_C@_09PDHBPCJG@HurryCost?$AA@ DB 'HurryCost', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KBNPLEGK@ProductionLeft?$AA@
CONST	SEGMENT
??_C@_0P@KBNPLEGK@ProductionLeft?$AA@ DB 'ProductionLeft', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NJNOJFJN@GrowthThreshold?$AA@
CONST	SEGMENT
??_C@_0BA@NJNOJFJN@GrowthThreshold?$AA@ DB 'GrowthThreshold', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LJBNHLKM@FoodDifferenceTimes100?$AA@
CONST	SEGMENT
??_C@_0BH@LJBNHLKM@FoodDifferenceTimes100?$AA@ DB 'FoodDifferenceTimes100'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CNHJHJIP@FoodDifference?$AA@
CONST	SEGMENT
??_C@_0P@CNHJHJIP@FoodDifference?$AA@ DB 'FoodDifference', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BJLFGBFC@FoodConsumption?$AA@
CONST	SEGMENT
??_C@_0BA@BJLFGBFC@FoodConsumption?$AA@ DB 'FoodConsumption', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09HEMCEJGG@IsCoastal?$AA@
CONST	SEGMENT
??_C@_09HEMCEJGG@IsCoastal?$AA@ DB 'IsCoastal', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@ONOJLMEH@IsOriginalMajorCapital?$AA@
CONST	SEGMENT
??_C@_0BH@ONOJLMEH@IsOriginalMajorCapital?$AA@ DB 'IsOriginalMajorCapital'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PAPJEFNG@IsOriginalCapital?$AA@
CONST	SEGMENT
??_C@_0BC@PAPJEFNG@IsOriginalCapital?$AA@ DB 'IsOriginalCapital', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09MGCHGMCG@IsCapital?$AA@
CONST	SEGMENT
??_C@_09MGCHGMCG@IsCapital?$AA@ DB 'IsCapital', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09OLGPEPPJ@IsVisible?$AA@
CONST	SEGMENT
??_C@_09OLGPEPPJ@IsVisible?$AA@ DB 'IsVisible', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07NIJBBMLI@IsHuman?$AA@
CONST	SEGMENT
??_C@_07NIJBBMLI@IsHuman?$AA@ DB 'IsHuman', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NJNEDJLP@IsBarbarian?$AA@
CONST	SEGMENT
??_C@_0M@NJNEDJLP@IsBarbarian?$AA@ DB 'IsBarbarian', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LACHPPMM@GetCitySizeType?$AA@
CONST	SEGMENT
??_C@_0BA@LACHPPMM@GetCitySizeType?$AA@ DB 'GetCitySizeType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GLKLOHNJ@GetArtStyleType?$AA@
CONST	SEGMENT
??_C@_0BA@GLKLOHNJ@GetArtStyleType?$AA@ DB 'GetArtStyleType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DDPEHEOB@GetPersonalityType?$AA@
CONST	SEGMENT
??_C@_0BD@DDPEHEOB@GetPersonalityType?$AA@ DB 'GetPersonalityType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OGLFKPOE@GetCivilizationType?$AA@
CONST	SEGMENT
??_C@_0BE@OGLFKPOE@GetCivilizationType?$AA@ DB 'GetCivilizationType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NDPGKNBO@GetHandicapType?$AA@
CONST	SEGMENT
??_C@_0BA@NDPGKNBO@GetHandicapType?$AA@ DB 'GetHandicapType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@GNJODLOF@GetResourceYieldRateModifier?$AA@
CONST	SEGMENT
??_C@_0BN@GNJODLOF@GetResourceYieldRateModifier?$AA@ DB 'GetResourceYield'
	DB	'RateModifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09KGDNLPBA@Conscript?$AA@
CONST	SEGMENT
??_C@_09KGDNLPBA@Conscript?$AA@ DB 'Conscript', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PLNBPBNI@CanConscript?$AA@
CONST	SEGMENT
??_C@_0N@PLNBPBNI@CanConscript?$AA@ DB 'CanConscript', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PLEBJCEL@ConscriptMinCityPopulation?$AA@
CONST	SEGMENT
??_C@_0BL@PLEBJCEL@ConscriptMinCityPopulation?$AA@ DB 'ConscriptMinCityPo'
	DB	'pulation', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IGNMDIJF@GetConscriptPopulation?$AA@
CONST	SEGMENT
??_C@_0BH@IGNMDIJF@GetConscriptPopulation?$AA@ DB 'GetConscriptPopulation'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EGKBFCJM@GetConscriptUnit?$AA@
CONST	SEGMENT
??_C@_0BB@EGKBFCJM@GetConscriptUnit?$AA@ DB 'GetConscriptUnit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05PELKKPHE@Hurry?$AA@
CONST	SEGMENT
??_C@_05PELKKPHE@Hurry?$AA@ DB 'Hurry', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08IDKGLCCG@CanHurry?$AA@
CONST	SEGMENT
??_C@_08IDKGLCCG@CanHurry?$AA@ DB 'CanHurry', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@IGNDNHOA@GetExtraProductionDifference?$AA@
CONST	SEGMENT
??_C@_0BN@IGNDNHOA@GetExtraProductionDifference?$AA@ DB 'GetExtraProducti'
	DB	'onDifference', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@IIOBOOCG@GetSpecialistProductionModifier?$AA@
CONST	SEGMENT
??_C@_0CA@IIOBOOCG@GetSpecialistProductionModifier?$AA@ DB 'GetSpecialist'
	DB	'ProductionModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FIGLLOHP@GetProjectProductionModifier?$AA@
CONST	SEGMENT
??_C@_0BN@FIGLLOHP@GetProjectProductionModifier?$AA@ DB 'GetProjectProduc'
	DB	'tionModifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BOIFPPNB@GetBuildingProductionModifier?$AA@
CONST	SEGMENT
??_C@_0BO@BOIFPPNB@GetBuildingProductionModifier?$AA@ DB 'GetBuildingProd'
	DB	'uctionModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CAONOBAD@GetUnitProductionModifier?$AA@
CONST	SEGMENT
??_C@_0BK@CAONOBAD@GetUnitProductionModifier?$AA@ DB 'GetUnitProductionMo'
	DB	'difier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@FAGAIJM@GetRawProductionDifferenceTimes1@
CONST	SEGMENT
??_C@_0CD@FAGAIJM@GetRawProductionDifferenceTimes1@ DB 'GetRawProductionD'
	DB	'ifferenceTimes100', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@BNPOEMEH@GetCurrentProductionDifferenceTi@
CONST	SEGMENT
??_C@_0CH@BNPOEMEH@GetCurrentProductionDifferenceTi@ DB 'GetCurrentProduc'
	DB	'tionDifferenceTimes100', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@KEJICAMN@GetRawProductionDifference?$AA@
CONST	SEGMENT
??_C@_0BL@KEJICAMN@GetRawProductionDifference?$AA@ DB 'GetRawProductionDi'
	DB	'fference', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@DPKFHAM@GetCurrentProductionDifference?$AA@
CONST	SEGMENT
??_C@_0BP@DPKFHAM@GetCurrentProductionDifference?$AA@ DB 'GetCurrentProdu'
	DB	'ctionDifference', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@COALBBFM@GetProductionModifier?$AA@
CONST	SEGMENT
??_C@_0BG@COALBBFM@GetProductionModifier?$AA@ DB 'GetProductionModifier', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LBFPCPLM@GetYieldModifierTooltip?$AA@
CONST	SEGMENT
??_C@_0BI@LBFPCPLM@GetYieldModifierTooltip?$AA@ DB 'GetYieldModifierToolt'
	DB	'ip', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JCKMHPDJ@ChangeProduction?$AA@
CONST	SEGMENT
??_C@_0BB@JCKMHPDJ@ChangeProduction?$AA@ DB 'ChangeProduction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NOHOGFMH@SetProduction?$AA@
CONST	SEGMENT
??_C@_0O@NOHOGFMH@SetProduction?$AA@ DB 'SetProduction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JBKNIEHE@GetProjectPurchaseCost?$AA@
CONST	SEGMENT
??_C@_0BH@JBKNIEHE@GetProjectPurchaseCost?$AA@ DB 'GetProjectPurchaseCost'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@CMKEAJOA@GetBuildingFaithPurchaseCost?$AA@
CONST	SEGMENT
??_C@_0BN@CMKEAJOA@GetBuildingFaithPurchaseCost?$AA@ DB 'GetBuildingFaith'
	DB	'PurchaseCost', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EOCLNJGF@GetBuildingPurchaseCost?$AA@
CONST	SEGMENT
??_C@_0BI@EOCLNJGF@GetBuildingPurchaseCost?$AA@ DB 'GetBuildingPurchaseCo'
	DB	'st', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CKMNAAAH@GetUnitFaithPurchaseCost?$AA@
CONST	SEGMENT
??_C@_0BJ@CKMNAAAH@GetUnitFaithPurchaseCost?$AA@ DB 'GetUnitFaithPurchase'
	DB	'Cost', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OFOJNOOB@GetUnitPurchaseCost?$AA@
CONST	SEGMENT
??_C@_0BE@OFOJNOOB@GetUnitPurchaseCost?$AA@ DB 'GetUnitPurchaseCost', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NIIMABIN@IsCanPurchase?$AA@
CONST	SEGMENT
??_C@_0O@NIIMABIN@IsCanPurchase?$AA@ DB 'IsCanPurchase', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GBMHNAJH@CreateApolloProgram?$AA@
CONST	SEGMENT
??_C@_0BE@GBMHNAJH@CreateApolloProgram?$AA@ DB 'CreateApolloProgram', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@EFOFIEPO@GetSpecialistProductionTurnsLeft@
CONST	SEGMENT
??_C@_0CB@EFOFIEPO@GetSpecialistProductionTurnsLeft@ DB 'GetSpecialistPro'
	DB	'ductionTurnsLeft', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@FHICOHPO@GetProjectProductionTurnsLeft?$AA@
CONST	SEGMENT
??_C@_0BO@FHICOHPO@GetProjectProductionTurnsLeft?$AA@ DB 'GetProjectProdu'
	DB	'ctionTurnsLeft', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@GGKKIHFA@GetBuildingProductionTurnsLeft?$AA@
CONST	SEGMENT
??_C@_0BP@GGKKIHFA@GetBuildingProductionTurnsLeft?$AA@ DB 'GetBuildingPro'
	DB	'ductionTurnsLeft', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OEJFMLG@GetUnitProductionTurnsLeft?$AA@
CONST	SEGMENT
??_C@_0BL@OEJFMLG@GetUnitProductionTurnsLeft?$AA@ DB 'GetUnitProductionTu'
	DB	'rnsLeft', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PFJDPGCD@GetProductionTurnsLeft?$AA@
CONST	SEGMENT
??_C@_0BH@PFJDPGCD@GetProductionTurnsLeft?$AA@ DB 'GetProductionTurnsLeft'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JBMFKMKF@GetProjectProductionNeeded?$AA@
CONST	SEGMENT
??_C@_0BL@JBMFKMKF@GetProjectProductionNeeded?$AA@ DB 'GetProjectProducti'
	DB	'onNeeded', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GGLBNBDE@GetBuildingProductionNeeded?$AA@
CONST	SEGMENT
??_C@_0BM@GGLBNBDE@GetBuildingProductionNeeded?$AA@ DB 'GetBuildingProduc'
	DB	'tionNeeded', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LJANCJHB@GetUnitProductionNeeded?$AA@
CONST	SEGMENT
??_C@_0BI@LJANCJHB@GetUnitProductionNeeded?$AA@ DB 'GetUnitProductionNeed'
	DB	'ed', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BJPFPGBE@GetProductionNeeded?$AA@
CONST	SEGMENT
??_C@_0BE@BJPFPGBE@GetProductionNeeded?$AA@ DB 'GetProductionNeeded', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@ENMJHDK@GetProductionTimes100?$AA@
CONST	SEGMENT
??_C@_0BG@ENMJHDK@GetProductionTimes100?$AA@ DB 'GetProductionTimes100', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KBGANGLA@GetProduction?$AA@
CONST	SEGMENT
??_C@_0O@KBGANGLA@GetProduction?$AA@ DB 'GetProduction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LICEFFKA@IsUnitFoodProduction?$AA@
CONST	SEGMENT
??_C@_0BF@LICEFFKA@IsUnitFoodProduction?$AA@ DB 'IsUnitFoodProduction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EDLGFJKE@GetFirstBuildingOrder?$AA@
CONST	SEGMENT
??_C@_0BG@EDLGFJKE@GetFirstBuildingOrder?$AA@ DB 'GetFirstBuildingOrder', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LOPIPDKF@GetNumTrainUnitAI?$AA@
CONST	SEGMENT
??_C@_0BC@LOPIPDKF@GetNumTrainUnitAI?$AA@ DB 'GetNumTrainUnitAI', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BMCPAEED@GetOrderFromQueue?$AA@
CONST	SEGMENT
??_C@_0BC@BMCPAEED@GetOrderFromQueue?$AA@ DB 'GetOrderFromQueue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GOLELKAA@GetFirstSpecialistOrder?$AA@
CONST	SEGMENT
??_C@_0BI@GOLELKAA@GetFirstSpecialistOrder?$AA@ DB 'GetFirstSpecialistOrd'
	DB	'er', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KCLLEIOH@GetFirstProjectOrder?$AA@
CONST	SEGMENT
??_C@_0BF@KCLLEIOH@GetFirstProjectOrder?$AA@ DB 'GetFirstProjectOrder', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MEAEELJJ@GetFirstUnitOrder?$AA@
CONST	SEGMENT
??_C@_0BC@MEAEELJJ@GetFirstUnitOrder?$AA@ DB 'GetFirstUnitOrder', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FDBBPKLD@IsFoodProduction?$AA@
CONST	SEGMENT
??_C@_0BB@FDBBPKLD@IsFoodProduction?$AA@ DB 'IsFoodProduction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NIKBHNEM@GetGeneralProductionTurnsLeft?$AA@
CONST	SEGMENT
??_C@_0BO@NIKBHNEM@GetGeneralProductionTurnsLeft?$AA@ DB 'GetGeneralProdu'
	DB	'ctionTurnsLeft', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IAGNNOMA@GetProductionNameKey?$AA@
CONST	SEGMENT
??_C@_0BF@IAGNNOMA@GetProductionNameKey?$AA@ DB 'GetProductionNameKey', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NPELMAGE@GetProductionProcess?$AA@
CONST	SEGMENT
??_C@_0BF@NPELMAGE@GetProductionProcess?$AA@ DB 'GetProductionProcess', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FNNHALBC@GetProductionSpecialist?$AA@
CONST	SEGMENT
??_C@_0BI@FNNHALBC@GetProductionSpecialist?$AA@ DB 'GetProductionSpeciali'
	DB	'st', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IBDMJHKC@GetProductionProject?$AA@
CONST	SEGMENT
??_C@_0BF@IBDMJHKC@GetProductionProject?$AA@ DB 'GetProductionProject', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GMPDFJII@GetProductionBuilding?$AA@
CONST	SEGMENT
??_C@_0BG@GMPDFJII@GetProductionBuilding?$AA@ DB 'GetProductionBuilding', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JMGMMAKO@GetProductionUnitAI?$AA@
CONST	SEGMENT
??_C@_0BE@JMGMMAKO@GetProductionUnitAI?$AA@ DB 'GetProductionUnitAI', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HHAFHDBH@GetProductionUnit?$AA@
CONST	SEGMENT
??_C@_0BC@HHAFHDBH@GetProductionUnit?$AA@ DB 'GetProductionUnit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@PMHACJOD@AddProductionExperience?$AA@
CONST	SEGMENT
??_C@_0BI@PMHACJOD@AddProductionExperience?$AA@ DB 'AddProductionExperien'
	DB	'ce', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HOMJNLCG@GetProductionExperience?$AA@
CONST	SEGMENT
??_C@_0BI@HOMJNLCG@GetProductionExperience?$AA@ DB 'GetProductionExperien'
	DB	'ce', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FDHDEEDP@CanContinueProduction?$AA@
CONST	SEGMENT
??_C@_0BG@FDHDEEDP@CanContinueProduction?$AA@ DB 'CanContinueProduction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IPGILDGA@IsProductionProcess?$AA@
CONST	SEGMENT
??_C@_0BE@IPGILDGA@IsProductionProcess?$AA@ DB 'IsProductionProcess', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PMKLPINJ@IsProductionSpecialist?$AA@
CONST	SEGMENT
??_C@_0BH@PMKLPINJ@IsProductionSpecialist?$AA@ DB 'IsProductionSpecialist'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NBBPOEKG@IsProductionProject?$AA@
CONST	SEGMENT
??_C@_0BE@NBBPOEKG@IsProductionProject?$AA@ DB 'IsProductionProject', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GLMOLOOC@IsProductionBuilding?$AA@
CONST	SEGMENT
??_C@_0BF@GLMOLOOC@IsProductionBuilding?$AA@ DB 'IsProductionBuilding', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MEBAJFDN@IsProductionUnit?$AA@
CONST	SEGMENT
??_C@_0BB@MEBAJFDN@IsProductionUnit?$AA@ DB 'IsProductionUnit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DDFAINDE@IsProductionLimited?$AA@
CONST	SEGMENT
??_C@_0BE@DDFAINDE@IsProductionLimited?$AA@ DB 'IsProductionLimited', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GIHKPEF@IsProduction?$AA@
CONST	SEGMENT
??_C@_0N@GIHKPEF@IsProduction?$AA@ DB 'IsProduction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IKLMJKMH@GetFoodTurnsLeft?$AA@
CONST	SEGMENT
??_C@_0BB@IKLMJKMH@GetFoodTurnsLeft?$AA@ DB 'GetFoodTurnsLeft', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MCIHHEDJ@DoPickResourceDemanded?$AA@
CONST	SEGMENT
??_C@_0BH@MCIHHEDJ@DoPickResourceDemanded?$AA@ DB 'DoPickResourceDemanded'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HDAFCNHJ@SetResourceDemanded?$AA@
CONST	SEGMENT
??_C@_0BE@HDAFCNHJ@SetResourceDemanded?$AA@ DB 'SetResourceDemanded', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NNCOGNAF@GetResourceDemanded?$AA@
CONST	SEGMENT
??_C@_0BE@NNCOGNAF@GetResourceDemanded?$AA@ DB 'GetResourceDemanded', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@GDJGPHKP@IsBuildingLocalResourceValid?$AA@
CONST	SEGMENT
??_C@_0BN@GDJGPHKP@IsBuildingLocalResourceValid?$AA@ DB 'IsBuildingLocalR'
	DB	'esourceValid', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07OPIONNNI@CanJoin?$AA@
CONST	SEGMENT
??_C@_07OPIONNNI@CanJoin?$AA@ DB 'CanJoin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@GGJPFJGL@GetFaithPurchaseBuildingTooltip?$AA@
CONST	SEGMENT
??_C@_0CA@GGJPFJGL@GetFaithPurchaseBuildingTooltip?$AA@ DB 'GetFaithPurch'
	DB	'aseBuildingTooltip', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FAPMIPIE@GetPurchaseBuildingTooltip?$AA@
CONST	SEGMENT
??_C@_0BL@FAPMIPIE@GetPurchaseBuildingTooltip?$AA@ DB 'GetPurchaseBuildin'
	DB	'gTooltip', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MAHKFKLD@GetFaithPurchaseUnitTooltip?$AA@
CONST	SEGMENT
??_C@_0BM@MAHKFKLD@GetFaithPurchaseUnitTooltip?$AA@ DB 'GetFaithPurchaseU'
	DB	'nitTooltip', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CFONLAFB@GetPurchaseUnitTooltip?$AA@
CONST	SEGMENT
??_C@_0BH@CFONLAFB@GetPurchaseUnitTooltip?$AA@ DB 'GetPurchaseUnitTooltip'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LBFPGCCN@CanMaintain?$AA@
CONST	SEGMENT
??_C@_0M@LBFPGCCN@CanMaintain?$AA@ DB 'CanMaintain', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DCAJPLNN@CanPrepare?$AA@
CONST	SEGMENT
??_C@_0L@DCAJPLNN@CanPrepare?$AA@ DB 'CanPrepare', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09ENLCPIFP@CanCreate?$AA@
CONST	SEGMENT
??_C@_09ENLCPIFP@CanCreate?$AA@ DB 'CanCreate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OBKNDGPF@CanConstruct?$AA@
CONST	SEGMENT
??_C@_0N@OBKNDGPF@CanConstruct?$AA@ DB 'CanConstruct', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IHIHNENF@CanConstructTooltip?$AA@
CONST	SEGMENT
??_C@_0BE@IHIHNENF@CanConstructTooltip?$AA@ DB 'CanConstructTooltip', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08BCMOJMKA@CanTrain?$AA@
CONST	SEGMENT
??_C@_08BCMOJMKA@CanTrain?$AA@ DB 'CanTrain', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EKMJEJJ@CanTrainTooltip?$AA@
CONST	SEGMENT
??_C@_0BA@EKMJEJJ@CanTrainTooltip?$AA@ DB 'CanTrainTooltip', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PMKDJFAN@IsBuildingsMaxed?$AA@
CONST	SEGMENT
??_C@_0BB@PMKDJFAN@IsBuildingsMaxed?$AA@ DB 'IsBuildingsMaxed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PEGJHPHH@IsNationalWondersMaxed?$AA@
CONST	SEGMENT
??_C@_0BH@PEGJHPHH@IsNationalWondersMaxed?$AA@ DB 'IsNationalWondersMaxed'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@ILFMPGB@IsTeamWondersMaxed?$AA@
CONST	SEGMENT
??_C@_0BD@ILFMPGB@IsTeamWondersMaxed?$AA@ DB 'IsTeamWondersMaxed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MLOPBNAH@IsWorldWondersMaxed?$AA@
CONST	SEGMENT
??_C@_0BE@MLOPBNAH@IsWorldWondersMaxed?$AA@ DB 'IsWorldWondersMaxed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DHLOKDMI@AllUpgradesAvailable?$AA@
CONST	SEGMENT
??_C@_0BF@DHLOKDMI@AllUpgradesAvailable?$AA@ DB 'AllUpgradesAvailable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NIDNNACB@FindYieldRateRank?$AA@
CONST	SEGMENT
??_C@_0BC@NIDNNACB@FindYieldRateRank?$AA@ DB 'FindYieldRateRank', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HJIHCGBJ@FindBaseYieldRateRank?$AA@
CONST	SEGMENT
??_C@_0BG@HJIHCGBJ@FindBaseYieldRateRank?$AA@ DB 'FindBaseYieldRateRank', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CLJOHCFG@FindPopulationRank?$AA@
CONST	SEGMENT
??_C@_0BD@CLJOHCFG@FindPopulationRank?$AA@ DB 'FindPopulationRank', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@ENGGNHLP@CountNumRiverPlots?$AA@
CONST	SEGMENT
??_C@_0BD@ENGGNHLP@CountNumRiverPlots?$AA@ DB 'CountNumRiverPlots', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BBABDIP@CountNumWaterPlots?$AA@
CONST	SEGMENT
??_C@_0BD@BBABDIP@CountNumWaterPlots?$AA@ DB 'CountNumWaterPlots', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FBLIMDFF@CountNumImprovedPlots?$AA@
CONST	SEGMENT
??_C@_0BG@FBLIMDFF@CountNumImprovedPlots?$AA@ DB 'CountNumImprovedPlots', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DHGDDLG@ClearWorkingOverride?$AA@
CONST	SEGMENT
??_C@_0BF@DHGDDLG@ClearWorkingOverride?$AA@ DB 'ClearWorkingOverride', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PODKKBHB@IsPlotBlockaded?$AA@
CONST	SEGMENT
??_C@_0BA@PODKKBHB@IsPlotBlockaded?$AA@ DB 'IsPlotBlockaded', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07BKPKDGDP@CanWork?$AA@
CONST	SEGMENT
??_C@_07BKPKDGDP@CanWork?$AA@ DB 'CanWork', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EPAKKPKO@GetCityIndexPlot?$AA@
CONST	SEGMENT
??_C@_0BB@EPAKKPKO@GetCityIndexPlot?$AA@ DB 'GetCityIndexPlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JDCFJGPM@GetCityPlotIndex?$AA@
CONST	SEGMENT
??_C@_0BB@JDCFJGPM@GetCityPlotIndex?$AA@ DB 'GetCityPlotIndex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JGGOEKHG@ChooseProduction?$AA@
CONST	SEGMENT
??_C@_0BB@JGGOEKHG@ChooseProduction?$AA@ DB 'ChooseProduction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06LFMCFBGM@DoTask?$AA@
CONST	SEGMENT
??_C@_06LFMCFBGM@DoTask?$AA@ DB 'DoTask', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NCKCFLCG@CreateGreatAdmiral?$AA@
CONST	SEGMENT
??_C@_0BD@NCKCFLCG@CreateGreatAdmiral?$AA@ DB 'CreateGreatAdmiral', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PBNOMGLK@CreateGreatGeneral?$AA@
CONST	SEGMENT
??_C@_0BD@PBNOMGLK@CreateGreatGeneral?$AA@ DB 'CreateGreatGeneral', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04NIFFMPNM@Kill?$AA@
CONST	SEGMENT
??_C@_04NIFFMPNM@Kill?$AA@ DB 'Kill', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OAPDBHPB@IsNone?$AA@
CONST	SEGMENT
??_C@_06OAPDBHPB@IsNone?$AA@ DB 'IsNone', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?PushMethods@CvLuaCity@@SAXPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
?PushMethods@CvLuaCity@@SAXPAUlua_State@@H@Z PROC	; CvLuaCity::PushMethods, COMDAT

; 26   : {

	push	ebp
	mov	ebp, esp

; 27   : 	Method(IsNone);

	push	0
	push	OFFSET ?lIsNone@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsNone
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_06OAPDBHPB@IsNone?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 28   : 	Method(Kill);

	push	0
	push	OFFSET ?lKill@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lKill
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_04NIFFMPNM@Kill?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 29   : 
; 30   : 	Method(CreateGreatGeneral);

	push	0
	push	OFFSET ?lCreateGreatGeneral@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCreateGreatGeneral
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@PBNOMGLK@CreateGreatGeneral?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 31   : 	Method(CreateGreatAdmiral);

	push	0
	push	OFFSET ?lCreateGreatAdmiral@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCreateGreatAdmiral
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@NCKCFLCG@CreateGreatAdmiral?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 32   : 
; 33   : 	Method(DoTask);

	push	0
	push	OFFSET ?lDoTask@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lDoTask
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_06LFMCFBGM@DoTask?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 34   : 	Method(ChooseProduction);

	push	0
	push	OFFSET ?lChooseProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChooseProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@JGGOEKHG@ChooseProduction?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 35   : 	Method(GetCityPlotIndex);

	push	0
	push	OFFSET ?lGetCityPlotIndex@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCityPlotIndex
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@JDCFJGPM@GetCityPlotIndex?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 36   : 	Method(GetCityIndexPlot);

	push	0
	push	OFFSET ?lGetCityIndexPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCityIndexPlot
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@EPAKKPKO@GetCityIndexPlot?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 37   : 	Method(CanWork);

	push	0
	push	OFFSET ?lCanWork@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanWork
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07BKPKDGDP@CanWork?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 38   : 	Method(IsPlotBlockaded);

	push	0
	push	OFFSET ?lIsPlotBlockaded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsPlotBlockaded
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@PODKKBHB@IsPlotBlockaded?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 39   : 	Method(ClearWorkingOverride);

	push	0
	push	OFFSET ?lClearWorkingOverride@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lClearWorkingOverride
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@DHGDDLG@ClearWorkingOverride?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 40   : 	Method(CountNumImprovedPlots);

	push	0
	push	OFFSET ?lCountNumImprovedPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCountNumImprovedPlots
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@FBLIMDFF@CountNumImprovedPlots?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 41   : 	Method(CountNumWaterPlots);

	push	0
	push	OFFSET ?lCountNumWaterPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCountNumWaterPlots
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@BBABDIP@CountNumWaterPlots?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 42   : 	Method(CountNumRiverPlots);

	push	0
	push	OFFSET ?lCountNumRiverPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCountNumRiverPlots
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@ENGGNHLP@CountNumRiverPlots?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 43   : 
; 44   : 	Method(FindPopulationRank);

	push	0
	push	OFFSET ?lFindPopulationRank@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lFindPopulationRank
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@CLJOHCFG@FindPopulationRank?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 45   : 	Method(FindBaseYieldRateRank);

	push	0
	push	OFFSET ?lFindBaseYieldRateRank@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lFindBaseYieldRateRank
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@HJIHCGBJ@FindBaseYieldRateRank?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 46   : 	Method(FindYieldRateRank);

	push	0
	push	OFFSET ?lFindYieldRateRank@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lFindYieldRateRank
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@NIDNNACB@FindYieldRateRank?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 47   : 
; 48   : 	Method(AllUpgradesAvailable);

	push	0
	push	OFFSET ?lAllUpgradesAvailable@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lAllUpgradesAvailable
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@DHLOKDMI@AllUpgradesAvailable?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 49   : 	Method(IsWorldWondersMaxed);

	push	0
	push	OFFSET ?lIsWorldWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsWorldWondersMaxed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@MLOPBNAH@IsWorldWondersMaxed?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 50   : 	Method(IsTeamWondersMaxed);

	push	0
	push	OFFSET ?lIsTeamWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsTeamWondersMaxed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@ILFMPGB@IsTeamWondersMaxed?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 51   : 	Method(IsNationalWondersMaxed);

	push	0
	push	OFFSET ?lIsNationalWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsNationalWondersMaxed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@PEGJHPHH@IsNationalWondersMaxed?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 52   : 	Method(IsBuildingsMaxed);

	push	0
	push	OFFSET ?lIsBuildingsMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsBuildingsMaxed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@PMKDJFAN@IsBuildingsMaxed?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 53   : 
; 54   : 	Method(CanTrainTooltip);

	push	0
	push	OFFSET ?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanTrainTooltip
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@EKMJEJJ@CanTrainTooltip?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 55   : 	Method(CanTrain);

	push	0
	push	OFFSET ?lCanTrain@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanTrain
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08BCMOJMKA@CanTrain?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 56   : 	Method(CanConstructTooltip);

	push	0
	push	OFFSET ?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanConstructTooltip
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@IHIHNENF@CanConstructTooltip?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 57   : 	Method(CanConstruct);

	push	0
	push	OFFSET ?lCanConstruct@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanConstruct
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@OBKNDGPF@CanConstruct?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 58   : 	Method(CanCreate);

	push	0
	push	OFFSET ?lCanCreate@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanCreate
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09ENLCPIFP@CanCreate?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 59   : 	Method(CanPrepare);

	push	0
	push	OFFSET ?lCanPrepare@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanPrepare
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@DCAJPLNN@CanPrepare?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 60   : 	Method(CanMaintain);

	push	0
	push	OFFSET ?lCanMaintain@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanMaintain
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@LBFPGCCN@CanMaintain?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 61   : 
; 62   : 	Method(GetPurchaseUnitTooltip);

	push	0
	push	OFFSET ?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetPurchaseUnitTooltip
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@CFONLAFB@GetPurchaseUnitTooltip?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 63   : 	Method(GetFaithPurchaseUnitTooltip);

	push	0
	push	OFFSET ?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPurchaseUnitTooltip
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@MAHKFKLD@GetFaithPurchaseUnitTooltip?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 64   : 	Method(GetPurchaseBuildingTooltip);

	push	0
	push	OFFSET ?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetPurchaseBuildingTooltip
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@FAPMIPIE@GetPurchaseBuildingTooltip?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 65   : 	Method(GetFaithPurchaseBuildingTooltip);

	push	0
	push	OFFSET ?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPurchaseBuildingTooltip
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@GGJPFJGL@GetFaithPurchaseBuildingTooltip?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 66   : 
; 67   : 	Method(CanJoin);

	push	0
	push	OFFSET ?lCanJoin@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanJoin
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07OPIONNNI@CanJoin?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 68   : 	Method(IsBuildingLocalResourceValid);

	push	0
	push	OFFSET ?lIsBuildingLocalResourceValid@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsBuildingLocalResourceValid
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@GDJGPHKP@IsBuildingLocalResourceValid?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 69   : 
; 70   : 	Method(GetResourceDemanded);

	push	0
	push	OFFSET ?lGetResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetResourceDemanded
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@NNCOGNAF@GetResourceDemanded?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 71   : 	Method(SetResourceDemanded);

	push	0
	push	OFFSET ?lSetResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetResourceDemanded
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@HDAFCNHJ@SetResourceDemanded?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 72   : 	Method(DoPickResourceDemanded);

	push	0
	push	OFFSET ?lDoPickResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lDoPickResourceDemanded
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@MCIHHEDJ@DoPickResourceDemanded?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 73   : 
; 74   : 	Method(GetFoodTurnsLeft);

	push	0
	push	OFFSET ?lGetFoodTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFoodTurnsLeft
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@IKLMJKMH@GetFoodTurnsLeft?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 75   : 	Method(IsProduction);

	push	0
	push	OFFSET ?lIsProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@GIHKPEF@IsProduction?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 76   : 	Method(IsProductionLimited);

	push	0
	push	OFFSET ?lIsProductionLimited@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionLimited
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@DDFAINDE@IsProductionLimited?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 77   : 	Method(IsProductionUnit);

	push	0
	push	OFFSET ?lIsProductionUnit@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@MEBAJFDN@IsProductionUnit?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 78   : 	Method(IsProductionBuilding);

	push	0
	push	OFFSET ?lIsProductionBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionBuilding
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@GLMOLOOC@IsProductionBuilding?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 79   : 	Method(IsProductionProject);

	push	0
	push	OFFSET ?lIsProductionProject@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionProject
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@NBBPOEKG@IsProductionProject?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 80   : 	Method(IsProductionSpecialist);

	push	0
	push	OFFSET ?lIsProductionSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionSpecialist
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@PMKLPINJ@IsProductionSpecialist?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 81   : 	Method(IsProductionProcess);

	push	0
	push	OFFSET ?lIsProductionProcess@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionProcess
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@IPGILDGA@IsProductionProcess?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 82   : 
; 83   : 	Method(CanContinueProduction);

	push	0
	push	OFFSET ?lCanContinueProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanContinueProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@FDHDEEDP@CanContinueProduction?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 84   : 	Method(GetProductionExperience);

	push	0
	push	OFFSET ?lGetProductionExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@HOMJNLCG@GetProductionExperience?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 85   : 	Method(AddProductionExperience);

	push	0
	push	OFFSET ?lAddProductionExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lAddProductionExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@PMHACJOD@AddProductionExperience?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 86   : 
; 87   : 	Method(GetProductionUnit);

	push	0
	push	OFFSET ?lGetProductionUnit@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@HHAFHDBH@GetProductionUnit?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 88   : 	Method(GetProductionUnitAI);

	push	0
	push	OFFSET ?lGetProductionUnitAI@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionUnitAI
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@JMGMMAKO@GetProductionUnitAI?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 89   : 	Method(GetProductionBuilding);

	push	0
	push	OFFSET ?lGetProductionBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionBuilding
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@GMPDFJII@GetProductionBuilding?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 90   : 	Method(GetProductionProject);

	push	0
	push	OFFSET ?lGetProductionProject@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionProject
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@IBDMJHKC@GetProductionProject?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 91   : 	Method(GetProductionSpecialist);

	push	0
	push	OFFSET ?lGetProductionSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionSpecialist
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@FNNHALBC@GetProductionSpecialist?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 92   : 	Method(GetProductionProcess);

	push	0
	push	OFFSET ?lGetProductionProcess@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionProcess
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@NPELMAGE@GetProductionProcess?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 93   : 	//Method(GetProductionName);
; 94   : 	Method(GetProductionNameKey);

	push	0
	push	OFFSET ?lGetProductionNameKey@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionNameKey
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@IAGNNOMA@GetProductionNameKey?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 95   : 	Method(GetGeneralProductionTurnsLeft);

	push	0
	push	OFFSET ?lGetGeneralProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGeneralProductionTurnsLeft
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@NIKBHNEM@GetGeneralProductionTurnsLeft?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 96   : 	Method(IsFoodProduction);

	push	0
	push	OFFSET ?lIsFoodProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsFoodProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@FDBBPKLD@IsFoodProduction?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 97   : 	Method(GetFirstUnitOrder);

	push	0
	push	OFFSET ?lGetFirstUnitOrder@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFirstUnitOrder
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@MEAEELJJ@GetFirstUnitOrder?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 98   : 	Method(GetFirstProjectOrder);

	push	0
	push	OFFSET ?lGetFirstProjectOrder@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFirstProjectOrder
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@KCLLEIOH@GetFirstProjectOrder?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 99   : 	Method(GetFirstSpecialistOrder);

	push	0
	push	OFFSET ?lGetFirstSpecialistOrder@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFirstSpecialistOrder
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@GOLELKAA@GetFirstSpecialistOrder?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 100  : 
; 101  : 	Method(GetOrderFromQueue);

	push	0
	push	OFFSET ?lGetOrderFromQueue@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetOrderFromQueue
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@BMCPAEED@GetOrderFromQueue?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 102  : 
; 103  : 	Method(GetNumTrainUnitAI);

	push	0
	push	OFFSET ?lGetNumTrainUnitAI@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumTrainUnitAI
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@LOPIPDKF@GetNumTrainUnitAI?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 104  : 	Method(GetFirstBuildingOrder);

	push	0
	push	OFFSET ?lGetFirstBuildingOrder@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFirstBuildingOrder
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@EDLGFJKE@GetFirstBuildingOrder?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 105  : 	Method(IsUnitFoodProduction);

	push	0
	push	OFFSET ?lIsUnitFoodProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsUnitFoodProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@LICEFFKA@IsUnitFoodProduction?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 106  : 	Method(GetProduction);

	push	0
	push	OFFSET ?lGetProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@KBGANGLA@GetProduction?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 107  : 	Method(GetProductionTimes100);

	push	0
	push	OFFSET ?lGetProductionTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@ENMJHDK@GetProductionTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 108  : 	Method(GetProductionNeeded);

	push	0
	push	OFFSET ?lGetProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionNeeded
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@BJPFPGBE@GetProductionNeeded?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 109  : 	Method(GetUnitProductionNeeded);

	push	0
	push	OFFSET ?lGetUnitProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitProductionNeeded
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@LJANCJHB@GetUnitProductionNeeded?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 110  : 	Method(GetBuildingProductionNeeded);

	push	0
	push	OFFSET ?lGetBuildingProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingProductionNeeded
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@GGLBNBDE@GetBuildingProductionNeeded?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 111  : 	Method(GetProjectProductionNeeded);

	push	0
	push	OFFSET ?lGetProjectProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProjectProductionNeeded
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@JBMFKMKF@GetProjectProductionNeeded?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 112  : 	Method(GetProductionTurnsLeft);

	push	0
	push	OFFSET ?lGetProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionTurnsLeft
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@PFJDPGCD@GetProductionTurnsLeft?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 113  : 	Method(GetUnitProductionTurnsLeft);

	push	0
	push	OFFSET ?lGetUnitProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitProductionTurnsLeft
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@OEJFMLG@GetUnitProductionTurnsLeft?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 114  : 	Method(GetBuildingProductionTurnsLeft);

	push	0
	push	OFFSET ?lGetBuildingProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingProductionTurnsLeft
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@GGKKIHFA@GetBuildingProductionTurnsLeft?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 115  : 	Method(GetProjectProductionTurnsLeft);

	push	0
	push	OFFSET ?lGetProjectProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProjectProductionTurnsLeft
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@FHICOHPO@GetProjectProductionTurnsLeft?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 116  : 	Method(GetSpecialistProductionTurnsLeft);

	push	0
	push	OFFSET ?lGetSpecialistProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistProductionTurnsLeft
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CB@EFOFIEPO@GetSpecialistProductionTurnsLeft@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 117  : 
; 118  : 	Method(CreateApolloProgram);

	push	0
	push	OFFSET ?lCreateApolloProgram@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCreateApolloProgram
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@GBMHNAJH@CreateApolloProgram?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 119  : 
; 120  : 	Method(IsCanPurchase);

	push	0
	push	OFFSET ?lIsCanPurchase@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsCanPurchase
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@NIIMABIN@IsCanPurchase?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 121  : 	Method(GetUnitPurchaseCost);

	push	0
	push	OFFSET ?lGetUnitPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitPurchaseCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@OFOJNOOB@GetUnitPurchaseCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 122  : 	Method(GetUnitFaithPurchaseCost);

	push	0
	push	OFFSET ?lGetUnitFaithPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitFaithPurchaseCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@CKMNAAAH@GetUnitFaithPurchaseCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 123  : 	Method(GetBuildingPurchaseCost);

	push	0
	push	OFFSET ?lGetBuildingPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingPurchaseCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@EOCLNJGF@GetBuildingPurchaseCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 124  : 	Method(GetBuildingFaithPurchaseCost);

	push	0
	push	OFFSET ?lGetBuildingFaithPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingFaithPurchaseCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@CMKEAJOA@GetBuildingFaithPurchaseCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 125  : 	Method(GetProjectPurchaseCost);

	push	0
	push	OFFSET ?lGetProjectPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProjectPurchaseCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@JBKNIEHE@GetProjectPurchaseCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 126  : 
; 127  : 	Method(SetProduction);

	push	0
	push	OFFSET ?lSetProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@NOHOGFMH@SetProduction?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 128  : 	Method(ChangeProduction);

	push	0
	push	OFFSET ?lChangeProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@JCKMHPDJ@ChangeProduction?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 129  : 
; 130  : 	Method(GetYieldModifierTooltip);

	push	0
	push	OFFSET ?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetYieldModifierTooltip
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@LBFPCPLM@GetYieldModifierTooltip?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 131  : 	Method(GetProductionModifier);

	push	0
	push	OFFSET ?lGetProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@COALBBFM@GetProductionModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 132  : 
; 133  : 	Method(GetCurrentProductionDifference);

	push	0
	push	OFFSET ?lGetCurrentProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCurrentProductionDifference
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@DPKFHAM@GetCurrentProductionDifference?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 134  : 	Method(GetRawProductionDifference);

	push	0
	push	OFFSET ?lGetRawProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetRawProductionDifference
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@KEJICAMN@GetRawProductionDifference?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 135  : 	Method(GetCurrentProductionDifferenceTimes100);

	push	0
	push	OFFSET ?lGetCurrentProductionDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCurrentProductionDifferenceTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CH@BNPOEMEH@GetCurrentProductionDifferenceTi@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 136  : 	Method(GetRawProductionDifferenceTimes100);

	push	0
	push	OFFSET ?lGetRawProductionDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetRawProductionDifferenceTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@FAGAIJM@GetRawProductionDifferenceTimes1@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 137  : 	Method(GetUnitProductionModifier);

	push	0
	push	OFFSET ?lGetUnitProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@CAONOBAD@GetUnitProductionModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 138  : 	Method(GetBuildingProductionModifier);

	push	0
	push	OFFSET ?lGetBuildingProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@BOIFPPNB@GetBuildingProductionModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 139  : 	Method(GetProjectProductionModifier);

	push	0
	push	OFFSET ?lGetProjectProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProjectProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@FIGLLOHP@GetProjectProductionModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 140  : 	Method(GetSpecialistProductionModifier);

	push	0
	push	OFFSET ?lGetSpecialistProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@IIOBOOCG@GetSpecialistProductionModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 141  : 
; 142  : 	Method(GetExtraProductionDifference);

	push	0
	push	OFFSET ?lGetExtraProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetExtraProductionDifference
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@IGNDNHOA@GetExtraProductionDifference?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 143  : 
; 144  : 	Method(CanHurry);

	push	0
	push	OFFSET ?lCanHurry@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanHurry
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08IDKGLCCG@CanHurry?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 145  : 	Method(Hurry);

	push	0
	push	OFFSET ?lHurry@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lHurry
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_05PELKKPHE@Hurry?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 146  : 	Method(GetConscriptUnit);

	push	0
	push	OFFSET ?lGetConscriptUnit@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetConscriptUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@EGKBFCJM@GetConscriptUnit?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 147  : 	Method(GetConscriptPopulation);

	push	0
	push	OFFSET ?lGetConscriptPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetConscriptPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@IGNMDIJF@GetConscriptPopulation?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 148  : 	Method(ConscriptMinCityPopulation);

	push	0
	push	OFFSET ?lConscriptMinCityPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lConscriptMinCityPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@PLEBJCEL@ConscriptMinCityPopulation?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 149  : 	Method(CanConscript);

	push	0
	push	OFFSET ?lCanConscript@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanConscript
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@PLNBPBNI@CanConscript?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 150  : 	Method(Conscript);

	push	0
	push	OFFSET ?lConscript@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lConscript
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09KGDNLPBA@Conscript?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 151  : 	Method(GetResourceYieldRateModifier);

	push	0
	push	OFFSET ?lGetResourceYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetResourceYieldRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@GNJODLOF@GetResourceYieldRateModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 152  : 	Method(GetHandicapType);

	push	0
	push	OFFSET ?lGetHandicapType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetHandicapType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@NDPGKNBO@GetHandicapType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 153  : 	Method(GetCivilizationType);

	push	0
	push	OFFSET ?lGetCivilizationType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCivilizationType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@OGLFKPOE@GetCivilizationType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 154  : 	Method(GetPersonalityType);

	push	0
	push	OFFSET ?lGetPersonalityType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetPersonalityType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@DDPEHEOB@GetPersonalityType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 155  : 	Method(GetArtStyleType);

	push	0
	push	OFFSET ?lGetArtStyleType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetArtStyleType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@GLKLOHNJ@GetArtStyleType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 156  : 	Method(GetCitySizeType);

	push	0
	push	OFFSET ?lGetCitySizeType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCitySizeType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@LACHPPMM@GetCitySizeType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 157  : 
; 158  : 	Method(IsBarbarian);

	push	0
	push	OFFSET ?lIsBarbarian@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsBarbarian
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@NJNEDJLP@IsBarbarian?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 159  : 	Method(IsHuman);

	push	0
	push	OFFSET ?lIsHuman@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsHuman
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07NIJBBMLI@IsHuman?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 160  : 	Method(IsVisible);

	push	0
	push	OFFSET ?lIsVisible@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsVisible
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09OLGPEPPJ@IsVisible?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 161  : 
; 162  : 	Method(IsCapital);

	push	0
	push	OFFSET ?lIsCapital@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsCapital
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09MGCHGMCG@IsCapital?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 163  : 	Method(IsOriginalCapital);

	push	0
	push	OFFSET ?lIsOriginalCapital@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsOriginalCapital
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@PAPJEFNG@IsOriginalCapital?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 164  : 	Method(IsOriginalMajorCapital);

	push	0
	push	OFFSET ?lIsOriginalMajorCapital@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsOriginalMajorCapital
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@ONOJLMEH@IsOriginalMajorCapital?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 165  : 	Method(IsCoastal);

	push	0
	push	OFFSET ?lIsCoastal@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsCoastal
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09HEMCEJGG@IsCoastal?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 166  : 
; 167  : 	Method(FoodConsumption);

	push	0
	push	OFFSET ?lFoodConsumption@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lFoodConsumption
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@BJLFGBFC@FoodConsumption?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 168  : 	Method(FoodDifference);

	push	0
	push	OFFSET ?lFoodDifference@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lFoodDifference
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@CNHJHJIP@FoodDifference?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 169  : 	Method(FoodDifferenceTimes100);

	push	0
	push	OFFSET ?lFoodDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lFoodDifferenceTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@LJBNHLKM@FoodDifferenceTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 170  : 	Method(GrowthThreshold);

	push	0
	push	OFFSET ?lGrowthThreshold@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGrowthThreshold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@NJNOJFJN@GrowthThreshold?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 171  : 	Method(ProductionLeft);

	push	0
	push	OFFSET ?lProductionLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lProductionLeft
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@KBNPLEGK@ProductionLeft?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 172  : 	Method(HurryCost);

	push	0
	push	OFFSET ?lHurryCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lHurryCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09PDHBPCJG@HurryCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 173  : 	Method(HurryGold);

	push	0
	push	OFFSET ?lHurryGold@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lHurryGold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09FLEJKCEK@HurryGold?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 174  : 	Method(HurryPopulation);

	push	0
	push	OFFSET ?lHurryPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lHurryPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@CCMOKMFO@HurryPopulation?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 175  : 	Method(HurryProduction);

	push	0
	push	OFFSET ?lHurryProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lHurryProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@IMHIGCAF@HurryProduction?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 176  : 	Method(MaxHurryPopulation);

	push	0
	push	OFFSET ?lMaxHurryPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lMaxHurryPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@OEGDKNCP@MaxHurryPopulation?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 177  : 
; 178  : 	Method(GetNumBuilding);

	push	0
	push	OFFSET ?lGetNumBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumBuilding
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@EOHOGKJK@GetNumBuilding?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 179  : 	Method(IsHasBuilding);

	push	0
	push	OFFSET ?lIsHasBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsHasBuilding
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@ELHLCIIC@IsHasBuilding?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 180  : 	Method(GetNumActiveBuilding);

	push	0
	push	OFFSET ?lGetNumActiveBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumActiveBuilding
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@OPJCOPIH@GetNumActiveBuilding?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 181  : 	Method(GetID);

	push	0
	push	OFFSET ?lGetID@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetID
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_05CLBJHDA@GetID?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 182  : 	Method(GetX);

	push	0
	push	OFFSET ?lGetX@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetX
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_04POGMJMFK@GetX?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 183  : 	Method(GetY);

	push	0
	push	OFFSET ?lGetY@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetY
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_04OHHHKNBL@GetY?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 184  : 	Method(At);

	push	0
	push	OFFSET ?lAt@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lAt
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_02DKLFHNOI@At?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 185  : 	Method(AtPlot);

	push	0
	push	OFFSET ?lAtPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lAtPlot
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_06FBGHKGAE@AtPlot?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 186  : 	Method(Plot);

	push	0
	push	OFFSET ?lPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lPlot
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_04HIOGLPHN@Plot?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 187  : 	Method(Area);

	push	0
	push	OFFSET ?lArea@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lArea
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_04KPICECCB@Area?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 188  : 	Method(WaterArea);

	push	0
	push	OFFSET ?lWaterArea@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lWaterArea
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09CNIEIFHO@WaterArea?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 189  : 	Method(GetRallyPlot);

	push	0
	push	OFFSET ?lGetRallyPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetRallyPlot
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@JOMCKPIG@GetRallyPlot?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 190  : 
; 191  : 	Method(CanBuyPlot);

	push	0
	push	OFFSET ?lCanBuyPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanBuyPlot
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@MJKINFAP@CanBuyPlot?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 192  : 	Method(CanBuyPlotAt);

	push	0
	push	OFFSET ?lCanBuyPlotAt@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanBuyPlotAt
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@ELCKKIDJ@CanBuyPlotAt?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 193  : 	Method(GetNextBuyablePlot);

	push	0
	push	OFFSET ?lGetNextBuyablePlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNextBuyablePlot
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@DPMBBFOK@GetNextBuyablePlot?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 194  : 	Method(GetBuyablePlotList);

	push	0
	push	OFFSET ?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuyablePlotList
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@EKOODAKH@GetBuyablePlotList?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 195  : 	Method(GetBuyPlotCost);

	push	0
	push	OFFSET ?lGetBuyPlotCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuyPlotCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@CLDNCOML@GetBuyPlotCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 196  : 	Method(CanBuyAnyPlot);

	push	0
	push	OFFSET ?lCanBuyAnyPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanBuyAnyPlot
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@JAHGGNPO@CanBuyAnyPlot?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 197  : 
; 198  : 	Method(GetGarrisonedUnit);

	push	0
	push	OFFSET ?lGetGarrisonedUnit@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGarrisonedUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@ECAKDE@GetGarrisonedUnit?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 199  : 
; 200  : 	Method(GetGameTurnFounded);

	push	0
	push	OFFSET ?lGetGameTurnFounded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGameTurnFounded
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@PEMIOCBG@GetGameTurnFounded?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 201  : 	Method(GetGameTurnAcquired);

	push	0
	push	OFFSET ?lGetGameTurnAcquired@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGameTurnAcquired
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@GPLNLMHN@GetGameTurnAcquired?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 202  : 	Method(GetGameTurnLastExpanded);

	push	0
	push	OFFSET ?lGetGameTurnLastExpanded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGameTurnLastExpanded
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@IICLLOKC@GetGameTurnLastExpanded?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 203  : 	Method(GetPopulation);

	push	0
	push	OFFSET ?lGetPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@PNGBIOL@GetPopulation?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 204  : 	Method(SetPopulation);

	push	0
	push	OFFSET ?lSetPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@HAMIKLJM@SetPopulation?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 205  : 	Method(ChangePopulation);

	push	0
	push	OFFSET ?lChangePopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangePopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@DMBKLBGC@ChangePopulation?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 206  : 	Method(GetRealPopulation);

	push	0
	push	OFFSET ?lGetRealPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetRealPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@KOHBIIDL@GetRealPopulation?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 207  : 
; 208  : 	Method(GetHighestPopulation);

	push	0
	push	OFFSET ?lGetHighestPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetHighestPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@FJCPNHID@GetHighestPopulation?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 209  : 	Method(SetHighestPopulation);

	push	0
	push	OFFSET ?lSetHighestPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetHighestPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@DCMBNE@SetHighestPopulation?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 210  : 	//Method(GetWorkingPopulation);
; 211  : 	//Method(GetSpecialistPopulation);
; 212  : 	Method(GetNumGreatPeople);

	push	0
	push	OFFSET ?lGetNumGreatPeople@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumGreatPeople
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@KLEPOAKG@GetNumGreatPeople?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 213  : 	Method(GetBaseGreatPeopleRate);

	push	0
	push	OFFSET ?lGetBaseGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseGreatPeopleRate
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@FFFJEHEB@GetBaseGreatPeopleRate?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 214  : 	Method(GetGreatPeopleRate);

	push	0
	push	OFFSET ?lGetGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGreatPeopleRate
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@EJKIAKHA@GetGreatPeopleRate?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 215  : 	Method(GetTotalGreatPeopleRateModifier);

	push	0
	push	OFFSET ?lGetTotalGreatPeopleRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetTotalGreatPeopleRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@KMDLAMII@GetTotalGreatPeopleRateModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 216  : 	Method(ChangeBaseGreatPeopleRate);

	push	0
	push	OFFSET ?lChangeBaseGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseGreatPeopleRate
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@KDPOINAO@ChangeBaseGreatPeopleRate?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 217  : 	Method(GetGreatPeopleRateModifier);

	push	0
	push	OFFSET ?lGetGreatPeopleRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGreatPeopleRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@NNNBCPJN@GetGreatPeopleRateModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 218  : 
; 219  : 	Method(GetJONSCultureStored);

	push	0
	push	OFFSET ?lGetJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCultureStored
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@KMMIJFNE@GetJONSCultureStored?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 220  : 	Method(SetJONSCultureStored);

	push	0
	push	OFFSET ?lSetJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetJONSCultureStored
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@PFNFIDID@SetJONSCultureStored?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 221  : 	Method(ChangeJONSCultureStored);

	push	0
	push	OFFSET ?lChangeJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCultureStored
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@EBCOCIEG@ChangeJONSCultureStored?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 222  : #ifdef AUI_PLAYER_FIX_JONS_CULTURE_IS_T100
; 223  : 	Method(GetJONSCultureStoredTimes100);

	push	0
	push	OFFSET ?lGetJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCultureStoredTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@CIEBABKN@GetJONSCultureStoredTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 224  : 	Method(SetJONSCultureStoredTimes100);

	push	0
	push	OFFSET ?lSetJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetJONSCultureStoredTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@PJOHOOHJ@SetJONSCultureStoredTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 225  : 	Method(ChangeJONSCultureStoredTimes100);

	push	0
	push	OFFSET ?lChangeJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCultureStoredTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@BEBPGHLA@ChangeJONSCultureStoredTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 226  : 	Method(GetJONSCulturePerTurnTimes100);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@HDNKJLLK@GetJONSCulturePerTurnTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 227  : #endif
; 228  : 	Method(GetJONSCultureLevel);

	push	0
	push	OFFSET ?lGetJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCultureLevel
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@HEAJCJLP@GetJONSCultureLevel?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 229  : 	Method(SetJONSCultureLevel);

	push	0
	push	OFFSET ?lSetJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetJONSCultureLevel
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@NKCCGJMD@SetJONSCultureLevel?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 230  : 	Method(ChangeJONSCultureLevel);

	push	0
	push	OFFSET ?lChangeJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCultureLevel
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@CKDHJLDP@ChangeJONSCultureLevel?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 231  : 	Method(DoJONSCultureLevelIncrease);

	push	0
	push	OFFSET ?lDoJONSCultureLevelIncrease@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lDoJONSCultureLevelIncrease
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@IFAKDEMK@DoJONSCultureLevelIncrease?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 232  : 	Method(GetJONSCultureThreshold);

	push	0
	push	OFFSET ?lGetJONSCultureThreshold@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCultureThreshold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@MNIAPCAO@GetJONSCultureThreshold?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 233  : 
; 234  : 	Method(GetJONSCulturePerTurn);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@IMDBELFE@GetJONSCulturePerTurn?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 235  : 
; 236  : 	Method(GetBaseJONSCulturePerTurn);

	push	0
	push	OFFSET ?lGetBaseJONSCulturePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseJONSCulturePerTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@CGPFDHCN@GetBaseJONSCulturePerTurn?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 237  : 	Method(GetJONSCulturePerTurnFromBuildings);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromBuildings
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@JLHINFC@GetJONSCulturePerTurnFromBuildin@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 238  : 	Method(ChangeJONSCulturePerTurnFromBuildings);

	push	0
	push	OFFSET ?lChangeJONSCulturePerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCulturePerTurnFromBuildings
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CG@KGCOHKJP@ChangeJONSCulturePerTurnFromBuil@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 239  : 	Method(GetJONSCulturePerTurnFromPolicies);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromPolicies
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@DFKOEECO@GetJONSCulturePerTurnFromPolicie@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 240  : 	Method(ChangeJONSCulturePerTurnFromPolicies);

	push	0
	push	OFFSET ?lChangeJONSCulturePerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCulturePerTurnFromPolicies
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CF@KGECMFIH@ChangeJONSCulturePerTurnFromPoli@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 241  : 	Method(GetJONSCulturePerTurnFromSpecialists);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromSpecialists
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CF@DFBDEFBH@GetJONSCulturePerTurnFromSpecial@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 242  : 	Method(ChangeJONSCulturePerTurnFromSpecialists);

	push	0
	push	OFFSET ?lChangeJONSCulturePerTurnFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCulturePerTurnFromSpecialists
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CI@GIJOCEDC@ChangeJONSCulturePerTurnFromSpec@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 243  : 	Method(GetJONSCulturePerTurnFromGreatWorks);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromGreatWorks
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@HOPIHKFI@GetJONSCulturePerTurnFromGreatWo@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 244  : 	Method(GetJONSCulturePerTurnFromTraits);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromTraits@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromTraits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@MKHKHIDI@GetJONSCulturePerTurnFromTraits?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 245  : 	Method(GetJONSCulturePerTurnFromReligion);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@INODDPGK@GetJONSCulturePerTurnFromReligio@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 246  : 	Method(GetJONSCulturePerTurnFromLeagues);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromLeagues@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromLeagues
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CB@DONKGGML@GetJONSCulturePerTurnFromLeagues@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 247  : 
; 248  : 	Method(GetCultureRateModifier);

	push	0
	push	OFFSET ?lGetCultureRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCultureRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@CIAJBLLP@GetCultureRateModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 249  : 	Method(ChangeCultureRateModifier);

	push	0
	push	OFFSET ?lChangeCultureRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeCultureRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@NOKONBPA@ChangeCultureRateModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 250  : 
; 251  : 	Method(GetNumGreatWorks);

	push	0
	push	OFFSET ?lGetNumGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumGreatWorks
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@ILOKIPKM@GetNumGreatWorks?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 252  : 	Method(GetNumGreatWorkSlots);

	push	0
	push	OFFSET ?lGetNumGreatWorkSlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumGreatWorkSlots
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@FMOOCJFI@GetNumGreatWorkSlots?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 253  : 	Method(GetBaseTourism);

	push	0
	push	OFFSET ?lGetBaseTourism@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseTourism
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@PJMIHAEJ@GetBaseTourism?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 254  : 	Method(GetTourismMultiplier);

	push	0
	push	OFFSET ?lGetTourismMultiplier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetTourismMultiplier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@MHJNCJDK@GetTourismMultiplier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 255  : 	Method(GetTourismTooltip);

	push	0
	push	OFFSET ?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetTourismTooltip
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@OAAAMMGM@GetTourismTooltip?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 256  : 	Method(GetFilledSlotsTooltip);

	push	0
	push	OFFSET ?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFilledSlotsTooltip
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@CNAADLGC@GetFilledSlotsTooltip?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 257  : 	Method(GetTotalSlotsTooltip);

	push	0
	push	OFFSET ?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetTotalSlotsTooltip
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@CDKAAHGE@GetTotalSlotsTooltip?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 258  : 	Method(ClearGreatWorks);

	push	0
	push	OFFSET ?lClearGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lClearGreatWorks
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@JEEBJAFO@ClearGreatWorks?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 259  : 	Method(GetFaithBuildingTourism);

	push	0
	push	OFFSET ?lGetFaithBuildingTourism@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithBuildingTourism
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@KDLLAHHF@GetFaithBuildingTourism?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 260  : 
; 261  : 	Method(IsThemingBonusPossible);

	push	0
	push	OFFSET ?lIsThemingBonusPossible@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsThemingBonusPossible
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@OADCDAOP@IsThemingBonusPossible?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 262  : 	Method(GetThemingBonus);

	push	0
	push	OFFSET ?lGetThemingBonus@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetThemingBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@PNNDDOA@GetThemingBonus?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 263  : 	Method(GetThemingTooltip);

	push	0
	push	OFFSET ?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetThemingTooltip
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@IDIDCDN@GetThemingTooltip?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 264  : 
; 265  : 	Method(GetFaithPerTurn);

	push	0
	push	OFFSET ?lGetFaithPerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPerTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@CIJNECBN@GetFaithPerTurn?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 266  : 	Method(GetFaithPerTurnFromBuildings);

	push	0
	push	OFFSET ?lGetFaithPerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPerTurnFromBuildings
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@PFNCKOKE@GetFaithPerTurnFromBuildings?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 267  : 	Method(GetFaithPerTurnFromPolicies);

	push	0
	push	OFFSET ?lGetFaithPerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPerTurnFromPolicies
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@OJAFMOHF@GetFaithPerTurnFromPolicies?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 268  : 	Method(GetFaithPerTurnFromTraits);

	push	0
	push	OFFSET ?lGetFaithPerTurnFromTraits@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPerTurnFromTraits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@EKHAOHLH@GetFaithPerTurnFromTraits?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 269  : 	Method(GetFaithPerTurnFromReligion);

	push	0
	push	OFFSET ?lGetFaithPerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPerTurnFromReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@FBEILFDB@GetFaithPerTurnFromReligion?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 270  : 
; 271  : 	Method(IsReligionInCity);

	push	0
	push	OFFSET ?lIsReligionInCity@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsReligionInCity
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@PGCOPPAF@IsReligionInCity?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 272  : 	Method(IsHolyCityForReligion);

	push	0
	push	OFFSET ?lIsHolyCityForReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsHolyCityForReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@HPDNEPKN@IsHolyCityForReligion?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 273  : 	Method(IsHolyCityAnyReligion);

	push	0
	push	OFFSET ?lIsHolyCityAnyReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsHolyCityAnyReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@DCMLICBF@IsHolyCityAnyReligion?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 274  : 
; 275  : 	Method(GetNumFollowers);

	push	0
	push	OFFSET ?lGetNumFollowers@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumFollowers
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@BEJIHHEO@GetNumFollowers?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 276  : 	Method(GetReligiousMajority);

	push	0
	push	OFFSET ?lGetReligiousMajority@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetReligiousMajority
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@CPDBKIPJ@GetReligiousMajority?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 277  : 	Method(GetSecondaryReligion);

	push	0
	push	OFFSET ?lGetSecondaryReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSecondaryReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@KNGLOBDC@GetSecondaryReligion?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 278  : 	Method(GetSecondaryReligionPantheonBelief);

	push	0
	push	OFFSET ?lGetSecondaryReligionPantheonBelief@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSecondaryReligionPantheonBelief
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@GBBECGLH@GetSecondaryReligionPantheonBeli@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 279  : 	Method(GetPressurePerTurn);

	push	0
	push	OFFSET ?lGetPressurePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetPressurePerTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@JAFNIAKI@GetPressurePerTurn?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 280  : 	Method(ConvertPercentFollowers);

	push	0
	push	OFFSET ?lConvertPercentFollowers@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lConvertPercentFollowers
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@DDLKPOAO@ConvertPercentFollowers?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 281  : 	Method(AdoptReligionFully);

	push	0
	push	OFFSET ?lAdoptReligionFully@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lAdoptReligionFully
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@FBGNFBCF@AdoptReligionFully?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 282  : 	Method(GetReligionBuildingClassHappiness);

	push	0
	push	OFFSET ?lGetReligionBuildingClassHappiness@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetReligionBuildingClassHappiness
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@ENMDKGLO@GetReligionBuildingClassHappines@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 283  : 	Method(GetReligionBuildingClassYieldChange);

	push	0
	push	OFFSET ?lGetReligionBuildingClassYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetReligionBuildingClassYieldChange
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@IHEOCEID@GetReligionBuildingClassYieldCha@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 284  : 	Method(GetLeagueBuildingClassYieldChange);

	push	0
	push	OFFSET ?lGetLeagueBuildingClassYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetLeagueBuildingClassYieldChange
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@JAADPGKC@GetLeagueBuildingClassYieldChang@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 285  : 	Method(GetNumTradeRoutesAddingPressure);

	push	0
	push	OFFSET ?lGetNumTradeRoutesAddingPressure@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumTradeRoutesAddingPressure
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@FHBADINH@GetNumTradeRoutesAddingPressure?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 286  : 
; 287  : 	Method(GetNumWorldWonders);

	push	0
	push	OFFSET ?lGetNumWorldWonders@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumWorldWonders
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@FHKHHPIG@GetNumWorldWonders?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 288  : 	Method(GetNumTeamWonders);

	push	0
	push	OFFSET ?lGetNumTeamWonders@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumTeamWonders
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@OBPJLAFA@GetNumTeamWonders?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 289  : 	Method(GetNumNationalWonders);

	push	0
	push	OFFSET ?lGetNumNationalWonders@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumNationalWonders
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@HCJMDOLN@GetNumNationalWonders?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 290  : 	Method(GetNumBuildings);

	push	0
	push	OFFSET ?lGetNumBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumBuildings
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@BEIGCOAF@GetNumBuildings?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 291  : 
; 292  : 	Method(GetWonderProductionModifier);

	push	0
	push	OFFSET ?lGetWonderProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetWonderProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@HMIHDNFC@GetWonderProductionModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 293  : 	Method(ChangeWonderProductionModifier);

	push	0
	push	OFFSET ?lChangeWonderProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeWonderProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@CBAFPBHG@ChangeWonderProductionModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 294  : 
; 295  : 	Method(GetLocalResourceWonderProductionMod);

	push	0
	push	OFFSET ?lGetLocalResourceWonderProductionMod@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetLocalResourceWonderProductionMod
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@JOONDJO@GetLocalResourceWonderProduction@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 296  : 
; 297  : 	Method(ChangeHealRate);

	push	0
	push	OFFSET ?lChangeHealRate@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeHealRate
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@DFIEFIFC@ChangeHealRate?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 298  : 
; 299  : 	Method(IsNoOccupiedUnhappiness);

	push	0
	push	OFFSET ?lIsNoOccupiedUnhappiness@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsNoOccupiedUnhappiness
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@HOIIKDFF@IsNoOccupiedUnhappiness?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 300  : 
; 301  : 	Method(GetFood);

	push	0
	push	OFFSET ?lGetFood@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFood
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07GFEKPPF@GetFood?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 302  : 	Method(GetFoodTimes100);

	push	0
	push	OFFSET ?lGetFoodTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFoodTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@EBLNMIHG@GetFoodTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 303  : 	Method(SetFood);

	push	0
	push	OFFSET ?lSetFood@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetFood
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07POKFJACE@SetFood?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 304  : 	Method(ChangeFood);

	push	0
	push	OFFSET ?lChangeFood@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeFood
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@HHFPNGJH@ChangeFood?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 305  : 	Method(GetFoodKept);

	push	0
	push	OFFSET ?lGetFoodKept@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFoodKept
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@GIFBHLGG@GetFoodKept?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 306  : 	Method(GetMaxFoodKeptPercent);

	push	0
	push	OFFSET ?lGetMaxFoodKeptPercent@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetMaxFoodKeptPercent
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@DCGGEPDG@GetMaxFoodKeptPercent?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 307  : 	Method(GetOverflowProduction);

	push	0
	push	OFFSET ?lGetOverflowProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetOverflowProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@KBBHEFFM@GetOverflowProduction?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 308  : 	Method(SetOverflowProduction);

	push	0
	push	OFFSET ?lSetOverflowProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetOverflowProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@FEEBJMBN@SetOverflowProduction?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 309  : 	Method(GetFeatureProduction);

	push	0
	push	OFFSET ?lGetFeatureProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFeatureProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@FDDHIDF@GetFeatureProduction?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 310  : 	Method(SetFeatureProduction);

	push	0
	push	OFFSET ?lSetFeatureProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetFeatureProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@FMCOGOGC@SetFeatureProduction?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 311  : 	Method(GetMilitaryProductionModifier);

	push	0
	push	OFFSET ?lGetMilitaryProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetMilitaryProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@FAMIPBGF@GetMilitaryProductionModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 312  : 	Method(GetSpaceProductionModifier);

	push	0
	push	OFFSET ?lGetSpaceProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpaceProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@EMAHKCFF@GetSpaceProductionModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 313  : 	Method(GetBuildingDefense);

	push	0
	push	OFFSET ?lGetBuildingDefense@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingDefense
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@IFIIOABK@GetBuildingDefense?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 314  : 	Method(GetFreeExperience);

	push	0
	push	OFFSET ?lGetFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFreeExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@KJGDLEFF@GetFreeExperience?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 315  : 	Method(GetNukeModifier);

	push	0
	push	OFFSET ?lGetNukeModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNukeModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@IIFNIAFM@GetNukeModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 316  : 	//Method(GetFreeSpecialist);
; 317  : 
; 318  : 	Method(IsResistance);

	push	0
	push	OFFSET ?lIsResistance@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsResistance
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@OIFCCPFM@IsResistance?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 319  : 	Method(GetResistanceTurns);

	push	0
	push	OFFSET ?lGetResistanceTurns@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetResistanceTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@GGFEDPO@GetResistanceTurns?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 320  : 	Method(ChangeResistanceTurns);

	push	0
	push	OFFSET ?lChangeResistanceTurns@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeResistanceTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@OGCOMNIG@ChangeResistanceTurns?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 321  : 
; 322  : 	Method(IsRazing);

	push	0
	push	OFFSET ?lIsRazing@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsRazing
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08KDEDLHLC@IsRazing?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 323  : 	Method(GetRazingTurns);

	push	0
	push	OFFSET ?lGetRazingTurns@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetRazingTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@PBGEJBFI@GetRazingTurns?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 324  : 	Method(ChangeRazingTurns);

	push	0
	push	OFFSET ?lChangeRazingTurns@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeRazingTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@GFDDGGHF@ChangeRazingTurns?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 325  : 
; 326  : 	Method(IsOccupied);

	push	0
	push	OFFSET ?lIsOccupied@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsOccupied
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@GKIMAJEI@IsOccupied?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 327  : 	Method(SetOccupied);

	push	0
	push	OFFSET ?lSetOccupied@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetOccupied
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@FPGBPAFO@SetOccupied?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 328  : 
; 329  : 	Method(IsPuppet);

	push	0
	push	OFFSET ?lIsPuppet@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsPuppet
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08KGIAEINB@IsPuppet?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 330  : 	Method(SetPuppet);

	push	0
	push	OFFSET ?lSetPuppet@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetPuppet
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09JPCAHBOM@SetPuppet?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 331  : 
; 332  : 	Method(GetHappinessFromBuildings);

	push	0
	push	OFFSET ?lGetHappinessFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetHappinessFromBuildings
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@NJJIHGAG@GetHappinessFromBuildings?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 333  : 	Method(GetHappiness);

	push	0
	push	OFFSET ?lGetHappiness@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetHappiness
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@BPJGOLFM@GetHappiness?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 334  : 	Method(GetLocalHappiness);

	push	0
	push	OFFSET ?lGetLocalHappiness@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetLocalHappiness
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@JBPFIKFP@GetLocalHappiness?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 335  : 
; 336  : 	Method(IsNeverLost);

	push	0
	push	OFFSET ?lIsNeverLost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsNeverLost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@MOFOBMIC@IsNeverLost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 337  : 	Method(SetNeverLost);

	push	0
	push	OFFSET ?lSetNeverLost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetNeverLost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@DKLPEECK@SetNeverLost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 338  : 	Method(IsDrafted);

	push	0
	push	OFFSET ?lIsDrafted@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsDrafted
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09BPNOIHFH@IsDrafted?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 339  : 	Method(SetDrafted);

	push	0
	push	OFFSET ?lSetDrafted@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetDrafted
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@EHIPGLHP@SetDrafted?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 340  : 
; 341  : 	Method(IsBlockaded);

	push	0
	push	OFFSET ?lIsBlockaded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsBlockaded
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@OAAFKHBJ@IsBlockaded?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 342  : 
; 343  : 	Method(GetWeLoveTheKingDayCounter);

	push	0
	push	OFFSET ?lGetWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetWeLoveTheKingDayCounter
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@JCMJOHHG@GetWeLoveTheKingDayCounter?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 344  : 	Method(SetWeLoveTheKingDayCounter);

	push	0
	push	OFFSET ?lSetWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetWeLoveTheKingDayCounter
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@KNPMCHGG@SetWeLoveTheKingDayCounter?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 345  : 	Method(ChangeWeLoveTheKingDayCounter);

	push	0
	push	OFFSET ?lChangeWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeWeLoveTheKingDayCounter
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@HIBOMBIM@ChangeWeLoveTheKingDayCounter?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 346  : 
; 347  : 	Method(GetNumThingsProduced);

	push	0
	push	OFFSET ?lGetNumThingsProduced@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumThingsProduced
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@HABAGOM@GetNumThingsProduced?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 348  : 
; 349  : 	Method(IsProductionAutomated);

	push	0
	push	OFFSET ?lIsProductionAutomated@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionAutomated
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@FJMABPLB@IsProductionAutomated?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 350  : 	Method(SetProductionAutomated);

	push	0
	push	OFFSET ?lSetProductionAutomated@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetProductionAutomated
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@PFIOINMP@SetProductionAutomated?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 351  : 	Method(SetCitySizeBoost);

	push	0
	push	OFFSET ?lSetCitySizeBoost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetCitySizeBoost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@JHJGLAIL@SetCitySizeBoost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 352  : 	Method(GetOwner);

	push	0
	push	OFFSET ?lGetOwner@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetOwner
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08BODJMJJB@GetOwner?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 353  : 	Method(GetTeam);

	push	0
	push	OFFSET ?lGetTeam@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07KIJFBNDA@GetTeam?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 354  : 	Method(GetPreviousOwner);

	push	0
	push	OFFSET ?lGetPreviousOwner@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetPreviousOwner
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@HFDBFLDN@GetPreviousOwner?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 355  : 	Method(GetOriginalOwner);

	push	0
	push	OFFSET ?lGetOriginalOwner@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetOriginalOwner
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@FBHJECJI@GetOriginalOwner?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 356  : 	Method(GetSeaPlotYield);

	push	0
	push	OFFSET ?lGetSeaPlotYield@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSeaPlotYield
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@DGPKBBEO@GetSeaPlotYield?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 357  : 	Method(GetRiverPlotYield);

	push	0
	push	OFFSET ?lGetRiverPlotYield@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetRiverPlotYield
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@KGMJBNBB@GetRiverPlotYield?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 358  : 	Method(GetLakePlotYield);

	push	0
	push	OFFSET ?lGetLakePlotYield@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetLakePlotYield
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@KFDOAKNK@GetLakePlotYield?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 359  : 
; 360  : 	Method(GetBaseYieldRate);

	push	0
	push	OFFSET ?lGetBaseYieldRate@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRate
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@PNJLKNIG@GetBaseYieldRate?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 361  : 
; 362  : 	Method(GetBaseYieldRateFromGreatWorks);

	push	0
	push	OFFSET ?lGetBaseYieldRateFromGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromGreatWorks
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@JIPPGLFE@GetBaseYieldRateFromGreatWorks?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 363  : 
; 364  : 	Method(GetBaseYieldRateFromTerrain);

	push	0
	push	OFFSET ?lGetBaseYieldRateFromTerrain@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromTerrain
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@OJHEMEBC@GetBaseYieldRateFromTerrain?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 365  : 	Method(ChangeBaseYieldRateFromTerrain);

	push	0
	push	OFFSET ?lChangeBaseYieldRateFromTerrain@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseYieldRateFromTerrain
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@LEPGAIDG@ChangeBaseYieldRateFromTerrain?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 366  : 
; 367  : 	Method(GetBaseYieldRateFromBuildings);

	push	0
	push	OFFSET ?lGetBaseYieldRateFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromBuildings
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@GNPKIABN@GetBaseYieldRateFromBuildings?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 368  : 	Method(ChangeBaseYieldRateFromBuildings);

	push	0
	push	OFFSET ?lChangeBaseYieldRateFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseYieldRateFromBuildings
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CB@OMALCKC@ChangeBaseYieldRateFromBuildings@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 369  : 
; 370  : 	Method(GetBaseYieldRateFromSpecialists);

	push	0
	push	OFFSET ?lGetBaseYieldRateFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromSpecialists
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@DMEDAOCN@GetBaseYieldRateFromSpecialists?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 371  : 	Method(ChangeBaseYieldRateFromSpecialists);

	push	0
	push	OFFSET ?lChangeBaseYieldRateFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseYieldRateFromSpecialists
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@JHMJIOOA@ChangeBaseYieldRateFromSpecialis@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 372  : 
; 373  : 	Method(GetBaseYieldRateFromMisc);

	push	0
	push	OFFSET ?lGetBaseYieldRateFromMisc@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromMisc
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@GOEKGL@GetBaseYieldRateFromMisc?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 374  : 	Method(ChangeBaseYieldRateFromMisc);

	push	0
	push	OFFSET ?lChangeBaseYieldRateFromMisc@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseYieldRateFromMisc
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@MDOMEKI@ChangeBaseYieldRateFromMisc?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 375  : 
; 376  : 	Method(GetBaseYieldRateFromReligion);

	push	0
	push	OFFSET ?lGetBaseYieldRateFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@KLEGLAHD@GetBaseYieldRateFromReligion?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 377  : 	Method(ChangeBaseYieldRateFromReligion);

	push	0
	push	OFFSET ?lChangeBaseYieldRateFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseYieldRateFromReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@JHBINGGO@ChangeBaseYieldRateFromReligion?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 378  : 
; 379  : 	Method(GetYieldPerPopTimes100);

	push	0
	push	OFFSET ?lGetYieldPerPopTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetYieldPerPopTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@FHGKGLBM@GetYieldPerPopTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 380  : 
; 381  : 	Method(GetBaseYieldRateModifier);

	push	0
	push	OFFSET ?lGetBaseYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@BHAAEGH@GetBaseYieldRateModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 382  : 	Method(GetYieldRate);

	push	0
	push	OFFSET ?lGetYieldRate@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetYieldRate
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@LGPNBIDL@GetYieldRate?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 383  : 	Method(GetYieldRateTimes100);

	push	0
	push	OFFSET ?lGetYieldRateTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetYieldRateTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@OFJHKEGP@GetYieldRateTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 384  : 	Method(GetYieldRateModifier);

	push	0
	push	OFFSET ?lGetYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetYieldRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@MPEACCAJ@GetYieldRateModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 385  : 
; 386  : 	Method(GetExtraSpecialistYield);

	push	0
	push	OFFSET ?lGetExtraSpecialistYield@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetExtraSpecialistYield
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@GIDAMOKL@GetExtraSpecialistYield?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 387  : 	Method(GetExtraSpecialistYieldOfType);

	push	0
	push	OFFSET ?lGetExtraSpecialistYieldOfType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetExtraSpecialistYieldOfType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@GICAENNG@GetExtraSpecialistYieldOfType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 388  : 
; 389  : 	Method(GetDomainFreeExperience);

	push	0
	push	OFFSET ?lGetDomainFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetDomainFreeExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@GMGIGBHD@GetDomainFreeExperience?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 390  : 	Method(GetDomainProductionModifier);

	push	0
	push	OFFSET ?lGetDomainProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetDomainProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@CIOKPJJB@GetDomainProductionModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 391  : 
; 392  : 	Method(IsEverOwned);

	push	0
	push	OFFSET ?lIsEverOwned@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsEverOwned
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@HHHODKFL@IsEverOwned?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 393  : 
; 394  : 	Method(IsRevealed);

	push	0
	push	OFFSET ?lIsRevealed@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsRevealed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@KNACFKBL@IsRevealed?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 395  : 	Method(SetRevealed);

	push	0
	push	OFFSET ?lSetRevealed@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetRevealed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@JIOPKDAN@SetRevealed?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 396  : 	Method(GetNameKey);

	push	0
	push	OFFSET ?lGetNameKey@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNameKey
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@PJBAHION@GetNameKey?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 397  : 	Method(GetName);

	push	0
	push	OFFSET ?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetName
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07MMGEHGCI@GetName?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 398  : 	Method(SetName);

	push	0
	push	OFFSET ?lSetName@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetName
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07DEJFEJPJ@SetName?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 399  : 	Method(IsHasResourceLocal);

	push	0
	push	OFFSET ?lIsHasResourceLocal@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsHasResourceLocal
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@GIKEEJCO@IsHasResourceLocal?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 400  : 	Method(GetBuildingProduction);

	push	0
	push	OFFSET ?lGetBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@NCKMEDOA@GetBuildingProduction?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 401  : 	Method(SetBuildingProduction);

	push	0
	push	OFFSET ?lSetBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetBuildingProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@CHPKJKKB@SetBuildingProduction?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 402  : 	Method(ChangeBuildingProduction);

	push	0
	push	OFFSET ?lChangeBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBuildingProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@MMEAFHDF@ChangeBuildingProduction?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 403  : 	Method(GetBuildingProductionTime);

	push	0
	push	OFFSET ?lGetBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingProductionTime
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@BNPECEKP@GetBuildingProductionTime?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 404  : 	Method(SetBuildingProductionTime);

	push	0
	push	OFFSET ?lSetBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetBuildingProductionTime
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@JNDCOJAJ@SetBuildingProductionTime?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 405  : 	Method(ChangeBuildingProductionTime);

	push	0
	push	OFFSET ?lChangeBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBuildingProductionTime
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@BPJFOHCL@ChangeBuildingProductionTime?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 406  : 	Method(GetBuildingOriginalOwner);

	push	0
	push	OFFSET ?lGetBuildingOriginalOwner@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingOriginalOwner
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@KDCBJMJP@GetBuildingOriginalOwner?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 407  : 	Method(GetBuildingOriginalTime);

	push	0
	push	OFFSET ?lGetBuildingOriginalTime@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingOriginalTime
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@IGCHMDBE@GetBuildingOriginalTime?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 408  : 	Method(GetUnitProduction);

	push	0
	push	OFFSET ?lGetUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@IEOJDKPI@GetUnitProduction?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 409  : 	Method(SetUnitProduction);

	push	0
	push	OFFSET ?lSetUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetUnitProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@KBOCLBOG@SetUnitProduction?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 410  : 	Method(ChangeUnitProduction);

	push	0
	push	OFFSET ?lChangeUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeUnitProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@BKIOFMPC@ChangeUnitProduction?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 411  : 
; 412  : 	Method(IsCanAddSpecialistToBuilding);

	push	0
	push	OFFSET ?lIsCanAddSpecialistToBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsCanAddSpecialistToBuilding
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@EOHIHCLK@IsCanAddSpecialistToBuilding?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 413  : 	Method(GetSpecialistUpgradeThreshold);

	push	0
	push	OFFSET ?lGetSpecialistUpgradeThreshold@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistUpgradeThreshold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@KFIIIIKB@GetSpecialistUpgradeThreshold?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 414  : 	Method(GetNumSpecialistsAllowedByBuilding);

	push	0
	push	OFFSET ?lGetNumSpecialistsAllowedByBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumSpecialistsAllowedByBuilding
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@HKGINKIM@GetNumSpecialistsAllowedByBuildi@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 415  : 	Method(GetSpecialistCount);

	push	0
	push	OFFSET ?lGetSpecialistCount@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@IINBNMBF@GetSpecialistCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 416  : 	Method(GetSpecialistGreatPersonProgress);

	push	0
	push	OFFSET ?lGetSpecialistGreatPersonProgress@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistGreatPersonProgress
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CB@HDCLCODD@GetSpecialistGreatPersonProgress@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 417  : 	Method(GetSpecialistGreatPersonProgressTimes100);

	push	0
	push	OFFSET ?lGetSpecialistGreatPersonProgressTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistGreatPersonProgressTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CJ@BIFDLHCL@GetSpecialistGreatPersonProgress@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 418  : 	Method(ChangeSpecialistGreatPersonProgressTimes100);

	push	0
	push	OFFSET ?lChangeSpecialistGreatPersonProgressTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeSpecialistGreatPersonProgressTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CM@FNFNICHP@ChangeSpecialistGreatPersonProgr@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 419  : 	Method(GetNumSpecialistsInBuilding);

	push	0
	push	OFFSET ?lGetNumSpecialistsInBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumSpecialistsInBuilding
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@PGFEFAIL@GetNumSpecialistsInBuilding?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 420  : 	Method(DoReallocateCitizens);

	push	0
	push	OFFSET ?lDoReallocateCitizens@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lDoReallocateCitizens
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@KEIPLLG@DoReallocateCitizens?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 421  : 	Method(DoVerifyWorkingPlots);

	push	0
	push	OFFSET ?lDoVerifyWorkingPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lDoVerifyWorkingPlots
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@FLFDINC@DoVerifyWorkingPlots?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 422  : 	Method(IsNoAutoAssignSpecialists);

	push	0
	push	OFFSET ?lIsNoAutoAssignSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsNoAutoAssignSpecialists
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@NJJDCLIJ@IsNoAutoAssignSpecialists?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 423  : 
; 424  : 	Method(GetFocusType);

	push	0
	push	OFFSET ?lGetFocusType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFocusType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@CEFMHLGB@GetFocusType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 425  : 	Method(SetFocusType);

	push	0
	push	OFFSET ?lSetFocusType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetFocusType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@FAOCLHCN@SetFocusType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 426  : 
; 427  : 	Method(IsForcedAvoidGrowth);

	push	0
	push	OFFSET ?lIsForcedAvoidGrowth@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsForcedAvoidGrowth
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@MHBNFFJG@IsForcedAvoidGrowth?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 428  : 
; 429  : 	Method(GetUnitCombatFreeExperience);

	push	0
	push	OFFSET ?lGetUnitCombatFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitCombatFreeExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@JLBDEMAE@GetUnitCombatFreeExperience?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 430  : 	Method(GetFreePromotionCount);

	push	0
	push	OFFSET ?lGetFreePromotionCount@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFreePromotionCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@IMOAGJCF@GetFreePromotionCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 431  : 	Method(IsFreePromotion);

	push	0
	push	OFFSET ?lIsFreePromotion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsFreePromotion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@IKABNDKF@IsFreePromotion?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 432  : 	Method(GetSpecialistFreeExperience);

	push	0
	push	OFFSET ?lGetSpecialistFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistFreeExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@IHAGDLPN@GetSpecialistFreeExperience?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 433  : 
; 434  : 	Method(UpdateStrengthValue);

	push	0
	push	OFFSET ?lUpdateStrengthValue@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lUpdateStrengthValue
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@POOBMJHD@UpdateStrengthValue?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 435  : 	Method(GetStrengthValue);

	push	0
	push	OFFSET ?lGetStrengthValue@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetStrengthValue
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@GOIDKIFF@GetStrengthValue?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 436  : 
; 437  : 	Method(GetDamage);

	push	0
	push	OFFSET ?lGetDamage@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetDamage
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09JKDLDMJJ@GetDamage?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 438  : 	Method(SetDamage);

	push	0
	push	OFFSET ?lSetDamage@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetDamage
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09LEHOBNAL@SetDamage?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 439  : 	Method(ChangeDamage);

	push	0
	push	OFFSET ?lChangeDamage@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeDamage
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@OECJINCP@ChangeDamage?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 440  : 	Method(GetMaxHitPoints);

	push	0
	push	OFFSET ?lGetMaxHitPoints@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetMaxHitPoints
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@NIPPNLFL@GetMaxHitPoints?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 441  : 	Method(CanRangeStrike);

	push	0
	push	OFFSET ?lCanRangeStrike@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanRangeStrike
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@CDOKKCEP@CanRangeStrike?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 442  : 	Method(CanRangeStrikeNow);

	push	0
	push	OFFSET ?lCanRangeStrikeNow@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanRangeStrikeNow
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@PPBGFDPB@CanRangeStrikeNow?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 443  : 	Method(CanRangeStrikeAt);

	push	0
	push	OFFSET ?lCanRangeStrikeAt@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanRangeStrikeAt
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@HFDCOJOB@CanRangeStrikeAt?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 444  : 	Method(HasPerformedRangedStrikeThisTurn);

	push	0
	push	OFFSET ?lHasPerformedRangedStrikeThisTurn@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lHasPerformedRangedStrikeThisTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CB@EMMFCPOC@HasPerformedRangedStrikeThisTurn@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 445  : 	Method(RangeCombatUnitDefense);

	push	0
	push	OFFSET ?lRangeCombatUnitDefense@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lRangeCombatUnitDefense
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@GENLCPG@RangeCombatUnitDefense?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 446  : 	Method(RangeCombatDamage);

	push	0
	push	OFFSET ?lRangeCombatDamage@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lRangeCombatDamage
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@IGMINMDO@RangeCombatDamage?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 447  : 	Method(GetAirStrikeDefenseDamage);

	push	0
	push	OFFSET ?lGetAirStrikeDefenseDamage@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetAirStrikeDefenseDamage
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@LJEHDMDL@GetAirStrikeDefenseDamage?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 448  : 
; 449  : 	Method(IsWorkingPlot);

	push	0
	push	OFFSET ?lIsWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsWorkingPlot
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@CBDHABDH@IsWorkingPlot?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 450  : 	Method(AlterWorkingPlot);

	push	0
	push	OFFSET ?lAlterWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lAlterWorkingPlot
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@MLMHPGAK@AlterWorkingPlot?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 451  : 	Method(IsForcedWorkingPlot);

	push	0
	push	OFFSET ?lIsForcedWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsForcedWorkingPlot
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@MNHDNBKJ@IsForcedWorkingPlot?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 452  : 	Method(GetNumRealBuilding);

	push	0
	push	OFFSET ?lGetNumRealBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumRealBuilding
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@ICEPLOPE@GetNumRealBuilding?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 453  : 	Method(SetNumRealBuilding);

	push	0
	push	OFFSET ?lSetNumRealBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetNumRealBuilding
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@HIGFIIBM@SetNumRealBuilding?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 454  : 	Method(GetNumFreeBuilding);

	push	0
	push	OFFSET ?lGetNumFreeBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumFreeBuilding
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@MCLNCOID@GetNumFreeBuilding?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 455  : 	Method(IsBuildingSellable);

	push	0
	push	OFFSET ?lIsBuildingSellable@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsBuildingSellable
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@ONJFGLJC@IsBuildingSellable?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 456  : 	Method(GetSellBuildingRefund);

	push	0
	push	OFFSET ?lGetSellBuildingRefund@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSellBuildingRefund
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@NPBALGAL@GetSellBuildingRefund?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 457  : 	Method(GetTotalBaseBuildingMaintenance);

	push	0
	push	OFFSET ?lGetTotalBaseBuildingMaintenance@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetTotalBaseBuildingMaintenance
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@FAHLOAIH@GetTotalBaseBuildingMaintenance?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 458  : 	Method(GetBuildingGreatWork);

	push	0
	push	OFFSET ?lGetBuildingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingGreatWork
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@GBLMGMGP@GetBuildingGreatWork?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 459  : 	Method(SetBuildingGreatWork);

	push	0
	push	OFFSET ?lSetBuildingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetBuildingGreatWork
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@DIKBHKDI@SetBuildingGreatWork?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 460  : 	Method(IsHoldingGreatWork);

	push	0
	push	OFFSET ?lIsHoldingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsHoldingGreatWork
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@IFLPGFLJ@IsHoldingGreatWork?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 461  : 	Method(GetNumGreatWorksInBuilding);

	push	0
	push	OFFSET ?lGetNumGreatWorksInBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumGreatWorksInBuilding
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@MHAHLBOF@GetNumGreatWorksInBuilding?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 462  : 
; 463  : 	Method(ClearOrderQueue);

	push	0
	push	OFFSET ?lClearOrderQueue@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lClearOrderQueue
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@OFIEGGCN@ClearOrderQueue?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 464  : 	Method(PushOrder);

	push	0
	push	OFFSET ?lPushOrder@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lPushOrder
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09BPJOHKFH@PushOrder?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 465  : 	Method(PopOrder);

	push	0
	push	OFFSET ?lPopOrder@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lPopOrder
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08BEEKLBOG@PopOrder?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 466  : 	Method(GetOrderQueueLength);

	push	0
	push	OFFSET ?lGetOrderQueueLength@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetOrderQueueLength
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@PCCBFHJN@GetOrderQueueLength?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 467  : 
; 468  : 	Method(GetBuildingYieldChange);

	push	0
	push	OFFSET ?lGetBuildingYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingYieldChange
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@IIHDEHPE@GetBuildingYieldChange?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 469  : 	Method(SetBuildingYieldChange);

	push	0
	push	OFFSET ?lSetBuildingYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetBuildingYieldChange
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@IJFNGACL@SetBuildingYieldChange?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 470  : 
; 471  : 	Method(GetBuildingEspionageModifier);

	push	0
	push	OFFSET ?lGetBuildingEspionageModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingEspionageModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@KJGALFCA@GetBuildingEspionageModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 472  : 	Method(GetBuildingGlobalEspionageModifier);

	push	0
	push	OFFSET ?lGetBuildingGlobalEspionageModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingGlobalEspionageModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@BMMNEKOO@GetBuildingGlobalEspionageModifi@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 473  : 
; 474  : 	Method(GetNumCityPlots);

	push	0
	push	OFFSET ?lGetNumCityPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumCityPlots
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@JCDPNDEK@GetNumCityPlots?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 475  : 	Method(CanPlaceUnitHere);

	push	0
	push	OFFSET ?lCanPlaceUnitHere@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanPlaceUnitHere
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@KGFIABNE@CanPlaceUnitHere?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 476  : 
; 477  : 	Method(GetSpecialistYield);

	push	0
	push	OFFSET ?lGetSpecialistYield@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistYield
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@LMIDJJOI@GetSpecialistYield?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 478  : 	Method(GetCultureFromSpecialist);

	push	0
	push	OFFSET ?lGetCultureFromSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCultureFromSpecialist
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@EJFOMIDN@GetCultureFromSpecialist?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 479  : 
; 480  : 	Method(GetNumForcedWorkingPlots);

	push	0
	push	OFFSET ?lGetNumForcedWorkingPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumForcedWorkingPlots
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@FDKOKGMB@GetNumForcedWorkingPlots?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 481  : 
; 482  : 	Method(GetReligionCityRangeStrikeModifier);

	push	0
	push	OFFSET ?lGetReligionCityRangeStrikeModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetReligionCityRangeStrikeModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@COEJMCEC@GetReligionCityRangeStrikeModifi@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 483  : }

	pop	ebp
	ret	0
?PushMethods@CvLuaCity@@SAXPAUlua_State@@H@Z ENDP	; CvLuaCity::PushMethods
_TEXT	ENDS
PUBLIC	?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@KAXPAUlua_State@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::DefaultHandleMissingInstance
PUBLIC	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
; Function compile flags: /Odtp
;	COMDAT ?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z PROC ; CvLuaCity::HandleMissingInstance, COMDAT

; 486  : {

	push	ebp
	mov	ebp, esp

; 487  : 	DefaultHandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@KAXPAUlua_State@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::DefaultHandleMissingInstance
	add	esp, 4

; 488  : }

	pop	ebp
	ret	0
?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ENDP ; CvLuaCity::HandleMissingInstance
_TEXT	ENDS
PUBLIC	??_C@_04MNKFJAMB@City?$AA@			; `string'
PUBLIC	?GetTypeName@CvLuaCity@@SAPBDXZ			; CvLuaCity::GetTypeName
;	COMDAT ??_C@_04MNKFJAMB@City?$AA@
CONST	SEGMENT
??_C@_04MNKFJAMB@City?$AA@ DB 'City', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?GetTypeName@CvLuaCity@@SAPBDXZ
_TEXT	SEGMENT
?GetTypeName@CvLuaCity@@SAPBDXZ PROC			; CvLuaCity::GetTypeName, COMDAT

; 491  : {

	push	ebp
	mov	ebp, esp

; 492  : 	return "City";

	mov	eax, OFFSET ??_C@_04MNKFJAMB@City?$AA@

; 493  : }

	pop	ebp
	ret	0
?GetTypeName@CvLuaCity@@SAPBDXZ ENDP			; CvLuaCity::GetTypeName
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
EXTRN	_lua_pushboolean:PROC
; Function compile flags: /Odtp
;	COMDAT ?lIsNone@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bDoesNotExist$ = -1					; size = 1
_L$ = 8							; size = 4
?lIsNone@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lIsNone, COMDAT

; 501  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 502  : #ifdef AUI_WARNING_FIXES
; 503  : 	const bool bDoesNotExist = (GetInstance(L, 1, false) == NULL);
; 504  : #else
; 505  : 	const bool bDoesNotExist = (GetInstance(L, false) == NULL);

	push	1
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	test	eax, eax
	sete	cl
	mov	BYTE PTR _bDoesNotExist$[ebp], cl

; 506  : #endif
; 507  : 	lua_pushboolean(L, bDoesNotExist);

	movzx	edx, BYTE PTR _bDoesNotExist$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 508  : 
; 509  : 	return 1;

	mov	eax, 1

; 510  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsNone@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lIsNone
_TEXT	ENDS
EXTRN	?kill@CvCity@@QAEXXZ:PROC			; CvCity::kill
; Function compile flags: /Odtp
;	COMDAT ?lKill@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lKill@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lKill, COMDAT

; 514  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 515  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 516  : 	pkCity->kill();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?kill@CvCity@@QAEXXZ			; CvCity::kill

; 517  : 
; 518  : 	return 1;

	mov	eax, 1

; 519  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lKill@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lKill
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum UnitTypes>
EXTRN	?createGreatGeneral@CvCity@@QAEXW4UnitTypes@@@Z:PROC ; CvCity::createGreatGeneral
; Function compile flags: /Odtp
;	COMDAT ?lCreateGreatGeneral@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCreateGreatGeneral@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lCreateGreatGeneral, COMDAT

; 523  : {

	push	ebp
	mov	ebp, esp

; 524  : 	return BasicLuaMethod(L, &CvCity::createGreatGeneral);

	push	OFFSET ?createGreatGeneral@CvCity@@QAEXW4UnitTypes@@@Z ; CvCity::createGreatGeneral
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum UnitTypes>
	add	esp, 8

; 525  : }

	pop	ebp
	ret	0
?lCreateGreatGeneral@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lCreateGreatGeneral
_TEXT	ENDS
EXTRN	?createGreatAdmiral@CvCity@@QAEXW4UnitTypes@@@Z:PROC ; CvCity::createGreatAdmiral
; Function compile flags: /Odtp
;	COMDAT ?lCreateGreatAdmiral@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCreateGreatAdmiral@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lCreateGreatAdmiral, COMDAT

; 529  : {

	push	ebp
	mov	ebp, esp

; 530  : 	return BasicLuaMethod(L, &CvCity::createGreatAdmiral);

	push	OFFSET ?createGreatAdmiral@CvCity@@QAEXW4UnitTypes@@@Z ; CvCity::createGreatAdmiral
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum UnitTypes>
	add	esp, 8

; 531  : }

	pop	ebp
	ret	0
?lCreateGreatAdmiral@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lCreateGreatAdmiral
_TEXT	ENDS
EXTRN	?doTask@CvCity@@QAE?AW4CityTaskResult@@W4TaskTypes@@HH_N111@Z:PROC ; CvCity::doTask
EXTRN	_luaL_optinteger:PROC
EXTRN	_lua_tointeger:PROC
; Function compile flags: /Odtp
;	COMDAT ?lDoTask@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bOption$ = -17						; size = 1
_eTask$ = -16						; size = 4
_iData1$ = -12						; size = 4
_pkCity$ = -8						; size = 4
_iData2$ = -4						; size = 4
_L$ = 8							; size = 4
?lDoTask@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lDoTask, COMDAT

; 535  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 536  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 537  : 	const TaskTypes eTask = (TaskTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eTask$[ebp], eax

; 538  : 	const int iData1 = luaL_optint(L, 3, -1);

	push	-1
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iData1$[ebp], eax

; 539  : 	const int iData2 = luaL_optint(L, 4, -1);

	push	-1
	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iData2$[ebp], eax

; 540  : 	const bool bOption = luaL_optint(L, 5, 0);

	push	0
	push	5
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bOption$[ebp], dl

; 541  : 	pkCity->doTask(eTask, iData1, iData2, bOption);

	push	0
	push	0
	push	0
	movzx	eax, BYTE PTR _bOption$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iData2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iData1$[ebp]
	push	edx
	mov	eax, DWORD PTR _eTask$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?doTask@CvCity@@QAE?AW4CityTaskResult@@W4TaskTypes@@HH_N111@Z ; CvCity::doTask

; 542  : 
; 543  : 	return 1;

	mov	eax, 1

; 544  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lDoTask@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lDoTask
_TEXT	ENDS
EXTRN	?chooseProduction@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@_N3@Z:PROC ; CvCity::chooseProduction
; Function compile flags: /Odtp
;	COMDAT ?lChooseProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lChooseProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lChooseProduction, COMDAT

; 548  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 549  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 550  : 	pkCity->chooseProduction();

	push	0
	push	0
	push	-1
	push	-1
	push	-1
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?chooseProduction@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@_N3@Z ; CvCity::chooseProduction

; 551  : 
; 552  : 	return 1;

	mov	eax, 1

; 553  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChooseProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lChooseProduction
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
EXTRN	_lua_pushinteger:PROC
EXTRN	?GetCityIndexFromPlot@CvCityCitizens@@QBEHPBVCvPlot@@@Z:PROC ; CvCityCitizens::GetCityIndexFromPlot
EXTRN	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ:PROC ; CvCity::GetCityCitizens
; Function compile flags: /Odtp
;	COMDAT ?lGetCityPlotIndex@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -12						; size = 4
_pkCity$ = -8						; size = 4
_pkPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCityPlotIndex@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetCityPlotIndex, COMDAT

; 557  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 558  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 559  : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlot$[ebp], eax

; 560  : 	const int iResult = pkCity->GetCityCitizens()->GetCityIndexFromPlot(pkPlot);

	mov	edx, DWORD PTR _pkPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?GetCityIndexFromPlot@CvCityCitizens@@QBEHPBVCvPlot@@@Z ; CvCityCitizens::GetCityIndexFromPlot
	mov	DWORD PTR _iResult$[ebp], eax

; 561  : 
; 562  : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 563  : 	return 1;

	mov	eax, 1

; 564  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCityPlotIndex@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetCityPlotIndex
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
EXTRN	?GetCityPlotFromIndex@CvCityCitizens@@QBEPAVCvPlot@@H@Z:PROC ; CvCityCitizens::GetCityPlotFromIndex
; Function compile flags: /Odtp
;	COMDAT ?lGetCityIndexPlot@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iIndex$ = -12						; size = 4
_pkCity$ = -8						; size = 4
_pkPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCityIndexPlot@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetCityIndexPlot, COMDAT

; 568  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 569  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 570  : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 571  : 
; 572  : 	CvPlot* pkPlot = pkCity->GetCityCitizens()->GetCityPlotFromIndex(iIndex);

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?GetCityPlotFromIndex@CvCityCitizens@@QBEPAVCvPlot@@H@Z ; CvCityCitizens::GetCityPlotFromIndex
	mov	DWORD PTR _pkPlot$[ebp], eax

; 573  : 	CvLuaPlot::Push(L, pkPlot);

	mov	eax, DWORD PTR _pkPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8

; 574  : 	return 1;

	mov	eax, 1

; 575  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCityIndexPlot@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetCityIndexPlot
_TEXT	ENDS
EXTRN	?IsCanWork@CvCityCitizens@@QBE_NPAVCvPlot@@@Z:PROC ; CvCityCitizens::IsCanWork
; Function compile flags: /Odtp
;	COMDAT ?lCanWork@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -9						; size = 1
_pkCity$ = -8						; size = 4
_pkPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lCanWork@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lCanWork, COMDAT

; 579  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 580  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 581  : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlot$[ebp], eax

; 582  : 	const bool bResult = pkCity->GetCityCitizens()->IsCanWork(pkPlot);

	mov	edx, DWORD PTR _pkPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?IsCanWork@CvCityCitizens@@QBE_NPAVCvPlot@@@Z ; CvCityCitizens::IsCanWork
	mov	BYTE PTR _bResult$[ebp], al

; 583  : 
; 584  : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 585  : 	return 1;

	mov	eax, 1

; 586  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanWork@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lCanWork
_TEXT	ENDS
EXTRN	?IsPlotBlockaded@CvCityCitizens@@QBE_NPAVCvPlot@@@Z:PROC ; CvCityCitizens::IsPlotBlockaded
; Function compile flags: /Odtp
;	COMDAT ?lIsPlotBlockaded@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -9						; size = 1
_pkCity$ = -8						; size = 4
_pkPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsPlotBlockaded@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsPlotBlockaded, COMDAT

; 590  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 591  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 592  : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlot$[ebp], eax

; 593  : 	const bool bResult = pkCity->GetCityCitizens()->IsPlotBlockaded(pkPlot);

	mov	edx, DWORD PTR _pkPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?IsPlotBlockaded@CvCityCitizens@@QBE_NPAVCvPlot@@@Z ; CvCityCitizens::IsPlotBlockaded
	mov	BYTE PTR _bResult$[ebp], al

; 594  : 
; 595  : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 596  : 	return 1;

	mov	eax, 1

; 597  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlotBlockaded@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsPlotBlockaded
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
EXTRN	?clearWorkingOverride@CvCity@@QAEXH@Z:PROC	; CvCity::clearWorkingOverride
; Function compile flags: /Odtp
;	COMDAT ?lClearWorkingOverride@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lClearWorkingOverride@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lClearWorkingOverride, COMDAT

; 601  : {

	push	ebp
	mov	ebp, esp

; 602  : 	return BasicLuaMethod(L, &CvCity::clearWorkingOverride);

	push	OFFSET ?clearWorkingOverride@CvCity@@QAEXH@Z ; CvCity::clearWorkingOverride
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 603  : }

	pop	ebp
	ret	0
?lClearWorkingOverride@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lClearWorkingOverride
_TEXT	ENDS
EXTRN	?countNumImprovedPlots@CvCity@@QBEHW4ImprovementTypes@@_N@Z:PROC ; CvCity::countNumImprovedPlots
; Function compile flags: /Odtp
;	COMDAT ?lCountNumImprovedPlots@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lCountNumImprovedPlots@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lCountNumImprovedPlots, COMDAT

; 607  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 608  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 609  : 	const int iResult = pkCity->countNumImprovedPlots();

	push	0
	push	-1
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?countNumImprovedPlots@CvCity@@QBEHW4ImprovementTypes@@_N@Z ; CvCity::countNumImprovedPlots
	mov	DWORD PTR _iResult$[ebp], eax

; 610  : 
; 611  : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 612  : 	return 1;

	mov	eax, 1

; 613  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCountNumImprovedPlots@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lCountNumImprovedPlots
_TEXT	ENDS
EXTRN	?countNumWaterPlots@CvCity@@QBEHXZ:PROC		; CvCity::countNumWaterPlots
; Function compile flags: /Odtp
;	COMDAT ?lCountNumWaterPlots@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lCountNumWaterPlots@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lCountNumWaterPlots, COMDAT

; 617  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 618  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 619  : 	const int iResult = pkCity->countNumWaterPlots();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?countNumWaterPlots@CvCity@@QBEHXZ	; CvCity::countNumWaterPlots
	mov	DWORD PTR _iResult$[ebp], eax

; 620  : 
; 621  : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 622  : 	return 1;

	mov	eax, 1

; 623  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCountNumWaterPlots@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lCountNumWaterPlots
_TEXT	ENDS
EXTRN	?countNumRiverPlots@CvCity@@QBEHXZ:PROC		; CvCity::countNumRiverPlots
; Function compile flags: /Odtp
;	COMDAT ?lCountNumRiverPlots@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lCountNumRiverPlots@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lCountNumRiverPlots, COMDAT

; 627  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 628  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 629  : 	const int iResult = pkCity->countNumRiverPlots();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?countNumRiverPlots@CvCity@@QBEHXZ	; CvCity::countNumRiverPlots
	mov	DWORD PTR _iResult$[ebp], eax

; 630  : 
; 631  : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 632  : 	return 1;

	mov	eax, 1

; 633  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCountNumRiverPlots@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lCountNumRiverPlots
_TEXT	ENDS
EXTRN	?findPopulationRank@CvCity@@QAEHXZ:PROC		; CvCity::findPopulationRank
; Function compile flags: /Odtp
;	COMDAT ?lFindPopulationRank@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lFindPopulationRank@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lFindPopulationRank, COMDAT

; 637  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 638  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 639  : 	const int iResult = pkCity->findPopulationRank();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?findPopulationRank@CvCity@@QAEHXZ	; CvCity::findPopulationRank
	mov	DWORD PTR _iResult$[ebp], eax

; 640  : 
; 641  : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 642  : 	return 1;

	mov	eax, 1

; 643  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lFindPopulationRank@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lFindPopulationRank
_TEXT	ENDS
EXTRN	?findBaseYieldRateRank@CvCity@@QAEHW4YieldTypes@@@Z:PROC ; CvCity::findBaseYieldRateRank
; Function compile flags: /Odtp
;	COMDAT ?lFindBaseYieldRateRank@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eYield$ = -12						; size = 4
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lFindBaseYieldRateRank@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lFindBaseYieldRateRank, COMDAT

; 647  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 648  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 649  : 	const YieldTypes eYield = (YieldTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eYield$[ebp], eax

; 650  : 	const int iResult = pkCity->findBaseYieldRateRank(eYield);

	mov	edx, DWORD PTR _eYield$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?findBaseYieldRateRank@CvCity@@QAEHW4YieldTypes@@@Z ; CvCity::findBaseYieldRateRank
	mov	DWORD PTR _iResult$[ebp], eax

; 651  : 
; 652  : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 653  : 	return 1;

	mov	eax, 1

; 654  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lFindBaseYieldRateRank@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lFindBaseYieldRateRank
_TEXT	ENDS
EXTRN	?findYieldRateRank@CvCity@@QAEHW4YieldTypes@@@Z:PROC ; CvCity::findYieldRateRank
; Function compile flags: /Odtp
;	COMDAT ?lFindYieldRateRank@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eYield$ = -12						; size = 4
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lFindYieldRateRank@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lFindYieldRateRank, COMDAT

; 658  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 659  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 660  : 	const YieldTypes eYield = (YieldTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eYield$[ebp], eax

; 661  : 	const int iResult = pkCity->findYieldRateRank(eYield);

	mov	edx, DWORD PTR _eYield$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?findYieldRateRank@CvCity@@QAEHW4YieldTypes@@@Z ; CvCity::findYieldRateRank
	mov	DWORD PTR _iResult$[ebp], eax

; 662  : 
; 663  : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 664  : 	return 1;

	mov	eax, 1

; 665  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lFindYieldRateRank@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lFindYieldRateRank
_TEXT	ENDS
EXTRN	?allUpgradesAvailable@CvCity@@QBE?AW4UnitTypes@@W42@H@Z:PROC ; CvCity::allUpgradesAvailable
; Function compile flags: /Odtp
;	COMDAT ?lAllUpgradesAvailable@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eUnit$ = -16						; size = 4
_iUpgradeCount$ = -12					; size = 4
_eResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lAllUpgradesAvailable@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lAllUpgradesAvailable, COMDAT

; 669  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 670  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 671  : 	const UnitTypes eUnit = (UnitTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eUnit$[ebp], eax

; 672  : 	const int iUpgradeCount = luaL_optint(L, 3, 0);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iUpgradeCount$[ebp], eax

; 673  : 
; 674  : 	const UnitTypes eResult = pkCity->allUpgradesAvailable(eUnit, iUpgradeCount);

	mov	eax, DWORD PTR _iUpgradeCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eUnit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?allUpgradesAvailable@CvCity@@QBE?AW4UnitTypes@@W42@H@Z ; CvCity::allUpgradesAvailable
	mov	DWORD PTR _eResult$[ebp], eax

; 675  : 	lua_pushinteger(L, eResult);

	mov	edx, DWORD PTR _eResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 676  : 	return 1;

	mov	eax, 1

; 677  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lAllUpgradesAvailable@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lAllUpgradesAvailable
_TEXT	ENDS
EXTRN	?isWorldWondersMaxed@CvCity@@QBE_NXZ:PROC	; CvCity::isWorldWondersMaxed
; Function compile flags: /Odtp
;	COMDAT ?lIsWorldWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -5						; size = 1
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsWorldWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsWorldWondersMaxed, COMDAT

; 681  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 682  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 683  : 	const bool bResult = pkCity->isWorldWondersMaxed();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?isWorldWondersMaxed@CvCity@@QBE_NXZ	; CvCity::isWorldWondersMaxed
	mov	BYTE PTR _bResult$[ebp], al

; 684  : 
; 685  : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 686  : 	return 1;

	mov	eax, 1

; 687  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsWorldWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsWorldWondersMaxed
_TEXT	ENDS
EXTRN	?isTeamWondersMaxed@CvCity@@QBE_NXZ:PROC	; CvCity::isTeamWondersMaxed
; Function compile flags: /Odtp
;	COMDAT ?lIsTeamWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -5						; size = 1
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsTeamWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsTeamWondersMaxed, COMDAT

; 691  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 692  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 693  : 	const bool bResult = pkCity->isTeamWondersMaxed();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?isTeamWondersMaxed@CvCity@@QBE_NXZ	; CvCity::isTeamWondersMaxed
	mov	BYTE PTR _bResult$[ebp], al

; 694  : 
; 695  : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 696  : 	return 1;

	mov	eax, 1

; 697  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsTeamWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsTeamWondersMaxed
_TEXT	ENDS
EXTRN	?isNationalWondersMaxed@CvCity@@QBE_NXZ:PROC	; CvCity::isNationalWondersMaxed
; Function compile flags: /Odtp
;	COMDAT ?lIsNationalWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -5						; size = 1
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsNationalWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsNationalWondersMaxed, COMDAT

; 701  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 702  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 703  : 	const bool bResult = pkCity->isNationalWondersMaxed();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?isNationalWondersMaxed@CvCity@@QBE_NXZ	; CvCity::isNationalWondersMaxed
	mov	BYTE PTR _bResult$[ebp], al

; 704  : 
; 705  : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 706  : 	return 1;

	mov	eax, 1

; 707  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsNationalWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsNationalWondersMaxed
_TEXT	ENDS
EXTRN	?isBuildingsMaxed@CvCity@@QBE_NXZ:PROC		; CvCity::isBuildingsMaxed
; Function compile flags: /Odtp
;	COMDAT ?lIsBuildingsMaxed@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -5						; size = 1
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsBuildingsMaxed@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsBuildingsMaxed, COMDAT

; 711  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 712  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 713  : 	const bool bResult = pkCity->isBuildingsMaxed();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?isBuildingsMaxed@CvCity@@QBE_NXZ	; CvCity::isBuildingsMaxed
	mov	BYTE PTR _bResult$[ebp], al

; 714  : 
; 715  : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 716  : 	return 1;

	mov	eax, 1

; 717  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsBuildingsMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsBuildingsMaxed
_TEXT	ENDS
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
PUBLIC	__$ArrayPad$
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	_lua_pushstring:PROC
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
EXTRN	?canTrain@CvCity@@QBE_NW4UnitTypes@@_N111PAVCvString@@@Z:PROC ; CvCity::canTrain
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T224926 = -56						; size = 4
_eUnit$ = -52						; size = 4
_toolTip$ = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
_pkCity$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanTrainTooltip, COMDAT

; 720  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 721  : 	CvString toolTip;

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 722  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 723  : 	const UnitTypes eUnit = (UnitTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eUnit$[ebp], eax

; 724  : 
; 725  : 	// City Production Modifier
; 726  : 	pkCity->canTrain(eUnit, false, false, false, false, &toolTip);

	lea	edx, DWORD PTR _toolTip$[ebp]
	push	edx
	push	0
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _eUnit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?canTrain@CvCity@@QBE_NW4UnitTypes@@_N111PAVCvString@@@Z ; CvCity::canTrain

; 727  : 
; 728  : 	lua_pushstring(L, toolTip.c_str());

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 729  : 	return 1;

	mov	DWORD PTR $T224926[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T224926[ebp]

; 730  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _toolTip$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanTrainTooltip
; Function compile flags: /Odtp
;	COMDAT ?lCanTrain@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -17						; size = 1
_iUnit$ = -16						; size = 4
_bWillPurchase$ = -10					; size = 1
_bContinue$ = -9					; size = 1
_pkCity$ = -8						; size = 4
_bIgnoreCost$ = -2					; size = 1
_bTestVisible$ = -1					; size = 1
_L$ = 8							; size = 4
?lCanTrain@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lCanTrain, COMDAT

; 734  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 735  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 736  : 	const int iUnit = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iUnit$[ebp], eax

; 737  : 	const bool bContinue = luaL_optint(L, 3, 0);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	al
	mov	BYTE PTR _bContinue$[ebp], al

; 738  : 	const bool bTestVisible = luaL_optint(L, 4, 0);

	push	0
	push	4
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bTestVisible$[ebp], dl

; 739  : 	const bool bIgnoreCost = luaL_optint(L, 5, 0);

	push	0
	push	5
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	cl
	mov	BYTE PTR _bIgnoreCost$[ebp], cl

; 740  : 	const bool bWillPurchase = luaL_optint(L, 6, 0);

	push	0
	push	6
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	al
	mov	BYTE PTR _bWillPurchase$[ebp], al

; 741  : 	const bool bResult = pkCity->canTrain((UnitTypes)iUnit, bContinue, bTestVisible, bIgnoreCost, bWillPurchase);

	push	0
	movzx	ecx, BYTE PTR _bWillPurchase$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bIgnoreCost$[ebp]
	push	edx
	movzx	eax, BYTE PTR _bTestVisible$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bContinue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iUnit$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?canTrain@CvCity@@QBE_NW4UnitTypes@@_N111PAVCvString@@@Z ; CvCity::canTrain
	mov	BYTE PTR _bResult$[ebp], al

; 742  : 
; 743  : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 744  : 	return 1;

	mov	eax, 1

; 745  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanTrain@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lCanTrain
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?canConstruct@CvCity@@QBE_NW4BuildingTypes@@_N11PAVCvString@@@Z:PROC ; CvCity::canConstruct
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T224952 = -56						; size = 4
_eBuilding$ = -52					; size = 4
_toolTip$ = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
_pkCity$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lCanConstructTooltip, COMDAT

; 748  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 749  : 	CvString toolTip;

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 750  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 751  : 	const BuildingTypes eBuilding = (BuildingTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBuilding$[ebp], eax

; 752  : 
; 753  : 	// City Production Modifier
; 754  : 	pkCity->canConstruct(eBuilding, false, false, false, &toolTip);

	lea	edx, DWORD PTR _toolTip$[ebp]
	push	edx
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _eBuilding$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?canConstruct@CvCity@@QBE_NW4BuildingTypes@@_N11PAVCvString@@@Z ; CvCity::canConstruct

; 755  : 
; 756  : 	lua_pushstring(L, toolTip.c_str());

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 757  : 	return 1;

	mov	DWORD PTR $T224952[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T224952[ebp]

; 758  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _toolTip$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lCanConstructTooltip
; Function compile flags: /Odtp
;	COMDAT ?lCanConstruct@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -17						; size = 1
_iBuilding$ = -16					; size = 4
_bContinue$ = -9					; size = 1
_pkCity$ = -8						; size = 4
_bIgnoreCost$ = -2					; size = 1
_bTestVisible$ = -1					; size = 1
_L$ = 8							; size = 4
?lCanConstruct@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanConstruct, COMDAT

; 762  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 763  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 764  : 	const int iBuilding = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iBuilding$[ebp], eax

; 765  : 	const bool bContinue = luaL_optint(L, 3, 0);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	al
	mov	BYTE PTR _bContinue$[ebp], al

; 766  : 	const bool bTestVisible = luaL_optint(L, 4, 0);

	push	0
	push	4
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bTestVisible$[ebp], dl

; 767  : 	const bool bIgnoreCost = luaL_optint(L, 5, 0);

	push	0
	push	5
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	cl
	mov	BYTE PTR _bIgnoreCost$[ebp], cl

; 768  : 	const bool bResult = pkCity->canConstruct((BuildingTypes)iBuilding, bContinue, bTestVisible, bIgnoreCost);

	push	0
	movzx	edx, BYTE PTR _bIgnoreCost$[ebp]
	push	edx
	movzx	eax, BYTE PTR _bTestVisible$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bContinue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iBuilding$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?canConstruct@CvCity@@QBE_NW4BuildingTypes@@_N11PAVCvString@@@Z ; CvCity::canConstruct
	mov	BYTE PTR _bResult$[ebp], al

; 769  : 
; 770  : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 771  : 	return 1;

	mov	eax, 1

; 772  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanConstruct@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanConstruct
_TEXT	ENDS
EXTRN	?canCreate@CvCity@@QBE_NW4ProjectTypes@@_N1@Z:PROC ; CvCity::canCreate
; Function compile flags: /Odtp
;	COMDAT ?lCanCreate@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -14						; size = 1
_bContinue$ = -13					; size = 1
_pkCity$ = -12						; size = 4
_iProject$ = -8						; size = 4
_bTestVisible$ = -1					; size = 1
_L$ = 8							; size = 4
?lCanCreate@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lCanCreate, COMDAT

; 776  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 777  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 778  : 	const int iProject = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iProject$[ebp], eax

; 779  : 	const bool bContinue = luaL_optint(L, 3, 0);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	al
	mov	BYTE PTR _bContinue$[ebp], al

; 780  : 	const bool bTestVisible = luaL_optint(L, 4, 0);

	push	0
	push	4
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bTestVisible$[ebp], dl

; 781  : 	const bool bResult = pkCity->canCreate((ProjectTypes)iProject, bContinue, bTestVisible);

	movzx	eax, BYTE PTR _bTestVisible$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bContinue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iProject$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?canCreate@CvCity@@QBE_NW4ProjectTypes@@_N1@Z ; CvCity::canCreate
	mov	BYTE PTR _bResult$[ebp], al

; 782  : 
; 783  : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 784  : 	return 1;

	mov	eax, 1

; 785  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanCreate@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lCanCreate
_TEXT	ENDS
EXTRN	?canPrepare@CvCity@@QBE_NW4SpecialistTypes@@_N@Z:PROC ; CvCity::canPrepare
; Function compile flags: /Odtp
;	COMDAT ?lCanPrepare@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -10						; size = 1
_bContinue$ = -9					; size = 1
_pkCity$ = -8						; size = 4
_iSpecialist$ = -4					; size = 4
_L$ = 8							; size = 4
?lCanPrepare@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanPrepare, COMDAT

; 789  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 790  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 791  : 	const int iSpecialist = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iSpecialist$[ebp], eax

; 792  : 	const bool bContinue = luaL_optint(L, 3, 0);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	al
	mov	BYTE PTR _bContinue$[ebp], al

; 793  : 	const bool bResult = pkCity->canPrepare((SpecialistTypes)iSpecialist, bContinue);

	movzx	ecx, BYTE PTR _bContinue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iSpecialist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?canPrepare@CvCity@@QBE_NW4SpecialistTypes@@_N@Z ; CvCity::canPrepare
	mov	BYTE PTR _bResult$[ebp], al

; 794  : 
; 795  : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 796  : 	return 1;

	mov	eax, 1

; 797  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanPrepare@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanPrepare
_TEXT	ENDS
EXTRN	?canMaintain@CvCity@@QBE_NW4ProcessTypes@@_N@Z:PROC ; CvCity::canMaintain
; Function compile flags: /Odtp
;	COMDAT ?lCanMaintain@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -13						; size = 1
_iProcess$ = -12					; size = 4
_bContinue$ = -5					; size = 1
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lCanMaintain@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanMaintain, COMDAT

; 801  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 802  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 803  : 	const int iProcess = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iProcess$[ebp], eax

; 804  : 	const bool bContinue = luaL_optint(L, 3, 0);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	al
	mov	BYTE PTR _bContinue$[ebp], al

; 805  : 	const bool bResult = pkCity->canMaintain((ProcessTypes)iProcess, bContinue);

	movzx	ecx, BYTE PTR _bContinue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iProcess$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?canMaintain@CvCity@@QBE_NW4ProcessTypes@@_N@Z ; CvCity::canMaintain
	mov	BYTE PTR _bResult$[ebp], al

; 806  : 
; 807  : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 808  : 	return 1;

	mov	eax, 1

; 809  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanMaintain@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanMaintain
_TEXT	ENDS
PUBLIC	??_C@_0CA@DIHGPHIA@TXT_KEY_CANNOT_PURCHASE_NO_GOLD?$AA@ ; `string'
PUBLIC	??_C@_09ODCIJKAA@?$FLNEWLINE?$FN?$AA@		; `string'
PUBLIC	??_C@_0CC@JAFBJFIB@TXT_KEY_CANNOT_PURCHASE_UNIT_HER@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	?GetGold@CvTreasury@@QBEHXZ:PROC		; CvTreasury::GetGold
EXTRN	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ:PROC ; CvPlayer::GetTreasury
EXTRN	?GetPurchaseCost@CvCity@@QAEHW4UnitTypes@@@Z:PROC ; CvCity::GetPurchaseCost
EXTRN	?m_aPlayers@CvPlayerAI@@1PAV1@A:DWORD		; CvPlayerAI::m_aPlayers
EXTRN	__imp_??1String@Localization@@UAE@XZ:PROC
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:PROC
EXTRN	__imp_?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ:PROC
EXTRN	__imp_?toUTF8@String@Localization@@QAEPBDXZ:PROC
EXTRN	__imp_?Lookup@Localization@@YA?AVString@1@PBD@Z:PROC
EXTRN	?CanPlaceUnitHere@CvCity@@QAE_NW4UnitTypes@@@Z:PROC ; CvCity::CanPlaceUnitHere
;	COMDAT ??_C@_0CA@DIHGPHIA@TXT_KEY_CANNOT_PURCHASE_NO_GOLD?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0CA@DIHGPHIA@TXT_KEY_CANNOT_PURCHASE_NO_GOLD?$AA@ DB 'TXT_KEY_CANNO'
	DB	'T_PURCHASE_NO_GOLD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09ODCIJKAA@?$FLNEWLINE?$FN?$AA@
CONST	SEGMENT
??_C@_09ODCIJKAA@?$FLNEWLINE?$FN?$AA@ DB '[NEWLINE]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@JAFBJFIB@TXT_KEY_CANNOT_PURCHASE_UNIT_HER@
CONST	SEGMENT
??_C@_0CC@JAFBJFIB@TXT_KEY_CANNOT_PURCHASE_UNIT_HER@ DB 'TXT_KEY_CANNOT_P'
	DB	'URCHASE_UNIT_HERE', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$2
__ehfuncinfo$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv234 = -244						; size = 4
tv214 = -240						; size = 4
$T225011 = -236						; size = 4
$T225007 = -232						; size = 4
$T224979 = -228						; size = 4
_localized$220226 = -224				; size = 4
_localizedText$220223 = -220				; size = 80
_localized$220218 = -136				; size = 4
_localizedText$220215 = -132				; size = 80
_eUnit$ = -52						; size = 4
_toolTip$ = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
_pkCity$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetPurchaseUnitTooltip, COMDAT

; 812  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 813  : 	CvString toolTip;

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 814  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 815  : 	const UnitTypes eUnit = (UnitTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eUnit$[ebp], eax

; 816  : 
; 817  : 	// City Production Modifier
; 818  : 	pkCity->canTrain(eUnit, false, false, false, false, &toolTip);

	lea	edx, DWORD PTR _toolTip$[ebp]
	push	edx
	push	0
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _eUnit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?canTrain@CvCity@@QBE_NW4UnitTypes@@_N111PAVCvString@@@Z ; CvCity::canTrain

; 819  : 
; 820  : 	// Already a unit here
; 821  : 	if(!pkCity->CanPlaceUnitHere(eUnit))

	mov	ecx, DWORD PTR _eUnit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?CanPlaceUnitHere@CvCity@@QAE_NW4UnitTypes@@@Z ; CvCity::CanPlaceUnitHere
	movzx	edx, al
	test	edx, edx
	jne	$LN23@lGetPurcha

; 822  : 	{
; 823  : 		Localization::String localizedText = Localization::Lookup("TXT_KEY_CANNOT_PURCHASE_UNIT_HERE");

	push	OFFSET ??_C@_0CC@JAFBJFIB@TXT_KEY_CANNOT_PURCHASE_UNIT_HER@
	lea	eax, DWORD PTR _localizedText$220215[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 824  : 
; 825  : 		const char* const localized = localizedText.toUTF8();

	lea	ecx, DWORD PTR _localizedText$220215[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR _localized$220218[ebp], eax

; 826  : 		if(localized)

	cmp	DWORD PTR _localized$220218[ebp], 0
	je	SHORT $LN5@lGetPurcha

; 827  : 		{
; 828  : 			if(!toolTip.IsEmpty())

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN17@lGetPurcha
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	test	eax, eax
	je	SHORT $LN17@lGetPurcha
	mov	DWORD PTR tv214[ebp], 0
	jmp	SHORT $LN15@lGetPurcha
$LN17@lGetPurcha:
	mov	DWORD PTR tv214[ebp], 1
$LN15@lGetPurcha:
	movzx	edx, BYTE PTR tv214[ebp]
	test	edx, edx
	jne	SHORT $LN4@lGetPurcha

; 829  : 				toolTip += "[NEWLINE]";

	push	OFFSET ??_C@_09ODCIJKAA@?$FLNEWLINE?$FN?$AA@
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN4@lGetPurcha:

; 830  : 
; 831  : 			toolTip += localized;

	mov	eax, DWORD PTR _localized$220218[ebp]
	push	eax
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN5@lGetPurcha:

; 832  : 		}
; 833  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _localizedText$220215[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 834  : 
; 835  : 	// Not enough cash money
; 836  : 	if(pkCity->GetPurchaseCost(eUnit) > GET_PLAYER(pkCity->getOwner()).GetTreasury()->GetGold())

$LN23@lGetPurcha:
	mov	ecx, DWORD PTR _pkCity$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T225007[ebp], edx
	mov	eax, DWORD PTR $T225007[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T225011[ebp], eax
	mov	ecx, DWORD PTR _eUnit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetPurchaseCost@CvCity@@QAEHW4UnitTypes@@@Z ; CvCity::GetPurchaseCost
	mov	esi, eax
	mov	ecx, DWORD PTR $T225011[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGold@CvTreasury@@QBEHXZ		; CvTreasury::GetGold
	cmp	esi, eax
	jle	$LN3@lGetPurcha

; 837  : 	{
; 838  : 		Localization::String localizedText = Localization::Lookup("TXT_KEY_CANNOT_PURCHASE_NO_GOLD");

	push	OFFSET ??_C@_0CA@DIHGPHIA@TXT_KEY_CANNOT_PURCHASE_NO_GOLD?$AA@
	lea	edx, DWORD PTR _localizedText$220223[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 839  : 
; 840  : 		const char* const localized = localizedText.toUTF8();

	lea	ecx, DWORD PTR _localizedText$220223[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR _localized$220226[ebp], eax

; 841  : 		if(localized)

	cmp	DWORD PTR _localized$220226[ebp], 0
	je	SHORT $LN2@lGetPurcha

; 842  : 		{
; 843  : 			if(!toolTip.IsEmpty())

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN29@lGetPurcha
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	test	eax, eax
	je	SHORT $LN29@lGetPurcha
	mov	DWORD PTR tv234[ebp], 0
	jmp	SHORT $LN27@lGetPurcha
$LN29@lGetPurcha:
	mov	DWORD PTR tv234[ebp], 1
$LN27@lGetPurcha:
	movzx	ecx, BYTE PTR tv234[ebp]
	test	ecx, ecx
	jne	SHORT $LN1@lGetPurcha

; 844  : 				toolTip += "[NEWLINE]";

	push	OFFSET ??_C@_09ODCIJKAA@?$FLNEWLINE?$FN?$AA@
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN1@lGetPurcha:

; 845  : 
; 846  : 			toolTip += localized;

	mov	edx, DWORD PTR _localized$220226[ebp]
	push	edx
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN2@lGetPurcha:

; 847  : 		}
; 848  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _localizedText$220223[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN3@lGetPurcha:

; 849  : 
; 850  : 	lua_pushstring(L, toolTip.c_str());

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 851  : 	return 1;

	mov	DWORD PTR $T224979[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T224979[ebp]

; 852  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _toolTip$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _localizedText$220215[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$2:
	lea	ecx, DWORD PTR _localizedText$220223[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-240]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetPurchaseUnitTooltip
PUBLIC	??_C@_0CB@IKLEAOFM@TXT_KEY_CANNOT_PURCHASE_NO_FAITH@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	?GetFaith@CvPlayer@@QBEHXZ:PROC			; CvPlayer::GetFaith
EXTRN	?GetFaithPurchaseCost@CvCity@@QAEHW4UnitTypes@@_N@Z:PROC ; CvCity::GetFaithPurchaseCost
;	COMDAT ??_C@_0CB@IKLEAOFM@TXT_KEY_CANNOT_PURCHASE_NO_FAITH@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0CB@IKLEAOFM@TXT_KEY_CANNOT_PURCHASE_NO_FAITH@ DB 'TXT_KEY_CANNOT_P'
	DB	'URCHASE_NO_FAITH', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$2
__ehfuncinfo$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv226 = -244						; size = 4
tv206 = -240						; size = 4
$T225069 = -236						; size = 4
$T225065 = -232						; size = 4
$T225037 = -228						; size = 4
_localized$220247 = -224				; size = 4
_localizedText$220244 = -220				; size = 80
_localized$220240 = -136				; size = 4
_localizedText$220238 = -132				; size = 80
_eUnit$ = -52						; size = 4
_toolTip$ = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
_pkCity$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFaithPurchaseUnitTooltip, COMDAT

; 855  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 856  : 	CvString toolTip;

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 857  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 858  : 	const UnitTypes eUnit = (UnitTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eUnit$[ebp], eax

; 859  : 
; 860  : 	// Already a unit here
; 861  : 	if(!pkCity->CanPlaceUnitHere(eUnit))

	mov	edx, DWORD PTR _eUnit$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?CanPlaceUnitHere@CvCity@@QAE_NW4UnitTypes@@@Z ; CvCity::CanPlaceUnitHere
	movzx	eax, al
	test	eax, eax
	jne	$LN23@lGetFaithP

; 862  : 	{
; 863  : 		Localization::String localizedText = Localization::Lookup("TXT_KEY_CANNOT_PURCHASE_UNIT_HERE");

	push	OFFSET ??_C@_0CC@JAFBJFIB@TXT_KEY_CANNOT_PURCHASE_UNIT_HER@
	lea	ecx, DWORD PTR _localizedText$220238[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 864  : 
; 865  : 		const char* const localized = localizedText.toUTF8();

	lea	ecx, DWORD PTR _localizedText$220238[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR _localized$220240[ebp], eax

; 866  : 		if(localized)

	cmp	DWORD PTR _localized$220240[ebp], 0
	je	SHORT $LN5@lGetFaithP

; 867  : 		{
; 868  : 			if(!toolTip.IsEmpty())

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN17@lGetFaithP
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	test	eax, eax
	je	SHORT $LN17@lGetFaithP
	mov	DWORD PTR tv206[ebp], 0
	jmp	SHORT $LN15@lGetFaithP
$LN17@lGetFaithP:
	mov	DWORD PTR tv206[ebp], 1
$LN15@lGetFaithP:
	movzx	eax, BYTE PTR tv206[ebp]
	test	eax, eax
	jne	SHORT $LN4@lGetFaithP

; 869  : 				toolTip += "[NEWLINE]";

	push	OFFSET ??_C@_09ODCIJKAA@?$FLNEWLINE?$FN?$AA@
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN4@lGetFaithP:

; 870  : 
; 871  : 			toolTip += localized;

	mov	ecx, DWORD PTR _localized$220240[ebp]
	push	ecx
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN5@lGetFaithP:

; 872  : 		}
; 873  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _localizedText$220238[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 874  : 
; 875  : 	// Not enough faith
; 876  : 	if(pkCity->GetFaithPurchaseCost(eUnit, true) > GET_PLAYER(pkCity->getOwner()).GetFaith())

$LN23@lGetFaithP:
	mov	edx, DWORD PTR _pkCity$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR $T225065[ebp], eax
	mov	ecx, DWORD PTR $T225065[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T225069[ebp], ecx
	push	1
	mov	edx, DWORD PTR _eUnit$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetFaithPurchaseCost@CvCity@@QAEHW4UnitTypes@@_N@Z ; CvCity::GetFaithPurchaseCost
	mov	esi, eax
	mov	ecx, DWORD PTR $T225069[ebp]
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith
	cmp	esi, eax
	jle	$LN3@lGetFaithP

; 877  : 	{
; 878  : 		Localization::String localizedText = Localization::Lookup("TXT_KEY_CANNOT_PURCHASE_NO_FAITH");

	push	OFFSET ??_C@_0CB@IKLEAOFM@TXT_KEY_CANNOT_PURCHASE_NO_FAITH@
	lea	eax, DWORD PTR _localizedText$220244[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 879  : 
; 880  : 		const char* const localized = localizedText.toUTF8();

	lea	ecx, DWORD PTR _localizedText$220244[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR _localized$220247[ebp], eax

; 881  : 		if(localized)

	cmp	DWORD PTR _localized$220247[ebp], 0
	je	SHORT $LN2@lGetFaithP

; 882  : 		{
; 883  : 			if(!toolTip.IsEmpty())

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN29@lGetFaithP
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	test	eax, eax
	je	SHORT $LN29@lGetFaithP
	mov	DWORD PTR tv226[ebp], 0
	jmp	SHORT $LN27@lGetFaithP
$LN29@lGetFaithP:
	mov	DWORD PTR tv226[ebp], 1
$LN27@lGetFaithP:
	movzx	edx, BYTE PTR tv226[ebp]
	test	edx, edx
	jne	SHORT $LN1@lGetFaithP

; 884  : 				toolTip += "[NEWLINE]";

	push	OFFSET ??_C@_09ODCIJKAA@?$FLNEWLINE?$FN?$AA@
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN1@lGetFaithP:

; 885  : 
; 886  : 			toolTip += localized;

	mov	eax, DWORD PTR _localized$220247[ebp]
	push	eax
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN2@lGetFaithP:

; 887  : 		}
; 888  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _localizedText$220244[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN3@lGetFaithP:

; 889  : 
; 890  : 	lua_pushstring(L, toolTip.c_str());

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 891  : 	return 1;

	mov	DWORD PTR $T225037[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T225037[ebp]

; 892  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _toolTip$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _localizedText$220238[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$2:
	lea	ecx, DWORD PTR _localizedText$220244[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-240]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFaithPurchaseUnitTooltip
PUBLIC	__$ArrayPad$
EXTRN	?GetPurchaseCost@CvCity@@QAEHW4BuildingTypes@@@Z:PROC ; CvCity::GetPurchaseCost
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv187 = -152						; size = 4
$T225114 = -148						; size = 4
$T225110 = -144						; size = 4
$T225095 = -140						; size = 4
_localized$220261 = -136				; size = 4
_localizedText$220259 = -132				; size = 80
_eBuilding$ = -52					; size = 4
_toolTip$ = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
_pkCity$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetPurchaseBuildingTooltip, COMDAT

; 895  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 140				; 0000008cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 896  : 	CvString toolTip;

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 897  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 898  : 	const BuildingTypes eBuilding = (BuildingTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBuilding$[ebp], eax

; 899  : 
; 900  : 	// City Production Modifier
; 901  : 	pkCity->canConstruct(eBuilding, false, false, false, &toolTip);

	lea	edx, DWORD PTR _toolTip$[ebp]
	push	edx
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _eBuilding$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?canConstruct@CvCity@@QBE_NW4BuildingTypes@@_N11PAVCvString@@@Z ; CvCity::canConstruct

; 902  : 
; 903  : 	// Not enough cash money
; 904  : 	if(pkCity->GetPurchaseCost(eBuilding) > GET_PLAYER(pkCity->getOwner()).GetTreasury()->GetGold())

	mov	ecx, DWORD PTR _pkCity$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T225110[ebp], edx
	mov	eax, DWORD PTR $T225110[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T225114[ebp], eax
	mov	ecx, DWORD PTR _eBuilding$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetPurchaseCost@CvCity@@QAEHW4BuildingTypes@@@Z ; CvCity::GetPurchaseCost
	mov	esi, eax
	mov	ecx, DWORD PTR $T225114[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGold@CvTreasury@@QBEHXZ		; CvTreasury::GetGold
	cmp	esi, eax
	jle	$LN3@lGetPurcha@2

; 905  : 	{
; 906  : 		Localization::String localizedText = Localization::Lookup("TXT_KEY_CANNOT_PURCHASE_NO_GOLD");

	push	OFFSET ??_C@_0CA@DIHGPHIA@TXT_KEY_CANNOT_PURCHASE_NO_GOLD?$AA@
	lea	edx, DWORD PTR _localizedText$220259[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 907  : 
; 908  : 		const char* const localized = localizedText.toUTF8();

	lea	ecx, DWORD PTR _localizedText$220259[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR _localized$220261[ebp], eax

; 909  : 		if(localized)

	cmp	DWORD PTR _localized$220261[ebp], 0
	je	SHORT $LN2@lGetPurcha@2

; 910  : 		{
; 911  : 			if(!toolTip.IsEmpty())

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN19@lGetPurcha@2
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	test	eax, eax
	je	SHORT $LN19@lGetPurcha@2
	mov	DWORD PTR tv187[ebp], 0
	jmp	SHORT $LN17@lGetPurcha@2
$LN19@lGetPurcha@2:
	mov	DWORD PTR tv187[ebp], 1
$LN17@lGetPurcha@2:
	movzx	ecx, BYTE PTR tv187[ebp]
	test	ecx, ecx
	jne	SHORT $LN1@lGetPurcha@2

; 912  : 				toolTip += "[NEWLINE]";

	push	OFFSET ??_C@_09ODCIJKAA@?$FLNEWLINE?$FN?$AA@
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN1@lGetPurcha@2:

; 913  : 
; 914  : 			toolTip += localized;

	mov	edx, DWORD PTR _localized$220261[ebp]
	push	edx
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN2@lGetPurcha@2:

; 915  : 		}
; 916  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _localizedText$220259[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN3@lGetPurcha@2:

; 917  : 
; 918  : 	lua_pushstring(L, toolTip.c_str());

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 919  : 	return 1;

	mov	DWORD PTR $T225095[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T225095[ebp]

; 920  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _toolTip$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _localizedText$220259[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-148]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetPurchaseBuildingTooltip
PUBLIC	__$ArrayPad$
EXTRN	?GetFaithPurchaseCost@CvCity@@QAEHW4BuildingTypes@@@Z:PROC ; CvCity::GetFaithPurchaseCost
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv185 = -152						; size = 4
$T225159 = -148						; size = 4
$T225155 = -144						; size = 4
$T225140 = -140						; size = 4
_localized$220275 = -136				; size = 4
_localizedText$220273 = -132				; size = 80
_eBuilding$ = -52					; size = 4
_toolTip$ = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
_pkCity$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFaithPurchaseBuildingTooltip, COMDAT

; 923  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 140				; 0000008cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 924  : 	CvString toolTip;

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 925  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 926  : 	const BuildingTypes eBuilding = (BuildingTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBuilding$[ebp], eax

; 927  : 
; 928  : 	// City Production Modifier
; 929  : 	pkCity->canConstruct(eBuilding, false, false, false, &toolTip);

	lea	edx, DWORD PTR _toolTip$[ebp]
	push	edx
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _eBuilding$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?canConstruct@CvCity@@QBE_NW4BuildingTypes@@_N11PAVCvString@@@Z ; CvCity::canConstruct

; 930  : 
; 931  : 	// Not enough faith
; 932  : 	if(pkCity->GetFaithPurchaseCost(eBuilding) > GET_PLAYER(pkCity->getOwner()).GetFaith())

	mov	ecx, DWORD PTR _pkCity$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T225155[ebp], edx
	mov	eax, DWORD PTR $T225155[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T225159[ebp], eax
	mov	ecx, DWORD PTR _eBuilding$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetFaithPurchaseCost@CvCity@@QAEHW4BuildingTypes@@@Z ; CvCity::GetFaithPurchaseCost
	mov	esi, eax
	mov	ecx, DWORD PTR $T225159[ebp]
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith
	cmp	esi, eax
	jle	$LN3@lGetFaithP@2

; 933  : 	{
; 934  : 		Localization::String localizedText = Localization::Lookup("TXT_KEY_CANNOT_PURCHASE_NO_FAITH");

	push	OFFSET ??_C@_0CB@IKLEAOFM@TXT_KEY_CANNOT_PURCHASE_NO_FAITH@
	lea	edx, DWORD PTR _localizedText$220273[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 935  : 
; 936  : 		const char* const localized = localizedText.toUTF8();

	lea	ecx, DWORD PTR _localizedText$220273[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR _localized$220275[ebp], eax

; 937  : 		if(localized)

	cmp	DWORD PTR _localized$220275[ebp], 0
	je	SHORT $LN2@lGetFaithP@2

; 938  : 		{
; 939  : 			if(!toolTip.IsEmpty())

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN19@lGetFaithP@2
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	test	eax, eax
	je	SHORT $LN19@lGetFaithP@2
	mov	DWORD PTR tv185[ebp], 0
	jmp	SHORT $LN17@lGetFaithP@2
$LN19@lGetFaithP@2:
	mov	DWORD PTR tv185[ebp], 1
$LN17@lGetFaithP@2:
	movzx	ecx, BYTE PTR tv185[ebp]
	test	ecx, ecx
	jne	SHORT $LN1@lGetFaithP@2

; 940  : 				toolTip += "[NEWLINE]";

	push	OFFSET ??_C@_09ODCIJKAA@?$FLNEWLINE?$FN?$AA@
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN1@lGetFaithP@2:

; 941  : 
; 942  : 			toolTip += localized;

	mov	edx, DWORD PTR _localized$220275[ebp]
	push	edx
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN2@lGetFaithP@2:

; 943  : 		}
; 944  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _localizedText$220273[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN3@lGetFaithP@2:

; 945  : 
; 946  : 	lua_pushstring(L, toolTip.c_str());

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 947  : 	return 1;

	mov	DWORD PTR $T225140[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T225140[ebp]

; 948  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _toolTip$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _localizedText$220273[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-148]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFaithPurchaseBuildingTooltip
EXTRN	?canJoin@CvCity@@QBE_NXZ:PROC			; CvCity::canJoin
; Function compile flags: /Odtp
;	COMDAT ?lCanJoin@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -5						; size = 1
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lCanJoin@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lCanJoin, COMDAT

; 952  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 953  : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 954  : 	const bool bResult = pkCity->canJoin();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?canJoin@CvCity@@QBE_NXZ		; CvCity::canJoin
	mov	BYTE PTR _bResult$[ebp], al

; 955  : 
; 956  : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 957  : 	return 1;

	mov	eax, 1

; 958  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanJoin@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lCanJoin
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4BuildingTypes@@_NPAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4BuildingTypes@@_NPAVCvString@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum BuildingTypes,bool,CvString *>
EXTRN	?IsBuildingLocalResourceValid@CvCity@@QBE_NW4BuildingTypes@@_NPAVCvString@@@Z:PROC ; CvCity::IsBuildingLocalResourceValid
; Function compile flags: /Odtp
;	COMDAT ?lIsBuildingLocalResourceValid@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBuildingLocalResourceValid@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsBuildingLocalResourceValid, COMDAT

; 962  : {

	push	ebp
	mov	ebp, esp

; 963  : 	return BasicLuaMethod(L, &CvCity::IsBuildingLocalResourceValid);

	push	OFFSET ?IsBuildingLocalResourceValid@CvCity@@QBE_NW4BuildingTypes@@_NPAVCvString@@@Z ; CvCity::IsBuildingLocalResourceValid
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4BuildingTypes@@_NPAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4BuildingTypes@@_NPAVCvString@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum BuildingTypes,bool,CvString *>
	add	esp, 8

; 964  : }

	pop	ebp
	ret	0
?lIsBuildingLocalResourceValid@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsBuildingLocalResourceValid
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4ResourceTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4ResourceTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ResourceTypes,bool>
EXTRN	?GetResourceDemanded@CvCity@@QBE?AW4ResourceTypes@@_N@Z:PROC ; CvCity::GetResourceDemanded
; Function compile flags: /Odtp
;	COMDAT ?lGetResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetResourceDemanded, COMDAT

; 968  : {

	push	ebp
	mov	ebp, esp

; 969  : 	return BasicLuaMethod(L, &CvCity::GetResourceDemanded);

	push	OFFSET ?GetResourceDemanded@CvCity@@QBE?AW4ResourceTypes@@_N@Z ; CvCity::GetResourceDemanded
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4ResourceTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4ResourceTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ResourceTypes,bool>
	add	esp, 8

; 970  : }

	pop	ebp
	ret	0
?lGetResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetResourceDemanded
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4ResourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ResourceTypes>
EXTRN	?SetResourceDemanded@CvCity@@QAEXW4ResourceTypes@@@Z:PROC ; CvCity::SetResourceDemanded
; Function compile flags: /Odtp
;	COMDAT ?lSetResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetResourceDemanded, COMDAT

; 974  : {

	push	ebp
	mov	ebp, esp

; 975  : 	return BasicLuaMethod(L, &CvCity::SetResourceDemanded);

	push	OFFSET ?SetResourceDemanded@CvCity@@QAEXW4ResourceTypes@@@Z ; CvCity::SetResourceDemanded
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4ResourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ResourceTypes>
	add	esp, 8

; 976  : }

	pop	ebp
	ret	0
?lSetResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetResourceDemanded
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
EXTRN	?DoPickResourceDemanded@CvCity@@QAEX_N@Z:PROC	; CvCity::DoPickResourceDemanded
; Function compile flags: /Odtp
;	COMDAT ?lDoPickResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoPickResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lDoPickResourceDemanded, COMDAT

; 980  : {

	push	ebp
	mov	ebp, esp

; 981  : 	return BasicLuaMethod(L, &CvCity::DoPickResourceDemanded);

	push	OFFSET ?DoPickResourceDemanded@CvCity@@QAEX_N@Z ; CvCity::DoPickResourceDemanded
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 982  : }

	pop	ebp
	ret	0
?lDoPickResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lDoPickResourceDemanded
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
EXTRN	?getFoodTurnsLeft@CvCity@@QBEHXZ:PROC		; CvCity::getFoodTurnsLeft
; Function compile flags: /Odtp
;	COMDAT ?lGetFoodTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFoodTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetFoodTurnsLeft, COMDAT

; 987  : {

	push	ebp
	mov	ebp, esp

; 988  : 	return BasicLuaMethod(L, &CvCity::getFoodTurnsLeft);

	push	OFFSET ?getFoodTurnsLeft@CvCity@@QBEHXZ	; CvCity::getFoodTurnsLeft
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 989  : 
; 990  : }

	pop	ebp
	ret	0
?lGetFoodTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetFoodTurnsLeft
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
EXTRN	?isProduction@CvCity@@QBE_NXZ:PROC		; CvCity::isProduction
; Function compile flags: /Odtp
;	COMDAT ?lIsProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsProduction, COMDAT

; 994  : {

	push	ebp
	mov	ebp, esp

; 995  : 	return BasicLuaMethod(L, &CvCity::isProduction);

	push	OFFSET ?isProduction@CvCity@@QBE_NXZ	; CvCity::isProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 996  : }

	pop	ebp
	ret	0
?lIsProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsProduction
_TEXT	ENDS
EXTRN	?isProductionLimited@CvCity@@QBE_NXZ:PROC	; CvCity::isProductionLimited
; Function compile flags: /Odtp
;	COMDAT ?lIsProductionLimited@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProductionLimited@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsProductionLimited, COMDAT

; 1000 : {

	push	ebp
	mov	ebp, esp

; 1001 : 	return BasicLuaMethod(L, &CvCity::isProductionLimited);

	push	OFFSET ?isProductionLimited@CvCity@@QBE_NXZ ; CvCity::isProductionLimited
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1002 : }

	pop	ebp
	ret	0
?lIsProductionLimited@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsProductionLimited
_TEXT	ENDS
EXTRN	?isProductionUnit@CvCity@@QBE_NXZ:PROC		; CvCity::isProductionUnit
; Function compile flags: /Odtp
;	COMDAT ?lIsProductionUnit@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProductionUnit@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsProductionUnit, COMDAT

; 1006 : {

	push	ebp
	mov	ebp, esp

; 1007 : 	return BasicLuaMethod(L, &CvCity::isProductionUnit);

	push	OFFSET ?isProductionUnit@CvCity@@QBE_NXZ ; CvCity::isProductionUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1008 : }

	pop	ebp
	ret	0
?lIsProductionUnit@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsProductionUnit
_TEXT	ENDS
EXTRN	?isProductionBuilding@CvCity@@QBE_NXZ:PROC	; CvCity::isProductionBuilding
; Function compile flags: /Odtp
;	COMDAT ?lIsProductionBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProductionBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsProductionBuilding, COMDAT

; 1012 : {

	push	ebp
	mov	ebp, esp

; 1013 : 	return BasicLuaMethod(L, &CvCity::isProductionBuilding);

	push	OFFSET ?isProductionBuilding@CvCity@@QBE_NXZ ; CvCity::isProductionBuilding
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1014 : }

	pop	ebp
	ret	0
?lIsProductionBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsProductionBuilding
_TEXT	ENDS
EXTRN	?isProductionProject@CvCity@@QBE_NXZ:PROC	; CvCity::isProductionProject
; Function compile flags: /Odtp
;	COMDAT ?lIsProductionProject@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProductionProject@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsProductionProject, COMDAT

; 1018 : {

	push	ebp
	mov	ebp, esp

; 1019 : 	return BasicLuaMethod(L, &CvCity::isProductionProject);

	push	OFFSET ?isProductionProject@CvCity@@QBE_NXZ ; CvCity::isProductionProject
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1020 : }

	pop	ebp
	ret	0
?lIsProductionProject@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsProductionProject
_TEXT	ENDS
EXTRN	?isProductionSpecialist@CvCity@@QBE_NXZ:PROC	; CvCity::isProductionSpecialist
; Function compile flags: /Odtp
;	COMDAT ?lIsProductionSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProductionSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsProductionSpecialist, COMDAT

; 1024 : {

	push	ebp
	mov	ebp, esp

; 1025 : 	return BasicLuaMethod(L, &CvCity::isProductionSpecialist);

	push	OFFSET ?isProductionSpecialist@CvCity@@QBE_NXZ ; CvCity::isProductionSpecialist
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1026 : }

	pop	ebp
	ret	0
?lIsProductionSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsProductionSpecialist
_TEXT	ENDS
EXTRN	?isProductionProcess@CvCity@@QBE_NXZ:PROC	; CvCity::isProductionProcess
; Function compile flags: /Odtp
;	COMDAT ?lIsProductionProcess@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProductionProcess@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsProductionProcess, COMDAT

; 1030 : {

	push	ebp
	mov	ebp, esp

; 1031 : 	return BasicLuaMethod(L, &CvCity::isProductionProcess);

	push	OFFSET ?isProductionProcess@CvCity@@QBE_NXZ ; CvCity::isProductionProcess
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1032 : }

	pop	ebp
	ret	0
?lIsProductionProcess@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsProductionProcess
_TEXT	ENDS
EXTRN	?canContinueProduction@CvCity@@QAE_NUOrderData@@@Z:PROC ; CvCity::canContinueProduction
EXTRN	_lua_toboolean:PROC
; Function compile flags: /Odtp
;	COMDAT ?lCanContinueProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_order$ = -24						; size = 16
_bResult$ = -5						; size = 1
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lCanContinueProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lCanContinueProduction, COMDAT

; 1036 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 1037 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1038 : 	OrderData order;

	mov	DWORD PTR _order$[ebp], -1
	mov	DWORD PTR _order$[ebp+4], 0
	mov	DWORD PTR _order$[ebp+8], 0
	mov	BYTE PTR _order$[ebp+12], 0
	mov	BYTE PTR _order$[ebp+13], 0

; 1039 : 	order.eOrderType = (OrderTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _order$[ebp], eax

; 1040 : 	order.iData1 = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _order$[ebp+4], eax

; 1041 : 	order.iData2 = lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _order$[ebp+8], eax

; 1042 : 	order.bSave = lua_toboolean(L, 5);

	push	5
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	mov	BYTE PTR _order$[ebp+12], dl

; 1043 : 
; 1044 : 	const bool bResult = pkCity->canContinueProduction(order);

	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	ecx, DWORD PTR _order$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _order$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _order$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _order$[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?canContinueProduction@CvCity@@QAE_NUOrderData@@@Z ; CvCity::canContinueProduction
	mov	BYTE PTR _bResult$[ebp], al

; 1045 : 
; 1046 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 1047 : 	return 1;

	mov	eax, 1

; 1048 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanContinueProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lCanContinueProduction
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes>
EXTRN	?getProductionExperience@CvCity@@QAEHW4UnitTypes@@@Z:PROC ; CvCity::getProductionExperience
; Function compile flags: /Odtp
;	COMDAT ?lGetProductionExperience@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProductionExperience@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProductionExperience, COMDAT

; 1052 : {

	push	ebp
	mov	ebp, esp

; 1053 : 	return BasicLuaMethod(L, &CvCity::getProductionExperience);

	push	OFFSET ?getProductionExperience@CvCity@@QAEHW4UnitTypes@@@Z ; CvCity::getProductionExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes>
	add	esp, 8

; 1054 : }

	pop	ebp
	ret	0
?lGetProductionExperience@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProductionExperience
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
EXTRN	?addProductionExperience@CvCity@@QAEXPAVCvUnit@@_N@Z:PROC ; CvCity::addProductionExperience
; Function compile flags: /Odtp
;	COMDAT ?lAddProductionExperience@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkUnit$ = -12						; size = 4
_bConscript$ = -5					; size = 1
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lAddProductionExperience@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lAddProductionExperience, COMDAT

; 1058 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1059 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1060 : 	CvUnit* pkUnit = CvLuaUnit::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkUnit$[ebp], eax

; 1061 : 	const bool bConscript = luaL_optint(L, 3, 0);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	al
	mov	BYTE PTR _bConscript$[ebp], al

; 1062 : 	pkCity->addProductionExperience(pkUnit, bConscript);

	movzx	ecx, BYTE PTR _bConscript$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkUnit$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?addProductionExperience@CvCity@@QAEXPAVCvUnit@@_N@Z ; CvCity::addProductionExperience

; 1063 : 
; 1064 : 	return 1;

	mov	eax, 1

; 1065 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lAddProductionExperience@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lAddProductionExperience
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4UnitTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum UnitTypes>
EXTRN	?getProductionUnit@CvCity@@QBE?AW4UnitTypes@@XZ:PROC ; CvCity::getProductionUnit
; Function compile flags: /Odtp
;	COMDAT ?lGetProductionUnit@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProductionUnit@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetProductionUnit, COMDAT

; 1069 : {

	push	ebp
	mov	ebp, esp

; 1070 : 	return BasicLuaMethod(L, &CvCity::getProductionUnit);

	push	OFFSET ?getProductionUnit@CvCity@@QBE?AW4UnitTypes@@XZ ; CvCity::getProductionUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4UnitTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum UnitTypes>
	add	esp, 8

; 1071 : }

	pop	ebp
	ret	0
?lGetProductionUnit@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetProductionUnit
_TEXT	ENDS
EXTRN	?getProductionUnitAI@CvCity@@QBE?AW4UnitAITypes@@XZ:PROC ; CvCity::getProductionUnitAI
; Function compile flags: /Odtp
;	COMDAT ?lGetProductionUnitAI@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eValue$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetProductionUnitAI@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProductionUnitAI, COMDAT

; 1075 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1076 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1077 : 	const UnitAITypes eValue = pkCity->getProductionUnitAI();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getProductionUnitAI@CvCity@@QBE?AW4UnitAITypes@@XZ ; CvCity::getProductionUnitAI
	mov	DWORD PTR _eValue$[ebp], eax

; 1078 : 
; 1079 : 	lua_pushinteger(L, eValue);

	mov	ecx, DWORD PTR _eValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 1080 : 	return 1;

	mov	eax, 1

; 1081 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetProductionUnitAI@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProductionUnitAI
_TEXT	ENDS
EXTRN	?getProductionBuilding@CvCity@@QBE?AW4BuildingTypes@@XZ:PROC ; CvCity::getProductionBuilding
; Function compile flags: /Odtp
;	COMDAT ?lGetProductionBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eValue$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetProductionBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProductionBuilding, COMDAT

; 1085 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1086 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1087 : 	const BuildingTypes eValue = pkCity->getProductionBuilding();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getProductionBuilding@CvCity@@QBE?AW4BuildingTypes@@XZ ; CvCity::getProductionBuilding
	mov	DWORD PTR _eValue$[ebp], eax

; 1088 : 
; 1089 : 	lua_pushinteger(L, eValue);

	mov	ecx, DWORD PTR _eValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 1090 : 	return 1;

	mov	eax, 1

; 1091 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetProductionBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProductionBuilding
_TEXT	ENDS
EXTRN	?getProductionProject@CvCity@@QBE?AW4ProjectTypes@@XZ:PROC ; CvCity::getProductionProject
; Function compile flags: /Odtp
;	COMDAT ?lGetProductionProject@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eValue$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetProductionProject@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProductionProject, COMDAT

; 1095 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1096 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1097 : 	const ProjectTypes eValue = pkCity->getProductionProject();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getProductionProject@CvCity@@QBE?AW4ProjectTypes@@XZ ; CvCity::getProductionProject
	mov	DWORD PTR _eValue$[ebp], eax

; 1098 : 
; 1099 : 	lua_pushinteger(L, eValue);

	mov	ecx, DWORD PTR _eValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 1100 : 	return 1;

	mov	eax, 1

; 1101 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetProductionProject@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProductionProject
_TEXT	ENDS
EXTRN	?getProductionSpecialist@CvCity@@QBE?AW4SpecialistTypes@@XZ:PROC ; CvCity::getProductionSpecialist
; Function compile flags: /Odtp
;	COMDAT ?lGetProductionSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eValue$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetProductionSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProductionSpecialist, COMDAT

; 1105 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1106 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1107 : 	const SpecialistTypes eValue = pkCity->getProductionSpecialist();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getProductionSpecialist@CvCity@@QBE?AW4SpecialistTypes@@XZ ; CvCity::getProductionSpecialist
	mov	DWORD PTR _eValue$[ebp], eax

; 1108 : 
; 1109 : 	lua_pushinteger(L, eValue);

	mov	ecx, DWORD PTR _eValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 1110 : 	return 1;

	mov	eax, 1

; 1111 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetProductionSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProductionSpecialist
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4ProcessTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4ProcessTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ProcessTypes>
EXTRN	?getProductionProcess@CvCity@@QBE?AW4ProcessTypes@@XZ:PROC ; CvCity::getProductionProcess
; Function compile flags: /Odtp
;	COMDAT ?lGetProductionProcess@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProductionProcess@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProductionProcess, COMDAT

; 1115 : {

	push	ebp
	mov	ebp, esp

; 1116 : 	return BasicLuaMethod(L, &CvCity::getProductionProcess);

	push	OFFSET ?getProductionProcess@CvCity@@QBE?AW4ProcessTypes@@XZ ; CvCity::getProductionProcess
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4ProcessTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4ProcessTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ProcessTypes>
	add	esp, 8

; 1117 : }

	pop	ebp
	ret	0
?lGetProductionProcess@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProductionProcess
_TEXT	ENDS
EXTRN	?getProductionNameKey@CvCity@@QBEPBDXZ:PROC	; CvCity::getProductionNameKey
; Function compile flags: /Odtp
;	COMDAT ?lGetProductionNameKey@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetProductionNameKey@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProductionNameKey, COMDAT

; 1123 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1124 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1125 : 	lua_pushstring(L, pkCity->getProductionNameKey());

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getProductionNameKey@CvCity@@QBEPBDXZ	; CvCity::getProductionNameKey
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 1126 : 	return 1;

	mov	eax, 1

; 1127 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetProductionNameKey@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProductionNameKey
_TEXT	ENDS
EXTRN	?getGeneralProductionTurnsLeft@CvCity@@QBEHXZ:PROC ; CvCity::getGeneralProductionTurnsLeft
; Function compile flags: /Odtp
;	COMDAT ?lGetGeneralProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGeneralProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetGeneralProductionTurnsLeft, COMDAT

; 1131 : {

	push	ebp
	mov	ebp, esp

; 1132 : 	return BasicLuaMethod(L, &CvCity::getGeneralProductionTurnsLeft);

	push	OFFSET ?getGeneralProductionTurnsLeft@CvCity@@QBEHXZ ; CvCity::getGeneralProductionTurnsLeft
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1133 : }

	pop	ebp
	ret	0
?lGetGeneralProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetGeneralProductionTurnsLeft
_TEXT	ENDS
EXTRN	?isFoodProduction@CvCity@@QBE_NXZ:PROC		; CvCity::isFoodProduction
; Function compile flags: /Odtp
;	COMDAT ?lIsFoodProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsFoodProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsFoodProduction, COMDAT

; 1137 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1138 : 	//return BasicLuaMethod<bool, UnitTypes>(L, &CvCity::isFoodProduction);
; 1139 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1140 : 	const int iResult = pkCity->isFoodProduction();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?isFoodProduction@CvCity@@QBE_NXZ	; CvCity::isFoodProduction
	movzx	ecx, al
	mov	DWORD PTR _iResult$[ebp], ecx

; 1141 : 
; 1142 : 	lua_pushboolean(L, iResult);

	mov	edx, DWORD PTR _iResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 1143 : 	return 1;

	mov	eax, 1

; 1144 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsFoodProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsFoodProduction
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes>
EXTRN	?getFirstUnitOrder@CvCity@@QBEHW4UnitTypes@@@Z:PROC ; CvCity::getFirstUnitOrder
; Function compile flags: /Odtp
;	COMDAT ?lGetFirstUnitOrder@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFirstUnitOrder@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetFirstUnitOrder, COMDAT

; 1148 : {

	push	ebp
	mov	ebp, esp

; 1149 : 	return BasicLuaMethod(L, &CvCity::getFirstUnitOrder);

	push	OFFSET ?getFirstUnitOrder@CvCity@@QBEHW4UnitTypes@@@Z ; CvCity::getFirstUnitOrder
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes>
	add	esp, 8

; 1150 : }

	pop	ebp
	ret	0
?lGetFirstUnitOrder@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetFirstUnitOrder
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes>
EXTRN	?getFirstProjectOrder@CvCity@@QBEHW4ProjectTypes@@@Z:PROC ; CvCity::getFirstProjectOrder
; Function compile flags: /Odtp
;	COMDAT ?lGetFirstProjectOrder@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFirstProjectOrder@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFirstProjectOrder, COMDAT

; 1154 : {

	push	ebp
	mov	ebp, esp

; 1155 : 	return BasicLuaMethod(L, &CvCity::getFirstProjectOrder);

	push	OFFSET ?getFirstProjectOrder@CvCity@@QBEHW4ProjectTypes@@@Z ; CvCity::getFirstProjectOrder
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes>
	add	esp, 8

; 1156 : }

	pop	ebp
	ret	0
?lGetFirstProjectOrder@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFirstProjectOrder
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4SpecialistTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4SpecialistTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum SpecialistTypes>
EXTRN	?getFirstSpecialistOrder@CvCity@@QBEHW4SpecialistTypes@@@Z:PROC ; CvCity::getFirstSpecialistOrder
; Function compile flags: /Odtp
;	COMDAT ?lGetFirstSpecialistOrder@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFirstSpecialistOrder@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFirstSpecialistOrder, COMDAT

; 1160 : {

	push	ebp
	mov	ebp, esp

; 1161 : 	return BasicLuaMethod(L, &CvCity::getFirstSpecialistOrder);

	push	OFFSET ?getFirstSpecialistOrder@CvCity@@QBEHW4SpecialistTypes@@@Z ; CvCity::getFirstSpecialistOrder
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4SpecialistTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4SpecialistTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum SpecialistTypes>
	add	esp, 8

; 1162 : }

	pop	ebp
	ret	0
?lGetFirstSpecialistOrder@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFirstSpecialistOrder
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4UnitAITypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitAITypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitAITypes>
EXTRN	?getNumTrainUnitAI@CvCity@@QBEHW4UnitAITypes@@@Z:PROC ; CvCity::getNumTrainUnitAI
; Function compile flags: /Odtp
;	COMDAT ?lGetNumTrainUnitAI@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumTrainUnitAI@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetNumTrainUnitAI, COMDAT

; 1166 : {

	push	ebp
	mov	ebp, esp

; 1167 : 	return BasicLuaMethod(L, &CvCity::getNumTrainUnitAI);

	push	OFFSET ?getNumTrainUnitAI@CvCity@@QBEHW4UnitAITypes@@@Z ; CvCity::getNumTrainUnitAI
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4UnitAITypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitAITypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitAITypes>
	add	esp, 8

; 1168 : }

	pop	ebp
	ret	0
?lGetNumTrainUnitAI@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetNumTrainUnitAI
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes>
EXTRN	?getFirstBuildingOrder@CvCity@@QBEHW4BuildingTypes@@@Z:PROC ; CvCity::getFirstBuildingOrder
; Function compile flags: /Odtp
;	COMDAT ?lGetFirstBuildingOrder@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFirstBuildingOrder@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFirstBuildingOrder, COMDAT

; 1172 : {

	push	ebp
	mov	ebp, esp

; 1173 : 	return BasicLuaMethod(L, &CvCity::getFirstBuildingOrder);

	push	OFFSET ?getFirstBuildingOrder@CvCity@@QBEHW4BuildingTypes@@@Z ; CvCity::getFirstBuildingOrder
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes>
	add	esp, 8

; 1174 : }

	pop	ebp
	ret	0
?lGetFirstBuildingOrder@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFirstBuildingOrder
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum UnitTypes>
EXTRN	?isFoodProduction@CvCity@@QBE_NW4UnitTypes@@@Z:PROC ; CvCity::isFoodProduction
; Function compile flags: /Odtp
;	COMDAT ?lIsUnitFoodProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsUnitFoodProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsUnitFoodProduction, COMDAT

; 1178 : {

	push	ebp
	mov	ebp, esp

; 1179 : 	return BasicLuaMethod<bool, UnitTypes>(L, &CvCity::isFoodProduction);

	push	OFFSET ?isFoodProduction@CvCity@@QBE_NW4UnitTypes@@@Z ; CvCity::isFoodProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum UnitTypes>
	add	esp, 8

; 1180 : }

	pop	ebp
	ret	0
?lIsUnitFoodProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsUnitFoodProduction
_TEXT	ENDS
EXTRN	?getProduction@CvCity@@QBEHXZ:PROC		; CvCity::getProduction
; Function compile flags: /Odtp
;	COMDAT ?lGetProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetProduction, COMDAT

; 1184 : {

	push	ebp
	mov	ebp, esp

; 1185 : 	return BasicLuaMethod(L, &CvCity::getProduction);

	push	OFFSET ?getProduction@CvCity@@QBEHXZ	; CvCity::getProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1186 : }

	pop	ebp
	ret	0
?lGetProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetProduction
_TEXT	ENDS
EXTRN	?getProductionTimes100@CvCity@@QBEHXZ:PROC	; CvCity::getProductionTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetProductionTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProductionTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProductionTimes100, COMDAT

; 1190 : {

	push	ebp
	mov	ebp, esp

; 1191 : 	return BasicLuaMethod(L, &CvCity::getProductionTimes100);

	push	OFFSET ?getProductionTimes100@CvCity@@QBEHXZ ; CvCity::getProductionTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1192 : }

	pop	ebp
	ret	0
?lGetProductionTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProductionTimes100
_TEXT	ENDS
EXTRN	?getProductionNeeded@CvCity@@QBEHXZ:PROC	; CvCity::getProductionNeeded
; Function compile flags: /Odtp
;	COMDAT ?lGetProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProductionNeeded, COMDAT

; 1196 : {

	push	ebp
	mov	ebp, esp

; 1197 : 	return BasicLuaMethod(L, &CvCity::getProductionNeeded);

	push	OFFSET ?getProductionNeeded@CvCity@@QBEHXZ ; CvCity::getProductionNeeded
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1198 : }

	pop	ebp
	ret	0
?lGetProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProductionNeeded
_TEXT	ENDS
EXTRN	?getProductionNeeded@CvCity@@QBEHW4UnitTypes@@@Z:PROC ; CvCity::getProductionNeeded
; Function compile flags: /Odtp
;	COMDAT ?lGetUnitProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -12						; size = 4
_eUnitType$ = -8					; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetUnitProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetUnitProductionNeeded, COMDAT

; 1202 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1203 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1204 : 	const UnitTypes eUnitType = (UnitTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eUnitType$[ebp], eax

; 1205 : 
; 1206 : 	const int iResult = pkCity->getProductionNeeded(eUnitType);

	mov	edx, DWORD PTR _eUnitType$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getProductionNeeded@CvCity@@QBEHW4UnitTypes@@@Z ; CvCity::getProductionNeeded
	mov	DWORD PTR _iResult$[ebp], eax

; 1207 : 
; 1208 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 1209 : 	return 1;

	mov	eax, 1

; 1210 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetUnitProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetUnitProductionNeeded
_TEXT	ENDS
EXTRN	?getProductionNeeded@CvCity@@QBEHW4BuildingTypes@@@Z:PROC ; CvCity::getProductionNeeded
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -12						; size = 4
_eBuildingType$ = -8					; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetBuildingProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingProductionNeeded, COMDAT

; 1214 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1215 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1216 : 	const BuildingTypes eBuildingType = (BuildingTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBuildingType$[ebp], eax

; 1217 : 
; 1218 : 	const int iResult = pkCity->getProductionNeeded(eBuildingType);

	mov	edx, DWORD PTR _eBuildingType$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getProductionNeeded@CvCity@@QBEHW4BuildingTypes@@@Z ; CvCity::getProductionNeeded
	mov	DWORD PTR _iResult$[ebp], eax

; 1219 : 
; 1220 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 1221 : 	return 1;

	mov	eax, 1

; 1222 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBuildingProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingProductionNeeded
_TEXT	ENDS
EXTRN	?getProductionNeeded@CvCity@@QBEHW4ProjectTypes@@@Z:PROC ; CvCity::getProductionNeeded
; Function compile flags: /Odtp
;	COMDAT ?lGetProjectProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -12						; size = 4
_eProjectType$ = -8					; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetProjectProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProjectProductionNeeded, COMDAT

; 1226 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1227 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1228 : 	const ProjectTypes eProjectType = (ProjectTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eProjectType$[ebp], eax

; 1229 : 
; 1230 : 	const int iResult = pkCity->getProductionNeeded(eProjectType);

	mov	edx, DWORD PTR _eProjectType$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getProductionNeeded@CvCity@@QBEHW4ProjectTypes@@@Z ; CvCity::getProductionNeeded
	mov	DWORD PTR _iResult$[ebp], eax

; 1231 : 
; 1232 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 1233 : 	return 1;

	mov	eax, 1

; 1234 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetProjectProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProjectProductionNeeded
_TEXT	ENDS
EXTRN	?getProductionTurnsLeft@CvCity@@QBEHXZ:PROC	; CvCity::getProductionTurnsLeft
; Function compile flags: /Odtp
;	COMDAT ?lGetProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProductionTurnsLeft, COMDAT

; 1238 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1239 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1240 : 	const int iResult = pkCity->getProductionTurnsLeft();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getProductionTurnsLeft@CvCity@@QBEHXZ	; CvCity::getProductionTurnsLeft
	mov	DWORD PTR _iResult$[ebp], eax

; 1241 : 
; 1242 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 1243 : 	return 1;

	mov	eax, 1

; 1244 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProductionTurnsLeft
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4UnitTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes,int>
EXTRN	?getProductionTurnsLeft@CvCity@@QBEHW4UnitTypes@@H@Z:PROC ; CvCity::getProductionTurnsLeft
; Function compile flags: /Odtp
;	COMDAT ?lGetUnitProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetUnitProductionTurnsLeft, COMDAT

; 1248 : {

	push	ebp
	mov	ebp, esp

; 1249 : 	return BasicLuaMethod<int, UnitTypes>(L, &CvCity::getProductionTurnsLeft);

	push	OFFSET ?getProductionTurnsLeft@CvCity@@QBEHW4UnitTypes@@H@Z ; CvCity::getProductionTurnsLeft
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4UnitTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes,int>
	add	esp, 8

; 1250 : }

	pop	ebp
	ret	0
?lGetUnitProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetUnitProductionTurnsLeft
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4BuildingTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes,int>
EXTRN	?getProductionTurnsLeft@CvCity@@QBEHW4BuildingTypes@@H@Z:PROC ; CvCity::getProductionTurnsLeft
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingProductionTurnsLeft, COMDAT

; 1254 : {

	push	ebp
	mov	ebp, esp

; 1255 : 	return BasicLuaMethod<int, BuildingTypes>(L, &CvCity::getProductionTurnsLeft);

	push	OFFSET ?getProductionTurnsLeft@CvCity@@QBEHW4BuildingTypes@@H@Z ; CvCity::getProductionTurnsLeft
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4BuildingTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes,int>
	add	esp, 8

; 1256 : }

	pop	ebp
	ret	0
?lGetBuildingProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingProductionTurnsLeft
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4ProjectTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes,int>
EXTRN	?getProductionTurnsLeft@CvCity@@QBEHW4ProjectTypes@@H@Z:PROC ; CvCity::getProductionTurnsLeft
; Function compile flags: /Odtp
;	COMDAT ?lGetProjectProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProjectProductionTurnsLeft, COMDAT

; 1260 : {

	push	ebp
	mov	ebp, esp

; 1261 : 	return BasicLuaMethod<int, ProjectTypes>(L, &CvCity::getProductionTurnsLeft);

	push	OFFSET ?getProductionTurnsLeft@CvCity@@QBEHW4ProjectTypes@@H@Z ; CvCity::getProductionTurnsLeft
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4ProjectTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes,int>
	add	esp, 8

; 1262 : }

	pop	ebp
	ret	0
?lGetProjectProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProjectProductionTurnsLeft
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4SpecialistTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4SpecialistTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum SpecialistTypes,int>
EXTRN	?getProductionTurnsLeft@CvCity@@QBEHW4SpecialistTypes@@H@Z:PROC ; CvCity::getProductionTurnsLeft
; Function compile flags: /Odtp
;	COMDAT ?lGetSpecialistProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSpecialistProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSpecialistProductionTurnsLeft, COMDAT

; 1266 : {

	push	ebp
	mov	ebp, esp

; 1267 : 	return BasicLuaMethod<int, SpecialistTypes>(L, &CvCity::getProductionTurnsLeft);

	push	OFFSET ?getProductionTurnsLeft@CvCity@@QBEHW4SpecialistTypes@@H@Z ; CvCity::getProductionTurnsLeft
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4SpecialistTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4SpecialistTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum SpecialistTypes,int>
	add	esp, 8

; 1268 : }

	pop	ebp
	ret	0
?lGetSpecialistProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSpecialistProductionTurnsLeft
_TEXT	ENDS
EXTRN	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z:PROC ; CvCity::IsCanPurchase
; Function compile flags: /Odtp
;	COMDAT ?lIsCanPurchase@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bTestPurchaseCost$ = -23				; size = 1
_bTestTrainable$ = -22					; size = 1
_bResult$ = -21						; size = 1
_eBuildingType$ = -20					; size = 4
_eProjectType$ = -16					; size = 4
_eUnitType$ = -12					; size = 4
_pkCity$ = -8						; size = 4
_ePurchaseYield$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsCanPurchase@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsCanPurchase, COMDAT

; 1272 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 1273 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1274 : 	const bool bTestPurchaseCost = lua_toboolean(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bTestPurchaseCost$[ebp], dl

; 1275 : 	const bool bTestTrainable = lua_toboolean(L, 3);

	push	3
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	mov	BYTE PTR _bTestTrainable$[ebp], cl

; 1276 : 	const UnitTypes eUnitType = (UnitTypes) lua_tointeger(L, 4);

	push	4
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eUnitType$[ebp], eax

; 1277 : 	const BuildingTypes eBuildingType = (BuildingTypes) lua_tointeger(L, 5);

	push	5
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBuildingType$[ebp], eax

; 1278 : 	const ProjectTypes eProjectType = (ProjectTypes) lua_tointeger(L, 6);

	push	6
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eProjectType$[ebp], eax

; 1279 : 	const YieldTypes ePurchaseYield = (YieldTypes) lua_tointeger(L, 7);

	push	7
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePurchaseYield$[ebp], eax

; 1280 : 
; 1281 : 	const bool bResult = pkCity->IsCanPurchase(bTestPurchaseCost, bTestTrainable, eUnitType, eBuildingType, eProjectType, ePurchaseYield);

	mov	eax, DWORD PTR _ePurchaseYield$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eProjectType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eBuildingType$[ebp]
	push	edx
	mov	eax, DWORD PTR _eUnitType$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bTestTrainable$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bTestPurchaseCost$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase
	mov	BYTE PTR _bResult$[ebp], al

; 1282 : 
; 1283 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 1284 : 	return 1;

	mov	eax, 1

; 1285 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsCanPurchase@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsCanPurchase
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetUnitPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetUnitPurchaseCost, COMDAT

; 1289 : {

	push	ebp
	mov	ebp, esp

; 1290 : 	return BasicLuaMethod<int, UnitTypes>(L, &CvCity::GetPurchaseCost);

	push	OFFSET ?GetPurchaseCost@CvCity@@QAEHW4UnitTypes@@@Z ; CvCity::GetPurchaseCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes>
	add	esp, 8

; 1291 : }

	pop	ebp
	ret	0
?lGetUnitPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetUnitPurchaseCost
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4UnitTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4UnitTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes,bool>
; Function compile flags: /Odtp
;	COMDAT ?lGetUnitFaithPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitFaithPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetUnitFaithPurchaseCost, COMDAT

; 1295 : {

	push	ebp
	mov	ebp, esp

; 1296 : 	return BasicLuaMethod<int, UnitTypes>(L, &CvCity::GetFaithPurchaseCost);

	push	OFFSET ?GetFaithPurchaseCost@CvCity@@QAEHW4UnitTypes@@_N@Z ; CvCity::GetFaithPurchaseCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4UnitTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4UnitTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes,bool>
	add	esp, 8

; 1297 : }

	pop	ebp
	ret	0
?lGetUnitFaithPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetUnitFaithPurchaseCost
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes>
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingPurchaseCost, COMDAT

; 1301 : {

	push	ebp
	mov	ebp, esp

; 1302 : 	return BasicLuaMethod<int, BuildingTypes>(L, &CvCity::GetPurchaseCost);

	push	OFFSET ?GetPurchaseCost@CvCity@@QAEHW4BuildingTypes@@@Z ; CvCity::GetPurchaseCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes>
	add	esp, 8

; 1303 : }

	pop	ebp
	ret	0
?lGetBuildingPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingPurchaseCost
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetBuildingFaithPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingFaithPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingFaithPurchaseCost, COMDAT

; 1307 : {

	push	ebp
	mov	ebp, esp

; 1308 : 	return BasicLuaMethod<int, BuildingTypes>(L, &CvCity::GetFaithPurchaseCost);

	push	OFFSET ?GetFaithPurchaseCost@CvCity@@QAEHW4BuildingTypes@@@Z ; CvCity::GetFaithPurchaseCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes>
	add	esp, 8

; 1309 : }

	pop	ebp
	ret	0
?lGetBuildingFaithPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingFaithPurchaseCost
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes>
EXTRN	?GetPurchaseCost@CvCity@@QAEHW4ProjectTypes@@@Z:PROC ; CvCity::GetPurchaseCost
; Function compile flags: /Odtp
;	COMDAT ?lGetProjectPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProjectPurchaseCost, COMDAT

; 1313 : {

	push	ebp
	mov	ebp, esp

; 1314 : 	return BasicLuaMethod<int, ProjectTypes>(L, &CvCity::GetPurchaseCost);

	push	OFFSET ?GetPurchaseCost@CvCity@@QAEHW4ProjectTypes@@@Z ; CvCity::GetPurchaseCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes>
	add	esp, 8

; 1315 : }

	pop	ebp
	ret	0
?lGetProjectPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProjectPurchaseCost
_TEXT	ENDS
EXTRN	?setProduction@CvCity@@QAEXH@Z:PROC		; CvCity::setProduction
; Function compile flags: /Odtp
;	COMDAT ?lSetProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lSetProduction, COMDAT

; 1319 : {

	push	ebp
	mov	ebp, esp

; 1320 : 	return BasicLuaMethod(L, &CvCity::setProduction);

	push	OFFSET ?setProduction@CvCity@@QAEXH@Z	; CvCity::setProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1321 : }

	pop	ebp
	ret	0
?lSetProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lSetProduction
_TEXT	ENDS
EXTRN	?changeProduction@CvCity@@QAEXH@Z:PROC		; CvCity::changeProduction
; Function compile flags: /Odtp
;	COMDAT ?lChangeProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lChangeProduction, COMDAT

; 1325 : {

	push	ebp
	mov	ebp, esp

; 1326 : 	return BasicLuaMethod(L, &CvCity::changeProduction);

	push	OFFSET ?changeProduction@CvCity@@QAEXH@Z ; CvCity::changeProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1327 : }

	pop	ebp
	ret	0
?lChangeProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lChangeProduction
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?GetTradeYieldModifier@CvCity@@QBEHW4YieldTypes@@PAVCvString@@@Z:PROC ; CvCity::GetTradeYieldModifier
EXTRN	?getBaseYieldRateModifier@CvCity@@QBEHW4YieldTypes@@HPAVCvString@@@Z:PROC ; CvCity::getBaseYieldRateModifier
EXTRN	?getProductionModifier@CvCity@@QBEHPAVCvString@@@Z:PROC ; CvCity::getProductionModifier
EXTRN	?foodDifferenceTimes100@CvCity@@QBEH_NPAVCvString@@@Z:PROC ; CvCity::foodDifferenceTimes100
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T225288 = -56						; size = 4
_eYield$ = -52						; size = 4
_toolTip$ = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
_pkCity$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetYieldModifierTooltip, COMDAT

; 1330 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1331 : 	CvString toolTip;

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1332 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1333 : 	const YieldTypes eYield = (YieldTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eYield$[ebp], eax

; 1334 : 
; 1335 : 	// City Food Modifier
; 1336 : 	if(eYield == YIELD_FOOD)

	cmp	DWORD PTR _eYield$[ebp], 0
	jne	SHORT $LN3@lGetYieldM

; 1337 : 	{	
; 1338 : 		pkCity->foodDifferenceTimes100(true, &toolTip);

	lea	edx, DWORD PTR _toolTip$[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?foodDifferenceTimes100@CvCity@@QBEH_NPAVCvString@@@Z ; CvCity::foodDifferenceTimes100
$LN3@lGetYieldM:

; 1339 : 	}
; 1340 : 
; 1341 : 	// City Production Modifier
; 1342 : 	if(eYield == YIELD_PRODUCTION)

	cmp	DWORD PTR _eYield$[ebp], 1
	jne	SHORT $LN2@lGetYieldM

; 1343 : 	{
; 1344 : 		pkCity->getProductionModifier(&toolTip);

	lea	eax, DWORD PTR _toolTip$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getProductionModifier@CvCity@@QBEHPAVCvString@@@Z ; CvCity::getProductionModifier
$LN2@lGetYieldM:

; 1345 : 	}
; 1346 : 
; 1347 : 	// City Yield Rate Modifier
; 1348 : 	pkCity->getBaseYieldRateModifier(eYield, 0, &toolTip);

	lea	ecx, DWORD PTR _toolTip$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _eYield$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getBaseYieldRateModifier@CvCity@@QBEHW4YieldTypes@@HPAVCvString@@@Z ; CvCity::getBaseYieldRateModifier

; 1349 : 
; 1350 : 	if (eYield != YIELD_FOOD)

	cmp	DWORD PTR _eYield$[ebp], 0
	je	SHORT $LN1@lGetYieldM

; 1351 : 	{
; 1352 : 		// Trade Yield Modifier
; 1353 : 		pkCity->GetTradeYieldModifier(eYield, &toolTip);

	lea	eax, DWORD PTR _toolTip$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eYield$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetTradeYieldModifier@CvCity@@QBEHW4YieldTypes@@PAVCvString@@@Z ; CvCity::GetTradeYieldModifier
$LN1@lGetYieldM:

; 1354 : 	}
; 1355 : 
; 1356 : 	lua_pushstring(L, toolTip.c_str());

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 1357 : 	return 1;

	mov	DWORD PTR $T225288[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T225288[ebp]

; 1358 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _toolTip$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetYieldModifierTooltip
; Function compile flags: /Odtp
;	COMDAT ?lGetProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProductionModifier, COMDAT

; 1362 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1363 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1364 : 	const int iResult = pkCity->getProductionModifier();

	push	0
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getProductionModifier@CvCity@@QBEHPAVCvString@@@Z ; CvCity::getProductionModifier
	mov	DWORD PTR _iResult$[ebp], eax

; 1365 : 
; 1366 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 1367 : 	return 1;

	mov	eax, 1

; 1368 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProductionModifier
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N1@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,bool>
EXTRN	?getCurrentProductionDifference@CvCity@@QBEH_N0@Z:PROC ; CvCity::getCurrentProductionDifference
; Function compile flags: /Odtp
;	COMDAT ?lGetCurrentProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCurrentProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetCurrentProductionDifference, COMDAT

; 1372 : {

	push	ebp
	mov	ebp, esp

; 1373 : 	return BasicLuaMethod(L, &CvCity::getCurrentProductionDifference);

	push	OFFSET ?getCurrentProductionDifference@CvCity@@QBEH_N0@Z ; CvCity::getCurrentProductionDifference
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N1@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,bool>
	add	esp, 8

; 1374 : }

	pop	ebp
	ret	0
?lGetCurrentProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetCurrentProductionDifference
_TEXT	ENDS
EXTRN	?getRawProductionDifference@CvCity@@QBEH_N0@Z:PROC ; CvCity::getRawProductionDifference
; Function compile flags: /Odtp
;	COMDAT ?lGetRawProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRawProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetRawProductionDifference, COMDAT

; 1378 : {

	push	ebp
	mov	ebp, esp

; 1379 : 	return BasicLuaMethod(L, &CvCity::getRawProductionDifference);

	push	OFFSET ?getRawProductionDifference@CvCity@@QBEH_N0@Z ; CvCity::getRawProductionDifference
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N1@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,bool>
	add	esp, 8

; 1380 : }

	pop	ebp
	ret	0
?lGetRawProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetRawProductionDifference
_TEXT	ENDS
EXTRN	?getCurrentProductionDifferenceTimes100@CvCity@@QBEH_N0@Z:PROC ; CvCity::getCurrentProductionDifferenceTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetCurrentProductionDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCurrentProductionDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetCurrentProductionDifferenceTimes100, COMDAT

; 1384 : {

	push	ebp
	mov	ebp, esp

; 1385 : 	return BasicLuaMethod(L, &CvCity::getCurrentProductionDifferenceTimes100);

	push	OFFSET ?getCurrentProductionDifferenceTimes100@CvCity@@QBEH_N0@Z ; CvCity::getCurrentProductionDifferenceTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N1@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,bool>
	add	esp, 8

; 1386 : }

	pop	ebp
	ret	0
?lGetCurrentProductionDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetCurrentProductionDifferenceTimes100
_TEXT	ENDS
EXTRN	?getRawProductionDifferenceTimes100@CvCity@@QBEH_N0@Z:PROC ; CvCity::getRawProductionDifferenceTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetRawProductionDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRawProductionDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetRawProductionDifferenceTimes100, COMDAT

; 1390 : {

	push	ebp
	mov	ebp, esp

; 1391 : 	return BasicLuaMethod(L, &CvCity::getRawProductionDifferenceTimes100);

	push	OFFSET ?getRawProductionDifferenceTimes100@CvCity@@QBEH_N0@Z ; CvCity::getRawProductionDifferenceTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N1@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,bool>
	add	esp, 8

; 1392 : }

	pop	ebp
	ret	0
?lGetRawProductionDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetRawProductionDifferenceTimes100
_TEXT	ENDS
EXTRN	?getProductionModifier@CvCity@@QBEHW4UnitTypes@@PAVCvString@@@Z:PROC ; CvCity::getProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetUnitProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iUnit$ = -12						; size = 4
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetUnitProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetUnitProductionModifier, COMDAT

; 1396 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1397 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1398 : 	const UnitTypes iUnit = (UnitTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iUnit$[ebp], eax

; 1399 : 	const int iResult = pkCity->getProductionModifier(iUnit);

	push	0
	mov	edx, DWORD PTR _iUnit$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getProductionModifier@CvCity@@QBEHW4UnitTypes@@PAVCvString@@@Z ; CvCity::getProductionModifier
	mov	DWORD PTR _iResult$[ebp], eax

; 1400 : 
; 1401 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 1402 : 	return 1;

	mov	eax, 1

; 1403 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetUnitProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetUnitProductionModifier
_TEXT	ENDS
EXTRN	?getProductionModifier@CvCity@@QBEHW4BuildingTypes@@PAVCvString@@@Z:PROC ; CvCity::getProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$221100 = -12					; size = 4
_iBuilding$ = -8					; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetBuildingProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingProductionModifier, COMDAT

; 1407 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1408 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1409 : 	const BuildingTypes iBuilding = (BuildingTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iBuilding$[ebp], eax

; 1410 : 	if(iBuilding != NO_BUILDING)

	cmp	DWORD PTR _iBuilding$[ebp], -1
	je	SHORT $LN2@lGetBuildi

; 1411 : 	{
; 1412 : 		const int iResult = pkCity->getProductionModifier(iBuilding);

	push	0
	mov	edx, DWORD PTR _iBuilding$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getProductionModifier@CvCity@@QBEHW4BuildingTypes@@PAVCvString@@@Z ; CvCity::getProductionModifier
	mov	DWORD PTR _iResult$221100[ebp], eax

; 1413 : 		lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$221100[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 1414 : 	}
; 1415 : 	else

	jmp	SHORT $LN1@lGetBuildi
$LN2@lGetBuildi:

; 1416 : 	{
; 1417 : 		lua_pushinteger(L, 0);

	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetBuildi:

; 1418 : 	}
; 1419 : 	return 1;

	mov	eax, 1

; 1420 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBuildingProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingProductionModifier
_TEXT	ENDS
EXTRN	?getProductionModifier@CvCity@@QBEHW4ProjectTypes@@PAVCvString@@@Z:PROC ; CvCity::getProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetProjectProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eProject$ = -12					; size = 4
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetProjectProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProjectProductionModifier, COMDAT

; 1424 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1425 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1426 : 	const ProjectTypes eProject = (ProjectTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eProject$[ebp], eax

; 1427 : 	const int iResult = pkCity->getProductionModifier(eProject);

	push	0
	mov	edx, DWORD PTR _eProject$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getProductionModifier@CvCity@@QBEHW4ProjectTypes@@PAVCvString@@@Z ; CvCity::getProductionModifier
	mov	DWORD PTR _iResult$[ebp], eax

; 1428 : 
; 1429 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 1430 : 	return 1;

	mov	eax, 1

; 1431 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetProjectProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProjectProductionModifier
_TEXT	ENDS
EXTRN	?getProductionModifier@CvCity@@QBEHW4SpecialistTypes@@PAVCvString@@@Z:PROC ; CvCity::getProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetSpecialistProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eSpecialist$ = -12					; size = 4
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetSpecialistProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSpecialistProductionModifier, COMDAT

; 1435 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1436 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1437 : 	const SpecialistTypes eSpecialist = (SpecialistTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eSpecialist$[ebp], eax

; 1438 : 	const int iResult = pkCity->getProductionModifier(eSpecialist);

	push	0
	mov	edx, DWORD PTR _eSpecialist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getProductionModifier@CvCity@@QBEHW4SpecialistTypes@@PAVCvString@@@Z ; CvCity::getProductionModifier
	mov	DWORD PTR _iResult$[ebp], eax

; 1439 : 
; 1440 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 1441 : 	return 1;

	mov	eax, 1

; 1442 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetSpecialistProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSpecialistProductionModifier
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,int>
EXTRN	?getExtraProductionDifference@CvCity@@QBEHH@Z:PROC ; CvCity::getExtraProductionDifference
; Function compile flags: /Odtp
;	COMDAT ?lGetExtraProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetExtraProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetExtraProductionDifference, COMDAT

; 1446 : {

	push	ebp
	mov	ebp, esp

; 1447 : 	return BasicLuaMethod(L, &CvCity::getExtraProductionDifference);

	push	OFFSET ?getExtraProductionDifference@CvCity@@QBEHH@Z ; CvCity::getExtraProductionDifference
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,int>
	add	esp, 8

; 1448 : }

	pop	ebp
	ret	0
?lGetExtraProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetExtraProductionDifference
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4HurryTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4HurryTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum HurryTypes,bool>
EXTRN	?canHurry@CvCity@@QBE_NW4HurryTypes@@_N@Z:PROC	; CvCity::canHurry
; Function compile flags: /Odtp
;	COMDAT ?lCanHurry@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanHurry@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lCanHurry, COMDAT

; 1452 : {

	push	ebp
	mov	ebp, esp

; 1453 : 	return BasicLuaMethod(L, &CvCity::canHurry);

	push	OFFSET ?canHurry@CvCity@@QBE_NW4HurryTypes@@_N@Z ; CvCity::canHurry
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4HurryTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4HurryTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum HurryTypes,bool>
	add	esp, 8

; 1454 : }

	pop	ebp
	ret	0
?lCanHurry@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lCanHurry
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum HurryTypes>
EXTRN	?hurry@CvCity@@QAEXW4HurryTypes@@@Z:PROC	; CvCity::hurry
; Function compile flags: /Odtp
;	COMDAT ?lHurry@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHurry@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lHurry, COMDAT

; 1458 : {

	push	ebp
	mov	ebp, esp

; 1459 : 	return BasicLuaMethod(L, &CvCity::hurry);

	push	OFFSET ?hurry@CvCity@@QAEXW4HurryTypes@@@Z ; CvCity::hurry
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum HurryTypes>
	add	esp, 8

; 1460 : }

	pop	ebp
	ret	0
?lHurry@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lHurry
_TEXT	ENDS
EXTRN	?getConscriptUnit@CvCity@@QBE?AW4UnitTypes@@XZ:PROC ; CvCity::getConscriptUnit
; Function compile flags: /Odtp
;	COMDAT ?lGetConscriptUnit@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetConscriptUnit@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetConscriptUnit, COMDAT

; 1464 : {

	push	ebp
	mov	ebp, esp

; 1465 : 	return BasicLuaMethod(L, &CvCity::getConscriptUnit);

	push	OFFSET ?getConscriptUnit@CvCity@@QBE?AW4UnitTypes@@XZ ; CvCity::getConscriptUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4UnitTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum UnitTypes>
	add	esp, 8

; 1466 : }

	pop	ebp
	ret	0
?lGetConscriptUnit@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetConscriptUnit
_TEXT	ENDS
EXTRN	?getConscriptPopulation@CvCity@@QBEHXZ:PROC	; CvCity::getConscriptPopulation
; Function compile flags: /Odtp
;	COMDAT ?lGetConscriptPopulation@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetConscriptPopulation@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetConscriptPopulation, COMDAT

; 1470 : {

	push	ebp
	mov	ebp, esp

; 1471 : 	return BasicLuaMethod(L, &CvCity::getConscriptPopulation);

	push	OFFSET ?getConscriptPopulation@CvCity@@QBEHXZ ; CvCity::getConscriptPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1472 : }

	pop	ebp
	ret	0
?lGetConscriptPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetConscriptPopulation
_TEXT	ENDS
EXTRN	?conscriptMinCityPopulation@CvCity@@QBEHXZ:PROC	; CvCity::conscriptMinCityPopulation
; Function compile flags: /Odtp
;	COMDAT ?lConscriptMinCityPopulation@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lConscriptMinCityPopulation@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lConscriptMinCityPopulation, COMDAT

; 1476 : {

	push	ebp
	mov	ebp, esp

; 1477 : 	return BasicLuaMethod(L, &CvCity::conscriptMinCityPopulation);

	push	OFFSET ?conscriptMinCityPopulation@CvCity@@QBEHXZ ; CvCity::conscriptMinCityPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1478 : }

	pop	ebp
	ret	0
?lConscriptMinCityPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lConscriptMinCityPopulation
_TEXT	ENDS
EXTRN	?canConscript@CvCity@@QBE_NXZ:PROC		; CvCity::canConscript
; Function compile flags: /Odtp
;	COMDAT ?lCanConscript@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanConscript@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanConscript, COMDAT

; 1482 : {

	push	ebp
	mov	ebp, esp

; 1483 : 	return BasicLuaMethod(L, &CvCity::canConscript);

	push	OFFSET ?canConscript@CvCity@@QBE_NXZ	; CvCity::canConscript
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1484 : }

	pop	ebp
	ret	0
?lCanConscript@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanConscript
_TEXT	ENDS
EXTRN	?conscript@CvCity@@QAEXXZ:PROC			; CvCity::conscript
; Function compile flags: /Odtp
;	COMDAT ?lConscript@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lConscript@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lConscript, COMDAT

; 1488 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1489 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1490 : 	pkCity->conscript();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?conscript@CvCity@@QAEXXZ		; CvCity::conscript

; 1491 : 
; 1492 : 	return 1;

	mov	eax, 1

; 1493 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lConscript@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lConscript
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4YieldTypes@@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@W4ResourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes,enum ResourceTypes>
EXTRN	?getResourceYieldRateModifier@CvCity@@QBEHW4YieldTypes@@W4ResourceTypes@@@Z:PROC ; CvCity::getResourceYieldRateModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetResourceYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResourceYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetResourceYieldRateModifier, COMDAT

; 1497 : {

	push	ebp
	mov	ebp, esp

; 1498 : 	return BasicLuaMethod<int, YieldTypes, ResourceTypes>(L, &CvCity::getResourceYieldRateModifier);

	push	OFFSET ?getResourceYieldRateModifier@CvCity@@QBEHW4YieldTypes@@W4ResourceTypes@@@Z ; CvCity::getResourceYieldRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@W4ResourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes,enum ResourceTypes>
	add	esp, 8

; 1499 : }

	pop	ebp
	ret	0
?lGetResourceYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetResourceYieldRateModifier
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4HandicapTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum HandicapTypes>
EXTRN	?getHandicapType@CvCity@@QBE?AW4HandicapTypes@@XZ:PROC ; CvCity::getHandicapType
; Function compile flags: /Odtp
;	COMDAT ?lGetHandicapType@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHandicapType@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetHandicapType, COMDAT

; 1503 : {

	push	ebp
	mov	ebp, esp

; 1504 : 	return BasicLuaMethod(L, &CvCity::getHandicapType);

	push	OFFSET ?getHandicapType@CvCity@@QBE?AW4HandicapTypes@@XZ ; CvCity::getHandicapType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4HandicapTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum HandicapTypes>
	add	esp, 8

; 1505 : }

	pop	ebp
	ret	0
?lGetHandicapType@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetHandicapType
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4CivilizationTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum CivilizationTypes>
EXTRN	?getCivilizationType@CvCity@@QBE?AW4CivilizationTypes@@XZ:PROC ; CvCity::getCivilizationType
; Function compile flags: /Odtp
;	COMDAT ?lGetCivilizationType@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCivilizationType@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetCivilizationType, COMDAT

; 1509 : {

	push	ebp
	mov	ebp, esp

; 1510 : 	return BasicLuaMethod(L, &CvCity::getCivilizationType);

	push	OFFSET ?getCivilizationType@CvCity@@QBE?AW4CivilizationTypes@@XZ ; CvCity::getCivilizationType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4CivilizationTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum CivilizationTypes>
	add	esp, 8

; 1511 : }

	pop	ebp
	ret	0
?lGetCivilizationType@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetCivilizationType
_TEXT	ENDS
EXTRN	?getPersonalityType@CvCity@@QBE?AW4LeaderHeadTypes@@XZ:PROC ; CvCity::getPersonalityType
; Function compile flags: /Odtp
;	COMDAT ?lGetPersonalityType@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eValue$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetPersonalityType@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetPersonalityType, COMDAT

; 1515 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1516 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1517 : 	const LeaderHeadTypes eValue = pkCity->getPersonalityType();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getPersonalityType@CvCity@@QBE?AW4LeaderHeadTypes@@XZ ; CvCity::getPersonalityType
	mov	DWORD PTR _eValue$[ebp], eax

; 1518 : 
; 1519 : 	lua_pushinteger(L, eValue);

	mov	ecx, DWORD PTR _eValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 1520 : 	return 1;

	mov	eax, 1

; 1521 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPersonalityType@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetPersonalityType
_TEXT	ENDS
EXTRN	?getArtStyleType@CvCity@@QBE?AW4ArtStyleTypes@@XZ:PROC ; CvCity::getArtStyleType
; Function compile flags: /Odtp
;	COMDAT ?lGetArtStyleType@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eValue$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetArtStyleType@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetArtStyleType, COMDAT

; 1525 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1526 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1527 : 	const ArtStyleTypes eValue = pkCity->getArtStyleType();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getArtStyleType@CvCity@@QBE?AW4ArtStyleTypes@@XZ ; CvCity::getArtStyleType
	mov	DWORD PTR _eValue$[ebp], eax

; 1528 : 
; 1529 : 	lua_pushinteger(L, eValue);

	mov	ecx, DWORD PTR _eValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 1530 : 	return 1;

	mov	eax, 1

; 1531 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetArtStyleType@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetArtStyleType
_TEXT	ENDS
EXTRN	?getCitySizeType@CvCity@@QBE?AW4CitySizeTypes@@XZ:PROC ; CvCity::getCitySizeType
; Function compile flags: /Odtp
;	COMDAT ?lGetCitySizeType@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eValue$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCitySizeType@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetCitySizeType, COMDAT

; 1535 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1536 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1537 : 	const CitySizeTypes eValue = pkCity->getCitySizeType();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getCitySizeType@CvCity@@QBE?AW4CitySizeTypes@@XZ ; CvCity::getCitySizeType
	mov	DWORD PTR _eValue$[ebp], eax

; 1538 : 
; 1539 : 	lua_pushinteger(L, eValue);

	mov	ecx, DWORD PTR _eValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 1540 : 	return 1;

	mov	eax, 1

; 1541 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCitySizeType@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetCitySizeType
_TEXT	ENDS
EXTRN	?isBarbarian@CvCity@@QBE_NXZ:PROC		; CvCity::isBarbarian
; Function compile flags: /Odtp
;	COMDAT ?lIsBarbarian@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBarbarian@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsBarbarian, COMDAT

; 1545 : {

	push	ebp
	mov	ebp, esp

; 1546 : 	return BasicLuaMethod(L, &CvCity::isBarbarian);

	push	OFFSET ?isBarbarian@CvCity@@QBE_NXZ	; CvCity::isBarbarian
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1547 : }

	pop	ebp
	ret	0
?lIsBarbarian@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsBarbarian
_TEXT	ENDS
EXTRN	?isHuman@CvCity@@QBE_NXZ:PROC			; CvCity::isHuman
; Function compile flags: /Odtp
;	COMDAT ?lIsHuman@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHuman@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lIsHuman, COMDAT

; 1551 : {

	push	ebp
	mov	ebp, esp

; 1552 : 	return BasicLuaMethod(L, &CvCity::isHuman);

	push	OFFSET ?isHuman@CvCity@@QBE_NXZ		; CvCity::isHuman
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1553 : }

	pop	ebp
	ret	0
?lIsHuman@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lIsHuman
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4TeamTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum TeamTypes,bool>
EXTRN	?isVisible@CvCity@@QBE_NW4TeamTypes@@_N@Z:PROC	; CvCity::isVisible
; Function compile flags: /Odtp
;	COMDAT ?lIsVisible@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsVisible@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lIsVisible, COMDAT

; 1557 : {

	push	ebp
	mov	ebp, esp

; 1558 : 	return BasicLuaMethod(L, &CvCity::isVisible);

	push	OFFSET ?isVisible@CvCity@@QBE_NW4TeamTypes@@_N@Z ; CvCity::isVisible
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4TeamTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum TeamTypes,bool>
	add	esp, 8

; 1559 : }

	pop	ebp
	ret	0
?lIsVisible@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lIsVisible
_TEXT	ENDS
EXTRN	?isCapital@CvCity@@QBE_NXZ:PROC			; CvCity::isCapital
; Function compile flags: /Odtp
;	COMDAT ?lIsCapital@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsCapital@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lIsCapital, COMDAT

; 1563 : {

	push	ebp
	mov	ebp, esp

; 1564 : 	return BasicLuaMethod(L, &CvCity::isCapital);

	push	OFFSET ?isCapital@CvCity@@QBE_NXZ	; CvCity::isCapital
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1565 : }

	pop	ebp
	ret	0
?lIsCapital@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lIsCapital
_TEXT	ENDS
EXTRN	?IsOriginalCapital@CvCity@@QBE_NXZ:PROC		; CvCity::IsOriginalCapital
; Function compile flags: /Odtp
;	COMDAT ?lIsOriginalCapital@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsOriginalCapital@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsOriginalCapital, COMDAT

; 1569 : {

	push	ebp
	mov	ebp, esp

; 1570 : 	return BasicLuaMethod(L, &CvCity::IsOriginalCapital);

	push	OFFSET ?IsOriginalCapital@CvCity@@QBE_NXZ ; CvCity::IsOriginalCapital
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1571 : }

	pop	ebp
	ret	0
?lIsOriginalCapital@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsOriginalCapital
_TEXT	ENDS
EXTRN	?IsOriginalMajorCapital@CvCity@@QBE_NXZ:PROC	; CvCity::IsOriginalMajorCapital
; Function compile flags: /Odtp
;	COMDAT ?lIsOriginalMajorCapital@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsOriginalMajorCapital@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsOriginalMajorCapital, COMDAT

; 1575 : {

	push	ebp
	mov	ebp, esp

; 1576 : 	return BasicLuaMethod(L, &CvCity::IsOriginalMajorCapital);

	push	OFFSET ?IsOriginalMajorCapital@CvCity@@QBE_NXZ ; CvCity::IsOriginalMajorCapital
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1577 : }

	pop	ebp
	ret	0
?lIsOriginalMajorCapital@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsOriginalMajorCapital
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,int>
EXTRN	?isCoastal@CvCity@@QBE_NH@Z:PROC		; CvCity::isCoastal
; Function compile flags: /Odtp
;	COMDAT ?lIsCoastal@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsCoastal@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lIsCoastal, COMDAT

; 1581 : {

	push	ebp
	mov	ebp, esp

; 1582 : 	return BasicLuaMethod(L, &CvCity::isCoastal);

	push	OFFSET ?isCoastal@CvCity@@QBE_NH@Z	; CvCity::isCoastal
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,int>
	add	esp, 8

; 1583 : }

	pop	ebp
	ret	0
?lIsCoastal@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lIsCoastal
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H_NH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_NH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,int>
EXTRN	?foodConsumption@CvCity@@QBEH_NH@Z:PROC		; CvCity::foodConsumption
; Function compile flags: /Odtp
;	COMDAT ?lFoodConsumption@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lFoodConsumption@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lFoodConsumption, COMDAT

; 1587 : {

	push	ebp
	mov	ebp, esp

; 1588 : 	return BasicLuaMethod(L, &CvCity::foodConsumption);

	push	OFFSET ?foodConsumption@CvCity@@QBEH_NH@Z ; CvCity::foodConsumption
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H_NH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_NH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,int>
	add	esp, 8

; 1589 : }

	pop	ebp
	ret	0
?lFoodConsumption@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lFoodConsumption
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool>
EXTRN	?foodDifference@CvCity@@QBEH_N@Z:PROC		; CvCity::foodDifference
; Function compile flags: /Odtp
;	COMDAT ?lFoodDifference@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lFoodDifference@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lFoodDifference, COMDAT

; 1593 : {

	push	ebp
	mov	ebp, esp

; 1594 : 	return BasicLuaMethod(L, &CvCity::foodDifference);

	push	OFFSET ?foodDifference@CvCity@@QBEH_N@Z	; CvCity::foodDifference
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool>
	add	esp, 8

; 1595 : }

	pop	ebp
	ret	0
?lFoodDifference@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lFoodDifference
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H_NPAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_NPAVCvString@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,CvString *>
; Function compile flags: /Odtp
;	COMDAT ?lFoodDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lFoodDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lFoodDifferenceTimes100, COMDAT

; 1599 : {

	push	ebp
	mov	ebp, esp

; 1600 : 	return BasicLuaMethod(L, &CvCity::foodDifferenceTimes100);

	push	OFFSET ?foodDifferenceTimes100@CvCity@@QBEH_NPAVCvString@@@Z ; CvCity::foodDifferenceTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H_NPAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_NPAVCvString@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,CvString *>
	add	esp, 8

; 1601 : }

	pop	ebp
	ret	0
?lFoodDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lFoodDifferenceTimes100
_TEXT	ENDS
EXTRN	?growthThreshold@CvCity@@QBEHXZ:PROC		; CvCity::growthThreshold
; Function compile flags: /Odtp
;	COMDAT ?lGrowthThreshold@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGrowthThreshold@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGrowthThreshold, COMDAT

; 1605 : {

	push	ebp
	mov	ebp, esp

; 1606 : 	return BasicLuaMethod(L, &CvCity::growthThreshold);

	push	OFFSET ?growthThreshold@CvCity@@QBEHXZ	; CvCity::growthThreshold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1607 : }

	pop	ebp
	ret	0
?lGrowthThreshold@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGrowthThreshold
_TEXT	ENDS
EXTRN	?productionLeft@CvCity@@QBEHXZ:PROC		; CvCity::productionLeft
; Function compile flags: /Odtp
;	COMDAT ?lProductionLeft@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lProductionLeft@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lProductionLeft, COMDAT

; 1611 : {

	push	ebp
	mov	ebp, esp

; 1612 : 	return BasicLuaMethod(L, &CvCity::productionLeft);

	push	OFFSET ?productionLeft@CvCity@@QBEHXZ	; CvCity::productionLeft
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1613 : }

	pop	ebp
	ret	0
?lProductionLeft@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lProductionLeft
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4HurryTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum HurryTypes,bool>
EXTRN	?hurryCost@CvCity@@QBEHW4HurryTypes@@_N@Z:PROC	; CvCity::hurryCost
; Function compile flags: /Odtp
;	COMDAT ?lHurryCost@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHurryCost@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lHurryCost, COMDAT

; 1617 : {

	push	ebp
	mov	ebp, esp

; 1618 : 	return BasicLuaMethod(L, &CvCity::hurryCost);

	push	OFFSET ?hurryCost@CvCity@@QBEHW4HurryTypes@@_N@Z ; CvCity::hurryCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4HurryTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum HurryTypes,bool>
	add	esp, 8

; 1619 : }

	pop	ebp
	ret	0
?lHurryCost@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lHurryCost
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum HurryTypes>
EXTRN	?hurryGold@CvCity@@QBEHW4HurryTypes@@@Z:PROC	; CvCity::hurryGold
; Function compile flags: /Odtp
;	COMDAT ?lHurryGold@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHurryGold@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lHurryGold, COMDAT

; 1623 : {

	push	ebp
	mov	ebp, esp

; 1624 : 	return BasicLuaMethod(L, &CvCity::hurryGold);

	push	OFFSET ?hurryGold@CvCity@@QBEHW4HurryTypes@@@Z ; CvCity::hurryGold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum HurryTypes>
	add	esp, 8

; 1625 : }

	pop	ebp
	ret	0
?lHurryGold@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lHurryGold
_TEXT	ENDS
EXTRN	?hurryPopulation@CvCity@@QBEHW4HurryTypes@@@Z:PROC ; CvCity::hurryPopulation
; Function compile flags: /Odtp
;	COMDAT ?lHurryPopulation@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHurryPopulation@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lHurryPopulation, COMDAT

; 1629 : {

	push	ebp
	mov	ebp, esp

; 1630 : 	return BasicLuaMethod(L, &CvCity::hurryPopulation);

	push	OFFSET ?hurryPopulation@CvCity@@QBEHW4HurryTypes@@@Z ; CvCity::hurryPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum HurryTypes>
	add	esp, 8

; 1631 : }

	pop	ebp
	ret	0
?lHurryPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lHurryPopulation
_TEXT	ENDS
EXTRN	?hurryProduction@CvCity@@QBEHW4HurryTypes@@@Z:PROC ; CvCity::hurryProduction
; Function compile flags: /Odtp
;	COMDAT ?lHurryProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHurryProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lHurryProduction, COMDAT

; 1635 : {

	push	ebp
	mov	ebp, esp

; 1636 : 	return BasicLuaMethod(L, &CvCity::hurryProduction);

	push	OFFSET ?hurryProduction@CvCity@@QBEHW4HurryTypes@@@Z ; CvCity::hurryProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum HurryTypes>
	add	esp, 8

; 1637 : }

	pop	ebp
	ret	0
?lHurryProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lHurryProduction
_TEXT	ENDS
EXTRN	?maxHurryPopulation@CvCity@@QBEHXZ:PROC		; CvCity::maxHurryPopulation
; Function compile flags: /Odtp
;	COMDAT ?lMaxHurryPopulation@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lMaxHurryPopulation@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lMaxHurryPopulation, COMDAT

; 1641 : {

	push	ebp
	mov	ebp, esp

; 1642 : 	return BasicLuaMethod(L, &CvCity::maxHurryPopulation);

	push	OFFSET ?maxHurryPopulation@CvCity@@QBEHXZ ; CvCity::maxHurryPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1643 : }

	pop	ebp
	ret	0
?lMaxHurryPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lMaxHurryPopulation
_TEXT	ENDS
EXTRN	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetNumBuilding
EXTRN	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ:PROC ; CvCity::GetCityBuildings
; Function compile flags: /Odtp
;	COMDAT ?lGetNumBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$221546 = -12					; size = 4
_eBuildingType$ = -8					; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetNumBuilding, COMDAT

; 1647 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1648 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1649 : 	const BuildingTypes eBuildingType = (BuildingTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBuildingType$[ebp], eax

; 1650 : 	if(eBuildingType != NO_BUILDING)

	cmp	DWORD PTR _eBuildingType$[ebp], -1
	je	SHORT $LN2@lGetNumBui

; 1651 : 	{
; 1652 : 		const int iResult = pkCity->GetCityBuildings()->GetNumBuilding(eBuildingType);

	mov	edx, DWORD PTR _eBuildingType$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	mov	DWORD PTR _iResult$221546[ebp], eax

; 1653 : 		lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$221546[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 1654 : 	}
; 1655 : 	else

	jmp	SHORT $LN1@lGetNumBui
$LN2@lGetNumBui:

; 1656 : 	{
; 1657 : 		lua_pushinteger(L, 0);

	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetNumBui:

; 1658 : 	}
; 1659 : 	return 1;

	mov	eax, 1

; 1660 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetNumBuilding
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lIsHasBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$221555 = -9					; size = 1
_eBuildingType$ = -8					; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsHasBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsHasBuilding, COMDAT

; 1665 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1666 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1667 : 	const BuildingTypes eBuildingType = (BuildingTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBuildingType$[ebp], eax

; 1668 : 	if(eBuildingType != NO_BUILDING)

	cmp	DWORD PTR _eBuildingType$[ebp], -1
	je	SHORT $LN2@lIsHasBuil

; 1669 : 	{
; 1670 : #ifdef AUI_WARNING_FIXES
; 1671 : 		const int bResult = MIN(pkCity->GetCityBuildings()->GetNumBuilding(eBuildingType), 1);
; 1672 : #else
; 1673 : 		const bool bResult = pkCity->GetCityBuildings()->GetNumBuilding(eBuildingType);

	mov	edx, DWORD PTR _eBuildingType$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	setne	al
	mov	BYTE PTR _bResult$221555[ebp], al

; 1674 : #endif
; 1675 : 		lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$221555[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 1676 : 	}
; 1677 : 	else

	jmp	SHORT $LN1@lIsHasBuil
$LN2@lIsHasBuil:

; 1678 : 	{
; 1679 : #ifdef AUI_WARNING_FIXES
; 1680 : 		lua_pushboolean(L, 0);
; 1681 : #else
; 1682 : 		lua_pushboolean(L, false);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8
$LN1@lIsHasBuil:

; 1683 : #endif
; 1684 : 	}
; 1685 : 	return 1;

	mov	eax, 1

; 1686 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsHasBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsHasBuilding
_TEXT	ENDS
EXTRN	?GetNumActiveBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetNumActiveBuilding
; Function compile flags: /Odtp
;	COMDAT ?lGetNumActiveBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$221564 = -12					; size = 4
_eBuildingType$ = -8					; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumActiveBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumActiveBuilding, COMDAT

; 1690 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1691 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1692 : 	const BuildingTypes eBuildingType = (BuildingTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBuildingType$[ebp], eax

; 1693 : 	if(eBuildingType != NO_BUILDING)

	cmp	DWORD PTR _eBuildingType$[ebp], -1
	je	SHORT $LN2@lGetNumAct

; 1694 : 	{
; 1695 : 		const int iResult = pkCity->GetCityBuildings()->GetNumActiveBuilding(eBuildingType);

	mov	edx, DWORD PTR _eBuildingType$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumActiveBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumActiveBuilding
	mov	DWORD PTR _iResult$221564[ebp], eax

; 1696 : 		lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$221564[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 1697 : 	}
; 1698 : 	else

	jmp	SHORT $LN1@lGetNumAct
$LN2@lGetNumAct:

; 1699 : 	{
; 1700 : 		lua_pushinteger(L, 0);

	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetNumAct:

; 1701 : 	}
; 1702 : 	return 1;

	mov	eax, 1

; 1703 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumActiveBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumActiveBuilding
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetID@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetID@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lGetID, COMDAT

; 1707 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1708 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1709 : 	const int iResult = pkCity->GetID();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	DWORD PTR _iResult$[ebp], edx

; 1710 : 
; 1711 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 1712 : 	return 1;

	mov	eax, 1

; 1713 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetID@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lGetID
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetX@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetX@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lGetX, COMDAT

; 1717 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1718 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1719 : 	const int iResult = pkCity->getX();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR _iResult$[ebp], edx

; 1720 : 
; 1721 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 1722 : 	return 1;

	mov	eax, 1

; 1723 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetX@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lGetX
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetY@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetY@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lGetY, COMDAT

; 1727 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1728 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1729 : 	const int iResult = pkCity->getY();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR _iResult$[ebp], edx

; 1730 : 
; 1731 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 1732 : 	return 1;

	mov	eax, 1

; 1733 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetY@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lGetY
_TEXT	ENDS
EXTRN	?at@CvCity@@QBE_NHH@Z:PROC			; CvCity::at
; Function compile flags: /Odtp
;	COMDAT ?lAt@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -13						; size = 1
_pkCity$ = -12						; size = 4
_x$ = -8						; size = 4
_y$ = -4						; size = 4
_L$ = 8							; size = 4
?lAt@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lAt, COMDAT

; 1737 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1738 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1739 : 	const int x = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _x$[ebp], eax

; 1740 : 	const int y = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _y$[ebp], eax

; 1741 : 	const bool bResult = pkCity->at(x, y);

	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?at@CvCity@@QBE_NHH@Z			; CvCity::at
	mov	BYTE PTR _bResult$[ebp], al

; 1742 : 
; 1743 : 	lua_pushboolean(L, bResult);

	movzx	edx, BYTE PTR _bResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 1744 : 	return 1;

	mov	eax, 1

; 1745 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lAt@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lAt
_TEXT	ENDS
EXTRN	?at@CvCity@@QBE_NPAVCvPlot@@@Z:PROC		; CvCity::at
; Function compile flags: /Odtp
;	COMDAT ?lAtPlot@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -9						; size = 1
_pkCity$ = -8						; size = 4
_pkPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lAtPlot@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lAtPlot, COMDAT

; 1749 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1750 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1751 : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlot$[ebp], eax

; 1752 : 	const bool bResult = pkCity->at(pkPlot);

	mov	edx, DWORD PTR _pkPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?at@CvCity@@QBE_NPAVCvPlot@@@Z		; CvCity::at
	mov	BYTE PTR _bResult$[ebp], al

; 1753 : 
; 1754 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 1755 : 	return 1;

	mov	eax, 1

; 1756 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lAtPlot@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lAtPlot
_TEXT	ENDS
EXTRN	?plot@CvCity@@QBEPAVCvPlot@@XZ:PROC		; CvCity::plot
; Function compile flags: /Odtp
;	COMDAT ?lPlot@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkCity$ = -8						; size = 4
_pkPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lPlot@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lPlot, COMDAT

; 1760 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1761 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1762 : 	CvPlot* pkPlot = pkCity->plot();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	DWORD PTR _pkPlot$[ebp], eax

; 1763 : 	CvLuaPlot::Push(L, pkPlot);

	mov	ecx, DWORD PTR _pkPlot$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8

; 1764 : 	return 1;

	mov	eax, 1

; 1765 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lPlot@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lPlot
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaArea@@VCvArea@@@@SAXPAUlua_State@@PAVCvArea@@@Z ; CvLuaScopedInstance<CvLuaArea,CvArea>::Push
EXTRN	?area@CvCity@@QBEPAVCvArea@@XZ:PROC		; CvCity::area
; Function compile flags: /Odtp
;	COMDAT ?lArea@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkArea$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lArea@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lArea, COMDAT

; 1769 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1770 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1771 : 	CvArea* pkArea = pkCity->area();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?area@CvCity@@QBEPAVCvArea@@XZ		; CvCity::area
	mov	DWORD PTR _pkArea$[ebp], eax

; 1772 : 	CvLuaArea::Push(L, pkArea);

	mov	ecx, DWORD PTR _pkArea$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?Push@?$CvLuaScopedInstance@VCvLuaArea@@VCvArea@@@@SAXPAUlua_State@@PAVCvArea@@@Z ; CvLuaScopedInstance<CvLuaArea,CvArea>::Push
	add	esp, 8

; 1773 : 	return 1;

	mov	eax, 1

; 1774 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lArea@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lArea
_TEXT	ENDS
EXTRN	?waterArea@CvCity@@QBEPAVCvArea@@XZ:PROC	; CvCity::waterArea
; Function compile flags: /Odtp
;	COMDAT ?lWaterArea@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkArea$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lWaterArea@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lWaterArea, COMDAT

; 1778 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1779 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1780 : 	CvArea* pkArea = pkCity->waterArea();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?waterArea@CvCity@@QBEPAVCvArea@@XZ	; CvCity::waterArea
	mov	DWORD PTR _pkArea$[ebp], eax

; 1781 : 	CvLuaArea::Push(L, pkArea);

	mov	ecx, DWORD PTR _pkArea$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?Push@?$CvLuaScopedInstance@VCvLuaArea@@VCvArea@@@@SAXPAUlua_State@@PAVCvArea@@@Z ; CvLuaScopedInstance<CvLuaArea,CvArea>::Push
	add	esp, 8

; 1782 : 	return 1;

	mov	eax, 1

; 1783 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lWaterArea@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lWaterArea
_TEXT	ENDS
EXTRN	?getRallyPlot@CvCity@@QBEPAVCvPlot@@XZ:PROC	; CvCity::getRallyPlot
; Function compile flags: /Odtp
;	COMDAT ?lGetRallyPlot@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkCity$ = -8						; size = 4
_pkPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetRallyPlot@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetRallyPlot, COMDAT

; 1787 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1788 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1789 : 	CvPlot* pkPlot = pkCity->getRallyPlot();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getRallyPlot@CvCity@@QBEPAVCvPlot@@XZ	; CvCity::getRallyPlot
	mov	DWORD PTR _pkPlot$[ebp], eax

; 1790 : 	CvLuaPlot::Push(L, pkPlot);

	mov	ecx, DWORD PTR _pkPlot$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8

; 1791 : 	return 1;

	mov	eax, 1

; 1792 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetRallyPlot@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetRallyPlot
_TEXT	ENDS
EXTRN	?CanBuyPlot@CvCity@@QAE_NHH_N@Z:PROC		; CvCity::CanBuyPlot
EXTRN	?GetNextBuyablePlot@CvCity@@QAEPAVCvPlot@@XZ:PROC ; CvCity::GetNextBuyablePlot
; Function compile flags: /Odtp
;	COMDAT ?lCanBuyPlot@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T225441 = -16						; size = 4
$T225437 = -12						; size = 4
_pPlot$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lCanBuyPlot@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanBuyPlot, COMDAT

; 1797 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1798 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1799 : 	CvPlot* pPlot = pkCity->GetNextBuyablePlot();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetNextBuyablePlot@CvCity@@QAEPAVCvPlot@@XZ ; CvCity::GetNextBuyablePlot
	mov	DWORD PTR _pPlot$[ebp], eax

; 1800 : 	lua_pushboolean(L, pkCity->CanBuyPlot(pPlot->getX(), pPlot->getY()));

	mov	ecx, DWORD PTR _pPlot$[ebp]
	movsx	edx, WORD PTR [ecx+2]
	mov	DWORD PTR $T225437[ebp], edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	DWORD PTR $T225441[ebp], ecx
	push	0
	mov	edx, DWORD PTR $T225437[ebp]
	push	edx
	mov	eax, DWORD PTR $T225441[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?CanBuyPlot@CvCity@@QAE_NHH_N@Z		; CvCity::CanBuyPlot
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 1801 : 	return 1;

	mov	eax, 1

; 1802 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanBuyPlot@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanBuyPlot
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lCanBuyPlotAt@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iX$ = -16						; size = 4
_pkCity$ = -12						; size = 4
_iY$ = -8						; size = 4
_bIgnoreCost$ = -1					; size = 1
_L$ = 8							; size = 4
?lCanBuyPlotAt@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanBuyPlotAt, COMDAT

; 1807 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1808 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1809 : 	const int iX = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iX$[ebp], eax

; 1810 : 	const int iY = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iY$[ebp], eax

; 1811 : 	const bool bIgnoreCost = lua_toboolean(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	mov	BYTE PTR _bIgnoreCost$[ebp], cl

; 1812 : 	lua_pushboolean(L, pkCity->CanBuyPlot(iX, iY, bIgnoreCost));

	movzx	edx, BYTE PTR _bIgnoreCost$[ebp]
	push	edx
	mov	eax, DWORD PTR _iY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iX$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?CanBuyPlot@CvCity@@QAE_NHH_N@Z		; CvCity::CanBuyPlot
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 1813 : 	return 1;

	mov	eax, 1

; 1814 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanBuyPlotAt@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanBuyPlotAt
_TEXT	ENDS
EXTRN	?CanBuyAnyPlot@CvCity@@QAE_NXZ:PROC		; CvCity::CanBuyAnyPlot
; Function compile flags: /Odtp
;	COMDAT ?lCanBuyAnyPlot@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lCanBuyAnyPlot@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanBuyAnyPlot, COMDAT

; 1818 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1819 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1820 : 	lua_pushboolean(L, pkCity->CanBuyAnyPlot());

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?CanBuyAnyPlot@CvCity@@QAE_NXZ		; CvCity::CanBuyAnyPlot
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 1821 : 	return 1;

	mov	eax, 1

; 1822 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanBuyAnyPlot@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanBuyAnyPlot
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetNextBuyablePlot@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkCity$ = -8						; size = 4
_pkPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNextBuyablePlot@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNextBuyablePlot, COMDAT

; 1826 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1827 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1828 : 	CvPlot* pkPlot = pkCity->GetNextBuyablePlot();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetNextBuyablePlot@CvCity@@QAEPAVCvPlot@@XZ ; CvCity::GetNextBuyablePlot
	mov	DWORD PTR _pkPlot$[ebp], eax

; 1829 : 	CvLuaPlot::Push(L, pkPlot);

	mov	ecx, DWORD PTR _pkPlot$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8

; 1830 : 	return 1;

	mov	eax, 1

; 1831 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNextBuyablePlot@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNextBuyablePlot
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ ; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >
PUBLIC	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
PUBLIC	?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
PUBLIC	?resize@?$vector@HV?$allocator@H@std@@@std@@QAEXIH@Z ; std::vector<int,std::allocator<int> >::resize
PUBLIC	??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
EXTRN	?GetBuyablePlotList@CvCity@@QAEXAAV?$vector@HV?$allocator@H@std@@@std@@@Z:PROC ; CvCity::GetBuyablePlotList
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z$3
__ehfuncinfo$?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv185 = -164						; size = 4
$T225592 = -132						; size = 4
$T225585 = -128						; size = 4
$T225578 = -124						; size = 4
$T225574 = -120						; size = 4
$T225450 = -48						; size = 4
_pkPlot$221684 = -44					; size = 4
_ui$221679 = -40					; size = 4
_iReturnValues$ = -36					; size = 4
_pkCity$ = -32						; size = 4
_aiPlotList$ = -28					; size = 16
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuyablePlotList, COMDAT

; 1835 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 152				; 00000098H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1836 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1837 : 	std::vector<int> aiPlotList;

	lea	ecx, DWORD PTR _aiPlotList$[ebp]
	call	??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1838 : #ifdef AUI_CITY_FIX_GET_NEXT_BUYABLE_PLOT_VECTOR_USE_RESERVE
; 1839 : 	aiPlotList.reserve(NUM_DIRECTION_TYPES * GC.getMAXIMUM_ACQUIRE_PLOT_DISTANCE());
; 1840 : #else
; 1841 : 	aiPlotList.resize(20, -1);

	push	-1
	push	20					; 00000014H
	lea	ecx, DWORD PTR _aiPlotList$[ebp]
	call	?resize@?$vector@HV?$allocator@H@std@@@std@@QAEXIH@Z ; std::vector<int,std::allocator<int> >::resize

; 1842 : #endif
; 1843 : 	pkCity->GetBuyablePlotList(aiPlotList);

	lea	ecx, DWORD PTR _aiPlotList$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetBuyablePlotList@CvCity@@QAEXAAV?$vector@HV?$allocator@H@std@@@std@@@Z ; CvCity::GetBuyablePlotList

; 1844 : 
; 1845 : #ifdef AUI_CITY_FIX_GET_NEXT_BUYABLE_PLOT_VECTOR_USE_RESERVE
; 1846 : 
; 1847 : 	for (std::vector<int>::iterator it = aiPlotList.begin(); it != aiPlotList.end(); ++it)
; 1848 : 	{
; 1849 : 		CvLuaPlot::Push(L, GC.getMap().plotByIndex(*it));
; 1850 : 	}
; 1851 : 
; 1852 : 	return  aiPlotList.size();
; 1853 : #else
; 1854 : 	int iReturnValues = 0;

	mov	DWORD PTR _iReturnValues$[ebp], 0

; 1855 : 
; 1856 : 	for(uint ui = 0; ui < aiPlotList.size(); ui++)

	mov	DWORD PTR _ui$221679[ebp], 0
	jmp	SHORT $LN58@lGetBuyabl
$LN4@lGetBuyabl:
	mov	edx, DWORD PTR _ui$221679[ebp]
	add	edx, 1
	mov	DWORD PTR _ui$221679[ebp], edx
$LN58@lGetBuyabl:
	mov	eax, DWORD PTR _aiPlotList$[ebp+8]
	sub	eax, DWORD PTR _aiPlotList$[ebp+4]
	sar	eax, 2
	cmp	DWORD PTR _ui$221679[ebp], eax
	jae	$LN3@lGetBuyabl

; 1857 : 	{
; 1858 : 		if(aiPlotList[ui] >= 0)

	mov	ecx, DWORD PTR _aiPlotList$[ebp+4]
	mov	edx, DWORD PTR _ui$221679[ebp]
	cmp	DWORD PTR [ecx+edx*4], 0
	jl	$LN2@lGetBuyabl

; 1859 : 		{
; 1860 : 			CvPlot* pkPlot = GC.getMap().plotByIndex(aiPlotList[ui]);

	mov	eax, DWORD PTR _aiPlotList$[ebp+4]
	mov	ecx, DWORD PTR _ui$221679[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR $T225574[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T225578[ebp], eax
	mov	ecx, DWORD PTR $T225574[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T225592[ebp], edx
	cmp	DWORD PTR $T225592[ebp], 0
	jl	SHORT $LN68@lGetBuyabl
	mov	eax, DWORD PTR $T225578[ebp]
	mov	ecx, DWORD PTR [eax+4028]
	mov	DWORD PTR $T225585[ebp], ecx
	mov	edx, DWORD PTR $T225592[ebp]
	cmp	edx, DWORD PTR $T225585[ebp]
	jge	SHORT $LN68@lGetBuyabl
	mov	eax, DWORD PTR $T225592[ebp]
	imul	eax, 484				; 000001e4H
	mov	ecx, DWORD PTR $T225578[ebp]
	add	eax, DWORD PTR [ecx+4068]
	mov	DWORD PTR tv185[ebp], eax
	jmp	SHORT $LN66@lGetBuyabl
$LN68@lGetBuyabl:
	mov	DWORD PTR tv185[ebp], 0
$LN66@lGetBuyabl:
	mov	edx, DWORD PTR tv185[ebp]
	mov	DWORD PTR _pkPlot$221684[ebp], edx

; 1861 : 			CvLuaPlot::Push(L, pkPlot);

	mov	eax, DWORD PTR _pkPlot$221684[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8

; 1862 : 			iReturnValues++;

	mov	edx, DWORD PTR _iReturnValues$[ebp]
	add	edx, 1
	mov	DWORD PTR _iReturnValues$[ebp], edx

; 1863 : 		}
; 1864 : 		else

	jmp	SHORT $LN1@lGetBuyabl
$LN2@lGetBuyabl:

; 1865 : 		{
; 1866 : 			break;

	jmp	SHORT $LN3@lGetBuyabl
$LN1@lGetBuyabl:

; 1867 : 		}
; 1868 : 	}

	jmp	$LN4@lGetBuyabl
$LN3@lGetBuyabl:

; 1869 : 
; 1870 : 	return iReturnValues;

	mov	eax, DWORD PTR _iReturnValues$[ebp]
	mov	DWORD PTR $T225450[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _aiPlotList$[ebp]
	call	?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T225450[ebp]

; 1871 : #endif
; 1872 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _aiPlotList$[ebp]
	jmp	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
__unwindfunclet$?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z$3:
	lea	ecx, DWORD PTR _aiPlotList$[ebp]
	jmp	??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ
__ehhandler$?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-156]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuyablePlotList
EXTRN	?GetBuyPlotCost@CvCity@@QBEHHH@Z:PROC		; CvCity::GetBuyPlotCost
; Function compile flags: /Odtp
;	COMDAT ?lGetBuyPlotCost@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iX$ = -12						; size = 4
_pkCity$ = -8						; size = 4
_iY$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetBuyPlotCost@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetBuyPlotCost, COMDAT

; 1877 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1878 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1879 : 	const int iX = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iX$[ebp], eax

; 1880 : 	const int iY = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iY$[ebp], eax

; 1881 : 	lua_pushinteger(L, pkCity->GetBuyPlotCost(iX, iY));

	mov	eax, DWORD PTR _iY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iX$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetBuyPlotCost@CvCity@@QBEHHH@Z	; CvCity::GetBuyPlotCost
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 1882 : 	return 1;

	mov	eax, 1

; 1883 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBuyPlotCost@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetBuyPlotCost
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
EXTRN	?GetGarrisonedUnit@CvCity@@QBEPAVCvUnit@@XZ:PROC ; CvCity::GetGarrisonedUnit
; Function compile flags: /Odtp
;	COMDAT ?lGetGarrisonedUnit@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkUnit$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetGarrisonedUnit@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetGarrisonedUnit, COMDAT

; 1888 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1889 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1890 : 	CvUnit* pkUnit = pkCity->GetGarrisonedUnit();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetGarrisonedUnit@CvCity@@QBEPAVCvUnit@@XZ ; CvCity::GetGarrisonedUnit
	mov	DWORD PTR _pkUnit$[ebp], eax

; 1891 : 	CvLuaUnit::Push(L, pkUnit);

	mov	ecx, DWORD PTR _pkUnit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
	add	esp, 8

; 1892 : 	return 1;

	mov	eax, 1

; 1893 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetGarrisonedUnit@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetGarrisonedUnit
_TEXT	ENDS
EXTRN	?getGameTurnFounded@CvCity@@QBEHXZ:PROC		; CvCity::getGameTurnFounded
; Function compile flags: /Odtp
;	COMDAT ?lGetGameTurnFounded@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGameTurnFounded@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetGameTurnFounded, COMDAT

; 1898 : {

	push	ebp
	mov	ebp, esp

; 1899 : 	return BasicLuaMethod(L, &CvCity::getGameTurnFounded);

	push	OFFSET ?getGameTurnFounded@CvCity@@QBEHXZ ; CvCity::getGameTurnFounded
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1900 : }

	pop	ebp
	ret	0
?lGetGameTurnFounded@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetGameTurnFounded
_TEXT	ENDS
EXTRN	?getGameTurnAcquired@CvCity@@QBEHXZ:PROC	; CvCity::getGameTurnAcquired
; Function compile flags: /Odtp
;	COMDAT ?lGetGameTurnAcquired@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGameTurnAcquired@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetGameTurnAcquired, COMDAT

; 1904 : {

	push	ebp
	mov	ebp, esp

; 1905 : 	return BasicLuaMethod(L, &CvCity::getGameTurnAcquired);

	push	OFFSET ?getGameTurnAcquired@CvCity@@QBEHXZ ; CvCity::getGameTurnAcquired
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1906 : }

	pop	ebp
	ret	0
?lGetGameTurnAcquired@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetGameTurnAcquired
_TEXT	ENDS
EXTRN	?getGameTurnLastExpanded@CvCity@@QBEHXZ:PROC	; CvCity::getGameTurnLastExpanded
; Function compile flags: /Odtp
;	COMDAT ?lGetGameTurnLastExpanded@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGameTurnLastExpanded@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetGameTurnLastExpanded, COMDAT

; 1910 : {

	push	ebp
	mov	ebp, esp

; 1911 : 	return BasicLuaMethod(L, &CvCity::getGameTurnLastExpanded);

	push	OFFSET ?getGameTurnLastExpanded@CvCity@@QBEHXZ ; CvCity::getGameTurnLastExpanded
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1912 : }

	pop	ebp
	ret	0
?lGetGameTurnLastExpanded@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetGameTurnLastExpanded
_TEXT	ENDS
EXTRN	?getPopulation@CvCity@@QBEHXZ:PROC		; CvCity::getPopulation
; Function compile flags: /Odtp
;	COMDAT ?lGetPopulation@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPopulation@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetPopulation, COMDAT

; 1916 : {

	push	ebp
	mov	ebp, esp

; 1917 : 	return BasicLuaMethod(L, &CvCity::getPopulation);

	push	OFFSET ?getPopulation@CvCity@@QBEHXZ	; CvCity::getPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1918 : }

	pop	ebp
	ret	0
?lGetPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetPopulation
_TEXT	ENDS
EXTRN	?setPopulation@CvCity@@QAEXH_N@Z:PROC		; CvCity::setPopulation
; Function compile flags: /Odtp
;	COMDAT ?lSetPopulation@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bReassignPop$ = -12					; size = 4
_pkCity$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lSetPopulation@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lSetPopulation, COMDAT

; 1922 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1923 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1924 : 	int iValue = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iValue$[ebp], eax

; 1925 : 	int bReassignPop = lua_toboolean(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	mov	DWORD PTR _bReassignPop$[ebp], eax

; 1926 : 	CvAssertMsg(bReassignPop != 0, "It is super dangerous to set this to false.  Ken would love to see why you are doing this.");
; 1927 : 	pkCity->setPopulation(iValue, bReassignPop);

	cmp	DWORD PTR _bReassignPop$[ebp], 0
	setne	al
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _iValue$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?setPopulation@CvCity@@QAEXH_N@Z	; CvCity::setPopulation

; 1928 : 
; 1929 : 	return 1;

	mov	eax, 1

; 1930 : //	return BasicLuaMethod(L, &CvCity::setPopulation);
; 1931 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lSetPopulation
_TEXT	ENDS
EXTRN	?changePopulation@CvCity@@QAEXH_N@Z:PROC	; CvCity::changePopulation
; Function compile flags: /Odtp
;	COMDAT ?lChangePopulation@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iChange$ = -12						; size = 4
_bReassignPop$ = -8					; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lChangePopulation@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lChangePopulation, COMDAT

; 1935 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1936 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1937 : 	int iChange = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iChange$[ebp], eax

; 1938 : 	int bReassignPop = lua_toboolean(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	mov	DWORD PTR _bReassignPop$[ebp], eax

; 1939 : 	CvAssertMsg(bReassignPop != 0, "It is super dangerous to set this to false.  Ken would love to see why you are doing this.");
; 1940 : 	pkCity->changePopulation(iChange, bReassignPop);

	cmp	DWORD PTR _bReassignPop$[ebp], 0
	setne	al
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _iChange$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?changePopulation@CvCity@@QAEXH_N@Z	; CvCity::changePopulation

; 1941 : 
; 1942 : 	return 1;

	mov	eax, 1

; 1943 : //	return BasicLuaMethod(L, &CvCity::changePopulation);
; 1944 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChangePopulation@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lChangePopulation
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@J@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEJXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<long>
EXTRN	?getRealPopulation@CvCity@@QBEJXZ:PROC		; CvCity::getRealPopulation
; Function compile flags: /Odtp
;	COMDAT ?lGetRealPopulation@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRealPopulation@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetRealPopulation, COMDAT

; 1948 : {

	push	ebp
	mov	ebp, esp

; 1949 : 	return BasicLuaMethod(L, &CvCity::getRealPopulation);

	push	OFFSET ?getRealPopulation@CvCity@@QBEJXZ ; CvCity::getRealPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@J@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEJXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<long>
	add	esp, 8

; 1950 : }

	pop	ebp
	ret	0
?lGetRealPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetRealPopulation
_TEXT	ENDS
EXTRN	?getHighestPopulation@CvCity@@QBEHXZ:PROC	; CvCity::getHighestPopulation
; Function compile flags: /Odtp
;	COMDAT ?lGetHighestPopulation@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHighestPopulation@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetHighestPopulation, COMDAT

; 1954 : {

	push	ebp
	mov	ebp, esp

; 1955 : 	return BasicLuaMethod(L, &CvCity::getHighestPopulation);

	push	OFFSET ?getHighestPopulation@CvCity@@QBEHXZ ; CvCity::getHighestPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1956 : }

	pop	ebp
	ret	0
?lGetHighestPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetHighestPopulation
_TEXT	ENDS
EXTRN	?setHighestPopulation@CvCity@@QAEXH@Z:PROC	; CvCity::setHighestPopulation
; Function compile flags: /Odtp
;	COMDAT ?lSetHighestPopulation@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetHighestPopulation@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetHighestPopulation, COMDAT

; 1960 : {

	push	ebp
	mov	ebp, esp

; 1961 : 	return BasicLuaMethod(L, &CvCity::setHighestPopulation);

	push	OFFSET ?setHighestPopulation@CvCity@@QAEXH@Z ; CvCity::setHighestPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1962 : }

	pop	ebp
	ret	0
?lSetHighestPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetHighestPopulation
_TEXT	ENDS
EXTRN	?getNumGreatPeople@CvCity@@QBEHXZ:PROC		; CvCity::getNumGreatPeople
; Function compile flags: /Odtp
;	COMDAT ?lGetNumGreatPeople@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumGreatPeople@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetNumGreatPeople, COMDAT

; 1978 : {

	push	ebp
	mov	ebp, esp

; 1979 : 	return BasicLuaMethod(L, &CvCity::getNumGreatPeople);

	push	OFFSET ?getNumGreatPeople@CvCity@@QBEHXZ ; CvCity::getNumGreatPeople
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1980 : }

	pop	ebp
	ret	0
?lGetNumGreatPeople@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetNumGreatPeople
_TEXT	ENDS
EXTRN	?getBaseGreatPeopleRate@CvCity@@QBEHXZ:PROC	; CvCity::getBaseGreatPeopleRate
; Function compile flags: /Odtp
;	COMDAT ?lGetBaseGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBaseGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBaseGreatPeopleRate, COMDAT

; 1984 : {

	push	ebp
	mov	ebp, esp

; 1985 : 	return BasicLuaMethod(L, &CvCity::getBaseGreatPeopleRate);

	push	OFFSET ?getBaseGreatPeopleRate@CvCity@@QBEHXZ ; CvCity::getBaseGreatPeopleRate
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1986 : }

	pop	ebp
	ret	0
?lGetBaseGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBaseGreatPeopleRate
_TEXT	ENDS
EXTRN	?getGreatPeopleRate@CvCity@@QBEHXZ:PROC		; CvCity::getGreatPeopleRate
; Function compile flags: /Odtp
;	COMDAT ?lGetGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetGreatPeopleRate, COMDAT

; 1990 : {

	push	ebp
	mov	ebp, esp

; 1991 : 	return BasicLuaMethod(L, &CvCity::getGreatPeopleRate);

	push	OFFSET ?getGreatPeopleRate@CvCity@@QBEHXZ ; CvCity::getGreatPeopleRate
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1992 : }

	pop	ebp
	ret	0
?lGetGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetGreatPeopleRate
_TEXT	ENDS
EXTRN	?getTotalGreatPeopleRateModifier@CvCity@@QBEHXZ:PROC ; CvCity::getTotalGreatPeopleRateModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetTotalGreatPeopleRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalGreatPeopleRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetTotalGreatPeopleRateModifier, COMDAT

; 1996 : {

	push	ebp
	mov	ebp, esp

; 1997 : 	return BasicLuaMethod(L, &CvCity::getTotalGreatPeopleRateModifier);

	push	OFFSET ?getTotalGreatPeopleRateModifier@CvCity@@QBEHXZ ; CvCity::getTotalGreatPeopleRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1998 : }

	pop	ebp
	ret	0
?lGetTotalGreatPeopleRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetTotalGreatPeopleRateModifier
_TEXT	ENDS
EXTRN	?changeBaseGreatPeopleRate@CvCity@@QAEXH@Z:PROC	; CvCity::changeBaseGreatPeopleRate
; Function compile flags: /Odtp
;	COMDAT ?lChangeBaseGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeBaseGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeBaseGreatPeopleRate, COMDAT

; 2002 : {

	push	ebp
	mov	ebp, esp

; 2003 : 	return BasicLuaMethod(L, &CvCity::changeBaseGreatPeopleRate);

	push	OFFSET ?changeBaseGreatPeopleRate@CvCity@@QAEXH@Z ; CvCity::changeBaseGreatPeopleRate
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2004 : }

	pop	ebp
	ret	0
?lChangeBaseGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeBaseGreatPeopleRate
_TEXT	ENDS
EXTRN	?getGreatPeopleRateModifier@CvCity@@QBEHXZ:PROC	; CvCity::getGreatPeopleRateModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetGreatPeopleRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatPeopleRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetGreatPeopleRateModifier, COMDAT

; 2008 : {

	push	ebp
	mov	ebp, esp

; 2009 : 	return BasicLuaMethod(L, &CvCity::getGreatPeopleRateModifier);

	push	OFFSET ?getGreatPeopleRateModifier@CvCity@@QBEHXZ ; CvCity::getGreatPeopleRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2010 : }

	pop	ebp
	ret	0
?lGetGreatPeopleRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetGreatPeopleRateModifier
_TEXT	ENDS
EXTRN	?GetJONSCultureStored@CvCity@@QBEHXZ:PROC	; CvCity::GetJONSCultureStored
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCultureStored, COMDAT

; 2014 : {

	push	ebp
	mov	ebp, esp

; 2015 : 	return BasicLuaMethod(L, &CvCity::GetJONSCultureStored);

	push	OFFSET ?GetJONSCultureStored@CvCity@@QBEHXZ ; CvCity::GetJONSCultureStored
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2016 : }

	pop	ebp
	ret	0
?lGetJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCultureStored
_TEXT	ENDS
EXTRN	?SetJONSCultureStored@CvCity@@QAEXH@Z:PROC	; CvCity::SetJONSCultureStored
; Function compile flags: /Odtp
;	COMDAT ?lSetJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetJONSCultureStored, COMDAT

; 2020 : {

	push	ebp
	mov	ebp, esp

; 2021 : 	return BasicLuaMethod(L, &CvCity::SetJONSCultureStored);

	push	OFFSET ?SetJONSCultureStored@CvCity@@QAEXH@Z ; CvCity::SetJONSCultureStored
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2022 : }

	pop	ebp
	ret	0
?lSetJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetJONSCultureStored
_TEXT	ENDS
EXTRN	?ChangeJONSCultureStored@CvCity@@QAEXH@Z:PROC	; CvCity::ChangeJONSCultureStored
; Function compile flags: /Odtp
;	COMDAT ?lChangeJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeJONSCultureStored, COMDAT

; 2026 : {

	push	ebp
	mov	ebp, esp

; 2027 : 	return BasicLuaMethod(L, &CvCity::ChangeJONSCultureStored);

	push	OFFSET ?ChangeJONSCultureStored@CvCity@@QAEXH@Z ; CvCity::ChangeJONSCultureStored
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2028 : }

	pop	ebp
	ret	0
?lChangeJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeJONSCultureStored
_TEXT	ENDS
EXTRN	?GetJONSCultureStoredTimes100@CvCity@@QBEHXZ:PROC ; CvCity::GetJONSCultureStoredTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCultureStoredTimes100, COMDAT

; 2031 : {

	push	ebp
	mov	ebp, esp

; 2032 : 	return BasicLuaMethod(L, &CvCity::GetJONSCultureStoredTimes100);

	push	OFFSET ?GetJONSCultureStoredTimes100@CvCity@@QBEHXZ ; CvCity::GetJONSCultureStoredTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2033 : }

	pop	ebp
	ret	0
?lGetJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCultureStoredTimes100
_TEXT	ENDS
EXTRN	?SetJONSCultureStoredTimes100@CvCity@@QAEXH@Z:PROC ; CvCity::SetJONSCultureStoredTimes100
; Function compile flags: /Odtp
;	COMDAT ?lSetJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetJONSCultureStoredTimes100, COMDAT

; 2035 : {

	push	ebp
	mov	ebp, esp

; 2036 : 	return BasicLuaMethod(L, &CvCity::SetJONSCultureStoredTimes100);

	push	OFFSET ?SetJONSCultureStoredTimes100@CvCity@@QAEXH@Z ; CvCity::SetJONSCultureStoredTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2037 : }

	pop	ebp
	ret	0
?lSetJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetJONSCultureStoredTimes100
_TEXT	ENDS
EXTRN	?ChangeJONSCultureStoredTimes100@CvCity@@QAEXH@Z:PROC ; CvCity::ChangeJONSCultureStoredTimes100
; Function compile flags: /Odtp
;	COMDAT ?lChangeJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeJONSCultureStoredTimes100, COMDAT

; 2039 : {

	push	ebp
	mov	ebp, esp

; 2040 : 	return BasicLuaMethod(L, &CvCity::ChangeJONSCultureStoredTimes100);

	push	OFFSET ?ChangeJONSCultureStoredTimes100@CvCity@@QAEXH@Z ; CvCity::ChangeJONSCultureStoredTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2041 : }

	pop	ebp
	ret	0
?lChangeJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeJONSCultureStoredTimes100
_TEXT	ENDS
EXTRN	?getJONSCulturePerTurnTimes100@CvCity@@QBEHXZ:PROC ; CvCity::getJONSCulturePerTurnTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCulturePerTurnTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCulturePerTurnTimes100, COMDAT

; 2043 : {

	push	ebp
	mov	ebp, esp

; 2044 : 	return BasicLuaMethod(L, &CvCity::getJONSCulturePerTurnTimes100);

	push	OFFSET ?getJONSCulturePerTurnTimes100@CvCity@@QBEHXZ ; CvCity::getJONSCulturePerTurnTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2045 : }

	pop	ebp
	ret	0
?lGetJONSCulturePerTurnTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCulturePerTurnTimes100
_TEXT	ENDS
EXTRN	?GetJONSCultureLevel@CvCity@@QBEHXZ:PROC	; CvCity::GetJONSCultureLevel
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCultureLevel, COMDAT

; 2050 : {

	push	ebp
	mov	ebp, esp

; 2051 : 	return BasicLuaMethod(L, &CvCity::GetJONSCultureLevel);

	push	OFFSET ?GetJONSCultureLevel@CvCity@@QBEHXZ ; CvCity::GetJONSCultureLevel
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2052 : }

	pop	ebp
	ret	0
?lGetJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCultureLevel
_TEXT	ENDS
EXTRN	?SetJONSCultureLevel@CvCity@@QAEXH@Z:PROC	; CvCity::SetJONSCultureLevel
; Function compile flags: /Odtp
;	COMDAT ?lSetJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetJONSCultureLevel, COMDAT

; 2056 : {

	push	ebp
	mov	ebp, esp

; 2057 : 	return BasicLuaMethod(L, &CvCity::SetJONSCultureLevel);

	push	OFFSET ?SetJONSCultureLevel@CvCity@@QAEXH@Z ; CvCity::SetJONSCultureLevel
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2058 : }

	pop	ebp
	ret	0
?lSetJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetJONSCultureLevel
_TEXT	ENDS
EXTRN	?ChangeJONSCultureLevel@CvCity@@QAEXH@Z:PROC	; CvCity::ChangeJONSCultureLevel
; Function compile flags: /Odtp
;	COMDAT ?lChangeJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeJONSCultureLevel, COMDAT

; 2062 : {

	push	ebp
	mov	ebp, esp

; 2063 : 	return BasicLuaMethod(L, &CvCity::ChangeJONSCultureLevel);

	push	OFFSET ?ChangeJONSCultureLevel@CvCity@@QAEXH@Z ; CvCity::ChangeJONSCultureLevel
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2064 : }

	pop	ebp
	ret	0
?lChangeJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeJONSCultureLevel
_TEXT	ENDS
PUBLIC	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod
EXTRN	?DoJONSCultureLevelIncrease@CvCity@@QAEXXZ:PROC	; CvCity::DoJONSCultureLevelIncrease
; Function compile flags: /Odtp
;	COMDAT ?lDoJONSCultureLevelIncrease@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoJONSCultureLevelIncrease@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lDoJONSCultureLevelIncrease, COMDAT

; 2068 : {

	push	ebp
	mov	ebp, esp

; 2069 : 	return BasicLuaMethod(L, &CvCity::DoJONSCultureLevelIncrease);

	push	OFFSET ?DoJONSCultureLevelIncrease@CvCity@@QAEXXZ ; CvCity::DoJONSCultureLevelIncrease
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod
	add	esp, 8

; 2070 : }

	pop	ebp
	ret	0
?lDoJONSCultureLevelIncrease@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lDoJONSCultureLevelIncrease
_TEXT	ENDS
EXTRN	?GetJONSCultureThreshold@CvCity@@QBEHXZ:PROC	; CvCity::GetJONSCultureThreshold
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCultureThreshold@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCultureThreshold@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCultureThreshold, COMDAT

; 2074 : {

	push	ebp
	mov	ebp, esp

; 2075 : 	return BasicLuaMethod(L, &CvCity::GetJONSCultureThreshold);

	push	OFFSET ?GetJONSCultureThreshold@CvCity@@QBEHXZ ; CvCity::GetJONSCultureThreshold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2076 : }

	pop	ebp
	ret	0
?lGetJONSCultureThreshold@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCultureThreshold
_TEXT	ENDS
EXTRN	?getJONSCulturePerTurn@CvCity@@QBEHXZ:PROC	; CvCity::getJONSCulturePerTurn
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCulturePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCulturePerTurn, COMDAT

; 2081 : {

	push	ebp
	mov	ebp, esp

; 2082 : 	return BasicLuaMethod(L, &CvCity::getJONSCulturePerTurn);

	push	OFFSET ?getJONSCulturePerTurn@CvCity@@QBEHXZ ; CvCity::getJONSCulturePerTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2083 : }

	pop	ebp
	ret	0
?lGetJONSCulturePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCulturePerTurn
_TEXT	ENDS
EXTRN	?GetBaseJONSCulturePerTurn@CvCity@@QBEHXZ:PROC	; CvCity::GetBaseJONSCulturePerTurn
; Function compile flags: /Odtp
;	COMDAT ?lGetBaseJONSCulturePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBaseJONSCulturePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBaseJONSCulturePerTurn, COMDAT

; 2087 : {

	push	ebp
	mov	ebp, esp

; 2088 : 	return BasicLuaMethod(L, &CvCity::GetBaseJONSCulturePerTurn);

	push	OFFSET ?GetBaseJONSCulturePerTurn@CvCity@@QBEHXZ ; CvCity::GetBaseJONSCulturePerTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2089 : }

	pop	ebp
	ret	0
?lGetBaseJONSCulturePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBaseJONSCulturePerTurn
_TEXT	ENDS
EXTRN	?GetJONSCulturePerTurnFromBuildings@CvCity@@QBEHXZ:PROC ; CvCity::GetJONSCulturePerTurnFromBuildings
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCulturePerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCulturePerTurnFromBuildings, COMDAT

; 2093 : {

	push	ebp
	mov	ebp, esp

; 2094 : 	return BasicLuaMethod(L, &CvCity::GetJONSCulturePerTurnFromBuildings);

	push	OFFSET ?GetJONSCulturePerTurnFromBuildings@CvCity@@QBEHXZ ; CvCity::GetJONSCulturePerTurnFromBuildings
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2095 : }

	pop	ebp
	ret	0
?lGetJONSCulturePerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCulturePerTurnFromBuildings
_TEXT	ENDS
EXTRN	?ChangeJONSCulturePerTurnFromBuildings@CvCity@@QAEXH@Z:PROC ; CvCity::ChangeJONSCulturePerTurnFromBuildings
; Function compile flags: /Odtp
;	COMDAT ?lChangeJONSCulturePerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeJONSCulturePerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeJONSCulturePerTurnFromBuildings, COMDAT

; 2099 : {

	push	ebp
	mov	ebp, esp

; 2100 : 	return BasicLuaMethod(L, &CvCity::ChangeJONSCulturePerTurnFromBuildings);

	push	OFFSET ?ChangeJONSCulturePerTurnFromBuildings@CvCity@@QAEXH@Z ; CvCity::ChangeJONSCulturePerTurnFromBuildings
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2101 : }

	pop	ebp
	ret	0
?lChangeJONSCulturePerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeJONSCulturePerTurnFromBuildings
_TEXT	ENDS
EXTRN	?GetJONSCulturePerTurnFromPolicies@CvCity@@QBEHXZ:PROC ; CvCity::GetJONSCulturePerTurnFromPolicies
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCulturePerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCulturePerTurnFromPolicies, COMDAT

; 2105 : {

	push	ebp
	mov	ebp, esp

; 2106 : 	return BasicLuaMethod(L, &CvCity::GetJONSCulturePerTurnFromPolicies);

	push	OFFSET ?GetJONSCulturePerTurnFromPolicies@CvCity@@QBEHXZ ; CvCity::GetJONSCulturePerTurnFromPolicies
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2107 : }

	pop	ebp
	ret	0
?lGetJONSCulturePerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCulturePerTurnFromPolicies
_TEXT	ENDS
EXTRN	?ChangeJONSCulturePerTurnFromPolicies@CvCity@@QAEXH@Z:PROC ; CvCity::ChangeJONSCulturePerTurnFromPolicies
; Function compile flags: /Odtp
;	COMDAT ?lChangeJONSCulturePerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeJONSCulturePerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeJONSCulturePerTurnFromPolicies, COMDAT

; 2111 : {

	push	ebp
	mov	ebp, esp

; 2112 : 	return BasicLuaMethod(L, &CvCity::ChangeJONSCulturePerTurnFromPolicies);

	push	OFFSET ?ChangeJONSCulturePerTurnFromPolicies@CvCity@@QAEXH@Z ; CvCity::ChangeJONSCulturePerTurnFromPolicies
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2113 : }

	pop	ebp
	ret	0
?lChangeJONSCulturePerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeJONSCulturePerTurnFromPolicies
_TEXT	ENDS
EXTRN	?GetJONSCulturePerTurnFromSpecialists@CvCity@@QBEHXZ:PROC ; CvCity::GetJONSCulturePerTurnFromSpecialists
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCulturePerTurnFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCulturePerTurnFromSpecialists, COMDAT

; 2117 : {

	push	ebp
	mov	ebp, esp

; 2118 : 	return BasicLuaMethod(L, &CvCity::GetJONSCulturePerTurnFromSpecialists);

	push	OFFSET ?GetJONSCulturePerTurnFromSpecialists@CvCity@@QBEHXZ ; CvCity::GetJONSCulturePerTurnFromSpecialists
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2119 : }

	pop	ebp
	ret	0
?lGetJONSCulturePerTurnFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCulturePerTurnFromSpecialists
_TEXT	ENDS
EXTRN	?ChangeJONSCulturePerTurnFromSpecialists@CvCity@@QAEXH@Z:PROC ; CvCity::ChangeJONSCulturePerTurnFromSpecialists
; Function compile flags: /Odtp
;	COMDAT ?lChangeJONSCulturePerTurnFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeJONSCulturePerTurnFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeJONSCulturePerTurnFromSpecialists, COMDAT

; 2123 : {

	push	ebp
	mov	ebp, esp

; 2124 : 	return BasicLuaMethod(L, &CvCity::ChangeJONSCulturePerTurnFromSpecialists);

	push	OFFSET ?ChangeJONSCulturePerTurnFromSpecialists@CvCity@@QAEXH@Z ; CvCity::ChangeJONSCulturePerTurnFromSpecialists
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2125 : }

	pop	ebp
	ret	0
?lChangeJONSCulturePerTurnFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeJONSCulturePerTurnFromSpecialists
_TEXT	ENDS
EXTRN	?GetJONSCulturePerTurnFromGreatWorks@CvCity@@QBEHXZ:PROC ; CvCity::GetJONSCulturePerTurnFromGreatWorks
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCulturePerTurnFromGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCulturePerTurnFromGreatWorks, COMDAT

; 2129 : {

	push	ebp
	mov	ebp, esp

; 2130 : 	return BasicLuaMethod(L, &CvCity::GetJONSCulturePerTurnFromGreatWorks);

	push	OFFSET ?GetJONSCulturePerTurnFromGreatWorks@CvCity@@QBEHXZ ; CvCity::GetJONSCulturePerTurnFromGreatWorks
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2131 : }

	pop	ebp
	ret	0
?lGetJONSCulturePerTurnFromGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCulturePerTurnFromGreatWorks
_TEXT	ENDS
EXTRN	?GetJONSCulturePerTurnFromTraits@CvCity@@QBEHXZ:PROC ; CvCity::GetJONSCulturePerTurnFromTraits
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCulturePerTurnFromTraits@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromTraits@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCulturePerTurnFromTraits, COMDAT

; 2135 : {

	push	ebp
	mov	ebp, esp

; 2136 : 	return BasicLuaMethod(L, &CvCity::GetJONSCulturePerTurnFromTraits);

	push	OFFSET ?GetJONSCulturePerTurnFromTraits@CvCity@@QBEHXZ ; CvCity::GetJONSCulturePerTurnFromTraits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2137 : }

	pop	ebp
	ret	0
?lGetJONSCulturePerTurnFromTraits@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCulturePerTurnFromTraits
_TEXT	ENDS
EXTRN	?GetJONSCulturePerTurnFromReligion@CvCity@@QBEHXZ:PROC ; CvCity::GetJONSCulturePerTurnFromReligion
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCulturePerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCulturePerTurnFromReligion, COMDAT

; 2141 : {

	push	ebp
	mov	ebp, esp

; 2142 : 	return BasicLuaMethod(L, &CvCity::GetJONSCulturePerTurnFromReligion);

	push	OFFSET ?GetJONSCulturePerTurnFromReligion@CvCity@@QBEHXZ ; CvCity::GetJONSCulturePerTurnFromReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2143 : }

	pop	ebp
	ret	0
?lGetJONSCulturePerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCulturePerTurnFromReligion
_TEXT	ENDS
PUBLIC	?lChangeJONSCulturePerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCulturePerTurnFromReligion
EXTRN	?ChangeJONSCulturePerTurnFromReligion@CvCity@@QAEXH@Z:PROC ; CvCity::ChangeJONSCulturePerTurnFromReligion
; Function compile flags: /Odtp
;	COMDAT ?lChangeJONSCulturePerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeJONSCulturePerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeJONSCulturePerTurnFromReligion, COMDAT

; 2147 : {

	push	ebp
	mov	ebp, esp

; 2148 : 	return BasicLuaMethod(L, &CvCity::ChangeJONSCulturePerTurnFromReligion);

	push	OFFSET ?ChangeJONSCulturePerTurnFromReligion@CvCity@@QAEXH@Z ; CvCity::ChangeJONSCulturePerTurnFromReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2149 : }

	pop	ebp
	ret	0
?lChangeJONSCulturePerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeJONSCulturePerTurnFromReligion
_TEXT	ENDS
EXTRN	?GetJONSCulturePerTurnFromLeagues@CvCity@@QBEHXZ:PROC ; CvCity::GetJONSCulturePerTurnFromLeagues
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCulturePerTurnFromLeagues@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromLeagues@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCulturePerTurnFromLeagues, COMDAT

; 2153 : {

	push	ebp
	mov	ebp, esp

; 2154 : 	return BasicLuaMethod(L, &CvCity::GetJONSCulturePerTurnFromLeagues);

	push	OFFSET ?GetJONSCulturePerTurnFromLeagues@CvCity@@QBEHXZ ; CvCity::GetJONSCulturePerTurnFromLeagues
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2155 : }

	pop	ebp
	ret	0
?lGetJONSCulturePerTurnFromLeagues@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCulturePerTurnFromLeagues
_TEXT	ENDS
EXTRN	?getCultureRateModifier@CvCity@@QBEHXZ:PROC	; CvCity::getCultureRateModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetCultureRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCultureRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetCultureRateModifier, COMDAT

; 2159 : {

	push	ebp
	mov	ebp, esp

; 2160 : 	return BasicLuaMethod(L, &CvCity::getCultureRateModifier);

	push	OFFSET ?getCultureRateModifier@CvCity@@QBEHXZ ; CvCity::getCultureRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2161 : }

	pop	ebp
	ret	0
?lGetCultureRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetCultureRateModifier
_TEXT	ENDS
EXTRN	?changeCultureRateModifier@CvCity@@QAEXH@Z:PROC	; CvCity::changeCultureRateModifier
; Function compile flags: /Odtp
;	COMDAT ?lChangeCultureRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeCultureRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeCultureRateModifier, COMDAT

; 2165 : {

	push	ebp
	mov	ebp, esp

; 2166 : 	return BasicLuaMethod(L, &CvCity::changeCultureRateModifier);

	push	OFFSET ?changeCultureRateModifier@CvCity@@QAEXH@Z ; CvCity::changeCultureRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2167 : }

	pop	ebp
	ret	0
?lChangeCultureRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeCultureRateModifier
_TEXT	ENDS
EXTRN	?GetNumGreatWorks@CvCityCulture@@QBEHXZ:PROC	; CvCityCulture::GetNumGreatWorks
EXTRN	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ:PROC ; CvCity::GetCityCulture
; Function compile flags: /Odtp
;	COMDAT ?lGetNumGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetNumGreatWorks, COMDAT

; 2171 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2172 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2173 : 	lua_pushinteger(L, pkCity->GetCityCulture()->GetNumGreatWorks());

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetNumGreatWorks@CvCityCulture@@QBEHXZ	; CvCityCulture::GetNumGreatWorks
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2174 : 	return 1;

	mov	eax, 1

; 2175 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetNumGreatWorks
_TEXT	ENDS
EXTRN	?GetNumGreatWorkSlots@CvCityCulture@@QBEHXZ:PROC ; CvCityCulture::GetNumGreatWorkSlots
; Function compile flags: /Odtp
;	COMDAT ?lGetNumGreatWorkSlots@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumGreatWorkSlots@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumGreatWorkSlots, COMDAT

; 2179 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2180 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2181 : 	lua_pushinteger(L, pkCity->GetCityCulture()->GetNumGreatWorkSlots());

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetNumGreatWorkSlots@CvCityCulture@@QBEHXZ ; CvCityCulture::GetNumGreatWorkSlots
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2182 : 	return 1;

	mov	eax, 1

; 2183 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumGreatWorkSlots@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumGreatWorkSlots
_TEXT	ENDS
EXTRN	?GetBaseTourism@CvCityCulture@@QAEHXZ:PROC	; CvCityCulture::GetBaseTourism
; Function compile flags: /Odtp
;	COMDAT ?lGetBaseTourism@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetBaseTourism@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetBaseTourism, COMDAT

; 2187 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2188 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2189 : 	lua_pushinteger(L, pkCity->GetCityCulture()->GetBaseTourism());

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetBaseTourism@CvCityCulture@@QAEHXZ	; CvCityCulture::GetBaseTourism
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2190 : 	return 1;

	mov	eax, 1

; 2191 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBaseTourism@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetBaseTourism
_TEXT	ENDS
EXTRN	?GetTourismMultiplier@CvCityCulture@@QBEHW4PlayerTypes@@_N1111@Z:PROC ; CvCityCulture::GetTourismMultiplier
; Function compile flags: /Odtp
;	COMDAT ?lGetTourismMultiplier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetTourismMultiplier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetTourismMultiplier, COMDAT

; 2195 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2196 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2197 : 	const PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 2198 : 	lua_pushinteger(L, pkCity->GetCityCulture()->GetTourismMultiplier(ePlayer, false, false, false, false, false));

	push	0
	push	0
	push	0
	push	0
	push	0
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetTourismMultiplier@CvCityCulture@@QBEHW4PlayerTypes@@_N1111@Z ; CvCityCulture::GetTourismMultiplier
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 2199 : 	return 1;

	mov	eax, 1

; 2200 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTourismMultiplier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetTourismMultiplier
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z:PROC
EXTRN	?GetTourismTooltip@CvCityCulture@@QAE?AVCvString@@XZ:PROC ; CvCityCulture::GetTourismTooltip
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv129 = -88						; size = 4
$T225764 = -84						; size = 4
$T225754 = -80						; size = 4
$T225753 = -76						; size = 28
_toolTip$ = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
_pkCity$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetTourismTooltip, COMDAT

; 2204 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2205 : 	CvString toolTip;

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2206 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2207 : 	toolTip = pkCity->GetCityCulture()->GetTourismTooltip();

	lea	ecx, DWORD PTR $T225753[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetTourismTooltip@CvCityCulture@@QAE?AVCvString@@XZ ; CvCityCulture::GetTourismTooltip
	mov	DWORD PTR tv129[ebp], eax
	mov	edx, DWORD PTR tv129[ebp]
	mov	DWORD PTR $T225764[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR $T225764[ebp]
	push	eax
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T225753[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2208 : 	lua_pushstring(L, toolTip.c_str());

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 2209 : 	return 1;

	mov	DWORD PTR $T225754[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T225754[ebp]

; 2210 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _toolTip$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR $T225753[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetTourismTooltip
PUBLIC	__$ArrayPad$
EXTRN	?GetFilledSlotsTooltip@CvCityCulture@@QAE?AVCvString@@XZ:PROC ; CvCityCulture::GetFilledSlotsTooltip
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv129 = -88						; size = 4
$T225793 = -84						; size = 4
$T225783 = -80						; size = 4
$T225782 = -76						; size = 28
_toolTip$ = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
_pkCity$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFilledSlotsTooltip, COMDAT

; 2214 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2215 : 	CvString toolTip;

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2216 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2217 : 	toolTip = pkCity->GetCityCulture()->GetFilledSlotsTooltip();

	lea	ecx, DWORD PTR $T225782[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetFilledSlotsTooltip@CvCityCulture@@QAE?AVCvString@@XZ ; CvCityCulture::GetFilledSlotsTooltip
	mov	DWORD PTR tv129[ebp], eax
	mov	edx, DWORD PTR tv129[ebp]
	mov	DWORD PTR $T225793[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR $T225793[ebp]
	push	eax
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T225782[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2218 : 	lua_pushstring(L, toolTip.c_str());

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 2219 : 	return 1;

	mov	DWORD PTR $T225783[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T225783[ebp]

; 2220 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _toolTip$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR $T225782[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFilledSlotsTooltip
PUBLIC	__$ArrayPad$
EXTRN	?GetTotalSlotsTooltip@CvCityCulture@@QAE?AVCvString@@XZ:PROC ; CvCityCulture::GetTotalSlotsTooltip
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv129 = -88						; size = 4
$T225822 = -84						; size = 4
$T225812 = -80						; size = 4
$T225811 = -76						; size = 28
_toolTip$ = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
_pkCity$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetTotalSlotsTooltip, COMDAT

; 2224 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2225 : 	CvString toolTip;

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2226 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2227 : 	toolTip = pkCity->GetCityCulture()->GetTotalSlotsTooltip();

	lea	ecx, DWORD PTR $T225811[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetTotalSlotsTooltip@CvCityCulture@@QAE?AVCvString@@XZ ; CvCityCulture::GetTotalSlotsTooltip
	mov	DWORD PTR tv129[ebp], eax
	mov	edx, DWORD PTR tv129[ebp]
	mov	DWORD PTR $T225822[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR $T225822[ebp]
	push	eax
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T225811[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2228 : 	lua_pushstring(L, toolTip.c_str());

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 2229 : 	return 1;

	mov	DWORD PTR $T225812[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T225812[ebp]

; 2230 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _toolTip$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR $T225811[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetTotalSlotsTooltip
EXTRN	?ClearGreatWorks@CvCityCulture@@QAEXXZ:PROC	; CvCityCulture::ClearGreatWorks
; Function compile flags: /Odtp
;	COMDAT ?lClearGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lClearGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lClearGreatWorks, COMDAT

; 2234 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2235 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2236 : 	pkCity->GetCityCulture()->ClearGreatWorks();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?ClearGreatWorks@CvCityCulture@@QAEXXZ	; CvCityCulture::ClearGreatWorks

; 2237 : 	return 1;

	mov	eax, 1

; 2238 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lClearGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lClearGreatWorks
_TEXT	ENDS
EXTRN	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z:PROC ; CvGameReligions::GetReligion
EXTRN	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ:PROC ; CvGame::GetGameReligions
EXTRN	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ:PROC ; CvCityReligions::GetReligiousMajority
EXTRN	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ:PROC ; CvCity::GetCityReligions
; Function compile flags: /Odtp
;	COMDAT ?lGetFaithBuildingTourism@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T225853 = -24						; size = 4
$T225849 = -20						; size = 4
_eMajority$ = -16					; size = 4
_iRtnValue$ = -12					; size = 4
_pkCity$ = -8						; size = 4
_pReligion$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetFaithBuildingTourism@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFaithBuildingTourism, COMDAT

; 2242 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 2243 : 	int iRtnValue = 0;

	mov	DWORD PTR _iRtnValue$[ebp], 0

; 2244 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2245 : 	ReligionTypes eMajority = pkCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eMajority$[ebp], eax

; 2246 : 	const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eMajority, pkCity->getOwner());

	mov	ecx, DWORD PTR _pkCity$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T225849[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T225853[ebp], eax
	mov	ecx, DWORD PTR $T225849[ebp]
	push	ecx
	mov	edx, DWORD PTR _eMajority$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T225853[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pReligion$[ebp], eax

; 2247 : 	if(pReligion)

	cmp	DWORD PTR _pReligion$[ebp], 0
	je	SHORT $LN1@lGetFaithB

; 2248 : 	{
; 2249 : 		iRtnValue = pReligion->m_Beliefs.GetFaithBuildingTourism();

	mov	eax, DWORD PTR _pReligion$[ebp]
	mov	ecx, DWORD PTR [eax+272]
	mov	DWORD PTR _iRtnValue$[ebp], ecx
$LN1@lGetFaithB:

; 2250 : 	}
; 2251 : 	lua_pushinteger(L, iRtnValue);

	mov	edx, DWORD PTR _iRtnValue$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 2252 : 	return 1;

	mov	eax, 1

; 2253 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetFaithBuildingTourism@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFaithBuildingTourism
_TEXT	ENDS
EXTRN	?IsThemingBonusPossible@CvCityCulture@@QBE_NW4BuildingClassTypes@@@Z:PROC ; CvCityCulture::IsThemingBonusPossible
; Function compile flags: /Odtp
;	COMDAT ?lIsThemingBonusPossible@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bPossible$ = -9					; size = 1
_iIndex$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsThemingBonusPossible@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsThemingBonusPossible, COMDAT

; 2257 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2258 : 	bool bPossible;
; 2259 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2260 : 	const BuildingClassTypes iIndex = toValue<BuildingClassTypes>(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingClassTypes>
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 2261 : 	bPossible = pkCity->GetCityCulture()->IsThemingBonusPossible(iIndex);

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?IsThemingBonusPossible@CvCityCulture@@QBE_NW4BuildingClassTypes@@@Z ; CvCityCulture::IsThemingBonusPossible
	mov	BYTE PTR _bPossible$[ebp], al

; 2262 : 	lua_pushboolean(L, bPossible);

	movzx	eax, BYTE PTR _bPossible$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 2263 : 	return 1;

	mov	eax, 1

; 2264 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsThemingBonusPossible@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsThemingBonusPossible
_TEXT	ENDS
EXTRN	?GetThemingBonus@CvCityCulture@@QBEHW4BuildingClassTypes@@@Z:PROC ; CvCityCulture::GetThemingBonus
; Function compile flags: /Odtp
;	COMDAT ?lGetThemingBonus@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iBonus$ = -12						; size = 4
_iIndex$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetThemingBonus@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetThemingBonus, COMDAT

; 2268 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2269 : 	int iBonus;
; 2270 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2271 : 	const BuildingClassTypes iIndex = toValue<BuildingClassTypes>(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingClassTypes>
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 2272 : 	iBonus = pkCity->GetCityCulture()->GetThemingBonus(iIndex);

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetThemingBonus@CvCityCulture@@QBEHW4BuildingClassTypes@@@Z ; CvCityCulture::GetThemingBonus
	mov	DWORD PTR _iBonus$[ebp], eax

; 2273 : 	lua_pushinteger(L, iBonus);

	mov	eax, DWORD PTR _iBonus$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2274 : 	return 1;

	mov	eax, 1

; 2275 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetThemingBonus@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetThemingBonus
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?GetThemingTooltip@CvCityCulture@@QBE?AVCvString@@W4BuildingClassTypes@@@Z:PROC ; CvCityCulture::GetThemingTooltip
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv133 = -92						; size = 4
$T225875 = -88						; size = 4
$T225865 = -84						; size = 4
$T225864 = -80						; size = 28
_toolTip$ = -52						; size = 28
__$ArrayPad$ = -24					; size = 4
_iIndex$ = -20						; size = 4
_pkCity$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetThemingTooltip, COMDAT

; 2279 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2280 : 	CvString toolTip;

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2281 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2282 : 	const BuildingClassTypes iIndex = toValue<BuildingClassTypes>(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingClassTypes>
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 2283 : 	toolTip = pkCity->GetCityCulture()->GetThemingTooltip(iIndex);

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	lea	eax, DWORD PTR $T225864[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetThemingTooltip@CvCityCulture@@QBE?AVCvString@@W4BuildingClassTypes@@@Z ; CvCityCulture::GetThemingTooltip
	mov	DWORD PTR tv133[ebp], eax
	mov	ecx, DWORD PTR tv133[ebp]
	mov	DWORD PTR $T225875[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR $T225875[ebp]
	push	edx
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T225864[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2284 : 	lua_pushstring(L, toolTip.c_str());

	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 2285 : 	return 1;

	mov	DWORD PTR $T225865[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _toolTip$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T225865[ebp]

; 2286 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _toolTip$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR $T225864[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetThemingTooltip
EXTRN	?GetFaithPerTurn@CvCity@@QBEHXZ:PROC		; CvCity::GetFaithPerTurn
; Function compile flags: /Odtp
;	COMDAT ?lGetFaithPerTurn@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFaithPerTurn@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetFaithPerTurn, COMDAT

; 2290 : {

	push	ebp
	mov	ebp, esp

; 2291 : 	return BasicLuaMethod(L, &CvCity::GetFaithPerTurn);

	push	OFFSET ?GetFaithPerTurn@CvCity@@QBEHXZ	; CvCity::GetFaithPerTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2292 : }

	pop	ebp
	ret	0
?lGetFaithPerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetFaithPerTurn
_TEXT	ENDS
EXTRN	?GetFaithPerTurnFromBuildings@CvCity@@QBEHXZ:PROC ; CvCity::GetFaithPerTurnFromBuildings
; Function compile flags: /Odtp
;	COMDAT ?lGetFaithPerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFaithPerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFaithPerTurnFromBuildings, COMDAT

; 2296 : {

	push	ebp
	mov	ebp, esp

; 2297 : 	return BasicLuaMethod(L, &CvCity::GetFaithPerTurnFromBuildings);

	push	OFFSET ?GetFaithPerTurnFromBuildings@CvCity@@QBEHXZ ; CvCity::GetFaithPerTurnFromBuildings
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2298 : }

	pop	ebp
	ret	0
?lGetFaithPerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFaithPerTurnFromBuildings
_TEXT	ENDS
EXTRN	?GetFaithPerTurnFromPolicies@CvCity@@QBEHXZ:PROC ; CvCity::GetFaithPerTurnFromPolicies
; Function compile flags: /Odtp
;	COMDAT ?lGetFaithPerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFaithPerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFaithPerTurnFromPolicies, COMDAT

; 2302 : {

	push	ebp
	mov	ebp, esp

; 2303 : 	return BasicLuaMethod(L, &CvCity::GetFaithPerTurnFromPolicies);

	push	OFFSET ?GetFaithPerTurnFromPolicies@CvCity@@QBEHXZ ; CvCity::GetFaithPerTurnFromPolicies
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2304 : }

	pop	ebp
	ret	0
?lGetFaithPerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFaithPerTurnFromPolicies
_TEXT	ENDS
EXTRN	?GetFaithPerTurnFromTraits@CvCity@@QBEHXZ:PROC	; CvCity::GetFaithPerTurnFromTraits
; Function compile flags: /Odtp
;	COMDAT ?lGetFaithPerTurnFromTraits@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFaithPerTurnFromTraits@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFaithPerTurnFromTraits, COMDAT

; 2308 : {

	push	ebp
	mov	ebp, esp

; 2309 : 	return BasicLuaMethod(L, &CvCity::GetFaithPerTurnFromTraits);

	push	OFFSET ?GetFaithPerTurnFromTraits@CvCity@@QBEHXZ ; CvCity::GetFaithPerTurnFromTraits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2310 : }

	pop	ebp
	ret	0
?lGetFaithPerTurnFromTraits@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFaithPerTurnFromTraits
_TEXT	ENDS
EXTRN	?GetFaithPerTurnFromReligion@CvCity@@QBEHXZ:PROC ; CvCity::GetFaithPerTurnFromReligion
; Function compile flags: /Odtp
;	COMDAT ?lGetFaithPerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFaithPerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFaithPerTurnFromReligion, COMDAT

; 2314 : {

	push	ebp
	mov	ebp, esp

; 2315 : 	return BasicLuaMethod(L, &CvCity::GetFaithPerTurnFromReligion);

	push	OFFSET ?GetFaithPerTurnFromReligion@CvCity@@QBEHXZ ; CvCity::GetFaithPerTurnFromReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2316 : }

	pop	ebp
	ret	0
?lGetFaithPerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFaithPerTurnFromReligion
_TEXT	ENDS
PUBLIC	?lChangeFaithPerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeFaithPerTurnFromReligion
EXTRN	?ChangeFaithPerTurnFromReligion@CvCity@@QAEXH@Z:PROC ; CvCity::ChangeFaithPerTurnFromReligion
; Function compile flags: /Odtp
;	COMDAT ?lChangeFaithPerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeFaithPerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeFaithPerTurnFromReligion, COMDAT

; 2320 : {

	push	ebp
	mov	ebp, esp

; 2321 : 	return BasicLuaMethod(L, &CvCity::ChangeFaithPerTurnFromReligion);

	push	OFFSET ?ChangeFaithPerTurnFromReligion@CvCity@@QAEXH@Z ; CvCity::ChangeFaithPerTurnFromReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2322 : }

	pop	ebp
	ret	0
?lChangeFaithPerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeFaithPerTurnFromReligion
_TEXT	ENDS
EXTRN	?IsReligionInCity@CvCityReligions@@QAE_NXZ:PROC	; CvCityReligions::IsReligionInCity
; Function compile flags: /Odtp
;	COMDAT ?lIsReligionInCity@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -5						; size = 1
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsReligionInCity@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsReligionInCity, COMDAT

; 2326 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2327 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2328 : 	const bool bResult = pkCity->GetCityReligions()->IsReligionInCity();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?IsReligionInCity@CvCityReligions@@QAE_NXZ ; CvCityReligions::IsReligionInCity
	mov	BYTE PTR _bResult$[ebp], al

; 2329 : 
; 2330 : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 2331 : 	return 1;

	mov	eax, 1

; 2332 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsReligionInCity@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsReligionInCity
_TEXT	ENDS
EXTRN	?IsHolyCityForReligion@CvCityReligions@@QAE_NW4ReligionTypes@@@Z:PROC ; CvCityReligions::IsHolyCityForReligion
; Function compile flags: /Odtp
;	COMDAT ?lIsHolyCityForReligion@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eReligion$ = -12					; size = 4
_bResult$ = -5						; size = 1
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsHolyCityForReligion@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsHolyCityForReligion, COMDAT

; 2336 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2337 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2338 : 	ReligionTypes eReligion = (ReligionTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eReligion$[ebp], eax

; 2339 : 	const bool bResult = pkCity->GetCityReligions()->IsHolyCityForReligion(eReligion);

	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?IsHolyCityForReligion@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ; CvCityReligions::IsHolyCityForReligion
	mov	BYTE PTR _bResult$[ebp], al

; 2340 : 
; 2341 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 2342 : 	return 1;

	mov	eax, 1

; 2343 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsHolyCityForReligion@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsHolyCityForReligion
_TEXT	ENDS
EXTRN	?IsHolyCityAnyReligion@CvCityReligions@@QAE_NXZ:PROC ; CvCityReligions::IsHolyCityAnyReligion
; Function compile flags: /Odtp
;	COMDAT ?lIsHolyCityAnyReligion@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -5						; size = 1
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsHolyCityAnyReligion@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsHolyCityAnyReligion, COMDAT

; 2347 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2348 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2349 : 	const bool bResult = pkCity->GetCityReligions()->IsHolyCityAnyReligion();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?IsHolyCityAnyReligion@CvCityReligions@@QAE_NXZ ; CvCityReligions::IsHolyCityAnyReligion
	mov	BYTE PTR _bResult$[ebp], al

; 2350 : 
; 2351 : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 2352 : 	return 1;

	mov	eax, 1

; 2353 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsHolyCityAnyReligion@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsHolyCityAnyReligion
_TEXT	ENDS
EXTRN	?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z:PROC ; CvCityReligions::GetNumFollowers
; Function compile flags: /Odtp
;	COMDAT ?lGetNumFollowers@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eReligion$ = -12					; size = 4
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumFollowers@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetNumFollowers, COMDAT

; 2357 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2358 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2359 : 	ReligionTypes eReligion = (ReligionTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eReligion$[ebp], eax

; 2360 : 	const int iResult = pkCity->GetCityReligions()->GetNumFollowers(eReligion);

	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumFollowers
	mov	DWORD PTR _iResult$[ebp], eax

; 2361 : 
; 2362 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2363 : 	return 1;

	mov	eax, 1

; 2364 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumFollowers@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetNumFollowers
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetReligiousMajority@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetReligiousMajority@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetReligiousMajority, COMDAT

; 2368 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2369 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2370 : 	const int iResult = (int)pkCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _iResult$[ebp], eax

; 2371 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2372 : 	return 1;

	mov	eax, 1

; 2373 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetReligiousMajority@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetReligiousMajority
_TEXT	ENDS
EXTRN	?GetSecondaryReligion@CvCityReligions@@QAE?AW4ReligionTypes@@XZ:PROC ; CvCityReligions::GetSecondaryReligion
; Function compile flags: /Odtp
;	COMDAT ?lGetSecondaryReligion@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetSecondaryReligion@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSecondaryReligion, COMDAT

; 2377 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2378 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2379 : 	const int iResult = (int)pkCity->GetCityReligions()->GetSecondaryReligion();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetSecondaryReligion@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetSecondaryReligion
	mov	DWORD PTR _iResult$[ebp], eax

; 2380 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2381 : 	return 1;

	mov	eax, 1

; 2382 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetSecondaryReligion@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSecondaryReligion
_TEXT	ENDS
EXTRN	?GetSecondaryReligionPantheonBelief@CvCityReligions@@QAE?AW4BeliefTypes@@XZ:PROC ; CvCityReligions::GetSecondaryReligionPantheonBelief
; Function compile flags: /Odtp
;	COMDAT ?lGetSecondaryReligionPantheonBelief@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetSecondaryReligionPantheonBelief@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSecondaryReligionPantheonBelief, COMDAT

; 2386 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2387 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2388 : 	const int iResult = (int)pkCity->GetCityReligions()->GetSecondaryReligionPantheonBelief();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetSecondaryReligionPantheonBelief@CvCityReligions@@QAE?AW4BeliefTypes@@XZ ; CvCityReligions::GetSecondaryReligionPantheonBelief
	mov	DWORD PTR _iResult$[ebp], eax

; 2389 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2390 : 	return 1;

	mov	eax, 1

; 2391 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetSecondaryReligionPantheonBelief@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSecondaryReligionPantheonBelief
_TEXT	ENDS
EXTRN	?GetPressurePerTurn@CvCityReligions@@QAEHW4ReligionTypes@@AAH@Z:PROC ; CvCityReligions::GetPressurePerTurn
; Function compile flags: /Odtp
;	COMDAT ?lGetPressurePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iNumTradeRoutes$ = -16					; size = 4
_eReligion$ = -12					; size = 4
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetPressurePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetPressurePerTurn, COMDAT

; 2395 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 2396 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2397 : 	ReligionTypes eReligion = (ReligionTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eReligion$[ebp], eax

; 2398 : 	int iNumTradeRoutes;
; 2399 : 	const int iResult = (int)pkCity->GetCityReligions()->GetPressurePerTurn(eReligion, iNumTradeRoutes);

	lea	edx, DWORD PTR _iNumTradeRoutes$[ebp]
	push	edx
	mov	eax, DWORD PTR _eReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetPressurePerTurn@CvCityReligions@@QAEHW4ReligionTypes@@AAH@Z ; CvCityReligions::GetPressurePerTurn
	mov	DWORD PTR _iResult$[ebp], eax

; 2400 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2401 : 	lua_pushinteger(L, iNumTradeRoutes);

	mov	eax, DWORD PTR _iNumTradeRoutes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2402 : 	return 2;

	mov	eax, 2

; 2403 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPressurePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetPressurePerTurn
_TEXT	ENDS
EXTRN	?ConvertPercentFollowers@CvCityReligions@@QAEXW4ReligionTypes@@0H@Z:PROC ; CvCityReligions::ConvertPercentFollowers
; Function compile flags: /Odtp
;	COMDAT ?lConvertPercentFollowers@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eToReligion$ = -16					; size = 4
_eFromReligion$ = -12					; size = 4
_pkCity$ = -8						; size = 4
_iPercent$ = -4						; size = 4
_L$ = 8							; size = 4
?lConvertPercentFollowers@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lConvertPercentFollowers, COMDAT

; 2407 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 2408 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2409 : 	ReligionTypes eToReligion = (ReligionTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eToReligion$[ebp], eax

; 2410 : 	ReligionTypes eFromReligion = (ReligionTypes)lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eFromReligion$[ebp], eax

; 2411 : 	int iPercent = lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iPercent$[ebp], eax

; 2412 : 	pkCity->GetCityReligions()->ConvertPercentFollowers(eToReligion, eFromReligion, iPercent);

	mov	ecx, DWORD PTR _iPercent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eFromReligion$[ebp]
	push	edx
	mov	eax, DWORD PTR _eToReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?ConvertPercentFollowers@CvCityReligions@@QAEXW4ReligionTypes@@0H@Z ; CvCityReligions::ConvertPercentFollowers

; 2413 : 	return 1;

	mov	eax, 1

; 2414 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lConvertPercentFollowers@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lConvertPercentFollowers
_TEXT	ENDS
EXTRN	?AdoptReligionFully@CvCityReligions@@QAEXW4ReligionTypes@@@Z:PROC ; CvCityReligions::AdoptReligionFully
; Function compile flags: /Odtp
;	COMDAT ?lAdoptReligionFully@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eReligion$ = -8					; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lAdoptReligionFully@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lAdoptReligionFully, COMDAT

; 2418 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2419 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2420 : 	ReligionTypes eReligion = (ReligionTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eReligion$[ebp], eax

; 2421 : 	pkCity->GetCityReligions()->AdoptReligionFully(eReligion);

	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?AdoptReligionFully@CvCityReligions@@QAEXW4ReligionTypes@@@Z ; CvCityReligions::AdoptReligionFully

; 2422 : 	return 1;

	mov	eax, 1

; 2423 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lAdoptReligionFully@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lAdoptReligionFully
_TEXT	ENDS
EXTRN	?GetBuildingClassHappiness@CvReligionBeliefs@@QBEHW4BuildingClassTypes@@H@Z:PROC ; CvReligionBeliefs::GetBuildingClassHappiness
; Function compile flags: /Odtp
;	COMDAT ?lGetReligionBuildingClassHappiness@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T225936 = -32						; size = 4
$T225932 = -28						; size = 4
_iFollowers$222036 = -24				; size = 4
_pReligion$222034 = -20					; size = 4
_eMajority$ = -16					; size = 4
_pkCity$ = -12						; size = 4
_eBuildingClass$ = -8					; size = 4
_iHappinessFromBuilding$ = -4				; size = 4
_L$ = 8							; size = 4
?lGetReligionBuildingClassHappiness@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetReligionBuildingClassHappiness, COMDAT

; 2427 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 2428 : 	int iHappinessFromBuilding = 0;

	mov	DWORD PTR _iHappinessFromBuilding$[ebp], 0

; 2429 : 
; 2430 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2431 : 	BuildingClassTypes eBuildingClass = (BuildingClassTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBuildingClass$[ebp], eax

; 2432 : 
; 2433 : 	ReligionTypes eMajority = pkCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eMajority$[ebp], eax

; 2434 : 	if(eMajority != NO_RELIGION)

	cmp	DWORD PTR _eMajority$[ebp], -1
	je	SHORT $LN2@lGetReligi

; 2435 : 	{
; 2436 : 		const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eMajority, pkCity->getOwner());

	mov	edx, DWORD PTR _pkCity$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR $T225932[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T225936[ebp], ecx
	mov	edx, DWORD PTR $T225932[ebp]
	push	edx
	mov	eax, DWORD PTR _eMajority$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T225936[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pReligion$222034[ebp], eax

; 2437 : 		if(pReligion)

	cmp	DWORD PTR _pReligion$222034[ebp], 0
	je	SHORT $LN2@lGetReligi

; 2438 : 		{	
; 2439 : 			int iFollowers = pkCity->GetCityReligions()->GetNumFollowers(eMajority);

	mov	ecx, DWORD PTR _eMajority$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumFollowers
	mov	DWORD PTR _iFollowers$222036[ebp], eax

; 2440 : 			iHappinessFromBuilding += pReligion->m_Beliefs.GetBuildingClassHappiness(eBuildingClass, iFollowers);

	mov	edx, DWORD PTR _iFollowers$222036[ebp]
	push	edx
	mov	eax, DWORD PTR _eBuildingClass$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pReligion$222034[ebp]
	add	ecx, 152				; 00000098H
	call	?GetBuildingClassHappiness@CvReligionBeliefs@@QBEHW4BuildingClassTypes@@H@Z ; CvReligionBeliefs::GetBuildingClassHappiness
	add	eax, DWORD PTR _iHappinessFromBuilding$[ebp]
	mov	DWORD PTR _iHappinessFromBuilding$[ebp], eax
$LN2@lGetReligi:

; 2441 : 		}
; 2442 : 	}
; 2443 : 	lua_pushinteger(L, iHappinessFromBuilding);

	mov	ecx, DWORD PTR _iHappinessFromBuilding$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2444 : 	return 1;

	mov	eax, 1

; 2445 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetReligionBuildingClassHappiness@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetReligionBuildingClassHappiness
_TEXT	ENDS
EXTRN	?GetBuildingClassYieldChange@CvBeliefEntry@@QBEHHH@Z:PROC ; CvBeliefEntry::GetBuildingClassYieldChange
EXTRN	?GetMinFollowers@CvBeliefEntry@@QBEHXZ:PROC	; CvBeliefEntry::GetMinFollowers
EXTRN	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z:PROC ; CvBeliefXMLEntries::GetEntry
EXTRN	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ:PROC ; CvGlobals::GetGameBeliefs
EXTRN	?GetBuildingClassYieldChange@CvReligionBeliefs@@QBEHW4BuildingClassTypes@@W4YieldTypes@@H@Z:PROC ; CvReligionBeliefs::GetBuildingClassYieldChange
; Function compile flags: /Odtp
;	COMDAT ?lGetReligionBuildingClassYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T225951 = -40						; size = 4
$T225947 = -36						; size = 4
_iFollowers$222050 = -32				; size = 4
_eSecondaryPantheon$222051 = -28			; size = 4
_pReligion$222048 = -24					; size = 4
_eYieldType$ = -20					; size = 4
_eMajority$ = -16					; size = 4
_iYieldFromBuilding$ = -12				; size = 4
_pkCity$ = -8						; size = 4
_eBuildingClass$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetReligionBuildingClassYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetReligionBuildingClassYieldChange, COMDAT

; 2449 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H

; 2450 : 	int iYieldFromBuilding = 0;

	mov	DWORD PTR _iYieldFromBuilding$[ebp], 0

; 2451 : 
; 2452 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2453 : 	BuildingClassTypes eBuildingClass = (BuildingClassTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBuildingClass$[ebp], eax

; 2454 : 	YieldTypes eYieldType = (YieldTypes)lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eYieldType$[ebp], eax

; 2455 : 
; 2456 : #ifdef AUI_WARNING_FIXES
; 2457 : 	const CvCityReligions* pCityReligions = pkCity->GetCityReligions();
; 2458 : 	ReligionTypes eMajority = pCityReligions->GetReligiousMajority();
; 2459 : 	if (eMajority != NO_RELIGION)
; 2460 : 	{
; 2461 : 		const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eMajority, pkCity->getOwner());
; 2462 : 		if (pReligion)
; 2463 : 		{
; 2464 : 			int iFollowers = pCityReligions->GetNumFollowers(eMajority);
; 2465 : 			iYieldFromBuilding += pReligion->m_Beliefs.GetBuildingClassYieldChange(eBuildingClass, eYieldType, iFollowers);
; 2466 : 			BeliefTypes eSecondaryPantheon = pCityReligions->GetSecondaryReligionPantheonBelief();
; 2467 : 			if (eSecondaryPantheon != NO_BELIEF)
; 2468 : 			{
; 2469 : 				iFollowers = pCityReligions->GetNumFollowers(pCityReligions->GetSecondaryReligion());
; 2470 : #else
; 2471 : 	ReligionTypes eMajority = pkCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eMajority$[ebp], eax

; 2472 : 	if(eMajority != NO_RELIGION)

	cmp	DWORD PTR _eMajority$[ebp], -1
	je	$LN4@lGetReligi@2

; 2473 : 	{
; 2474 : 		const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eMajority, pkCity->getOwner());

	mov	eax, DWORD PTR _pkCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T225947[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T225951[ebp], edx
	mov	eax, DWORD PTR $T225947[ebp]
	push	eax
	mov	ecx, DWORD PTR _eMajority$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T225951[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pReligion$222048[ebp], eax

; 2475 : 		if(pReligion)

	cmp	DWORD PTR _pReligion$222048[ebp], 0
	je	$LN4@lGetReligi@2

; 2476 : 		{	
; 2477 : 			int iFollowers = pkCity->GetCityReligions()->GetNumFollowers(eMajority);

	mov	edx, DWORD PTR _eMajority$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumFollowers
	mov	DWORD PTR _iFollowers$222050[ebp], eax

; 2478 : 			iYieldFromBuilding += pReligion->m_Beliefs.GetBuildingClassYieldChange(eBuildingClass, eYieldType, iFollowers);

	mov	eax, DWORD PTR _iFollowers$222050[ebp]
	push	eax
	mov	ecx, DWORD PTR _eYieldType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eBuildingClass$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pReligion$222048[ebp]
	add	ecx, 152				; 00000098H
	call	?GetBuildingClassYieldChange@CvReligionBeliefs@@QBEHW4BuildingClassTypes@@W4YieldTypes@@H@Z ; CvReligionBeliefs::GetBuildingClassYieldChange
	add	eax, DWORD PTR _iYieldFromBuilding$[ebp]
	mov	DWORD PTR _iYieldFromBuilding$[ebp], eax

; 2479 : 			BeliefTypes eSecondaryPantheon = pkCity->GetCityReligions()->GetSecondaryReligionPantheonBelief();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetSecondaryReligionPantheonBelief@CvCityReligions@@QAE?AW4BeliefTypes@@XZ ; CvCityReligions::GetSecondaryReligionPantheonBelief
	mov	DWORD PTR _eSecondaryPantheon$222051[ebp], eax

; 2480 : 			if (eSecondaryPantheon != NO_BELIEF)

	cmp	DWORD PTR _eSecondaryPantheon$222051[ebp], -1
	je	SHORT $LN4@lGetReligi@2

; 2481 : 			{
; 2482 : 				iFollowers =  pkCity->GetCityReligions()->GetNumFollowers(pkCity->GetCityReligions()->GetSecondaryReligion());

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetSecondaryReligion@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetSecondaryReligion
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumFollowers
	mov	DWORD PTR _iFollowers$222050[ebp], eax

; 2483 : #endif
; 2484 : 				if (iFollowers >= GC.GetGameBeliefs()->GetEntry(eSecondaryPantheon)->GetMinFollowers())

	mov	eax, DWORD PTR _eSecondaryPantheon$222051[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	ecx, eax
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetMinFollowers@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetMinFollowers
	cmp	DWORD PTR _iFollowers$222050[ebp], eax
	jl	SHORT $LN4@lGetReligi@2

; 2485 : 				{
; 2486 : 					iYieldFromBuilding += GC.GetGameBeliefs()->GetEntry(eSecondaryPantheon)->GetBuildingClassYieldChange(eBuildingClass, eYieldType);

	mov	ecx, DWORD PTR _eYieldType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eBuildingClass$[ebp]
	push	edx
	mov	eax, DWORD PTR _eSecondaryPantheon$222051[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	ecx, eax
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetBuildingClassYieldChange@CvBeliefEntry@@QBEHHH@Z ; CvBeliefEntry::GetBuildingClassYieldChange
	add	eax, DWORD PTR _iYieldFromBuilding$[ebp]
	mov	DWORD PTR _iYieldFromBuilding$[ebp], eax
$LN4@lGetReligi@2:

; 2487 : 				}
; 2488 : 			}
; 2489 : 		}
; 2490 : 	}
; 2491 : 	lua_pushinteger(L, iYieldFromBuilding);

	mov	ecx, DWORD PTR _iYieldFromBuilding$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2492 : 	return 1;

	mov	eax, 1

; 2493 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetReligionBuildingClassYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetReligionBuildingClassYieldChange
_TEXT	ENDS
EXTRN	?GetWorldWonderYieldChange@CvGameLeagues@@QAEHW4PlayerTypes@@W4YieldTypes@@@Z:PROC ; CvGameLeagues::GetWorldWonderYieldChange
EXTRN	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ:PROC ; CvGame::GetGameLeagues
EXTRN	?getMaxGlobalInstances@CvBuildingClassInfo@@QBEHXZ:PROC ; CvBuildingClassInfo::getMaxGlobalInstances
EXTRN	?getBuildingClassInfo@CvGlobals@@QAEPAVCvBuildingClassInfo@@W4BuildingClassTypes@@@Z:PROC ; CvGlobals::getBuildingClassInfo
; Function compile flags: /Odtp
;	COMDAT ?lGetLeagueBuildingClassYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T225966 = -32						; size = 4
$T225962 = -28						; size = 4
_iYieldChange$222065 = -24				; size = 4
_eYieldType$ = -20					; size = 4
_iYieldFromBuilding$ = -16				; size = 4
_pInfo$ = -12						; size = 4
_pkCity$ = -8						; size = 4
_eBuildingClass$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetLeagueBuildingClassYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetLeagueBuildingClassYieldChange, COMDAT

; 2497 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 2498 : 	int iYieldFromBuilding = 0;

	mov	DWORD PTR _iYieldFromBuilding$[ebp], 0

; 2499 : 
; 2500 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2501 : 	BuildingClassTypes eBuildingClass = (BuildingClassTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBuildingClass$[ebp], eax

; 2502 : 	YieldTypes eYieldType = (YieldTypes)lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eYieldType$[ebp], eax

; 2503 : 
; 2504 : 	CvBuildingClassInfo* pInfo = GC.getBuildingClassInfo(eBuildingClass);

	mov	eax, DWORD PTR _eBuildingClass$[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingClassInfo@CvGlobals@@QAEPAVCvBuildingClassInfo@@W4BuildingClassTypes@@@Z ; CvGlobals::getBuildingClassInfo
	mov	DWORD PTR _pInfo$[ebp], eax

; 2505 : 	if (pInfo && pInfo->getMaxGlobalInstances() != -1)

	cmp	DWORD PTR _pInfo$[ebp], 0
	je	SHORT $LN2@lGetLeague
	mov	ecx, DWORD PTR _pInfo$[ebp]
	call	?getMaxGlobalInstances@CvBuildingClassInfo@@QBEHXZ ; CvBuildingClassInfo::getMaxGlobalInstances
	cmp	eax, -1
	je	SHORT $LN2@lGetLeague

; 2506 : 	{
; 2507 : 		int iYieldChange = GC.getGame().GetGameLeagues()->GetWorldWonderYieldChange(pkCity->getOwner(), eYieldType);

	mov	ecx, DWORD PTR _pkCity$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T225962[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T225966[ebp], eax
	mov	ecx, DWORD PTR _eYieldType$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T225962[ebp]
	push	edx
	mov	ecx, DWORD PTR $T225966[ebp]
	call	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ ; CvGame::GetGameLeagues
	mov	ecx, eax
	call	?GetWorldWonderYieldChange@CvGameLeagues@@QAEHW4PlayerTypes@@W4YieldTypes@@@Z ; CvGameLeagues::GetWorldWonderYieldChange
	mov	DWORD PTR _iYieldChange$222065[ebp], eax

; 2508 : 		if (iYieldChange != 0)

	cmp	DWORD PTR _iYieldChange$222065[ebp], 0
	je	SHORT $LN2@lGetLeague

; 2509 : 		{
; 2510 : 			iYieldFromBuilding += iYieldChange;

	mov	eax, DWORD PTR _iYieldFromBuilding$[ebp]
	add	eax, DWORD PTR _iYieldChange$222065[ebp]
	mov	DWORD PTR _iYieldFromBuilding$[ebp], eax
$LN2@lGetLeague:

; 2511 : 		}
; 2512 : 	}
; 2513 : 
; 2514 : 	lua_pushinteger(L, iYieldFromBuilding);

	mov	ecx, DWORD PTR _iYieldFromBuilding$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2515 : 	return 1;

	mov	eax, 1

; 2516 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetLeagueBuildingClassYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetLeagueBuildingClassYieldChange
_TEXT	ENDS
EXTRN	?GetNumTradeRouteConnections@CvCityReligions@@QAEHW4ReligionTypes@@@Z:PROC ; CvCityReligions::GetNumTradeRouteConnections
; Function compile flags: /Odtp
;	COMDAT ?lGetNumTradeRoutesAddingPressure@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iNumTradeRoutes$ = -12					; size = 4
_eReligion$ = -8					; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumTradeRoutesAddingPressure@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumTradeRoutesAddingPressure, COMDAT

; 2519 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2520 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2521 : 	ReligionTypes eReligion = (ReligionTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eReligion$[ebp], eax

; 2522 : 	
; 2523 : 	int iNumTradeRoutes = pkCity->GetCityReligions()->GetNumTradeRouteConnections(eReligion);

	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetNumTradeRouteConnections@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumTradeRouteConnections
	mov	DWORD PTR _iNumTradeRoutes$[ebp], eax

; 2524 : 	lua_pushinteger(L, iNumTradeRoutes);

	mov	eax, DWORD PTR _iNumTradeRoutes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2525 : 	return 1;

	mov	eax, 1

; 2526 : 
; 2527 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumTradeRoutesAddingPressure@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumTradeRoutesAddingPressure
_TEXT	ENDS
EXTRN	?getNumWorldWonders@CvCity@@QBEHXZ:PROC		; CvCity::getNumWorldWonders
; Function compile flags: /Odtp
;	COMDAT ?lGetNumWorldWonders@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumWorldWonders@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumWorldWonders, COMDAT

; 2531 : {

	push	ebp
	mov	ebp, esp

; 2532 : 	return BasicLuaMethod(L, &CvCity::getNumWorldWonders);

	push	OFFSET ?getNumWorldWonders@CvCity@@QBEHXZ ; CvCity::getNumWorldWonders
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2533 : }

	pop	ebp
	ret	0
?lGetNumWorldWonders@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumWorldWonders
_TEXT	ENDS
EXTRN	?getNumTeamWonders@CvCity@@QBEHXZ:PROC		; CvCity::getNumTeamWonders
; Function compile flags: /Odtp
;	COMDAT ?lGetNumTeamWonders@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumTeamWonders@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetNumTeamWonders, COMDAT

; 2537 : {

	push	ebp
	mov	ebp, esp

; 2538 : 	return BasicLuaMethod(L, &CvCity::getNumTeamWonders);

	push	OFFSET ?getNumTeamWonders@CvCity@@QBEHXZ ; CvCity::getNumTeamWonders
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2539 : }

	pop	ebp
	ret	0
?lGetNumTeamWonders@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetNumTeamWonders
_TEXT	ENDS
EXTRN	?getNumNationalWonders@CvCity@@QBEHXZ:PROC	; CvCity::getNumNationalWonders
; Function compile flags: /Odtp
;	COMDAT ?lGetNumNationalWonders@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumNationalWonders@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumNationalWonders, COMDAT

; 2543 : {

	push	ebp
	mov	ebp, esp

; 2544 : 	return BasicLuaMethod(L, &CvCity::getNumNationalWonders);

	push	OFFSET ?getNumNationalWonders@CvCity@@QBEHXZ ; CvCity::getNumNationalWonders
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2545 : }

	pop	ebp
	ret	0
?lGetNumNationalWonders@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumNationalWonders
_TEXT	ENDS
EXTRN	?GetNumBuildings@CvCityBuildings@@QBEHXZ:PROC	; CvCityBuildings::GetNumBuildings
; Function compile flags: /Odtp
;	COMDAT ?lGetNumBuildings@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumBuildings@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetNumBuildings, COMDAT

; 2549 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2550 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2551 : 	const int iResult = pkCity->GetCityBuildings()->GetNumBuildings();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuildings@CvCityBuildings@@QBEHXZ ; CvCityBuildings::GetNumBuildings
	mov	DWORD PTR _iResult$[ebp], eax

; 2552 : 
; 2553 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2554 : 	return 1;

	mov	eax, 1

; 2555 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetNumBuildings
_TEXT	ENDS
EXTRN	?GetWonderProductionModifier@CvCity@@QBEHXZ:PROC ; CvCity::GetWonderProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetWonderProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetWonderProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetWonderProductionModifier, COMDAT

; 2560 : {

	push	ebp
	mov	ebp, esp

; 2561 : 	return BasicLuaMethod(L, &CvCity::GetWonderProductionModifier);

	push	OFFSET ?GetWonderProductionModifier@CvCity@@QBEHXZ ; CvCity::GetWonderProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2562 : }

	pop	ebp
	ret	0
?lGetWonderProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetWonderProductionModifier
_TEXT	ENDS
EXTRN	?ChangeWonderProductionModifier@CvCity@@QAEXH@Z:PROC ; CvCity::ChangeWonderProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?lChangeWonderProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeWonderProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeWonderProductionModifier, COMDAT

; 2566 : {

	push	ebp
	mov	ebp, esp

; 2567 : 	return BasicLuaMethod(L, &CvCity::ChangeWonderProductionModifier);

	push	OFFSET ?ChangeWonderProductionModifier@CvCity@@QAEXH@Z ; CvCity::ChangeWonderProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2568 : }

	pop	ebp
	ret	0
?lChangeWonderProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeWonderProductionModifier
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4BuildingTypes@@PAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@PAVCvString@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes,CvString *>
EXTRN	?GetLocalResourceWonderProductionMod@CvCity@@QBEHW4BuildingTypes@@PAVCvString@@@Z:PROC ; CvCity::GetLocalResourceWonderProductionMod
; Function compile flags: /Odtp
;	COMDAT ?lGetLocalResourceWonderProductionMod@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLocalResourceWonderProductionMod@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetLocalResourceWonderProductionMod, COMDAT

; 2572 : {

	push	ebp
	mov	ebp, esp

; 2573 : 	return BasicLuaMethod(L, &CvCity::GetLocalResourceWonderProductionMod);

	push	OFFSET ?GetLocalResourceWonderProductionMod@CvCity@@QBEHW4BuildingTypes@@PAVCvString@@@Z ; CvCity::GetLocalResourceWonderProductionMod
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4BuildingTypes@@PAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@PAVCvString@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes,CvString *>
	add	esp, 8

; 2574 : }

	pop	ebp
	ret	0
?lGetLocalResourceWonderProductionMod@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetLocalResourceWonderProductionMod
_TEXT	ENDS
EXTRN	?changeHealRate@CvCity@@QAEXH@Z:PROC		; CvCity::changeHealRate
; Function compile flags: /Odtp
;	COMDAT ?lChangeHealRate@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeHealRate@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lChangeHealRate, COMDAT

; 2579 : {

	push	ebp
	mov	ebp, esp

; 2580 : 	return BasicLuaMethod(L, &CvCity::changeHealRate);

	push	OFFSET ?changeHealRate@CvCity@@QAEXH@Z	; CvCity::changeHealRate
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2581 : }

	pop	ebp
	ret	0
?lChangeHealRate@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lChangeHealRate
_TEXT	ENDS
EXTRN	?IsNoOccupiedUnhappiness@CvCity@@QBE_NXZ:PROC	; CvCity::IsNoOccupiedUnhappiness
; Function compile flags: /Odtp
;	COMDAT ?lIsNoOccupiedUnhappiness@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsNoOccupiedUnhappiness@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsNoOccupiedUnhappiness, COMDAT

; 2586 : {

	push	ebp
	mov	ebp, esp

; 2587 : 	return BasicLuaMethod(L, &CvCity::IsNoOccupiedUnhappiness);

	push	OFFSET ?IsNoOccupiedUnhappiness@CvCity@@QBE_NXZ ; CvCity::IsNoOccupiedUnhappiness
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2588 : }

	pop	ebp
	ret	0
?lIsNoOccupiedUnhappiness@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsNoOccupiedUnhappiness
_TEXT	ENDS
EXTRN	?getFood@CvCity@@QBEHXZ:PROC			; CvCity::getFood
; Function compile flags: /Odtp
;	COMDAT ?lGetFood@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFood@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lGetFood, COMDAT

; 2592 : {

	push	ebp
	mov	ebp, esp

; 2593 : 	return BasicLuaMethod(L, &CvCity::getFood);

	push	OFFSET ?getFood@CvCity@@QBEHXZ		; CvCity::getFood
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2594 : }

	pop	ebp
	ret	0
?lGetFood@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lGetFood
_TEXT	ENDS
EXTRN	?getFoodTimes100@CvCity@@QBEHXZ:PROC		; CvCity::getFoodTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetFoodTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFoodTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetFoodTimes100, COMDAT

; 2598 : {

	push	ebp
	mov	ebp, esp

; 2599 : 	return BasicLuaMethod(L, &CvCity::getFoodTimes100);

	push	OFFSET ?getFoodTimes100@CvCity@@QBEHXZ	; CvCity::getFoodTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2600 : }

	pop	ebp
	ret	0
?lGetFoodTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetFoodTimes100
_TEXT	ENDS
EXTRN	?setFood@CvCity@@QAEXH@Z:PROC			; CvCity::setFood
; Function compile flags: /Odtp
;	COMDAT ?lSetFood@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetFood@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lSetFood, COMDAT

; 2604 : {

	push	ebp
	mov	ebp, esp

; 2605 : 	return BasicLuaMethod(L, &CvCity::setFood);

	push	OFFSET ?setFood@CvCity@@QAEXH@Z		; CvCity::setFood
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2606 : }

	pop	ebp
	ret	0
?lSetFood@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lSetFood
_TEXT	ENDS
EXTRN	?changeFood@CvCity@@QAEXH@Z:PROC		; CvCity::changeFood
; Function compile flags: /Odtp
;	COMDAT ?lChangeFood@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeFood@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lChangeFood, COMDAT

; 2610 : {

	push	ebp
	mov	ebp, esp

; 2611 : 	return BasicLuaMethod(L, &CvCity::changeFood);

	push	OFFSET ?changeFood@CvCity@@QAEXH@Z	; CvCity::changeFood
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2612 : }

	pop	ebp
	ret	0
?lChangeFood@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lChangeFood
_TEXT	ENDS
EXTRN	?getFoodKept@CvCity@@QBEHXZ:PROC		; CvCity::getFoodKept
; Function compile flags: /Odtp
;	COMDAT ?lGetFoodKept@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFoodKept@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetFoodKept, COMDAT

; 2616 : {

	push	ebp
	mov	ebp, esp

; 2617 : 	return BasicLuaMethod(L, &CvCity::getFoodKept);

	push	OFFSET ?getFoodKept@CvCity@@QBEHXZ	; CvCity::getFoodKept
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2618 : }

	pop	ebp
	ret	0
?lGetFoodKept@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetFoodKept
_TEXT	ENDS
EXTRN	?getMaxFoodKeptPercent@CvCity@@QBEHXZ:PROC	; CvCity::getMaxFoodKeptPercent
; Function compile flags: /Odtp
;	COMDAT ?lGetMaxFoodKeptPercent@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMaxFoodKeptPercent@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetMaxFoodKeptPercent, COMDAT

; 2622 : {

	push	ebp
	mov	ebp, esp

; 2623 : 	return BasicLuaMethod(L, &CvCity::getMaxFoodKeptPercent);

	push	OFFSET ?getMaxFoodKeptPercent@CvCity@@QBEHXZ ; CvCity::getMaxFoodKeptPercent
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2624 : }

	pop	ebp
	ret	0
?lGetMaxFoodKeptPercent@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetMaxFoodKeptPercent
_TEXT	ENDS
EXTRN	?getOverflowProduction@CvCity@@QBEHXZ:PROC	; CvCity::getOverflowProduction
; Function compile flags: /Odtp
;	COMDAT ?lGetOverflowProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetOverflowProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetOverflowProduction, COMDAT

; 2628 : {

	push	ebp
	mov	ebp, esp

; 2629 : 	return BasicLuaMethod(L, &CvCity::getOverflowProduction);

	push	OFFSET ?getOverflowProduction@CvCity@@QBEHXZ ; CvCity::getOverflowProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2630 : }

	pop	ebp
	ret	0
?lGetOverflowProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetOverflowProduction
_TEXT	ENDS
EXTRN	?setOverflowProduction@CvCity@@QAEXH@Z:PROC	; CvCity::setOverflowProduction
; Function compile flags: /Odtp
;	COMDAT ?lSetOverflowProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetOverflowProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetOverflowProduction, COMDAT

; 2634 : {

	push	ebp
	mov	ebp, esp

; 2635 : 	return BasicLuaMethod(L, &CvCity::setOverflowProduction);

	push	OFFSET ?setOverflowProduction@CvCity@@QAEXH@Z ; CvCity::setOverflowProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2636 : }

	pop	ebp
	ret	0
?lSetOverflowProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetOverflowProduction
_TEXT	ENDS
EXTRN	?getFeatureProduction@CvCity@@QBEHXZ:PROC	; CvCity::getFeatureProduction
; Function compile flags: /Odtp
;	COMDAT ?lGetFeatureProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFeatureProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFeatureProduction, COMDAT

; 2640 : {

	push	ebp
	mov	ebp, esp

; 2641 : 	return BasicLuaMethod(L, &CvCity::getFeatureProduction);

	push	OFFSET ?getFeatureProduction@CvCity@@QBEHXZ ; CvCity::getFeatureProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2642 : }

	pop	ebp
	ret	0
?lGetFeatureProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFeatureProduction
_TEXT	ENDS
EXTRN	?setFeatureProduction@CvCity@@QAEXH@Z:PROC	; CvCity::setFeatureProduction
; Function compile flags: /Odtp
;	COMDAT ?lSetFeatureProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetFeatureProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetFeatureProduction, COMDAT

; 2646 : {

	push	ebp
	mov	ebp, esp

; 2647 : 	return BasicLuaMethod(L, &CvCity::setFeatureProduction);

	push	OFFSET ?setFeatureProduction@CvCity@@QAEXH@Z ; CvCity::setFeatureProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2648 : }

	pop	ebp
	ret	0
?lSetFeatureProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetFeatureProduction
_TEXT	ENDS
EXTRN	?getMilitaryProductionModifier@CvCity@@QBEHXZ:PROC ; CvCity::getMilitaryProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetMilitaryProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMilitaryProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetMilitaryProductionModifier, COMDAT

; 2652 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2653 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2654 : 	const int iResult = pkCity->getMilitaryProductionModifier();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getMilitaryProductionModifier@CvCity@@QBEHXZ ; CvCity::getMilitaryProductionModifier
	mov	DWORD PTR _iResult$[ebp], eax

; 2655 : 
; 2656 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2657 : 	return 1;

	mov	eax, 1

; 2658 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMilitaryProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetMilitaryProductionModifier
_TEXT	ENDS
EXTRN	?getSpaceProductionModifier@CvCity@@QBEHXZ:PROC	; CvCity::getSpaceProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetSpaceProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetSpaceProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSpaceProductionModifier, COMDAT

; 2662 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2663 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2664 : 	const int iResult = pkCity->getSpaceProductionModifier();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getSpaceProductionModifier@CvCity@@QBEHXZ ; CvCity::getSpaceProductionModifier
	mov	DWORD PTR _iResult$[ebp], eax

; 2665 : 
; 2666 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2667 : 	return 1;

	mov	eax, 1

; 2668 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetSpaceProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSpaceProductionModifier
_TEXT	ENDS
EXTRN	?CreateProject@CvCity@@QAE_NW4ProjectTypes@@@Z:PROC ; CvCity::CreateProject
; Function compile flags: /Odtp
;	COMDAT ?lCreateApolloProgram@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eApolloProgram$222172 = -8				; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lCreateApolloProgram@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lCreateApolloProgram, COMDAT

; 2672 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2673 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2674 : 	if(pkCity != NULL)

	cmp	DWORD PTR _pkCity$[ebp], 0
	je	SHORT $LN1@lCreateApo

; 2675 : 	{
; 2676 : 		ProjectTypes eApolloProgram = (ProjectTypes)GC.getSPACE_RACE_TRIGGER_PROJECT();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8424
	mov	DWORD PTR _eApolloProgram$222172[ebp], ecx

; 2677 : 		pkCity->CreateProject(eApolloProgram);

	mov	edx, DWORD PTR _eApolloProgram$222172[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?CreateProject@CvCity@@QAE_NW4ProjectTypes@@@Z ; CvCity::CreateProject
$LN1@lCreateApo:

; 2678 : 	}
; 2679 : 
; 2680 : 	return 0;

	xor	eax, eax

; 2681 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCreateApolloProgram@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lCreateApolloProgram
_TEXT	ENDS
EXTRN	?GetBuildingDefense@CvCityBuildings@@QBEHXZ:PROC ; CvCityBuildings::GetBuildingDefense
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingDefense@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetBuildingDefense@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingDefense, COMDAT

; 2685 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2686 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2687 : 	const int iResult = pkCity->GetCityBuildings()->GetBuildingDefense();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetBuildingDefense@CvCityBuildings@@QBEHXZ ; CvCityBuildings::GetBuildingDefense
	mov	DWORD PTR _iResult$[ebp], eax

; 2688 : 
; 2689 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2690 : 	return 1;

	mov	eax, 1

; 2691 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBuildingDefense@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingDefense
_TEXT	ENDS
EXTRN	?getFreeExperience@CvCity@@QBEHXZ:PROC		; CvCity::getFreeExperience
; Function compile flags: /Odtp
;	COMDAT ?lGetFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetFreeExperience, COMDAT

; 2695 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2696 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2697 : 	const int iResult = pkCity->getFreeExperience();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getFreeExperience@CvCity@@QBEHXZ	; CvCity::getFreeExperience
	mov	DWORD PTR _iResult$[ebp], eax

; 2698 : 
; 2699 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2700 : 	return 1;

	mov	eax, 1

; 2701 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetFreeExperience
_TEXT	ENDS
EXTRN	?getNukeModifier@CvCity@@QBEHXZ:PROC		; CvCity::getNukeModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetNukeModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNukeModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetNukeModifier, COMDAT

; 2705 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2706 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2707 : 	const int iResult = pkCity->getNukeModifier();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getNukeModifier@CvCity@@QBEHXZ		; CvCity::getNukeModifier
	mov	DWORD PTR _iResult$[ebp], eax

; 2708 : 
; 2709 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2710 : 	return 1;

	mov	eax, 1

; 2711 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNukeModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetNukeModifier
_TEXT	ENDS
EXTRN	?IsResistance@CvCity@@QBE_NXZ:PROC		; CvCity::IsResistance
; Function compile flags: /Odtp
;	COMDAT ?lIsResistance@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsResistance@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsResistance, COMDAT

; 2728 : {

	push	ebp
	mov	ebp, esp

; 2729 : 	return BasicLuaMethod(L, &CvCity::IsResistance);

	push	OFFSET ?IsResistance@CvCity@@QBE_NXZ	; CvCity::IsResistance
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2730 : }

	pop	ebp
	ret	0
?lIsResistance@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsResistance
_TEXT	ENDS
EXTRN	?GetResistanceTurns@CvCity@@QBEHXZ:PROC		; CvCity::GetResistanceTurns
; Function compile flags: /Odtp
;	COMDAT ?lGetResistanceTurns@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResistanceTurns@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetResistanceTurns, COMDAT

; 2733 : {

	push	ebp
	mov	ebp, esp

; 2734 : 	return BasicLuaMethod(L, &CvCity::GetResistanceTurns);

	push	OFFSET ?GetResistanceTurns@CvCity@@QBEHXZ ; CvCity::GetResistanceTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2735 : }

	pop	ebp
	ret	0
?lGetResistanceTurns@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetResistanceTurns
_TEXT	ENDS
EXTRN	?ChangeResistanceTurns@CvCity@@QAEXH@Z:PROC	; CvCity::ChangeResistanceTurns
; Function compile flags: /Odtp
;	COMDAT ?lChangeResistanceTurns@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeResistanceTurns@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeResistanceTurns, COMDAT

; 2738 : {

	push	ebp
	mov	ebp, esp

; 2739 : 	return BasicLuaMethod(L, &CvCity::ChangeResistanceTurns);

	push	OFFSET ?ChangeResistanceTurns@CvCity@@QAEXH@Z ; CvCity::ChangeResistanceTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2740 : }

	pop	ebp
	ret	0
?lChangeResistanceTurns@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeResistanceTurns
_TEXT	ENDS
EXTRN	?IsRazing@CvCity@@QBE_NXZ:PROC			; CvCity::IsRazing
; Function compile flags: /Odtp
;	COMDAT ?lIsRazing@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsRazing@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lIsRazing, COMDAT

; 2744 : {

	push	ebp
	mov	ebp, esp

; 2745 : 	return BasicLuaMethod(L, &CvCity::IsRazing);

	push	OFFSET ?IsRazing@CvCity@@QBE_NXZ	; CvCity::IsRazing
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2746 : }

	pop	ebp
	ret	0
?lIsRazing@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lIsRazing
_TEXT	ENDS
EXTRN	?GetRazingTurns@CvCity@@QBEHXZ:PROC		; CvCity::GetRazingTurns
; Function compile flags: /Odtp
;	COMDAT ?lGetRazingTurns@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRazingTurns@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetRazingTurns, COMDAT

; 2749 : {

	push	ebp
	mov	ebp, esp

; 2750 : 	return BasicLuaMethod(L, &CvCity::GetRazingTurns);

	push	OFFSET ?GetRazingTurns@CvCity@@QBEHXZ	; CvCity::GetRazingTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2751 : }

	pop	ebp
	ret	0
?lGetRazingTurns@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetRazingTurns
_TEXT	ENDS
EXTRN	?ChangeRazingTurns@CvCity@@QAEXH@Z:PROC		; CvCity::ChangeRazingTurns
; Function compile flags: /Odtp
;	COMDAT ?lChangeRazingTurns@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeRazingTurns@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lChangeRazingTurns, COMDAT

; 2754 : {

	push	ebp
	mov	ebp, esp

; 2755 : 	return BasicLuaMethod(L, &CvCity::ChangeRazingTurns);

	push	OFFSET ?ChangeRazingTurns@CvCity@@QAEXH@Z ; CvCity::ChangeRazingTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2756 : }

	pop	ebp
	ret	0
?lChangeRazingTurns@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lChangeRazingTurns
_TEXT	ENDS
EXTRN	?IsOccupied@CvCity@@QBE_NXZ:PROC		; CvCity::IsOccupied
; Function compile flags: /Odtp
;	COMDAT ?lIsOccupied@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsOccupied@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsOccupied, COMDAT

; 2760 : {

	push	ebp
	mov	ebp, esp

; 2761 : 	return BasicLuaMethod(L, &CvCity::IsOccupied);

	push	OFFSET ?IsOccupied@CvCity@@QBE_NXZ	; CvCity::IsOccupied
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2762 : }

	pop	ebp
	ret	0
?lIsOccupied@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsOccupied
_TEXT	ENDS
EXTRN	?SetOccupied@CvCity@@QAEX_N@Z:PROC		; CvCity::SetOccupied
; Function compile flags: /Odtp
;	COMDAT ?lSetOccupied@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetOccupied@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lSetOccupied, COMDAT

; 2766 : {

	push	ebp
	mov	ebp, esp

; 2767 : 	return BasicLuaMethod(L, &CvCity::SetOccupied);

	push	OFFSET ?SetOccupied@CvCity@@QAEX_N@Z	; CvCity::SetOccupied
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2768 : }

	pop	ebp
	ret	0
?lSetOccupied@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lSetOccupied
_TEXT	ENDS
EXTRN	?IsPuppet@CvCity@@QBE_NXZ:PROC			; CvCity::IsPuppet
; Function compile flags: /Odtp
;	COMDAT ?lIsPuppet@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPuppet@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lIsPuppet, COMDAT

; 2772 : {

	push	ebp
	mov	ebp, esp

; 2773 : 	return BasicLuaMethod(L, &CvCity::IsPuppet);

	push	OFFSET ?IsPuppet@CvCity@@QBE_NXZ	; CvCity::IsPuppet
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2774 : }

	pop	ebp
	ret	0
?lIsPuppet@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lIsPuppet
_TEXT	ENDS
EXTRN	?SetPuppet@CvCity@@QAEX_N@Z:PROC		; CvCity::SetPuppet
; Function compile flags: /Odtp
;	COMDAT ?lSetPuppet@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetPuppet@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lSetPuppet, COMDAT

; 2778 : {

	push	ebp
	mov	ebp, esp

; 2779 : 	return BasicLuaMethod(L, &CvCity::SetPuppet);

	push	OFFSET ?SetPuppet@CvCity@@QAEX_N@Z	; CvCity::SetPuppet
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2780 : }

	pop	ebp
	ret	0
?lSetPuppet@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lSetPuppet
_TEXT	ENDS
EXTRN	?GetHappinessFromBuildings@CvCity@@QBEHXZ:PROC	; CvCity::GetHappinessFromBuildings
; Function compile flags: /Odtp
;	COMDAT ?lGetHappinessFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetHappinessFromBuildings, COMDAT

; 2783 : {

	push	ebp
	mov	ebp, esp

; 2784 : 	return BasicLuaMethod(L, &CvCity::GetHappinessFromBuildings);

	push	OFFSET ?GetHappinessFromBuildings@CvCity@@QBEHXZ ; CvCity::GetHappinessFromBuildings
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2785 : }

	pop	ebp
	ret	0
?lGetHappinessFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetHappinessFromBuildings
_TEXT	ENDS
EXTRN	?GetLocalHappiness@CvCity@@QBEHXZ:PROC		; CvCity::GetLocalHappiness
; Function compile flags: /Odtp
;	COMDAT ?lGetLocalHappiness@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLocalHappiness@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetLocalHappiness, COMDAT

; 2788 : {

	push	ebp
	mov	ebp, esp

; 2789 : 	return BasicLuaMethod(L, &CvCity::GetLocalHappiness);

	push	OFFSET ?GetLocalHappiness@CvCity@@QBEHXZ ; CvCity::GetLocalHappiness
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2790 : }

	pop	ebp
	ret	0
?lGetLocalHappiness@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetLocalHappiness
_TEXT	ENDS
EXTRN	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ:PROC ; CvPlayer::GetPlayerPolicies
EXTRN	?getNumBuildingInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumBuildingInfos
EXTRN	?getNumPolicyInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumPolicyInfos
; Function compile flags: /Odtp
;	COMDAT ?lGetHappiness@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T226056 = -32						; size = 4
_pkPlayerPolicies$ = -28				; size = 4
_numPolicyInfos$ = -24					; size = 4
_numBuildingInfos$ = -20				; size = 4
_pkCity$ = -16						; size = 4
_iHappiness$ = -12					; size = 4
_pkCityBuildings$ = -8					; size = 4
_kPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetHappiness@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetHappiness, COMDAT

; 2793 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 2794 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2795 : 
; 2796 : #ifndef AUI_WARNING_FIXES
; 2797 : 	CvPlayerAI& kPlayer = GET_PLAYER(pkCity->getOwner());

	mov	ecx, DWORD PTR _pkCity$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T226056[ebp], edx
	mov	eax, DWORD PTR $T226056[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 2798 : 
; 2799 : 	const int numPolicyInfos = GC.getNumPolicyInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumPolicyInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumPolicyInfos
	mov	DWORD PTR _numPolicyInfos$[ebp], eax

; 2800 : 	const int numBuildingInfos = GC.getNumBuildingInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	mov	DWORD PTR _numBuildingInfos$[ebp], eax

; 2801 : 
; 2802 : 	CvPlayerPolicies* pkPlayerPolicies = kPlayer.GetPlayerPolicies();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	DWORD PTR _pkPlayerPolicies$[ebp], eax

; 2803 : 	CvCityBuildings* pkCityBuildings = pkCity->GetCityBuildings();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	DWORD PTR _pkCityBuildings$[ebp], eax

; 2804 : #endif
; 2805 : 
; 2806 : 	int iHappiness = pkCity->GetHappinessFromBuildings();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetHappinessFromBuildings@CvCity@@QBEHXZ ; CvCity::GetHappinessFromBuildings
	mov	DWORD PTR _iHappiness$[ebp], eax

; 2807 : 
; 2808 : 	lua_pushinteger(L, iHappiness);

	mov	ecx, DWORD PTR _iHappiness$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2809 : 	return 1;

	mov	eax, 1

; 2810 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetHappiness@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetHappiness
_TEXT	ENDS
EXTRN	?isNeverLost@CvCity@@QBE_NXZ:PROC		; CvCity::isNeverLost
; Function compile flags: /Odtp
;	COMDAT ?lIsNeverLost@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsNeverLost@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsNeverLost, COMDAT

; 2814 : {

	push	ebp
	mov	ebp, esp

; 2815 : 	return BasicLuaMethod(L, &CvCity::isNeverLost);

	push	OFFSET ?isNeverLost@CvCity@@QBE_NXZ	; CvCity::isNeverLost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2816 : }

	pop	ebp
	ret	0
?lIsNeverLost@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsNeverLost
_TEXT	ENDS
EXTRN	?setNeverLost@CvCity@@QAEX_N@Z:PROC		; CvCity::setNeverLost
; Function compile flags: /Odtp
;	COMDAT ?lSetNeverLost@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetNeverLost@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lSetNeverLost, COMDAT

; 2820 : {

	push	ebp
	mov	ebp, esp

; 2821 : 	return BasicLuaMethod(L, &CvCity::setNeverLost);

	push	OFFSET ?setNeverLost@CvCity@@QAEX_N@Z	; CvCity::setNeverLost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2822 : }

	pop	ebp
	ret	0
?lSetNeverLost@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lSetNeverLost
_TEXT	ENDS
EXTRN	?isDrafted@CvCity@@QBE_NXZ:PROC			; CvCity::isDrafted
; Function compile flags: /Odtp
;	COMDAT ?lIsDrafted@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsDrafted@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lIsDrafted, COMDAT

; 2826 : {

	push	ebp
	mov	ebp, esp

; 2827 : 	return BasicLuaMethod(L, &CvCity::isDrafted);

	push	OFFSET ?isDrafted@CvCity@@QBE_NXZ	; CvCity::isDrafted
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2828 : }

	pop	ebp
	ret	0
?lIsDrafted@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lIsDrafted
_TEXT	ENDS
EXTRN	?setDrafted@CvCity@@QAEX_N@Z:PROC		; CvCity::setDrafted
; Function compile flags: /Odtp
;	COMDAT ?lSetDrafted@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetDrafted@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lSetDrafted, COMDAT

; 2832 : {

	push	ebp
	mov	ebp, esp

; 2833 : 	return BasicLuaMethod(L, &CvCity::setDrafted);

	push	OFFSET ?setDrafted@CvCity@@QAEX_N@Z	; CvCity::setDrafted
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2834 : }

	pop	ebp
	ret	0
?lSetDrafted@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lSetDrafted
_TEXT	ENDS
EXTRN	?IsBlockaded@CvCity@@QBE_NXZ:PROC		; CvCity::IsBlockaded
; Function compile flags: /Odtp
;	COMDAT ?lIsBlockaded@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBlockaded@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsBlockaded, COMDAT

; 2838 : {

	push	ebp
	mov	ebp, esp

; 2839 : 	return BasicLuaMethod(L, &CvCity::IsBlockaded);

	push	OFFSET ?IsBlockaded@CvCity@@QBE_NXZ	; CvCity::IsBlockaded
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2840 : }

	pop	ebp
	ret	0
?lIsBlockaded@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsBlockaded
_TEXT	ENDS
EXTRN	?GetWeLoveTheKingDayCounter@CvCity@@QBEHXZ:PROC	; CvCity::GetWeLoveTheKingDayCounter
; Function compile flags: /Odtp
;	COMDAT ?lGetWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetWeLoveTheKingDayCounter, COMDAT

; 2845 : {

	push	ebp
	mov	ebp, esp

; 2846 : 	return BasicLuaMethod(L, &CvCity::GetWeLoveTheKingDayCounter);

	push	OFFSET ?GetWeLoveTheKingDayCounter@CvCity@@QBEHXZ ; CvCity::GetWeLoveTheKingDayCounter
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2847 : }

	pop	ebp
	ret	0
?lGetWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetWeLoveTheKingDayCounter
_TEXT	ENDS
EXTRN	?SetWeLoveTheKingDayCounter@CvCity@@QAEXH@Z:PROC ; CvCity::SetWeLoveTheKingDayCounter
; Function compile flags: /Odtp
;	COMDAT ?lSetWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetWeLoveTheKingDayCounter, COMDAT

; 2851 : {

	push	ebp
	mov	ebp, esp

; 2852 : 	return BasicLuaMethod(L, &CvCity::SetWeLoveTheKingDayCounter);

	push	OFFSET ?SetWeLoveTheKingDayCounter@CvCity@@QAEXH@Z ; CvCity::SetWeLoveTheKingDayCounter
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2853 : }

	pop	ebp
	ret	0
?lSetWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetWeLoveTheKingDayCounter
_TEXT	ENDS
EXTRN	?ChangeWeLoveTheKingDayCounter@CvCity@@QAEXH@Z:PROC ; CvCity::ChangeWeLoveTheKingDayCounter
; Function compile flags: /Odtp
;	COMDAT ?lChangeWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeWeLoveTheKingDayCounter, COMDAT

; 2857 : {

	push	ebp
	mov	ebp, esp

; 2858 : 	return BasicLuaMethod(L, &CvCity::ChangeWeLoveTheKingDayCounter);

	push	OFFSET ?ChangeWeLoveTheKingDayCounter@CvCity@@QAEXH@Z ; CvCity::ChangeWeLoveTheKingDayCounter
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2859 : }

	pop	ebp
	ret	0
?lChangeWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeWeLoveTheKingDayCounter
_TEXT	ENDS
EXTRN	?GetNumThingsProduced@CvCity@@QBEHXZ:PROC	; CvCity::GetNumThingsProduced
; Function compile flags: /Odtp
;	COMDAT ?lGetNumThingsProduced@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumThingsProduced@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumThingsProduced, COMDAT

; 2863 : {

	push	ebp
	mov	ebp, esp

; 2864 : 	return BasicLuaMethod(L, &CvCity::GetNumThingsProduced);

	push	OFFSET ?GetNumThingsProduced@CvCity@@QBEHXZ ; CvCity::GetNumThingsProduced
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2865 : }

	pop	ebp
	ret	0
?lGetNumThingsProduced@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumThingsProduced
_TEXT	ENDS
EXTRN	?isProductionAutomated@CvCity@@QBE_NXZ:PROC	; CvCity::isProductionAutomated
; Function compile flags: /Odtp
;	COMDAT ?lIsProductionAutomated@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProductionAutomated@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsProductionAutomated, COMDAT

; 2882 : {

	push	ebp
	mov	ebp, esp

; 2883 : 	return BasicLuaMethod(L, &CvCity::isProductionAutomated);

	push	OFFSET ?isProductionAutomated@CvCity@@QBE_NXZ ; CvCity::isProductionAutomated
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2884 : }

	pop	ebp
	ret	0
?lIsProductionAutomated@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsProductionAutomated
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N1@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,bool>
EXTRN	?setProductionAutomated@CvCity@@QAEX_N0@Z:PROC	; CvCity::setProductionAutomated
; Function compile flags: /Odtp
;	COMDAT ?lSetProductionAutomated@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetProductionAutomated@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetProductionAutomated, COMDAT

; 2888 : {

	push	ebp
	mov	ebp, esp

; 2889 : 	return BasicLuaMethod(L, &CvCity::setProductionAutomated);

	push	OFFSET ?setProductionAutomated@CvCity@@QAEX_N0@Z ; CvCity::setProductionAutomated
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N1@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,bool>
	add	esp, 8

; 2890 : }

	pop	ebp
	ret	0
?lSetProductionAutomated@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetProductionAutomated
_TEXT	ENDS
EXTRN	?setCitySizeBoost@CvCity@@QAEXH@Z:PROC		; CvCity::setCitySizeBoost
; Function compile flags: /Odtp
;	COMDAT ?lSetCitySizeBoost@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetCitySizeBoost@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lSetCitySizeBoost, COMDAT

; 2894 : {

	push	ebp
	mov	ebp, esp

; 2895 : 	return BasicLuaMethod(L, &CvCity::setCitySizeBoost);

	push	OFFSET ?setCitySizeBoost@CvCity@@QAEXH@Z ; CvCity::setCitySizeBoost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2896 : }

	pop	ebp
	ret	0
?lSetCitySizeBoost@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lSetCitySizeBoost
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum PlayerTypes>
PUBLIC	?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ	; CvCity::getOwner
; Function compile flags: /Odtp
;	COMDAT ?lGetOwner@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetOwner@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lGetOwner, COMDAT

; 2900 : {

	push	ebp
	mov	ebp, esp

; 2901 : 	return BasicLuaMethod(L, &CvCity::getOwner);

	push	OFFSET ?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ ; CvCity::getOwner
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 2902 : }

	pop	ebp
	ret	0
?lGetOwner@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lGetOwner
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum TeamTypes>
EXTRN	?getTeam@CvCity@@QBE?AW4TeamTypes@@XZ:PROC	; CvCity::getTeam
; Function compile flags: /Odtp
;	COMDAT ?lGetTeam@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTeam@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lGetTeam, COMDAT

; 2906 : {

	push	ebp
	mov	ebp, esp

; 2907 : 	return BasicLuaMethod(L, &CvCity::getTeam);

	push	OFFSET ?getTeam@CvCity@@QBE?AW4TeamTypes@@XZ ; CvCity::getTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum TeamTypes>
	add	esp, 8

; 2908 : }

	pop	ebp
	ret	0
?lGetTeam@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lGetTeam
_TEXT	ENDS
EXTRN	?getPreviousOwner@CvCity@@QBE?AW4PlayerTypes@@XZ:PROC ; CvCity::getPreviousOwner
; Function compile flags: /Odtp
;	COMDAT ?lGetPreviousOwner@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPreviousOwner@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetPreviousOwner, COMDAT

; 2912 : {

	push	ebp
	mov	ebp, esp

; 2913 : 	return BasicLuaMethod(L, &CvCity::getPreviousOwner);

	push	OFFSET ?getPreviousOwner@CvCity@@QBE?AW4PlayerTypes@@XZ ; CvCity::getPreviousOwner
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 2914 : }

	pop	ebp
	ret	0
?lGetPreviousOwner@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetPreviousOwner
_TEXT	ENDS
EXTRN	?getOriginalOwner@CvCity@@QBE?AW4PlayerTypes@@XZ:PROC ; CvCity::getOriginalOwner
; Function compile flags: /Odtp
;	COMDAT ?lGetOriginalOwner@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetOriginalOwner@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetOriginalOwner, COMDAT

; 2918 : {

	push	ebp
	mov	ebp, esp

; 2919 : 	return BasicLuaMethod(L, &CvCity::getOriginalOwner);

	push	OFFSET ?getOriginalOwner@CvCity@@QBE?AW4PlayerTypes@@XZ ; CvCity::getOriginalOwner
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 2920 : }

	pop	ebp
	ret	0
?lGetOriginalOwner@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetOriginalOwner
_TEXT	ENDS
EXTRN	?getSeaPlotYield@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::getSeaPlotYield
; Function compile flags: /Odtp
;	COMDAT ?lGetSeaPlotYield@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eIndex$ = -12						; size = 4
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetSeaPlotYield@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetSeaPlotYield, COMDAT

; 2924 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2925 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2926 : 	const YieldTypes eIndex = (YieldTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eIndex$[ebp], eax

; 2927 : 	const int iResult = pkCity->getSeaPlotYield(eIndex);

	mov	edx, DWORD PTR _eIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getSeaPlotYield@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::getSeaPlotYield
	mov	DWORD PTR _iResult$[ebp], eax

; 2928 : 
; 2929 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2930 : 	return 1;

	mov	eax, 1

; 2931 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetSeaPlotYield@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetSeaPlotYield
_TEXT	ENDS
EXTRN	?getRiverPlotYield@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::getRiverPlotYield
; Function compile flags: /Odtp
;	COMDAT ?lGetRiverPlotYield@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eIndex$ = -12						; size = 4
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetRiverPlotYield@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetRiverPlotYield, COMDAT

; 2935 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2936 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2937 : 	const YieldTypes eIndex = (YieldTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eIndex$[ebp], eax

; 2938 : 	const int iResult = pkCity->getRiverPlotYield(eIndex);

	mov	edx, DWORD PTR _eIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getRiverPlotYield@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::getRiverPlotYield
	mov	DWORD PTR _iResult$[ebp], eax

; 2939 : 
; 2940 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2941 : 	return 1;

	mov	eax, 1

; 2942 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetRiverPlotYield@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetRiverPlotYield
_TEXT	ENDS
EXTRN	?getLakePlotYield@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::getLakePlotYield
; Function compile flags: /Odtp
;	COMDAT ?lGetLakePlotYield@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eIndex$ = -12						; size = 4
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetLakePlotYield@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetLakePlotYield, COMDAT

; 2946 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2947 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2948 : 	const YieldTypes eIndex = (YieldTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eIndex$[ebp], eax

; 2949 : 	const int iResult = pkCity->getLakePlotYield(eIndex);

	mov	edx, DWORD PTR _eIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getLakePlotYield@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::getLakePlotYield
	mov	DWORD PTR _iResult$[ebp], eax

; 2950 : 
; 2951 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2952 : 	return 1;

	mov	eax, 1

; 2953 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetLakePlotYield@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetLakePlotYield
_TEXT	ENDS
EXTRN	?getBaseYieldRate@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::getBaseYieldRate
; Function compile flags: /Odtp
;	COMDAT ?lGetBaseYieldRate@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eIndex$ = -12						; size = 4
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetBaseYieldRate@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetBaseYieldRate, COMDAT

; 2957 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2958 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2959 : 	const YieldTypes eIndex = (YieldTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eIndex$[ebp], eax

; 2960 : 	const int iResult = pkCity->getBaseYieldRate(eIndex);

	mov	edx, DWORD PTR _eIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getBaseYieldRate@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::getBaseYieldRate
	mov	DWORD PTR _iResult$[ebp], eax

; 2961 : 
; 2962 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2963 : 	return 1;

	mov	eax, 1

; 2964 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBaseYieldRate@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetBaseYieldRate
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes>
EXTRN	?GetBaseYieldRateFromGreatWorks@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::GetBaseYieldRateFromGreatWorks
; Function compile flags: /Odtp
;	COMDAT ?lGetBaseYieldRateFromGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBaseYieldRateFromGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBaseYieldRateFromGreatWorks, COMDAT

; 2969 : {

	push	ebp
	mov	ebp, esp

; 2970 : 	return BasicLuaMethod(L, &CvCity::GetBaseYieldRateFromGreatWorks);

	push	OFFSET ?GetBaseYieldRateFromGreatWorks@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::GetBaseYieldRateFromGreatWorks
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 2971 : }

	pop	ebp
	ret	0
?lGetBaseYieldRateFromGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBaseYieldRateFromGreatWorks
_TEXT	ENDS
EXTRN	?GetBaseYieldRateFromTerrain@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::GetBaseYieldRateFromTerrain
; Function compile flags: /Odtp
;	COMDAT ?lGetBaseYieldRateFromTerrain@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBaseYieldRateFromTerrain@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBaseYieldRateFromTerrain, COMDAT

; 2975 : {

	push	ebp
	mov	ebp, esp

; 2976 : 	return BasicLuaMethod(L, &CvCity::GetBaseYieldRateFromTerrain);

	push	OFFSET ?GetBaseYieldRateFromTerrain@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::GetBaseYieldRateFromTerrain
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 2977 : }

	pop	ebp
	ret	0
?lGetBaseYieldRateFromTerrain@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBaseYieldRateFromTerrain
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4YieldTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum YieldTypes,int>
EXTRN	?ChangeBaseYieldRateFromTerrain@CvCity@@QAEXW4YieldTypes@@H@Z:PROC ; CvCity::ChangeBaseYieldRateFromTerrain
; Function compile flags: /Odtp
;	COMDAT ?lChangeBaseYieldRateFromTerrain@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeBaseYieldRateFromTerrain@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeBaseYieldRateFromTerrain, COMDAT

; 2980 : {

	push	ebp
	mov	ebp, esp

; 2981 : 	return BasicLuaMethod(L, &CvCity::ChangeBaseYieldRateFromTerrain);

	push	OFFSET ?ChangeBaseYieldRateFromTerrain@CvCity@@QAEXW4YieldTypes@@H@Z ; CvCity::ChangeBaseYieldRateFromTerrain
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4YieldTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum YieldTypes,int>
	add	esp, 8

; 2982 : }

	pop	ebp
	ret	0
?lChangeBaseYieldRateFromTerrain@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeBaseYieldRateFromTerrain
_TEXT	ENDS
EXTRN	?GetBaseYieldRateFromBuildings@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::GetBaseYieldRateFromBuildings
; Function compile flags: /Odtp
;	COMDAT ?lGetBaseYieldRateFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBaseYieldRateFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBaseYieldRateFromBuildings, COMDAT

; 2985 : {

	push	ebp
	mov	ebp, esp

; 2986 : 	return BasicLuaMethod(L, &CvCity::GetBaseYieldRateFromBuildings);

	push	OFFSET ?GetBaseYieldRateFromBuildings@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::GetBaseYieldRateFromBuildings
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 2987 : }

	pop	ebp
	ret	0
?lGetBaseYieldRateFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBaseYieldRateFromBuildings
_TEXT	ENDS
EXTRN	?ChangeBaseYieldRateFromBuildings@CvCity@@QAEXW4YieldTypes@@H@Z:PROC ; CvCity::ChangeBaseYieldRateFromBuildings
; Function compile flags: /Odtp
;	COMDAT ?lChangeBaseYieldRateFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeBaseYieldRateFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeBaseYieldRateFromBuildings, COMDAT

; 2990 : {

	push	ebp
	mov	ebp, esp

; 2991 : 	return BasicLuaMethod(L, &CvCity::ChangeBaseYieldRateFromBuildings);

	push	OFFSET ?ChangeBaseYieldRateFromBuildings@CvCity@@QAEXW4YieldTypes@@H@Z ; CvCity::ChangeBaseYieldRateFromBuildings
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4YieldTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum YieldTypes,int>
	add	esp, 8

; 2992 : }

	pop	ebp
	ret	0
?lChangeBaseYieldRateFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeBaseYieldRateFromBuildings
_TEXT	ENDS
EXTRN	?GetBaseYieldRateFromSpecialists@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::GetBaseYieldRateFromSpecialists
; Function compile flags: /Odtp
;	COMDAT ?lGetBaseYieldRateFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBaseYieldRateFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBaseYieldRateFromSpecialists, COMDAT

; 2995 : {

	push	ebp
	mov	ebp, esp

; 2996 : 	return BasicLuaMethod(L, &CvCity::GetBaseYieldRateFromSpecialists);

	push	OFFSET ?GetBaseYieldRateFromSpecialists@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::GetBaseYieldRateFromSpecialists
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 2997 : }

	pop	ebp
	ret	0
?lGetBaseYieldRateFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBaseYieldRateFromSpecialists
_TEXT	ENDS
EXTRN	?ChangeBaseYieldRateFromSpecialists@CvCity@@QAEXW4YieldTypes@@H@Z:PROC ; CvCity::ChangeBaseYieldRateFromSpecialists
; Function compile flags: /Odtp
;	COMDAT ?lChangeBaseYieldRateFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeBaseYieldRateFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeBaseYieldRateFromSpecialists, COMDAT

; 3000 : {

	push	ebp
	mov	ebp, esp

; 3001 : 	return BasicLuaMethod(L, &CvCity::ChangeBaseYieldRateFromSpecialists);

	push	OFFSET ?ChangeBaseYieldRateFromSpecialists@CvCity@@QAEXW4YieldTypes@@H@Z ; CvCity::ChangeBaseYieldRateFromSpecialists
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4YieldTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum YieldTypes,int>
	add	esp, 8

; 3002 : }

	pop	ebp
	ret	0
?lChangeBaseYieldRateFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeBaseYieldRateFromSpecialists
_TEXT	ENDS
EXTRN	?GetBaseYieldRateFromMisc@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::GetBaseYieldRateFromMisc
; Function compile flags: /Odtp
;	COMDAT ?lGetBaseYieldRateFromMisc@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBaseYieldRateFromMisc@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBaseYieldRateFromMisc, COMDAT

; 3005 : {

	push	ebp
	mov	ebp, esp

; 3006 : 	return BasicLuaMethod(L, &CvCity::GetBaseYieldRateFromMisc);

	push	OFFSET ?GetBaseYieldRateFromMisc@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::GetBaseYieldRateFromMisc
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 3007 : }

	pop	ebp
	ret	0
?lGetBaseYieldRateFromMisc@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBaseYieldRateFromMisc
_TEXT	ENDS
EXTRN	?ChangeBaseYieldRateFromMisc@CvCity@@QAEXW4YieldTypes@@H@Z:PROC ; CvCity::ChangeBaseYieldRateFromMisc
; Function compile flags: /Odtp
;	COMDAT ?lChangeBaseYieldRateFromMisc@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeBaseYieldRateFromMisc@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeBaseYieldRateFromMisc, COMDAT

; 3010 : {

	push	ebp
	mov	ebp, esp

; 3011 : 	return BasicLuaMethod(L, &CvCity::ChangeBaseYieldRateFromMisc);

	push	OFFSET ?ChangeBaseYieldRateFromMisc@CvCity@@QAEXW4YieldTypes@@H@Z ; CvCity::ChangeBaseYieldRateFromMisc
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4YieldTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum YieldTypes,int>
	add	esp, 8

; 3012 : }

	pop	ebp
	ret	0
?lChangeBaseYieldRateFromMisc@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeBaseYieldRateFromMisc
_TEXT	ENDS
EXTRN	?GetBaseYieldRateFromReligion@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::GetBaseYieldRateFromReligion
; Function compile flags: /Odtp
;	COMDAT ?lGetBaseYieldRateFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBaseYieldRateFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBaseYieldRateFromReligion, COMDAT

; 3015 : {

	push	ebp
	mov	ebp, esp

; 3016 : 	return BasicLuaMethod(L, &CvCity::GetBaseYieldRateFromReligion);

	push	OFFSET ?GetBaseYieldRateFromReligion@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::GetBaseYieldRateFromReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 3017 : }

	pop	ebp
	ret	0
?lGetBaseYieldRateFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBaseYieldRateFromReligion
_TEXT	ENDS
EXTRN	?ChangeBaseYieldRateFromReligion@CvCity@@QAEXW4YieldTypes@@H@Z:PROC ; CvCity::ChangeBaseYieldRateFromReligion
; Function compile flags: /Odtp
;	COMDAT ?lChangeBaseYieldRateFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeBaseYieldRateFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeBaseYieldRateFromReligion, COMDAT

; 3021 : {

	push	ebp
	mov	ebp, esp

; 3022 : 	return BasicLuaMethod(L, &CvCity::ChangeBaseYieldRateFromReligion);

	push	OFFSET ?ChangeBaseYieldRateFromReligion@CvCity@@QAEXW4YieldTypes@@H@Z ; CvCity::ChangeBaseYieldRateFromReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4YieldTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum YieldTypes,int>
	add	esp, 8

; 3023 : }

	pop	ebp
	ret	0
?lChangeBaseYieldRateFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeBaseYieldRateFromReligion
_TEXT	ENDS
EXTRN	?GetYieldPerPopTimes100@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::GetYieldPerPopTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetYieldPerPopTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetYieldPerPopTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetYieldPerPopTimes100, COMDAT

; 3026 : {

	push	ebp
	mov	ebp, esp

; 3027 : 	return BasicLuaMethod(L, &CvCity::GetYieldPerPopTimes100);

	push	OFFSET ?GetYieldPerPopTimes100@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::GetYieldPerPopTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 3028 : }

	pop	ebp
	ret	0
?lGetYieldPerPopTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetYieldPerPopTimes100
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetBaseYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eIndex$ = -16						; size = 4
_iResult$ = -12						; size = 4
_iExtra$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetBaseYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBaseYieldRateModifier, COMDAT

; 3033 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 3034 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3035 : 	const YieldTypes eIndex = (YieldTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eIndex$[ebp], eax

; 3036 : 	const int iExtra = luaL_optint(L, 3, 0);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iExtra$[ebp], eax

; 3037 : 	const int iResult = pkCity->getBaseYieldRateModifier(eIndex, iExtra);

	push	0
	mov	eax, DWORD PTR _iExtra$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getBaseYieldRateModifier@CvCity@@QBEHW4YieldTypes@@HPAVCvString@@@Z ; CvCity::getBaseYieldRateModifier
	mov	DWORD PTR _iResult$[ebp], eax

; 3038 : 
; 3039 : 	lua_pushinteger(L, iResult);

	mov	edx, DWORD PTR _iResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 3040 : 	return 1;

	mov	eax, 1

; 3041 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBaseYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBaseYieldRateModifier
_TEXT	ENDS
EXTRN	?getYieldRate@CvCity@@QBEHW4YieldTypes@@_N@Z:PROC ; CvCity::getYieldRate
EXTRN	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z:PROC	; luaL_optbool
; Function compile flags: /Odtp
;	COMDAT ?lGetYieldRate@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bIgnoreTrade$ = -13					; size = 1
_eIndex$ = -12						; size = 4
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetYieldRate@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetYieldRate, COMDAT

; 3045 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 3046 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3047 : 	const YieldTypes eIndex = (YieldTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eIndex$[ebp], eax

; 3048 : 	const bool bIgnoreTrade = luaL_optbool(L, 3, false);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _bIgnoreTrade$[ebp], al

; 3049 : 	const int iResult = pkCity->getYieldRate(eIndex, bIgnoreTrade);

	movzx	eax, BYTE PTR _bIgnoreTrade$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getYieldRate@CvCity@@QBEHW4YieldTypes@@_N@Z ; CvCity::getYieldRate
	mov	DWORD PTR _iResult$[ebp], eax

; 3050 : 
; 3051 : 	lua_pushinteger(L, iResult);

	mov	edx, DWORD PTR _iResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 3052 : 	return 1;

	mov	eax, 1

; 3053 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetYieldRate@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetYieldRate
_TEXT	ENDS
EXTRN	?getYieldRateTimes100@CvCity@@QBEHW4YieldTypes@@_N@Z:PROC ; CvCity::getYieldRateTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetYieldRateTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bIgnoreTrade$ = -13					; size = 1
_eIndex$ = -12						; size = 4
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetYieldRateTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetYieldRateTimes100, COMDAT

; 3057 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 3058 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3059 : 	const YieldTypes eIndex = (YieldTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eIndex$[ebp], eax

; 3060 : 	const bool bIgnoreTrade = luaL_optbool(L, 3, false);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _bIgnoreTrade$[ebp], al

; 3061 : 	const int iResult = pkCity->getYieldRateTimes100(eIndex, bIgnoreTrade);

	movzx	eax, BYTE PTR _bIgnoreTrade$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getYieldRateTimes100@CvCity@@QBEHW4YieldTypes@@_N@Z ; CvCity::getYieldRateTimes100
	mov	DWORD PTR _iResult$[ebp], eax

; 3062 : 
; 3063 : 	lua_pushinteger(L, iResult);

	mov	edx, DWORD PTR _iResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 3064 : 	return 1;

	mov	eax, 1

; 3065 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetYieldRateTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetYieldRateTimes100
_TEXT	ENDS
EXTRN	?getYieldRateModifier@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::getYieldRateModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eIndex$ = -12						; size = 4
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetYieldRateModifier, COMDAT

; 3069 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3070 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3071 : 	const YieldTypes eIndex = (YieldTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eIndex$[ebp], eax

; 3072 : 	const int iResult = pkCity->getYieldRateModifier(eIndex);

	mov	edx, DWORD PTR _eIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getYieldRateModifier@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::getYieldRateModifier
	mov	DWORD PTR _iResult$[ebp], eax

; 3073 : 
; 3074 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3075 : 	return 1;

	mov	eax, 1

; 3076 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetYieldRateModifier
_TEXT	ENDS
EXTRN	?getExtraSpecialistYield@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::getExtraSpecialistYield
; Function compile flags: /Odtp
;	COMDAT ?lGetExtraSpecialistYield@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eIndex$ = -12						; size = 4
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetExtraSpecialistYield@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetExtraSpecialistYield, COMDAT

; 3081 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3082 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3083 : 	const YieldTypes eIndex = (YieldTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eIndex$[ebp], eax

; 3084 : 	const int iResult = pkCity->getExtraSpecialistYield(eIndex);

	mov	edx, DWORD PTR _eIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getExtraSpecialistYield@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::getExtraSpecialistYield
	mov	DWORD PTR _iResult$[ebp], eax

; 3085 : 
; 3086 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3087 : 	return 1;

	mov	eax, 1

; 3088 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetExtraSpecialistYield@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetExtraSpecialistYield
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4YieldTypes@@W4SpecialistTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@W4SpecialistTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes,enum SpecialistTypes>
EXTRN	?getExtraSpecialistYield@CvCity@@QBEHW4YieldTypes@@W4SpecialistTypes@@@Z:PROC ; CvCity::getExtraSpecialistYield
; Function compile flags: /Odtp
;	COMDAT ?lGetExtraSpecialistYieldOfType@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetExtraSpecialistYieldOfType@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetExtraSpecialistYieldOfType, COMDAT

; 3092 : {

	push	ebp
	mov	ebp, esp

; 3093 : 	return BasicLuaMethod<int, YieldTypes, SpecialistTypes>(L, &CvCity::getExtraSpecialistYield);

	push	OFFSET ?getExtraSpecialistYield@CvCity@@QBEHW4YieldTypes@@W4SpecialistTypes@@@Z ; CvCity::getExtraSpecialistYield
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@W4SpecialistTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@W4SpecialistTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes,enum SpecialistTypes>
	add	esp, 8

; 3094 : }

	pop	ebp
	ret	0
?lGetExtraSpecialistYieldOfType@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetExtraSpecialistYieldOfType
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4DomainTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4DomainTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum DomainTypes>
EXTRN	?getDomainFreeExperience@CvCity@@QBEHW4DomainTypes@@@Z:PROC ; CvCity::getDomainFreeExperience
; Function compile flags: /Odtp
;	COMDAT ?lGetDomainFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetDomainFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetDomainFreeExperience, COMDAT

; 3099 : {

	push	ebp
	mov	ebp, esp

; 3100 : 	return BasicLuaMethod(L, &CvCity::getDomainFreeExperience);

	push	OFFSET ?getDomainFreeExperience@CvCity@@QBEHW4DomainTypes@@@Z ; CvCity::getDomainFreeExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4DomainTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4DomainTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum DomainTypes>
	add	esp, 8

; 3101 : }

	pop	ebp
	ret	0
?lGetDomainFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetDomainFreeExperience
_TEXT	ENDS
EXTRN	?getDomainProductionModifier@CvCity@@QBEHW4DomainTypes@@@Z:PROC ; CvCity::getDomainProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetDomainProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetDomainProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetDomainProductionModifier, COMDAT

; 3105 : {

	push	ebp
	mov	ebp, esp

; 3106 : 	return BasicLuaMethod(L, &CvCity::getDomainProductionModifier);

	push	OFFSET ?getDomainProductionModifier@CvCity@@QBEHW4DomainTypes@@@Z ; CvCity::getDomainProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4DomainTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4DomainTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum DomainTypes>
	add	esp, 8

; 3107 : }

	pop	ebp
	ret	0
?lGetDomainProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetDomainProductionModifier
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum PlayerTypes>
EXTRN	?isEverOwned@CvCity@@QBE_NW4PlayerTypes@@@Z:PROC ; CvCity::isEverOwned
; Function compile flags: /Odtp
;	COMDAT ?lIsEverOwned@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsEverOwned@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsEverOwned, COMDAT

; 3111 : {

	push	ebp
	mov	ebp, esp

; 3112 : 	return BasicLuaMethod(L, &CvCity::isEverOwned);

	push	OFFSET ?isEverOwned@CvCity@@QBE_NW4PlayerTypes@@@Z ; CvCity::isEverOwned
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum PlayerTypes>
	add	esp, 8

; 3113 : }

	pop	ebp
	ret	0
?lIsEverOwned@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsEverOwned
_TEXT	ENDS
EXTRN	?isRevealed@CvCity@@QBE_NW4TeamTypes@@_N@Z:PROC	; CvCity::isRevealed
; Function compile flags: /Odtp
;	COMDAT ?lIsRevealed@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsRevealed@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsRevealed, COMDAT

; 3117 : {

	push	ebp
	mov	ebp, esp

; 3118 : 	return BasicLuaMethod(L, &CvCity::isRevealed);

	push	OFFSET ?isRevealed@CvCity@@QBE_NW4TeamTypes@@_N@Z ; CvCity::isRevealed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4TeamTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum TeamTypes,bool>
	add	esp, 8

; 3119 : }

	pop	ebp
	ret	0
?lIsRevealed@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsRevealed
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AE_NW4TeamTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum TeamTypes,bool>
EXTRN	?setRevealed@CvCity@@QAE_NW4TeamTypes@@_N@Z:PROC ; CvCity::setRevealed
; Function compile flags: /Odtp
;	COMDAT ?lSetRevealed@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetRevealed@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lSetRevealed, COMDAT

; 3123 : {

	push	ebp
	mov	ebp, esp

; 3124 : 	return BasicLuaMethod(L, &CvCity::setRevealed);

	push	OFFSET ?setRevealed@CvCity@@QAE_NW4TeamTypes@@_N@Z ; CvCity::setRevealed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AE_NW4TeamTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum TeamTypes,bool>
	add	esp, 8

; 3125 : }

	pop	ebp
	ret	0
?lSetRevealed@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lSetRevealed
_TEXT	ENDS
EXTRN	?getName@CvCity@@QBE?BVCvString@@XZ:PROC	; CvCity::getName
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv71 = -52						; size = 4
$T226153 = -48						; size = 4
$T226148 = -44						; size = 28
_pkCity$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lGetName, COMDAT

; 3129 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 3130 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3131 : 	lua_pushstring(L, pkCity->getName());

	lea	ecx, DWORD PTR $T226148[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	mov	DWORD PTR tv71[ebp], eax
	mov	edx, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T226153[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T226153[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T226148[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 3132 : 	return 1;

	mov	eax, 1

; 3133 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T226148[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lGetName
EXTRN	?getNameKey@CvCity@@QBEPBDXZ:PROC		; CvCity::getNameKey
; Function compile flags: /Odtp
;	COMDAT ?lGetNameKey@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNameKey@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetNameKey, COMDAT

; 3140 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 3141 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3142 : 	lua_pushstring(L, pkCity->getNameKey());

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 3143 : 	return 1;

	mov	eax, 1

; 3144 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNameKey@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetNameKey
_TEXT	ENDS
EXTRN	?setName@CvCity@@QAEXPBD_N@Z:PROC		; CvCity::setName
EXTRN	_lua_tolstring:PROC
; Function compile flags: /Odtp
;	COMDAT ?lSetName@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_cityName$ = -12					; size = 4
_bFound$ = -5						; size = 1
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lSetName@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lSetName, COMDAT

; 3148 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3149 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3150 : 
; 3151 : 	const char* cityName = lua_tostring(L, 2);

	push	0
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tolstring
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _cityName$[ebp], eax

; 3152 : 	const bool bFound = luaL_optbool(L, 3, false);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _bFound$[ebp], al

; 3153 : 
; 3154 : 	pkCity->setName(cityName, bFound);

	movzx	eax, BYTE PTR _bFound$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cityName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?setName@CvCity@@QAEXPBD_N@Z		; CvCity::setName

; 3155 : 	return 0;

	xor	eax, eax

; 3156 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetName@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lSetName
_TEXT	ENDS
EXTRN	?IsHasResourceLocal@CvCity@@QBE_NW4ResourceTypes@@_N@Z:PROC ; CvCity::IsHasResourceLocal
; Function compile flags: /Odtp
;	COMDAT ?lIsHasResourceLocal@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -13						; size = 1
_pkCity$ = -12						; size = 4
_iResource$ = -8					; size = 4
_bTestVisible$ = -1					; size = 1
_L$ = 8							; size = 4
?lIsHasResourceLocal@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsHasResourceLocal, COMDAT

; 3160 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 3161 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3162 : 	const int iResource = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iResource$[ebp], eax

; 3163 : 	const bool bTestVisible = lua_toboolean(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bTestVisible$[ebp], al

; 3164 : 	const bool bResult = pkCity->IsHasResourceLocal((ResourceTypes)iResource, bTestVisible);

	movzx	ecx, BYTE PTR _bTestVisible$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iResource$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?IsHasResourceLocal@CvCity@@QBE_NW4ResourceTypes@@_N@Z ; CvCity::IsHasResourceLocal
	mov	BYTE PTR _bResult$[ebp], al

; 3165 : 
; 3166 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 3167 : 	return 1;

	mov	eax, 1

; 3168 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsHasResourceLocal@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsHasResourceLocal
_TEXT	ENDS
EXTRN	?GetBuildingProduction@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetBuildingProduction
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$222670 = -12					; size = 4
_iIndex$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingProduction, COMDAT

; 3172 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3173 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3174 : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 3175 : 	if(iIndex != NO_BUILDING)

	cmp	DWORD PTR _iIndex$[ebp], -1
	je	SHORT $LN2@lGetBuildi@2

; 3176 : 	{
; 3177 : 		const int iResult = pkCity->GetCityBuildings()->GetBuildingProduction((BuildingTypes)iIndex);

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetBuildingProduction@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetBuildingProduction
	mov	DWORD PTR _iResult$222670[ebp], eax

; 3178 : 		lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$222670[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3179 : 	}
; 3180 : 	else

	jmp	SHORT $LN1@lGetBuildi@2
$LN2@lGetBuildi@2:

; 3181 : 	{
; 3182 : 		lua_pushinteger(L, 0);

	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetBuildi@2:

; 3183 : 	}
; 3184 : 	return 1;

	mov	eax, 1

; 3185 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingProduction
_TEXT	ENDS
EXTRN	?SetBuildingProduction@CvCityBuildings@@QAEXW4BuildingTypes@@H@Z:PROC ; CvCityBuildings::SetBuildingProduction
; Function compile flags: /Odtp
;	COMDAT ?lSetBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iIndex$ = -12						; size = 4
_iNewValue$ = -8					; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lSetBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetBuildingProduction, COMDAT

; 3189 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3190 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3191 : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 3192 : 	const int iNewValue = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iNewValue$[ebp], eax

; 3193 : 	if(iIndex != NO_BUILDING)

	cmp	DWORD PTR _iIndex$[ebp], -1
	je	SHORT $LN1@lSetBuildi

; 3194 : 	{
; 3195 : 		pkCity->GetCityBuildings()->SetBuildingProduction((BuildingTypes)iIndex, iNewValue);

	mov	eax, DWORD PTR _iNewValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?SetBuildingProduction@CvCityBuildings@@QAEXW4BuildingTypes@@H@Z ; CvCityBuildings::SetBuildingProduction
$LN1@lSetBuildi:

; 3196 : 	}
; 3197 : 
; 3198 : 	return 1;

	mov	eax, 1

; 3199 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetBuildingProduction
_TEXT	ENDS
EXTRN	?ChangeBuildingProduction@CvCityBuildings@@QAEXW4BuildingTypes@@H@Z:PROC ; CvCityBuildings::ChangeBuildingProduction
; Function compile flags: /Odtp
;	COMDAT ?lChangeBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iIndex$ = -12						; size = 4
_iChange$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lChangeBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeBuildingProduction, COMDAT

; 3203 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3204 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3205 : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 3206 : 	const int iChange = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iChange$[ebp], eax

; 3207 : 	if(iIndex != NO_BUILDING)

	cmp	DWORD PTR _iIndex$[ebp], -1
	je	SHORT $LN1@lChangeBui

; 3208 : 	{
; 3209 : 		pkCity->GetCityBuildings()->ChangeBuildingProduction((BuildingTypes)iIndex, iChange);

	mov	eax, DWORD PTR _iChange$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?ChangeBuildingProduction@CvCityBuildings@@QAEXW4BuildingTypes@@H@Z ; CvCityBuildings::ChangeBuildingProduction
$LN1@lChangeBui:

; 3210 : 	}
; 3211 : 
; 3212 : 	return 1;

	mov	eax, 1

; 3213 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChangeBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeBuildingProduction
_TEXT	ENDS
EXTRN	?GetBuildingProductionTime@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetBuildingProductionTime
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$222695 = -12					; size = 4
_iIndex$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingProductionTime, COMDAT

; 3217 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3218 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3219 : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 3220 : 	if(iIndex != NO_BUILDING)

	cmp	DWORD PTR _iIndex$[ebp], -1
	je	SHORT $LN2@lGetBuildi@3

; 3221 : 	{
; 3222 : 		const int iResult = pkCity->GetCityBuildings()->GetBuildingProductionTime((BuildingTypes)iIndex);

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetBuildingProductionTime@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetBuildingProductionTime
	mov	DWORD PTR _iResult$222695[ebp], eax

; 3223 : 		lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$222695[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3224 : 	}
; 3225 : 	else

	jmp	SHORT $LN1@lGetBuildi@3
$LN2@lGetBuildi@3:

; 3226 : 	{
; 3227 : 		lua_pushinteger(L, 0);

	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetBuildi@3:

; 3228 : 	}
; 3229 : 	return 1;

	mov	eax, 1

; 3230 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingProductionTime
_TEXT	ENDS
EXTRN	?SetBuildingProductionTime@CvCityBuildings@@QAEXW4BuildingTypes@@H@Z:PROC ; CvCityBuildings::SetBuildingProductionTime
; Function compile flags: /Odtp
;	COMDAT ?lSetBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iIndex$ = -12						; size = 4
_iNewValue$ = -8					; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lSetBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetBuildingProductionTime, COMDAT

; 3234 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3235 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3236 : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 3237 : 	const int iNewValue = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iNewValue$[ebp], eax

; 3238 : 	if(iIndex != NO_BUILDING)

	cmp	DWORD PTR _iIndex$[ebp], -1
	je	SHORT $LN1@lSetBuildi@2

; 3239 : 	{
; 3240 : 		pkCity->GetCityBuildings()->SetBuildingProductionTime((BuildingTypes)iIndex, iNewValue);

	mov	eax, DWORD PTR _iNewValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?SetBuildingProductionTime@CvCityBuildings@@QAEXW4BuildingTypes@@H@Z ; CvCityBuildings::SetBuildingProductionTime
$LN1@lSetBuildi@2:

; 3241 : 	}
; 3242 : 
; 3243 : 	return 1;

	mov	eax, 1

; 3244 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetBuildingProductionTime
_TEXT	ENDS
EXTRN	?ChangeBuildingProductionTime@CvCityBuildings@@QAEXW4BuildingTypes@@H@Z:PROC ; CvCityBuildings::ChangeBuildingProductionTime
; Function compile flags: /Odtp
;	COMDAT ?lChangeBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iIndex$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lChangeBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeBuildingProductionTime, COMDAT

; 3248 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3249 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3250 : 	const int iIndex = toValue<BuildingTypes>(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingTypes>
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 3251 : 	if(iIndex != NO_BUILDING)

	cmp	DWORD PTR _iIndex$[ebp], -1
	je	SHORT $LN1@lChangeBui@2

; 3252 : 	{
; 3253 : 		pkCity->GetCityBuildings()->ChangeBuildingProductionTime((BuildingTypes)iIndex, toValue<int>(L, 3));

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _iIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?ChangeBuildingProductionTime@CvCityBuildings@@QAEXW4BuildingTypes@@H@Z ; CvCityBuildings::ChangeBuildingProductionTime
$LN1@lChangeBui@2:

; 3254 : 	}
; 3255 : 
; 3256 : 	return 1;

	mov	eax, 1

; 3257 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChangeBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeBuildingProductionTime
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z PROC	; CvLuaArgs::toValue<int>, COMDAT

; 18   : 	{

	push	ebp
	mov	ebp, esp

; 19   : 		return lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 20   : 	}

	pop	ebp
	ret	0
??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ENDP	; CvLuaArgs::toValue<int>
_TEXT	ENDS
EXTRN	?GetBuildingOriginalOwner@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetBuildingOriginalOwner
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
;	COMDAT ?lGetBuildingOriginalOwner@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$222727 = -12					; size = 4
_iIndex$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetBuildingOriginalOwner@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingOriginalOwner, COMDAT

; 3261 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3262 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3263 : 	const int iIndex = toValue<BuildingTypes>(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingTypes>
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 3264 : 	if(iIndex != NO_BUILDING)

	cmp	DWORD PTR _iIndex$[ebp], -1
	je	SHORT $LN2@lGetBuildi@4

; 3265 : 	{
; 3266 : 		const int iResult = pkCity->GetCityBuildings()->GetBuildingOriginalOwner((BuildingTypes)iIndex);

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetBuildingOriginalOwner@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetBuildingOriginalOwner
	mov	DWORD PTR _iResult$222727[ebp], eax

; 3267 : 		lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$222727[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3268 : 	}
; 3269 : 	else

	jmp	SHORT $LN1@lGetBuildi@4
$LN2@lGetBuildi@4:

; 3270 : 	{
; 3271 : 		lua_pushinteger(L, -1);

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetBuildi@4:

; 3272 : 	}
; 3273 : 	return 1;

	mov	eax, 1

; 3274 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBuildingOriginalOwner@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingOriginalOwner
_TEXT	ENDS
EXTRN	?GetBuildingOriginalTime@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetBuildingOriginalTime
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingOriginalTime@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$222737 = -12					; size = 4
_iIndex$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetBuildingOriginalTime@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingOriginalTime, COMDAT

; 3278 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3279 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3280 : 	const int iIndex = toValue<BuildingTypes>(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingTypes>
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 3281 : 	if(iIndex != NO_BUILDING)

	cmp	DWORD PTR _iIndex$[ebp], -1
	je	SHORT $LN2@lGetBuildi@5

; 3282 : 	{
; 3283 : 		const int iResult = pkCity->GetCityBuildings()->GetBuildingOriginalTime((BuildingTypes)iIndex);

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetBuildingOriginalTime@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetBuildingOriginalTime
	mov	DWORD PTR _iResult$222737[ebp], eax

; 3284 : 		lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$222737[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3285 : 	}
; 3286 : 	else

	jmp	SHORT $LN1@lGetBuildi@5
$LN2@lGetBuildi@5:

; 3287 : 	{
; 3288 : 		lua_pushinteger(L, 0);

	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetBuildi@5:

; 3289 : 	}
; 3290 : 	return 1;

	mov	eax, 1

; 3291 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBuildingOriginalTime@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingOriginalTime
_TEXT	ENDS
EXTRN	?getUnitProduction@CvCity@@QBEHW4UnitTypes@@@Z:PROC ; CvCity::getUnitProduction
; Function compile flags: /Odtp
;	COMDAT ?lGetUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetUnitProduction, COMDAT

; 3295 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3296 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3297 : 	const int iResult = pkCity->getUnitProduction(toValue<UnitTypes>(L, 2));

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum UnitTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getUnitProduction@CvCity@@QBEHW4UnitTypes@@@Z ; CvCity::getUnitProduction
	mov	DWORD PTR _iResult$[ebp], eax

; 3298 : 
; 3299 : 	lua_pushinteger(L, iResult);

	mov	edx, DWORD PTR _iResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 3300 : 	return 1;

	mov	eax, 1

; 3301 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetUnitProduction
_TEXT	ENDS
EXTRN	?setUnitProduction@CvCity@@QAEXW4UnitTypes@@H@Z:PROC ; CvCity::setUnitProduction
; Function compile flags: /Odtp
;	COMDAT ?lSetUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lSetUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lSetUnitProduction, COMDAT

; 3305 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 3306 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3307 : 	pkCity->setUnitProduction(toValue<UnitTypes>(L, 2), toValue<int>(L, 3));

	push	3
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	push	2
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum UnitTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?setUnitProduction@CvCity@@QAEXW4UnitTypes@@H@Z ; CvCity::setUnitProduction

; 3308 : 
; 3309 : 	return 1;

	mov	eax, 1

; 3310 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lSetUnitProduction
_TEXT	ENDS
EXTRN	?changeUnitProduction@CvCity@@QAEXW4UnitTypes@@H@Z:PROC ; CvCity::changeUnitProduction
; Function compile flags: /Odtp
;	COMDAT ?lChangeUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lChangeUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeUnitProduction, COMDAT

; 3314 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 3315 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3316 : 	pkCity->changeUnitProduction(toValue<UnitTypes>(L, 2), toValue<int>(L, 3));

	push	3
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	push	2
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum UnitTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?changeUnitProduction@CvCity@@QAEXW4UnitTypes@@H@Z ; CvCity::changeUnitProduction

; 3317 : 
; 3318 : 	return 1;

	mov	eax, 1

; 3319 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChangeUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeUnitProduction
_TEXT	ENDS
EXTRN	?IsCanAddSpecialistToBuilding@CvCityCitizens@@QAE_NW4BuildingTypes@@@Z:PROC ; CvCityCitizens::IsCanAddSpecialistToBuilding
; Function compile flags: /Odtp
;	COMDAT ?lIsCanAddSpecialistToBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$222770 = -9					; size = 1
_bt$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsCanAddSpecialistToBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsCanAddSpecialistToBuilding, COMDAT

; 3323 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3324 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3325 : 	BuildingTypes bt = toValue<BuildingTypes>(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingTypes>
	add	esp, 8
	mov	DWORD PTR _bt$[ebp], eax

; 3326 : #ifdef AUI_WARNING_FIXES
; 3327 : 	bool bResult = false;
; 3328 : #endif
; 3329 : 	if(bt != NO_BUILDING)

	cmp	DWORD PTR _bt$[ebp], -1
	je	SHORT $LN2@lIsCanAddS

; 3330 : 	{
; 3331 : #ifdef AUI_WARNING_FIXES
; 3332 : 		bResult = pkCity->GetCityCitizens()->IsCanAddSpecialistToBuilding(bt);
; 3333 : 	}
; 3334 : 	lua_pushboolean(L, bResult ? 1 : 0);
; 3335 : #else
; 3336 : 		const bool bResult = pkCity->GetCityCitizens()->IsCanAddSpecialistToBuilding(bt);

	mov	edx, DWORD PTR _bt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?IsCanAddSpecialistToBuilding@CvCityCitizens@@QAE_NW4BuildingTypes@@@Z ; CvCityCitizens::IsCanAddSpecialistToBuilding
	mov	BYTE PTR _bResult$222770[ebp], al

; 3337 : 		lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$222770[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 3338 : 	}
; 3339 : 	else

	jmp	SHORT $LN1@lIsCanAddS
$LN2@lIsCanAddS:

; 3340 : 	{
; 3341 : 		lua_pushboolean(L, false);

	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8
$LN1@lIsCanAddS:

; 3342 : 	}
; 3343 : #endif
; 3344 : 	return 1;

	mov	eax, 1

; 3345 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsCanAddSpecialistToBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsCanAddSpecialistToBuilding
_TEXT	ENDS
EXTRN	?GetSpecialistUpgradeThreshold@CvCityCitizens@@QAEHW4UnitClassTypes@@@Z:PROC ; CvCityCitizens::GetSpecialistUpgradeThreshold
; Function compile flags: /Odtp
;	COMDAT ?lGetSpecialistUpgradeThreshold@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eUnitClassType$ = -12					; size = 4
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetSpecialistUpgradeThreshold@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSpecialistUpgradeThreshold, COMDAT

; 3349 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3350 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3351 : 	const UnitClassTypes eUnitClassType = toValue<UnitClassTypes>(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum UnitClassTypes>
	add	esp, 8
	mov	DWORD PTR _eUnitClassType$[ebp], eax

; 3352 : 	const int iResult = pkCity->GetCityCitizens()->GetSpecialistUpgradeThreshold(eUnitClassType);

	mov	edx, DWORD PTR _eUnitClassType$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?GetSpecialistUpgradeThreshold@CvCityCitizens@@QAEHW4UnitClassTypes@@@Z ; CvCityCitizens::GetSpecialistUpgradeThreshold
	mov	DWORD PTR _iResult$[ebp], eax

; 3353 : 
; 3354 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3355 : 	return 1;

	mov	eax, 1

; 3356 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetSpecialistUpgradeThreshold@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSpecialistUpgradeThreshold
_TEXT	ENDS
EXTRN	?GetNumSpecialistsAllowedByBuilding@CvCityCitizens@@QAEHABVCvBuildingEntry@@@Z:PROC ; CvCityCitizens::GetNumSpecialistsAllowedByBuilding
EXTRN	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z:PROC ; CvGlobals::getBuildingInfo
; Function compile flags: /Odtp
;	COMDAT ?lGetNumSpecialistsAllowedByBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkBuildingInfo$222792 = -16				; size = 4
_iResult$ = -12						; size = 4
_bt$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumSpecialistsAllowedByBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumSpecialistsAllowedByBuilding, COMDAT

; 3360 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 3361 : 	int iResult = 0;

	mov	DWORD PTR _iResult$[ebp], 0

; 3362 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3363 : 	BuildingTypes bt = toValue<BuildingTypes>(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingTypes>
	add	esp, 8
	mov	DWORD PTR _bt$[ebp], eax

; 3364 : 	if(bt != NO_BUILDING)

	cmp	DWORD PTR _bt$[ebp], -1
	je	SHORT $LN2@lGetNumSpe

; 3365 : 	{
; 3366 : 		CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(bt);

	mov	edx, DWORD PTR _bt$[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingInfo$222792[ebp], eax

; 3367 : 		if(pkBuildingInfo)

	cmp	DWORD PTR _pkBuildingInfo$222792[ebp], 0
	je	SHORT $LN2@lGetNumSpe

; 3368 : 		{
; 3369 : 			iResult = pkCity->GetCityCitizens()->GetNumSpecialistsAllowedByBuilding(*pkBuildingInfo);

	mov	eax, DWORD PTR _pkBuildingInfo$222792[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?GetNumSpecialistsAllowedByBuilding@CvCityCitizens@@QAEHABVCvBuildingEntry@@@Z ; CvCityCitizens::GetNumSpecialistsAllowedByBuilding
	mov	DWORD PTR _iResult$[ebp], eax
$LN2@lGetNumSpe:

; 3370 : 		}
; 3371 : 	}
; 3372 : 
; 3373 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3374 : 	return 1;

	mov	eax, 1

; 3375 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumSpecialistsAllowedByBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumSpecialistsAllowedByBuilding
_TEXT	ENDS
EXTRN	?GetSpecialistCount@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z:PROC ; CvCityCitizens::GetSpecialistCount
; Function compile flags: /Odtp
;	COMDAT ?lGetSpecialistCount@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iIndex$ = -12						; size = 4
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetSpecialistCount@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSpecialistCount, COMDAT

; 3379 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3380 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3381 : #ifndef AUI_WARNING_FIXES
; 3382 : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 3383 : #endif
; 3384 : 	const int iResult = pkCity->GetCityCitizens()->GetSpecialistCount(toValue<SpecialistTypes>(L, 2));

	push	2
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4SpecialistTypes@@@CvLuaArgs@@YA?AW4SpecialistTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum SpecialistTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?GetSpecialistCount@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z ; CvCityCitizens::GetSpecialistCount
	mov	DWORD PTR _iResult$[ebp], eax

; 3385 : 
; 3386 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3387 : 	return 1;

	mov	eax, 1

; 3388 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetSpecialistCount@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSpecialistCount
_TEXT	ENDS
EXTRN	?GetSpecialistGreatPersonProgress@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z:PROC ; CvCityCitizens::GetSpecialistGreatPersonProgress
; Function compile flags: /Odtp
;	COMDAT ?lGetSpecialistGreatPersonProgress@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iIndex$ = -12						; size = 4
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetSpecialistGreatPersonProgress@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSpecialistGreatPersonProgress, COMDAT

; 3392 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3393 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3394 : #ifndef AUI_WARNING_FIXES
; 3395 : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 3396 : #endif
; 3397 : 	const int iResult = pkCity->GetCityCitizens()->GetSpecialistGreatPersonProgress(toValue<SpecialistTypes>(L, 2));

	push	2
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4SpecialistTypes@@@CvLuaArgs@@YA?AW4SpecialistTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum SpecialistTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?GetSpecialistGreatPersonProgress@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z ; CvCityCitizens::GetSpecialistGreatPersonProgress
	mov	DWORD PTR _iResult$[ebp], eax

; 3398 : 
; 3399 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3400 : 	return 1;

	mov	eax, 1

; 3401 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetSpecialistGreatPersonProgress@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSpecialistGreatPersonProgress
_TEXT	ENDS
EXTRN	?GetSpecialistGreatPersonProgressTimes100@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z:PROC ; CvCityCitizens::GetSpecialistGreatPersonProgressTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetSpecialistGreatPersonProgressTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iIndex$ = -12						; size = 4
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetSpecialistGreatPersonProgressTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSpecialistGreatPersonProgressTimes100, COMDAT

; 3406 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3407 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3408 : #ifndef AUI_WARNING_FIXES
; 3409 : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 3410 : #endif
; 3411 : 	const int iResult = pkCity->GetCityCitizens()->GetSpecialistGreatPersonProgressTimes100(toValue<SpecialistTypes>(L, 2));

	push	2
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4SpecialistTypes@@@CvLuaArgs@@YA?AW4SpecialistTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum SpecialistTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?GetSpecialistGreatPersonProgressTimes100@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z ; CvCityCitizens::GetSpecialistGreatPersonProgressTimes100
	mov	DWORD PTR _iResult$[ebp], eax

; 3412 : 
; 3413 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3414 : 	return 1;

	mov	eax, 1

; 3415 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetSpecialistGreatPersonProgressTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSpecialistGreatPersonProgressTimes100
_TEXT	ENDS
EXTRN	?ChangeSpecialistGreatPersonProgressTimes100@CvCityCitizens@@QAEXW4SpecialistTypes@@H@Z:PROC ; CvCityCitizens::ChangeSpecialistGreatPersonProgressTimes100
; Function compile flags: /Odtp
;	COMDAT ?lChangeSpecialistGreatPersonProgressTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iIndex$ = -12						; size = 4
_iChange$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lChangeSpecialistGreatPersonProgressTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeSpecialistGreatPersonProgressTimes100, COMDAT

; 3420 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3421 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3422 : #ifndef AUI_WARNING_FIXES
; 3423 : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 3424 : #endif
; 3425 : 	const int iChange = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iChange$[ebp], eax

; 3426 : 	pkCity->GetCityCitizens()->ChangeSpecialistGreatPersonProgressTimes100(toValue<SpecialistTypes>(L, 2), iChange);

	mov	eax, DWORD PTR _iChange$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4SpecialistTypes@@@CvLuaArgs@@YA?AW4SpecialistTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum SpecialistTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?ChangeSpecialistGreatPersonProgressTimes100@CvCityCitizens@@QAEXW4SpecialistTypes@@H@Z ; CvCityCitizens::ChangeSpecialistGreatPersonProgressTimes100

; 3427 : 
; 3428 : 	return 1;

	mov	eax, 1

; 3429 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChangeSpecialistGreatPersonProgressTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeSpecialistGreatPersonProgressTimes100
_TEXT	ENDS
EXTRN	?GetNumSpecialistsInBuilding@CvCityCitizens@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityCitizens::GetNumSpecialistsInBuilding
; Function compile flags: /Odtp
;	COMDAT ?lGetNumSpecialistsInBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iIndex$ = -12						; size = 4
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumSpecialistsInBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumSpecialistsInBuilding, COMDAT

; 3434 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3435 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3436 : #ifndef AUI_WARNING_FIXES
; 3437 : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 3438 : #endif
; 3439 : 	const int iResult = pkCity->GetCityCitizens()->GetNumSpecialistsInBuilding(toValue<BuildingTypes>(L, 2));

	push	2
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?GetNumSpecialistsInBuilding@CvCityCitizens@@QBEHW4BuildingTypes@@@Z ; CvCityCitizens::GetNumSpecialistsInBuilding
	mov	DWORD PTR _iResult$[ebp], eax

; 3440 : 
; 3441 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3442 : 	return 1;

	mov	eax, 1

; 3443 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumSpecialistsInBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumSpecialistsInBuilding
_TEXT	ENDS
EXTRN	?DoReallocateCitizens@CvCityCitizens@@QAEXXZ:PROC ; CvCityCitizens::DoReallocateCitizens
; Function compile flags: /Odtp
;	COMDAT ?lDoReallocateCitizens@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lDoReallocateCitizens@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lDoReallocateCitizens, COMDAT

; 3448 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 3449 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3450 : 	pkCity->GetCityCitizens()->DoReallocateCitizens();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?DoReallocateCitizens@CvCityCitizens@@QAEXXZ ; CvCityCitizens::DoReallocateCitizens

; 3451 : 
; 3452 : 	return 1;

	mov	eax, 1

; 3453 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lDoReallocateCitizens@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lDoReallocateCitizens
_TEXT	ENDS
EXTRN	?DoVerifyWorkingPlots@CvCityCitizens@@QAEXXZ:PROC ; CvCityCitizens::DoVerifyWorkingPlots
; Function compile flags: /Odtp
;	COMDAT ?lDoVerifyWorkingPlots@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lDoVerifyWorkingPlots@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lDoVerifyWorkingPlots, COMDAT

; 3458 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 3459 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3460 : 	pkCity->GetCityCitizens()->DoVerifyWorkingPlots();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?DoVerifyWorkingPlots@CvCityCitizens@@QAEXXZ ; CvCityCitizens::DoVerifyWorkingPlots

; 3461 : 
; 3462 : 	return 1;

	mov	eax, 1

; 3463 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lDoVerifyWorkingPlots@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lDoVerifyWorkingPlots
_TEXT	ENDS
EXTRN	?IsNoAutoAssignSpecialists@CvCityCitizens@@QBE_NXZ:PROC ; CvCityCitizens::IsNoAutoAssignSpecialists
; Function compile flags: /Odtp
;	COMDAT ?lIsNoAutoAssignSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -5						; size = 1
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsNoAutoAssignSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsNoAutoAssignSpecialists, COMDAT

; 3468 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3469 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3470 : 	const bool bResult = pkCity->GetCityCitizens()->IsNoAutoAssignSpecialists();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?IsNoAutoAssignSpecialists@CvCityCitizens@@QBE_NXZ ; CvCityCitizens::IsNoAutoAssignSpecialists
	mov	BYTE PTR _bResult$[ebp], al

; 3471 : 
; 3472 : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 3473 : 
; 3474 : 	return 1;

	mov	eax, 1

; 3475 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsNoAutoAssignSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsNoAutoAssignSpecialists
_TEXT	ENDS
EXTRN	?GetFocusType@CvCityCitizens@@QBE?AW4CityAIFocusTypes@@XZ:PROC ; CvCityCitizens::GetFocusType
; Function compile flags: /Odtp
;	COMDAT ?lGetFocusType@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetFocusType@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetFocusType, COMDAT

; 3480 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3481 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3482 : 	const int iResult = pkCity->GetCityCitizens()->GetFocusType();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?GetFocusType@CvCityCitizens@@QBE?AW4CityAIFocusTypes@@XZ ; CvCityCitizens::GetFocusType
	mov	DWORD PTR _iResult$[ebp], eax

; 3483 : 
; 3484 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3485 : 
; 3486 : 	return 1;

	mov	eax, 1

; 3487 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetFocusType@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetFocusType
_TEXT	ENDS
EXTRN	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z:PROC ; CvCityCitizens::SetFocusType
; Function compile flags: /Odtp
;	COMDAT ?lSetFocusType@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iFocus$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lSetFocusType@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lSetFocusType, COMDAT

; 3492 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3493 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3494 : 	const int iFocus = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iFocus$[ebp], eax

; 3495 : 
; 3496 : 	pkCity->GetCityCitizens()->SetFocusType((CityAIFocusTypes) iFocus);

	mov	edx, DWORD PTR _iFocus$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType

; 3497 : 
; 3498 : 	return 1;

	mov	eax, 1

; 3499 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetFocusType@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lSetFocusType
_TEXT	ENDS
EXTRN	?IsForcedAvoidGrowth@CvCityCitizens@@QAE_NXZ:PROC ; CvCityCitizens::IsForcedAvoidGrowth
; Function compile flags: /Odtp
;	COMDAT ?lIsForcedAvoidGrowth@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsForcedAvoidGrowth@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsForcedAvoidGrowth, COMDAT

; 3504 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3505 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3506 : 	const int iResult = pkCity->GetCityCitizens()->IsForcedAvoidGrowth();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?IsForcedAvoidGrowth@CvCityCitizens@@QAE_NXZ ; CvCityCitizens::IsForcedAvoidGrowth
	movzx	ecx, al
	mov	DWORD PTR _iResult$[ebp], ecx

; 3507 : 
; 3508 : 	lua_pushboolean(L, iResult);

	mov	edx, DWORD PTR _iResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 3509 : 
; 3510 : 	return 1;

	mov	eax, 1

; 3511 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsForcedAvoidGrowth@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsForcedAvoidGrowth
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4UnitCombatTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitCombatTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitCombatTypes>
EXTRN	?getUnitCombatFreeExperience@CvCity@@QBEHW4UnitCombatTypes@@@Z:PROC ; CvCity::getUnitCombatFreeExperience
; Function compile flags: /Odtp
;	COMDAT ?lGetUnitCombatFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitCombatFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetUnitCombatFreeExperience, COMDAT

; 3518 : {

	push	ebp
	mov	ebp, esp

; 3519 : 	return BasicLuaMethod(L, &CvCity::getUnitCombatFreeExperience);

	push	OFFSET ?getUnitCombatFreeExperience@CvCity@@QBEHW4UnitCombatTypes@@@Z ; CvCity::getUnitCombatFreeExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4UnitCombatTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitCombatTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitCombatTypes>
	add	esp, 8

; 3520 : }

	pop	ebp
	ret	0
?lGetUnitCombatFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetUnitCombatFreeExperience
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4PromotionTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4PromotionTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum PromotionTypes>
EXTRN	?getFreePromotionCount@CvCity@@QBEHW4PromotionTypes@@@Z:PROC ; CvCity::getFreePromotionCount
; Function compile flags: /Odtp
;	COMDAT ?lGetFreePromotionCount@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFreePromotionCount@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFreePromotionCount, COMDAT

; 3524 : {

	push	ebp
	mov	ebp, esp

; 3525 : 	return BasicLuaMethod(L, &CvCity::getFreePromotionCount);

	push	OFFSET ?getFreePromotionCount@CvCity@@QBEHW4PromotionTypes@@@Z ; CvCity::getFreePromotionCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4PromotionTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4PromotionTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum PromotionTypes>
	add	esp, 8

; 3526 : }

	pop	ebp
	ret	0
?lGetFreePromotionCount@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFreePromotionCount
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4PromotionTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4PromotionTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum PromotionTypes>
EXTRN	?isFreePromotion@CvCity@@QBE_NW4PromotionTypes@@@Z:PROC ; CvCity::isFreePromotion
; Function compile flags: /Odtp
;	COMDAT ?lIsFreePromotion@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsFreePromotion@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsFreePromotion, COMDAT

; 3530 : {

	push	ebp
	mov	ebp, esp

; 3531 : 	return BasicLuaMethod(L, &CvCity::isFreePromotion);

	push	OFFSET ?isFreePromotion@CvCity@@QBE_NW4PromotionTypes@@@Z ; CvCity::isFreePromotion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4PromotionTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4PromotionTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum PromotionTypes>
	add	esp, 8

; 3532 : }

	pop	ebp
	ret	0
?lIsFreePromotion@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsFreePromotion
_TEXT	ENDS
EXTRN	?getSpecialistFreeExperience@CvCity@@QBEHXZ:PROC ; CvCity::getSpecialistFreeExperience
; Function compile flags: /Odtp
;	COMDAT ?lGetSpecialistFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetSpecialistFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSpecialistFreeExperience, COMDAT

; 3536 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3537 : #ifdef DEL_RANGED_COUNTERATTACKS
; 3538 : 	return BasicLuaMethod(L, &CvCity::getSpecialistFreeExperience);
; 3539 : #else
; 3540 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3541 : 	const int iResult = pkCity->getSpecialistFreeExperience();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getSpecialistFreeExperience@CvCity@@QBEHXZ ; CvCity::getSpecialistFreeExperience
	mov	DWORD PTR _iResult$[ebp], eax

; 3542 : 
; 3543 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3544 : 	return 1;

	mov	eax, 1

; 3545 : #endif
; 3546 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetSpecialistFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSpecialistFreeExperience
_TEXT	ENDS
EXTRN	?updateStrengthValue@CvCity@@QAEXXZ:PROC	; CvCity::updateStrengthValue
; Function compile flags: /Odtp
;	COMDAT ?lUpdateStrengthValue@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lUpdateStrengthValue@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lUpdateStrengthValue, COMDAT

; 3550 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 3551 : #ifdef DEL_RANGED_COUNTERATTACKS
; 3552 : 	return BasicLuaMethod(L, &CvCity::updateStrengthValue);
; 3553 : #else
; 3554 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3555 : 	pkCity->updateStrengthValue();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?updateStrengthValue@CvCity@@QAEXXZ	; CvCity::updateStrengthValue

; 3556 : 
; 3557 : 	return 1;

	mov	eax, 1

; 3558 : #endif
; 3559 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lUpdateStrengthValue@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lUpdateStrengthValue
_TEXT	ENDS
EXTRN	?getStrengthValue@CvCity@@QBEH_N@Z:PROC		; CvCity::getStrengthValue
; Function compile flags: /Odtp
;	COMDAT ?lGetStrengthValue@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetStrengthValue@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetStrengthValue, COMDAT

; 3563 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3564 : #ifdef DEL_RANGED_COUNTERATTACKS
; 3565 : 	return BasicLuaMethod(L, &CvCity::getStrengthValue);
; 3566 : #else
; 3567 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3568 : 	const int iResult = pkCity->getStrengthValue();

	push	0
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getStrengthValue@CvCity@@QBEH_N@Z	; CvCity::getStrengthValue
	mov	DWORD PTR _iResult$[ebp], eax

; 3569 : 
; 3570 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3571 : 	return 1;

	mov	eax, 1

; 3572 : #endif
; 3573 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetStrengthValue@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetStrengthValue
_TEXT	ENDS
EXTRN	?getDamage@CvCity@@QBEHXZ:PROC			; CvCity::getDamage
; Function compile flags: /Odtp
;	COMDAT ?lGetDamage@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetDamage@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lGetDamage, COMDAT

; 3577 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3578 : #ifdef DEL_RANGED_COUNTERATTACKS
; 3579 : 	return BasicLuaMethod(L, &CvCity::getDamage);
; 3580 : #else
; 3581 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3582 : 	const int iResult = pkCity->getDamage();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getDamage@CvCity@@QBEHXZ		; CvCity::getDamage
	mov	DWORD PTR _iResult$[ebp], eax

; 3583 : 
; 3584 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3585 : 	return 1;

	mov	eax, 1

; 3586 : #endif
; 3587 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetDamage@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lGetDamage
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool>
EXTRN	?setDamage@CvCity@@QAEXH_N@Z:PROC		; CvCity::setDamage
; Function compile flags: /Odtp
;	COMDAT ?lSetDamage@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetDamage@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lSetDamage, COMDAT

; 3591 : {

	push	ebp
	mov	ebp, esp

; 3592 : 	return BasicLuaMethod(L, &CvCity::setDamage);

	push	OFFSET ?setDamage@CvCity@@QAEXH_N@Z	; CvCity::setDamage
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool>
	add	esp, 8

; 3593 : }

	pop	ebp
	ret	0
?lSetDamage@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lSetDamage
_TEXT	ENDS
EXTRN	?changeDamage@CvCity@@QAEXH@Z:PROC		; CvCity::changeDamage
; Function compile flags: /Odtp
;	COMDAT ?lChangeDamage@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeDamage@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lChangeDamage, COMDAT

; 3597 : {

	push	ebp
	mov	ebp, esp

; 3598 : 	return BasicLuaMethod(L, &CvCity::changeDamage);

	push	OFFSET ?changeDamage@CvCity@@QAEXH@Z	; CvCity::changeDamage
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 3599 : }

	pop	ebp
	ret	0
?lChangeDamage@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lChangeDamage
_TEXT	ENDS
EXTRN	?GetMaxHitPoints@CvCity@@QBEHXZ:PROC		; CvCity::GetMaxHitPoints
; Function compile flags: /Odtp
;	COMDAT ?lGetMaxHitPoints@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMaxHitPoints@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetMaxHitPoints, COMDAT

; 3603 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3604 : #ifdef DEL_RANGED_COUNTERATTACKS
; 3605 : 	return BasicLuaMethod(L, &CvCity::GetMaxHitPoints);
; 3606 : #else
; 3607 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3608 : 	const int iResult = pkCity->GetMaxHitPoints();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetMaxHitPoints@CvCity@@QBEHXZ		; CvCity::GetMaxHitPoints
	mov	DWORD PTR _iResult$[ebp], eax

; 3609 : 
; 3610 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3611 : 	return 1;

	mov	eax, 1

; 3612 : #endif
; 3613 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMaxHitPoints@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetMaxHitPoints
_TEXT	ENDS
EXTRN	?canRangeStrike@CvCity@@QBE_NXZ:PROC		; CvCity::canRangeStrike
; Function compile flags: /Odtp
;	COMDAT ?lCanRangeStrike@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanRangeStrike@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanRangeStrike, COMDAT

; 3617 : {

	push	ebp
	mov	ebp, esp

; 3618 : 	return BasicLuaMethod(L, &CvCity::canRangeStrike);

	push	OFFSET ?canRangeStrike@CvCity@@QBE_NXZ	; CvCity::canRangeStrike
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 3619 : }

	pop	ebp
	ret	0
?lCanRangeStrike@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanRangeStrike
_TEXT	ENDS
EXTRN	?CanRangeStrikeNow@CvCity@@QBE_NXZ:PROC		; CvCity::CanRangeStrikeNow
; Function compile flags: /Odtp
;	COMDAT ?lCanRangeStrikeNow@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanRangeStrikeNow@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanRangeStrikeNow, COMDAT

; 3622 : {

	push	ebp
	mov	ebp, esp

; 3623 : 	return BasicLuaMethod(L, &CvCity::CanRangeStrikeNow);

	push	OFFSET ?CanRangeStrikeNow@CvCity@@QBE_NXZ ; CvCity::CanRangeStrikeNow
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 3624 : }

	pop	ebp
	ret	0
?lCanRangeStrikeNow@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanRangeStrikeNow
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NHH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NHH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,int,int>
EXTRN	?canRangeStrikeAt@CvCity@@QBE_NHH@Z:PROC	; CvCity::canRangeStrikeAt
; Function compile flags: /Odtp
;	COMDAT ?lCanRangeStrikeAt@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanRangeStrikeAt@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanRangeStrikeAt, COMDAT

; 3628 : {

	push	ebp
	mov	ebp, esp

; 3629 : 	return BasicLuaMethod(L, &CvCity::canRangeStrikeAt);

	push	OFFSET ?canRangeStrikeAt@CvCity@@QBE_NHH@Z ; CvCity::canRangeStrikeAt
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NHH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NHH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,int,int>
	add	esp, 8

; 3630 : }

	pop	ebp
	ret	0
?lCanRangeStrikeAt@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanRangeStrikeAt
_TEXT	ENDS
EXTRN	?isMadeAttack@CvCity@@QBE_NXZ:PROC		; CvCity::isMadeAttack
; Function compile flags: /Odtp
;	COMDAT ?lHasPerformedRangedStrikeThisTurn@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasPerformedRangedStrikeThisTurn@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lHasPerformedRangedStrikeThisTurn, COMDAT

; 3633 : {

	push	ebp
	mov	ebp, esp

; 3634 : 	return BasicLuaMethod(L, &CvCity::isMadeAttack);

	push	OFFSET ?isMadeAttack@CvCity@@QBE_NXZ	; CvCity::isMadeAttack
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 3635 : }

	pop	ebp
	ret	0
?lHasPerformedRangedStrikeThisTurn@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lHasPerformedRangedStrikeThisTurn
_TEXT	ENDS
EXTRN	?rangeCombatUnitDefense@CvCity@@QBEHPBVCvUnit@@@Z:PROC ; CvCity::rangeCombatUnitDefense
; Function compile flags: /Odtp
;	COMDAT ?lRangeCombatUnitDefense@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkDefender$ = -12					; size = 4
_iDefenseStr$ = -8					; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lRangeCombatUnitDefense@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lRangeCombatUnitDefense, COMDAT

; 3638 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3639 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3640 : 	CvUnit* pkDefender = CvLuaUnit::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkDefender$[ebp], eax

; 3641 : 
; 3642 : 	const int iDefenseStr = pkCity->rangeCombatUnitDefense(pkDefender);

	mov	edx, DWORD PTR _pkDefender$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?rangeCombatUnitDefense@CvCity@@QBEHPBVCvUnit@@@Z ; CvCity::rangeCombatUnitDefense
	mov	DWORD PTR _iDefenseStr$[ebp], eax

; 3643 : 	lua_pushinteger(L, iDefenseStr);

	mov	eax, DWORD PTR _iDefenseStr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3644 : 	return 1;

	mov	eax, 1

; 3645 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lRangeCombatUnitDefense@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lRangeCombatUnitDefense
_TEXT	ENDS
EXTRN	?rangeCombatDamage@CvCity@@QBEHPBVCvUnit@@PAV1@_N@Z:PROC ; CvCity::rangeCombatDamage
; Function compile flags: /Odtp
;	COMDAT ?lRangeCombatDamage@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iRangedDamage$ = -20					; size = 4
_bIncludeRand$ = -13					; size = 1
_pkDefendingUnit$ = -12					; size = 4
_pkDefendingCity$ = -8					; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lRangeCombatDamage@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lRangeCombatDamage, COMDAT

; 3648 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 3649 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3650 : 	CvUnit* pkDefendingUnit = CvLuaUnit::GetInstance(L, 2, false);

	push	0
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkDefendingUnit$[ebp], eax

; 3651 : 	CvCity* pkDefendingCity = GetInstance(L, 3, false);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkDefendingCity$[ebp], eax

; 3652 : 	bool bIncludeRand = luaL_optbool(L, 4, false);

	push	0
	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _bIncludeRand$[ebp], al

; 3653 : 
; 3654 : 	const int iRangedDamage = pkCity->rangeCombatDamage(pkDefendingUnit, pkDefendingCity, bIncludeRand);

	movzx	ecx, BYTE PTR _bIncludeRand$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkDefendingCity$[ebp]
	push	edx
	mov	eax, DWORD PTR _pkDefendingUnit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?rangeCombatDamage@CvCity@@QBEHPBVCvUnit@@PAV1@_N@Z ; CvCity::rangeCombatDamage
	mov	DWORD PTR _iRangedDamage$[ebp], eax

; 3655 : 	lua_pushinteger(L, iRangedDamage);

	mov	ecx, DWORD PTR _iRangedDamage$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3656 : 	return 1;

	mov	eax, 1

; 3657 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lRangeCombatDamage@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lRangeCombatDamage
_TEXT	ENDS
EXTRN	?GetAirStrikeDefenseDamage@CvCity@@QBEHPBVCvUnit@@_N@Z:PROC ; CvCity::GetAirStrikeDefenseDamage
; Function compile flags: /Odtp
;	COMDAT ?lGetAirStrikeDefenseDamage@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iRangedDamage$ = -16					; size = 4
_pkAttackingUnit$ = -12					; size = 4
_bIncludeRand$ = -5					; size = 1
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetAirStrikeDefenseDamage@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetAirStrikeDefenseDamage, COMDAT

; 3660 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 3661 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3662 : 	CvUnit* pkAttackingUnit = CvLuaUnit::GetInstance(L, 2, false);

	push	0
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkAttackingUnit$[ebp], eax

; 3663 : 	bool bIncludeRand = luaL_optbool(L, 3, false);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _bIncludeRand$[ebp], al

; 3664 : 
; 3665 : 	const int iRangedDamage = pkCity->GetAirStrikeDefenseDamage(pkAttackingUnit, bIncludeRand);

	movzx	eax, BYTE PTR _bIncludeRand$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkAttackingUnit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetAirStrikeDefenseDamage@CvCity@@QBEHPBVCvUnit@@_N@Z ; CvCity::GetAirStrikeDefenseDamage
	mov	DWORD PTR _iRangedDamage$[ebp], eax

; 3666 : 	lua_pushinteger(L, iRangedDamage);

	mov	edx, DWORD PTR _iRangedDamage$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 3667 : 	return 1;

	mov	eax, 1

; 3668 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetAirStrikeDefenseDamage@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetAirStrikeDefenseDamage
_TEXT	ENDS
EXTRN	?IsWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z:PROC ; CvCityCitizens::IsWorkingPlot
; Function compile flags: /Odtp
;	COMDAT ?lIsWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -9						; size = 1
_pkCity$ = -8						; size = 4
_pkPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsWorkingPlot, COMDAT

; 3672 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3673 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3674 : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlot$[ebp], eax

; 3675 : 	const bool bResult = pkCity->GetCityCitizens()->IsWorkingPlot(pkPlot);

	mov	edx, DWORD PTR _pkPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?IsWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z ; CvCityCitizens::IsWorkingPlot
	mov	BYTE PTR _bResult$[ebp], al

; 3676 : 
; 3677 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 3678 : 	return 1;

	mov	eax, 1

; 3679 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsWorkingPlot
_TEXT	ENDS
EXTRN	?DoAlterWorkingPlot@CvCityCitizens@@QAEXH@Z:PROC ; CvCityCitizens::DoAlterWorkingPlot
; Function compile flags: /Odtp
;	COMDAT ?lAlterWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iIndex$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lAlterWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lAlterWorkingPlot, COMDAT

; 3683 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3684 : //	return BasicLuaMethod(L, &CvCity::GetCityCitizens()->DoAlterWorkingPlot);
; 3685 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3686 : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 3687 : 	pkCity->GetCityCitizens()->DoAlterWorkingPlot(iIndex);

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?DoAlterWorkingPlot@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::DoAlterWorkingPlot

; 3688 : 
; 3689 : 	return 1;

	mov	eax, 1

; 3690 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lAlterWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lAlterWorkingPlot
_TEXT	ENDS
EXTRN	?IsForcedWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z:PROC ; CvCityCitizens::IsForcedWorkingPlot
; Function compile flags: /Odtp
;	COMDAT ?lIsForcedWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -9						; size = 1
_pkCity$ = -8						; size = 4
_pkPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsForcedWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsForcedWorkingPlot, COMDAT

; 3694 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3695 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3696 : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlot$[ebp], eax

; 3697 : 	const bool bResult = pkCity->GetCityCitizens()->IsForcedWorkingPlot(pkPlot);

	mov	edx, DWORD PTR _pkPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?IsForcedWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z ; CvCityCitizens::IsForcedWorkingPlot
	mov	BYTE PTR _bResult$[ebp], al

; 3698 : 
; 3699 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 3700 : 	return 1;

	mov	eax, 1

; 3701 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsForcedWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsForcedWorkingPlot
_TEXT	ENDS
EXTRN	?GetNumForcedWorkingPlots@CvCityCitizens@@QBEHXZ:PROC ; CvCityCitizens::GetNumForcedWorkingPlots
; Function compile flags: /Odtp
;	COMDAT ?lGetNumForcedWorkingPlots@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumForcedWorkingPlots@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumForcedWorkingPlots, COMDAT

; 3705 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3706 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3707 : 	const int iResult = pkCity->GetCityCitizens()->GetNumForcedWorkingPlots();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?GetNumForcedWorkingPlots@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumForcedWorkingPlots
	mov	DWORD PTR _iResult$[ebp], eax

; 3708 : 
; 3709 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3710 : 	return 1;

	mov	eax, 1

; 3711 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumForcedWorkingPlots@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumForcedWorkingPlots
_TEXT	ENDS
EXTRN	?GetNumRealBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetNumRealBuilding
; Function compile flags: /Odtp
;	COMDAT ?lGetNumRealBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$223094 = -12					; size = 4
_iIndex$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumRealBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumRealBuilding, COMDAT

; 3715 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3716 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3717 : 	const BuildingTypes iIndex = toValue<BuildingTypes>(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingTypes>
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 3718 : 	if(iIndex != NO_BUILDING)

	cmp	DWORD PTR _iIndex$[ebp], -1
	je	SHORT $LN2@lGetNumRea

; 3719 : 	{
; 3720 : 		const int iResult = pkCity->GetCityBuildings()->GetNumRealBuilding(iIndex);

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumRealBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumRealBuilding
	mov	DWORD PTR _iResult$223094[ebp], eax

; 3721 : 		lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$223094[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3722 : 	}
; 3723 : 	else

	jmp	SHORT $LN1@lGetNumRea
$LN2@lGetNumRea:

; 3724 : 	{
; 3725 : 		lua_pushinteger(L, 0);

	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetNumRea:

; 3726 : 	}
; 3727 : 	return 1;

	mov	eax, 1

; 3728 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumRealBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumRealBuilding
_TEXT	ENDS
EXTRN	?SetNumRealBuilding@CvCityBuildings@@QAEXW4BuildingTypes@@H@Z:PROC ; CvCityBuildings::SetNumRealBuilding
; Function compile flags: /Odtp
;	COMDAT ?lSetNumRealBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iNewValue$223103 = -12					; size = 4
_iIndex$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lSetNumRealBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetNumRealBuilding, COMDAT

; 3732 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3733 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3734 : 	const BuildingTypes iIndex = toValue<BuildingTypes>(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingTypes>
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 3735 : 	if(iIndex != NO_BUILDING)

	cmp	DWORD PTR _iIndex$[ebp], -1
	je	SHORT $LN1@lSetNumRea

; 3736 : 	{
; 3737 : 		const int iNewValue = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iNewValue$223103[ebp], eax

; 3738 : 		pkCity->GetCityBuildings()->SetNumRealBuilding(iIndex, iNewValue);

	mov	eax, DWORD PTR _iNewValue$223103[ebp]
	push	eax
	mov	ecx, DWORD PTR _iIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?SetNumRealBuilding@CvCityBuildings@@QAEXW4BuildingTypes@@H@Z ; CvCityBuildings::SetNumRealBuilding
$LN1@lSetNumRea:

; 3739 : 	}
; 3740 : 
; 3741 : 	return 1;

	mov	eax, 1

; 3742 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetNumRealBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetNumRealBuilding
_TEXT	ENDS
EXTRN	?GetNumFreeBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetNumFreeBuilding
; Function compile flags: /Odtp
;	COMDAT ?lGetNumFreeBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$223111 = -12					; size = 4
_iIndex$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumFreeBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumFreeBuilding, COMDAT

; 3746 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3747 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3748 : 	const BuildingTypes iIndex = toValue<BuildingTypes>(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingTypes>
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 3749 : 	if(iIndex != NO_BUILDING)

	cmp	DWORD PTR _iIndex$[ebp], -1
	je	SHORT $LN2@lGetNumFre

; 3750 : 	{
; 3751 : 		const int iResult = pkCity->GetCityBuildings()->GetNumFreeBuilding(iIndex);

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumFreeBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumFreeBuilding
	mov	DWORD PTR _iResult$223111[ebp], eax

; 3752 : 		lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$223111[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3753 : 	}
; 3754 : 	else

	jmp	SHORT $LN1@lGetNumFre
$LN2@lGetNumFre:

; 3755 : 	{
; 3756 : 		lua_pushinteger(L, 0);

	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetNumFre:

; 3757 : 	}
; 3758 : 	return 1;

	mov	eax, 1

; 3759 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumFreeBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumFreeBuilding
_TEXT	ENDS
EXTRN	?IsBuildingSellable@CvCityBuildings@@QBE_NABVCvBuildingEntry@@@Z:PROC ; CvCityBuildings::IsBuildingSellable
; Function compile flags: /Odtp
;	COMDAT ?lIsBuildingSellable@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkBuildingInfo$223121 = -16				; size = 4
_bResult$ = -9						; size = 1
_iIndex$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsBuildingSellable@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsBuildingSellable, COMDAT

; 3763 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 3764 : 	bool bResult = false;

	mov	BYTE PTR _bResult$[ebp], 0

; 3765 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3766 : 	const BuildingTypes iIndex = toValue<BuildingTypes>(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingTypes>
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 3767 : 	if(iIndex != NO_BUILDING)

	cmp	DWORD PTR _iIndex$[ebp], -1
	je	SHORT $LN2@lIsBuildin

; 3768 : 	{
; 3769 : 		CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(iIndex);

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingInfo$223121[ebp], eax

; 3770 : 		if(pkBuildingInfo)

	cmp	DWORD PTR _pkBuildingInfo$223121[ebp], 0
	je	SHORT $LN2@lIsBuildin

; 3771 : 		{
; 3772 : 			bResult = pkCity->GetCityBuildings()->IsBuildingSellable(*pkBuildingInfo);

	mov	eax, DWORD PTR _pkBuildingInfo$223121[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?IsBuildingSellable@CvCityBuildings@@QBE_NABVCvBuildingEntry@@@Z ; CvCityBuildings::IsBuildingSellable
	mov	BYTE PTR _bResult$[ebp], al
$LN2@lIsBuildin:

; 3773 : 		}
; 3774 : 	}
; 3775 : 
; 3776 : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 3777 : 	return 1;

	mov	eax, 1

; 3778 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsBuildingSellable@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsBuildingSellable
_TEXT	ENDS
EXTRN	?GetSellBuildingRefund@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetSellBuildingRefund
; Function compile flags: /Odtp
;	COMDAT ?lGetSellBuildingRefund@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$223130 = -12					; size = 4
_iIndex$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetSellBuildingRefund@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSellBuildingRefund, COMDAT

; 3783 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3784 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3785 : 	const BuildingTypes iIndex = toValue<BuildingTypes>(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingTypes>
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 3786 : 	if(iIndex != NO_BUILDING)

	cmp	DWORD PTR _iIndex$[ebp], -1
	je	SHORT $LN2@lGetSellBu

; 3787 : 	{
; 3788 : 		const int iResult = pkCity->GetCityBuildings()->GetSellBuildingRefund(iIndex);

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetSellBuildingRefund@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetSellBuildingRefund
	mov	DWORD PTR _iResult$223130[ebp], eax

; 3789 : 		lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$223130[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3790 : 	}
; 3791 : 	else

	jmp	SHORT $LN1@lGetSellBu
$LN2@lGetSellBu:

; 3792 : 	{
; 3793 : 		lua_pushinteger(L, 0);

	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetSellBu:

; 3794 : 	}
; 3795 : 	return 1;

	mov	eax, 1

; 3796 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetSellBuildingRefund@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSellBuildingRefund
_TEXT	ENDS
EXTRN	?GetTotalBaseBuildingMaintenance@CvCityBuildings@@QBEHXZ:PROC ; CvCityBuildings::GetTotalBaseBuildingMaintenance
; Function compile flags: /Odtp
;	COMDAT ?lGetTotalBaseBuildingMaintenance@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetTotalBaseBuildingMaintenance@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetTotalBaseBuildingMaintenance, COMDAT

; 3801 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3802 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3803 : 	const int iResult = pkCity->GetCityBuildings()->GetTotalBaseBuildingMaintenance();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetTotalBaseBuildingMaintenance@CvCityBuildings@@QBEHXZ ; CvCityBuildings::GetTotalBaseBuildingMaintenance
	mov	DWORD PTR _iResult$[ebp], eax

; 3804 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3805 : 	return 1;

	mov	eax, 1

; 3806 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTotalBaseBuildingMaintenance@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetTotalBaseBuildingMaintenance
_TEXT	ENDS
EXTRN	?GetBuildingGreatWork@CvCityBuildings@@QBEHW4BuildingClassTypes@@H@Z:PROC ; CvCityBuildings::GetBuildingGreatWork
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iSlot$ = -16						; size = 4
_iIndex$ = -12						; size = 4
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetBuildingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingGreatWork, COMDAT

; 3810 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 3811 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3812 : 	const BuildingClassTypes iIndex = toValue<BuildingClassTypes>(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingClassTypes>
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 3813 : 	const int iSlot = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iSlot$[ebp], eax

; 3814 : 	const int iResult = pkCity->GetCityBuildings()->GetBuildingGreatWork(iIndex, iSlot);

	mov	eax, DWORD PTR _iSlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetBuildingGreatWork@CvCityBuildings@@QBEHW4BuildingClassTypes@@H@Z ; CvCityBuildings::GetBuildingGreatWork
	mov	DWORD PTR _iResult$[ebp], eax

; 3815 : 	lua_pushinteger(L, iResult);

	mov	edx, DWORD PTR _iResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 3816 : 	return 1;

	mov	eax, 1

; 3817 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBuildingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingGreatWork
_TEXT	ENDS
EXTRN	?SetBuildingGreatWork@CvCityBuildings@@QAEXW4BuildingClassTypes@@HH@Z:PROC ; CvCityBuildings::SetBuildingGreatWork
; Function compile flags: /Odtp
;	COMDAT ?lSetBuildingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iSlot$ = -16						; size = 4
_iIndex$ = -12						; size = 4
_pkCity$ = -8						; size = 4
_iGreatWorkIndex$ = -4					; size = 4
_L$ = 8							; size = 4
?lSetBuildingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetBuildingGreatWork, COMDAT

; 3821 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 3822 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3823 : 	const BuildingClassTypes iIndex = toValue<BuildingClassTypes>(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingClassTypes>
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 3824 : 	const int iSlot = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iSlot$[ebp], eax

; 3825 : 	const int iGreatWorkIndex = lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iGreatWorkIndex$[ebp], eax

; 3826 : #ifdef AUI_WARNING_FIXES
; 3827 : 	if (iIndex != NO_BUILDINGCLASS)
; 3828 : #else
; 3829 : 	if(iIndex != NO_BUILDING)

	cmp	DWORD PTR _iIndex$[ebp], -1
	je	SHORT $LN1@lSetBuildi@3

; 3830 : #endif
; 3831 : 	{
; 3832 : 		pkCity->GetCityBuildings()->SetBuildingGreatWork(iIndex, iSlot, iGreatWorkIndex);

	mov	ecx, DWORD PTR _iGreatWorkIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iSlot$[ebp]
	push	edx
	mov	eax, DWORD PTR _iIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?SetBuildingGreatWork@CvCityBuildings@@QAEXW4BuildingClassTypes@@HH@Z ; CvCityBuildings::SetBuildingGreatWork
$LN1@lSetBuildi@3:

; 3833 : 	}
; 3834 : 	return 1;

	mov	eax, 1

; 3835 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetBuildingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetBuildingGreatWork
_TEXT	ENDS
EXTRN	?IsHoldingGreatWork@CvCityBuildings@@QBE_NW4BuildingClassTypes@@@Z:PROC ; CvCityBuildings::IsHoldingGreatWork
; Function compile flags: /Odtp
;	COMDAT ?lIsHoldingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkBuildingClassInfo$223162 = -16			; size = 4
_bResult$ = -9						; size = 1
_iIndex$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsHoldingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsHoldingGreatWork, COMDAT

; 3839 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 3840 : 	bool bResult = false;

	mov	BYTE PTR _bResult$[ebp], 0

; 3841 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3842 : 	const BuildingClassTypes iIndex = toValue<BuildingClassTypes>(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingClassTypes>
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 3843 : 	if(iIndex != NO_BUILDINGCLASS)

	cmp	DWORD PTR _iIndex$[ebp], -1
	je	SHORT $LN2@lIsHolding

; 3844 : 	{
; 3845 : 		CvBuildingClassInfo* pkBuildingClassInfo = GC.getBuildingClassInfo(iIndex);

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingClassInfo@CvGlobals@@QAEPAVCvBuildingClassInfo@@W4BuildingClassTypes@@@Z ; CvGlobals::getBuildingClassInfo
	mov	DWORD PTR _pkBuildingClassInfo$223162[ebp], eax

; 3846 : 		if(pkBuildingClassInfo)

	cmp	DWORD PTR _pkBuildingClassInfo$223162[ebp], 0
	je	SHORT $LN2@lIsHolding

; 3847 : 		{
; 3848 : 			bResult = pkCity->GetCityBuildings()->IsHoldingGreatWork(iIndex);

	mov	eax, DWORD PTR _iIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?IsHoldingGreatWork@CvCityBuildings@@QBE_NW4BuildingClassTypes@@@Z ; CvCityBuildings::IsHoldingGreatWork
	mov	BYTE PTR _bResult$[ebp], al
$LN2@lIsHolding:

; 3849 : 		}
; 3850 : 	}
; 3851 : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 3852 : 	return 1;

	mov	eax, 1

; 3853 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsHoldingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsHoldingGreatWork
_TEXT	ENDS
EXTRN	?GetNumGreatWorksInBuilding@CvCityBuildings@@QBEHW4BuildingClassTypes@@@Z:PROC ; CvCityBuildings::GetNumGreatWorksInBuilding
; Function compile flags: /Odtp
;	COMDAT ?lGetNumGreatWorksInBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iIndex$ = -12						; size = 4
_iResult$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumGreatWorksInBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumGreatWorksInBuilding, COMDAT

; 3857 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3858 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3859 : 	const BuildingClassTypes iIndex = toValue<BuildingClassTypes>(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingClassTypes>
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 3860 : 	const int iResult = pkCity->GetCityBuildings()->GetNumGreatWorksInBuilding(iIndex);

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumGreatWorksInBuilding@CvCityBuildings@@QBEHW4BuildingClassTypes@@@Z ; CvCityBuildings::GetNumGreatWorksInBuilding
	mov	DWORD PTR _iResult$[ebp], eax

; 3861 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3862 : 	return 1;

	mov	eax, 1

; 3863 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumGreatWorksInBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumGreatWorksInBuilding
_TEXT	ENDS
EXTRN	?clearOrderQueue@CvCity@@QAEXXZ:PROC		; CvCity::clearOrderQueue
; Function compile flags: /Odtp
;	COMDAT ?lClearOrderQueue@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lClearOrderQueue@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lClearOrderQueue, COMDAT

; 3867 : {

	push	ebp
	mov	ebp, esp

; 3868 : 	return BasicLuaMethod(L, &CvCity::clearOrderQueue);

	push	OFFSET ?clearOrderQueue@CvCity@@QAEXXZ	; CvCity::clearOrderQueue
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod
	add	esp, 8

; 3869 : }

	pop	ebp
	ret	0
?lClearOrderQueue@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lClearOrderQueue
_TEXT	ENDS
EXTRN	?pushOrder@CvCity@@QAEXW4OrderTypes@@HH_N111@Z:PROC ; CvCity::pushOrder
; Function compile flags: /Odtp
;	COMDAT ?lPushOrder@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bSave$ = -21						; size = 1
_eOrder$ = -20						; size = 4
_bForce$ = -15						; size = 1
_bPop$ = -14						; size = 1
_bAppend$ = -13						; size = 1
_iData1$ = -12						; size = 4
_pkCity$ = -8						; size = 4
_iData2$ = -4						; size = 4
_L$ = 8							; size = 4
?lPushOrder@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lPushOrder, COMDAT

; 3873 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 3874 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3875 : 	const OrderTypes eOrder	= (OrderTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOrder$[ebp], eax

; 3876 : 	const int iData1		= lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iData1$[ebp], eax

; 3877 : 	const int iData2		= lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iData2$[ebp], eax

; 3878 : 	const bool bSave		= lua_tointeger(L, 5);

	push	5
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bSave$[ebp], dl

; 3879 : 	const bool bPop			= lua_toboolean(L, 6);

	push	6
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	mov	BYTE PTR _bPop$[ebp], cl

; 3880 : 	const bool bAppend		= lua_toboolean(L, 7);

	push	7
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bAppend$[ebp], al

; 3881 : 	const bool bForce		= luaL_optint(L, 8, 0);

	push	0
	push	8
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bForce$[ebp], dl

; 3882 : 	pkCity->pushOrder(eOrder, iData1, iData2, bSave, bPop, bAppend, bForce);

	movzx	eax, BYTE PTR _bForce$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bAppend$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bPop$[ebp]
	push	edx
	movzx	eax, BYTE PTR _bSave$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iData2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iData1$[ebp]
	push	edx
	mov	eax, DWORD PTR _eOrder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?pushOrder@CvCity@@QAEXW4OrderTypes@@HH_N111@Z ; CvCity::pushOrder

; 3883 : 
; 3884 : 	return 1;

	mov	eax, 1

; 3885 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lPushOrder@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lPushOrder
_TEXT	ENDS
EXTRN	?popOrder@CvCity@@QAEXH_N0@Z:PROC		; CvCity::popOrder
; Function compile flags: /Odtp
;	COMDAT ?lPopOrder@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iNum$ = -16						; size = 4
_bChoose$ = -9						; size = 1
_pkCity$ = -8						; size = 4
_bFinish$ = -1						; size = 1
_L$ = 8							; size = 4
?lPopOrder@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lPopOrder, COMDAT

; 3889 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 3890 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3891 : 	const int iNum = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iNum$[ebp], eax

; 3892 : 	const bool bFinish = luaL_optint(L, 3, 0);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	al
	mov	BYTE PTR _bFinish$[ebp], al

; 3893 : 	const bool bChoose = luaL_optint(L, 4, 0);

	push	0
	push	4
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bChoose$[ebp], dl

; 3894 : 	pkCity->popOrder(iNum, bFinish, bChoose);

	movzx	eax, BYTE PTR _bChoose$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bFinish$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iNum$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?popOrder@CvCity@@QAEXH_N0@Z		; CvCity::popOrder

; 3895 : 
; 3896 : 	return 1;

	mov	eax, 1

; 3897 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lPopOrder@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lPopOrder
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
EXTRN	?getOrderQueueLength@CvCity@@QAEHXZ:PROC	; CvCity::getOrderQueueLength
; Function compile flags: /Odtp
;	COMDAT ?lGetOrderQueueLength@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetOrderQueueLength@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetOrderQueueLength, COMDAT

; 3901 : {

	push	ebp
	mov	ebp, esp

; 3902 : 	return BasicLuaMethod(L, &CvCity::getOrderQueueLength);

	push	OFFSET ?getOrderQueueLength@CvCity@@QAEHXZ ; CvCity::getOrderQueueLength
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 3903 : }

	pop	ebp
	ret	0
?lGetOrderQueueLength@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetOrderQueueLength
_TEXT	ENDS
EXTRN	?getOrderFromQueue@CvCity@@QAEPAUOrderData@@H@Z:PROC ; CvCity::getOrderFromQueue
; Function compile flags: /Odtp
;	COMDAT ?lGetOrderFromQueue@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iNum$223204 = -12					; size = 4
_pkOrder$223205 = -8					; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetOrderFromQueue@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetOrderFromQueue, COMDAT

; 3908 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3909 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3910 : 	if(pkCity)

	cmp	DWORD PTR _pkCity$[ebp], 0
	je	$LN2@lGetOrderF

; 3911 : 	{
; 3912 : 		const int iNum = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iNum$223204[ebp], eax

; 3913 : 		OrderData* pkOrder = pkCity->getOrderFromQueue(iNum);

	mov	edx, DWORD PTR _iNum$223204[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?getOrderFromQueue@CvCity@@QAEPAUOrderData@@H@Z ; CvCity::getOrderFromQueue
	mov	DWORD PTR _pkOrder$223205[ebp], eax

; 3914 : 		if(pkOrder)

	cmp	DWORD PTR _pkOrder$223205[ebp], 0
	je	SHORT $LN2@lGetOrderF

; 3915 : 		{
; 3916 : 			lua_pushinteger(L, pkOrder->eOrderType);

	mov	eax, DWORD PTR _pkOrder$223205[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3917 : 			lua_pushinteger(L, pkOrder->iData1);

	mov	eax, DWORD PTR _pkOrder$223205[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3918 : 			lua_pushinteger(L, pkOrder->iData1);

	mov	eax, DWORD PTR _pkOrder$223205[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3919 : #ifdef AUI_WARNING_FIXES
; 3920 : 			lua_pushboolean(L, pkOrder->bSave ? 1 : 0);
; 3921 : 			lua_pushboolean(L, pkOrder->bRush ? 1 : 0);
; 3922 : #else
; 3923 : 			lua_pushboolean(L, pkOrder->bSave);

	mov	eax, DWORD PTR _pkOrder$223205[ebp]
	movzx	ecx, BYTE PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 3924 : 			lua_pushboolean(L, pkOrder->bRush);

	mov	eax, DWORD PTR _pkOrder$223205[ebp]
	movzx	ecx, BYTE PTR [eax+13]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 3925 : #endif
; 3926 : 			return 5;

	mov	eax, 5
	jmp	SHORT $LN3@lGetOrderF
$LN2@lGetOrderF:

; 3927 : 		}
; 3928 : 	}
; 3929 : 	lua_pushinteger(L, -1);

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 3930 : 	lua_pushinteger(L, 0);

	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3931 : 	lua_pushinteger(L, 0);

	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3932 : #ifdef AUI_WARNING_FIXES
; 3933 : 	lua_pushboolean(L, 0);
; 3934 : 	lua_pushboolean(L, 0);
; 3935 : #else
; 3936 : 	lua_pushboolean(L, false);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 3937 : 	lua_pushboolean(L, false);

	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 3938 : #endif
; 3939 : 	return 5;

	mov	eax, 5
$LN3@lGetOrderF:

; 3940 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetOrderFromQueue@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetOrderFromQueue
_TEXT	ENDS
EXTRN	?GetBuildingYieldChange@CvCityBuildings@@QBEHW4BuildingClassTypes@@W4YieldTypes@@@Z:PROC ; CvCityBuildings::GetBuildingYieldChange
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eYield$ = -16						; size = 4
_iResult$ = -12						; size = 4
_pkCity$ = -8						; size = 4
_eBuildingClass$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetBuildingYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingYieldChange, COMDAT

; 3944 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 3945 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3946 : 	const int eBuildingClass = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBuildingClass$[ebp], eax

; 3947 : 	const int eYield = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eYield$[ebp], eax

; 3948 : 	const int iResult = pkCity->GetCityBuildings()->GetBuildingYieldChange((BuildingClassTypes)eBuildingClass, (YieldTypes)eYield);

	mov	eax, DWORD PTR _eYield$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eBuildingClass$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetBuildingYieldChange@CvCityBuildings@@QBEHW4BuildingClassTypes@@W4YieldTypes@@@Z ; CvCityBuildings::GetBuildingYieldChange
	mov	DWORD PTR _iResult$[ebp], eax

; 3949 : 
; 3950 : 	lua_pushinteger(L, iResult);

	mov	edx, DWORD PTR _iResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 3951 : 	return 1;

	mov	eax, 1

; 3952 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBuildingYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingYieldChange
_TEXT	ENDS
EXTRN	?GetEspionageModifier@CvBuildingEntry@@QBEHXZ:PROC ; CvBuildingEntry::GetEspionageModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingEspionageModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eBuilding$ = -8					; size = 4
_pBuildingInfo$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetBuildingEspionageModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingEspionageModifier, COMDAT

; 3956 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3957 : 	//CvCity* pkCity = GetInstance(L);
; 3958 : 	const BuildingTypes eBuilding = (BuildingTypes) lua_tointeger(L, 2);

	push	2
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBuilding$[ebp], eax

; 3959 : 	CvBuildingEntry* pBuildingInfo = GC.getBuildingInfo(eBuilding);

	mov	ecx, DWORD PTR _eBuilding$[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pBuildingInfo$[ebp], eax

; 3960 : 	CvAssertMsg(pBuildingInfo, "pBuildingInfo is null!");
; 3961 : 	if (pBuildingInfo)

	cmp	DWORD PTR _pBuildingInfo$[ebp], 0
	je	SHORT $LN2@lGetBuildi@6

; 3962 : 	{
; 3963 : 		lua_pushinteger(L, pBuildingInfo->GetEspionageModifier());

	mov	ecx, DWORD PTR _pBuildingInfo$[ebp]
	call	?GetEspionageModifier@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetEspionageModifier
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3964 : 	}
; 3965 : 	else

	jmp	SHORT $LN1@lGetBuildi@6
$LN2@lGetBuildi@6:

; 3966 : 	{
; 3967 : 		lua_pushinteger(L, 0);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetBuildi@6:

; 3968 : 	}
; 3969 : 	return 1;

	mov	eax, 1

; 3970 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBuildingEspionageModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingEspionageModifier
_TEXT	ENDS
EXTRN	?GetGlobalEspionageModifier@CvBuildingEntry@@QBEHXZ:PROC ; CvBuildingEntry::GetGlobalEspionageModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingGlobalEspionageModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eBuilding$ = -8					; size = 4
_pBuildingInfo$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetBuildingGlobalEspionageModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingGlobalEspionageModifier, COMDAT

; 3974 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3975 : 	const BuildingTypes eBuilding = (BuildingTypes)lua_tointeger(L, 2);

	push	2
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBuilding$[ebp], eax

; 3976 : 	CvBuildingEntry* pBuildingInfo = GC.getBuildingInfo(eBuilding);

	mov	ecx, DWORD PTR _eBuilding$[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pBuildingInfo$[ebp], eax

; 3977 : 	CvAssertMsg(pBuildingInfo, "pBuildingInfo is null!");
; 3978 : 	if (pBuildingInfo)

	cmp	DWORD PTR _pBuildingInfo$[ebp], 0
	je	SHORT $LN2@lGetBuildi@7

; 3979 : 	{
; 3980 : 		lua_pushinteger(L, pBuildingInfo->GetGlobalEspionageModifier());

	mov	ecx, DWORD PTR _pBuildingInfo$[ebp]
	call	?GetGlobalEspionageModifier@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetGlobalEspionageModifier
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3981 : 	}
; 3982 : 	else

	jmp	SHORT $LN1@lGetBuildi@7
$LN2@lGetBuildi@7:

; 3983 : 	{
; 3984 : 		lua_pushinteger(L, 0);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetBuildi@7:

; 3985 : 	}
; 3986 : 	return 1;

	mov	eax, 1

; 3987 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBuildingGlobalEspionageModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingGlobalEspionageModifier
_TEXT	ENDS
EXTRN	?SetBuildingYieldChange@CvCityBuildings@@QAEXW4BuildingClassTypes@@W4YieldTypes@@H@Z:PROC ; CvCityBuildings::SetBuildingYieldChange
; Function compile flags: /Odtp
;	COMDAT ?lSetBuildingYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eYield$ = -16						; size = 4
_iChange$ = -12						; size = 4
_pkCity$ = -8						; size = 4
_eBuildingClass$ = -4					; size = 4
_L$ = 8							; size = 4
?lSetBuildingYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetBuildingYieldChange, COMDAT

; 3992 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 3993 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3994 : 	const int eBuildingClass = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBuildingClass$[ebp], eax

; 3995 : 	const int eYield = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eYield$[ebp], eax

; 3996 : 	const int iChange = lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iChange$[ebp], eax

; 3997 : 
; 3998 : 	pkCity->GetCityBuildings()->SetBuildingYieldChange((BuildingClassTypes)eBuildingClass, (YieldTypes)eYield, iChange);

	mov	ecx, DWORD PTR _iChange$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eYield$[ebp]
	push	edx
	mov	eax, DWORD PTR _eBuildingClass$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?SetBuildingYieldChange@CvCityBuildings@@QAEXW4BuildingClassTypes@@W4YieldTypes@@H@Z ; CvCityBuildings::SetBuildingYieldChange

; 3999 : 
; 4000 : 	return 1;

	mov	eax, 1

; 4001 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetBuildingYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetBuildingYieldChange
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetNumCityPlots@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumCityPlots@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetNumCityPlots, COMDAT

; 4005 : {

	push	ebp
	mov	ebp, esp

; 4006 : 	lua_pushinteger(L, NUM_CITY_PLOTS);

	push	37					; 00000025H
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4007 : 	return 1;

	mov	eax, 1

; 4008 : }

	pop	ebp
	ret	0
?lGetNumCityPlots@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetNumCityPlots
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lCanPlaceUnitHere@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iUnitType$ = -8					; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lCanPlaceUnitHere@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanPlaceUnitHere, COMDAT

; 4012 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 4013 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 4014 : 	int iUnitType = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iUnitType$[ebp], eax

; 4015 : 	lua_pushboolean(L, pkCity->CanPlaceUnitHere((UnitTypes)iUnitType));

	mov	edx, DWORD PTR _iUnitType$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?CanPlaceUnitHere@CvCity@@QAE_NW4UnitTypes@@@Z ; CvCity::CanPlaceUnitHere
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 4016 : 
; 4017 : 	return 1;

	mov	eax, 1

; 4018 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanPlaceUnitHere@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanPlaceUnitHere
_TEXT	ENDS
EXTRN	?specialistYield@CvPlayer@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z:PROC ; CvPlayer::specialistYield
; Function compile flags: /Odtp
;	COMDAT ?lGetSpecialistYield@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T226319 = -24						; size = 4
_eYield$ = -20						; size = 4
_ePlayer$ = -16						; size = 4
_eSpecialist$ = -12					; size = 4
_pkCity$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetSpecialistYield@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSpecialistYield, COMDAT

; 4021 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 4022 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 4023 : 	const SpecialistTypes eSpecialist = (SpecialistTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eSpecialist$[ebp], eax

; 4024 : 	const YieldTypes eYield = (YieldTypes) lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eYield$[ebp], eax

; 4025 : 
; 4026 : 	const PlayerTypes ePlayer = pkCity->getOwner();

	mov	eax, DWORD PTR _pkCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR _ePlayer$[ebp], ecx

; 4027 : 
; 4028 : 	const int iValue = GET_PLAYER(ePlayer).specialistYield(eSpecialist, eYield);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T226319[ebp], edx
	mov	eax, DWORD PTR _eYield$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eSpecialist$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T226319[ebp]
	call	?specialistYield@CvPlayer@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z ; CvPlayer::specialistYield
	mov	DWORD PTR _iValue$[ebp], eax

; 4029 : 
; 4030 : 	lua_pushinteger(L, iValue);

	mov	edx, DWORD PTR _iValue$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4031 : 
; 4032 : 	return 1;

	mov	eax, 1

; 4033 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetSpecialistYield@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSpecialistYield
_TEXT	ENDS
EXTRN	?GetCultureFromSpecialist@CvCity@@QBEHW4SpecialistTypes@@@Z:PROC ; CvCity::GetCultureFromSpecialist
; Function compile flags: /Odtp
;	COMDAT ?lGetCultureFromSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCultureFromSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetCultureFromSpecialist, COMDAT

; 4036 : {

	push	ebp
	mov	ebp, esp

; 4037 : 	return BasicLuaMethod(L, &CvCity::GetCultureFromSpecialist);

	push	OFFSET ?GetCultureFromSpecialist@CvCity@@QBEHW4SpecialistTypes@@@Z ; CvCity::GetCultureFromSpecialist
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4SpecialistTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4SpecialistTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum SpecialistTypes>
	add	esp, 8

; 4038 : }

	pop	ebp
	ret	0
?lGetCultureFromSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetCultureFromSpecialist
_TEXT	ENDS
EXTRN	?GetCityRangeStrikeModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetCityRangeStrikeModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetReligionCityRangeStrikeModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T226336 = -28						; size = 4
$T226332 = -24						; size = 4
_eSecondaryPantheon$223272 = -20			; size = 4
_pReligion$223270 = -16					; size = 4
_eMajority$ = -12					; size = 4
_iReligionRangeStrikeMod$ = -8				; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetReligionCityRangeStrikeModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetReligionCityRangeStrikeModifier, COMDAT

; 4041 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 4042 : 	int iReligionRangeStrikeMod = 0;

	mov	DWORD PTR _iReligionRangeStrikeMod$[ebp], 0

; 4043 : 
; 4044 : 	CvCity* pkCity = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 4045 : 	ReligionTypes eMajority = pkCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eMajority$[ebp], eax

; 4046 : 	if(eMajority != NO_RELIGION)

	cmp	DWORD PTR _eMajority$[ebp], -1
	je	SHORT $LN3@lGetReligi@3

; 4047 : 	{
; 4048 : 		const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eMajority, pkCity->getOwner());

	mov	ecx, DWORD PTR _pkCity$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T226332[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T226336[ebp], eax
	mov	ecx, DWORD PTR $T226332[ebp]
	push	ecx
	mov	edx, DWORD PTR _eMajority$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T226336[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pReligion$223270[ebp], eax

; 4049 : 		if(pReligion)

	cmp	DWORD PTR _pReligion$223270[ebp], 0
	je	SHORT $LN3@lGetReligi@3

; 4050 : 		{
; 4051 : 			iReligionRangeStrikeMod = pReligion->m_Beliefs.GetCityRangeStrikeModifier();

	mov	eax, DWORD PTR _pReligion$223270[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _iReligionRangeStrikeMod$[ebp], ecx

; 4052 : 			BeliefTypes eSecondaryPantheon = pkCity->GetCityReligions()->GetSecondaryReligionPantheonBelief();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetSecondaryReligionPantheonBelief@CvCityReligions@@QAE?AW4BeliefTypes@@XZ ; CvCityReligions::GetSecondaryReligionPantheonBelief
	mov	DWORD PTR _eSecondaryPantheon$223272[ebp], eax

; 4053 : 			if (eSecondaryPantheon != NO_BELIEF)

	cmp	DWORD PTR _eSecondaryPantheon$223272[ebp], -1
	je	SHORT $LN3@lGetReligi@3

; 4054 : 			{
; 4055 : 				iReligionRangeStrikeMod += GC.GetGameBeliefs()->GetEntry(eSecondaryPantheon)->GetCityRangeStrikeModifier();

	mov	edx, DWORD PTR _eSecondaryPantheon$223272[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	ecx, eax
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetCityRangeStrikeModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCityRangeStrikeModifier
	add	eax, DWORD PTR _iReligionRangeStrikeMod$[ebp]
	mov	DWORD PTR _iReligionRangeStrikeMod$[ebp], eax
$LN3@lGetReligi@3:

; 4056 : 			}
; 4057 : 		}
; 4058 : 	}
; 4059 : 
; 4060 : 	lua_pushinteger(L, iReligionRangeStrikeMod);

	mov	eax, DWORD PTR _iReligionRangeStrikeMod$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4061 : 
; 4062 : 	return 1;

	mov	eax, 1

; 4063 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetReligionCityRangeStrikeModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetReligionCityRangeStrikeModifier
_TEXT	ENDS
PUBLIC	?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@0@Z ; std::vector<int,std::allocator<int> >::erase
PUBLIC	?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z ; std::vector<int,std::allocator<int> >::_Insert_n
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?resize@?$vector@HV?$allocator@H@std@@@std@@QAEXIH@Z
_TEXT	SEGMENT
_this$ = -104						; size = 4
__Tmp$226422 = -48					; size = 4
$T226400 = -44						; size = 4
$T226384 = -40						; size = 4
$T226362 = -36						; size = 4
$T226349 = -32						; size = 4
$T226348 = -28						; size = 4
$T226347 = -24						; size = 4
$T226346 = -20						; size = 4
$T226345 = -16						; size = 4
$T226344 = -12						; size = 4
$T226343 = -8						; size = 4
$T226342 = -4						; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
?resize@?$vector@HV?$allocator@H@std@@@std@@QAEXIH@Z PROC ; std::vector<int,std::allocator<int> >::resize, COMDAT
; _this$ = ecx

; 717  : 		{	// determine new length, padding with _Val elements as needed

	push	ebp
	mov	ebp, esp
	sub	esp, 104				; 00000068H
	mov	DWORD PTR _this$[ebp], ecx

; 718  : 		if (size() < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	cmp	edx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN16@resize

; 719  : 			_Insert_n(end(), _Newsize - size(), _Val);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T226362[ebp], ecx
	mov	edx, DWORD PTR $T226362[ebp]
	mov	DWORD PTR $T226343[ebp], edx
	mov	eax, DWORD PTR $T226343[ebp]
	mov	DWORD PTR $T226342[ebp], eax
	lea	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	mov	edx, DWORD PTR __Newsize$[ebp]
	sub	edx, ecx
	push	edx
	mov	eax, DWORD PTR $T226342[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z ; std::vector<int,std::allocator<int> >::_Insert_n
	jmp	SHORT $LN4@resize

; 720  : 		else if (_Newsize < size())

$LN16@resize:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	cmp	DWORD PTR __Newsize$[ebp], eax
	jae	SHORT $LN4@resize

; 721  : 			erase(begin() + _Newsize, end());

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T226384[ebp], edx
	mov	eax, DWORD PTR $T226384[ebp]
	mov	DWORD PTR $T226345[ebp], eax
	mov	ecx, DWORD PTR $T226345[ebp]
	mov	DWORD PTR $T226344[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T226400[ebp], eax
	mov	ecx, DWORD PTR $T226400[ebp]
	mov	DWORD PTR $T226347[ebp], ecx
	mov	edx, DWORD PTR $T226347[ebp]
	mov	DWORD PTR __Tmp$226422[ebp], edx
	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	ecx, DWORD PTR __Tmp$226422[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR __Tmp$226422[ebp], edx
	mov	eax, DWORD PTR __Tmp$226422[ebp]
	mov	DWORD PTR $T226348[ebp], eax
	mov	ecx, DWORD PTR $T226348[ebp]
	mov	DWORD PTR $T226346[ebp], ecx
	mov	edx, DWORD PTR $T226344[ebp]
	push	edx
	mov	eax, DWORD PTR $T226346[ebp]
	push	eax
	lea	ecx, DWORD PTR $T226349[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@0@Z ; std::vector<int,std::allocator<int> >::erase
$LN4@resize:

; 722  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?resize@?$vector@HV?$allocator@H@std@@@std@@QAEXIH@Z ENDP ; std::vector<int,std::allocator<int> >::resize
_TEXT	ENDS
PUBLIC	??_C@_07NHABFFHN@__index?$AA@			; `string'
PUBLIC	??_C@_0L@GCADIOHF@__instance?$AA@		; `string'
PUBLIC	??_C@_01MHEDDDHA@v?$AA@				; `string'
PUBLIC	??_C@_06BPGFKLEK@__mode?$AA@			; `string'
PUBLIC	??_C@_0M@CEBPKMAI@__instances?$AA@		; `string'
EXTRN	_lua_pushnil:PROC
EXTRN	_lua_remove:PROC
EXTRN	_lua_pushlightuserdata:PROC
EXTRN	_lua_rawget:PROC
EXTRN	?PushMethods@CvLuaArea@@SAXPAUlua_State@@H@Z:PROC ; CvLuaArea::PushMethods
EXTRN	_lua_gettop:PROC
EXTRN	_lua_pushvalue:PROC
EXTRN	_lua_setmetatable:PROC
EXTRN	_lua_rawset:PROC
EXTRN	_lua_createtable:PROC
EXTRN	_lua_settop:PROC
EXTRN	_lua_type:PROC
EXTRN	_lua_getfield:PROC
EXTRN	?GetTypeName@CvLuaArea@@SAPBDXZ:PROC		; CvLuaArea::GetTypeName
;	COMDAT ??_C@_07NHABFFHN@__index?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
CONST	SEGMENT
??_C@_07NHABFFHN@__index?$AA@ DB '__index', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GCADIOHF@__instance?$AA@
CONST	SEGMENT
??_C@_0L@GCADIOHF@__instance?$AA@ DB '__instance', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01MHEDDDHA@v?$AA@
CONST	SEGMENT
??_C@_01MHEDDDHA@v?$AA@ DB 'v', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06BPGFKLEK@__mode?$AA@
CONST	SEGMENT
??_C@_06BPGFKLEK@__mode?$AA@ DB '__mode', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CEBPKMAI@__instances?$AA@
CONST	SEGMENT
??_C@_0M@CEBPKMAI@__instances?$AA@ DB '__instances', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaArea@@VCvArea@@@@SAXPAUlua_State@@PAVCvArea@@@Z
_TEXT	SEGMENT
_instances_index$223307 = -8				; size = 4
_type_index$223306 = -4					; size = 4
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaArea@@VCvArea@@@@SAXPAUlua_State@@PAVCvArea@@@Z PROC ; CvLuaScopedInstance<CvLuaArea,CvArea>::Push, COMDAT

; 39   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	cmp	DWORD PTR _pkType$[ebp], 0
	je	$LN4@Push

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaArea@@SAPBDXZ		; CvLuaArea::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN3@Push

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 59   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 63   : 			lua_newtable(L);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET ??_C@_06BPGFKLEK@__mode?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET ??_C@_01MHEDDDHA@v?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawset
	add	esp, 8

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushvalue
	add	esp, 8

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaArea@@SAPBDXZ		; CvLuaArea::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?PushMethods@CvLuaArea@@SAXPAUlua_State@@H@Z ; CvLuaArea::PushMethods
	add	esp, 8
$LN3@Push:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _type_index$223306[ebp], eax

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawget
	add	esp, 8

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _instances_index$223307[ebp], eax

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawget
	add	esp, 8

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN2@Push

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settop
	add	esp, 8

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 97   : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET ??_C@_07NHABFFHN@__index?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 102  : 			lua_pushvalue(L, type_index);

	mov	ecx, DWORD PTR _type_index$223306[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushvalue
	add	esp, 8

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushvalue
	add	esp, 8

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	mov	edx, DWORD PTR _instances_index$223307[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8
$LN2@Push:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	mov	ecx, DWORD PTR _instances_index$223307[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_remove
	add	esp, 8

; 114  : 		lua_remove(L, type_index);

	mov	eax, DWORD PTR _type_index$223306[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_remove
	add	esp, 8

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else

	jmp	SHORT $LN5@Push
$LN4@Push:

; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushnil
	add	esp, 4
$LN5@Push:

; 122  : 	}
; 123  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaArea@@VCvArea@@@@SAXPAUlua_State@@PAVCvArea@@@Z ENDP ; CvLuaScopedInstance<CvLuaArea,CvArea>::Push
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXXZ@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod, COMDAT

; 222  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 223  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 224  : 	(pkType->*func)();

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 225  : 	return 0;

	xor	eax, eax

; 226  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod
_TEXT	ENDS
PUBLIC	??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@ ; `string'
EXTRN	_luaL_error:PROC
EXTRN	_lua_touserdata:PROC
;	COMDAT ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
CONST	SEGMENT
??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@ DB 'Not a val'
	DB	'id instance.  Either the instance is NULL or you used ''.'' i'
	DB	'nstead of '':''.', 00H			; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_stack_size$ = -12					; size = 4
_pkInstance$ = -8					; size = 4
_bFail$ = -1						; size = 1
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 128  : 	const int stack_size = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _stack_size$[ebp], eax

; 129  : 	bool bFail = true;

	mov	BYTE PTR _bFail$[ebp], 1

; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;

	mov	DWORD PTR _pkInstance$[ebp], 0

; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 5
	jne	SHORT $LN5@GetInstanc

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN5@GetInstanc

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$[ebp], eax

; 138  : 			if(pkInstance)

	cmp	DWORD PTR _pkInstance$[ebp], 0
	je	SHORT $LN5@GetInstanc

; 139  : 			{
; 140  : 				bFail = false;

	mov	BYTE PTR _bFail$[ebp], 0
$LN5@GetInstanc:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	mov	ecx, DWORD PTR _stack_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	movzx	eax, BYTE PTR _bFail$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetInstanc
	movzx	ecx, BYTE PTR _bErrorOnFail$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@GetInstanc

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[ebp], 1
	jne	SHORT $LN1@GetInstanc

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc:

; 151  : 		Derived::HandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN2@GetInstanc:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, DWORD PTR _pkInstance$[ebp]

; 154  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
_TEXT	ENDS
PUBLIC	??_C@_0BJ@GHLHFGFM@Instance?5does?5not?5exist?4?$AA@ ; `string'
;	COMDAT ??_C@_0BJ@GHLHFGFM@Instance?5does?5not?5exist?4?$AA@
CONST	SEGMENT
??_C@_0BJ@GHLHFGFM@Instance?5does?5not?5exist?4?$AA@ DB 'Instance does no'
	DB	't exist.', 00H				; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@KAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@KAXPAUlua_State@@@Z PROC ; CvLuaScopedInstance<CvLuaCity,CvCity>::DefaultHandleMissingInstance, COMDAT

; 164  : {

	push	ebp
	mov	ebp, esp

; 165  : 	luaL_error(L, "Instance does not exist.");

	push	OFFSET ??_C@_0BJ@GHLHFGFM@Instance?5does?5not?5exist?4?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_error
	add	esp, 8

; 166  : }

	pop	ebp
	ret	0
?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@KAXPAUlua_State@@@Z ENDP ; CvLuaScopedInstance<CvLuaCity,CvCity>::DefaultHandleMissingInstance
_TEXT	ENDS
EXTRN	?PushMethods@CvLuaPlot@@SAXPAUlua_State@@H@Z:PROC ; CvLuaPlot::PushMethods
EXTRN	?GetTypeName@CvLuaPlot@@SAPBDXZ:PROC		; CvLuaPlot::GetTypeName
; Function compile flags: /Odtp
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z
_TEXT	SEGMENT
_instances_index$223359 = -8				; size = 4
_type_index$223358 = -4					; size = 4
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z PROC ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push, COMDAT

; 39   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	cmp	DWORD PTR _pkType$[ebp], 0
	je	$LN4@Push@2

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaPlot@@SAPBDXZ		; CvLuaPlot::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN3@Push@2

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 59   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 63   : 			lua_newtable(L);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET ??_C@_06BPGFKLEK@__mode?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET ??_C@_01MHEDDDHA@v?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawset
	add	esp, 8

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushvalue
	add	esp, 8

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaPlot@@SAPBDXZ		; CvLuaPlot::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?PushMethods@CvLuaPlot@@SAXPAUlua_State@@H@Z ; CvLuaPlot::PushMethods
	add	esp, 8
$LN3@Push@2:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _type_index$223358[ebp], eax

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawget
	add	esp, 8

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _instances_index$223359[ebp], eax

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawget
	add	esp, 8

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN2@Push@2

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settop
	add	esp, 8

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 97   : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET ??_C@_07NHABFFHN@__index?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 102  : 			lua_pushvalue(L, type_index);

	mov	ecx, DWORD PTR _type_index$223358[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushvalue
	add	esp, 8

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushvalue
	add	esp, 8

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	mov	edx, DWORD PTR _instances_index$223359[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8
$LN2@Push@2:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	mov	ecx, DWORD PTR _instances_index$223359[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_remove
	add	esp, 8

; 114  : 		lua_remove(L, type_index);

	mov	eax, DWORD PTR _type_index$223358[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_remove
	add	esp, 8

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else

	jmp	SHORT $LN5@Push@2
$LN4@Push@2:

; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushnil
	add	esp, 4
$LN5@Push@2:

; 122  : 	}
; 123  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ENDP ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
_TEXT	ENDS
EXTRN	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z:PROC ; CvLuaPlot::HandleMissingInstance
; Function compile flags: /Odtp
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_stack_size$ = -12					; size = 4
_pkInstance$ = -8					; size = 4
_bFail$ = -1						; size = 1
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 128  : 	const int stack_size = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _stack_size$[ebp], eax

; 129  : 	bool bFail = true;

	mov	BYTE PTR _bFail$[ebp], 1

; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;

	mov	DWORD PTR _pkInstance$[ebp], 0

; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 5
	jne	SHORT $LN5@GetInstanc@2

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN5@GetInstanc@2

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$[ebp], eax

; 138  : 			if(pkInstance)

	cmp	DWORD PTR _pkInstance$[ebp], 0
	je	SHORT $LN5@GetInstanc@2

; 139  : 			{
; 140  : 				bFail = false;

	mov	BYTE PTR _bFail$[ebp], 0
$LN5@GetInstanc@2:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	mov	ecx, DWORD PTR _stack_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	movzx	eax, BYTE PTR _bFail$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetInstanc@2
	movzx	ecx, BYTE PTR _bErrorOnFail$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@GetInstanc@2

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[ebp], 1
	jne	SHORT $LN1@GetInstanc@2

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc@2:

; 151  : 		Derived::HandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 4
$LN2@GetInstanc@2:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, DWORD PTR _pkInstance$[ebp]

; 154  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
_TEXT	ENDS
EXTRN	?PushMethods@CvLuaUnit@@SAXPAUlua_State@@H@Z:PROC ; CvLuaUnit::PushMethods
EXTRN	?GetTypeName@CvLuaUnit@@SAPBDXZ:PROC		; CvLuaUnit::GetTypeName
; Function compile flags: /Odtp
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z
_TEXT	SEGMENT
_instances_index$223391 = -8				; size = 4
_type_index$223390 = -4					; size = 4
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z PROC ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push, COMDAT

; 39   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	cmp	DWORD PTR _pkType$[ebp], 0
	je	$LN4@Push@3

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaUnit@@SAPBDXZ		; CvLuaUnit::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN3@Push@3

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 59   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 63   : 			lua_newtable(L);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET ??_C@_06BPGFKLEK@__mode?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET ??_C@_01MHEDDDHA@v?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawset
	add	esp, 8

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushvalue
	add	esp, 8

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaUnit@@SAPBDXZ		; CvLuaUnit::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?PushMethods@CvLuaUnit@@SAXPAUlua_State@@H@Z ; CvLuaUnit::PushMethods
	add	esp, 8
$LN3@Push@3:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _type_index$223390[ebp], eax

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawget
	add	esp, 8

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _instances_index$223391[ebp], eax

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawget
	add	esp, 8

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN2@Push@3

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settop
	add	esp, 8

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 97   : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET ??_C@_07NHABFFHN@__index?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 102  : 			lua_pushvalue(L, type_index);

	mov	ecx, DWORD PTR _type_index$223390[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushvalue
	add	esp, 8

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushvalue
	add	esp, 8

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	mov	edx, DWORD PTR _instances_index$223391[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8
$LN2@Push@3:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	mov	ecx, DWORD PTR _instances_index$223391[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_remove
	add	esp, 8

; 114  : 		lua_remove(L, type_index);

	mov	eax, DWORD PTR _type_index$223390[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_remove
	add	esp, 8

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else

	jmp	SHORT $LN5@Push@3
$LN4@Push@3:

; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushnil
	add	esp, 4
$LN5@Push@3:

; 122  : 	}
; 123  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ENDP ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
_TEXT	ENDS
EXTRN	?HandleMissingInstance@CvLuaUnit@@SAXPAUlua_State@@@Z:PROC ; CvLuaUnit::HandleMissingInstance
; Function compile flags: /Odtp
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_stack_size$ = -12					; size = 4
_pkInstance$ = -8					; size = 4
_bFail$ = -1						; size = 1
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 128  : 	const int stack_size = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _stack_size$[ebp], eax

; 129  : 	bool bFail = true;

	mov	BYTE PTR _bFail$[ebp], 1

; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;

	mov	DWORD PTR _pkInstance$[ebp], 0

; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 5
	jne	SHORT $LN5@GetInstanc@3

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN5@GetInstanc@3

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$[ebp], eax

; 138  : 			if(pkInstance)

	cmp	DWORD PTR _pkInstance$[ebp], 0
	je	SHORT $LN5@GetInstanc@3

; 139  : 			{
; 140  : 				bFail = false;

	mov	BYTE PTR _bFail$[ebp], 0
$LN5@GetInstanc@3:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	mov	ecx, DWORD PTR _stack_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	movzx	eax, BYTE PTR _bFail$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetInstanc@3
	movzx	ecx, BYTE PTR _bErrorOnFail$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@GetInstanc@3

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[ebp], 1
	jne	SHORT $LN1@GetInstanc@3

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc@3:

; 151  : 		Derived::HandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?HandleMissingInstance@CvLuaUnit@@SAXPAUlua_State@@@Z ; CvLuaUnit::HandleMissingInstance
	add	esp, 4
$LN2@GetInstanc@3:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, DWORD PTR _pkInstance$[ebp]

; 154  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
_TEXT	ENDS
PUBLIC	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
;	COMDAT ??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4UnitTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4UnitTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum UnitTypes>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum UnitTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4UnitTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum UnitTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4BuildingTypes@@_NPAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4BuildingTypes@@_NPAVCvString@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4BuildingTypes@@_NPAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4BuildingTypes@@_NPAVCvString@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum BuildingTypes,bool,CvString *>, COMDAT

; 98   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 99   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 100  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 101  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@PAVCvString@@@CvLuaArgs@@YAPAVCvString@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<CvString *>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 102  : 
; 103  : 	return 1;

	mov	eax, 1

; 104  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4BuildingTypes@@_NPAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4BuildingTypes@@_NPAVCvString@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum BuildingTypes,bool,CvString *>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z PROC	; CvLuaArgs::toValue<bool>, COMDAT

; 23   : 	{

	push	ebp
	mov	ebp, esp

; 24   : 		return lua_toboolean(L, idx) != 0;

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	neg	eax
	sbb	eax, eax
	neg	eax

; 25   : 	}

	pop	ebp
	ret	0
??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ENDP	; CvLuaArgs::toValue<bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 1
??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z PROC	; CvLuaArgs::pushValue<bool>, COMDAT

; 44   : 	{

	push	ebp
	mov	ebp, esp

; 45   : 		lua_pushboolean(L, t);

	movzx	eax, BYTE PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 46   : 	}

	pop	ebp
	ret	0
??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ENDP	; CvLuaArgs::pushValue<bool>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4ResourceTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4ResourceTypes@@_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4ResourceTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4ResourceTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ResourceTypes,bool>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4ResourceTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4ResourceTypes@@@Z ; CvLuaArgs::pushValue<enum ResourceTypes>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4ResourceTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4ResourceTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ResourceTypes,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4ResourceTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4ResourceTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ResourceTypes>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4ResourceTypes@@@CvLuaArgs@@YA?AW4ResourceTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ResourceTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4ResourceTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ResourceTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z PROC	; CvLuaArgs::pushValue<int>, COMDAT

; 38   : 	{

	push	ebp
	mov	ebp, esp

; 39   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 40   : 	}

	pop	ebp
	ret	0
??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ENDP	; CvLuaArgs::pushValue<int>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4UnitTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4UnitTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes>, COMDAT

; 130  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 131  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum UnitTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 134  : 
; 135  : 	return 1;

	mov	eax, 1

; 136  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4UnitTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4UnitTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4UnitTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum UnitTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4UnitTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4UnitTypes@@@Z ; CvLuaArgs::pushValue<enum UnitTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4UnitTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum UnitTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4ProcessTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4ProcessTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4ProcessTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4ProcessTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ProcessTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4ProcessTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4ProcessTypes@@@Z ; CvLuaArgs::pushValue<enum ProcessTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4ProcessTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4ProcessTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ProcessTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum UnitTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4ProjectTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4ProjectTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ProjectTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4ProjectTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4SpecialistTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4SpecialistTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4SpecialistTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4SpecialistTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum SpecialistTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4SpecialistTypes@@@CvLuaArgs@@YA?AW4SpecialistTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum SpecialistTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4SpecialistTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4SpecialistTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum SpecialistTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4UnitAITypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitAITypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4UnitAITypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitAITypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitAITypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4UnitAITypes@@@CvLuaArgs@@YA?AW4UnitAITypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum UnitAITypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4UnitAITypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitAITypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitAITypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4UnitTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4UnitTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum UnitTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum UnitTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4UnitTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum UnitTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4UnitTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4UnitTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes,int>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum UnitTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4UnitTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4BuildingTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4BuildingTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes,int>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4BuildingTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4ProjectTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4ProjectTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes,int>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ProjectTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4ProjectTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4SpecialistTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4SpecialistTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4SpecialistTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4SpecialistTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum SpecialistTypes,int>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4SpecialistTypes@@@CvLuaArgs@@YA?AW4SpecialistTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum SpecialistTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4SpecialistTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4SpecialistTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum SpecialistTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4UnitTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4UnitTypes@@_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4UnitTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4UnitTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes,bool>, COMDAT

; 140  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 141  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 142  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 143  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum UnitTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 144  : 
; 145  : 	return 1;

	mov	eax, 1

; 146  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4UnitTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4UnitTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4BuildingTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4BuildingTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes>, COMDAT

; 130  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 131  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 134  : 
; 135  : 	return 1;

	mov	eax, 1

; 136  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4BuildingTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4ProjectTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4ProjectTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes>, COMDAT

; 130  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 131  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ProjectTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 134  : 
; 135  : 	return 1;

	mov	eax, 1

; 136  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4ProjectTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N1@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N1@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,bool>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N1@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHH@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,int>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4HurryTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4HurryTypes@@_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4HurryTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4HurryTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum HurryTypes,bool>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum HurryTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4HurryTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4HurryTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum HurryTypes,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4HurryTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4HurryTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum HurryTypes>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum HurryTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4HurryTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum HurryTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4YieldTypes@@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@W4ResourceTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4YieldTypes@@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@W4ResourceTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes,enum ResourceTypes>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4ResourceTypes@@@CvLuaArgs@@YA?AW4ResourceTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ResourceTypes>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum YieldTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4YieldTypes@@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@W4ResourceTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes,enum ResourceTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4HandicapTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4HandicapTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum HandicapTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z ; CvLuaArgs::pushValue<enum HandicapTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4HandicapTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum HandicapTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4CivilizationTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4CivilizationTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum CivilizationTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4CivilizationTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CivilizationTypes@@@Z ; CvLuaArgs::pushValue<enum CivilizationTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4CivilizationTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum CivilizationTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4TeamTypes@@_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4TeamTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum TeamTypes,bool>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TeamTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4TeamTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum TeamTypes,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NH@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,int>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H_NH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_NH@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H_NH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_NH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,int>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	edx, al
	push	edx
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H_NH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_NH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H_NPAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_NPAVCvString@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H_NPAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_NPAVCvString@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,CvString *>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@PAVCvString@@@CvLuaArgs@@YAPAVCvString@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<CvString *>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	edx, al
	push	edx
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H_NPAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_NPAVCvString@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,CvString *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4HurryTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4HurryTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum HurryTypes,bool>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum HurryTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4HurryTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum HurryTypes,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum HurryTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum HurryTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum HurryTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@J@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEJXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@J@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEJXZ@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<long>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@J@CvLuaArgs@@YAXPAUlua_State@@J@Z ; CvLuaArgs::pushValue<long>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@J@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEJXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<long>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum BuildingClassTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum BuildingClassTypes>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4BuildingTypes@@PAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@PAVCvString@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4BuildingTypes@@PAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@PAVCvString@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes,CvString *>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@PAVCvString@@@CvLuaArgs@@YAPAVCvString@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<CvString *>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4BuildingTypes@@PAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@PAVCvString@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes,CvString *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N1@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N1@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,bool>, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 240  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 243  : 	return 0;

	xor	eax, eax

; 244  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N1@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4PlayerTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4PlayerTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum PlayerTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z ; CvLuaArgs::pushValue<enum PlayerTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4PlayerTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4TeamTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4TeamTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum TeamTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z ; CvLuaArgs::pushValue<enum TeamTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4TeamTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum TeamTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum YieldTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4YieldTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4YieldTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum YieldTypes,int>, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 240  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum YieldTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 243  : 	return 0;

	xor	eax, eax

; 244  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4YieldTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum YieldTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4YieldTypes@@W4SpecialistTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@W4SpecialistTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4YieldTypes@@W4SpecialistTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@W4SpecialistTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes,enum SpecialistTypes>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4SpecialistTypes@@@CvLuaArgs@@YA?AW4SpecialistTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum SpecialistTypes>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum YieldTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4YieldTypes@@W4SpecialistTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@W4SpecialistTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes,enum SpecialistTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4DomainTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4DomainTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4DomainTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4DomainTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum DomainTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4DomainTypes@@@CvLuaArgs@@YA?AW4DomainTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum DomainTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4DomainTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4DomainTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum DomainTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4PlayerTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4PlayerTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum PlayerTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4PlayerTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AE_NW4TeamTypes@@_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AE_NW4TeamTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum TeamTypes,bool>, COMDAT

; 140  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 141  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 142  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 143  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TeamTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 144  : 
; 145  : 	return 1;

	mov	eax, 1

; 146  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AE_NW4TeamTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum TeamTypes,bool>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum BuildingTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum BuildingTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum UnitTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum UnitTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum UnitClassTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum UnitClassTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4SpecialistTypes@@@CvLuaArgs@@YA?AW4SpecialistTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4SpecialistTypes@@@CvLuaArgs@@YA?AW4SpecialistTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum SpecialistTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4SpecialistTypes@@@CvLuaArgs@@YA?AW4SpecialistTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum SpecialistTypes>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4UnitCombatTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitCombatTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4UnitCombatTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitCombatTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitCombatTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4UnitCombatTypes@@@CvLuaArgs@@YA?AW4UnitCombatTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum UnitCombatTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4UnitCombatTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitCombatTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitCombatTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4PromotionTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4PromotionTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4PromotionTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4PromotionTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum PromotionTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4PromotionTypes@@@CvLuaArgs@@YA?AW4PromotionTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PromotionTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4PromotionTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4PromotionTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum PromotionTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4PromotionTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4PromotionTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4PromotionTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4PromotionTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum PromotionTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4PromotionTypes@@@CvLuaArgs@@YA?AW4PromotionTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PromotionTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4PromotionTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4PromotionTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum PromotionTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool>, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 240  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 243  : 	return 0;

	xor	eax, eax

; 244  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NHH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NHH@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NHH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NHH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,int,int>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NHH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NHH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,int,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHXZ@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>, COMDAT

; 121  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 122  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 123  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 124  : 
; 125  : 	return 1;

	mov	eax, 1

; 126  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
_TEXT	ENDS
;	COMDAT ?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ
_TEXT	SEGMENT
?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ PROC ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex, COMDAT

; 158  : {

	push	ebp
	mov	ebp, esp

; 159  : 	return 2;

	mov	eax, 2

; 160  : }

	pop	ebp
	ret	0
?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ENDP ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$toValue@PAVCvString@@@CvLuaArgs@@YAPAVCvString@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@PAVCvString@@@CvLuaArgs@@YAPAVCvString@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<CvString *>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@PAVCvString@@@CvLuaArgs@@YAPAVCvString@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<CvString *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4ResourceTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4ResourceTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4ResourceTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4ResourceTypes@@@Z PROC ; CvLuaArgs::pushValue<enum ResourceTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4ResourceTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4ResourceTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum ResourceTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4ResourceTypes@@@CvLuaArgs@@YA?AW4ResourceTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4ResourceTypes@@@CvLuaArgs@@YA?AW4ResourceTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum ResourceTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4ResourceTypes@@@CvLuaArgs@@YA?AW4ResourceTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum ResourceTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4UnitTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4UnitTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4UnitTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4UnitTypes@@@Z PROC ; CvLuaArgs::pushValue<enum UnitTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4UnitTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4UnitTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum UnitTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4ProcessTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4ProcessTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4ProcessTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4ProcessTypes@@@Z PROC ; CvLuaArgs::pushValue<enum ProcessTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4ProcessTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4ProcessTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum ProcessTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum ProjectTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum ProjectTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4UnitAITypes@@@CvLuaArgs@@YA?AW4UnitAITypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4UnitAITypes@@@CvLuaArgs@@YA?AW4UnitAITypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum UnitAITypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4UnitAITypes@@@CvLuaArgs@@YA?AW4UnitAITypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum UnitAITypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum HurryTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum HurryTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum YieldTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum YieldTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z PROC ; CvLuaArgs::pushValue<enum HandicapTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum HandicapTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4CivilizationTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CivilizationTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4CivilizationTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CivilizationTypes@@@Z PROC ; CvLuaArgs::pushValue<enum CivilizationTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4CivilizationTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CivilizationTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum CivilizationTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum TeamTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum TeamTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@J@CvLuaArgs@@YAXPAUlua_State@@J@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@J@CvLuaArgs@@YAXPAUlua_State@@J@Z PROC	; CvLuaArgs::pushValue<long>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@J@CvLuaArgs@@YAXPAUlua_State@@J@Z ENDP	; CvLuaArgs::pushValue<long>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z PROC ; CvLuaArgs::pushValue<enum PlayerTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z PROC ; CvLuaArgs::pushValue<enum TeamTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum TeamTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4DomainTypes@@@CvLuaArgs@@YA?AW4DomainTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4DomainTypes@@@CvLuaArgs@@YA?AW4DomainTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum DomainTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4DomainTypes@@@CvLuaArgs@@YA?AW4DomainTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum DomainTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum PlayerTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4UnitCombatTypes@@@CvLuaArgs@@YA?AW4UnitCombatTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4UnitCombatTypes@@@CvLuaArgs@@YA?AW4UnitCombatTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum UnitCombatTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4UnitCombatTypes@@@CvLuaArgs@@YA?AW4UnitCombatTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum UnitCombatTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4PromotionTypes@@@CvLuaArgs@@YA?AW4PromotionTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4PromotionTypes@@@CvLuaArgs@@YA?AW4PromotionTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum PromotionTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4PromotionTypes@@@CvLuaArgs@@YA?AW4PromotionTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum PromotionTypes>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
_TEXT	ENDS
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvcity.h
_TEXT	ENDS
;	COMDAT ?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ PROC		; CvCity::getOwner, COMDAT
; _this$ = ecx

; 603  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 604  : 		return m_eOwner;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+84]

; 605  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ ENDP		; CvCity::getOwner
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z ; std::vector<int,std::allocator<int> >::_Buy
EXTRN	__CxxThrowException@8:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
xdata$x	SEGMENT
__unwindtable$??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv88 = -132						; size = 4
tv145 = -128						; size = 4
_this$ = -124						; size = 4
$T226736 = -30						; size = 1
$T226723 = -29						; size = 1
$T226719 = -28						; size = 4
$T226712 = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 120				; 00000078H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T226736[ebp]
	mov	DWORD PTR $T226712[ebp], eax
	lea	ecx, DWORD PTR $T226723[ebp]
	mov	DWORD PTR $T226719[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv145[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv88[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 471  : 		_Buy(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z ; std::vector<int,std::allocator<int> >::_Buy

; 472  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ
__ehhandler$??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-124]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -44						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 559  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy

; 560  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ
__ehhandler$??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??$_Allocate@H@std@@YAPAHIPAH@Z			; std::_Allocate<int>
PUBLIC	?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ ; std::vector<int,std::allocator<int> >::_Xlen
; Function compile flags: /Odtp
;	COMDAT ?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
tv94 = -96						; size = 4
_this$ = -92						; size = 4
__Count$226861 = -4					; size = 4
__Capacity$ = 8						; size = 4
?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z PROC	; std::vector<int,std::allocator<int> >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	mov	DWORD PTR _this$[ebp], ecx

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 1104 : 		if (_Capacity == 0)

	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN4@Buy

; 1105 : 			return (false);

	xor	al, al
	jmp	SHORT $LN5@Buy
	jmp	SHORT $LN3@Buy
$LN4@Buy:

; 1106 : 		else if (max_size() < _Capacity)

	mov	DWORD PTR __Count$226861[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$226861[ebp], 0
	jbe	SHORT $LN11@Buy
	mov	eax, DWORD PTR __Count$226861[ebp]
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN7@Buy
$LN11@Buy:
	mov	DWORD PTR tv94[ebp], 1
$LN7@Buy:
	mov	ecx, DWORD PTR tv94[ebp]
	cmp	ecx, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN23@Buy

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ ; std::vector<int,std::allocator<int> >::_Xlen

; 1108 : 		else

	jmp	SHORT $LN3@Buy

; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

$LN23@Buy:
	push	0
	mov	edx, DWORD PTR __Capacity$[ebp]
	push	edx
	call	??$_Allocate@H@std@@YAPAHIPAH@Z		; std::_Allocate<int>
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+8], ecx

; 1112 : 			_Myend = _Myfirst + _Capacity;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Capacity$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
$LN3@Buy:

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
$LN5@Buy:

; 1115 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z ENDP	; std::vector<int,std::allocator<int> >::_Buy
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T226927 = -28						; size = 4
$T226926 = -24						; size = 4
$T226922 = -20						; size = 4
$T226921 = -16						; size = 4
$T226910 = -12						; size = 4
$T226909 = -8						; size = 4
__Cat$226916 = -2					; size = 1
$T226914 = -1						; size = 1
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ PROC	; std::vector<int,std::allocator<int> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Tidy

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T226922[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T226921[ebp], ecx
	mov	edx, DWORD PTR $T226922[ebp]
	mov	DWORD PTR $T226910[ebp], edx
	mov	eax, DWORD PTR $T226921[ebp]
	mov	DWORD PTR $T226909[ebp], eax
	mov	cl, BYTE PTR __Cat$226916[ebp]
	mov	BYTE PTR $T226914[ebp], cl

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	mov	DWORD PTR $T226927[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T226926[ebp], eax
	mov	ecx, DWORD PTR $T226926[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@Tidy:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 1135 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ENDP	; std::vector<int,std::allocator<int> >::_Tidy
_TEXT	ENDS
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??0exception@std@@QAE@XZ:PROC
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:PROC		; std::length_error::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_Elength_error@std@@UAEPAXI@Z ; std::length_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_Elogic_error@std@@UAEPAXI@Z ; std::logic_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T226931 = -80						; size = 28
$T226930 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ PROC	; std::vector<int,std::allocator<int> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T226931[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T226930[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR $T226930[ebp], OFFSET ??_7logic_error@std@@6B@
	lea	eax, DWORD PTR $T226931[ebp]
	push	eax
	lea	ecx, DWORD PTR $T226930[ebp+12]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T226930[ebp], OFFSET ??_7length_error@std@@6B@
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T226930[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T226931[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@Xlen:

; 1261 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T226931[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T226930[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ ENDP	; std::vector<int,std::allocator<int> >::_Xlen
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?what@logic_error@std@@UBEPBDXZ PROC			; std::logic_error::what, COMDAT
; _this$ = ecx

; 34   : 		{	// return pointer to message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 35   : 		return (_Str.c_str());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 36   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN1@scalar
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1length_error@std@@UAE@XZ PROC			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 109  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@

; 110  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC			; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	edx, DWORD PTR ___flags$[ebp]
	and	edx, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0length_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$1
__ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0length_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC			; std::length_error::length_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0length_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0length_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R0?AVbad_alloc@std@@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
xdata$x	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_Ebad_alloc@std@@UAEPAXI@Z ; std::bad_alloc::`vftable'
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
CONST	ENDS
;	COMDAT ??$_Allocate@H@std@@YAPAHIPAH@Z
_TEXT	SEGMENT
$T227002 = -16						; size = 4
$T226998 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@H@std@@YAPAHIPAH@Z PROC			; std::_Allocate<int>, COMDAT

; 36   : 	{	// check for integer overflow

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 37   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate

; 38   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate
$LN3@Allocate:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 4
	jae	SHORT $LN2@Allocate

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	mov	DWORD PTR $T227002[ebp], 0
	lea	eax, DWORD PTR $T227002[ebp]
	push	eax
	lea	ecx, DWORD PTR $T226998[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR $T226998[ebp], OFFSET ??_7bad_alloc@std@@6B@
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T226998[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@Allocate:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	mov	edx, DWORD PTR __Count$[ebp]
	shl	edx, 2
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate:

; 44   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@H@std@@YAPAHIPAH@Z ENDP			; std::_Allocate<int>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
_TEXT	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 380  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 381  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN1@scalar@3
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$unchecked_copy@PAHPAH@stdext@@YAPAHPAH00@Z	; stdext::unchecked_copy<int *,int *>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@0@Z
_TEXT	SEGMENT
_this$ = -56						; size = 4
$T227105 = -52						; size = 4
$T227094 = -48						; size = 4
$T227093 = -44						; size = 4
__Cat$227101 = -40					; size = 1
$T227099 = -39						; size = 1
__Ptr$210227 = -12					; size = 4
__Last$ = -8						; size = 4
__First$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@0@Z PROC ; std::vector<int,std::allocator<int> >::erase, COMDAT
; _this$ = ecx

; 1028 : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	mov	DWORD PTR _this$[ebp], ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);

	mov	eax, DWORD PTR __First_arg$[ebp]
	mov	DWORD PTR __First$[ebp], eax

; 1030 : 		iterator _Last = _Make_iter(_Last_arg);

	mov	ecx, DWORD PTR __Last_arg$[ebp]
	mov	DWORD PTR __Last$[ebp], ecx

; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	edx, DWORD PTR __First$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR __Last$[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN1@erase

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$unchecked_copy@PAHPAH@stdext@@YAPAHPAH00@Z ; stdext::unchecked_copy<int *,int *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ptr$210227[ebp], eax

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T227105[ebp], edx
	mov	eax, DWORD PTR $T227105[ebp]
	mov	DWORD PTR $T227094[ebp], eax
	mov	ecx, DWORD PTR __Ptr$210227[ebp]
	mov	DWORD PTR $T227093[ebp], ecx
	mov	dl, BYTE PTR __Cat$227101[ebp]
	mov	BYTE PTR $T227099[ebp], dl

; 1049 : 			_Mylast = _Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$210227[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN1@erase:

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1055 : #endif
; 1056 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@0@Z ENDP ; std::vector<int,std::allocator<int> >::erase
_TEXT	ENDS
EXTRN	__imp__memmove_s:PROC
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$unchecked_copy@PAHPAH@stdext@@YAPAHPAH00@Z
_TEXT	SEGMENT
$T227128 = -26						; size = 1
$T227127 = -25						; size = 1
$T227126 = -24						; size = 4
$T227125 = -20						; size = 4
__Off$227121 = -16					; size = 4
__Result$227122 = -12					; size = 4
__Cat$227113 = -4					; size = 1
$T227110 = -3						; size = 1
$T227109 = -2						; size = 1
$T227108 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAHPAH@stdext@@YAPAHPAH00@Z PROC	; stdext::unchecked_copy<int *,int *>, COMDAT

; 3604 : 	{	// copy [_First, _Last) to [_Dest, ...)

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	xor	eax, eax
	mov	BYTE PTR $T227108[ebp], al
	mov	cl, BYTE PTR __Cat$227113[ebp]
	mov	BYTE PTR $T227109[ebp], cl
	mov	dl, BYTE PTR $T227108[ebp]
	mov	BYTE PTR $T227128[ebp], dl
	mov	al, BYTE PTR $T227110[ebp]
	mov	BYTE PTR $T227127[ebp], al
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T227126[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T227125[ebp], edx
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR $T227125[ebp]
	sar	eax, 2
	mov	DWORD PTR __Off$227121[ebp], eax
	mov	ecx, DWORD PTR __Off$227121[ebp]
	mov	edx, DWORD PTR $T227126[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR __Result$227122[ebp], eax
	cmp	DWORD PTR __Off$227121[ebp], 0
	jle	SHORT $LN8@unchecked_
	mov	ecx, DWORD PTR __Off$227121[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR $T227125[ebp]
	push	edx
	mov	eax, DWORD PTR __Off$227121[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR $T227126[ebp]
	push	ecx
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN8@unchecked_:
	mov	eax, DWORD PTR __Result$227122[ebp]

; 3607 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$unchecked_copy@PAHPAH@stdext@@YAPAHPAH00@Z ENDP	; stdext::unchecked_copy<int *,int *>
_TEXT	ENDS
PUBLIC	??$_Unchecked_move_backward@PAHPAH@stdext@@YAPAHPAH00@Z ; stdext::_Unchecked_move_backward<int *,int *>
PUBLIC	?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAHIABH@Z ; std::vector<int,std::allocator<int> >::_Ufill
PUBLIC	??$_Uninit_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<int *,int *,std::allocator<int> >
PUBLIC	??$unchecked_uninitialized_copy@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z ; stdext::unchecked_uninitialized_copy<int *,int *,std::allocator<int> >
PUBLIC	??$unchecked_fill_n@PAHIH@stdext@@YAXPAHIABH@Z	; stdext::unchecked_fill_n<int *,unsigned int,int>
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z$6 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z$2
__catchsym$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z$0
__unwindtable$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z$5
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z$6
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z
_TEXT	SEGMENT
tv84 = -432						; size = 4
tv302 = -428						; size = 4
tv288 = -424						; size = 4
tv280 = -420						; size = 4
_this$ = -416						; size = 4
$T227682 = -412						; size = 4
$T227630 = -368						; size = 4
$T227618 = -364						; size = 4
$T227608 = -357						; size = 1
$T227607 = -356						; size = 4
__Cat$227625 = -327					; size = 1
$T227622 = -326						; size = 1
$T227621 = -325						; size = 1
$T227579 = -324						; size = 4
$T227571 = -320						; size = 4
$T227563 = -316						; size = 4
$T227552 = -312						; size = 4
$T227551 = -308						; size = 4
__Cat$227558 = -302					; size = 1
$T227556 = -301						; size = 1
$T227480 = -276						; size = 4
$T227461 = -272						; size = 4
$T227444 = -265						; size = 1
$T227443 = -264						; size = 4
$T227433 = -260						; size = 4
$T227432 = -256						; size = 4
__Cat$227475 = -250					; size = 1
$T227472 = -249						; size = 1
$T227471 = -248						; size = 1
__Cat$227468 = -247					; size = 1
$T227465 = -246						; size = 1
$T227464 = -245						; size = 1
$T227408 = -244						; size = 4
$T227407 = -240						; size = 4
$T227403 = -236						; size = 4
$T227402 = -232						; size = 4
$T227391 = -228						; size = 4
$T227390 = -224						; size = 4
__Cat$227397 = -218					; size = 1
$T227394 = -217						; size = 1
$T227355 = -216						; size = 4
$T227354 = -212						; size = 4
__Cat$227361 = -206					; size = 1
$T227358 = -205						; size = 1
$T227325 = -204						; size = 4
$T227324 = -200						; size = 4
__Cat$227332 = -194					; size = 1
$T227330 = -193						; size = 1
$T227305 = -192						; size = 4
$T227293 = -188						; size = 4
$T227283 = -181						; size = 1
$T227282 = -180						; size = 4
__Cat$227301 = -175					; size = 1
$T227299 = -174						; size = 1
$T227298 = -173						; size = 1
$T227270 = -172						; size = 4
$T227258 = -168						; size = 4
$T227248 = -161						; size = 1
$T227247 = -160						; size = 4
__Cat$227267 = -155					; size = 1
$T227264 = -154						; size = 1
$T227263 = -153						; size = 1
$T227235 = -152						; size = 4
$T227223 = -148						; size = 4
$T227213 = -141						; size = 1
$T227212 = -140						; size = 4
__Cat$227231 = -135					; size = 1
$T227229 = -134						; size = 1
$T227228 = -133						; size = 1
__Count$227186 = -120					; size = 4
__Count$227160 = -48					; size = 4
__Tmp$214818 = -44					; size = 4
__Oldend$214819 = -40					; size = 4
__Tmp$214808 = -36					; size = 4
__Ncopied$214795 = -32					; size = 4
__Newvec$214793 = -28					; size = 4
__Whereoff$214794 = -24					; size = 4
__Capacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Where$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z PROC ; std::vector<int,std::allocator<int> >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 416				; 000001a0H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN29@Insert_n
	mov	DWORD PTR tv280[ebp], 0
	jmp	SHORT $LN27@Insert_n
$LN29@Insert_n:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	mov	DWORD PTR tv280[ebp], eax
$LN27@Insert_n:
	mov	ecx, DWORD PTR tv280[ebp]
	mov	DWORD PTR __Capacity$[ebp], ecx

; 1162 : 
; 1163 : 		if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN14@Insert_n
	jmp	$LN16@Insert_n
$LN14@Insert_n:

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	DWORD PTR __Count$227160[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$227160[ebp], 0
	jbe	SHORT $LN35@Insert_n
	mov	edx, DWORD PTR __Count$227160[ebp]
	mov	DWORD PTR tv288[ebp], edx
	jmp	SHORT $LN37@Insert_n
$LN35@Insert_n:
	mov	DWORD PTR tv288[ebp], 1
$LN37@Insert_n:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	mov	eax, DWORD PTR tv288[ebp]
	sub	eax, edx
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN42@Insert_n

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ ; std::vector<int,std::allocator<int> >::_Xlen
	jmp	$LN16@Insert_n

; 1167 : 		else if (_Capacity < size() + _Count)

$LN42@Insert_n:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	add	eax, DWORD PTR __Count$[ebp]
	cmp	DWORD PTR __Capacity$[ebp], eax
	jae	$LN10@Insert_n

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	DWORD PTR __Count$227186[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$227186[ebp], 0
	jbe	SHORT $LN48@Insert_n
	mov	ecx, DWORD PTR __Count$227186[ebp]
	mov	DWORD PTR tv302[ebp], ecx
	jmp	SHORT $LN44@Insert_n
$LN48@Insert_n:
	mov	DWORD PTR tv302[ebp], 1
$LN44@Insert_n:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	mov	eax, DWORD PTR tv302[ebp]
	sub	eax, edx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN17@Insert_n
	mov	DWORD PTR tv84[ebp], 0
	jmp	SHORT $LN18@Insert_n
$LN17@Insert_n:
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	add	ecx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv84[ebp], ecx
$LN18@Insert_n:
	mov	edx, DWORD PTR tv84[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx

; 1171 : 			if (_Capacity < size() + _Count)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	add	edx, DWORD PTR __Count$[ebp]
	cmp	DWORD PTR __Capacity$[ebp], edx
	jae	SHORT $LN54@Insert_n

; 1172 : 				_Capacity = size() + _Count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	add	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

$LN54@Insert_n:
	push	0
	mov	eax, DWORD PTR __Capacity$[ebp]
	push	eax
	call	??$_Allocate@H@std@@YAPAHIPAH@Z		; std::_Allocate<int>
	add	esp, 8
	mov	DWORD PTR __Newvec$214793[ebp], eax

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Where$[ebp]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	mov	DWORD PTR __Whereoff$214794[ebp], edx

; 1175 : 			int _Ncopied = 0;

	mov	DWORD PTR __Ncopied$214795[ebp], 0

; 1176 : 
; 1177 : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	eax, DWORD PTR __Whereoff$214794[ebp]
	mov	ecx, DWORD PTR __Newvec$214793[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR $T227235[ebp], edx
	mov	eax, DWORD PTR $T227235[ebp]
	mov	DWORD PTR $T227223[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T227228[ebp], cl
	mov	dl, BYTE PTR __Cat$227231[ebp]
	mov	BYTE PTR $T227229[ebp], dl
	mov	al, BYTE PTR $T227228[ebp]
	mov	BYTE PTR $T227213[ebp], al
	mov	ecx, DWORD PTR $T227223[ebp]
	mov	DWORD PTR $T227212[ebp], ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T227212[ebp]
	push	ecx
	call	??$unchecked_fill_n@PAHIH@stdext@@YAXPAHIABH@Z ; stdext::unchecked_fill_n<int *,unsigned int,int>
	add	esp, 12					; 0000000cH

; 1179 : 			++_Ncopied;

	mov	edx, DWORD PTR __Ncopied$214795[ebp]
	add	edx, 1
	mov	DWORD PTR __Ncopied$214795[ebp], edx

; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T227270[ebp], ecx
	mov	edx, DWORD PTR __Newvec$214793[ebp]
	mov	DWORD PTR $T227258[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T227263[ebp], al
	mov	cl, BYTE PTR __Cat$227267[ebp]
	mov	BYTE PTR $T227264[ebp], cl
	mov	dl, BYTE PTR $T227263[ebp]
	mov	BYTE PTR $T227248[ebp], dl
	mov	eax, DWORD PTR $T227258[ebp]
	mov	DWORD PTR $T227247[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T227247[ebp]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T227270[ebp]
	push	ecx
	call	??$unchecked_uninitialized_copy@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z ; stdext::unchecked_uninitialized_copy<int *,int *,std::allocator<int> >
	add	esp, 16					; 00000010H

; 1182 : 			++_Ncopied;

	mov	edx, DWORD PTR __Ncopied$214795[ebp]
	add	edx, 1
	mov	DWORD PTR __Ncopied$214795[ebp], edx

; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T227305[ebp], ecx
	mov	edx, DWORD PTR __Whereoff$214794[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Newvec$214793[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T227293[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T227298[ebp], dl
	mov	al, BYTE PTR __Cat$227301[ebp]
	mov	BYTE PTR $T227299[ebp], al
	mov	cl, BYTE PTR $T227298[ebp]
	mov	BYTE PTR $T227283[ebp], cl
	mov	edx, DWORD PTR $T227293[ebp]
	mov	DWORD PTR $T227282[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T227282[ebp]
	push	ecx
	mov	edx, DWORD PTR $T227305[ebp]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??$unchecked_uninitialized_copy@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z ; stdext::unchecked_uninitialized_copy<int *,int *,std::allocator<int> >
	add	esp, 16					; 00000010H
	jmp	$LN19@Insert_n
__catch$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)

	cmp	DWORD PTR __Ncopied$214795[ebp], 1
	jle	SHORT $LN7@Insert_n

; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);

	mov	ecx, DWORD PTR __Whereoff$214794[ebp]
	mov	edx, DWORD PTR __Newvec$214793[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR $T227325[ebp], eax
	mov	ecx, DWORD PTR __Newvec$214793[ebp]
	mov	DWORD PTR $T227324[ebp], ecx
	mov	dl, BYTE PTR __Cat$227332[ebp]
	mov	BYTE PTR $T227330[ebp], dl
$LN7@Insert_n:

; 1188 : 			if (0 < _Ncopied)

	cmp	DWORD PTR __Ncopied$214795[ebp], 0
	jle	SHORT $LN6@Insert_n

; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);

	mov	eax, DWORD PTR __Whereoff$214794[ebp]
	mov	ecx, DWORD PTR __Newvec$214793[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR __Count$[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR $T227355[ebp], ecx
	mov	edx, DWORD PTR __Whereoff$214794[ebp]
	mov	eax, DWORD PTR __Newvec$214793[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T227354[ebp], ecx
	mov	dl, BYTE PTR __Cat$227361[ebp]
	mov	BYTE PTR $T227358[ebp], dl
$LN6@Insert_n:

; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	mov	eax, DWORD PTR __Newvec$214793[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1192 : 			_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN103@Insert_n
	ret	0
$LN19@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 1193 : 
; 1194 : 			_Count += size();

$LN103@Insert_n:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Count$[ebp], eax

; 1195 : 			if (_Myfirst != 0)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN5@Insert_n

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T227403[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T227402[ebp], edx
	mov	eax, DWORD PTR $T227403[ebp]
	mov	DWORD PTR $T227391[ebp], eax
	mov	ecx, DWORD PTR $T227402[ebp]
	mov	DWORD PTR $T227390[ebp], ecx
	mov	dl, BYTE PTR __Cat$227397[ebp]
	mov	BYTE PTR $T227394[ebp], dl

; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	mov	DWORD PTR $T227408[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T227407[ebp], ecx
	mov	edx, DWORD PTR $T227407[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN5@Insert_n:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	eax, DWORD PTR __Capacity$[ebp]
	mov	ecx, DWORD PTR __Newvec$214793[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx

; 1206 : 			_Mylast = _Newvec + _Count;

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Newvec$214793[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 1207 : 			_Myfirst = _Newvec;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newvec$214793[ebp]
	mov	DWORD PTR [edx+4], eax
	jmp	$LN16@Insert_n
$LN10@Insert_n:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, DWORD PTR __Where$[ebp]
	sar	edx, 2
	cmp	edx, DWORD PTR __Count$[ebp]
	jae	$LN3@Insert_n

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$214808[ebp], ecx

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T227480[ebp], eax
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Where$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR $T227461[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T227464[ebp], cl
	mov	dl, BYTE PTR __Cat$227468[ebp]
	mov	BYTE PTR $T227465[ebp], dl
	mov	al, BYTE PTR $T227464[ebp]
	mov	BYTE PTR $T227444[ebp], al
	mov	ecx, DWORD PTR $T227461[ebp]
	mov	DWORD PTR $T227443[ebp], ecx
	mov	edx, DWORD PTR $T227443[ebp]
	mov	DWORD PTR $T227433[ebp], edx
	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T227432[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T227471[ebp], cl
	mov	dl, BYTE PTR __Cat$227475[ebp]
	mov	BYTE PTR $T227472[ebp], dl
	movzx	eax, BYTE PTR $T227471[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T227472[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR $T227433[ebp]
	push	eax
	mov	ecx, DWORD PTR $T227480[ebp]
	push	ecx
	mov	edx, DWORD PTR $T227432[ebp]
	push	edx
	call	??$_Uninit_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<int *,int *,std::allocator<int> >
	add	esp, 24					; 00000018H

; 1215 : 
; 1216 : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 2

; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	lea	eax, DWORD PTR __Tmp$214808[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, DWORD PTR __Where$[ebp]
	sar	edx, 2
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAHIABH@Z ; std::vector<int,std::allocator<int> >::_Ufill
	jmp	SHORT $LN21@Insert_n
__catch$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z$2:

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR $T227563[ebp], eax
	mov	ecx, DWORD PTR $T227563[ebp]
	mov	DWORD PTR $T227552[ebp], ecx
	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Where$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T227551[ebp], ecx
	mov	dl, BYTE PTR __Cat$227558[ebp]
	mov	BYTE PTR $T227556[ebp], dl

; 1221 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1222 : 			_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z$3
	ret	0
$LN21@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z$3:

; 1223 : 
; 1224 : 			_Mylast += _Count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	mov	edx, DWORD PTR __Count$[ebp]
	shl	edx, 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, edx
	mov	DWORD PTR $T227579[ebp], ecx
	mov	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T227571[ebp], edx
	jmp	SHORT $LN151@Insert_n
$LN150@Insert_n:
	mov	eax, DWORD PTR $T227571[ebp]
	add	eax, 4
	mov	DWORD PTR $T227571[ebp], eax
$LN151@Insert_n:
	mov	ecx, DWORD PTR $T227571[ebp]
	cmp	ecx, DWORD PTR $T227579[ebp]
	je	SHORT $LN147@Insert_n
	mov	edx, DWORD PTR $T227571[ebp]
	mov	eax, DWORD PTR __Tmp$214808[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN150@Insert_n
$LN147@Insert_n:

; 1232 : 			}
; 1233 : 		else

	jmp	$LN16@Insert_n
$LN3@Insert_n:

; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$214818[ebp], edx

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Oldend$214819[ebp], ecx

; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T227630[ebp], eax
	mov	ecx, DWORD PTR $T227630[ebp]
	mov	DWORD PTR $T227618[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T227621[ebp], dl
	mov	al, BYTE PTR __Cat$227625[ebp]
	mov	BYTE PTR $T227622[ebp], al
	mov	cl, BYTE PTR $T227621[ebp]
	mov	BYTE PTR $T227608[ebp], cl
	mov	edx, DWORD PTR $T227618[ebp]
	mov	DWORD PTR $T227607[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T227607[ebp]
	push	ecx
	mov	edx, DWORD PTR __Oldend$214819[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	mov	ecx, DWORD PTR __Oldend$214819[ebp]
	sub	ecx, eax
	push	ecx
	call	??$unchecked_uninitialized_copy@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z ; stdext::unchecked_uninitialized_copy<int *,int *,std::allocator<int> >
	add	esp, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	mov	eax, DWORD PTR __Oldend$214819[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	mov	edx, DWORD PTR __Oldend$214819[ebp]
	sub	edx, ecx
	push	edx
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??$_Unchecked_move_backward@PAHPAH@stdext@@YAPAHPAH00@Z ; stdext::_Unchecked_move_backward<int *,int *>
	add	esp, 12					; 0000000cH

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T227682[ebp], ecx
	jmp	SHORT $LN186@Insert_n
$LN185@Insert_n:
	mov	edx, DWORD PTR $T227682[ebp]
	add	edx, 4
	mov	DWORD PTR $T227682[ebp], edx
$LN186@Insert_n:
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	cmp	DWORD PTR $T227682[ebp], edx
	je	SHORT $LN16@Insert_n
	mov	eax, DWORD PTR $T227682[ebp]
	mov	ecx, DWORD PTR __Tmp$214818[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN185@Insert_n
$LN16@Insert_n:

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-436]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z ENDP ; std::vector<int,std::allocator<int> >::_Insert_n
; Function compile flags: /Odtp
;	COMDAT ?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAHIABH@Z
_TEXT	SEGMENT
_this$ = -44						; size = 4
$T227753 = -40						; size = 4
$T227743 = -33						; size = 1
$T227742 = -32						; size = 4
__Cat$227749 = -3					; size = 1
$T227747 = -2						; size = 1
$T227746 = -1						; size = 1
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAHIABH@Z PROC ; std::vector<int,std::allocator<int> >::_Ufill, COMDAT
; _this$ = ecx

; 1253 : 		{	// copy initializing _Count * _Val, using allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 1254 : 		_STDEXT unchecked_uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR $T227753[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T227746[ebp], cl
	mov	dl, BYTE PTR __Cat$227749[ebp]
	mov	BYTE PTR $T227747[ebp], dl
	mov	al, BYTE PTR $T227746[ebp]
	mov	BYTE PTR $T227743[ebp], al
	mov	ecx, DWORD PTR $T227753[ebp]
	mov	DWORD PTR $T227742[ebp], ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T227742[ebp]
	push	ecx
	call	??$unchecked_fill_n@PAHIH@stdext@@YAXPAHIABH@Z ; stdext::unchecked_fill_n<int *,unsigned int,int>
	add	esp, 12					; 0000000cH

; 1255 : 		return (_Ptr + _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	lea	eax, DWORD PTR [eax+edx*4]

; 1256 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAHIABH@Z ENDP ; std::vector<int,std::allocator<int> >::_Ufill
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Unchecked_move_backward@PAHPAH@stdext@@YAPAHPAH00@Z
_TEXT	SEGMENT
$T227798 = -38						; size = 1
$T227797 = -37						; size = 1
$T227796 = -36						; size = 4
$T227795 = -32						; size = 4
$T227782 = -25						; size = 1
$T227781 = -24						; size = 4
$T227780 = -20						; size = 4
__Off$227790 = -16					; size = 4
__Result$227791 = -12					; size = 4
__Cat$227787 = -8					; size = 1
$T227785 = -7						; size = 1
$T227784 = -6						; size = 1
__Cat$227762 = -4					; size = 1
$T227758 = -3						; size = 1
$T227757 = -2						; size = 1
$T227756 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAHPAH@stdext@@YAPAHPAH00@Z PROC ; stdext::_Unchecked_move_backward<int *,int *>, COMDAT

; 3694 : 	{	// move [_First, _Last) backwards to [..., _Dest)

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	xor	eax, eax
	mov	BYTE PTR $T227756[ebp], al
	mov	cl, BYTE PTR __Cat$227762[ebp]
	mov	BYTE PTR $T227757[ebp], cl
	mov	dl, BYTE PTR $T227756[ebp]
	mov	BYTE PTR $T227798[ebp], dl
	mov	al, BYTE PTR $T227758[ebp]
	mov	BYTE PTR $T227797[ebp], al
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T227796[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T227795[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T227784[ebp], al
	mov	cl, BYTE PTR __Cat$227787[ebp]
	mov	BYTE PTR $T227785[ebp], cl
	mov	dl, BYTE PTR $T227784[ebp]
	mov	BYTE PTR $T227782[ebp], dl
	mov	eax, DWORD PTR $T227796[ebp]
	mov	DWORD PTR $T227781[ebp], eax
	mov	ecx, DWORD PTR $T227795[ebp]
	mov	DWORD PTR $T227780[ebp], ecx
	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, DWORD PTR $T227780[ebp]
	sar	edx, 2
	mov	DWORD PTR __Off$227790[ebp], edx
	mov	eax, DWORD PTR __Off$227790[ebp]
	shl	eax, 2
	mov	ecx, DWORD PTR $T227781[ebp]
	sub	ecx, eax
	mov	DWORD PTR __Result$227791[ebp], ecx
	cmp	DWORD PTR __Off$227790[ebp], 0
	jle	SHORT $LN7@Unchecked_
	mov	edx, DWORD PTR __Off$227790[ebp]
	shl	edx, 2
	push	edx
	mov	eax, DWORD PTR $T227780[ebp]
	push	eax
	mov	ecx, DWORD PTR __Off$227790[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __Result$227791[ebp]
	push	edx
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN7@Unchecked_:
	mov	eax, DWORD PTR __Result$227791[ebp]

; 3697 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unchecked_move_backward@PAHPAH@stdext@@YAPAHPAH00@Z ENDP ; stdext::_Unchecked_move_backward<int *,int *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$unchecked_fill_n@PAHIH@stdext@@YAXPAHIABH@Z
_TEXT	SEGMENT
$T227828 = -22						; size = 1
$T227827 = -21						; size = 1
$T227826 = -20						; size = 4
$T227817 = -13						; size = 1
$T227816 = -12						; size = 4
$T227815 = -8						; size = 4
$T227820 = -4						; size = 1
$T227802 = -2						; size = 1
$T227801 = -1						; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
??$unchecked_fill_n@PAHIH@stdext@@YAXPAHIABH@Z PROC	; stdext::unchecked_fill_n<int *,unsigned int,int>, COMDAT

; 3720 : 	{	// copy _Val _Count times through [_First, ...)

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 3721 : 		_STD _Fill_n(_First, _Count, _Val, _STD _Iter_cat(_First), _STD _Range_checked_iterator_tag());

	xor	eax, eax
	mov	BYTE PTR $T227801[ebp], al
	mov	cl, BYTE PTR $T227801[ebp]
	mov	BYTE PTR $T227828[ebp], cl
	mov	dl, BYTE PTR $T227802[ebp]
	mov	BYTE PTR $T227827[ebp], dl
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T227826[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T227820[ebp], cl
	mov	dl, BYTE PTR $T227820[ebp]
	mov	BYTE PTR $T227817[ebp], dl
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR $T227816[ebp], eax
	mov	ecx, DWORD PTR $T227826[ebp]
	mov	DWORD PTR $T227815[ebp], ecx
	jmp	SHORT $LN9@unchecked_@2
$LN8@unchecked_@2:
	mov	edx, DWORD PTR $T227816[ebp]
	sub	edx, 1
	mov	DWORD PTR $T227816[ebp], edx
	mov	eax, DWORD PTR $T227815[ebp]
	add	eax, 4
	mov	DWORD PTR $T227815[ebp], eax
$LN9@unchecked_@2:
	cmp	DWORD PTR $T227816[ebp], 0
	jbe	SHORT $LN1@unchecked_@2
	mov	ecx, DWORD PTR $T227815[ebp]
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	jmp	SHORT $LN8@unchecked_@2
$LN1@unchecked_@2:

; 3722 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$unchecked_fill_n@PAHIH@stdext@@YAXPAHIABH@Z ENDP	; stdext::unchecked_fill_n<int *,unsigned int,int>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ??$unchecked_uninitialized_copy@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z
_TEXT	SEGMENT
$T227845 = -21						; size = 1
$T227844 = -20						; size = 4
$T227843 = -16						; size = 4
__Result$227841 = -12					; size = 4
__Count$227840 = -8					; size = 4
__Cat$227835 = -3					; size = 1
$T227832 = -2						; size = 1
$T227831 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z PROC ; stdext::unchecked_uninitialized_copy<int *,int *,std::allocator<int> >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	xor	eax, eax
	mov	BYTE PTR $T227831[ebp], al
	mov	cl, BYTE PTR __Cat$227835[ebp]
	mov	BYTE PTR $T227832[ebp], cl
	mov	dl, BYTE PTR $T227831[ebp]
	mov	BYTE PTR $T227845[ebp], dl
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T227844[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T227843[ebp], ecx
	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, DWORD PTR $T227843[ebp]
	sar	edx, 2
	mov	DWORD PTR __Count$227840[ebp], edx
	mov	eax, DWORD PTR __Count$227840[ebp]
	mov	ecx, DWORD PTR $T227844[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR __Result$227841[ebp], edx
	cmp	DWORD PTR __Count$227840[ebp], 0
	jbe	SHORT $LN6@unchecked_@3
	mov	eax, DWORD PTR __Count$227840[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR $T227843[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$227840[ebp]
	shl	edx, 2
	push	edx
	mov	eax, DWORD PTR $T227844[ebp]
	push	eax
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN6@unchecked_@3:
	mov	eax, DWORD PTR __Result$227841[ebp]

; 823  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$unchecked_uninitialized_copy@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z ENDP ; stdext::unchecked_uninitialized_copy<int *,int *,std::allocator<int> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<int *,int *,std::allocator<int> >, COMDAT

; 145  : 	{	// copy [_First, _Last) to raw _Dest, scalar type

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 146  : 	_DEBUG_RANGE(_First, _Last);
; 147  : 	_DEBUG_POINTER(_Dest);
; 148  : 	size_t _Count = (size_t)(_Last - _First);

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax

; 149  : 	_FwdIt _Result = _Dest + _Count;

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Dest$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR __Result$[ebp], eax

; 150  : 	if (_Count > 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@Uninit_cop

; 151  : 		_CRT_SECURE_MEMMOVE(&*_Dest, _Count * sizeof (*_First), &*_First, _Count * sizeof (*_First));	// NB: non-overlapping move

	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN1@Uninit_cop:

; 152  : 	return (_Result);

	mov	eax, DWORD PTR __Result$[ebp]

; 153  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<int *,int *,std::allocator<int> >
_TEXT	ENDS
END
