; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\Lua\CvLuaTeamTech.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@KAXPAUlua_State@@@Z ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::DefaultHandleMissingInstance
PUBLIC	?HandleMissingInstance@CvLuaTeamTech@@SAXPAUlua_State@@@Z ; CvLuaTeamTech::HandleMissingInstance
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluateamtech.cpp
;	COMDAT ?HandleMissingInstance@CvLuaTeamTech@@SAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?HandleMissingInstance@CvLuaTeamTech@@SAXPAUlua_State@@@Z PROC ; CvLuaTeamTech::HandleMissingInstance, COMDAT

; 26   : {

	push	ebp
	mov	ebp, esp

; 27   : 	DefaultHandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@KAXPAUlua_State@@@Z ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::DefaultHandleMissingInstance
	add	esp, 4

; 28   : }

	pop	ebp
	ret	0
?HandleMissingInstance@CvLuaTeamTech@@SAXPAUlua_State@@@Z ENDP ; CvLuaTeamTech::HandleMissingInstance
_TEXT	ENDS
PUBLIC	??_C@_0BA@KGPGHOKL@GetResearchLeft?$AA@		; `string'
PUBLIC	?lGetResearchLeft@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetResearchLeft
PUBLIC	??_C@_0BA@FBPGGIIF@GetResearchCost?$AA@		; `string'
PUBLIC	?lGetResearchCost@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetResearchCost
PUBLIC	??_C@_0BO@EMKIDKDB@ChangeResearchProgressPercent?$AA@ ; `string'
PUBLIC	?lChangeResearchProgressPercent@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lChangeResearchProgressPercent
PUBLIC	??_C@_0BP@MIAFINEA@ChangeResearchProgressTimes100?$AA@ ; `string'
PUBLIC	?lChangeResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lChangeResearchProgressTimes100
PUBLIC	??_C@_0BH@BGHHNNCL@ChangeResearchProgress?$AA@	; `string'
PUBLIC	?lChangeResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lChangeResearchProgress
PUBLIC	??_C@_0BM@JFIHEBGE@GetResearchProgressTimes100?$AA@ ; `string'
PUBLIC	?lGetResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetResearchProgressTimes100
PUBLIC	??_C@_0BE@EIEJGPKL@GetResearchProgress?$AA@	; `string'
PUBLIC	?lGetResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetResearchProgress
PUBLIC	??_C@_0BM@IIAPGEMA@SetResearchProgressTimes100?$AA@ ; `string'
PUBLIC	?lSetResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lSetResearchProgressTimes100
PUBLIC	??_C@_0BE@OGGCCPNH@SetResearchProgress?$AA@	; `string'
PUBLIC	?lSetResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lSetResearchProgress
PUBLIC	??_C@_0N@EJBMMBMM@GetTechCount?$AA@		; `string'
PUBLIC	?lGetTechCount@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetTechCount
PUBLIC	??_C@_0BD@GBFKCBFH@IncrementTechCount?$AA@	; `string'
PUBLIC	?lIncrementTechCount@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lIncrementTechCount
PUBLIC	??_C@_0O@KPBOPJGE@IsNoTradeTech?$AA@		; `string'
PUBLIC	?lIsNoTradeTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lIsNoTradeTech
PUBLIC	??_C@_0P@KMHAOCKC@SetNoTradeTech?$AA@		; `string'
PUBLIC	?lSetNoTradeTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lSetNoTradeTech
PUBLIC	??_C@_0BE@OGOFHEPH@GetLastTechAcquired?$AA@	; `string'
PUBLIC	?lGetLastTechAcquired@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetLastTechAcquired
PUBLIC	??_C@_0BG@NOKFAONH@HasResearchedAllTechs?$AA@	; `string'
PUBLIC	?lHasResearchedAllTechs@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lHasResearchedAllTechs
PUBLIC	??_C@_0BB@NBCJLJMC@GetNumTechsKnown?$AA@	; `string'
PUBLIC	?lGetNumTechsKnown@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetNumTechsKnown
PUBLIC	??_C@_07OGAMDLBM@HasTech?$AA@			; `string'
PUBLIC	?lHasTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z	; CvLuaTeamTech::lHasTech
PUBLIC	??_C@_0L@JDHELDFB@SetHasTech?$AA@		; `string'
PUBLIC	?lSetHasTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z	; CvLuaTeamTech::lSetHasTech
PUBLIC	?PushMethods@CvLuaTeamTech@@SAXPAUlua_State@@H@Z ; CvLuaTeamTech::PushMethods
EXTRN	_lua_setfield:PROC
EXTRN	_lua_pushcclosure:PROC
;	COMDAT ??_C@_0BA@KGPGHOKL@GetResearchLeft?$AA@
CONST	SEGMENT
??_C@_0BA@KGPGHOKL@GetResearchLeft?$AA@ DB 'GetResearchLeft', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FBPGGIIF@GetResearchCost?$AA@
CONST	SEGMENT
??_C@_0BA@FBPGGIIF@GetResearchCost?$AA@ DB 'GetResearchCost', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@EMKIDKDB@ChangeResearchProgressPercent?$AA@
CONST	SEGMENT
??_C@_0BO@EMKIDKDB@ChangeResearchProgressPercent?$AA@ DB 'ChangeResearchP'
	DB	'rogressPercent', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@MIAFINEA@ChangeResearchProgressTimes100?$AA@
CONST	SEGMENT
??_C@_0BP@MIAFINEA@ChangeResearchProgressTimes100?$AA@ DB 'ChangeResearch'
	DB	'ProgressTimes100', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BGHHNNCL@ChangeResearchProgress?$AA@
CONST	SEGMENT
??_C@_0BH@BGHHNNCL@ChangeResearchProgress?$AA@ DB 'ChangeResearchProgress'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JFIHEBGE@GetResearchProgressTimes100?$AA@
CONST	SEGMENT
??_C@_0BM@JFIHEBGE@GetResearchProgressTimes100?$AA@ DB 'GetResearchProgre'
	DB	'ssTimes100', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EIEJGPKL@GetResearchProgress?$AA@
CONST	SEGMENT
??_C@_0BE@EIEJGPKL@GetResearchProgress?$AA@ DB 'GetResearchProgress', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IIAPGEMA@SetResearchProgressTimes100?$AA@
CONST	SEGMENT
??_C@_0BM@IIAPGEMA@SetResearchProgressTimes100?$AA@ DB 'SetResearchProgre'
	DB	'ssTimes100', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OGGCCPNH@SetResearchProgress?$AA@
CONST	SEGMENT
??_C@_0BE@OGGCCPNH@SetResearchProgress?$AA@ DB 'SetResearchProgress', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EJBMMBMM@GetTechCount?$AA@
CONST	SEGMENT
??_C@_0N@EJBMMBMM@GetTechCount?$AA@ DB 'GetTechCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GBFKCBFH@IncrementTechCount?$AA@
CONST	SEGMENT
??_C@_0BD@GBFKCBFH@IncrementTechCount?$AA@ DB 'IncrementTechCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KPBOPJGE@IsNoTradeTech?$AA@
CONST	SEGMENT
??_C@_0O@KPBOPJGE@IsNoTradeTech?$AA@ DB 'IsNoTradeTech', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KMHAOCKC@SetNoTradeTech?$AA@
CONST	SEGMENT
??_C@_0P@KMHAOCKC@SetNoTradeTech?$AA@ DB 'SetNoTradeTech', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OGOFHEPH@GetLastTechAcquired?$AA@
CONST	SEGMENT
??_C@_0BE@OGOFHEPH@GetLastTechAcquired?$AA@ DB 'GetLastTechAcquired', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NOKFAONH@HasResearchedAllTechs?$AA@
CONST	SEGMENT
??_C@_0BG@NOKFAONH@HasResearchedAllTechs?$AA@ DB 'HasResearchedAllTechs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NBCJLJMC@GetNumTechsKnown?$AA@
CONST	SEGMENT
??_C@_0BB@NBCJLJMC@GetNumTechsKnown?$AA@ DB 'GetNumTechsKnown', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07OGAMDLBM@HasTech?$AA@
CONST	SEGMENT
??_C@_07OGAMDLBM@HasTech?$AA@ DB 'HasTech', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JDHELDFB@SetHasTech?$AA@
CONST	SEGMENT
??_C@_0L@JDHELDFB@SetHasTech?$AA@ DB 'SetHasTech', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?PushMethods@CvLuaTeamTech@@SAXPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
?PushMethods@CvLuaTeamTech@@SAXPAUlua_State@@H@Z PROC	; CvLuaTeamTech::PushMethods, COMDAT

; 31   : {

	push	ebp
	mov	ebp, esp

; 32   : 	Method(SetHasTech);

	push	0
	push	OFFSET ?lSetHasTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lSetHasTech
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@JDHELDFB@SetHasTech?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 33   : 	Method(HasTech);

	push	0
	push	OFFSET ?lHasTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lHasTech
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07OGAMDLBM@HasTech?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 34   : 
; 35   : 	Method(GetNumTechsKnown);

	push	0
	push	OFFSET ?lGetNumTechsKnown@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetNumTechsKnown
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@NBCJLJMC@GetNumTechsKnown?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 36   : 	Method(HasResearchedAllTechs);

	push	0
	push	OFFSET ?lHasResearchedAllTechs@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lHasResearchedAllTechs
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@NOKFAONH@HasResearchedAllTechs?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 37   : 
; 38   : 	Method(GetLastTechAcquired);

	push	0
	push	OFFSET ?lGetLastTechAcquired@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetLastTechAcquired
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@OGOFHEPH@GetLastTechAcquired?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 39   : 
; 40   : 	Method(SetNoTradeTech);

	push	0
	push	OFFSET ?lSetNoTradeTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lSetNoTradeTech
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@KMHAOCKC@SetNoTradeTech?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 41   : 	Method(IsNoTradeTech);

	push	0
	push	OFFSET ?lIsNoTradeTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lIsNoTradeTech
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@KPBOPJGE@IsNoTradeTech?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 42   : 	Method(IncrementTechCount);

	push	0
	push	OFFSET ?lIncrementTechCount@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lIncrementTechCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@GBFKCBFH@IncrementTechCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 43   : 	Method(GetTechCount);

	push	0
	push	OFFSET ?lGetTechCount@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetTechCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@EJBMMBMM@GetTechCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 44   : 	Method(SetResearchProgress);

	push	0
	push	OFFSET ?lSetResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lSetResearchProgress
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@OGGCCPNH@SetResearchProgress?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 45   : 	Method(SetResearchProgressTimes100);

	push	0
	push	OFFSET ?lSetResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lSetResearchProgressTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@IIAPGEMA@SetResearchProgressTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 46   : 	Method(GetResearchProgress);

	push	0
	push	OFFSET ?lGetResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetResearchProgress
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@EIEJGPKL@GetResearchProgress?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 47   : 	Method(GetResearchProgressTimes100);

	push	0
	push	OFFSET ?lGetResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetResearchProgressTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@JFIHEBGE@GetResearchProgressTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 48   : 	Method(ChangeResearchProgress);

	push	0
	push	OFFSET ?lChangeResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lChangeResearchProgress
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@BGHHNNCL@ChangeResearchProgress?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 49   : 	Method(ChangeResearchProgressTimes100);

	push	0
	push	OFFSET ?lChangeResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lChangeResearchProgressTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@MIAFINEA@ChangeResearchProgressTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 50   : 	Method(ChangeResearchProgressPercent);

	push	0
	push	OFFSET ?lChangeResearchProgressPercent@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lChangeResearchProgressPercent
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@EMKIDKDB@ChangeResearchProgressPercent?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 51   : 	Method(GetResearchCost);

	push	0
	push	OFFSET ?lGetResearchCost@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetResearchCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@FBPGGIIF@GetResearchCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 52   : 	Method(GetResearchLeft);

	push	0
	push	OFFSET ?lGetResearchLeft@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetResearchLeft
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@KGPGHOKL@GetResearchLeft?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 53   : }

	pop	ebp
	ret	0
?PushMethods@CvLuaTeamTech@@SAXPAUlua_State@@H@Z ENDP	; CvLuaTeamTech::PushMethods
_TEXT	ENDS
PUBLIC	??_C@_08BBDGPEMN@TeamTech?$AA@			; `string'
PUBLIC	?GetTypeName@CvLuaTeamTech@@SAPBDXZ		; CvLuaTeamTech::GetTypeName
;	COMDAT ??_C@_08BBDGPEMN@TeamTech?$AA@
CONST	SEGMENT
??_C@_08BBDGPEMN@TeamTech?$AA@ DB 'TeamTech', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?GetTypeName@CvLuaTeamTech@@SAPBDXZ
_TEXT	SEGMENT
?GetTypeName@CvLuaTeamTech@@SAPBDXZ PROC		; CvLuaTeamTech::GetTypeName, COMDAT

; 56   : {

	push	ebp
	mov	ebp, esp

; 57   : 	return "TeamTech";

	mov	eax, OFFSET ??_C@_08BBDGPEMN@TeamTech?$AA@

; 58   : }

	pop	ebp
	ret	0
?GetTypeName@CvLuaTeamTech@@SAPBDXZ ENDP		; CvLuaTeamTech::GetTypeName
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,bool>
EXTRN	?SetHasTech@CvTeamTechs@@QAEXW4TechTypes@@_N@Z:PROC ; CvTeamTechs::SetHasTech
; Function compile flags: /Odtp
;	COMDAT ?lSetHasTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetHasTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC	; CvLuaTeamTech::lSetHasTech, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp

; 70   : 	return BasicLuaMethod(L, &CvTeamTechs::SetHasTech);

	push	OFFSET ?SetHasTech@CvTeamTechs@@QAEXW4TechTypes@@_N@Z ; CvTeamTechs::SetHasTech
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,bool>
	add	esp, 8

; 71   : }

	pop	ebp
	ret	0
?lSetHasTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeamTech::lSetHasTech
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE_NW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<bool,enum TechTypes>
EXTRN	?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z:PROC	; CvTeamTechs::HasTech
; Function compile flags: /Odtp
;	COMDAT ?lHasTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC	; CvLuaTeamTech::lHasTech, COMDAT

; 76   : {

	push	ebp
	mov	ebp, esp

; 77   : 	return BasicLuaMethod(L, &CvTeamTechs::HasTech);

	push	OFFSET ?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z ; CvTeamTechs::HasTech
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE_NW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<bool,enum TechTypes>
	add	esp, 8

; 78   : }

	pop	ebp
	ret	0
?lHasTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeamTech::lHasTech
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int>
EXTRN	?GetNumTechsKnown@CvTeamTechs@@QBEHXZ:PROC	; CvTeamTechs::GetNumTechsKnown
; Function compile flags: /Odtp
;	COMDAT ?lGetNumTechsKnown@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumTechsKnown@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lGetNumTechsKnown, COMDAT

; 83   : {

	push	ebp
	mov	ebp, esp

; 84   : 	return BasicLuaMethod(L, &CvTeamTechs::GetNumTechsKnown);

	push	OFFSET ?GetNumTechsKnown@CvTeamTechs@@QBEHXZ ; CvTeamTechs::GetNumTechsKnown
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int>
	add	esp, 8

; 85   : }

	pop	ebp
	ret	0
?lGetNumTechsKnown@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lGetNumTechsKnown
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<bool>
EXTRN	?HasResearchedAllTechs@CvTeamTechs@@QBE_NXZ:PROC ; CvTeamTechs::HasResearchedAllTechs
; Function compile flags: /Odtp
;	COMDAT ?lHasResearchedAllTechs@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasResearchedAllTechs@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lHasResearchedAllTechs, COMDAT

; 90   : {

	push	ebp
	mov	ebp, esp

; 91   : 	return BasicLuaMethod(L, &CvTeamTechs::HasResearchedAllTechs);

	push	OFFSET ?HasResearchedAllTechs@CvTeamTechs@@QBE_NXZ ; CvTeamTechs::HasResearchedAllTechs
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<bool>
	add	esp, 8

; 92   : }

	pop	ebp
	ret	0
?lHasResearchedAllTechs@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lHasResearchedAllTechs
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE?AW4TechTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes>
EXTRN	?GetLastTechAcquired@CvTeamTechs@@QBE?AW4TechTypes@@XZ:PROC ; CvTeamTechs::GetLastTechAcquired
; Function compile flags: /Odtp
;	COMDAT ?lGetLastTechAcquired@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLastTechAcquired@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lGetLastTechAcquired, COMDAT

; 97   : {

	push	ebp
	mov	ebp, esp

; 98   : 	return BasicLuaMethod(L, &CvTeamTechs::GetLastTechAcquired);

	push	OFFSET ?GetLastTechAcquired@CvTeamTechs@@QBE?AW4TechTypes@@XZ ; CvTeamTechs::GetLastTechAcquired
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE?AW4TechTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes>
	add	esp, 8

; 99   : }

	pop	ebp
	ret	0
?lGetLastTechAcquired@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lGetLastTechAcquired
_TEXT	ENDS
EXTRN	?SetNoTradeTech@CvTeamTechs@@QAEXW4TechTypes@@_N@Z:PROC ; CvTeamTechs::SetNoTradeTech
; Function compile flags: /Odtp
;	COMDAT ?lSetNoTradeTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetNoTradeTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lSetNoTradeTech, COMDAT

; 104  : {

	push	ebp
	mov	ebp, esp

; 105  : 	return BasicLuaMethod(L, &CvTeamTechs::SetNoTradeTech);

	push	OFFSET ?SetNoTradeTech@CvTeamTechs@@QAEXW4TechTypes@@_N@Z ; CvTeamTechs::SetNoTradeTech
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,bool>
	add	esp, 8

; 106  : }

	pop	ebp
	ret	0
?lSetNoTradeTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lSetNoTradeTech
_TEXT	ENDS
EXTRN	?IsNoTradeTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z:PROC ; CvTeamTechs::IsNoTradeTech
; Function compile flags: /Odtp
;	COMDAT ?lIsNoTradeTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsNoTradeTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC	; CvLuaTeamTech::lIsNoTradeTech, COMDAT

; 111  : {

	push	ebp
	mov	ebp, esp

; 112  : 	return BasicLuaMethod(L, &CvTeamTechs::IsNoTradeTech);

	push	OFFSET ?IsNoTradeTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z ; CvTeamTechs::IsNoTradeTech
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE_NW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<bool,enum TechTypes>
	add	esp, 8

; 113  : }

	pop	ebp
	ret	0
?lIsNoTradeTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeamTech::lIsNoTradeTech
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes>
EXTRN	?IncrementTechCount@CvTeamTechs@@QAEXW4TechTypes@@@Z:PROC ; CvTeamTechs::IncrementTechCount
; Function compile flags: /Odtp
;	COMDAT ?lIncrementTechCount@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIncrementTechCount@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lIncrementTechCount, COMDAT

; 118  : {

	push	ebp
	mov	ebp, esp

; 119  : 	return BasicLuaMethod(L, &CvTeamTechs::IncrementTechCount);

	push	OFFSET ?IncrementTechCount@CvTeamTechs@@QAEXW4TechTypes@@@Z ; CvTeamTechs::IncrementTechCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes>
	add	esp, 8

; 120  : }

	pop	ebp
	ret	0
?lIncrementTechCount@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lIncrementTechCount
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes>
EXTRN	?GetTechCount@CvTeamTechs@@QBEHW4TechTypes@@@Z:PROC ; CvTeamTechs::GetTechCount
; Function compile flags: /Odtp
;	COMDAT ?lGetTechCount@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTechCount@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC	; CvLuaTeamTech::lGetTechCount, COMDAT

; 125  : {

	push	ebp
	mov	ebp, esp

; 126  : 	return BasicLuaMethod(L, &CvTeamTechs::GetTechCount);

	push	OFFSET ?GetTechCount@CvTeamTechs@@QBEHW4TechTypes@@@Z ; CvTeamTechs::GetTechCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes>
	add	esp, 8

; 127  : }

	pop	ebp
	ret	0
?lGetTechCount@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeamTech::lGetTechCount
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@HW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,int,enum PlayerTypes>
EXTRN	?SetResearchProgress@CvTeamTechs@@QAEXW4TechTypes@@HW4PlayerTypes@@@Z:PROC ; CvTeamTechs::SetResearchProgress
; Function compile flags: /Odtp
;	COMDAT ?lSetResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lSetResearchProgress, COMDAT

; 132  : {

	push	ebp
	mov	ebp, esp

; 133  : 	return BasicLuaMethod(L, &CvTeamTechs::SetResearchProgress);

	push	OFFSET ?SetResearchProgress@CvTeamTechs@@QAEXW4TechTypes@@HW4PlayerTypes@@@Z ; CvTeamTechs::SetResearchProgress
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@HW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,int,enum PlayerTypes>
	add	esp, 8

; 134  : }

	pop	ebp
	ret	0
?lSetResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lSetResearchProgress
_TEXT	ENDS
EXTRN	?SetResearchProgressTimes100@CvTeamTechs@@QAEXW4TechTypes@@HW4PlayerTypes@@@Z:PROC ; CvTeamTechs::SetResearchProgressTimes100
; Function compile flags: /Odtp
;	COMDAT ?lSetResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lSetResearchProgressTimes100, COMDAT

; 139  : {

	push	ebp
	mov	ebp, esp

; 140  : 	return BasicLuaMethod(L, &CvTeamTechs::SetResearchProgressTimes100);

	push	OFFSET ?SetResearchProgressTimes100@CvTeamTechs@@QAEXW4TechTypes@@HW4PlayerTypes@@@Z ; CvTeamTechs::SetResearchProgressTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@HW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,int,enum PlayerTypes>
	add	esp, 8

; 141  : }

	pop	ebp
	ret	0
?lSetResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lSetResearchProgressTimes100
_TEXT	ENDS
EXTRN	?GetResearchProgress@CvTeamTechs@@QBEHW4TechTypes@@@Z:PROC ; CvTeamTechs::GetResearchProgress
; Function compile flags: /Odtp
;	COMDAT ?lGetResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lGetResearchProgress, COMDAT

; 146  : {

	push	ebp
	mov	ebp, esp

; 147  : 	return BasicLuaMethod(L, &CvTeamTechs::GetResearchProgress);

	push	OFFSET ?GetResearchProgress@CvTeamTechs@@QBEHW4TechTypes@@@Z ; CvTeamTechs::GetResearchProgress
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes>
	add	esp, 8

; 148  : }

	pop	ebp
	ret	0
?lGetResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lGetResearchProgress
_TEXT	ENDS
EXTRN	?GetResearchProgressTimes100@CvTeamTechs@@QBEHW4TechTypes@@@Z:PROC ; CvTeamTechs::GetResearchProgressTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lGetResearchProgressTimes100, COMDAT

; 153  : {

	push	ebp
	mov	ebp, esp

; 154  : 	return BasicLuaMethod(L, &CvTeamTechs::GetResearchProgressTimes100);

	push	OFFSET ?GetResearchProgressTimes100@CvTeamTechs@@QBEHW4TechTypes@@@Z ; CvTeamTechs::GetResearchProgressTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes>
	add	esp, 8

; 155  : }

	pop	ebp
	ret	0
?lGetResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lGetResearchProgressTimes100
_TEXT	ENDS
EXTRN	?ChangeResearchProgress@CvTeamTechs@@QAEXW4TechTypes@@HW4PlayerTypes@@@Z:PROC ; CvTeamTechs::ChangeResearchProgress
; Function compile flags: /Odtp
;	COMDAT ?lChangeResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lChangeResearchProgress, COMDAT

; 160  : {

	push	ebp
	mov	ebp, esp

; 161  : 	return BasicLuaMethod(L, &CvTeamTechs::ChangeResearchProgress);

	push	OFFSET ?ChangeResearchProgress@CvTeamTechs@@QAEXW4TechTypes@@HW4PlayerTypes@@@Z ; CvTeamTechs::ChangeResearchProgress
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@HW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,int,enum PlayerTypes>
	add	esp, 8

; 162  : }

	pop	ebp
	ret	0
?lChangeResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lChangeResearchProgress
_TEXT	ENDS
EXTRN	?ChangeResearchProgressTimes100@CvTeamTechs@@QAEXW4TechTypes@@HW4PlayerTypes@@@Z:PROC ; CvTeamTechs::ChangeResearchProgressTimes100
; Function compile flags: /Odtp
;	COMDAT ?lChangeResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lChangeResearchProgressTimes100, COMDAT

; 167  : {

	push	ebp
	mov	ebp, esp

; 168  : 	return BasicLuaMethod(L, &CvTeamTechs::ChangeResearchProgressTimes100);

	push	OFFSET ?ChangeResearchProgressTimes100@CvTeamTechs@@QAEXW4TechTypes@@HW4PlayerTypes@@@Z ; CvTeamTechs::ChangeResearchProgressTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@HW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,int,enum PlayerTypes>
	add	esp, 8

; 169  : }

	pop	ebp
	ret	0
?lChangeResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lChangeResearchProgressTimes100
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEHW4TechTypes@@HW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes,int,enum PlayerTypes>
EXTRN	?ChangeResearchProgressPercent@CvTeamTechs@@QAEHW4TechTypes@@HW4PlayerTypes@@@Z:PROC ; CvTeamTechs::ChangeResearchProgressPercent
; Function compile flags: /Odtp
;	COMDAT ?lChangeResearchProgressPercent@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeResearchProgressPercent@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lChangeResearchProgressPercent, COMDAT

; 174  : {

	push	ebp
	mov	ebp, esp

; 175  : 	return BasicLuaMethod(L, &CvTeamTechs::ChangeResearchProgressPercent);

	push	OFFSET ?ChangeResearchProgressPercent@CvTeamTechs@@QAEHW4TechTypes@@HW4PlayerTypes@@@Z ; CvTeamTechs::ChangeResearchProgressPercent
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEHW4TechTypes@@HW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes,int,enum PlayerTypes>
	add	esp, 8

; 176  : }

	pop	ebp
	ret	0
?lChangeResearchProgressPercent@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lChangeResearchProgressPercent
_TEXT	ENDS
EXTRN	?GetResearchCost@CvTeamTechs@@QBEHW4TechTypes@@@Z:PROC ; CvTeamTechs::GetResearchCost
; Function compile flags: /Odtp
;	COMDAT ?lGetResearchCost@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResearchCost@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lGetResearchCost, COMDAT

; 181  : {

	push	ebp
	mov	ebp, esp

; 182  : 	return BasicLuaMethod(L, &CvTeamTechs::GetResearchCost);

	push	OFFSET ?GetResearchCost@CvTeamTechs@@QBEHW4TechTypes@@@Z ; CvTeamTechs::GetResearchCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes>
	add	esp, 8

; 183  : }

	pop	ebp
	ret	0
?lGetResearchCost@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lGetResearchCost
_TEXT	ENDS
EXTRN	?GetResearchLeft@CvTeamTechs@@QBEHW4TechTypes@@@Z:PROC ; CvTeamTechs::GetResearchLeft
; Function compile flags: /Odtp
;	COMDAT ?lGetResearchLeft@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResearchLeft@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lGetResearchLeft, COMDAT

; 188  : {

	push	ebp
	mov	ebp, esp

; 189  : 	return BasicLuaMethod(L, &CvTeamTechs::GetResearchLeft);

	push	OFFSET ?GetResearchLeft@CvTeamTechs@@QBEHW4TechTypes@@@Z ; CvTeamTechs::GetResearchLeft
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes>
	add	esp, 8

; 190  : }

	pop	ebp
	ret	0
?lGetResearchLeft@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lGetResearchLeft
_TEXT	ENDS
PUBLIC	??_C@_0BJ@GHLHFGFM@Instance?5does?5not?5exist?4?$AA@ ; `string'
EXTRN	_luaL_error:PROC
;	COMDAT ??_C@_0BJ@GHLHFGFM@Instance?5does?5not?5exist?4?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
CONST	SEGMENT
??_C@_0BJ@GHLHFGFM@Instance?5does?5not?5exist?4?$AA@ DB 'Instance does no'
	DB	't exist.', 00H				; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@KAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@KAXPAUlua_State@@@Z PROC ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::DefaultHandleMissingInstance, COMDAT

; 164  : {

	push	ebp
	mov	ebp, esp

; 165  : 	luaL_error(L, "Instance does not exist.");

	push	OFFSET ??_C@_0BJ@GHLHFGFM@Instance?5does?5not?5exist?4?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_error
	add	esp, 8

; 166  : }

	pop	ebp
	ret	0
?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@KAXPAUlua_State@@@Z ENDP ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::DefaultHandleMissingInstance
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAPAVCvTeamTechs@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetInstance
PUBLIC	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetStartingArgIndex
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
;	COMDAT ??$BasicLuaMethod@W4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,bool>, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 240  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAPAVCvTeamTechs@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TechTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 243  : 	return 0;

	xor	eax, eax

; 244  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,bool>
_TEXT	ENDS
EXTRN	_lua_toboolean:PROC
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
;	COMDAT ??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z PROC	; CvLuaArgs::toValue<bool>, COMDAT

; 23   : 	{

	push	ebp
	mov	ebp, esp

; 24   : 		return lua_toboolean(L, idx) != 0;

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	neg	eax
	sbb	eax, eax
	neg	eax

; 25   : 	}

	pop	ebp
	ret	0
??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ENDP	; CvLuaArgs::toValue<bool>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE_NW4TechTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE_NW4TechTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<bool,enum TechTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAPAVCvTeamTechs@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TechTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE_NW4TechTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<bool,enum TechTypes>
_TEXT	ENDS
EXTRN	_lua_pushboolean:PROC
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
;	COMDAT ??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 1
??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z PROC	; CvLuaArgs::pushValue<bool>, COMDAT

; 44   : 	{

	push	ebp
	mov	ebp, esp

; 45   : 		lua_pushboolean(L, t);

	movzx	eax, BYTE PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 46   : 	}

	pop	ebp
	ret	0
??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ENDP	; CvLuaArgs::pushValue<bool>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHXZ@Z PROC ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAPAVCvTeamTechs@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int>
_TEXT	ENDS
EXTRN	_lua_pushinteger:PROC
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
;	COMDAT ??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z PROC	; CvLuaArgs::pushValue<int>, COMDAT

; 38   : 	{

	push	ebp
	mov	ebp, esp

; 39   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 40   : 	}

	pop	ebp
	ret	0
??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ENDP	; CvLuaArgs::pushValue<int>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE_NXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE_NXZ@Z PROC ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<bool>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAPAVCvTeamTechs@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE_NXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE?AW4TechTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE?AW4TechTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAPAVCvTeamTechs@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4TechTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TechTypes@@@Z ; CvLuaArgs::pushValue<enum TechTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE?AW4TechTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAPAVCvTeamTechs@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TechTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHW4TechTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHW4TechTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAPAVCvTeamTechs@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TechTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHW4TechTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@HW4PlayerTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@HW4PlayerTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,int,enum PlayerTypes>, COMDAT

; 249  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 250  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 251  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAPAVCvTeamTechs@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 252  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _idx$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TechTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 253  : 	return 0;

	xor	eax, eax

; 254  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@HW4PlayerTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,int,enum PlayerTypes>
_TEXT	ENDS
EXTRN	_lua_tointeger:PROC
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
;	COMDAT ??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z PROC	; CvLuaArgs::toValue<int>, COMDAT

; 18   : 	{

	push	ebp
	mov	ebp, esp

; 19   : 		return lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 20   : 	}

	pop	ebp
	ret	0
??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ENDP	; CvLuaArgs::toValue<int>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEHW4TechTypes@@HW4PlayerTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEHW4TechTypes@@HW4PlayerTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes,int,enum PlayerTypes>, COMDAT

; 150  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 151  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 152  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAPAVCvTeamTechs@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 153  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _idx$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TechTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 154  : 
; 155  : 	return 1;

	mov	eax, 1

; 156  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEHW4TechTypes@@HW4PlayerTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes,int,enum PlayerTypes>
_TEXT	ENDS
PUBLIC	??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@ ; `string'
PUBLIC	??_C@_0L@GCADIOHF@__instance?$AA@		; `string'
EXTRN	_lua_settop:PROC
EXTRN	_lua_touserdata:PROC
EXTRN	_lua_getfield:PROC
EXTRN	_lua_type:PROC
EXTRN	_lua_gettop:PROC
;	COMDAT ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
CONST	SEGMENT
??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@ DB 'Not a val'
	DB	'id instance.  Either the instance is NULL or you used ''.'' i'
	DB	'nstead of '':''.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GCADIOHF@__instance?$AA@
CONST	SEGMENT
??_C@_0L@GCADIOHF@__instance?$AA@ DB '__instance', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAPAVCvTeamTechs@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_stack_size$ = -12					; size = 4
_pkInstance$ = -8					; size = 4
_bFail$ = -1						; size = 1
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAPAVCvTeamTechs@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetInstance, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 128  : 	const int stack_size = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _stack_size$[ebp], eax

; 129  : 	bool bFail = true;

	mov	BYTE PTR _bFail$[ebp], 1

; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;

	mov	DWORD PTR _pkInstance$[ebp], 0

; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 5
	jne	SHORT $LN5@GetInstanc

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN5@GetInstanc

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$[ebp], eax

; 138  : 			if(pkInstance)

	cmp	DWORD PTR _pkInstance$[ebp], 0
	je	SHORT $LN5@GetInstanc

; 139  : 			{
; 140  : 				bFail = false;

	mov	BYTE PTR _bFail$[ebp], 0
$LN5@GetInstanc:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	mov	ecx, DWORD PTR _stack_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	movzx	eax, BYTE PTR _bFail$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetInstanc
	movzx	ecx, BYTE PTR _bErrorOnFail$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@GetInstanc

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[ebp], 1
	jne	SHORT $LN1@GetInstanc

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc:

; 151  : 		Derived::HandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?HandleMissingInstance@CvLuaTeamTech@@SAXPAUlua_State@@@Z ; CvLuaTeamTech::HandleMissingInstance
	add	esp, 4
$LN2@GetInstanc:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, DWORD PTR _pkInstance$[ebp]

; 154  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAPAVCvTeamTechs@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetInstance
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SA?BHXZ
_TEXT	SEGMENT
?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SA?BHXZ PROC ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetStartingArgIndex, COMDAT

; 158  : {

	push	ebp
	mov	ebp, esp

; 159  : 	return 2;

	mov	eax, 2

; 160  : }

	pop	ebp
	ret	0
?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SA?BHXZ ENDP ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetStartingArgIndex
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum TechTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum TechTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4TechTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TechTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4TechTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TechTypes@@@Z PROC ; CvLuaArgs::pushValue<enum TechTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4TechTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TechTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum TechTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum PlayerTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum PlayerTypes>
_TEXT	ENDS
END
