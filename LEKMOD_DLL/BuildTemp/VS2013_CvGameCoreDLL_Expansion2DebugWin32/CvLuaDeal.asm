; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\Lua\CvLuaDeal.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0CA@PKAHCBGA@ChangeThirdPartyEmbargoDuration?$AA@ ; `string'
PUBLIC	?lChangeThirdPartyEmbargoDuration@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lChangeThirdPartyEmbargoDuration
PUBLIC	??_C@_0BO@OOJEHLFP@ChangeThirdPartyPeaceDuration?$AA@ ; `string'
PUBLIC	?lChangeThirdPartyPeaceDuration@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lChangeThirdPartyPeaceDuration
PUBLIC	??_C@_0BM@KMAMGBHN@ChangeThirdPartyWarDuration?$AA@ ; `string'
PUBLIC	?lChangeThirdPartyWarDuration@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lChangeThirdPartyWarDuration
PUBLIC	??_C@_0BE@ELFCPCIA@ChangeResourceTrade?$AA@	; `string'
PUBLIC	?lChangeResourceTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lChangeResourceTrade
PUBLIC	??_C@_0BH@FFGKMIBI@ChangeGoldPerTurnTrade?$AA@	; `string'
PUBLIC	?lChangeGoldPerTurnTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lChangeGoldPerTurnTrade
PUBLIC	??_C@_0BA@MGAJGCBC@ChangeGoldTrade?$AA@		; `string'
PUBLIC	?lChangeGoldTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lChangeGoldTrade
PUBLIC	??_C@_0BF@PDPAFGKM@RemoveVoteCommitment?$AA@	; `string'
PUBLIC	?lRemoveVoteCommitment@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lRemoveVoteCommitment
PUBLIC	??_C@_0BI@KPLIAADF@RemoveThirdPartyEmbargo?$AA@	; `string'
PUBLIC	?lRemoveThirdPartyEmbargo@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lRemoveThirdPartyEmbargo
PUBLIC	??_C@_0BE@DECIHIOK@RemoveThirdPartyWar?$AA@	; `string'
PUBLIC	?lRemoveThirdPartyWar@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lRemoveThirdPartyWar
PUBLIC	??_C@_0BG@CHNFCNC@RemoveThirdPartyPeace?$AA@	; `string'
PUBLIC	?lRemoveThirdPartyPeace@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lRemoveThirdPartyPeace
PUBLIC	??_C@_0BA@JIIIBBG@RemoveUnitTrade?$AA@		; `string'
PUBLIC	?lRemoveUnitTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lRemoveUnitTrade
PUBLIC	??_C@_0BA@MBDAFIEK@RemoveCityTrade?$AA@		; `string'
PUBLIC	?lRemoveCityTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lRemoveCityTrade
PUBLIC	??_C@_0BE@CKMIOPJK@RemoveResourceTrade?$AA@	; `string'
PUBLIC	?lRemoveResourceTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lRemoveResourceTrade
PUBLIC	??_C@_0N@OBNEPJOL@RemoveByType?$AA@		; `string'
PUBLIC	?lRemoveByType@CvLuaDeal@@KAHPAUlua_State@@@Z	; CvLuaDeal::lRemoveByType
PUBLIC	??_C@_0BC@PPGJBKJJ@AddVoteCommitment?$AA@	; `string'
PUBLIC	?lAddVoteCommitment@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddVoteCommitment
PUBLIC	??_C@_0BL@DBAFIADB@AddDeclarationOfFriendship?$AA@ ; `string'
PUBLIC	?lAddDeclarationOfFriendship@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddDeclarationOfFriendship
PUBLIC	??_C@_0BF@FIAHAMKL@AddThirdPartyEmbargo?$AA@	; `string'
PUBLIC	?lAddThirdPartyEmbargo@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddThirdPartyEmbargo
PUBLIC	??_C@_0BB@BLHPHFCB@AddThirdPartyWar?$AA@	; `string'
PUBLIC	?lAddThirdPartyWar@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddThirdPartyWar
PUBLIC	??_C@_0BD@FEMCAPLN@AddThirdPartyPeace?$AA@	; `string'
PUBLIC	?lAddThirdPartyPeace@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddThirdPartyPeace
PUBLIC	??_C@_0P@DABCPLPH@AddPeaceTreaty?$AA@		; `string'
PUBLIC	?lAddPeaceTreaty@CvLuaDeal@@KAHPAUlua_State@@@Z	; CvLuaDeal::lAddPeaceTreaty
PUBLIC	??_C@_08OBLAHJNJ@AddTruce?$AA@			; `string'
PUBLIC	?lAddTruce@CvLuaDeal@@KAHPAUlua_State@@@Z	; CvLuaDeal::lAddTruce
PUBLIC	??_C@_0N@LPDGIKIO@AddSurrender?$AA@		; `string'
PUBLIC	?lAddSurrender@CvLuaDeal@@KAHPAUlua_State@@@Z	; CvLuaDeal::lAddSurrender
PUBLIC	??_C@_0BF@NGFCPHLA@AddPermamentAlliance?$AA@	; `string'
PUBLIC	?lAddPermamentAlliance@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddPermamentAlliance
PUBLIC	??_C@_0BC@LEAINKDN@AddTradeAgreement?$AA@	; `string'
PUBLIC	?lAddTradeAgreement@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddTradeAgreement
PUBLIC	??_C@_0BF@JLDCBDMO@AddResearchAgreement?$AA@	; `string'
PUBLIC	?lAddResearchAgreement@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddResearchAgreement
PUBLIC	??_C@_0BB@MAIJDONN@AddDefensivePact?$AA@	; `string'
PUBLIC	?lAddDefensivePact@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddDefensivePact
PUBLIC	??_C@_0P@HMCMBGOG@AddOpenBorders?$AA@		; `string'
PUBLIC	?lAddOpenBorders@CvLuaDeal@@KAHPAUlua_State@@@Z	; CvLuaDeal::lAddOpenBorders
PUBLIC	??_C@_0BA@NGHAGFAO@AddAllowEmbassy?$AA@		; `string'
PUBLIC	?lAddAllowEmbassy@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddAllowEmbassy
PUBLIC	??_C@_0N@IHBFIODK@AddUnitTrade?$AA@		; `string'
PUBLIC	?lAddUnitTrade@CvLuaDeal@@KAHPAUlua_State@@@Z	; CvLuaDeal::lAddUnitTrade
PUBLIC	??_C@_0N@EPKNFHGG@AddCityTrade?$AA@		; `string'
PUBLIC	?lAddCityTrade@CvLuaDeal@@KAHPAUlua_State@@@Z	; CvLuaDeal::lAddCityTrade
PUBLIC	??_C@_0BB@FJPOCFB@AddResourceTrade?$AA@		; `string'
PUBLIC	?lAddResourceTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddResourceTrade
PUBLIC	??_C@_0M@INKICNH@AddMapTrade?$AA@		; `string'
PUBLIC	?lAddMapTrade@CvLuaDeal@@KAHPAUlua_State@@@Z	; CvLuaDeal::lAddMapTrade
PUBLIC	??_C@_0BE@HGDGDLAN@AddGoldPerTurnTrade?$AA@	; `string'
PUBLIC	?lAddGoldPerTurnTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddGoldPerTurnTrade
PUBLIC	??_C@_0N@JMALFJAG@AddGoldTrade?$AA@		; `string'
PUBLIC	?lAddGoldTrade@CvLuaDeal@@KAHPAUlua_State@@@Z	; CvLuaDeal::lAddGoldTrade
PUBLIC	??_C@_0P@DLEJDHJD@GetNumResource?$AA@		; `string'
PUBLIC	?lGetNumResource@CvLuaDeal@@KAHPAUlua_State@@@Z	; CvLuaDeal::lGetNumResource
PUBLIC	??_C@_0BG@LEDAIFEE@IsPossibleToTradeItem?$AA@	; `string'
PUBLIC	?lIsPossibleToTradeItem@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lIsPossibleToTradeItem
PUBLIC	??_C@_0BB@KHPMBCOK@GetGoldAvailable?$AA@	; `string'
PUBLIC	?lGetGoldAvailable@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lGetGoldAvailable
PUBLIC	??_C@_0M@PAGOMOHE@GetNextItem?$AA@		; `string'
PUBLIC	?lGetNextItem@CvLuaDeal@@KAHPAUlua_State@@@Z	; CvLuaDeal::lGetNextItem
PUBLIC	??_C@_0O@KNMKLHDI@ResetIterator?$AA@		; `string'
PUBLIC	?lResetIterator@CvLuaDeal@@KAHPAUlua_State@@@Z	; CvLuaDeal::lResetIterator
PUBLIC	??_C@_0BE@MBDONECE@SetRequestingPlayer?$AA@	; `string'
PUBLIC	?lSetRequestingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lSetRequestingPlayer
PUBLIC	??_C@_0BE@GPBFJEFI@GetRequestingPlayer?$AA@	; `string'
PUBLIC	?lGetRequestingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lGetRequestingPlayer
PUBLIC	??_C@_0BD@FAFCJJOM@SetDemandingPlayer?$AA@	; `string'
PUBLIC	?lSetDemandingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lSetDemandingPlayer
PUBLIC	??_C@_0BD@KKHIKPAE@GetDemandingPlayer?$AA@	; `string'
PUBLIC	?lGetDemandingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lGetDemandingPlayer
PUBLIC	??_C@_0BG@GKBGIBJB@SetSurrenderingPlayer?$AA@	; `string'
PUBLIC	?lSetSurrenderingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lSetSurrenderingPlayer
PUBLIC	??_C@_0BG@JPEAFINA@GetSurrenderingPlayer?$AA@	; `string'
PUBLIC	?lGetSurrenderingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lGetSurrenderingPlayer
PUBLIC	??_C@_0M@IKAIIJFL@SetToPlayer?$AA@		; `string'
PUBLIC	?lSetToPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z	; CvLuaDeal::lSetToPlayer
PUBLIC	??_C@_0O@PIFIEDGM@SetFromPlayer?$AA@		; `string'
PUBLIC	?lSetFromPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z	; CvLuaDeal::lSetFromPlayer
PUBLIC	??_C@_0M@IFBGFPNI@GetToPlayer?$AA@		; `string'
PUBLIC	?lGetToPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z	; CvLuaDeal::lGetToPlayer
PUBLIC	??_C@_0O@IHEGPABL@GetFromPlayer?$AA@		; `string'
PUBLIC	?lGetFromPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z	; CvLuaDeal::lGetFromPlayer
PUBLIC	??_C@_0P@IAMLOFJJ@GetOtherPlayer?$AA@		; `string'
PUBLIC	?lGetOtherPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z	; CvLuaDeal::lGetOtherPlayer
PUBLIC	??_C@_0M@DDOIJMMH@GetDuration?$AA@		; `string'
PUBLIC	?lGetDuration@CvLuaDeal@@KAHPAUlua_State@@@Z	; CvLuaDeal::lGetDuration
PUBLIC	??_C@_0L@OFGCGKFN@GetEndTurn?$AA@		; `string'
PUBLIC	?lGetEndTurn@CvLuaDeal@@KAHPAUlua_State@@@Z	; CvLuaDeal::lGetEndTurn
PUBLIC	??_C@_0N@PLGPFGDH@GetStartTurn?$AA@		; `string'
PUBLIC	?lGetStartTurn@CvLuaDeal@@KAHPAUlua_State@@@Z	; CvLuaDeal::lGetStartTurn
PUBLIC	??_C@_0M@GKJBHKOP@GetNumItems?$AA@		; `string'
PUBLIC	?lGetNumItems@CvLuaDeal@@KAHPAUlua_State@@@Z	; CvLuaDeal::lGetNumItems
PUBLIC	??_C@_0L@NKLBIBD@ClearItems?$AA@		; `string'
PUBLIC	?lClearItems@CvLuaDeal@@KAHPAUlua_State@@@Z	; CvLuaDeal::lClearItems
PUBLIC	?PushMethods@CvLuaDeal@@SAXPAUlua_State@@H@Z	; CvLuaDeal::PushMethods
EXTRN	_lua_setfield:PROC
EXTRN	_lua_pushcclosure:PROC
;	COMDAT ??_C@_0CA@PKAHCBGA@ChangeThirdPartyEmbargoDuration?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluadeal.cpp
CONST	SEGMENT
??_C@_0CA@PKAHCBGA@ChangeThirdPartyEmbargoDuration?$AA@ DB 'ChangeThirdPa'
	DB	'rtyEmbargoDuration', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@OOJEHLFP@ChangeThirdPartyPeaceDuration?$AA@
CONST	SEGMENT
??_C@_0BO@OOJEHLFP@ChangeThirdPartyPeaceDuration?$AA@ DB 'ChangeThirdPart'
	DB	'yPeaceDuration', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KMAMGBHN@ChangeThirdPartyWarDuration?$AA@
CONST	SEGMENT
??_C@_0BM@KMAMGBHN@ChangeThirdPartyWarDuration?$AA@ DB 'ChangeThirdPartyW'
	DB	'arDuration', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@ELFCPCIA@ChangeResourceTrade?$AA@
CONST	SEGMENT
??_C@_0BE@ELFCPCIA@ChangeResourceTrade?$AA@ DB 'ChangeResourceTrade', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FFGKMIBI@ChangeGoldPerTurnTrade?$AA@
CONST	SEGMENT
??_C@_0BH@FFGKMIBI@ChangeGoldPerTurnTrade?$AA@ DB 'ChangeGoldPerTurnTrade'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MGAJGCBC@ChangeGoldTrade?$AA@
CONST	SEGMENT
??_C@_0BA@MGAJGCBC@ChangeGoldTrade?$AA@ DB 'ChangeGoldTrade', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PDPAFGKM@RemoveVoteCommitment?$AA@
CONST	SEGMENT
??_C@_0BF@PDPAFGKM@RemoveVoteCommitment?$AA@ DB 'RemoveVoteCommitment', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KPLIAADF@RemoveThirdPartyEmbargo?$AA@
CONST	SEGMENT
??_C@_0BI@KPLIAADF@RemoveThirdPartyEmbargo?$AA@ DB 'RemoveThirdPartyEmbar'
	DB	'go', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DECIHIOK@RemoveThirdPartyWar?$AA@
CONST	SEGMENT
??_C@_0BE@DECIHIOK@RemoveThirdPartyWar?$AA@ DB 'RemoveThirdPartyWar', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CHNFCNC@RemoveThirdPartyPeace?$AA@
CONST	SEGMENT
??_C@_0BG@CHNFCNC@RemoveThirdPartyPeace?$AA@ DB 'RemoveThirdPartyPeace', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JIIIBBG@RemoveUnitTrade?$AA@
CONST	SEGMENT
??_C@_0BA@JIIIBBG@RemoveUnitTrade?$AA@ DB 'RemoveUnitTrade', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MBDAFIEK@RemoveCityTrade?$AA@
CONST	SEGMENT
??_C@_0BA@MBDAFIEK@RemoveCityTrade?$AA@ DB 'RemoveCityTrade', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CKMIOPJK@RemoveResourceTrade?$AA@
CONST	SEGMENT
??_C@_0BE@CKMIOPJK@RemoveResourceTrade?$AA@ DB 'RemoveResourceTrade', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OBNEPJOL@RemoveByType?$AA@
CONST	SEGMENT
??_C@_0N@OBNEPJOL@RemoveByType?$AA@ DB 'RemoveByType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PPGJBKJJ@AddVoteCommitment?$AA@
CONST	SEGMENT
??_C@_0BC@PPGJBKJJ@AddVoteCommitment?$AA@ DB 'AddVoteCommitment', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DBAFIADB@AddDeclarationOfFriendship?$AA@
CONST	SEGMENT
??_C@_0BL@DBAFIADB@AddDeclarationOfFriendship?$AA@ DB 'AddDeclarationOfFr'
	DB	'iendship', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FIAHAMKL@AddThirdPartyEmbargo?$AA@
CONST	SEGMENT
??_C@_0BF@FIAHAMKL@AddThirdPartyEmbargo?$AA@ DB 'AddThirdPartyEmbargo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BLHPHFCB@AddThirdPartyWar?$AA@
CONST	SEGMENT
??_C@_0BB@BLHPHFCB@AddThirdPartyWar?$AA@ DB 'AddThirdPartyWar', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEMCAPLN@AddThirdPartyPeace?$AA@
CONST	SEGMENT
??_C@_0BD@FEMCAPLN@AddThirdPartyPeace?$AA@ DB 'AddThirdPartyPeace', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DABCPLPH@AddPeaceTreaty?$AA@
CONST	SEGMENT
??_C@_0P@DABCPLPH@AddPeaceTreaty?$AA@ DB 'AddPeaceTreaty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08OBLAHJNJ@AddTruce?$AA@
CONST	SEGMENT
??_C@_08OBLAHJNJ@AddTruce?$AA@ DB 'AddTruce', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LPDGIKIO@AddSurrender?$AA@
CONST	SEGMENT
??_C@_0N@LPDGIKIO@AddSurrender?$AA@ DB 'AddSurrender', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NGFCPHLA@AddPermamentAlliance?$AA@
CONST	SEGMENT
??_C@_0BF@NGFCPHLA@AddPermamentAlliance?$AA@ DB 'AddPermamentAlliance', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LEAINKDN@AddTradeAgreement?$AA@
CONST	SEGMENT
??_C@_0BC@LEAINKDN@AddTradeAgreement?$AA@ DB 'AddTradeAgreement', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JLDCBDMO@AddResearchAgreement?$AA@
CONST	SEGMENT
??_C@_0BF@JLDCBDMO@AddResearchAgreement?$AA@ DB 'AddResearchAgreement', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MAIJDONN@AddDefensivePact?$AA@
CONST	SEGMENT
??_C@_0BB@MAIJDONN@AddDefensivePact?$AA@ DB 'AddDefensivePact', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HMCMBGOG@AddOpenBorders?$AA@
CONST	SEGMENT
??_C@_0P@HMCMBGOG@AddOpenBorders?$AA@ DB 'AddOpenBorders', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NGHAGFAO@AddAllowEmbassy?$AA@
CONST	SEGMENT
??_C@_0BA@NGHAGFAO@AddAllowEmbassy?$AA@ DB 'AddAllowEmbassy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IHBFIODK@AddUnitTrade?$AA@
CONST	SEGMENT
??_C@_0N@IHBFIODK@AddUnitTrade?$AA@ DB 'AddUnitTrade', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EPKNFHGG@AddCityTrade?$AA@
CONST	SEGMENT
??_C@_0N@EPKNFHGG@AddCityTrade?$AA@ DB 'AddCityTrade', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FJPOCFB@AddResourceTrade?$AA@
CONST	SEGMENT
??_C@_0BB@FJPOCFB@AddResourceTrade?$AA@ DB 'AddResourceTrade', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@INKICNH@AddMapTrade?$AA@
CONST	SEGMENT
??_C@_0M@INKICNH@AddMapTrade?$AA@ DB 'AddMapTrade', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HGDGDLAN@AddGoldPerTurnTrade?$AA@
CONST	SEGMENT
??_C@_0BE@HGDGDLAN@AddGoldPerTurnTrade?$AA@ DB 'AddGoldPerTurnTrade', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JMALFJAG@AddGoldTrade?$AA@
CONST	SEGMENT
??_C@_0N@JMALFJAG@AddGoldTrade?$AA@ DB 'AddGoldTrade', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DLEJDHJD@GetNumResource?$AA@
CONST	SEGMENT
??_C@_0P@DLEJDHJD@GetNumResource?$AA@ DB 'GetNumResource', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LEDAIFEE@IsPossibleToTradeItem?$AA@
CONST	SEGMENT
??_C@_0BG@LEDAIFEE@IsPossibleToTradeItem?$AA@ DB 'IsPossibleToTradeItem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KHPMBCOK@GetGoldAvailable?$AA@
CONST	SEGMENT
??_C@_0BB@KHPMBCOK@GetGoldAvailable?$AA@ DB 'GetGoldAvailable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PAGOMOHE@GetNextItem?$AA@
CONST	SEGMENT
??_C@_0M@PAGOMOHE@GetNextItem?$AA@ DB 'GetNextItem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KNMKLHDI@ResetIterator?$AA@
CONST	SEGMENT
??_C@_0O@KNMKLHDI@ResetIterator?$AA@ DB 'ResetIterator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MBDONECE@SetRequestingPlayer?$AA@
CONST	SEGMENT
??_C@_0BE@MBDONECE@SetRequestingPlayer?$AA@ DB 'SetRequestingPlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GPBFJEFI@GetRequestingPlayer?$AA@
CONST	SEGMENT
??_C@_0BE@GPBFJEFI@GetRequestingPlayer?$AA@ DB 'GetRequestingPlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FAFCJJOM@SetDemandingPlayer?$AA@
CONST	SEGMENT
??_C@_0BD@FAFCJJOM@SetDemandingPlayer?$AA@ DB 'SetDemandingPlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KKHIKPAE@GetDemandingPlayer?$AA@
CONST	SEGMENT
??_C@_0BD@KKHIKPAE@GetDemandingPlayer?$AA@ DB 'GetDemandingPlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GKBGIBJB@SetSurrenderingPlayer?$AA@
CONST	SEGMENT
??_C@_0BG@GKBGIBJB@SetSurrenderingPlayer?$AA@ DB 'SetSurrenderingPlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JPEAFINA@GetSurrenderingPlayer?$AA@
CONST	SEGMENT
??_C@_0BG@JPEAFINA@GetSurrenderingPlayer?$AA@ DB 'GetSurrenderingPlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IKAIIJFL@SetToPlayer?$AA@
CONST	SEGMENT
??_C@_0M@IKAIIJFL@SetToPlayer?$AA@ DB 'SetToPlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PIFIEDGM@SetFromPlayer?$AA@
CONST	SEGMENT
??_C@_0O@PIFIEDGM@SetFromPlayer?$AA@ DB 'SetFromPlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IFBGFPNI@GetToPlayer?$AA@
CONST	SEGMENT
??_C@_0M@IFBGFPNI@GetToPlayer?$AA@ DB 'GetToPlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IHEGPABL@GetFromPlayer?$AA@
CONST	SEGMENT
??_C@_0O@IHEGPABL@GetFromPlayer?$AA@ DB 'GetFromPlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IAMLOFJJ@GetOtherPlayer?$AA@
CONST	SEGMENT
??_C@_0P@IAMLOFJJ@GetOtherPlayer?$AA@ DB 'GetOtherPlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DDOIJMMH@GetDuration?$AA@
CONST	SEGMENT
??_C@_0M@DDOIJMMH@GetDuration?$AA@ DB 'GetDuration', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OFGCGKFN@GetEndTurn?$AA@
CONST	SEGMENT
??_C@_0L@OFGCGKFN@GetEndTurn?$AA@ DB 'GetEndTurn', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PLGPFGDH@GetStartTurn?$AA@
CONST	SEGMENT
??_C@_0N@PLGPFGDH@GetStartTurn?$AA@ DB 'GetStartTurn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GKJBHKOP@GetNumItems?$AA@
CONST	SEGMENT
??_C@_0M@GKJBHKOP@GetNumItems?$AA@ DB 'GetNumItems', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NKLBIBD@ClearItems?$AA@
CONST	SEGMENT
??_C@_0L@NKLBIBD@ClearItems?$AA@ DB 'ClearItems', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?PushMethods@CvLuaDeal@@SAXPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
?PushMethods@CvLuaDeal@@SAXPAUlua_State@@H@Z PROC	; CvLuaDeal::PushMethods, COMDAT

; 24   : {

	push	ebp
	mov	ebp, esp

; 25   : 	Method(ClearItems);

	push	0
	push	OFFSET ?lClearItems@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lClearItems
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@NKLBIBD@ClearItems?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 26   : 	Method(GetNumItems);

	push	0
	push	OFFSET ?lGetNumItems@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lGetNumItems
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@GKJBHKOP@GetNumItems?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 27   : 
; 28   : 	Method(GetStartTurn);

	push	0
	push	OFFSET ?lGetStartTurn@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lGetStartTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@PLGPFGDH@GetStartTurn?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 29   : 	Method(GetEndTurn);

	push	0
	push	OFFSET ?lGetEndTurn@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lGetEndTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@OFGCGKFN@GetEndTurn?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 30   : 	Method(GetDuration);

	push	0
	push	OFFSET ?lGetDuration@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lGetDuration
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@DDOIJMMH@GetDuration?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 31   : 
; 32   : 	Method(GetOtherPlayer);

	push	0
	push	OFFSET ?lGetOtherPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lGetOtherPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@IAMLOFJJ@GetOtherPlayer?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 33   : 	Method(GetFromPlayer);

	push	0
	push	OFFSET ?lGetFromPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lGetFromPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@IHEGPABL@GetFromPlayer?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 34   : 	Method(GetToPlayer);

	push	0
	push	OFFSET ?lGetToPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lGetToPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@IFBGFPNI@GetToPlayer?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 35   : 	Method(SetFromPlayer);

	push	0
	push	OFFSET ?lSetFromPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lSetFromPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@PIFIEDGM@SetFromPlayer?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 36   : 	Method(SetToPlayer);

	push	0
	push	OFFSET ?lSetToPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lSetToPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@IKAIIJFL@SetToPlayer?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 37   : 
; 38   : 	Method(GetSurrenderingPlayer);

	push	0
	push	OFFSET ?lGetSurrenderingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lGetSurrenderingPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@JPEAFINA@GetSurrenderingPlayer?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 39   : 	Method(SetSurrenderingPlayer);

	push	0
	push	OFFSET ?lSetSurrenderingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lSetSurrenderingPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@GKBGIBJB@SetSurrenderingPlayer?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 40   : 	Method(GetDemandingPlayer);

	push	0
	push	OFFSET ?lGetDemandingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lGetDemandingPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@KKHIKPAE@GetDemandingPlayer?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 41   : 	Method(SetDemandingPlayer);

	push	0
	push	OFFSET ?lSetDemandingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lSetDemandingPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@FAFCJJOM@SetDemandingPlayer?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 42   : 	Method(GetRequestingPlayer);

	push	0
	push	OFFSET ?lGetRequestingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lGetRequestingPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@GPBFJEFI@GetRequestingPlayer?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 43   : 	Method(SetRequestingPlayer);

	push	0
	push	OFFSET ?lSetRequestingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lSetRequestingPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@MBDONECE@SetRequestingPlayer?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 44   : 
; 45   : 	Method(ResetIterator);

	push	0
	push	OFFSET ?lResetIterator@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lResetIterator
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@KNMKLHDI@ResetIterator?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 46   : 	Method(GetNextItem);

	push	0
	push	OFFSET ?lGetNextItem@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lGetNextItem
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@PAGOMOHE@GetNextItem?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 47   : 
; 48   : 	Method(GetGoldAvailable);

	push	0
	push	OFFSET ?lGetGoldAvailable@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lGetGoldAvailable
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@KHPMBCOK@GetGoldAvailable?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 49   : 
; 50   : 	Method(IsPossibleToTradeItem);

	push	0
	push	OFFSET ?lIsPossibleToTradeItem@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lIsPossibleToTradeItem
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@LEDAIFEE@IsPossibleToTradeItem?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 51   : 	Method(GetNumResource);

	push	0
	push	OFFSET ?lGetNumResource@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lGetNumResource
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@DLEJDHJD@GetNumResource?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 52   : 
; 53   : 	Method(AddGoldTrade);

	push	0
	push	OFFSET ?lAddGoldTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddGoldTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@JMALFJAG@AddGoldTrade?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 54   : 	Method(AddGoldPerTurnTrade);

	push	0
	push	OFFSET ?lAddGoldPerTurnTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddGoldPerTurnTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@HGDGDLAN@AddGoldPerTurnTrade?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 55   : 	Method(AddMapTrade);

	push	0
	push	OFFSET ?lAddMapTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddMapTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@INKICNH@AddMapTrade?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 56   : 	Method(AddResourceTrade);

	push	0
	push	OFFSET ?lAddResourceTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddResourceTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@FJPOCFB@AddResourceTrade?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 57   : 	Method(AddCityTrade);

	push	0
	push	OFFSET ?lAddCityTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddCityTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@EPKNFHGG@AddCityTrade?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 58   : 	Method(AddUnitTrade);

	push	0
	push	OFFSET ?lAddUnitTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddUnitTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@IHBFIODK@AddUnitTrade?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 59   : 	Method(AddAllowEmbassy);

	push	0
	push	OFFSET ?lAddAllowEmbassy@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddAllowEmbassy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@NGHAGFAO@AddAllowEmbassy?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 60   : 	Method(AddOpenBorders);

	push	0
	push	OFFSET ?lAddOpenBorders@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddOpenBorders
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@HMCMBGOG@AddOpenBorders?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 61   : 	Method(AddDefensivePact);

	push	0
	push	OFFSET ?lAddDefensivePact@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddDefensivePact
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@MAIJDONN@AddDefensivePact?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 62   : 	Method(AddResearchAgreement);

	push	0
	push	OFFSET ?lAddResearchAgreement@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddResearchAgreement
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@JLDCBDMO@AddResearchAgreement?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 63   : 	Method(AddTradeAgreement);

	push	0
	push	OFFSET ?lAddTradeAgreement@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddTradeAgreement
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@LEAINKDN@AddTradeAgreement?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 64   : 	Method(AddPermamentAlliance);

	push	0
	push	OFFSET ?lAddPermamentAlliance@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddPermamentAlliance
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@NGFCPHLA@AddPermamentAlliance?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 65   : 	Method(AddSurrender);

	push	0
	push	OFFSET ?lAddSurrender@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddSurrender
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@LPDGIKIO@AddSurrender?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 66   : 	Method(AddTruce);

	push	0
	push	OFFSET ?lAddTruce@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddTruce
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08OBLAHJNJ@AddTruce?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 67   : 	Method(AddPeaceTreaty);

	push	0
	push	OFFSET ?lAddPeaceTreaty@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddPeaceTreaty
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@DABCPLPH@AddPeaceTreaty?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 68   : 	Method(AddThirdPartyPeace);

	push	0
	push	OFFSET ?lAddThirdPartyPeace@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddThirdPartyPeace
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@FEMCAPLN@AddThirdPartyPeace?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 69   : 	Method(AddThirdPartyWar);

	push	0
	push	OFFSET ?lAddThirdPartyWar@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddThirdPartyWar
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@BLHPHFCB@AddThirdPartyWar?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 70   : 	Method(AddThirdPartyEmbargo);

	push	0
	push	OFFSET ?lAddThirdPartyEmbargo@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddThirdPartyEmbargo
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@FIAHAMKL@AddThirdPartyEmbargo?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 71   : 	Method(AddDeclarationOfFriendship);

	push	0
	push	OFFSET ?lAddDeclarationOfFriendship@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddDeclarationOfFriendship
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@DBAFIADB@AddDeclarationOfFriendship?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 72   : 	Method(AddVoteCommitment);

	push	0
	push	OFFSET ?lAddVoteCommitment@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lAddVoteCommitment
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@PPGJBKJJ@AddVoteCommitment?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 73   : 
; 74   : 	Method(RemoveByType);

	push	0
	push	OFFSET ?lRemoveByType@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lRemoveByType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@OBNEPJOL@RemoveByType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 75   : 	Method(RemoveResourceTrade);

	push	0
	push	OFFSET ?lRemoveResourceTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lRemoveResourceTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@CKMIOPJK@RemoveResourceTrade?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 76   : 	Method(RemoveCityTrade);

	push	0
	push	OFFSET ?lRemoveCityTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lRemoveCityTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@MBDAFIEK@RemoveCityTrade?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 77   : 	Method(RemoveUnitTrade);

	push	0
	push	OFFSET ?lRemoveUnitTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lRemoveUnitTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@JIIIBBG@RemoveUnitTrade?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 78   : 	Method(RemoveThirdPartyPeace);

	push	0
	push	OFFSET ?lRemoveThirdPartyPeace@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lRemoveThirdPartyPeace
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@CHNFCNC@RemoveThirdPartyPeace?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 79   : 	Method(RemoveThirdPartyWar);

	push	0
	push	OFFSET ?lRemoveThirdPartyWar@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lRemoveThirdPartyWar
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@DECIHIOK@RemoveThirdPartyWar?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 80   : 	Method(RemoveThirdPartyEmbargo);

	push	0
	push	OFFSET ?lRemoveThirdPartyEmbargo@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lRemoveThirdPartyEmbargo
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@KPLIAADF@RemoveThirdPartyEmbargo?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 81   : 	Method(RemoveVoteCommitment);

	push	0
	push	OFFSET ?lRemoveVoteCommitment@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lRemoveVoteCommitment
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@PDPAFGKM@RemoveVoteCommitment?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 82   : 
; 83   : 	Method(ChangeGoldTrade);

	push	0
	push	OFFSET ?lChangeGoldTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lChangeGoldTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@MGAJGCBC@ChangeGoldTrade?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 84   : 	Method(ChangeGoldPerTurnTrade);

	push	0
	push	OFFSET ?lChangeGoldPerTurnTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lChangeGoldPerTurnTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@FFGKMIBI@ChangeGoldPerTurnTrade?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 85   : 	Method(ChangeResourceTrade);

	push	0
	push	OFFSET ?lChangeResourceTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lChangeResourceTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@ELFCPCIA@ChangeResourceTrade?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 86   : 	Method(ChangeThirdPartyWarDuration);

	push	0
	push	OFFSET ?lChangeThirdPartyWarDuration@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lChangeThirdPartyWarDuration
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@KMAMGBHN@ChangeThirdPartyWarDuration?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 87   : 	Method(ChangeThirdPartyPeaceDuration);

	push	0
	push	OFFSET ?lChangeThirdPartyPeaceDuration@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lChangeThirdPartyPeaceDuration
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@OOJEHLFP@ChangeThirdPartyPeaceDuration?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 88   : 	Method(ChangeThirdPartyEmbargoDuration);

	push	0
	push	OFFSET ?lChangeThirdPartyEmbargoDuration@CvLuaDeal@@KAHPAUlua_State@@@Z ; CvLuaDeal::lChangeThirdPartyEmbargoDuration
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@PKAHCBGA@ChangeThirdPartyEmbargoDuration?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 89   : }

	pop	ebp
	ret	0
?PushMethods@CvLuaDeal@@SAXPAUlua_State@@H@Z ENDP	; CvLuaDeal::PushMethods
_TEXT	ENDS
PUBLIC	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod
EXTRN	?ClearItems@CvDeal@@QAEXXZ:PROC			; CvDeal::ClearItems
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluadeal.h
;	COMDAT ?lClearItems@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lClearItems@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lClearItems, COMDAT

; 32   : 	{

	push	ebp
	mov	ebp, esp

; 33   : 		return BasicLuaMethod(L, &CvDeal::ClearItems);

	push	OFFSET ?ClearItems@CvDeal@@QAEXXZ	; CvDeal::ClearItems
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod
	add	esp, 8

; 34   : 	};

	pop	ebp
	ret	0
?lClearItems@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lClearItems
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<int>
EXTRN	?GetNumItems@CvDeal@@QAEHXZ:PROC		; CvDeal::GetNumItems
; Function compile flags: /Odtp
;	COMDAT ?lGetNumItems@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumItems@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lGetNumItems, COMDAT

; 36   : 	{

	push	ebp
	mov	ebp, esp

; 37   : 		return BasicLuaMethod(L, &CvDeal::GetNumItems);

	push	OFFSET ?GetNumItems@CvDeal@@QAEHXZ	; CvDeal::GetNumItems
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<int>
	add	esp, 8

; 38   : 	};

	pop	ebp
	ret	0
?lGetNumItems@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lGetNumItems
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@BEIXZ@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<unsigned int>
PUBLIC	?GetStartTurn@CvDeal@@QBEIXZ			; CvDeal::GetStartTurn
; Function compile flags: /Odtp
;	COMDAT ?lGetStartTurn@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetStartTurn@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lGetStartTurn, COMDAT

; 41   : 	{

	push	ebp
	mov	ebp, esp

; 42   : 		return BasicLuaMethod(L, &CvDeal::GetStartTurn);

	push	OFFSET ?GetStartTurn@CvDeal@@QBEIXZ	; CvDeal::GetStartTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@BEIXZ@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<unsigned int>
	add	esp, 8

; 43   : 	};

	pop	ebp
	ret	0
?lGetStartTurn@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lGetStartTurn
_TEXT	ENDS
PUBLIC	?GetEndTurn@CvDeal@@QBEIXZ			; CvDeal::GetEndTurn
; Function compile flags: /Odtp
;	COMDAT ?lGetEndTurn@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetEndTurn@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lGetEndTurn, COMDAT

; 45   : 	{

	push	ebp
	mov	ebp, esp

; 46   : 		return BasicLuaMethod(L, &CvDeal::GetEndTurn);

	push	OFFSET ?GetEndTurn@CvDeal@@QBEIXZ	; CvDeal::GetEndTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@BEIXZ@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<unsigned int>
	add	esp, 8

; 47   : 	};

	pop	ebp
	ret	0
?lGetEndTurn@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lGetEndTurn
_TEXT	ENDS
PUBLIC	?GetDuration@CvDeal@@QBEIXZ			; CvDeal::GetDuration
; Function compile flags: /Odtp
;	COMDAT ?lGetDuration@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetDuration@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lGetDuration, COMDAT

; 49   : 	{

	push	ebp
	mov	ebp, esp

; 50   : 		return BasicLuaMethod(L, &CvDeal::GetDuration);

	push	OFFSET ?GetDuration@CvDeal@@QBEIXZ	; CvDeal::GetDuration
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@BEIXZ@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<unsigned int>
	add	esp, 8

; 51   : 	};

	pop	ebp
	ret	0
?lGetDuration@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lGetDuration
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes>
EXTRN	?SetFromPlayer@CvDeal@@QAEXW4PlayerTypes@@@Z:PROC ; CvDeal::SetFromPlayer
; Function compile flags: /Odtp
;	COMDAT ?lSetFromPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetFromPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lSetFromPlayer, COMDAT

; 54   : 	{

	push	ebp
	mov	ebp, esp

; 55   : 		return BasicLuaMethod(L, &CvDeal::SetFromPlayer);

	push	OFFSET ?SetFromPlayer@CvDeal@@QAEXW4PlayerTypes@@@Z ; CvDeal::SetFromPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 56   : 	};

	pop	ebp
	ret	0
?lSetFromPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lSetFromPlayer
_TEXT	ENDS
EXTRN	?SetToPlayer@CvDeal@@QAEXW4PlayerTypes@@@Z:PROC	; CvDeal::SetToPlayer
; Function compile flags: /Odtp
;	COMDAT ?lSetToPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetToPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lSetToPlayer, COMDAT

; 58   : 	{

	push	ebp
	mov	ebp, esp

; 59   : 		return BasicLuaMethod(L, &CvDeal::SetToPlayer);

	push	OFFSET ?SetToPlayer@CvDeal@@QAEXW4PlayerTypes@@@Z ; CvDeal::SetToPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 60   : 	};

	pop	ebp
	ret	0
?lSetToPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lSetToPlayer
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@W41@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@BE?AW4PlayerTypes@@W43@@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum PlayerTypes>
EXTRN	?GetOtherPlayer@CvDeal@@QBE?AW4PlayerTypes@@W42@@Z:PROC ; CvDeal::GetOtherPlayer
; Function compile flags: /Odtp
;	COMDAT ?lGetOtherPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetOtherPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lGetOtherPlayer, COMDAT

; 62   : 	{

	push	ebp
	mov	ebp, esp

; 63   : 		return BasicLuaMethod(L, &CvDeal::GetOtherPlayer);

	push	OFFSET ?GetOtherPlayer@CvDeal@@QBE?AW4PlayerTypes@@W42@@Z ; CvDeal::GetOtherPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@W41@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@BE?AW4PlayerTypes@@W43@@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum PlayerTypes>
	add	esp, 8

; 64   : 	};

	pop	ebp
	ret	0
?lGetOtherPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lGetOtherPlayer
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes>
PUBLIC	?GetToPlayer@CvDeal@@QBE?AW4PlayerTypes@@XZ	; CvDeal::GetToPlayer
; Function compile flags: /Odtp
;	COMDAT ?lGetToPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetToPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lGetToPlayer, COMDAT

; 66   : 	{

	push	ebp
	mov	ebp, esp

; 67   : 		return BasicLuaMethod(L, &CvDeal::GetToPlayer);

	push	OFFSET ?GetToPlayer@CvDeal@@QBE?AW4PlayerTypes@@XZ ; CvDeal::GetToPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 68   : 	};

	pop	ebp
	ret	0
?lGetToPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lGetToPlayer
_TEXT	ENDS
PUBLIC	?GetFromPlayer@CvDeal@@QBE?AW4PlayerTypes@@XZ	; CvDeal::GetFromPlayer
; Function compile flags: /Odtp
;	COMDAT ?lGetFromPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFromPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lGetFromPlayer, COMDAT

; 70   : 	{

	push	ebp
	mov	ebp, esp

; 71   : 		return BasicLuaMethod(L, &CvDeal::GetFromPlayer);

	push	OFFSET ?GetFromPlayer@CvDeal@@QBE?AW4PlayerTypes@@XZ ; CvDeal::GetFromPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 72   : 	};

	pop	ebp
	ret	0
?lGetFromPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lGetFromPlayer
_TEXT	ENDS
EXTRN	?GetSurrenderingPlayer@CvDeal@@QBE?AW4PlayerTypes@@XZ:PROC ; CvDeal::GetSurrenderingPlayer
; Function compile flags: /Odtp
;	COMDAT ?lGetSurrenderingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSurrenderingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z PROC ; CvLuaDeal::lGetSurrenderingPlayer, COMDAT

; 75   : 	{

	push	ebp
	mov	ebp, esp

; 76   : 		return BasicLuaMethod(L, &CvDeal::GetSurrenderingPlayer);

	push	OFFSET ?GetSurrenderingPlayer@CvDeal@@QBE?AW4PlayerTypes@@XZ ; CvDeal::GetSurrenderingPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 77   : 	};

	pop	ebp
	ret	0
?lGetSurrenderingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP ; CvLuaDeal::lGetSurrenderingPlayer
_TEXT	ENDS
EXTRN	?SetSurrenderingPlayer@CvDeal@@QAEXW4PlayerTypes@@@Z:PROC ; CvDeal::SetSurrenderingPlayer
; Function compile flags: /Odtp
;	COMDAT ?lSetSurrenderingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetSurrenderingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z PROC ; CvLuaDeal::lSetSurrenderingPlayer, COMDAT

; 79   : 	{

	push	ebp
	mov	ebp, esp

; 80   : 		return BasicLuaMethod(L, &CvDeal::SetSurrenderingPlayer);

	push	OFFSET ?SetSurrenderingPlayer@CvDeal@@QAEXW4PlayerTypes@@@Z ; CvDeal::SetSurrenderingPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 81   : 	};

	pop	ebp
	ret	0
?lSetSurrenderingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP ; CvLuaDeal::lSetSurrenderingPlayer
_TEXT	ENDS
EXTRN	?GetDemandingPlayer@CvDeal@@QBE?AW4PlayerTypes@@XZ:PROC ; CvDeal::GetDemandingPlayer
; Function compile flags: /Odtp
;	COMDAT ?lGetDemandingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetDemandingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z PROC ; CvLuaDeal::lGetDemandingPlayer, COMDAT

; 83   : 	{

	push	ebp
	mov	ebp, esp

; 84   : 		return BasicLuaMethod(L, &CvDeal::GetDemandingPlayer);

	push	OFFSET ?GetDemandingPlayer@CvDeal@@QBE?AW4PlayerTypes@@XZ ; CvDeal::GetDemandingPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 85   : 	};

	pop	ebp
	ret	0
?lGetDemandingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP ; CvLuaDeal::lGetDemandingPlayer
_TEXT	ENDS
EXTRN	?SetDemandingPlayer@CvDeal@@QAEXW4PlayerTypes@@@Z:PROC ; CvDeal::SetDemandingPlayer
; Function compile flags: /Odtp
;	COMDAT ?lSetDemandingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetDemandingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z PROC ; CvLuaDeal::lSetDemandingPlayer, COMDAT

; 87   : 	{

	push	ebp
	mov	ebp, esp

; 88   : 		return BasicLuaMethod(L, &CvDeal::SetDemandingPlayer);

	push	OFFSET ?SetDemandingPlayer@CvDeal@@QAEXW4PlayerTypes@@@Z ; CvDeal::SetDemandingPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 89   : 	};

	pop	ebp
	ret	0
?lSetDemandingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP ; CvLuaDeal::lSetDemandingPlayer
_TEXT	ENDS
EXTRN	?GetRequestingPlayer@CvDeal@@QBE?AW4PlayerTypes@@XZ:PROC ; CvDeal::GetRequestingPlayer
; Function compile flags: /Odtp
;	COMDAT ?lGetRequestingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRequestingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z PROC ; CvLuaDeal::lGetRequestingPlayer, COMDAT

; 91   : 	{

	push	ebp
	mov	ebp, esp

; 92   : 		return BasicLuaMethod(L, &CvDeal::GetRequestingPlayer);

	push	OFFSET ?GetRequestingPlayer@CvDeal@@QBE?AW4PlayerTypes@@XZ ; CvDeal::GetRequestingPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 93   : 	};

	pop	ebp
	ret	0
?lGetRequestingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP ; CvLuaDeal::lGetRequestingPlayer
_TEXT	ENDS
EXTRN	?SetRequestingPlayer@CvDeal@@QAEXW4PlayerTypes@@@Z:PROC ; CvDeal::SetRequestingPlayer
; Function compile flags: /Odtp
;	COMDAT ?lSetRequestingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetRequestingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z PROC ; CvLuaDeal::lSetRequestingPlayer, COMDAT

; 95   : 	{

	push	ebp
	mov	ebp, esp

; 96   : 		return BasicLuaMethod(L, &CvDeal::SetRequestingPlayer);

	push	OFFSET ?SetRequestingPlayer@CvDeal@@QAEXW4PlayerTypes@@@Z ; CvDeal::SetRequestingPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 97   : 	};

	pop	ebp
	ret	0
?lSetRequestingPlayer@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP ; CvLuaDeal::lSetRequestingPlayer
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4PlayerTypes@@W4TradeableItems@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEHW4PlayerTypes@@W4TradeableItems@@@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<int,enum PlayerTypes,enum TradeableItems>
EXTRN	?GetGoldAvailable@CvDeal@@QAEHW4PlayerTypes@@W4TradeableItems@@@Z:PROC ; CvDeal::GetGoldAvailable
; Function compile flags: /Odtp
;	COMDAT ?lGetGoldAvailable@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldAvailable@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lGetGoldAvailable, COMDAT

; 100  : 	{

	push	ebp
	mov	ebp, esp

; 101  : 		return BasicLuaMethod(L, &CvDeal::GetGoldAvailable);

	push	OFFSET ?GetGoldAvailable@CvDeal@@QAEHW4PlayerTypes@@W4TradeableItems@@@Z ; CvDeal::GetGoldAvailable
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4PlayerTypes@@W4TradeableItems@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEHW4PlayerTypes@@W4TradeableItems@@@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<int,enum PlayerTypes,enum TradeableItems>
	add	esp, 8

; 102  : 	};

	pop	ebp
	ret	0
?lGetGoldAvailable@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lGetGoldAvailable
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,int>
EXTRN	?AddGoldTrade@CvDeal@@QAEXW4PlayerTypes@@H@Z:PROC ; CvDeal::AddGoldTrade
; Function compile flags: /Odtp
;	COMDAT ?lAddGoldTrade@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddGoldTrade@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lAddGoldTrade, COMDAT

; 108  : 	{

	push	ebp
	mov	ebp, esp

; 109  : 		return BasicLuaMethod(L, &CvDeal::AddGoldTrade);

	push	OFFSET ?AddGoldTrade@CvDeal@@QAEXW4PlayerTypes@@H@Z ; CvDeal::AddGoldTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,int>
	add	esp, 8

; 110  : 	};

	pop	ebp
	ret	0
?lAddGoldTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lAddGoldTrade
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@HH@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@HH@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,int,int>
EXTRN	?AddGoldPerTurnTrade@CvDeal@@QAEXW4PlayerTypes@@HH@Z:PROC ; CvDeal::AddGoldPerTurnTrade
; Function compile flags: /Odtp
;	COMDAT ?lAddGoldPerTurnTrade@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddGoldPerTurnTrade@CvLuaDeal@@KAHPAUlua_State@@@Z PROC ; CvLuaDeal::lAddGoldPerTurnTrade, COMDAT

; 112  : 	{

	push	ebp
	mov	ebp, esp

; 113  : 		return BasicLuaMethod(L, &CvDeal::AddGoldPerTurnTrade);

	push	OFFSET ?AddGoldPerTurnTrade@CvDeal@@QAEXW4PlayerTypes@@HH@Z ; CvDeal::AddGoldPerTurnTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@HH@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@HH@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,int,int>
	add	esp, 8

; 114  : 	};

	pop	ebp
	ret	0
?lAddGoldPerTurnTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP ; CvLuaDeal::lAddGoldPerTurnTrade
_TEXT	ENDS
EXTRN	?AddMapTrade@CvDeal@@QAEXW4PlayerTypes@@@Z:PROC	; CvDeal::AddMapTrade
; Function compile flags: /Odtp
;	COMDAT ?lAddMapTrade@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddMapTrade@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lAddMapTrade, COMDAT

; 116  : 	{

	push	ebp
	mov	ebp, esp

; 117  : 		return BasicLuaMethod(L, &CvDeal::AddMapTrade);

	push	OFFSET ?AddMapTrade@CvDeal@@QAEXW4PlayerTypes@@@Z ; CvDeal::AddMapTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 118  : 	};

	pop	ebp
	ret	0
?lAddMapTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lAddMapTrade
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@W4ResourceTypes@@HH@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@W4ResourceTypes@@HH@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum ResourceTypes,int,int>
EXTRN	?AddResourceTrade@CvDeal@@QAEXW4PlayerTypes@@W4ResourceTypes@@HH@Z:PROC ; CvDeal::AddResourceTrade
; Function compile flags: /Odtp
;	COMDAT ?lAddResourceTrade@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddResourceTrade@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lAddResourceTrade, COMDAT

; 120  : 	{

	push	ebp
	mov	ebp, esp

; 121  : 		return BasicLuaMethod(L, &CvDeal::AddResourceTrade);

	push	OFFSET ?AddResourceTrade@CvDeal@@QAEXW4PlayerTypes@@W4ResourceTypes@@HH@Z ; CvDeal::AddResourceTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@W4ResourceTypes@@HH@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@W4ResourceTypes@@HH@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum ResourceTypes,int,int>
	add	esp, 8

; 122  : 	};

	pop	ebp
	ret	0
?lAddResourceTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lAddResourceTrade
_TEXT	ENDS
EXTRN	?AddCityTrade@CvDeal@@QAEXW4PlayerTypes@@H@Z:PROC ; CvDeal::AddCityTrade
; Function compile flags: /Odtp
;	COMDAT ?lAddCityTrade@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddCityTrade@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lAddCityTrade, COMDAT

; 124  : 	{

	push	ebp
	mov	ebp, esp

; 125  : 		return BasicLuaMethod(L, &CvDeal::AddCityTrade);

	push	OFFSET ?AddCityTrade@CvDeal@@QAEXW4PlayerTypes@@H@Z ; CvDeal::AddCityTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,int>
	add	esp, 8

; 126  : 	};

	pop	ebp
	ret	0
?lAddCityTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lAddCityTrade
_TEXT	ENDS
EXTRN	?AddUnitTrade@CvDeal@@QAEXW4PlayerTypes@@H@Z:PROC ; CvDeal::AddUnitTrade
; Function compile flags: /Odtp
;	COMDAT ?lAddUnitTrade@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddUnitTrade@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lAddUnitTrade, COMDAT

; 128  : 	{

	push	ebp
	mov	ebp, esp

; 129  : 		return BasicLuaMethod(L, &CvDeal::AddUnitTrade);

	push	OFFSET ?AddUnitTrade@CvDeal@@QAEXW4PlayerTypes@@H@Z ; CvDeal::AddUnitTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,int>
	add	esp, 8

; 130  : 	};

	pop	ebp
	ret	0
?lAddUnitTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lAddUnitTrade
_TEXT	ENDS
EXTRN	?AddAllowEmbassy@CvDeal@@QAEXW4PlayerTypes@@@Z:PROC ; CvDeal::AddAllowEmbassy
; Function compile flags: /Odtp
;	COMDAT ?lAddAllowEmbassy@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddAllowEmbassy@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lAddAllowEmbassy, COMDAT

; 132  : 	{

	push	ebp
	mov	ebp, esp

; 133  : 		return BasicLuaMethod(L, &CvDeal::AddAllowEmbassy);

	push	OFFSET ?AddAllowEmbassy@CvDeal@@QAEXW4PlayerTypes@@@Z ; CvDeal::AddAllowEmbassy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 134  : 	};

	pop	ebp
	ret	0
?lAddAllowEmbassy@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lAddAllowEmbassy
_TEXT	ENDS
EXTRN	?AddOpenBorders@CvDeal@@QAEXW4PlayerTypes@@H@Z:PROC ; CvDeal::AddOpenBorders
; Function compile flags: /Odtp
;	COMDAT ?lAddOpenBorders@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddOpenBorders@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lAddOpenBorders, COMDAT

; 136  : 	{

	push	ebp
	mov	ebp, esp

; 137  : 		return BasicLuaMethod(L, &CvDeal::AddOpenBorders);

	push	OFFSET ?AddOpenBorders@CvDeal@@QAEXW4PlayerTypes@@H@Z ; CvDeal::AddOpenBorders
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,int>
	add	esp, 8

; 138  : 	};

	pop	ebp
	ret	0
?lAddOpenBorders@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lAddOpenBorders
_TEXT	ENDS
EXTRN	?AddDefensivePact@CvDeal@@QAEXW4PlayerTypes@@H@Z:PROC ; CvDeal::AddDefensivePact
; Function compile flags: /Odtp
;	COMDAT ?lAddDefensivePact@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddDefensivePact@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lAddDefensivePact, COMDAT

; 140  : 	{

	push	ebp
	mov	ebp, esp

; 141  : 		return BasicLuaMethod(L, &CvDeal::AddDefensivePact);

	push	OFFSET ?AddDefensivePact@CvDeal@@QAEXW4PlayerTypes@@H@Z ; CvDeal::AddDefensivePact
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,int>
	add	esp, 8

; 142  : 	};

	pop	ebp
	ret	0
?lAddDefensivePact@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lAddDefensivePact
_TEXT	ENDS
EXTRN	?AddResearchAgreement@CvDeal@@QAEXW4PlayerTypes@@H@Z:PROC ; CvDeal::AddResearchAgreement
; Function compile flags: /Odtp
;	COMDAT ?lAddResearchAgreement@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddResearchAgreement@CvLuaDeal@@KAHPAUlua_State@@@Z PROC ; CvLuaDeal::lAddResearchAgreement, COMDAT

; 144  : 	{

	push	ebp
	mov	ebp, esp

; 145  : 		return BasicLuaMethod(L, &CvDeal::AddResearchAgreement);

	push	OFFSET ?AddResearchAgreement@CvDeal@@QAEXW4PlayerTypes@@H@Z ; CvDeal::AddResearchAgreement
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,int>
	add	esp, 8

; 146  : 	};

	pop	ebp
	ret	0
?lAddResearchAgreement@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP ; CvLuaDeal::lAddResearchAgreement
_TEXT	ENDS
EXTRN	?AddTradeAgreement@CvDeal@@QAEXW4PlayerTypes@@H@Z:PROC ; CvDeal::AddTradeAgreement
; Function compile flags: /Odtp
;	COMDAT ?lAddTradeAgreement@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddTradeAgreement@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lAddTradeAgreement, COMDAT

; 148  : 	{

	push	ebp
	mov	ebp, esp

; 149  : 		return BasicLuaMethod(L, &CvDeal::AddTradeAgreement);

	push	OFFSET ?AddTradeAgreement@CvDeal@@QAEXW4PlayerTypes@@H@Z ; CvDeal::AddTradeAgreement
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,int>
	add	esp, 8

; 150  : 	};

	pop	ebp
	ret	0
?lAddTradeAgreement@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lAddTradeAgreement
_TEXT	ENDS
EXTRN	?AddPermamentAlliance@CvDeal@@QAEXXZ:PROC	; CvDeal::AddPermamentAlliance
; Function compile flags: /Odtp
;	COMDAT ?lAddPermamentAlliance@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddPermamentAlliance@CvLuaDeal@@KAHPAUlua_State@@@Z PROC ; CvLuaDeal::lAddPermamentAlliance, COMDAT

; 152  : 	{

	push	ebp
	mov	ebp, esp

; 153  : 		return BasicLuaMethod(L, &CvDeal::AddPermamentAlliance);

	push	OFFSET ?AddPermamentAlliance@CvDeal@@QAEXXZ ; CvDeal::AddPermamentAlliance
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod
	add	esp, 8

; 154  : 	};

	pop	ebp
	ret	0
?lAddPermamentAlliance@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP ; CvLuaDeal::lAddPermamentAlliance
_TEXT	ENDS
EXTRN	?AddSurrender@CvDeal@@QAEXW4PlayerTypes@@@Z:PROC ; CvDeal::AddSurrender
; Function compile flags: /Odtp
;	COMDAT ?lAddSurrender@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddSurrender@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lAddSurrender, COMDAT

; 156  : 	{

	push	ebp
	mov	ebp, esp

; 157  : 		return BasicLuaMethod(L, &CvDeal::AddSurrender);

	push	OFFSET ?AddSurrender@CvDeal@@QAEXW4PlayerTypes@@@Z ; CvDeal::AddSurrender
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 158  : 	};

	pop	ebp
	ret	0
?lAddSurrender@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lAddSurrender
_TEXT	ENDS
EXTRN	?AddTruce@CvDeal@@QAEXXZ:PROC			; CvDeal::AddTruce
; Function compile flags: /Odtp
;	COMDAT ?lAddTruce@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddTruce@CvLuaDeal@@KAHPAUlua_State@@@Z PROC		; CvLuaDeal::lAddTruce, COMDAT

; 160  : 	{

	push	ebp
	mov	ebp, esp

; 161  : 		return BasicLuaMethod(L, &CvDeal::AddTruce);

	push	OFFSET ?AddTruce@CvDeal@@QAEXXZ		; CvDeal::AddTruce
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod
	add	esp, 8

; 162  : 	};

	pop	ebp
	ret	0
?lAddTruce@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP		; CvLuaDeal::lAddTruce
_TEXT	ENDS
EXTRN	?AddPeaceTreaty@CvDeal@@QAEXW4PlayerTypes@@H@Z:PROC ; CvDeal::AddPeaceTreaty
; Function compile flags: /Odtp
;	COMDAT ?lAddPeaceTreaty@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddPeaceTreaty@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lAddPeaceTreaty, COMDAT

; 164  : 	{

	push	ebp
	mov	ebp, esp

; 165  : 		return BasicLuaMethod(L, &CvDeal::AddPeaceTreaty);

	push	OFFSET ?AddPeaceTreaty@CvDeal@@QAEXW4PlayerTypes@@H@Z ; CvDeal::AddPeaceTreaty
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,int>
	add	esp, 8

; 166  : 	};

	pop	ebp
	ret	0
?lAddPeaceTreaty@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lAddPeaceTreaty
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@W4TeamTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum TeamTypes,int>
EXTRN	?AddThirdPartyPeace@CvDeal@@QAEXW4PlayerTypes@@W4TeamTypes@@H@Z:PROC ; CvDeal::AddThirdPartyPeace
; Function compile flags: /Odtp
;	COMDAT ?lAddThirdPartyPeace@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddThirdPartyPeace@CvLuaDeal@@KAHPAUlua_State@@@Z PROC ; CvLuaDeal::lAddThirdPartyPeace, COMDAT

; 168  : 	{

	push	ebp
	mov	ebp, esp

; 169  : 		return BasicLuaMethod(L, &CvDeal::AddThirdPartyPeace);

	push	OFFSET ?AddThirdPartyPeace@CvDeal@@QAEXW4PlayerTypes@@W4TeamTypes@@H@Z ; CvDeal::AddThirdPartyPeace
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@W4TeamTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum TeamTypes,int>
	add	esp, 8

; 170  : 	};

	pop	ebp
	ret	0
?lAddThirdPartyPeace@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP ; CvLuaDeal::lAddThirdPartyPeace
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@W4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum TeamTypes>
EXTRN	?AddThirdPartyWar@CvDeal@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z:PROC ; CvDeal::AddThirdPartyWar
; Function compile flags: /Odtp
;	COMDAT ?lAddThirdPartyWar@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddThirdPartyWar@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lAddThirdPartyWar, COMDAT

; 172  : 	{

	push	ebp
	mov	ebp, esp

; 173  : 		return BasicLuaMethod(L, &CvDeal::AddThirdPartyWar);

	push	OFFSET ?AddThirdPartyWar@CvDeal@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z ; CvDeal::AddThirdPartyWar
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@W4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum TeamTypes>
	add	esp, 8

; 174  : 	};

	pop	ebp
	ret	0
?lAddThirdPartyWar@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lAddThirdPartyWar
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@W41@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@1H@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum PlayerTypes,int>
EXTRN	?AddThirdPartyEmbargo@CvDeal@@QAEXW4PlayerTypes@@0H@Z:PROC ; CvDeal::AddThirdPartyEmbargo
; Function compile flags: /Odtp
;	COMDAT ?lAddThirdPartyEmbargo@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddThirdPartyEmbargo@CvLuaDeal@@KAHPAUlua_State@@@Z PROC ; CvLuaDeal::lAddThirdPartyEmbargo, COMDAT

; 176  : 	{

	push	ebp
	mov	ebp, esp

; 177  : 		return BasicLuaMethod(L, &CvDeal::AddThirdPartyEmbargo);

	push	OFFSET ?AddThirdPartyEmbargo@CvDeal@@QAEXW4PlayerTypes@@0H@Z ; CvDeal::AddThirdPartyEmbargo
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@W41@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@1H@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum PlayerTypes,int>
	add	esp, 8

; 178  : 	};

	pop	ebp
	ret	0
?lAddThirdPartyEmbargo@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP ; CvLuaDeal::lAddThirdPartyEmbargo
_TEXT	ENDS
EXTRN	?AddDeclarationOfFriendship@CvDeal@@QAEXW4PlayerTypes@@@Z:PROC ; CvDeal::AddDeclarationOfFriendship
; Function compile flags: /Odtp
;	COMDAT ?lAddDeclarationOfFriendship@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddDeclarationOfFriendship@CvLuaDeal@@KAHPAUlua_State@@@Z PROC ; CvLuaDeal::lAddDeclarationOfFriendship, COMDAT

; 181  : 	{

	push	ebp
	mov	ebp, esp

; 182  : 		return BasicLuaMethod(L, &CvDeal::AddDeclarationOfFriendship);

	push	OFFSET ?AddDeclarationOfFriendship@CvDeal@@QAEXW4PlayerTypes@@@Z ; CvDeal::AddDeclarationOfFriendship
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 183  : 	};

	pop	ebp
	ret	0
?lAddDeclarationOfFriendship@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP ; CvLuaDeal::lAddDeclarationOfFriendship
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AE_NW4PlayerTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<bool,enum PlayerTypes,int>
EXTRN	?ChangeGoldTrade@CvDeal@@QAE_NW4PlayerTypes@@H@Z:PROC ; CvDeal::ChangeGoldTrade
; Function compile flags: /Odtp
;	COMDAT ?lChangeGoldTrade@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeGoldTrade@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lChangeGoldTrade, COMDAT

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		return BasicLuaMethod(L, &CvDeal::ChangeGoldTrade);

	push	OFFSET ?ChangeGoldTrade@CvDeal@@QAE_NW4PlayerTypes@@H@Z ; CvDeal::ChangeGoldTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AE_NW4PlayerTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<bool,enum PlayerTypes,int>
	add	esp, 8

; 190  : 	};

	pop	ebp
	ret	0
?lChangeGoldTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lChangeGoldTrade
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4PlayerTypes@@HH@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AE_NW4PlayerTypes@@HH@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<bool,enum PlayerTypes,int,int>
EXTRN	?ChangeGoldPerTurnTrade@CvDeal@@QAE_NW4PlayerTypes@@HH@Z:PROC ; CvDeal::ChangeGoldPerTurnTrade
; Function compile flags: /Odtp
;	COMDAT ?lChangeGoldPerTurnTrade@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeGoldPerTurnTrade@CvLuaDeal@@KAHPAUlua_State@@@Z PROC ; CvLuaDeal::lChangeGoldPerTurnTrade, COMDAT

; 192  : 	{

	push	ebp
	mov	ebp, esp

; 193  : 		return BasicLuaMethod(L, &CvDeal::ChangeGoldPerTurnTrade);

	push	OFFSET ?ChangeGoldPerTurnTrade@CvDeal@@QAE_NW4PlayerTypes@@HH@Z ; CvDeal::ChangeGoldPerTurnTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4PlayerTypes@@HH@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AE_NW4PlayerTypes@@HH@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<bool,enum PlayerTypes,int,int>
	add	esp, 8

; 194  : 	};

	pop	ebp
	ret	0
?lChangeGoldPerTurnTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP ; CvLuaDeal::lChangeGoldPerTurnTrade
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4PlayerTypes@@W4ResourceTypes@@HH@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AE_NW4PlayerTypes@@W4ResourceTypes@@HH@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<bool,enum PlayerTypes,enum ResourceTypes,int,int>
EXTRN	?ChangeResourceTrade@CvDeal@@QAE_NW4PlayerTypes@@W4ResourceTypes@@HH@Z:PROC ; CvDeal::ChangeResourceTrade
; Function compile flags: /Odtp
;	COMDAT ?lChangeResourceTrade@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeResourceTrade@CvLuaDeal@@KAHPAUlua_State@@@Z PROC ; CvLuaDeal::lChangeResourceTrade, COMDAT

; 196  : 	{

	push	ebp
	mov	ebp, esp

; 197  : 		return BasicLuaMethod(L, &CvDeal::ChangeResourceTrade);

	push	OFFSET ?ChangeResourceTrade@CvDeal@@QAE_NW4PlayerTypes@@W4ResourceTypes@@HH@Z ; CvDeal::ChangeResourceTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4PlayerTypes@@W4ResourceTypes@@HH@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AE_NW4PlayerTypes@@W4ResourceTypes@@HH@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<bool,enum PlayerTypes,enum ResourceTypes,int,int>
	add	esp, 8

; 198  : 	};

	pop	ebp
	ret	0
?lChangeResourceTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP ; CvLuaDeal::lChangeResourceTrade
_TEXT	ENDS
EXTRN	?ChangeThirdPartyWarDuration@CvDeal@@QAEXW4PlayerTypes@@W4TeamTypes@@H@Z:PROC ; CvDeal::ChangeThirdPartyWarDuration
; Function compile flags: /Odtp
;	COMDAT ?lChangeThirdPartyWarDuration@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeThirdPartyWarDuration@CvLuaDeal@@KAHPAUlua_State@@@Z PROC ; CvLuaDeal::lChangeThirdPartyWarDuration, COMDAT

; 200  : 	{

	push	ebp
	mov	ebp, esp

; 201  : 		return BasicLuaMethod(L, &CvDeal::ChangeThirdPartyWarDuration);

	push	OFFSET ?ChangeThirdPartyWarDuration@CvDeal@@QAEXW4PlayerTypes@@W4TeamTypes@@H@Z ; CvDeal::ChangeThirdPartyWarDuration
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@W4TeamTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum TeamTypes,int>
	add	esp, 8

; 202  : 	};

	pop	ebp
	ret	0
?lChangeThirdPartyWarDuration@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP ; CvLuaDeal::lChangeThirdPartyWarDuration
_TEXT	ENDS
EXTRN	?ChangeThirdPartyPeaceDuration@CvDeal@@QAEXW4PlayerTypes@@W4TeamTypes@@H@Z:PROC ; CvDeal::ChangeThirdPartyPeaceDuration
; Function compile flags: /Odtp
;	COMDAT ?lChangeThirdPartyPeaceDuration@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeThirdPartyPeaceDuration@CvLuaDeal@@KAHPAUlua_State@@@Z PROC ; CvLuaDeal::lChangeThirdPartyPeaceDuration, COMDAT

; 204  : 	{

	push	ebp
	mov	ebp, esp

; 205  : 		return BasicLuaMethod(L, &CvDeal::ChangeThirdPartyPeaceDuration);

	push	OFFSET ?ChangeThirdPartyPeaceDuration@CvDeal@@QAEXW4PlayerTypes@@W4TeamTypes@@H@Z ; CvDeal::ChangeThirdPartyPeaceDuration
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@W4TeamTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum TeamTypes,int>
	add	esp, 8

; 206  : 	};

	pop	ebp
	ret	0
?lChangeThirdPartyPeaceDuration@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP ; CvLuaDeal::lChangeThirdPartyPeaceDuration
_TEXT	ENDS
EXTRN	?ChangeThirdPartyEmbargoDuration@CvDeal@@QAEXW4PlayerTypes@@0H@Z:PROC ; CvDeal::ChangeThirdPartyEmbargoDuration
; Function compile flags: /Odtp
;	COMDAT ?lChangeThirdPartyEmbargoDuration@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeThirdPartyEmbargoDuration@CvLuaDeal@@KAHPAUlua_State@@@Z PROC ; CvLuaDeal::lChangeThirdPartyEmbargoDuration, COMDAT

; 208  : 	{

	push	ebp
	mov	ebp, esp

; 209  : 		return BasicLuaMethod(L, &CvDeal::ChangeThirdPartyEmbargoDuration);

	push	OFFSET ?ChangeThirdPartyEmbargoDuration@CvDeal@@QAEXW4PlayerTypes@@0H@Z ; CvDeal::ChangeThirdPartyEmbargoDuration
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@W41@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@1H@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum PlayerTypes,int>
	add	esp, 8

; 210  : 	};

	pop	ebp
	ret	0
?lChangeThirdPartyEmbargoDuration@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP ; CvLuaDeal::lChangeThirdPartyEmbargoDuration
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4ResourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum ResourceTypes>
EXTRN	?RemoveResourceTrade@CvDeal@@QAEXW4ResourceTypes@@@Z:PROC ; CvDeal::RemoveResourceTrade
; Function compile flags: /Odtp
;	COMDAT ?lRemoveResourceTrade@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lRemoveResourceTrade@CvLuaDeal@@KAHPAUlua_State@@@Z PROC ; CvLuaDeal::lRemoveResourceTrade, COMDAT

; 214  : 	{

	push	ebp
	mov	ebp, esp

; 215  : 		return BasicLuaMethod(L, &CvDeal::RemoveResourceTrade);

	push	OFFSET ?RemoveResourceTrade@CvDeal@@QAEXW4ResourceTypes@@@Z ; CvDeal::RemoveResourceTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4ResourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum ResourceTypes>
	add	esp, 8

; 216  : 	};

	pop	ebp
	ret	0
?lRemoveResourceTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP ; CvLuaDeal::lRemoveResourceTrade
_TEXT	ENDS
EXTRN	?RemoveCityTrade@CvDeal@@QAEXW4PlayerTypes@@H@Z:PROC ; CvDeal::RemoveCityTrade
; Function compile flags: /Odtp
;	COMDAT ?lRemoveCityTrade@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lRemoveCityTrade@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lRemoveCityTrade, COMDAT

; 218  : 	{

	push	ebp
	mov	ebp, esp

; 219  : 		return BasicLuaMethod(L, &CvDeal::RemoveCityTrade);

	push	OFFSET ?RemoveCityTrade@CvDeal@@QAEXW4PlayerTypes@@H@Z ; CvDeal::RemoveCityTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,int>
	add	esp, 8

; 220  : 	};

	pop	ebp
	ret	0
?lRemoveCityTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lRemoveCityTrade
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<int>
EXTRN	?RemoveUnitTrade@CvDeal@@QAEXH@Z:PROC		; CvDeal::RemoveUnitTrade
; Function compile flags: /Odtp
;	COMDAT ?lRemoveUnitTrade@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lRemoveUnitTrade@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lRemoveUnitTrade, COMDAT

; 222  : 	{

	push	ebp
	mov	ebp, esp

; 223  : 		return BasicLuaMethod(L, &CvDeal::RemoveUnitTrade);

	push	OFFSET ?RemoveUnitTrade@CvDeal@@QAEXH@Z	; CvDeal::RemoveUnitTrade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<int>
	add	esp, 8

; 224  : 	};

	pop	ebp
	ret	0
?lRemoveUnitTrade@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lRemoveUnitTrade
_TEXT	ENDS
EXTRN	?RemoveThirdPartyPeace@CvDeal@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z:PROC ; CvDeal::RemoveThirdPartyPeace
; Function compile flags: /Odtp
;	COMDAT ?lRemoveThirdPartyPeace@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lRemoveThirdPartyPeace@CvLuaDeal@@KAHPAUlua_State@@@Z PROC ; CvLuaDeal::lRemoveThirdPartyPeace, COMDAT

; 226  : 	{

	push	ebp
	mov	ebp, esp

; 227  : 		return BasicLuaMethod(L, &CvDeal::RemoveThirdPartyPeace);

	push	OFFSET ?RemoveThirdPartyPeace@CvDeal@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z ; CvDeal::RemoveThirdPartyPeace
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@W4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum TeamTypes>
	add	esp, 8

; 228  : 	};

	pop	ebp
	ret	0
?lRemoveThirdPartyPeace@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP ; CvLuaDeal::lRemoveThirdPartyPeace
_TEXT	ENDS
EXTRN	?RemoveThirdPartyWar@CvDeal@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z:PROC ; CvDeal::RemoveThirdPartyWar
; Function compile flags: /Odtp
;	COMDAT ?lRemoveThirdPartyWar@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lRemoveThirdPartyWar@CvLuaDeal@@KAHPAUlua_State@@@Z PROC ; CvLuaDeal::lRemoveThirdPartyWar, COMDAT

; 230  : 	{

	push	ebp
	mov	ebp, esp

; 231  : 		return BasicLuaMethod(L, &CvDeal::RemoveThirdPartyWar);

	push	OFFSET ?RemoveThirdPartyWar@CvDeal@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z ; CvDeal::RemoveThirdPartyWar
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@W4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum TeamTypes>
	add	esp, 8

; 232  : 	};

	pop	ebp
	ret	0
?lRemoveThirdPartyWar@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP ; CvLuaDeal::lRemoveThirdPartyWar
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@W41@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@1@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum PlayerTypes>
EXTRN	?RemoveThirdPartyEmbargo@CvDeal@@QAEXW4PlayerTypes@@0@Z:PROC ; CvDeal::RemoveThirdPartyEmbargo
; Function compile flags: /Odtp
;	COMDAT ?lRemoveThirdPartyEmbargo@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lRemoveThirdPartyEmbargo@CvLuaDeal@@KAHPAUlua_State@@@Z PROC ; CvLuaDeal::lRemoveThirdPartyEmbargo, COMDAT

; 234  : 	{

	push	ebp
	mov	ebp, esp

; 235  : 		return BasicLuaMethod(L, &CvDeal::RemoveThirdPartyEmbargo);

	push	OFFSET ?RemoveThirdPartyEmbargo@CvDeal@@QAEXW4PlayerTypes@@0@Z ; CvDeal::RemoveThirdPartyEmbargo
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@W41@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@1@Z@Z ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum PlayerTypes>
	add	esp, 8

; 236  : 	};

	pop	ebp
	ret	0
?lRemoveThirdPartyEmbargo@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP ; CvLuaDeal::lRemoveThirdPartyEmbargo
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
EXTRN	?RemoveByType@CvDeal@@QAEXW4TradeableItems@@W4PlayerTypes@@@Z:PROC ; CvDeal::RemoveByType
EXTRN	_lua_tointeger:PROC
EXTRN	_lua_gettop:PROC
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluadeal.cpp
;	COMDAT ?lRemoveByType@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkDeal$ = -8						; size = 4
_args$ = -4						; size = 4
_L$ = 8							; size = 4
?lRemoveByType@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lRemoveByType, COMDAT

; 93   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 94   : 	CvDeal* pkDeal = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkDeal$[ebp], eax

; 95   : 	int args = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _args$[ebp], eax

; 96   : 
; 97   : 	if(args == 1)

	cmp	DWORD PTR _args$[ebp], 1
	jne	SHORT $LN2@lRemoveByT

; 98   : 		pkDeal->RemoveByType((TradeableItems) lua_tointeger(L, 2), NO_PLAYER);

	push	-1
	push	2
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkDeal$[ebp]
	call	?RemoveByType@CvDeal@@QAEXW4TradeableItems@@W4PlayerTypes@@@Z ; CvDeal::RemoveByType

; 99   : 	else

	jmp	SHORT $LN1@lRemoveByT
$LN2@lRemoveByT:

; 100  : 		pkDeal->RemoveByType((TradeableItems) lua_tointeger(L, 2), (PlayerTypes) lua_tointeger(L, 3));

	push	3
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkDeal$[ebp]
	call	?RemoveByType@CvDeal@@QAEXW4TradeableItems@@W4PlayerTypes@@@Z ; CvDeal::RemoveByType
$LN1@lRemoveByT:

; 101  : 
; 102  : 	return 0;

	xor	eax, eax

; 103  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lRemoveByType@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lRemoveByType
_TEXT	ENDS
PUBLIC	?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@KAXPAUlua_State@@@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::DefaultHandleMissingInstance
PUBLIC	?HandleMissingInstance@CvLuaDeal@@SAXPAUlua_State@@@Z ; CvLuaDeal::HandleMissingInstance
; Function compile flags: /Odtp
;	COMDAT ?HandleMissingInstance@CvLuaDeal@@SAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?HandleMissingInstance@CvLuaDeal@@SAXPAUlua_State@@@Z PROC ; CvLuaDeal::HandleMissingInstance, COMDAT

; 108  : {

	push	ebp
	mov	ebp, esp

; 109  : 	DefaultHandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@KAXPAUlua_State@@@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::DefaultHandleMissingInstance
	add	esp, 4

; 110  : }

	pop	ebp
	ret	0
?HandleMissingInstance@CvLuaDeal@@SAXPAUlua_State@@@Z ENDP ; CvLuaDeal::HandleMissingInstance
_TEXT	ENDS
PUBLIC	??_C@_04BIALHEOG@Deal?$AA@			; `string'
PUBLIC	?GetTypeName@CvLuaDeal@@SAPBDXZ			; CvLuaDeal::GetTypeName
;	COMDAT ??_C@_04BIALHEOG@Deal?$AA@
CONST	SEGMENT
??_C@_04BIALHEOG@Deal?$AA@ DB 'Deal', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?GetTypeName@CvLuaDeal@@SAPBDXZ
_TEXT	SEGMENT
?GetTypeName@CvLuaDeal@@SAPBDXZ PROC			; CvLuaDeal::GetTypeName, COMDAT

; 113  : {

	push	ebp
	mov	ebp, esp

; 114  : 	return "Deal";

	mov	eax, OFFSET ??_C@_04BIALHEOG@Deal?$AA@

; 115  : }

	pop	ebp
	ret	0
?GetTypeName@CvLuaDeal@@SAPBDXZ ENDP			; CvLuaDeal::GetTypeName
_TEXT	ENDS
EXTRN	_lua_pushboolean:PROC
EXTRN	?IsPossibleToTradeItem@CvDeal@@QAE_NW4PlayerTypes@@0W4TradeableItems@@HHH_N22@Z:PROC ; CvDeal::IsPossibleToTradeItem
EXTRN	_lua_toboolean:PROC
; Function compile flags: /Odtp
;	COMDAT ?lIsPossibleToTradeItem@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eItem$ = -32						; size = 4
_bResult$ = -26						; size = 1
_bFlag1$ = -25						; size = 1
_eFromPlayer$ = -24					; size = 4
_iData3$ = -20						; size = 4
_pkDeal$ = -16						; size = 4
_iData1$ = -12						; size = 4
_eToPlayer$ = -8					; size = 4
_iData2$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsPossibleToTradeItem@CvLuaDeal@@KAHPAUlua_State@@@Z PROC ; CvLuaDeal::lIsPossibleToTradeItem, COMDAT

; 124  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 125  : 	CvDeal* pkDeal = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkDeal$[ebp], eax

; 126  : 	const PlayerTypes eFromPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eFromPlayer$[ebp], eax

; 127  : 	const PlayerTypes eToPlayer = (PlayerTypes) lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eToPlayer$[ebp], eax

; 128  : 	const TradeableItems eItem = (TradeableItems) lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eItem$[ebp], eax

; 129  : 	const int iData1 = lua_tointeger(L, 5);

	push	5
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iData1$[ebp], eax

; 130  : 	const int iData2 = lua_tointeger(L, 6);

	push	6
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iData2$[ebp], eax

; 131  : 	const int iData3 = lua_tointeger(L, 7);

	push	7
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iData3$[ebp], eax

; 132  : 	const bool bFlag1 = lua_toboolean(L, 8);

	push	8
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bFlag1$[ebp], dl

; 133  : 
; 134  : 	const bool bResult = pkDeal->IsPossibleToTradeItem(eFromPlayer, eToPlayer, eItem, iData1, iData2, iData3, bFlag1);

	push	0
	push	1
	movzx	eax, BYTE PTR _bFlag1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iData3$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iData2$[ebp]
	push	edx
	mov	eax, DWORD PTR _iData1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eItem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eToPlayer$[ebp]
	push	edx
	mov	eax, DWORD PTR _eFromPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkDeal$[ebp]
	call	?IsPossibleToTradeItem@CvDeal@@QAE_NW4PlayerTypes@@0W4TradeableItems@@HHH_N22@Z ; CvDeal::IsPossibleToTradeItem
	mov	BYTE PTR _bResult$[ebp], al

; 135  : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 136  : 	return 1;

	mov	eax, 1

; 137  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPossibleToTradeItem@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP ; CvLuaDeal::lIsPossibleToTradeItem
_TEXT	ENDS
EXTRN	_lua_pushinteger:PROC
EXTRN	?GetNumResource@CvDeal@@QAEHW4PlayerTypes@@W4ResourceTypes@@@Z:PROC ; CvDeal::GetNumResource
; Function compile flags: /Odtp
;	COMDAT ?lGetNumResource@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -16						; size = 4
_iResult$ = -12						; size = 4
_pkDeal$ = -8						; size = 4
_eResource$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetNumResource@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lGetNumResource, COMDAT

; 141  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 142  : 	CvDeal* pkDeal = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkDeal$[ebp], eax

; 143  : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 144  : 	const ResourceTypes eResource = (ResourceTypes) lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eResource$[ebp], eax

; 145  : 	int iResult = pkDeal->GetNumResource(ePlayer, eResource);

	mov	eax, DWORD PTR _eResource$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkDeal$[ebp]
	call	?GetNumResource@CvDeal@@QAEHW4PlayerTypes@@W4ResourceTypes@@@Z ; CvDeal::GetNumResource
	mov	DWORD PTR _iResult$[ebp], eax

; 146  : 	lua_pushinteger(L, iResult);

	mov	edx, DWORD PTR _iResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 147  : 	return 1;

	mov	eax, 1

; 148  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumResource@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lGetNumResource
_TEXT	ENDS
PUBLIC	?begin@?$FFastList@UCvTradedItem@@$0BF@$0A@@@QAE?AViterator@1@XZ ; FFastList<CvTradedItem,21,0>::begin
; Function compile flags: /Odtp
;	COMDAT ?lResetIterator@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv76 = -16						; size = 4
$T218736 = -12						; size = 8
_pkDeal$ = -4						; size = 4
_L$ = 8							; size = 4
?lResetIterator@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lResetIterator, COMDAT

; 152  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 153  : 	CvDeal* pkDeal = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkDeal$[ebp], eax

; 154  : 	m_iterator = pkDeal->m_TradedItems.begin();

	lea	ecx, DWORD PTR $T218736[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkDeal$[ebp]
	add	ecx, 44					; 0000002cH
	call	?begin@?$FFastList@UCvTradedItem@@$0BF@$0A@@@QAE?AViterator@1@XZ ; FFastList<CvTradedItem,21,0>::begin
	mov	DWORD PTR tv76[ebp], eax
	mov	edx, DWORD PTR tv76[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR ?m_iterator@CvLuaDeal@@1Viterator@?$FFastList@UCvTradedItem@@$0BF@$0A@@@A, eax
	mov	DWORD PTR ?m_iterator@CvLuaDeal@@1Viterator@?$FFastList@UCvTradedItem@@$0BF@$0A@@@A+4, ecx

; 155  : 	return 0;

	xor	eax, eax

; 156  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lResetIterator@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lResetIterator
_TEXT	ENDS
PUBLIC	??E?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@UCvTradedItem@@@@V?$FFastAllocator@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@$0BF@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@$0BF@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@UCvTradedItem@@@@V?$FFastAllocator@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@$0BF@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@$0BF@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@@@@@@@@@QAE?BV01@H@Z ; FCustomList_Core<MultiListNodePolicy<CvTradedItem>,FFastAllocator<MultiListNodePolicy<CvTradedItem>,0,21,0,BaseVector<MultiListNodePolicy<CvTradedItem>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvTradedItem>,0,21,0,BaseVector<MultiListNodePolicy<CvTradedItem>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvTradedItem>,FFastAllocator<MultiListNodePolicy<CvTradedItem>,0,21,0,BaseVector<MultiListNodePolicy<CvTradedItem>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvTradedItem>,0,21,0,BaseVector<MultiListNodePolicy<CvTradedItem>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::operator++
PUBLIC	?end@?$FFastList@UCvTradedItem@@$0BF@$0A@@@QAE?AViterator@1@XZ ; FFastList<CvTradedItem,21,0>::end
; Function compile flags: /Odtp
;	COMDAT ?lGetNextItem@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T218788 = -36						; size = 4
$T218765 = -32						; size = 4
$T218759 = -28						; size = 8
$T218758 = -20						; size = 8
$T218757 = -9						; size = 1
_item$ = -8						; size = 4
_pkDeal$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNextItem@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lGetNextItem, COMDAT

; 160  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H

; 161  : 	CvDeal* pkDeal = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkDeal$[ebp], eax

; 162  : 
; 163  : 	if(m_iterator == pkDeal->m_TradedItems.end())

	lea	ecx, DWORD PTR $T218758[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkDeal$[ebp]
	add	ecx, 44					; 0000002cH
	call	?end@?$FFastList@UCvTradedItem@@$0BF@$0A@@@QAE?AViterator@1@XZ ; FFastList<CvTradedItem,21,0>::end
	mov	DWORD PTR $T218765[ebp], eax
	mov	edx, DWORD PTR $T218765[ebp]
	mov	eax, DWORD PTR ?m_iterator@CvLuaDeal@@1Viterator@?$FFastList@UCvTradedItem@@$0BF@$0A@@@A+4
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx+4]
	sete	cl
	mov	BYTE PTR $T218757[ebp], cl
	movzx	edx, BYTE PTR $T218757[ebp]
	test	edx, edx
	je	SHORT $LN1@lGetNextIt

; 164  : 		return 0;

	xor	eax, eax
	jmp	$LN2@lGetNextIt
$LN1@lGetNextIt:

; 165  : 
; 166  : 	const CvTradedItem& item = (*m_iterator);

	mov	eax, DWORD PTR ?m_iterator@CvLuaDeal@@1Viterator@?$FFastList@UCvTradedItem@@$0BF@$0A@@@A
	mov	DWORD PTR $T218788[ebp], eax
	mov	ecx, DWORD PTR ?m_iterator@CvLuaDeal@@1Viterator@?$FFastList@UCvTradedItem@@$0BF@$0A@@@A+4
	imul	ecx, 44					; 0000002cH
	mov	edx, DWORD PTR $T218788[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx+8]
	mov	DWORD PTR _item$[ebp], ecx

; 167  : 	lua_pushinteger(L, item.m_eItemType);

	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 168  : 	lua_pushinteger(L, item.m_iDuration);

	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 169  : #ifdef AUI_YIELDS_APPLIED_AFTER_TURN_NOT_BEFORE
; 170  : 	lua_pushinteger(L, item.m_iTurnsRemaining + GC.getGame().getGameTurn());
; 171  : #else
; 172  : 	lua_pushinteger(L, item.m_iFinalTurn);

	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 173  : #endif
; 174  : 	lua_pushinteger(L, item.m_iData1);

	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 175  : 	lua_pushinteger(L, item.m_iData2);

	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 176  : 	lua_pushinteger(L, item.m_iData3);

	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 177  : 	lua_pushboolean(L, item.m_bFlag1);

	mov	edx, DWORD PTR _item$[ebp]
	movzx	eax, BYTE PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 178  : 	lua_pushinteger(L, item.m_eFromPlayer);

	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 179  : 
; 180  : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 181  : 	++m_iterator;
; 182  : #else
; 183  : 	m_iterator++;

	push	0
	lea	edx, DWORD PTR $T218759[ebp]
	push	edx
	mov	ecx, OFFSET ?m_iterator@CvLuaDeal@@1Viterator@?$FFastList@UCvTradedItem@@$0BF@$0A@@@A ; CvLuaDeal::m_iterator
	call	??E?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@UCvTradedItem@@@@V?$FFastAllocator@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@$0BF@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@$0BF@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@UCvTradedItem@@@@V?$FFastAllocator@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@$0BF@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@$0BF@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@@@@@@@@@QAE?BV01@H@Z ; FCustomList_Core<MultiListNodePolicy<CvTradedItem>,FFastAllocator<MultiListNodePolicy<CvTradedItem>,0,21,0,BaseVector<MultiListNodePolicy<CvTradedItem>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvTradedItem>,0,21,0,BaseVector<MultiListNodePolicy<CvTradedItem>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvTradedItem>,FFastAllocator<MultiListNodePolicy<CvTradedItem>,0,21,0,BaseVector<MultiListNodePolicy<CvTradedItem>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvTradedItem>,0,21,0,BaseVector<MultiListNodePolicy<CvTradedItem>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::operator++

; 184  : #endif
; 185  : 
; 186  : 	return 8;

	mov	eax, 8
$LN2@lGetNextIt:

; 187  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNextItem@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lGetNextItem
_TEXT	ENDS
EXTRN	?AddVoteCommitment@CvDeal@@QAEXW4PlayerTypes@@HHH_N@Z:PROC ; CvDeal::AddVoteCommitment
; Function compile flags: /Odtp
;	COMDAT ?lAddVoteCommitment@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResolutionID$ = -24					; size = 4
_iVoteChoice$ = -20					; size = 4
_bRepeal$ = -13						; size = 1
_eFromPlayer$ = -12					; size = 4
_pkDeal$ = -8						; size = 4
_iNumVotes$ = -4					; size = 4
_L$ = 8							; size = 4
?lAddVoteCommitment@CvLuaDeal@@KAHPAUlua_State@@@Z PROC	; CvLuaDeal::lAddVoteCommitment, COMDAT

; 191  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 192  : 	CvDeal* pkDeal = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkDeal$[ebp], eax

; 193  : 	const PlayerTypes eFromPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eFromPlayer$[ebp], eax

; 194  : 	const int iResolutionID = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iResolutionID$[ebp], eax

; 195  : 	const int iVoteChoice = lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iVoteChoice$[ebp], eax

; 196  : 	const int iNumVotes = lua_tointeger(L, 5);

	push	5
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iNumVotes$[ebp], eax

; 197  : 	const bool bRepeal = lua_toboolean(L, 6);

	push	6
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bRepeal$[ebp], al

; 198  : 
; 199  : 	pkDeal->AddVoteCommitment(eFromPlayer, iResolutionID, iVoteChoice, iNumVotes, bRepeal);

	movzx	ecx, BYTE PTR _bRepeal$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iNumVotes$[ebp]
	push	edx
	mov	eax, DWORD PTR _iVoteChoice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iResolutionID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eFromPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkDeal$[ebp]
	call	?AddVoteCommitment@CvDeal@@QAEXW4PlayerTypes@@HHH_N@Z ; CvDeal::AddVoteCommitment

; 200  : 	return 0;

	xor	eax, eax

; 201  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lAddVoteCommitment@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP	; CvLuaDeal::lAddVoteCommitment
_TEXT	ENDS
EXTRN	?RemoveVoteCommitment@CvDeal@@QAEXW4PlayerTypes@@HHH_N@Z:PROC ; CvDeal::RemoveVoteCommitment
; Function compile flags: /Odtp
;	COMDAT ?lRemoveVoteCommitment@CvLuaDeal@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResolutionID$ = -24					; size = 4
_iVoteChoice$ = -20					; size = 4
_bRepeal$ = -13						; size = 1
_eFromPlayer$ = -12					; size = 4
_pkDeal$ = -8						; size = 4
_iNumVotes$ = -4					; size = 4
_L$ = 8							; size = 4
?lRemoveVoteCommitment@CvLuaDeal@@KAHPAUlua_State@@@Z PROC ; CvLuaDeal::lRemoveVoteCommitment, COMDAT

; 205  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 206  : 	CvDeal* pkDeal = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkDeal$[ebp], eax

; 207  : 	const PlayerTypes eFromPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eFromPlayer$[ebp], eax

; 208  : 	const int iResolutionID = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iResolutionID$[ebp], eax

; 209  : 	const int iVoteChoice = lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iVoteChoice$[ebp], eax

; 210  : 	const int iNumVotes = lua_tointeger(L, 5);

	push	5
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iNumVotes$[ebp], eax

; 211  : 	const bool bRepeal = lua_toboolean(L, 6);

	push	6
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bRepeal$[ebp], al

; 212  : 
; 213  : 	pkDeal->RemoveVoteCommitment(eFromPlayer, iResolutionID, iVoteChoice, iNumVotes, bRepeal);

	movzx	ecx, BYTE PTR _bRepeal$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iNumVotes$[ebp]
	push	edx
	mov	eax, DWORD PTR _iVoteChoice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iResolutionID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eFromPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkDeal$[ebp]
	call	?RemoveVoteCommitment@CvDeal@@QAEXW4PlayerTypes@@HHH_N@Z ; CvDeal::RemoveVoteCommitment

; 214  : 	return 0;

	xor	eax, eax

; 215  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lRemoveVoteCommitment@CvLuaDeal@@KAHPAUlua_State@@@Z ENDP ; CvLuaDeal::lRemoveVoteCommitment
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastlist.h
_TEXT	ENDS
;	COMDAT ?begin@?$FFastList@UCvTradedItem@@$0BF@$0A@@@QAE?AViterator@1@XZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T218853 = -8						; size = 4
$T218825 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$FFastList@UCvTradedItem@@$0BF@$0A@@@QAE?AViterator@1@XZ PROC ; FFastList<CvTradedItem,21,0>::begin, COMDAT
; _this$ = ecx

; 199  : 	iterator begin(){ return iterator( m_uiFirst, this ); };

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T218825[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR $T218853[ebp], ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR $T218853[ebp]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR $T218825[ebp]
	or	eax, 1
	mov	DWORD PTR $T218825[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$FFastList@UCvTradedItem@@$0BF@$0A@@@QAE?AViterator@1@XZ ENDP ; FFastList<CvTradedItem,21,0>::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$FFastList@UCvTradedItem@@$0BF@$0A@@@QAE?AViterator@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T218857 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$FFastList@UCvTradedItem@@$0BF@$0A@@@QAE?AViterator@1@XZ PROC ; FFastList<CvTradedItem,21,0>::end, COMDAT
; _this$ = ecx

; 200  : 	iterator end(){ return iterator( ANCHOR_NODE_INDEX, this ); };

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T218857[ebp], 0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [edx+4], 268435455		; 0fffffffH
	mov	eax, DWORD PTR $T218857[ebp]
	or	eax, 1
	mov	DWORD PTR $T218857[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$FFastList@UCvTradedItem@@$0BF@$0A@@@QAE?AViterator@1@XZ ENDP ; FFastList<CvTradedItem,21,0>::end
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@UCvTradedItem@@@@V?$FFastAllocator@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@$0BF@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@$0BF@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@UCvTradedItem@@@@V?$FFastAllocator@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@$0BF@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@$0BF@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@@@@@@@@@QAE?BV01@H@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T218908 = -24						; size = 4
$T218904 = -20						; size = 4
$T218895 = -16						; size = 4
$T218889 = -12						; size = 4
_temp$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
_notused$ = 12						; size = 4
??E?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@UCvTradedItem@@@@V?$FFastAllocator@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@$0BF@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@$0BF@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@UCvTradedItem@@@@V?$FFastAllocator@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@$0BF@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@$0BF@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@@@@@@@@@QAE?BV01@H@Z PROC ; FCustomList_Core<MultiListNodePolicy<CvTradedItem>,FFastAllocator<MultiListNodePolicy<CvTradedItem>,0,21,0,BaseVector<MultiListNodePolicy<CvTradedItem>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvTradedItem>,0,21,0,BaseVector<MultiListNodePolicy<CvTradedItem>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvTradedItem>,FFastAllocator<MultiListNodePolicy<CvTradedItem>,0,21,0,BaseVector<MultiListNodePolicy<CvTradedItem>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvTradedItem>,0,21,0,BaseVector<MultiListNodePolicy<CvTradedItem>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::operator++, COMDAT
; _this$ = ecx

; 304  : 		const base_iterator operator++(int notused){

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T218889[ebp], 0

; 305  : #endif
; 306  : 			base_iterator temp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _temp$[ebp], ecx
	mov	DWORD PTR _temp$[ebp+4], edx

; 307  : 			++(*this);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 268435455		; 0fffffffH
	jne	SHORT $LN7@operator
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	mov	DWORD PTR [eax+4], ecx
	jmp	SHORT $LN8@operator
$LN7@operator:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T218895[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 44					; 0000002cH
	mov	eax, DWORD PTR $T218895[ebp]
	add	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T218904[ebp], edx
	mov	ecx, DWORD PTR $T218904[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T218908[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T218908[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN8@operator:

; 308  : 			return temp;

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _temp$[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	edx, DWORD PTR $T218889[ebp]
	or	edx, 1
	mov	DWORD PTR $T218889[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 309  : 		};

	mov	esp, ebp
	pop	ebp
	ret	8
??E?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@UCvTradedItem@@@@V?$FFastAllocator@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@$0BF@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@$0BF@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@UCvTradedItem@@@@V?$FFastAllocator@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@$0BF@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@$0BF@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@UCvTradedItem@@@@$0A@@@@@@@@@QAE?BV01@H@Z ENDP ; FCustomList_Core<MultiListNodePolicy<CvTradedItem>,FFastAllocator<MultiListNodePolicy<CvTradedItem>,0,21,0,BaseVector<MultiListNodePolicy<CvTradedItem>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvTradedItem>,0,21,0,BaseVector<MultiListNodePolicy<CvTradedItem>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvTradedItem>,FFastAllocator<MultiListNodePolicy<CvTradedItem>,0,21,0,BaseVector<MultiListNodePolicy<CvTradedItem>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvTradedItem>,0,21,0,BaseVector<MultiListNodePolicy<CvTradedItem>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::operator++
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXXZ@Z PROC ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod, COMDAT

; 222  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 223  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 224  : 	(pkType->*func)();

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 225  : 	return 0;

	xor	eax, eax

; 226  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod
_TEXT	ENDS
PUBLIC	??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@ ; `string'
PUBLIC	??_C@_0L@GCADIOHF@__instance?$AA@		; `string'
EXTRN	_luaL_error:PROC
EXTRN	_lua_settop:PROC
EXTRN	_lua_touserdata:PROC
EXTRN	_lua_getfield:PROC
EXTRN	_lua_type:PROC
;	COMDAT ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
CONST	SEGMENT
??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@ DB 'Not a val'
	DB	'id instance.  Either the instance is NULL or you used ''.'' i'
	DB	'nstead of '':''.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GCADIOHF@__instance?$AA@
CONST	SEGMENT
??_C@_0L@GCADIOHF@__instance?$AA@ DB '__instance', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_stack_size$ = -12					; size = 4
_pkInstance$ = -8					; size = 4
_bFail$ = -1						; size = 1
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 128  : 	const int stack_size = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _stack_size$[ebp], eax

; 129  : 	bool bFail = true;

	mov	BYTE PTR _bFail$[ebp], 1

; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;

	mov	DWORD PTR _pkInstance$[ebp], 0

; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 5
	jne	SHORT $LN5@GetInstanc

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN5@GetInstanc

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$[ebp], eax

; 138  : 			if(pkInstance)

	cmp	DWORD PTR _pkInstance$[ebp], 0
	je	SHORT $LN5@GetInstanc

; 139  : 			{
; 140  : 				bFail = false;

	mov	BYTE PTR _bFail$[ebp], 0
$LN5@GetInstanc:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	mov	ecx, DWORD PTR _stack_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	movzx	eax, BYTE PTR _bFail$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetInstanc
	movzx	ecx, BYTE PTR _bErrorOnFail$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@GetInstanc

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[ebp], 1
	jne	SHORT $LN1@GetInstanc

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc:

; 151  : 		Derived::HandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?HandleMissingInstance@CvLuaDeal@@SAXPAUlua_State@@@Z ; CvLuaDeal::HandleMissingInstance
	add	esp, 4
$LN2@GetInstanc:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, DWORD PTR _pkInstance$[ebp]

; 154  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
_TEXT	ENDS
PUBLIC	??_C@_0BJ@GHLHFGFM@Instance?5does?5not?5exist?4?$AA@ ; `string'
;	COMDAT ??_C@_0BJ@GHLHFGFM@Instance?5does?5not?5exist?4?$AA@
CONST	SEGMENT
??_C@_0BJ@GHLHFGFM@Instance?5does?5not?5exist?4?$AA@ DB 'Instance does no'
	DB	't exist.', 00H				; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@KAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@KAXPAUlua_State@@@Z PROC ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::DefaultHandleMissingInstance, COMDAT

; 164  : {

	push	ebp
	mov	ebp, esp

; 165  : 	luaL_error(L, "Instance does not exist.");

	push	OFFSET ??_C@_0BJ@GHLHFGFM@Instance?5does?5not?5exist?4?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_error
	add	esp, 8

; 166  : }

	pop	ebp
	ret	0
?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@KAXPAUlua_State@@@Z ENDP ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::DefaultHandleMissingInstance
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEHXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEHXZ@Z PROC ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<int>, COMDAT

; 121  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 122  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 123  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 124  : 
; 125  : 	return 1;

	mov	eax, 1

; 126  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEHXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<int>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z PROC	; CvLuaArgs::pushValue<int>, COMDAT

; 38   : 	{

	push	ebp
	mov	ebp, esp

; 39   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 40   : 	}

	pop	ebp
	ret	0
??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ENDP	; CvLuaArgs::pushValue<int>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@BEIXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@BEIXZ@Z PROC ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<unsigned int>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@I@CvLuaArgs@@YAXPAUlua_State@@I@Z ; CvLuaArgs::pushValue<unsigned int>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@BEIXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<unsigned int>
_TEXT	ENDS
PUBLIC	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetStartingArgIndex
; Function compile flags: /Odtp
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@W41@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@BE?AW4PlayerTypes@@W43@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@W41@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@BE?AW4PlayerTypes@@W43@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum PlayerTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z ; CvLuaArgs::pushValue<enum PlayerTypes>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PlayerTypes@@W41@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@BE?AW4PlayerTypes@@W43@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@BE?AW4PlayerTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@BE?AW4PlayerTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z ; CvLuaArgs::pushValue<enum PlayerTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@BE?AW4PlayerTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4PlayerTypes@@W4TradeableItems@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEHW4PlayerTypes@@W4TradeableItems@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4PlayerTypes@@W4TradeableItems@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEHW4PlayerTypes@@W4TradeableItems@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<int,enum PlayerTypes,enum TradeableItems>, COMDAT

; 140  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 141  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 142  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 143  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TradeableItems@@@CvLuaArgs@@YA?AW4TradeableItems@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TradeableItems>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 144  : 
; 145  : 	return 1;

	mov	eax, 1

; 146  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4PlayerTypes@@W4TradeableItems@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEHW4PlayerTypes@@W4TradeableItems@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<int,enum PlayerTypes,enum TradeableItems>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,int>, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 240  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 243  : 	return 0;

	xor	eax, eax

; 244  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,int>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z PROC	; CvLuaArgs::toValue<int>, COMDAT

; 18   : 	{

	push	ebp
	mov	ebp, esp

; 19   : 		return lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 20   : 	}

	pop	ebp
	ret	0
??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ENDP	; CvLuaArgs::toValue<int>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@HH@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@HH@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@HH@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@HH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,int,int>, COMDAT

; 249  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 250  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 251  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 252  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _idx$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 253  : 	return 0;

	xor	eax, eax

; 254  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PlayerTypes@@HH@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@HH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,int,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@W4ResourceTypes@@HH@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@W4ResourceTypes@@HH@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@W4ResourceTypes@@HH@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@W4ResourceTypes@@HH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum ResourceTypes,int,int>, COMDAT

; 259  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 260  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 261  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 262  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2), CvLuaArgs::toValue<arg4>(L, idx + 3));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _idx$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$toValue@W4ResourceTypes@@@CvLuaArgs@@YA?AW4ResourceTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ResourceTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 263  : 	return 0;

	xor	eax, eax

; 264  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PlayerTypes@@W4ResourceTypes@@HH@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@W4ResourceTypes@@HH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum ResourceTypes,int,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@W4TeamTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@W4TeamTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum TeamTypes,int>, COMDAT

; 249  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 250  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 251  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 252  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TeamTypes>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _idx$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 253  : 	return 0;

	xor	eax, eax

; 254  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PlayerTypes@@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@W4TeamTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum TeamTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@W4TeamTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@W4TeamTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum TeamTypes>, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 240  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TeamTypes>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 243  : 	return 0;

	xor	eax, eax

; 244  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PlayerTypes@@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@W4TeamTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum TeamTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@W41@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@1H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@W41@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@1H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum PlayerTypes,int>, COMDAT

; 249  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 250  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 251  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 252  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _idx$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 253  : 	return 0;

	xor	eax, eax

; 254  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PlayerTypes@@W41@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@1H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum PlayerTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AE_NW4PlayerTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AE_NW4PlayerTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<bool,enum PlayerTypes,int>, COMDAT

; 140  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 141  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 142  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 143  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 144  : 
; 145  : 	return 1;

	mov	eax, 1

; 146  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AE_NW4PlayerTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<bool,enum PlayerTypes,int>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 1
??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z PROC	; CvLuaArgs::pushValue<bool>, COMDAT

; 44   : 	{

	push	ebp
	mov	ebp, esp

; 45   : 		lua_pushboolean(L, t);

	movzx	eax, BYTE PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 46   : 	}

	pop	ebp
	ret	0
??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ENDP	; CvLuaArgs::pushValue<bool>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4PlayerTypes@@HH@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AE_NW4PlayerTypes@@HH@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4PlayerTypes@@HH@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AE_NW4PlayerTypes@@HH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<bool,enum PlayerTypes,int,int>, COMDAT

; 150  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 151  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 152  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 153  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _idx$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 154  : 
; 155  : 	return 1;

	mov	eax, 1

; 156  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4PlayerTypes@@HH@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AE_NW4PlayerTypes@@HH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<bool,enum PlayerTypes,int,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4PlayerTypes@@W4ResourceTypes@@HH@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AE_NW4PlayerTypes@@W4ResourceTypes@@HH@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4PlayerTypes@@W4ResourceTypes@@HH@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AE_NW4PlayerTypes@@W4ResourceTypes@@HH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<bool,enum PlayerTypes,enum ResourceTypes,int,int>, COMDAT

; 160  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 161  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 162  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 163  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2), CvLuaArgs::toValue<arg4>(L, idx + 3)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _idx$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$toValue@W4ResourceTypes@@@CvLuaArgs@@YA?AW4ResourceTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ResourceTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 164  : 
; 165  : 	return 1;

	mov	eax, 1

; 166  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4PlayerTypes@@W4ResourceTypes@@HH@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AE_NW4PlayerTypes@@W4ResourceTypes@@HH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<bool,enum PlayerTypes,enum ResourceTypes,int,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4ResourceTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4ResourceTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum ResourceTypes>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4ResourceTypes@@@CvLuaArgs@@YA?AW4ResourceTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ResourceTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4ResourceTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum ResourceTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXH@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<int>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@W41@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@1@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@W41@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@1@Z@Z PROC ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum PlayerTypes>, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 240  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 243  : 	return 0;

	xor	eax, eax

; 244  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PlayerTypes@@W41@@?$CvLuaMethodWrapper@VCvLuaDeal@@VCvDeal@@@@KAHPAUlua_State@@P8CvDeal@@AEXW4PlayerTypes@@1@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaDeal,CvDeal>::BasicLuaMethod<enum PlayerTypes,enum PlayerTypes>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
_TEXT	ENDS
;	COMDAT ?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SA?BHXZ
_TEXT	SEGMENT
?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SA?BHXZ PROC ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetStartingArgIndex, COMDAT

; 158  : {

	push	ebp
	mov	ebp, esp

; 159  : 	return 2;

	mov	eax, 2

; 160  : }

	pop	ebp
	ret	0
?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SA?BHXZ ENDP ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetStartingArgIndex
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$pushValue@I@CvLuaArgs@@YAXPAUlua_State@@I@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@I@CvLuaArgs@@YAXPAUlua_State@@I@Z PROC	; CvLuaArgs::pushValue<unsigned int>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@I@CvLuaArgs@@YAXPAUlua_State@@I@Z ENDP	; CvLuaArgs::pushValue<unsigned int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum PlayerTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z PROC ; CvLuaArgs::pushValue<enum PlayerTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4TradeableItems@@@CvLuaArgs@@YA?AW4TradeableItems@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4TradeableItems@@@CvLuaArgs@@YA?AW4TradeableItems@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum TradeableItems>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4TradeableItems@@@CvLuaArgs@@YA?AW4TradeableItems@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum TradeableItems>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4ResourceTypes@@@CvLuaArgs@@YA?AW4ResourceTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4ResourceTypes@@@CvLuaArgs@@YA?AW4ResourceTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum ResourceTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4ResourceTypes@@@CvLuaArgs@@YA?AW4ResourceTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum ResourceTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum TeamTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum TeamTypes>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdealclasses.h
_TEXT	ENDS
;	COMDAT ?GetToPlayer@CvDeal@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetToPlayer@CvDeal@@QBE?AW4PlayerTypes@@XZ PROC	; CvDeal::GetToPlayer, COMDAT
; _this$ = ecx

; 134  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 135  : 		return m_eToPlayer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 136  : 	};

	mov	esp, ebp
	pop	ebp
	ret	0
?GetToPlayer@CvDeal@@QBE?AW4PlayerTypes@@XZ ENDP	; CvDeal::GetToPlayer
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetFromPlayer@CvDeal@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFromPlayer@CvDeal@@QBE?AW4PlayerTypes@@XZ PROC	; CvDeal::GetFromPlayer, COMDAT
; _this$ = ecx

; 138  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 139  : 		return m_eFromPlayer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 140  : 	};

	mov	esp, ebp
	pop	ebp
	ret	0
?GetFromPlayer@CvDeal@@QBE?AW4PlayerTypes@@XZ ENDP	; CvDeal::GetFromPlayer
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetStartTurn@CvDeal@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetStartTurn@CvDeal@@QBEIXZ PROC			; CvDeal::GetStartTurn, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		return m_iStartTurn;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]

; 144  : 	};

	mov	esp, ebp
	pop	ebp
	ret	0
?GetStartTurn@CvDeal@@QBEIXZ ENDP			; CvDeal::GetStartTurn
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetDuration@CvDeal@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDuration@CvDeal@@QBEIXZ PROC			; CvDeal::GetDuration, COMDAT
; _this$ = ecx

; 146  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 147  : 		return m_iDuration;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]

; 148  : 	};

	mov	esp, ebp
	pop	ebp
	ret	0
?GetDuration@CvDeal@@QBEIXZ ENDP			; CvDeal::GetDuration
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetEndTurn@CvDeal@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetEndTurn@CvDeal@@QBEIXZ PROC				; CvDeal::GetEndTurn, COMDAT
; _this$ = ecx

; 150  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 151  : 		return m_iFinalTurn;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 152  : 	};

	mov	esp, ebp
	pop	ebp
	ret	0
?GetEndTurn@CvDeal@@QBEIXZ ENDP				; CvDeal::GetEndTurn
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluadeal.cpp
;	COMDAT ??__E?m_iterator@CvLuaDeal@@1Viterator@?$FFastList@UCvTradedItem@@$0BF@$0A@@@A@@YAXXZ
text$yc	SEGMENT
??__E?m_iterator@CvLuaDeal@@1Viterator@?$FFastList@UCvTradedItem@@$0BF@$0A@@@A@@YAXXZ PROC ; `dynamic initializer for 'CvLuaDeal::m_iterator'', COMDAT

; 20   : TradedItemList::iterator CvLuaDeal::m_iterator;

	push	ebp
	mov	ebp, esp
	mov	DWORD PTR ?m_iterator@CvLuaDeal@@1Viterator@?$FFastList@UCvTradedItem@@$0BF@$0A@@@A, 0
	mov	DWORD PTR ?m_iterator@CvLuaDeal@@1Viterator@?$FFastList@UCvTradedItem@@$0BF@$0A@@@A+4, 268435455 ; 0fffffffH
	push	OFFSET ??__F?m_iterator@CvLuaDeal@@1Viterator@?$FFastList@UCvTradedItem@@$0BF@$0A@@@A@@YAXXZ ; `dynamic atexit destructor for 'CvLuaDeal::m_iterator''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?m_iterator@CvLuaDeal@@1Viterator@?$FFastList@UCvTradedItem@@$0BF@$0A@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CvLuaDeal::m_iterator''
; Function compile flags: /Odtp
text$yc	ENDS
;	COMDAT ??__F?m_iterator@CvLuaDeal@@1Viterator@?$FFastList@UCvTradedItem@@$0BF@$0A@@@A@@YAXXZ
text$yd	SEGMENT
??__F?m_iterator@CvLuaDeal@@1Viterator@?$FFastList@UCvTradedItem@@$0BF@$0A@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CvLuaDeal::m_iterator'', COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
??__F?m_iterator@CvLuaDeal@@1Viterator@?$FFastList@UCvTradedItem@@$0BF@$0A@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CvLuaDeal::m_iterator''
text$yd	ENDS
PUBLIC	?m_iterator@CvLuaDeal@@1Viterator@?$FFastList@UCvTradedItem@@$0BF@$0A@@@A ; CvLuaDeal::m_iterator
_BSS	SEGMENT
?m_iterator@CvLuaDeal@@1Viterator@?$FFastList@UCvTradedItem@@$0BF@$0A@@@A DQ 01H DUP (?) ; CvLuaDeal::m_iterator
_BSS	ENDS
CRT$XCU	SEGMENT
?m_iterator$initializer$@CvLuaDeal@@1P6AXXZA DD FLAT:??__E?m_iterator@CvLuaDeal@@1Viterator@?$FFastList@UCvTradedItem@@$0BF@$0A@@@A@@YAXXZ ; CvLuaDeal::m_iterator$initializer$
CRT$XCU	ENDS
END
