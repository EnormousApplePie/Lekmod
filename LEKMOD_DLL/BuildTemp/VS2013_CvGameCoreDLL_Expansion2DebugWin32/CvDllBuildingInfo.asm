; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvDllBuildingInfo.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_05OCFELOIJ@1?40?40?$AA@			; `string'
CONST	SEGMENT
_guidICvUnknown DD 0d89ba82fH
	DW	09fa3H
	DW	04696H
	DB	0b3H
	DB	0f4H
	DB	052H
	DB	0bdH
	DB	0b1H
	DB	01H
	DB	0cfH
	DB	0b2H
_guidICvCombatInfo1 DD 0da81a0dcH
	DW	030b3H
	DW	04773H
	DB	087H
	DB	086H
	DB	035H
	DB	0d4H
	DB	070H
	DB	0e0H
	DB	0efH
	DB	064H
CONST	ENDS
_DATA	SEGMENT
_CIV5_XP2_DLL_VERSION DD FLAT:??_C@_05OCFELOIJ@1?40?40?$AA@
_DATA	ENDS
;	COMDAT ??_C@_05OCFELOIJ@1?40?40?$AA@
CONST	SEGMENT
??_C@_05OCFELOIJ@1?40?40?$AA@ DB '1.0.0', 00H		; `string'
CONST	ENDS
PUBLIC	??_7CvDllBuildingInfo@@6B@			; CvDllBuildingInfo::`vftable'
PUBLIC	??_7ICvBuildingInfo1@@6B@			; ICvBuildingInfo1::`vftable'
PUBLIC	??_7ICvUnknown@@6B@				; ICvUnknown::`vftable'
PUBLIC	??0CvDllBuildingInfo@@QAE@PAVCvBuildingEntry@@@Z ; CvDllBuildingInfo::CvDllBuildingInfo
PUBLIC	?QueryInterface@CvDllBuildingInfo@@UAGPAXU_GUID@@@Z ; CvDllBuildingInfo::QueryInterface
PUBLIC	?Destroy@CvDllBuildingInfo@@EAGXXZ		; CvDllBuildingInfo::Destroy
PUBLIC	?GetType@CvDllBuildingInfo@@UBGPBDXZ		; CvDllBuildingInfo::GetType
PUBLIC	?GetText@CvDllBuildingInfo@@UBGPBDXZ		; CvDllBuildingInfo::GetText
PUBLIC	?GetPreferredDisplayPosition@CvDllBuildingInfo@@UBGHXZ ; CvDllBuildingInfo::GetPreferredDisplayPosition
PUBLIC	?IsBorderObstacle@CvDllBuildingInfo@@UBG_NXZ	; CvDllBuildingInfo::IsBorderObstacle
PUBLIC	?IsPlayerBorderObstacle@CvDllBuildingInfo@@UBG_NXZ ; CvDllBuildingInfo::IsPlayerBorderObstacle
PUBLIC	?GetArtDefineTag@CvDllBuildingInfo@@UBGPBDXZ	; CvDllBuildingInfo::GetArtDefineTag
PUBLIC	?GetArtInfoCulturalVariation@CvDllBuildingInfo@@UBG?B_NXZ ; CvDllBuildingInfo::GetArtInfoCulturalVariation
PUBLIC	?GetArtInfoEraVariation@CvDllBuildingInfo@@UBG?B_NXZ ; CvDllBuildingInfo::GetArtInfoEraVariation
PUBLIC	?GetArtInfoRandomVariation@CvDllBuildingInfo@@UBG?B_NXZ ; CvDllBuildingInfo::GetArtInfoRandomVariation
PUBLIC	?GetWonderSplashAudio@CvDllBuildingInfo@@UBGPBDXZ ; CvDllBuildingInfo::GetWonderSplashAudio
EXTRN	__purecall:PROC
;	COMDAT ??_7CvDllBuildingInfo@@6B@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdllbuildinginfo.cpp
CONST	SEGMENT
??_7CvDllBuildingInfo@@6B@ DD FLAT:?QueryInterface@CvDllBuildingInfo@@UAGPAXU_GUID@@@Z ; CvDllBuildingInfo::`vftable'
	DD	FLAT:?Destroy@CvDllBuildingInfo@@EAGXXZ
	DD	FLAT:?GetType@CvDllBuildingInfo@@UBGPBDXZ
	DD	FLAT:?GetText@CvDllBuildingInfo@@UBGPBDXZ
	DD	FLAT:?GetPreferredDisplayPosition@CvDllBuildingInfo@@UBGHXZ
	DD	FLAT:?IsBorderObstacle@CvDllBuildingInfo@@UBG_NXZ
	DD	FLAT:?IsPlayerBorderObstacle@CvDllBuildingInfo@@UBG_NXZ
	DD	FLAT:?GetArtDefineTag@CvDllBuildingInfo@@UBGPBDXZ
	DD	FLAT:?GetArtInfoCulturalVariation@CvDllBuildingInfo@@UBG?B_NXZ
	DD	FLAT:?GetArtInfoEraVariation@CvDllBuildingInfo@@UBG?B_NXZ
	DD	FLAT:?GetArtInfoRandomVariation@CvDllBuildingInfo@@UBG?B_NXZ
	DD	FLAT:?GetWonderSplashAudio@CvDllBuildingInfo@@UBGPBDXZ
CONST	ENDS
;	COMDAT ??_7ICvBuildingInfo1@@6B@
CONST	SEGMENT
??_7ICvBuildingInfo1@@6B@ DD FLAT:__purecall		; ICvBuildingInfo1::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ICvUnknown@@6B@
CONST	SEGMENT
??_7ICvUnknown@@6B@ DD FLAT:__purecall			; ICvUnknown::`vftable'
	DD	FLAT:__purecall
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ??0CvDllBuildingInfo@@QAE@PAVCvBuildingEntry@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pBuildingInfo$ = 8					; size = 4
??0CvDllBuildingInfo@@QAE@PAVCvBuildingEntry@@@Z PROC	; CvDllBuildingInfo::CvDllBuildingInfo, COMDAT
; _this$ = ecx

; 19   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICvUnknown@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7ICvBuildingInfo1@@6B@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7CvDllBuildingInfo@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pBuildingInfo$[ebp]
	mov	DWORD PTR [ecx+8], edx

; 20   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CvDllBuildingInfo@@QAE@PAVCvBuildingEntry@@@Z ENDP	; CvDllBuildingInfo::CvDllBuildingInfo
_TEXT	ENDS
PUBLIC	??1CvDllBuildingInfo@@QAE@XZ			; CvDllBuildingInfo::~CvDllBuildingInfo
; Function compile flags: /Odtp
;	COMDAT ??1CvDllBuildingInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvDllBuildingInfo@@QAE@XZ PROC			; CvDllBuildingInfo::~CvDllBuildingInfo, COMDAT
; _this$ = ecx

; 23   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CvDllBuildingInfo@@6B@

; 24   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1CvDllBuildingInfo@@QAE@XZ ENDP			; CvDllBuildingInfo::~CvDllBuildingInfo
_TEXT	ENDS
PUBLIC	?IncrementReference@CvDllBuildingInfo@@QAEIXZ	; CvDllBuildingInfo::IncrementReference
; Function compile flags: /Odtp
;	COMDAT ?QueryInterface@CvDllBuildingInfo@@UAGPAXU_GUID@@@Z
_TEXT	SEGMENT
tv90 = -88						; size = 4
tv161 = -84						; size = 4
tv85 = -80						; size = 4
tv137 = -76						; size = 4
$T217996 = -72						; size = 16
$T217995 = -56						; size = 16
$T217994 = -40						; size = 16
$T217993 = -20						; size = 16
_this$ = 8						; size = 4
_guidInterface$ = 12					; size = 16
?QueryInterface@CvDllBuildingInfo@@UAGPAXU_GUID@@@Z PROC ; CvDllBuildingInfo::QueryInterface, COMDAT

; 27   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	esi
	push	edi

; 28   : 	if(guidInterface == ICvUnknown::GetInterfaceId() ||
; 29   : 	        guidInterface == ICvBuildingInfo1::GetInterfaceId())

	mov	eax, DWORD PTR _guidICvUnknown
	mov	DWORD PTR $T217994[ebp], eax
	mov	ecx, DWORD PTR _guidICvUnknown+4
	mov	DWORD PTR $T217994[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvUnknown+8
	mov	DWORD PTR $T217994[ebp+8], edx
	mov	eax, DWORD PTR _guidICvUnknown+12
	mov	DWORD PTR $T217994[ebp+12], eax
	mov	ecx, DWORD PTR $T217994[ebp]
	mov	DWORD PTR $T217993[ebp], ecx
	mov	edx, DWORD PTR $T217994[ebp+4]
	mov	DWORD PTR $T217993[ebp+4], edx
	mov	eax, DWORD PTR $T217994[ebp+8]
	mov	DWORD PTR $T217993[ebp+8], eax
	mov	ecx, DWORD PTR $T217994[ebp+12]
	mov	DWORD PTR $T217993[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T217993[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv137[ebp], edx
	repe cmpsb
	je	SHORT $LN17@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv137[ebp], eax
$LN17@QueryInter:
	mov	ecx, DWORD PTR tv137[ebp]
	mov	DWORD PTR tv85[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv85[ebp], 0
	sete	dl
	test	edx, edx
	jne	SHORT $LN1@QueryInter
	mov	eax, DWORD PTR _guidICvCombatInfo1
	mov	DWORD PTR $T217996[ebp], eax
	mov	ecx, DWORD PTR _guidICvCombatInfo1+4
	mov	DWORD PTR $T217996[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvCombatInfo1+8
	mov	DWORD PTR $T217996[ebp+8], edx
	mov	eax, DWORD PTR _guidICvCombatInfo1+12
	mov	DWORD PTR $T217996[ebp+12], eax
	mov	ecx, DWORD PTR $T217996[ebp]
	mov	DWORD PTR $T217995[ebp], ecx
	mov	edx, DWORD PTR $T217996[ebp+4]
	mov	DWORD PTR $T217995[ebp+4], edx
	mov	eax, DWORD PTR $T217996[ebp+8]
	mov	DWORD PTR $T217995[ebp+8], eax
	mov	ecx, DWORD PTR $T217996[ebp+12]
	mov	DWORD PTR $T217995[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T217995[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv161[ebp], edx
	repe cmpsb
	je	SHORT $LN18@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv161[ebp], eax
$LN18@QueryInter:
	mov	ecx, DWORD PTR tv161[ebp]
	mov	DWORD PTR tv90[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv90[ebp], 0
	sete	dl
	test	edx, edx
	je	SHORT $LN2@QueryInter
$LN1@QueryInter:

; 30   : 	{
; 31   : 		IncrementReference();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IncrementReference@CvDllBuildingInfo@@QAEIXZ ; CvDllBuildingInfo::IncrementReference

; 32   : 		return this;

	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN3@QueryInter
$LN2@QueryInter:

; 33   : 	}
; 34   : 
; 35   : 	return NULL;

	xor	eax, eax
$LN3@QueryInter:

; 36   : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?QueryInterface@CvDllBuildingInfo@@UAGPAXU_GUID@@@Z ENDP ; CvDllBuildingInfo::QueryInterface
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IncrementReference@CvDllBuildingInfo@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IncrementReference@CvDllBuildingInfo@@QAEIXZ PROC	; CvDllBuildingInfo::IncrementReference, COMDAT
; _this$ = ecx

; 39   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 40   : 	++m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 41   : 	return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 42   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IncrementReference@CvDllBuildingInfo@@QAEIXZ ENDP	; CvDllBuildingInfo::IncrementReference
_TEXT	ENDS
PUBLIC	??3CvDllBuildingInfo@@SAXPAX@Z			; CvDllBuildingInfo::operator delete
PUBLIC	?DecrementReference@CvDllBuildingInfo@@QAEIXZ	; CvDllBuildingInfo::DecrementReference
; Function compile flags: /Odtp
;	COMDAT ?DecrementReference@CvDllBuildingInfo@@QAEIXZ
_TEXT	SEGMENT
tv70 = -16						; size = 4
_this$ = -12						; size = 4
$T218028 = -8						; size = 4
$T218027 = -4						; size = 4
?DecrementReference@CvDllBuildingInfo@@QAEIXZ PROC	; CvDllBuildingInfo::DecrementReference, COMDAT
; _this$ = ecx

; 45   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 46   : 	if(m_uiRefCount == 1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 1
	jne	SHORT $LN2@DecrementR

; 47   : 	{
; 48   : 		delete this;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T218028[ebp], ecx
	mov	edx, DWORD PTR $T218028[ebp]
	mov	DWORD PTR $T218027[ebp], edx
	cmp	DWORD PTR $T218027[ebp], 0
	je	SHORT $LN5@DecrementR
	mov	ecx, DWORD PTR $T218027[ebp]
	call	??1CvDllBuildingInfo@@QAE@XZ		; CvDllBuildingInfo::~CvDllBuildingInfo
	mov	eax, 1
	and	eax, 1
	je	SHORT $LN8@DecrementR
	mov	ecx, DWORD PTR $T218027[ebp]
	push	ecx
	call	??3CvDllBuildingInfo@@SAXPAX@Z		; CvDllBuildingInfo::operator delete
	add	esp, 4
$LN8@DecrementR:
	mov	edx, DWORD PTR $T218027[ebp]
	mov	DWORD PTR tv70[ebp], edx
	jmp	SHORT $LN6@DecrementR
$LN5@DecrementR:
	mov	DWORD PTR tv70[ebp], 0
$LN6@DecrementR:

; 49   : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN3@DecrementR

; 50   : 	}
; 51   : 	else

	jmp	SHORT $LN3@DecrementR
$LN2@DecrementR:

; 52   : 	{
; 53   : 		--m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 54   : 		return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
$LN3@DecrementR:

; 55   : 	}
; 56   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DecrementReference@CvDllBuildingInfo@@QAEIXZ ENDP	; CvDllBuildingInfo::DecrementReference
_TEXT	ENDS
PUBLIC	?GetReferenceCount@CvDllBuildingInfo@@QAEIXZ	; CvDllBuildingInfo::GetReferenceCount
; Function compile flags: /Odtp
;	COMDAT ?GetReferenceCount@CvDllBuildingInfo@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetReferenceCount@CvDllBuildingInfo@@QAEIXZ PROC	; CvDllBuildingInfo::GetReferenceCount, COMDAT
; _this$ = ecx

; 59   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 60   : 	return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 61   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetReferenceCount@CvDllBuildingInfo@@QAEIXZ ENDP	; CvDllBuildingInfo::GetReferenceCount
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Destroy@CvDllBuildingInfo@@EAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Destroy@CvDllBuildingInfo@@EAGXXZ PROC			; CvDllBuildingInfo::Destroy, COMDAT

; 64   : {

	push	ebp
	mov	ebp, esp

; 65   : 	DecrementReference();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DecrementReference@CvDllBuildingInfo@@QAEIXZ ; CvDllBuildingInfo::DecrementReference

; 66   : }

	pop	ebp
	ret	4
?Destroy@CvDllBuildingInfo@@EAGXXZ ENDP			; CvDllBuildingInfo::Destroy
_TEXT	ENDS
EXTRN	?Free@CvDllGameContext@@SAXPAX@Z:PROC		; CvDllGameContext::Free
; Function compile flags: /Odtp
;	COMDAT ??3CvDllBuildingInfo@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CvDllBuildingInfo@@SAXPAX@Z PROC			; CvDllBuildingInfo::operator delete, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp

; 70   : 	CvDllGameContext::Free(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?Free@CvDllGameContext@@SAXPAX@Z	; CvDllGameContext::Free
	add	esp, 4

; 71   : }

	pop	ebp
	ret	0
??3CvDllBuildingInfo@@SAXPAX@Z ENDP			; CvDllBuildingInfo::operator delete
_TEXT	ENDS
PUBLIC	??2CvDllBuildingInfo@@SAPAXI@Z			; CvDllBuildingInfo::operator new
EXTRN	?Allocate@CvDllGameContext@@SAPAXI@Z:PROC	; CvDllGameContext::Allocate
; Function compile flags: /Odtp
;	COMDAT ??2CvDllBuildingInfo@@SAPAXI@Z
_TEXT	SEGMENT
_bytes$ = 8						; size = 4
??2CvDllBuildingInfo@@SAPAXI@Z PROC			; CvDllBuildingInfo::operator new, COMDAT

; 74   : {

	push	ebp
	mov	ebp, esp

; 75   : 	return CvDllGameContext::Allocate(bytes);

	mov	eax, DWORD PTR _bytes$[ebp]
	push	eax
	call	?Allocate@CvDllGameContext@@SAPAXI@Z	; CvDllGameContext::Allocate
	add	esp, 4

; 76   : }

	pop	ebp
	ret	0
??2CvDllBuildingInfo@@SAPAXI@Z ENDP			; CvDllBuildingInfo::operator new
_TEXT	ENDS
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
; Function compile flags: /Odtp
;	COMDAT ?GetType@CvDllBuildingInfo@@UBGPBDXZ
_TEXT	SEGMENT
$T218048 = -4						; size = 4
_this$ = 8						; size = 4
?GetType@CvDllBuildingInfo@@UBGPBDXZ PROC		; CvDllBuildingInfo::GetType, COMDAT

; 79   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 80   : 	return m_pBuildingInfo->GetType();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T218048[ebp], ecx
	mov	ecx, DWORD PTR $T218048[ebp]
	add	ecx, 176				; 000000b0H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 81   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetType@CvDllBuildingInfo@@UBGPBDXZ ENDP		; CvDllBuildingInfo::GetType
_TEXT	ENDS
EXTRN	?GetText@CvBaseInfo@@QBEPBDXZ:PROC		; CvBaseInfo::GetText
; Function compile flags: /Odtp
;	COMDAT ?GetText@CvDllBuildingInfo@@UBGPBDXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetText@CvDllBuildingInfo@@UBGPBDXZ PROC		; CvDllBuildingInfo::GetText, COMDAT

; 84   : {

	push	ebp
	mov	ebp, esp

; 85   : 	return m_pBuildingInfo->GetText();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetText@CvBaseInfo@@QBEPBDXZ		; CvBaseInfo::GetText

; 86   : }

	pop	ebp
	ret	4
?GetText@CvDllBuildingInfo@@UBGPBDXZ ENDP		; CvDllBuildingInfo::GetText
_TEXT	ENDS
EXTRN	?GetPreferredDisplayPosition@CvBuildingEntry@@QBEHXZ:PROC ; CvBuildingEntry::GetPreferredDisplayPosition
; Function compile flags: /Odtp
;	COMDAT ?GetPreferredDisplayPosition@CvDllBuildingInfo@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetPreferredDisplayPosition@CvDllBuildingInfo@@UBGHXZ PROC ; CvDllBuildingInfo::GetPreferredDisplayPosition, COMDAT

; 89   : {

	push	ebp
	mov	ebp, esp

; 90   : 	return m_pBuildingInfo->GetPreferredDisplayPosition();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetPreferredDisplayPosition@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetPreferredDisplayPosition

; 91   : }

	pop	ebp
	ret	4
?GetPreferredDisplayPosition@CvDllBuildingInfo@@UBGHXZ ENDP ; CvDllBuildingInfo::GetPreferredDisplayPosition
_TEXT	ENDS
EXTRN	?IsBorderObstacle@CvBuildingEntry@@QBE_NXZ:PROC	; CvBuildingEntry::IsBorderObstacle
; Function compile flags: /Odtp
;	COMDAT ?IsBorderObstacle@CvDllBuildingInfo@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsBorderObstacle@CvDllBuildingInfo@@UBG_NXZ PROC	; CvDllBuildingInfo::IsBorderObstacle, COMDAT

; 94   : {

	push	ebp
	mov	ebp, esp

; 95   : 	return m_pBuildingInfo->IsBorderObstacle();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?IsBorderObstacle@CvBuildingEntry@@QBE_NXZ ; CvBuildingEntry::IsBorderObstacle

; 96   : }

	pop	ebp
	ret	4
?IsBorderObstacle@CvDllBuildingInfo@@UBG_NXZ ENDP	; CvDllBuildingInfo::IsBorderObstacle
_TEXT	ENDS
EXTRN	?IsPlayerBorderObstacle@CvBuildingEntry@@QBE_NXZ:PROC ; CvBuildingEntry::IsPlayerBorderObstacle
; Function compile flags: /Odtp
;	COMDAT ?IsPlayerBorderObstacle@CvDllBuildingInfo@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsPlayerBorderObstacle@CvDllBuildingInfo@@UBG_NXZ PROC	; CvDllBuildingInfo::IsPlayerBorderObstacle, COMDAT

; 99   : {

	push	ebp
	mov	ebp, esp

; 100  : 	return m_pBuildingInfo->IsPlayerBorderObstacle();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?IsPlayerBorderObstacle@CvBuildingEntry@@QBE_NXZ ; CvBuildingEntry::IsPlayerBorderObstacle

; 101  : }

	pop	ebp
	ret	4
?IsPlayerBorderObstacle@CvDllBuildingInfo@@UBG_NXZ ENDP	; CvDllBuildingInfo::IsPlayerBorderObstacle
_TEXT	ENDS
EXTRN	?GetArtDefineTag@CvBuildingEntry@@QBEPBDXZ:PROC	; CvBuildingEntry::GetArtDefineTag
; Function compile flags: /Odtp
;	COMDAT ?GetArtDefineTag@CvDllBuildingInfo@@UBGPBDXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetArtDefineTag@CvDllBuildingInfo@@UBGPBDXZ PROC	; CvDllBuildingInfo::GetArtDefineTag, COMDAT

; 104  : {

	push	ebp
	mov	ebp, esp

; 105  : 	return m_pBuildingInfo->GetArtDefineTag();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetArtDefineTag@CvBuildingEntry@@QBEPBDXZ ; CvBuildingEntry::GetArtDefineTag

; 106  : }

	pop	ebp
	ret	4
?GetArtDefineTag@CvDllBuildingInfo@@UBGPBDXZ ENDP	; CvDllBuildingInfo::GetArtDefineTag
_TEXT	ENDS
EXTRN	?GetArtInfoCulturalVariation@CvBuildingEntry@@QBE?B_NXZ:PROC ; CvBuildingEntry::GetArtInfoCulturalVariation
; Function compile flags: /Odtp
;	COMDAT ?GetArtInfoCulturalVariation@CvDllBuildingInfo@@UBG?B_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetArtInfoCulturalVariation@CvDllBuildingInfo@@UBG?B_NXZ PROC ; CvDllBuildingInfo::GetArtInfoCulturalVariation, COMDAT

; 109  : {

	push	ebp
	mov	ebp, esp

; 110  : 	return m_pBuildingInfo->GetArtInfoCulturalVariation();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetArtInfoCulturalVariation@CvBuildingEntry@@QBE?B_NXZ ; CvBuildingEntry::GetArtInfoCulturalVariation

; 111  : }

	pop	ebp
	ret	4
?GetArtInfoCulturalVariation@CvDllBuildingInfo@@UBG?B_NXZ ENDP ; CvDllBuildingInfo::GetArtInfoCulturalVariation
_TEXT	ENDS
EXTRN	?GetArtInfoEraVariation@CvBuildingEntry@@QBE?B_NXZ:PROC ; CvBuildingEntry::GetArtInfoEraVariation
; Function compile flags: /Odtp
;	COMDAT ?GetArtInfoEraVariation@CvDllBuildingInfo@@UBG?B_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetArtInfoEraVariation@CvDllBuildingInfo@@UBG?B_NXZ PROC ; CvDllBuildingInfo::GetArtInfoEraVariation, COMDAT

; 114  : {

	push	ebp
	mov	ebp, esp

; 115  : 	return m_pBuildingInfo->GetArtInfoEraVariation();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetArtInfoEraVariation@CvBuildingEntry@@QBE?B_NXZ ; CvBuildingEntry::GetArtInfoEraVariation

; 116  : }

	pop	ebp
	ret	4
?GetArtInfoEraVariation@CvDllBuildingInfo@@UBG?B_NXZ ENDP ; CvDllBuildingInfo::GetArtInfoEraVariation
_TEXT	ENDS
EXTRN	?GetArtInfoRandomVariation@CvBuildingEntry@@QBE?B_NXZ:PROC ; CvBuildingEntry::GetArtInfoRandomVariation
; Function compile flags: /Odtp
;	COMDAT ?GetArtInfoRandomVariation@CvDllBuildingInfo@@UBG?B_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetArtInfoRandomVariation@CvDllBuildingInfo@@UBG?B_NXZ PROC ; CvDllBuildingInfo::GetArtInfoRandomVariation, COMDAT

; 119  : {

	push	ebp
	mov	ebp, esp

; 120  : 	return m_pBuildingInfo->GetArtInfoRandomVariation();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetArtInfoRandomVariation@CvBuildingEntry@@QBE?B_NXZ ; CvBuildingEntry::GetArtInfoRandomVariation

; 121  : }

	pop	ebp
	ret	4
?GetArtInfoRandomVariation@CvDllBuildingInfo@@UBG?B_NXZ ENDP ; CvDllBuildingInfo::GetArtInfoRandomVariation
_TEXT	ENDS
EXTRN	?GetWonderSplashAudio@CvBuildingEntry@@QBEPBDXZ:PROC ; CvBuildingEntry::GetWonderSplashAudio
; Function compile flags: /Odtp
;	COMDAT ?GetWonderSplashAudio@CvDllBuildingInfo@@UBGPBDXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetWonderSplashAudio@CvDllBuildingInfo@@UBGPBDXZ PROC	; CvDllBuildingInfo::GetWonderSplashAudio, COMDAT

; 124  : {

	push	ebp
	mov	ebp, esp

; 125  : 	return m_pBuildingInfo->GetWonderSplashAudio();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetWonderSplashAudio@CvBuildingEntry@@QBEPBDXZ ; CvBuildingEntry::GetWonderSplashAudio

; 126  : }

	pop	ebp
	ret	4
?GetWonderSplashAudio@CvDllBuildingInfo@@UBGPBDXZ ENDP	; CvDllBuildingInfo::GetWonderSplashAudio
_TEXT	ENDS
END
