; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvDllGameAsynch.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_05OCFELOIJ@1?40?40?$AA@			; `string'
CONST	SEGMENT
_guidICvUnknown DD 0d89ba82fH
	DW	09fa3H
	DW	04696H
	DB	0b3H
	DB	0f4H
	DB	052H
	DB	0bdH
	DB	0b1H
	DB	01H
	DB	0cfH
	DB	0b2H
_guidICvGame1 DD 0dc39d22cH
	DW	012aeH
	DW	04395H
	DB	08aH
	DB	020H
	DB	0eeH
	DB	0f1H
	DB	045H
	DB	0a7H
	DB	07dH
	DB	0d0H
CONST	ENDS
_DATA	SEGMENT
_CIV5_XP2_DLL_VERSION DD FLAT:??_C@_05OCFELOIJ@1?40?40?$AA@
_DATA	ENDS
;	COMDAT ??_C@_05OCFELOIJ@1?40?40?$AA@
CONST	SEGMENT
??_C@_05OCFELOIJ@1?40?40?$AA@ DB '1.0.0', 00H		; `string'
CONST	ENDS
PUBLIC	??_7CvDllGameAsynch@@6B@			; CvDllGameAsynch::`vftable'
PUBLIC	??_7ICvGameAsynch1@@6B@				; ICvGameAsynch1::`vftable'
PUBLIC	??_7ICvUnknown@@6B@				; ICvUnknown::`vftable'
PUBLIC	??0CvDllGameAsynch@@QAE@PAVCvGame@@@Z		; CvDllGameAsynch::CvDllGameAsynch
PUBLIC	?QueryInterface@CvDllGameAsynch@@UAGPAXU_GUID@@@Z ; CvDllGameAsynch::QueryInterface
PUBLIC	?Destroy@CvDllGameAsynch@@EAGXXZ		; CvDllGameAsynch::Destroy
PUBLIC	?GetActivePlayer@CvDllGameAsynch@@UAG?AW4PlayerTypes@@XZ ; CvDllGameAsynch::GetActivePlayer
PUBLIC	?GetActiveTeam@CvDllGameAsynch@@UAG?AW4TeamTypes@@XZ ; CvDllGameAsynch::GetActiveTeam
PUBLIC	?GetGameTurn@CvDllGameAsynch@@UBGHXZ		; CvDllGameAsynch::GetGameTurn
PUBLIC	?GetGameSpeedType@CvDllGameAsynch@@UBG?AW4GameSpeedTypes@@XZ ; CvDllGameAsynch::GetGameSpeedType
PUBLIC	?GetGameState@CvDllGameAsynch@@UAG?AW4GameStateTypes@@XZ ; CvDllGameAsynch::GetGameState
PUBLIC	?GetHandicapType@CvDllGameAsynch@@UBG?AW4HandicapTypes@@XZ ; CvDllGameAsynch::GetHandicapType
PUBLIC	?IsAction@CvDllGameAsynch@@UAGHH_N00@Z		; CvDllGameAsynch::IsAction
PUBLIC	?IsDebugMode@CvDllGameAsynch@@UBG_NXZ		; CvDllGameAsynch::IsDebugMode
PUBLIC	?IsFinalInitialized@CvDllGameAsynch@@UBG_NXZ	; CvDllGameAsynch::IsFinalInitialized
PUBLIC	?IsGameMultiPlayer@CvDllGameAsynch@@UBG_NXZ	; CvDllGameAsynch::IsGameMultiPlayer
PUBLIC	?IsHotSeat@CvDllGameAsynch@@UBG_NXZ		; CvDllGameAsynch::IsHotSeat
PUBLIC	?IsMPOption@CvDllGameAsynch@@UBG_NW4MultiplayerOptionTypes@@@Z ; CvDllGameAsynch::IsMPOption
PUBLIC	?IsNetworkMultiPlayer@CvDllGameAsynch@@UBG_NXZ	; CvDllGameAsynch::IsNetworkMultiPlayer
PUBLIC	?IsOption@CvDllGameAsynch@@UBG_NW4GameOptionTypes@@@Z ; CvDllGameAsynch::IsOption
PUBLIC	?IsPaused@CvDllGameAsynch@@UAG_NXZ		; CvDllGameAsynch::IsPaused
PUBLIC	?IsPbem@CvDllGameAsynch@@UBG_NXZ		; CvDllGameAsynch::IsPbem
PUBLIC	?IsTeamGame@CvDllGameAsynch@@UBG_NXZ		; CvDllGameAsynch::IsTeamGame
PUBLIC	?TunerEverConnected@CvDllGameAsynch@@UBG_NXZ	; CvDllGameAsynch::TunerEverConnected
EXTRN	__purecall:PROC
;	COMDAT ??_7CvDllGameAsynch@@6B@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdllgameasynch.cpp
CONST	SEGMENT
??_7CvDllGameAsynch@@6B@ DD FLAT:?QueryInterface@CvDllGameAsynch@@UAGPAXU_GUID@@@Z ; CvDllGameAsynch::`vftable'
	DD	FLAT:?Destroy@CvDllGameAsynch@@EAGXXZ
	DD	FLAT:?GetActivePlayer@CvDllGameAsynch@@UAG?AW4PlayerTypes@@XZ
	DD	FLAT:?GetActiveTeam@CvDllGameAsynch@@UAG?AW4TeamTypes@@XZ
	DD	FLAT:?GetGameTurn@CvDllGameAsynch@@UBGHXZ
	DD	FLAT:?GetGameSpeedType@CvDllGameAsynch@@UBG?AW4GameSpeedTypes@@XZ
	DD	FLAT:?GetGameState@CvDllGameAsynch@@UAG?AW4GameStateTypes@@XZ
	DD	FLAT:?GetHandicapType@CvDllGameAsynch@@UBG?AW4HandicapTypes@@XZ
	DD	FLAT:?IsAction@CvDllGameAsynch@@UAGHH_N00@Z
	DD	FLAT:?IsDebugMode@CvDllGameAsynch@@UBG_NXZ
	DD	FLAT:?IsFinalInitialized@CvDllGameAsynch@@UBG_NXZ
	DD	FLAT:?IsGameMultiPlayer@CvDllGameAsynch@@UBG_NXZ
	DD	FLAT:?IsHotSeat@CvDllGameAsynch@@UBG_NXZ
	DD	FLAT:?IsMPOption@CvDllGameAsynch@@UBG_NW4MultiplayerOptionTypes@@@Z
	DD	FLAT:?IsNetworkMultiPlayer@CvDllGameAsynch@@UBG_NXZ
	DD	FLAT:?IsOption@CvDllGameAsynch@@UBG_NW4GameOptionTypes@@@Z
	DD	FLAT:?IsPaused@CvDllGameAsynch@@UAG_NXZ
	DD	FLAT:?IsPbem@CvDllGameAsynch@@UBG_NXZ
	DD	FLAT:?IsTeamGame@CvDllGameAsynch@@UBG_NXZ
	DD	FLAT:?TunerEverConnected@CvDllGameAsynch@@UBG_NXZ
CONST	ENDS
;	COMDAT ??_7ICvGameAsynch1@@6B@
CONST	SEGMENT
??_7ICvGameAsynch1@@6B@ DD FLAT:__purecall		; ICvGameAsynch1::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ICvUnknown@@6B@
CONST	SEGMENT
??_7ICvUnknown@@6B@ DD FLAT:__purecall			; ICvUnknown::`vftable'
	DD	FLAT:__purecall
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ??0CvDllGameAsynch@@QAE@PAVCvGame@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pGame$ = 8						; size = 4
??0CvDllGameAsynch@@QAE@PAVCvGame@@@Z PROC		; CvDllGameAsynch::CvDllGameAsynch, COMDAT
; _this$ = ecx

; 15   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICvUnknown@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7ICvGameAsynch1@@6B@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7CvDllGameAsynch@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pGame$[ebp]
	mov	DWORD PTR [ecx+8], edx

; 16   : 
; 17   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CvDllGameAsynch@@QAE@PAVCvGame@@@Z ENDP		; CvDllGameAsynch::CvDllGameAsynch
_TEXT	ENDS
PUBLIC	??1CvDllGameAsynch@@QAE@XZ			; CvDllGameAsynch::~CvDllGameAsynch
; Function compile flags: /Odtp
;	COMDAT ??1CvDllGameAsynch@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvDllGameAsynch@@QAE@XZ PROC				; CvDllGameAsynch::~CvDllGameAsynch, COMDAT
; _this$ = ecx

; 20   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CvDllGameAsynch@@6B@

; 21   : 
; 22   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1CvDllGameAsynch@@QAE@XZ ENDP				; CvDllGameAsynch::~CvDllGameAsynch
_TEXT	ENDS
PUBLIC	?IncrementReference@CvDllGameAsynch@@QAEIXZ	; CvDllGameAsynch::IncrementReference
; Function compile flags: /Odtp
;	COMDAT ?QueryInterface@CvDllGameAsynch@@UAGPAXU_GUID@@@Z
_TEXT	SEGMENT
tv90 = -88						; size = 4
tv161 = -84						; size = 4
tv85 = -80						; size = 4
tv137 = -76						; size = 4
$T218043 = -72						; size = 16
$T218042 = -56						; size = 16
$T218041 = -40						; size = 16
$T218040 = -20						; size = 16
_this$ = 8						; size = 4
_guidInterface$ = 12					; size = 16
?QueryInterface@CvDllGameAsynch@@UAGPAXU_GUID@@@Z PROC	; CvDllGameAsynch::QueryInterface, COMDAT

; 25   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	esi
	push	edi

; 26   : 	if(guidInterface == ICvUnknown::GetInterfaceId() ||
; 27   : 		guidInterface == ICvGame1::GetInterfaceId())

	mov	eax, DWORD PTR _guidICvUnknown
	mov	DWORD PTR $T218041[ebp], eax
	mov	ecx, DWORD PTR _guidICvUnknown+4
	mov	DWORD PTR $T218041[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvUnknown+8
	mov	DWORD PTR $T218041[ebp+8], edx
	mov	eax, DWORD PTR _guidICvUnknown+12
	mov	DWORD PTR $T218041[ebp+12], eax
	mov	ecx, DWORD PTR $T218041[ebp]
	mov	DWORD PTR $T218040[ebp], ecx
	mov	edx, DWORD PTR $T218041[ebp+4]
	mov	DWORD PTR $T218040[ebp+4], edx
	mov	eax, DWORD PTR $T218041[ebp+8]
	mov	DWORD PTR $T218040[ebp+8], eax
	mov	ecx, DWORD PTR $T218041[ebp+12]
	mov	DWORD PTR $T218040[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T218040[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv137[ebp], edx
	repe cmpsb
	je	SHORT $LN17@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv137[ebp], eax
$LN17@QueryInter:
	mov	ecx, DWORD PTR tv137[ebp]
	mov	DWORD PTR tv85[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv85[ebp], 0
	sete	dl
	test	edx, edx
	jne	SHORT $LN1@QueryInter
	mov	eax, DWORD PTR _guidICvGame1
	mov	DWORD PTR $T218043[ebp], eax
	mov	ecx, DWORD PTR _guidICvGame1+4
	mov	DWORD PTR $T218043[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvGame1+8
	mov	DWORD PTR $T218043[ebp+8], edx
	mov	eax, DWORD PTR _guidICvGame1+12
	mov	DWORD PTR $T218043[ebp+12], eax
	mov	ecx, DWORD PTR $T218043[ebp]
	mov	DWORD PTR $T218042[ebp], ecx
	mov	edx, DWORD PTR $T218043[ebp+4]
	mov	DWORD PTR $T218042[ebp+4], edx
	mov	eax, DWORD PTR $T218043[ebp+8]
	mov	DWORD PTR $T218042[ebp+8], eax
	mov	ecx, DWORD PTR $T218043[ebp+12]
	mov	DWORD PTR $T218042[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T218042[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv161[ebp], edx
	repe cmpsb
	je	SHORT $LN18@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv161[ebp], eax
$LN18@QueryInter:
	mov	ecx, DWORD PTR tv161[ebp]
	mov	DWORD PTR tv90[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv90[ebp], 0
	sete	dl
	test	edx, edx
	je	SHORT $LN2@QueryInter
$LN1@QueryInter:

; 28   : 	{
; 29   : 		IncrementReference();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IncrementReference@CvDllGameAsynch@@QAEIXZ ; CvDllGameAsynch::IncrementReference

; 30   : 		return this;

	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN3@QueryInter
$LN2@QueryInter:

; 31   : 	}
; 32   : 
; 33   : 	return NULL;

	xor	eax, eax
$LN3@QueryInter:

; 34   : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?QueryInterface@CvDllGameAsynch@@UAGPAXU_GUID@@@Z ENDP	; CvDllGameAsynch::QueryInterface
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IncrementReference@CvDllGameAsynch@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IncrementReference@CvDllGameAsynch@@QAEIXZ PROC	; CvDllGameAsynch::IncrementReference, COMDAT
; _this$ = ecx

; 37   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 38   : 	++m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 39   : 	return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 40   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IncrementReference@CvDllGameAsynch@@QAEIXZ ENDP	; CvDllGameAsynch::IncrementReference
_TEXT	ENDS
PUBLIC	??3CvDllGameAsynch@@SAXPAX@Z			; CvDllGameAsynch::operator delete
PUBLIC	?DecrementReference@CvDllGameAsynch@@QAEIXZ	; CvDllGameAsynch::DecrementReference
; Function compile flags: /Odtp
;	COMDAT ?DecrementReference@CvDllGameAsynch@@QAEIXZ
_TEXT	SEGMENT
tv70 = -16						; size = 4
_this$ = -12						; size = 4
$T218075 = -8						; size = 4
$T218074 = -4						; size = 4
?DecrementReference@CvDllGameAsynch@@QAEIXZ PROC	; CvDllGameAsynch::DecrementReference, COMDAT
; _this$ = ecx

; 43   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 44   : 	if(m_uiRefCount == 1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 1
	jne	SHORT $LN2@DecrementR

; 45   : 	{
; 46   : 		delete this;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T218075[ebp], ecx
	mov	edx, DWORD PTR $T218075[ebp]
	mov	DWORD PTR $T218074[ebp], edx
	cmp	DWORD PTR $T218074[ebp], 0
	je	SHORT $LN5@DecrementR
	mov	ecx, DWORD PTR $T218074[ebp]
	call	??1CvDllGameAsynch@@QAE@XZ		; CvDllGameAsynch::~CvDllGameAsynch
	mov	eax, 1
	and	eax, 1
	je	SHORT $LN8@DecrementR
	mov	ecx, DWORD PTR $T218074[ebp]
	push	ecx
	call	??3CvDllGameAsynch@@SAXPAX@Z		; CvDllGameAsynch::operator delete
	add	esp, 4
$LN8@DecrementR:
	mov	edx, DWORD PTR $T218074[ebp]
	mov	DWORD PTR tv70[ebp], edx
	jmp	SHORT $LN6@DecrementR
$LN5@DecrementR:
	mov	DWORD PTR tv70[ebp], 0
$LN6@DecrementR:

; 47   : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN3@DecrementR

; 48   : 	}
; 49   : 	else

	jmp	SHORT $LN3@DecrementR
$LN2@DecrementR:

; 50   : 	{
; 51   : 		--m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 52   : 		return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
$LN3@DecrementR:

; 53   : 	}
; 54   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DecrementReference@CvDllGameAsynch@@QAEIXZ ENDP	; CvDllGameAsynch::DecrementReference
_TEXT	ENDS
PUBLIC	?GetReferenceCount@CvDllGameAsynch@@QAEIXZ	; CvDllGameAsynch::GetReferenceCount
; Function compile flags: /Odtp
;	COMDAT ?GetReferenceCount@CvDllGameAsynch@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetReferenceCount@CvDllGameAsynch@@QAEIXZ PROC		; CvDllGameAsynch::GetReferenceCount, COMDAT
; _this$ = ecx

; 57   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 58   : 	return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 59   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetReferenceCount@CvDllGameAsynch@@QAEIXZ ENDP		; CvDllGameAsynch::GetReferenceCount
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Destroy@CvDllGameAsynch@@EAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Destroy@CvDllGameAsynch@@EAGXXZ PROC			; CvDllGameAsynch::Destroy, COMDAT

; 62   : {

	push	ebp
	mov	ebp, esp

; 63   : 	DecrementReference();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DecrementReference@CvDllGameAsynch@@QAEIXZ ; CvDllGameAsynch::DecrementReference

; 64   : }

	pop	ebp
	ret	4
?Destroy@CvDllGameAsynch@@EAGXXZ ENDP			; CvDllGameAsynch::Destroy
_TEXT	ENDS
EXTRN	?Free@CvDllGameContext@@SAXPAX@Z:PROC		; CvDllGameContext::Free
; Function compile flags: /Odtp
;	COMDAT ??3CvDllGameAsynch@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CvDllGameAsynch@@SAXPAX@Z PROC			; CvDllGameAsynch::operator delete, COMDAT

; 67   : {

	push	ebp
	mov	ebp, esp

; 68   : 	CvDllGameContext::Free(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?Free@CvDllGameContext@@SAXPAX@Z	; CvDllGameContext::Free
	add	esp, 4

; 69   : }

	pop	ebp
	ret	0
??3CvDllGameAsynch@@SAXPAX@Z ENDP			; CvDllGameAsynch::operator delete
_TEXT	ENDS
PUBLIC	??2CvDllGameAsynch@@SAPAXI@Z			; CvDllGameAsynch::operator new
EXTRN	?Allocate@CvDllGameContext@@SAPAXI@Z:PROC	; CvDllGameContext::Allocate
; Function compile flags: /Odtp
;	COMDAT ??2CvDllGameAsynch@@SAPAXI@Z
_TEXT	SEGMENT
_bytes$ = 8						; size = 4
??2CvDllGameAsynch@@SAPAXI@Z PROC			; CvDllGameAsynch::operator new, COMDAT

; 72   : {

	push	ebp
	mov	ebp, esp

; 73   : 	return CvDllGameContext::Allocate(bytes);

	mov	eax, DWORD PTR _bytes$[ebp]
	push	eax
	call	?Allocate@CvDllGameContext@@SAPAXI@Z	; CvDllGameContext::Allocate
	add	esp, 4

; 74   : }

	pop	ebp
	ret	0
??2CvDllGameAsynch@@SAPAXI@Z ENDP			; CvDllGameAsynch::operator new
_TEXT	ENDS
EXTRN	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ:PROC ; CvGame::getActivePlayer
; Function compile flags: /Odtp
;	COMDAT ?GetActivePlayer@CvDllGameAsynch@@UAG?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetActivePlayer@CvDllGameAsynch@@UAG?AW4PlayerTypes@@XZ PROC ; CvDllGameAsynch::GetActivePlayer, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp

; 79   : 	return m_pGame->getActivePlayer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer

; 80   : }

	pop	ebp
	ret	4
?GetActivePlayer@CvDllGameAsynch@@UAG?AW4PlayerTypes@@XZ ENDP ; CvDllGameAsynch::GetActivePlayer
_TEXT	ENDS
EXTRN	?getActiveTeam@CvGame@@QAE?AW4TeamTypes@@XZ:PROC ; CvGame::getActiveTeam
; Function compile flags: /Odtp
;	COMDAT ?GetActiveTeam@CvDllGameAsynch@@UAG?AW4TeamTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetActiveTeam@CvDllGameAsynch@@UAG?AW4TeamTypes@@XZ PROC ; CvDllGameAsynch::GetActiveTeam, COMDAT

; 83   : {

	push	ebp
	mov	ebp, esp

; 84   : 	return m_pGame->getActiveTeam();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getActiveTeam@CvGame@@QAE?AW4TeamTypes@@XZ ; CvGame::getActiveTeam

; 85   : }

	pop	ebp
	ret	4
?GetActiveTeam@CvDllGameAsynch@@UAG?AW4TeamTypes@@XZ ENDP ; CvDllGameAsynch::GetActiveTeam
_TEXT	ENDS
EXTRN	?getGameTurn@CvGame@@QAEHXZ:PROC		; CvGame::getGameTurn
; Function compile flags: /Odtp
;	COMDAT ?GetGameTurn@CvDllGameAsynch@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetGameTurn@CvDllGameAsynch@@UBGHXZ PROC		; CvDllGameAsynch::GetGameTurn, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp

; 89   : 	return m_pGame->getGameTurn();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn

; 90   : }

	pop	ebp
	ret	4
?GetGameTurn@CvDllGameAsynch@@UBGHXZ ENDP		; CvDllGameAsynch::GetGameTurn
_TEXT	ENDS
EXTRN	?getGameSpeedType@CvGame@@QBE?AW4GameSpeedTypes@@XZ:PROC ; CvGame::getGameSpeedType
; Function compile flags: /Odtp
;	COMDAT ?GetGameSpeedType@CvDllGameAsynch@@UBG?AW4GameSpeedTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetGameSpeedType@CvDllGameAsynch@@UBG?AW4GameSpeedTypes@@XZ PROC ; CvDllGameAsynch::GetGameSpeedType, COMDAT

; 93   : {

	push	ebp
	mov	ebp, esp

; 94   : 	return m_pGame->getGameSpeedType();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getGameSpeedType@CvGame@@QBE?AW4GameSpeedTypes@@XZ ; CvGame::getGameSpeedType

; 95   : }

	pop	ebp
	ret	4
?GetGameSpeedType@CvDllGameAsynch@@UBG?AW4GameSpeedTypes@@XZ ENDP ; CvDllGameAsynch::GetGameSpeedType
_TEXT	ENDS
EXTRN	?getGameState@CvGame@@QAE?AW4GameStateTypes@@XZ:PROC ; CvGame::getGameState
; Function compile flags: /Odtp
;	COMDAT ?GetGameState@CvDllGameAsynch@@UAG?AW4GameStateTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetGameState@CvDllGameAsynch@@UAG?AW4GameStateTypes@@XZ PROC ; CvDllGameAsynch::GetGameState, COMDAT

; 98   : {

	push	ebp
	mov	ebp, esp

; 99   : 	return m_pGame->getGameState();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getGameState@CvGame@@QAE?AW4GameStateTypes@@XZ ; CvGame::getGameState

; 100  : }

	pop	ebp
	ret	4
?GetGameState@CvDllGameAsynch@@UAG?AW4GameStateTypes@@XZ ENDP ; CvDllGameAsynch::GetGameState
_TEXT	ENDS
EXTRN	?getHandicapType@CvGame@@QBE?AW4HandicapTypes@@XZ:PROC ; CvGame::getHandicapType
; Function compile flags: /Odtp
;	COMDAT ?GetHandicapType@CvDllGameAsynch@@UBG?AW4HandicapTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetHandicapType@CvDllGameAsynch@@UBG?AW4HandicapTypes@@XZ PROC ; CvDllGameAsynch::GetHandicapType, COMDAT

; 103  : {

	push	ebp
	mov	ebp, esp

; 104  : 	return m_pGame->getHandicapType();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getHandicapType@CvGame@@QBE?AW4HandicapTypes@@XZ ; CvGame::getHandicapType

; 105  : }

	pop	ebp
	ret	4
?GetHandicapType@CvDllGameAsynch@@UBG?AW4HandicapTypes@@XZ ENDP ; CvDllGameAsynch::GetHandicapType
_TEXT	ENDS
EXTRN	?IsAction@CvGame@@QAEHH_N00@Z:PROC		; CvGame::IsAction
; Function compile flags: /Odtp
;	COMDAT ?IsAction@CvDllGameAsynch@@UAGHH_N00@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iKeyStroke$ = 12					; size = 4
_bAlt$ = 16						; size = 1
_bShift$ = 20						; size = 1
_bCtrl$ = 24						; size = 1
?IsAction@CvDllGameAsynch@@UAGHH_N00@Z PROC		; CvDllGameAsynch::IsAction, COMDAT

; 108  : {

	push	ebp
	mov	ebp, esp

; 109  : 	return m_pGame->IsAction(iKeyStroke, bAlt, bShift, bCtrl);

	movzx	eax, BYTE PTR _bCtrl$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bShift$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bAlt$[ebp]
	push	edx
	mov	eax, DWORD PTR _iKeyStroke$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?IsAction@CvGame@@QAEHH_N00@Z		; CvGame::IsAction

; 110  : }

	pop	ebp
	ret	20					; 00000014H
?IsAction@CvDllGameAsynch@@UAGHH_N00@Z ENDP		; CvDllGameAsynch::IsAction
_TEXT	ENDS
EXTRN	?isDebugMode@CvGame@@QBE_NXZ:PROC		; CvGame::isDebugMode
; Function compile flags: /Odtp
;	COMDAT ?IsDebugMode@CvDllGameAsynch@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsDebugMode@CvDllGameAsynch@@UBG_NXZ PROC		; CvDllGameAsynch::IsDebugMode, COMDAT

; 113  : {

	push	ebp
	mov	ebp, esp

; 114  : 	return m_pGame->isDebugMode();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?isDebugMode@CvGame@@QBE_NXZ		; CvGame::isDebugMode

; 115  : }

	pop	ebp
	ret	4
?IsDebugMode@CvDllGameAsynch@@UBG_NXZ ENDP		; CvDllGameAsynch::IsDebugMode
_TEXT	ENDS
EXTRN	?isFinalInitialized@CvGame@@QBE_NXZ:PROC	; CvGame::isFinalInitialized
; Function compile flags: /Odtp
;	COMDAT ?IsFinalInitialized@CvDllGameAsynch@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsFinalInitialized@CvDllGameAsynch@@UBG_NXZ PROC	; CvDllGameAsynch::IsFinalInitialized, COMDAT

; 118  : {

	push	ebp
	mov	ebp, esp

; 119  : 	return m_pGame->isFinalInitialized();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?isFinalInitialized@CvGame@@QBE_NXZ	; CvGame::isFinalInitialized

; 120  : }

	pop	ebp
	ret	4
?IsFinalInitialized@CvDllGameAsynch@@UBG_NXZ ENDP	; CvDllGameAsynch::IsFinalInitialized
_TEXT	ENDS
EXTRN	?isGameMultiPlayer@CvGame@@QBE_NXZ:PROC		; CvGame::isGameMultiPlayer
; Function compile flags: /Odtp
;	COMDAT ?IsGameMultiPlayer@CvDllGameAsynch@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsGameMultiPlayer@CvDllGameAsynch@@UBG_NXZ PROC	; CvDllGameAsynch::IsGameMultiPlayer, COMDAT

; 123  : {

	push	ebp
	mov	ebp, esp

; 124  : 	return m_pGame->isGameMultiPlayer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?isGameMultiPlayer@CvGame@@QBE_NXZ	; CvGame::isGameMultiPlayer

; 125  : }

	pop	ebp
	ret	4
?IsGameMultiPlayer@CvDllGameAsynch@@UBG_NXZ ENDP	; CvDllGameAsynch::IsGameMultiPlayer
_TEXT	ENDS
EXTRN	?isHotSeat@CvGame@@QBE_NXZ:PROC			; CvGame::isHotSeat
; Function compile flags: /Odtp
;	COMDAT ?IsHotSeat@CvDllGameAsynch@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsHotSeat@CvDllGameAsynch@@UBG_NXZ PROC		; CvDllGameAsynch::IsHotSeat, COMDAT

; 128  : {

	push	ebp
	mov	ebp, esp

; 129  : 	return m_pGame->isHotSeat();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?isHotSeat@CvGame@@QBE_NXZ		; CvGame::isHotSeat

; 130  : }

	pop	ebp
	ret	4
?IsHotSeat@CvDllGameAsynch@@UBG_NXZ ENDP		; CvDllGameAsynch::IsHotSeat
_TEXT	ENDS
EXTRN	?isMPOption@CvGame@@QBE_NW4MultiplayerOptionTypes@@@Z:PROC ; CvGame::isMPOption
; Function compile flags: /Odtp
;	COMDAT ?IsMPOption@CvDllGameAsynch@@UBG_NW4MultiplayerOptionTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_eIndex$ = 12						; size = 4
?IsMPOption@CvDllGameAsynch@@UBG_NW4MultiplayerOptionTypes@@@Z PROC ; CvDllGameAsynch::IsMPOption, COMDAT

; 133  : {

	push	ebp
	mov	ebp, esp

; 134  : 	return m_pGame->isMPOption(eIndex);

	mov	eax, DWORD PTR _eIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?isMPOption@CvGame@@QBE_NW4MultiplayerOptionTypes@@@Z ; CvGame::isMPOption

; 135  : }

	pop	ebp
	ret	8
?IsMPOption@CvDllGameAsynch@@UBG_NW4MultiplayerOptionTypes@@@Z ENDP ; CvDllGameAsynch::IsMPOption
_TEXT	ENDS
EXTRN	?isNetworkMultiPlayer@CvGame@@QBE_NXZ:PROC	; CvGame::isNetworkMultiPlayer
; Function compile flags: /Odtp
;	COMDAT ?IsNetworkMultiPlayer@CvDllGameAsynch@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsNetworkMultiPlayer@CvDllGameAsynch@@UBG_NXZ PROC	; CvDllGameAsynch::IsNetworkMultiPlayer, COMDAT

; 138  : {

	push	ebp
	mov	ebp, esp

; 139  : 	return m_pGame->isNetworkMultiPlayer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?isNetworkMultiPlayer@CvGame@@QBE_NXZ	; CvGame::isNetworkMultiPlayer

; 140  : }

	pop	ebp
	ret	4
?IsNetworkMultiPlayer@CvDllGameAsynch@@UBG_NXZ ENDP	; CvDllGameAsynch::IsNetworkMultiPlayer
_TEXT	ENDS
EXTRN	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z:PROC ; CvGame::isOption
; Function compile flags: /Odtp
;	COMDAT ?IsOption@CvDllGameAsynch@@UBG_NW4GameOptionTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_eIndex$ = 12						; size = 4
?IsOption@CvDllGameAsynch@@UBG_NW4GameOptionTypes@@@Z PROC ; CvDllGameAsynch::IsOption, COMDAT

; 143  : {

	push	ebp
	mov	ebp, esp

; 144  : 	return m_pGame->isOption(eIndex);

	mov	eax, DWORD PTR _eIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z ; CvGame::isOption

; 145  : }

	pop	ebp
	ret	8
?IsOption@CvDllGameAsynch@@UBG_NW4GameOptionTypes@@@Z ENDP ; CvDllGameAsynch::IsOption
_TEXT	ENDS
EXTRN	?isPaused@CvGame@@QAE_NXZ:PROC			; CvGame::isPaused
; Function compile flags: /Odtp
;	COMDAT ?IsPaused@CvDllGameAsynch@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsPaused@CvDllGameAsynch@@UAG_NXZ PROC			; CvDllGameAsynch::IsPaused, COMDAT

; 148  : {

	push	ebp
	mov	ebp, esp

; 149  : 	return m_pGame->isPaused();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?isPaused@CvGame@@QAE_NXZ		; CvGame::isPaused

; 150  : }

	pop	ebp
	ret	4
?IsPaused@CvDllGameAsynch@@UAG_NXZ ENDP			; CvDllGameAsynch::IsPaused
_TEXT	ENDS
EXTRN	?isPbem@CvGame@@QBE_NXZ:PROC			; CvGame::isPbem
; Function compile flags: /Odtp
;	COMDAT ?IsPbem@CvDllGameAsynch@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsPbem@CvDllGameAsynch@@UBG_NXZ PROC			; CvDllGameAsynch::IsPbem, COMDAT

; 153  : {

	push	ebp
	mov	ebp, esp

; 154  : 	return m_pGame->isPbem();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?isPbem@CvGame@@QBE_NXZ			; CvGame::isPbem

; 155  : }

	pop	ebp
	ret	4
?IsPbem@CvDllGameAsynch@@UBG_NXZ ENDP			; CvDllGameAsynch::IsPbem
_TEXT	ENDS
EXTRN	?isTeamGame@CvGame@@QBE_NXZ:PROC		; CvGame::isTeamGame
; Function compile flags: /Odtp
;	COMDAT ?IsTeamGame@CvDllGameAsynch@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsTeamGame@CvDllGameAsynch@@UBG_NXZ PROC		; CvDllGameAsynch::IsTeamGame, COMDAT

; 158  : {

	push	ebp
	mov	ebp, esp

; 159  : 	return m_pGame->isTeamGame();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?isTeamGame@CvGame@@QBE_NXZ		; CvGame::isTeamGame

; 160  : }

	pop	ebp
	ret	4
?IsTeamGame@CvDllGameAsynch@@UBG_NXZ ENDP		; CvDllGameAsynch::IsTeamGame
_TEXT	ENDS
EXTRN	?TunerEverConnected@CvGame@@QBE_NXZ:PROC	; CvGame::TunerEverConnected
; Function compile flags: /Odtp
;	COMDAT ?TunerEverConnected@CvDllGameAsynch@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?TunerEverConnected@CvDllGameAsynch@@UBG_NXZ PROC	; CvDllGameAsynch::TunerEverConnected, COMDAT

; 163  : {

	push	ebp
	mov	ebp, esp

; 164  : 	return m_pGame->TunerEverConnected();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?TunerEverConnected@CvGame@@QBE_NXZ	; CvGame::TunerEverConnected

; 165  : }

	pop	ebp
	ret	4
?TunerEverConnected@CvDllGameAsynch@@UBG_NXZ ENDP	; CvDllGameAsynch::TunerEverConnected
_TEXT	ENDS
END
