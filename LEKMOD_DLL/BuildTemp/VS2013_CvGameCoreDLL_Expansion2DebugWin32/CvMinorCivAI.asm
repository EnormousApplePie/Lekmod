; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvMinorCivAI.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0CF@JHCBKEFK@f2eb1642?93334?94d2c?98db1?908e6aede@ ; `string'
PUBLIC	?NO_QUEST_DATA@CvMinorCivQuest@@2HB		; CvMinorCivQuest::NO_QUEST_DATA
PUBLIC	?NO_TURN@CvMinorCivQuest@@2HB			; CvMinorCivQuest::NO_TURN
CONST	SEGMENT
_CIV5_XP2_SCENARIO2_MODID DD FLAT:??_C@_0CF@JHCBKEFK@f2eb1642?93334?94d2c?98db1?908e6aede@
CONST	ENDS
;	COMDAT ??_C@_0CF@JHCBKEFK@f2eb1642?93334?94d2c?98db1?908e6aede@
CONST	SEGMENT
??_C@_0CF@JHCBKEFK@f2eb1642?93334?94d2c?98db1?908e6aede@ DB 'f2eb1642-333'
	DB	'4-4d2c-8db1-08e6aede3532', 00H		; `string'
CONST	ENDS
;	COMDAT ?NO_TURN@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_TURN@CvMinorCivQuest@@2HB DD 0ffffffffH		; CvMinorCivQuest::NO_TURN
CONST	ENDS
;	COMDAT ?NO_QUEST_DATA@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_QUEST_DATA@CvMinorCivQuest@@2HB DD 0ffffffffH	; CvMinorCivQuest::NO_QUEST_DATA
CONST	ENDS
PUBLIC	??0CvMinorCivQuest@@QAE@XZ			; CvMinorCivQuest::CvMinorCivQuest
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
;	COMDAT ??0CvMinorCivQuest@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CvMinorCivQuest@@QAE@XZ PROC				; CvMinorCivQuest::CvMinorCivQuest, COMDAT
; _this$ = ecx

; 29   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 30   : 	m_eMinor = NO_PLAYER;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1

; 31   : 	m_eAssignedPlayer = NO_PLAYER;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], -1

; 32   : 	m_eType = NO_MINOR_CIV_QUEST_TYPE;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], -1

; 33   : 	m_iStartTurn = NO_TURN; /* -1 */

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], -1

; 34   : 	m_iData1 = NO_QUEST_DATA; /* -1 */

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], -1

; 35   : 	m_iData2 = NO_QUEST_DATA; /* -1 */

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], -1

; 36   : 	m_bHandled = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+24], 0

; 37   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CvMinorCivQuest@@QAE@XZ ENDP				; CvMinorCivQuest::CvMinorCivQuest
_TEXT	ENDS
PUBLIC	??0CvMinorCivQuest@@QAE@W4PlayerTypes@@0W4MinorCivQuestTypes@@@Z ; CvMinorCivQuest::CvMinorCivQuest
; Function compile flags: /Odtp
;	COMDAT ??0CvMinorCivQuest@@QAE@W4PlayerTypes@@0W4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eMinor$ = 8						; size = 4
_eAssignedPlayer$ = 12					; size = 4
_eType$ = 16						; size = 4
??0CvMinorCivQuest@@QAE@W4PlayerTypes@@0W4MinorCivQuestTypes@@@Z PROC ; CvMinorCivQuest::CvMinorCivQuest, COMDAT
; _this$ = ecx

; 41   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 42   : 	m_eMinor = eMinor;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _eMinor$[ebp]
	mov	DWORD PTR [eax], ecx

; 43   : 	m_eAssignedPlayer = eAssignedPlayer;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _eAssignedPlayer$[ebp]
	mov	DWORD PTR [edx+4], eax

; 44   : 	m_eType = eType;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _eType$[ebp]
	mov	DWORD PTR [ecx+8], edx

; 45   : 	m_iStartTurn = NO_TURN; /* -1 */

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], -1

; 46   : 	m_iData1 = NO_QUEST_DATA; /* -1 */

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], -1

; 47   : 	m_iData2 = NO_QUEST_DATA; /* -1 */

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], -1

; 48   : 	m_bHandled = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+24], 0

; 49   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0CvMinorCivQuest@@QAE@W4PlayerTypes@@0W4MinorCivQuestTypes@@@Z ENDP ; CvMinorCivQuest::CvMinorCivQuest
_TEXT	ENDS
PUBLIC	??1CvMinorCivQuest@@QAE@XZ			; CvMinorCivQuest::~CvMinorCivQuest
; Function compile flags: /Odtp
;	COMDAT ??1CvMinorCivQuest@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvMinorCivQuest@@QAE@XZ PROC				; CvMinorCivQuest::~CvMinorCivQuest, COMDAT
; _this$ = ecx

; 52   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 53   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1CvMinorCivQuest@@QAE@XZ ENDP				; CvMinorCivQuest::~CvMinorCivQuest
_TEXT	ENDS
PUBLIC	?GetMinor@CvMinorCivQuest@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivQuest::GetMinor
; Function compile flags: /Odtp
;	COMDAT ?GetMinor@CvMinorCivQuest@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMinor@CvMinorCivQuest@@QBE?AW4PlayerTypes@@XZ PROC	; CvMinorCivQuest::GetMinor, COMDAT
; _this$ = ecx

; 57   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 58   : 	return m_eMinor;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 59   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetMinor@CvMinorCivQuest@@QBE?AW4PlayerTypes@@XZ ENDP	; CvMinorCivQuest::GetMinor
_TEXT	ENDS
PUBLIC	?GetPlayerAssignedTo@CvMinorCivQuest@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivQuest::GetPlayerAssignedTo
; Function compile flags: /Odtp
;	COMDAT ?GetPlayerAssignedTo@CvMinorCivQuest@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPlayerAssignedTo@CvMinorCivQuest@@QBE?AW4PlayerTypes@@XZ PROC ; CvMinorCivQuest::GetPlayerAssignedTo, COMDAT
; _this$ = ecx

; 63   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 64   : 	return m_eAssignedPlayer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 65   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerAssignedTo@CvMinorCivQuest@@QBE?AW4PlayerTypes@@XZ ENDP ; CvMinorCivQuest::GetPlayerAssignedTo
_TEXT	ENDS
PUBLIC	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
; Function compile flags: /Odtp
;	COMDAT ?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ PROC ; CvMinorCivQuest::GetType, COMDAT
; _this$ = ecx

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   : 	return m_eType;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 71   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ENDP ; CvMinorCivQuest::GetType
_TEXT	ENDS
PUBLIC	?GetStartTurn@CvMinorCivQuest@@QBEHXZ		; CvMinorCivQuest::GetStartTurn
; Function compile flags: /Odtp
;	COMDAT ?GetStartTurn@CvMinorCivQuest@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetStartTurn@CvMinorCivQuest@@QBEHXZ PROC		; CvMinorCivQuest::GetStartTurn, COMDAT
; _this$ = ecx

; 75   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 76   : 	return m_iStartTurn;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]

; 77   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetStartTurn@CvMinorCivQuest@@QBEHXZ ENDP		; CvMinorCivQuest::GetStartTurn
_TEXT	ENDS
PUBLIC	?GetEndTurn@CvMinorCivQuest@@QBEHXZ		; CvMinorCivQuest::GetEndTurn
EXTRN	?getGreatPeoplePercent@CvGameSpeedInfo@@QBEHXZ:PROC ; CvGameSpeedInfo::getGreatPeoplePercent
EXTRN	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ:PROC ; CvGame::getGameSpeedInfo
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
; Function compile flags: /Odtp
;	COMDAT ?GetEndTurn@CvMinorCivQuest@@QBEHXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T235039 = -8						; size = 4
_iLength$ = -4						; size = 4
?GetEndTurn@CvMinorCivQuest@@QBEHXZ PROC		; CvMinorCivQuest::GetEndTurn, COMDAT
; _this$ = ecx

; 81   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 82   : 	CvAssertMsg(m_iStartTurn != NO_TURN, "GetEndTurn called for a quest, but the start turn was not initialized!");
; 83   : 
; 84   : 	int iLength = 0;

	mov	DWORD PTR _iLength$[ebp], 0

; 85   : 
; 86   : 	if(m_eType == MINOR_CIV_QUEST_CONTEST_CULTURE)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 10			; 0000000aH
	jne	SHORT $LN16@GetEndTurn

; 87   : 	{
; 88   : 		iLength = GC.getMINOR_QUEST_STANDARD_CONTEST_LENGTH();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3132
	mov	DWORD PTR _iLength$[ebp], ecx

; 89   : 	}
; 90   : 
; 91   : 	else if(m_eType == MINOR_CIV_QUEST_CONTEST_FAITH)

	jmp	$LN15@GetEndTurn
$LN16@GetEndTurn:
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 11			; 0000000bH
	jne	SHORT $LN14@GetEndTurn

; 92   : 	{
; 93   : 		iLength = GC.getMINOR_QUEST_STANDARD_CONTEST_LENGTH();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3132
	mov	DWORD PTR _iLength$[ebp], eax

; 94   : 	}
; 95   : 
; 96   : 	else if(m_eType == MINOR_CIV_QUEST_CONTEST_TECHS)

	jmp	SHORT $LN15@GetEndTurn
$LN14@GetEndTurn:
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 12			; 0000000cH
	jne	SHORT $LN12@GetEndTurn

; 97   : 	{
; 98   : 		iLength = GC.getMINOR_QUEST_STANDARD_CONTEST_LENGTH();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3132
	mov	DWORD PTR _iLength$[ebp], edx

; 99   : 	}
; 100  : 
; 101  : 	else if(m_eType == MINOR_CIV_QUEST_INVEST)

	jmp	SHORT $LN15@GetEndTurn
$LN12@GetEndTurn:
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 13			; 0000000dH
	jne	SHORT $LN10@GetEndTurn

; 102  : 	{
; 103  : 		iLength = GC.getMINOR_QUEST_STANDARD_CONTEST_LENGTH();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3132
	mov	DWORD PTR _iLength$[ebp], ecx

; 104  : 	}
; 105  : 
; 106  : 	else if(m_eType == MINOR_CIV_QUEST_GIVE_GOLD)

	jmp	SHORT $LN15@GetEndTurn
$LN10@GetEndTurn:
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 8
	jne	SHORT $LN8@GetEndTurn

; 107  : 	{
; 108  : 		iLength = GC.getMINOR_QUEST_STANDARD_CONTEST_LENGTH();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3132
	mov	DWORD PTR _iLength$[ebp], eax

; 109  : 	}
; 110  : 
; 111  : 	else if(m_eType == MINOR_CIV_QUEST_PLEDGE_TO_PROTECT)

	jmp	SHORT $LN15@GetEndTurn
$LN8@GetEndTurn:
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 9
	jne	SHORT $LN6@GetEndTurn

; 112  : 	{
; 113  : 		iLength = GC.getMINOR_QUEST_STANDARD_CONTEST_LENGTH();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3132
	mov	DWORD PTR _iLength$[ebp], edx

; 114  : 	}
; 115  : 
; 116  : 	else if(m_eType == MINOR_CIV_QUEST_BULLY_CITY_STATE)

	jmp	SHORT $LN15@GetEndTurn
$LN6@GetEndTurn:
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 14			; 0000000eH
	jne	SHORT $LN4@GetEndTurn

; 117  : 	{
; 118  : 		iLength = GC.getMINOR_QUEST_STANDARD_CONTEST_LENGTH();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3132
	mov	DWORD PTR _iLength$[ebp], ecx

; 119  : 	}
; 120  : 
; 121  : 	else if(m_eType == MINOR_CIV_QUEST_DENOUNCE_MAJOR)

	jmp	SHORT $LN15@GetEndTurn
$LN4@GetEndTurn:
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 15			; 0000000fH
	jne	SHORT $LN2@GetEndTurn

; 122  : 	{
; 123  : 		iLength = GC.getMINOR_QUEST_STANDARD_CONTEST_LENGTH();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3132
	mov	DWORD PTR _iLength$[ebp], eax

; 124  : 	}
; 125  : 
; 126  : 	// Other quests are not time-sensitive
; 127  : 	else

	jmp	SHORT $LN15@GetEndTurn
$LN2@GetEndTurn:

; 128  : 	{
; 129  : 		return NO_TURN;

	or	eax, -1
	jmp	SHORT $LN17@GetEndTurn
$LN15@GetEndTurn:

; 130  : 	}
; 131  : 
; 132  : 	// Modify for Game Speed
; 133  : 	iLength *= GC.getGame().getGameSpeedInfo().getGreatPeoplePercent();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235039[ebp], ecx
	mov	ecx, DWORD PTR $T235039[ebp]
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getGreatPeoplePercent@CvGameSpeedInfo@@QBEHXZ ; CvGameSpeedInfo::getGreatPeoplePercent
	imul	eax, DWORD PTR _iLength$[ebp]
	mov	DWORD PTR _iLength$[ebp], eax

; 134  : 	iLength /= 100;

	mov	eax, DWORD PTR _iLength$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iLength$[ebp], eax

; 135  : 
; 136  : 	return m_iStartTurn + iLength;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	add	eax, DWORD PTR _iLength$[ebp]
$LN17@GetEndTurn:

; 137  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetEndTurn@CvMinorCivQuest@@QBEHXZ ENDP		; CvMinorCivQuest::GetEndTurn
_TEXT	ENDS
PUBLIC	?GetTurnsRemaining@CvMinorCivQuest@@QBEHH@Z	; CvMinorCivQuest::GetTurnsRemaining
; Function compile flags: /Odtp
;	COMDAT ?GetTurnsRemaining@CvMinorCivQuest@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
_iStartTurn$ = -8					; size = 4
_iEndTurn$ = -4						; size = 4
_iCurrentTurn$ = 8					; size = 4
?GetTurnsRemaining@CvMinorCivQuest@@QBEHH@Z PROC	; CvMinorCivQuest::GetTurnsRemaining, COMDAT
; _this$ = ecx

; 141  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 142  : 	int iStartTurn = GetStartTurn();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetStartTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetStartTurn
	mov	DWORD PTR _iStartTurn$[ebp], eax

; 143  : 	int iEndTurn = GetEndTurn();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEndTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetEndTurn
	mov	DWORD PTR _iEndTurn$[ebp], eax

; 144  : 
; 145  : 	if (iStartTurn == NO_TURN)

	cmp	DWORD PTR _iStartTurn$[ebp], -1
	jne	SHORT $LN2@GetTurnsRe

; 146  : 		return NO_TURN;

	or	eax, -1
	jmp	SHORT $LN3@GetTurnsRe
$LN2@GetTurnsRe:

; 147  : 
; 148  : 	if (iEndTurn == NO_TURN)

	cmp	DWORD PTR _iEndTurn$[ebp], -1
	jne	SHORT $LN1@GetTurnsRe

; 149  : 		return NO_TURN;

	or	eax, -1
	jmp	SHORT $LN3@GetTurnsRe
$LN1@GetTurnsRe:

; 150  : 
; 151  : 	return (iEndTurn - iCurrentTurn);

	mov	eax, DWORD PTR _iEndTurn$[ebp]
	sub	eax, DWORD PTR _iCurrentTurn$[ebp]
$LN3@GetTurnsRe:

; 152  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetTurnsRemaining@CvMinorCivQuest@@QBEHH@Z ENDP	; CvMinorCivQuest::GetTurnsRemaining
_TEXT	ENDS
PUBLIC	?GetPrimaryData@CvMinorCivQuest@@QBEHXZ		; CvMinorCivQuest::GetPrimaryData
; Function compile flags: /Odtp
;	COMDAT ?GetPrimaryData@CvMinorCivQuest@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPrimaryData@CvMinorCivQuest@@QBEHXZ PROC		; CvMinorCivQuest::GetPrimaryData, COMDAT
; _this$ = ecx

; 156  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 157  : 	return m_iData1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 158  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetPrimaryData@CvMinorCivQuest@@QBEHXZ ENDP		; CvMinorCivQuest::GetPrimaryData
_TEXT	ENDS
PUBLIC	?GetSecondaryData@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetSecondaryData
; Function compile flags: /Odtp
;	COMDAT ?GetSecondaryData@CvMinorCivQuest@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSecondaryData@CvMinorCivQuest@@QBEHXZ PROC		; CvMinorCivQuest::GetSecondaryData, COMDAT
; _this$ = ecx

; 162  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 163  : 	return m_iData2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]

; 164  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetSecondaryData@CvMinorCivQuest@@QBEHXZ ENDP		; CvMinorCivQuest::GetSecondaryData
_TEXT	ENDS
PUBLIC	?GetInfluenceReward@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetInfluenceReward
; Function compile flags: /Odtp
;	COMDAT ?GetInfluenceReward@CvMinorCivQuest@@QBEHXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
_iReward$ = -4						; size = 4
?GetInfluenceReward@CvMinorCivQuest@@QBEHXZ PROC	; CvMinorCivQuest::GetInfluenceReward, COMDAT
; _this$ = ecx

; 168  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 169  : 	int iReward = 0;

	mov	DWORD PTR _iReward$[ebp], 0

; 170  : 
; 171  : 	switch(m_eType)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 17			; 00000011H
	ja	$LN1@GetInfluen
	mov	edx, DWORD PTR tv65[ebp]
	jmp	DWORD PTR $LN60@GetInfluen[edx*4]
$LN19@GetInfluen:

; 172  : 	{
; 173  : 	case MINOR_CIV_QUEST_ROUTE:
; 174  : 		iReward = /*50*/ GC.getMINOR_QUEST_FRIENDSHIP_ROUTE();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3060
	mov	DWORD PTR _iReward$[ebp], eax

; 175  : 		break;

	jmp	$LN20@GetInfluen
$LN18@GetInfluen:

; 176  : 	case MINOR_CIV_QUEST_KILL_CAMP:
; 177  : 		iReward = /*50*/ GC.getMINOR_QUEST_FRIENDSHIP_KILL_CAMP();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3064
	mov	DWORD PTR _iReward$[ebp], ecx

; 178  : 		break;

	jmp	$LN20@GetInfluen
$LN17@GetInfluen:

; 179  : 	case MINOR_CIV_QUEST_CONNECT_RESOURCE:
; 180  : 		iReward = /*40*/ GC.getMINOR_QUEST_FRIENDSHIP_CONNECT_RESOURCE();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3068
	mov	DWORD PTR _iReward$[ebp], edx

; 181  : 		break;

	jmp	$LN20@GetInfluen
$LN16@GetInfluen:

; 182  : 	case MINOR_CIV_QUEST_CONSTRUCT_WONDER:
; 183  : 		iReward = /*40*/ GC.getMINOR_QUEST_FRIENDSHIP_CONSTRUCT_WONDER();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3072
	mov	DWORD PTR _iReward$[ebp], eax

; 184  : 		break;

	jmp	$LN20@GetInfluen
$LN15@GetInfluen:

; 185  : 	case MINOR_CIV_QUEST_GREAT_PERSON:
; 186  : 		iReward = /*40*/ GC.getMINOR_QUEST_FRIENDSHIP_GREAT_PERSON();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3076
	mov	DWORD PTR _iReward$[ebp], ecx

; 187  : 		break;

	jmp	$LN20@GetInfluen
$LN14@GetInfluen:

; 188  : 	case MINOR_CIV_QUEST_KILL_CITY_STATE:
; 189  : 		iReward = /*80*/ GC.getMINOR_QUEST_FRIENDSHIP_KILL_CITY_STATE();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3080
	mov	DWORD PTR _iReward$[ebp], edx

; 190  : 		break;

	jmp	$LN20@GetInfluen
$LN13@GetInfluen:

; 191  : 	case MINOR_CIV_QUEST_FIND_PLAYER:
; 192  : 		iReward = /*35*/ GC.getMINOR_QUEST_FRIENDSHIP_FIND_PLAYER();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3084
	mov	DWORD PTR _iReward$[ebp], eax

; 193  : 		break;

	jmp	SHORT $LN20@GetInfluen
$LN12@GetInfluen:

; 194  : 	case MINOR_CIV_QUEST_FIND_NATURAL_WONDER:
; 195  : 		iReward = /*40*/ GC.getMINOR_QUEST_FRIENDSHIP_FIND_NATURAL_WONDER();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3088
	mov	DWORD PTR _iReward$[ebp], ecx

; 196  : 		break;

	jmp	SHORT $LN20@GetInfluen
$LN11@GetInfluen:

; 197  : 	case MINOR_CIV_QUEST_GIVE_GOLD:
; 198  : 		iReward = /*20*/ GC.getMINOR_QUEST_FRIENDSHIP_GIVE_GOLD();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3092
	mov	DWORD PTR _iReward$[ebp], edx

; 199  : 		break;

	jmp	SHORT $LN20@GetInfluen
$LN10@GetInfluen:

; 200  : 	case MINOR_CIV_QUEST_PLEDGE_TO_PROTECT:
; 201  : 		iReward = /*20*/ GC.getMINOR_QUEST_FRIENDSHIP_PLEDGE_TO_PROTECT();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3096
	mov	DWORD PTR _iReward$[ebp], eax

; 202  : 		break;

	jmp	SHORT $LN20@GetInfluen
$LN9@GetInfluen:

; 203  : 	case MINOR_CIV_QUEST_CONTEST_CULTURE:
; 204  : 		iReward = /*40*/ GC.getMINOR_QUEST_FRIENDSHIP_CONTEST_CULTURE();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3100
	mov	DWORD PTR _iReward$[ebp], ecx

; 205  : 		break;

	jmp	SHORT $LN20@GetInfluen
$LN8@GetInfluen:

; 206  : 	case MINOR_CIV_QUEST_CONTEST_FAITH:
; 207  : 		iReward = /*40*/ GC.getMINOR_QUEST_FRIENDSHIP_CONTEST_FAITH();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3104
	mov	DWORD PTR _iReward$[ebp], edx

; 208  : 		break;

	jmp	SHORT $LN20@GetInfluen
$LN7@GetInfluen:

; 209  : 	case MINOR_CIV_QUEST_CONTEST_TECHS:
; 210  : 		iReward = /*40*/ GC.getMINOR_QUEST_FRIENDSHIP_CONTEST_TECHS();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3108
	mov	DWORD PTR _iReward$[ebp], eax

; 211  : 		break;

	jmp	SHORT $LN20@GetInfluen
$LN6@GetInfluen:

; 212  : 	case MINOR_CIV_QUEST_INVEST:
; 213  : 		// Reward is indirect; increased gains from gold gifts
; 214  : 		iReward = /*0*/ GC.getMINOR_QUEST_FRIENDSHIP_INVEST();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3112
	mov	DWORD PTR _iReward$[ebp], ecx

; 215  : 		break;

	jmp	SHORT $LN20@GetInfluen
$LN5@GetInfluen:

; 216  : 	case MINOR_CIV_QUEST_BULLY_CITY_STATE:
; 217  : 		iReward = /*40*/ GC.getMINOR_QUEST_FRIENDSHIP_BULLY_CITY_STATE();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3116
	mov	DWORD PTR _iReward$[ebp], edx

; 218  : 		break;

	jmp	SHORT $LN20@GetInfluen
$LN4@GetInfluen:

; 219  : 	case MINOR_CIV_QUEST_DENOUNCE_MAJOR:
; 220  : 		iReward = /*40*/ GC.getMINOR_QUEST_FRIENDSHIP_DENOUNCE_MAJOR();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3120
	mov	DWORD PTR _iReward$[ebp], eax

; 221  : 		break;

	jmp	SHORT $LN20@GetInfluen
$LN3@GetInfluen:

; 222  : 	case MINOR_CIV_QUEST_SPREAD_RELIGION:
; 223  : 		iReward = /*40*/ GC.getMINOR_QUEST_FRIENDSHIP_SPREAD_RELIGION();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3124
	mov	DWORD PTR _iReward$[ebp], ecx

; 224  : 		break;

	jmp	SHORT $LN20@GetInfluen
$LN2@GetInfluen:

; 225  : 	case MINOR_CIV_QUEST_TRADE_ROUTE:
; 226  : 		iReward = /*40*/ GC.getMINOR_QUEST_FRIENDSHIP_TRADE_ROUTE();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3128
	mov	DWORD PTR _iReward$[ebp], edx

; 227  : 		break;

	jmp	SHORT $LN20@GetInfluen
$LN1@GetInfluen:

; 228  : 	default:
; 229  : 		iReward = 0;

	mov	DWORD PTR _iReward$[ebp], 0
$LN20@GetInfluen:

; 230  : 		break;
; 231  : 	}
; 232  : 
; 233  : 	return iReward;

	mov	eax, DWORD PTR _iReward$[ebp]

; 234  : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN60@GetInfluen:
	DD	$LN19@GetInfluen
	DD	$LN18@GetInfluen
	DD	$LN17@GetInfluen
	DD	$LN16@GetInfluen
	DD	$LN15@GetInfluen
	DD	$LN14@GetInfluen
	DD	$LN13@GetInfluen
	DD	$LN12@GetInfluen
	DD	$LN11@GetInfluen
	DD	$LN10@GetInfluen
	DD	$LN9@GetInfluen
	DD	$LN8@GetInfluen
	DD	$LN7@GetInfluen
	DD	$LN6@GetInfluen
	DD	$LN5@GetInfluen
	DD	$LN4@GetInfluen
	DD	$LN3@GetInfluen
	DD	$LN2@GetInfluen
?GetInfluenceReward@CvMinorCivQuest@@QBEHXZ ENDP	; CvMinorCivQuest::GetInfluenceReward
_TEXT	ENDS
PUBLIC	?GetQuestData1@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::GetQuestData1
PUBLIC	?IsActiveQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsActiveQuestForPlayer
PUBLIC	?GetContestValueForPlayer@CvMinorCivQuest@@QAEHW4PlayerTypes@@@Z ; CvMinorCivQuest::GetContestValueForPlayer
EXTRN	?GetNumTechsKnown@CvTeamTechs@@QBEHXZ:PROC	; CvTeamTechs::GetNumTechsKnown
EXTRN	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ:PROC ; CvTeam::GetTeamTechs
EXTRN	?m_aTeams@CvTeam@@1PAV1@A:DWORD			; CvTeam::m_aTeams
EXTRN	?GetFaithEverGenerated@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetFaithEverGenerated
EXTRN	?GetJONSCultureEverGenerated@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetJONSCultureEverGenerated
EXTRN	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ:PROC ; CvPlayer::GetMinorCivAI
EXTRN	?m_aPlayers@CvPlayerAI@@1PAV1@A:DWORD		; CvPlayerAI::m_aPlayers
; Function compile flags: /Odtp
;	COMDAT ?GetContestValueForPlayer@CvMinorCivQuest@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -64						; size = 4
$T235133 = -60						; size = 4
$T235129 = -56						; size = 4
$T235120 = -52						; size = 4
$T235116 = -48						; size = 4
$T235112 = -44						; size = 4
$T235108 = -40						; size = 4
_iStartTechs$220853 = -36				; size = 4
_iEndTechs$220854 = -32					; size = 4
_iStartFaith$220849 = -28				; size = 4
_iEndFaith$220850 = -24					; size = 4
_iStartCulture$220845 = -20				; size = 4
_iEndCulture$220846 = -16				; size = 4
_iValue$ = -12						; size = 4
_pMinor$ = -8						; size = 4
_eType$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetContestValueForPlayer@CvMinorCivQuest@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivQuest::GetContestValueForPlayer, COMDAT
; _this$ = ecx

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	mov	DWORD PTR _this$[ebp], ecx

; 240  : 	MinorCivQuestTypes eType = GetType();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	mov	DWORD PTR _eType$[ebp], eax

; 241  : 	int iValue = -1;

	mov	DWORD PTR _iValue$[ebp], -1

; 242  : 	CvPlayer* pMinor = &GET_PLAYER(GetMinor());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMinor@CvMinorCivQuest@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivQuest::GetMinor
	mov	DWORD PTR $T235108[ebp], eax
	mov	eax, DWORD PTR $T235108[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pMinor$[ebp], eax

; 243  : 	if(!pMinor)

	jne	SHORT $LN7@GetContest

; 244  : 	{
; 245  : 		CvAssertMsg(false, "Error when calculating contest standings - could not find minor civ! Please send Anton your save file and version.");
; 246  : 		return iValue;

	mov	eax, DWORD PTR _iValue$[ebp]
	jmp	$LN8@GetContest
$LN7@GetContest:

; 247  : 	}
; 248  : 
; 249  : 	// Player must actually be in the contest to have a score!
; 250  : 	if(!pMinor->GetMinorCivAI()->IsActiveQuestForPlayer(ePlayer, eType))

	mov	ecx, DWORD PTR _eType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsActiveQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsActiveQuestForPlayer
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN6@GetContest

; 251  : 		return iValue;

	mov	eax, DWORD PTR _iValue$[ebp]
	jmp	$LN8@GetContest
$LN6@GetContest:

; 252  : 
; 253  : 	if(eType == MINOR_CIV_QUEST_CONTEST_CULTURE)

	cmp	DWORD PTR _eType$[ebp], 10		; 0000000aH
	jne	SHORT $LN5@GetContest

; 254  : 	{
; 255  : 		int iStartCulture = pMinor->GetMinorCivAI()->GetQuestData1(ePlayer, eType);

	mov	ecx, DWORD PTR _eType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetQuestData1@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::GetQuestData1
	mov	DWORD PTR _iStartCulture$220845[ebp], eax

; 256  : 		int iEndCulture = GET_PLAYER(ePlayer).GetJONSCultureEverGenerated();

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T235112[ebp], eax
	mov	ecx, DWORD PTR $T235112[ebp]
	call	?GetJONSCultureEverGenerated@CvPlayer@@QBEHXZ ; CvPlayer::GetJONSCultureEverGenerated
	mov	DWORD PTR _iEndCulture$220846[ebp], eax

; 257  : 		iValue = iEndCulture - iStartCulture;

	mov	ecx, DWORD PTR _iEndCulture$220846[ebp]
	sub	ecx, DWORD PTR _iStartCulture$220845[ebp]
	mov	DWORD PTR _iValue$[ebp], ecx
	jmp	$LN4@GetContest
$LN5@GetContest:

; 258  : 	}
; 259  : 	else if(eType == MINOR_CIV_QUEST_CONTEST_FAITH)

	cmp	DWORD PTR _eType$[ebp], 11		; 0000000bH
	jne	SHORT $LN3@GetContest

; 260  : 	{
; 261  : 		int iStartFaith = pMinor->GetMinorCivAI()->GetQuestData1(ePlayer, eType);

	mov	edx, DWORD PTR _eType$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetQuestData1@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::GetQuestData1
	mov	DWORD PTR _iStartFaith$220849[ebp], eax

; 262  : 		int iEndFaith = GET_PLAYER(ePlayer).GetFaithEverGenerated();

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T235116[ebp], ecx
	mov	ecx, DWORD PTR $T235116[ebp]
	call	?GetFaithEverGenerated@CvPlayer@@QBEHXZ	; CvPlayer::GetFaithEverGenerated
	mov	DWORD PTR _iEndFaith$220850[ebp], eax

; 263  : 		iValue = iEndFaith - iStartFaith;

	mov	edx, DWORD PTR _iEndFaith$220850[ebp]
	sub	edx, DWORD PTR _iStartFaith$220849[ebp]
	mov	DWORD PTR _iValue$[ebp], edx
	jmp	SHORT $LN4@GetContest
$LN3@GetContest:

; 264  : 	}
; 265  : 	else if(eType == MINOR_CIV_QUEST_CONTEST_TECHS)

	cmp	DWORD PTR _eType$[ebp], 12		; 0000000cH
	jne	SHORT $LN4@GetContest

; 266  : 	{
; 267  : 		int iStartTechs = pMinor->GetMinorCivAI()->GetQuestData1(ePlayer, eType);

	mov	eax, DWORD PTR _eType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetQuestData1@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::GetQuestData1
	mov	DWORD PTR _iStartTechs$220853[ebp], eax

; 268  : 		int iEndTechs = GET_TEAM(GET_PLAYER(ePlayer).getTeam()).GetTeamTechs()->GetNumTechsKnown();

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T235120[ebp], edx
	mov	eax, DWORD PTR $T235120[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T235129[ebp], eax
	mov	edx, DWORD PTR $T235129[ebp]
	imul	edx, 2984				; 00000ba8H
	add	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T235133[ebp], edx
	mov	ecx, DWORD PTR $T235133[ebp]
	call	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ ; CvTeam::GetTeamTechs
	mov	ecx, eax
	call	?GetNumTechsKnown@CvTeamTechs@@QBEHXZ	; CvTeamTechs::GetNumTechsKnown
	mov	DWORD PTR _iEndTechs$220854[ebp], eax

; 269  : 		iValue = iEndTechs - iStartTechs;

	mov	eax, DWORD PTR _iEndTechs$220854[ebp]
	sub	eax, DWORD PTR _iStartTechs$220853[ebp]
	mov	DWORD PTR _iValue$[ebp], eax
$LN4@GetContest:

; 270  : 	}
; 271  : 
; 272  : 	return iValue;

	mov	eax, DWORD PTR _iValue$[ebp]
$LN8@GetContest:

; 273  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetContestValueForPlayer@CvMinorCivQuest@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivQuest::GetContestValueForPlayer
_TEXT	ENDS
PUBLIC	?GetContestValueForLeader@CvMinorCivQuest@@QAEHXZ ; CvMinorCivQuest::GetContestValueForLeader
; Function compile flags: /Odtp
;	COMDAT ?GetContestValueForLeader@CvMinorCivQuest@@QAEHXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
_ePlayerLoop$220866 = -20				; size = 4
_iPlayerValue$220868 = -16				; size = 4
_iPlayerLoop$220862 = -12				; size = 4
_iHighestValue$ = -8					; size = 4
_eType$ = -4						; size = 4
?GetContestValueForLeader@CvMinorCivQuest@@QAEHXZ PROC	; CvMinorCivQuest::GetContestValueForLeader, COMDAT
; _this$ = ecx

; 276  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 277  : 	MinorCivQuestTypes eType = GetType();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	mov	DWORD PTR _eType$[ebp], eax

; 278  : 	int iHighestValue = -1;

	mov	DWORD PTR _iHighestValue$[ebp], -1

; 279  : 
; 280  : 	if(eType == MINOR_CIV_QUEST_CONTEST_CULTURE ||
; 281  : 	        eType == MINOR_CIV_QUEST_CONTEST_FAITH ||
; 282  : 	        eType == MINOR_CIV_QUEST_CONTEST_TECHS)

	cmp	DWORD PTR _eType$[ebp], 10		; 0000000aH
	je	SHORT $LN5@GetContest@2
	cmp	DWORD PTR _eType$[ebp], 11		; 0000000bH
	je	SHORT $LN5@GetContest@2
	cmp	DWORD PTR _eType$[ebp], 12		; 0000000cH
	jne	SHORT $LN6@GetContest@2
$LN5@GetContest@2:

; 283  : 	{
; 284  : 		// What is the largest value a participant has for this contest?
; 285  : 		for(int iPlayerLoop = 0; iPlayerLoop < MAX_MAJOR_CIVS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$220862[ebp], 0
	jmp	SHORT $LN4@GetContest@2
$LN3@GetContest@2:
	mov	eax, DWORD PTR _iPlayerLoop$220862[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayerLoop$220862[ebp], eax
$LN4@GetContest@2:
	cmp	DWORD PTR _iPlayerLoop$220862[ebp], 22	; 00000016H
	jge	SHORT $LN6@GetContest@2

; 286  : 		{
; 287  : 			PlayerTypes ePlayerLoop = (PlayerTypes) iPlayerLoop;

	mov	ecx, DWORD PTR _iPlayerLoop$220862[ebp]
	mov	DWORD PTR _ePlayerLoop$220866[ebp], ecx

; 288  : 
; 289  : 			int iPlayerValue = GetContestValueForPlayer(ePlayerLoop);

	mov	edx, DWORD PTR _ePlayerLoop$220866[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetContestValueForPlayer@CvMinorCivQuest@@QAEHW4PlayerTypes@@@Z ; CvMinorCivQuest::GetContestValueForPlayer
	mov	DWORD PTR _iPlayerValue$220868[ebp], eax

; 290  : 			if(iPlayerValue > iHighestValue)

	mov	eax, DWORD PTR _iPlayerValue$220868[ebp]
	cmp	eax, DWORD PTR _iHighestValue$[ebp]
	jle	SHORT $LN1@GetContest@2

; 291  : 			{
; 292  : 				iHighestValue = iPlayerValue;

	mov	ecx, DWORD PTR _iPlayerValue$220868[ebp]
	mov	DWORD PTR _iHighestValue$[ebp], ecx
$LN1@GetContest@2:

; 293  : 			}
; 294  : 		}

	jmp	SHORT $LN3@GetContest@2
$LN6@GetContest@2:

; 295  : 	}
; 296  : 
; 297  : 	return iHighestValue;

	mov	eax, DWORD PTR _iHighestValue$[ebp]

; 298  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetContestValueForLeader@CvMinorCivQuest@@QAEHXZ ENDP	; CvMinorCivQuest::GetContestValueForLeader
_TEXT	ENDS
PUBLIC	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
PUBLIC	??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@ABV0@@Z ; FStaticVector<enum PlayerTypes,64,1,297,0>::FStaticVector<enum PlayerTypes,64,1,297,0>
PUBLIC	?push_back@?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAEIABW4PlayerTypes@@@Z ; FStaticVector<enum PlayerTypes,64,1,297,0>::push_back
PUBLIC	??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::FStaticVector<enum PlayerTypes,64,1,297,0>
PUBLIC	__$ArrayPad$
PUBLIC	?GetContestLeaders@CvMinorCivQuest@@QAE?AV?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@XZ ; CvMinorCivQuest::GetContestLeaders
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?GetContestLeaders@CvMinorCivQuest@@QAE?AV?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetContestLeaders@CvMinorCivQuest@@QAE?AV?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GetContestLeaders@CvMinorCivQuest@@QAE?AV?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@XZ$0
__ehfuncinfo$?GetContestLeaders@CvMinorCivQuest@@QAE?AV?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetContestLeaders@CvMinorCivQuest@@QAE?AV?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?GetContestLeaders@CvMinorCivQuest@@QAE?AV?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@XZ
_TEXT	SEGMENT
_this$ = -360						; size = 4
$T235141 = -316						; size = 4
_ePlayerLoop$221028 = -312				; size = 4
_iPlayerValue$221030 = -308				; size = 4
_iPlayerLoop$221024 = -304				; size = 4
_veTiedForLead$ = -300					; size = 272
__$ArrayPad$ = -24					; size = 4
_iHighestValue$ = -20					; size = 4
_eType$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetContestLeaders@CvMinorCivQuest@@QAE?AV?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@XZ PROC ; CvMinorCivQuest::GetContestLeaders, COMDAT
; _this$ = ecx

; 302  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetContestLeaders@CvMinorCivQuest@@QAE?AV?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 348				; 0000015cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T235141[ebp], 0

; 303  : 	MinorCivQuestTypes eType = GetType();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	mov	DWORD PTR _eType$[ebp], eax

; 304  : 	CivsList veTiedForLead;

	lea	ecx, DWORD PTR _veTiedForLead$[ebp]
	call	??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::FStaticVector<enum PlayerTypes,64,1,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 305  : 	int iHighestValue = GetContestValueForLeader();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetContestValueForLeader@CvMinorCivQuest@@QAEHXZ ; CvMinorCivQuest::GetContestValueForLeader
	mov	DWORD PTR _iHighestValue$[ebp], eax

; 306  : 
; 307  : 	if(eType == MINOR_CIV_QUEST_CONTEST_CULTURE ||
; 308  : 	        eType == MINOR_CIV_QUEST_CONTEST_FAITH ||
; 309  : 	        eType == MINOR_CIV_QUEST_CONTEST_TECHS)

	cmp	DWORD PTR _eType$[ebp], 10		; 0000000aH
	je	SHORT $LN5@GetContest@3
	cmp	DWORD PTR _eType$[ebp], 11		; 0000000bH
	je	SHORT $LN5@GetContest@3
	cmp	DWORD PTR _eType$[ebp], 12		; 0000000cH
	jne	SHORT $LN6@GetContest@3
$LN5@GetContest@3:

; 310  : 	{
; 311  : 		for(int iPlayerLoop = 0; iPlayerLoop < MAX_MAJOR_CIVS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$221024[ebp], 0
	jmp	SHORT $LN4@GetContest@3
$LN3@GetContest@3:
	mov	eax, DWORD PTR _iPlayerLoop$221024[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayerLoop$221024[ebp], eax
$LN4@GetContest@3:
	cmp	DWORD PTR _iPlayerLoop$221024[ebp], 22	; 00000016H
	jge	SHORT $LN6@GetContest@3

; 312  : 		{
; 313  : 			PlayerTypes ePlayerLoop = (PlayerTypes) iPlayerLoop;

	mov	ecx, DWORD PTR _iPlayerLoop$221024[ebp]
	mov	DWORD PTR _ePlayerLoop$221028[ebp], ecx

; 314  : 			int iPlayerValue = GetContestValueForPlayer(ePlayerLoop);

	mov	edx, DWORD PTR _ePlayerLoop$221028[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetContestValueForPlayer@CvMinorCivQuest@@QAEHW4PlayerTypes@@@Z ; CvMinorCivQuest::GetContestValueForPlayer
	mov	DWORD PTR _iPlayerValue$221030[ebp], eax

; 315  : 			CvAssertMsg(iPlayerValue <= iHighestValue, "Calculation error for calculating the leaders of a contest! Please send Anton your save file and version.");
; 316  : 			if(iPlayerValue == iHighestValue)

	mov	eax, DWORD PTR _iPlayerValue$221030[ebp]
	cmp	eax, DWORD PTR _iHighestValue$[ebp]
	jne	SHORT $LN1@GetContest@3

; 317  : 				veTiedForLead.push_back(ePlayerLoop);

	lea	ecx, DWORD PTR _ePlayerLoop$221028[ebp]
	push	ecx
	lea	ecx, DWORD PTR _veTiedForLead$[ebp]
	call	?push_back@?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAEIABW4PlayerTypes@@@Z ; FStaticVector<enum PlayerTypes,64,1,297,0>::push_back
$LN1@GetContest@3:

; 318  : 		}

	jmp	SHORT $LN3@GetContest@3
$LN6@GetContest@3:

; 319  : 	}
; 320  : 
; 321  : 	return veTiedForLead;

	lea	edx, DWORD PTR _veTiedForLead$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@ABV0@@Z ; FStaticVector<enum PlayerTypes,64,1,297,0>::FStaticVector<enum PlayerTypes,64,1,297,0>
	mov	eax, DWORD PTR $T235141[ebp]
	or	eax, 1
	mov	DWORD PTR $T235141[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _veTiedForLead$[ebp]
	call	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 322  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetContestLeaders@CvMinorCivQuest@@QAE?AV?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@XZ$0:
	lea	ecx, DWORD PTR _veTiedForLead$[ebp]
	jmp	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
__unwindfunclet$?GetContestLeaders@CvMinorCivQuest@@QAE?AV?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@XZ$1:
	mov	eax, DWORD PTR $T235141[ebp]
	and	eax, 1
	je	$LN11@GetContest@3
	and	DWORD PTR $T235141[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
$LN11@GetContest@3:
	ret	0
__ehhandler$?GetContestLeaders@CvMinorCivQuest@@QAE?AV?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-352]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetContestLeaders@CvMinorCivQuest@@QAE?AV?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetContestLeaders@CvMinorCivQuest@@QAE?AV?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@XZ ENDP ; CvMinorCivQuest::GetContestLeaders
PUBLIC	__$ArrayPad$
PUBLIC	?IsContestLeader@CvMinorCivQuest@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivQuest::IsContestLeader
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?IsContestLeader@CvMinorCivQuest@@QAE_NW4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?IsContestLeader@CvMinorCivQuest@@QAE_NW4PlayerTypes@@@Z$0
__ehfuncinfo$?IsContestLeader@CvMinorCivQuest@@QAE_NW4PlayerTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?IsContestLeader@CvMinorCivQuest@@QAE_NW4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?IsContestLeader@CvMinorCivQuest@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -344						; size = 4
$T235231 = -316						; size = 4
$T235227 = -312						; size = 4
$T235222 = -305						; size = 1
_ui$221045 = -304					; size = 4
_veTiedForLead$221043 = -300				; size = 272
__$ArrayPad$ = -24					; size = 4
_pMinor$ = -20						; size = 4
_eType$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
?IsContestLeader@CvMinorCivQuest@@QAE_NW4PlayerTypes@@@Z PROC ; CvMinorCivQuest::IsContestLeader, COMDAT
; _this$ = ecx

; 326  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?IsContestLeader@CvMinorCivQuest@@QAE_NW4PlayerTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 332				; 0000014cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 327  : 	if(ePlayer == NO_PLAYER)

	cmp	DWORD PTR _ePlayer$[ebp], -1
	jne	SHORT $LN9@IsContestL

; 328  : 		ePlayer = GetPlayerAssignedTo();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayerAssignedTo@CvMinorCivQuest@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivQuest::GetPlayerAssignedTo
	mov	DWORD PTR _ePlayer$[ebp], eax
$LN9@IsContestL:

; 329  : 
; 330  : 	MinorCivQuestTypes eType = GetType();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	mov	DWORD PTR _eType$[ebp], eax

; 331  : 	CvPlayer* pMinor = &GET_PLAYER(GetMinor());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMinor@CvMinorCivQuest@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivQuest::GetMinor
	mov	DWORD PTR $T235227[ebp], eax
	mov	eax, DWORD PTR $T235227[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pMinor$[ebp], eax

; 332  : 	if(!pMinor)

	jne	SHORT $LN8@IsContestL

; 333  : 	{
; 334  : 		CvAssertMsg(false, "Error when calculating contest standings - could not find minor civ! Please send Anton your save file and version.");
; 335  : 		return false;

	xor	al, al
	jmp	$LN10@IsContestL
$LN8@IsContestL:

; 336  : 	}
; 337  : 	// Player must actually be in the contest!
; 338  : 	if(!pMinor->GetMinorCivAI()->IsActiveQuestForPlayer(ePlayer, eType))

	mov	ecx, DWORD PTR _eType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsActiveQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsActiveQuestForPlayer
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN7@IsContestL

; 339  : 		return false;

	xor	al, al
	jmp	$LN10@IsContestL
$LN7@IsContestL:

; 340  : 
; 341  : 	if(eType == MINOR_CIV_QUEST_CONTEST_CULTURE ||
; 342  : 	        eType == MINOR_CIV_QUEST_CONTEST_FAITH ||
; 343  : 	        eType == MINOR_CIV_QUEST_CONTEST_TECHS)

	cmp	DWORD PTR _eType$[ebp], 10		; 0000000aH
	je	SHORT $LN5@IsContestL
	cmp	DWORD PTR _eType$[ebp], 11		; 0000000bH
	je	SHORT $LN5@IsContestL
	cmp	DWORD PTR _eType$[ebp], 12		; 0000000cH
	jne	$LN6@IsContestL
$LN5@IsContestL:

; 344  : 	{
; 345  : 		CivsList veTiedForLead = GetContestLeaders();

	lea	ecx, DWORD PTR _veTiedForLead$221043[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetContestLeaders@CvMinorCivQuest@@QAE?AV?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@XZ ; CvMinorCivQuest::GetContestLeaders
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 346  : 		for(uint ui = 0; ui < veTiedForLead.size(); ui++)

	mov	DWORD PTR _ui$221045[ebp], 0
	jmp	SHORT $LN4@IsContestL
$LN3@IsContestL:
	mov	edx, DWORD PTR _ui$221045[ebp]
	add	edx, 1
	mov	DWORD PTR _ui$221045[ebp], edx
$LN4@IsContestL:
	mov	eax, DWORD PTR _veTiedForLead$221043[ebp+4]
	mov	DWORD PTR $T235231[ebp], eax
	mov	ecx, DWORD PTR _ui$221045[ebp]
	cmp	ecx, DWORD PTR $T235231[ebp]
	jae	SHORT $LN2@IsContestL

; 347  : 		{
; 348  : 			if(ePlayer == veTiedForLead[ui])

	mov	edx, DWORD PTR _ui$221045[ebp]
	mov	eax, DWORD PTR _veTiedForLead$221043[ebp]
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	cmp	ecx, DWORD PTR [eax+edx*4]
	jne	SHORT $LN1@IsContestL

; 349  : 			{
; 350  : 				return true;

	mov	BYTE PTR $T235222[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _veTiedForLead$221043[ebp]
	call	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
	mov	al, BYTE PTR $T235222[ebp]
	jmp	SHORT $LN10@IsContestL
$LN1@IsContestL:

; 351  : 			}
; 352  : 		}

	jmp	SHORT $LN3@IsContestL
$LN2@IsContestL:

; 353  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _veTiedForLead$221043[ebp]
	call	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
$LN6@IsContestL:

; 354  : 
; 355  : 	return false;

	xor	al, al
$LN10@IsContestL:

; 356  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?IsContestLeader@CvMinorCivQuest@@QAE_NW4PlayerTypes@@@Z$0:
	lea	ecx, DWORD PTR _veTiedForLead$221043[ebp]
	jmp	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
__ehhandler$?IsContestLeader@CvMinorCivQuest@@QAE_NW4PlayerTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-336]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?IsContestLeader@CvMinorCivQuest@@QAE_NW4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?IsContestLeader@CvMinorCivQuest@@QAE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivQuest::IsContestLeader
PUBLIC	?GetTurnLastBulliedByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetTurnLastBulliedByMajor
PUBLIC	?IsProtectedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsProtectedByMajor
PUBLIC	?GetNumGoldGifted@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetNumGoldGifted
PUBLIC	?isPlot@CvMap@@QBEHHH@Z				; CvMap::isPlot
PUBLIC	?IsComplete@CvMinorCivQuest@@QAE_NXZ		; CvMinorCivQuest::IsComplete
EXTRN	?IsPlayerConnectedToPlayer@CvGameTrade@@QAE_NW4PlayerTypes@@0@Z:PROC ; CvGameTrade::IsPlayerConnectedToPlayer
EXTRN	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ:PROC ; CvGame::GetGameTrade
EXTRN	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ:PROC ; CvCityReligions::GetReligiousMajority
EXTRN	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ:PROC ; CvCity::GetCityReligions
EXTRN	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ:PROC	; CvPlayer::getCapitalCity
EXTRN	?IsDenouncedPlayer@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsDenouncedPlayer
EXTRN	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ:PROC ; CvPlayer::GetDiplomacyAI
EXTRN	?getGameTurn@CvGame@@QAEHXZ:PROC		; CvGame::getGameTurn
EXTRN	?GetNumNaturalWondersDiscovered@CvTeam@@QBEHXZ:PROC ; CvTeam::GetNumNaturalWondersDiscovered
EXTRN	?IsHasFoundPlayersTerritory@CvTeam@@QBE_NW4PlayerTypes@@@Z:PROC ; CvTeam::IsHasFoundPlayersTerritory
EXTRN	?GetKilledByTeam@CvTeam@@QBE?AW4TeamTypes@@XZ:PROC ; CvTeam::GetKilledByTeam
EXTRN	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ:PROC	; CvUnit::getUnitType
EXTRN	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z:PROC	; CvPlayer::nextUnit
EXTRN	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z:PROC	; CvPlayer::firstUnit
EXTRN	?countNumBuildings@CvPlayer@@QBEHW4BuildingTypes@@@Z:PROC ; CvPlayer::countNumBuildings
EXTRN	?getNumResourceTotal@CvPlayer@@QBEHW4ResourceTypes@@_N@Z:PROC ; CvPlayer::getNumResourceTotal
EXTRN	?GetPlayerThatClearedBarbCampHere@CvPlot@@QBE?AW4PlayerTypes@@XZ:PROC ; CvPlot::GetPlayerThatClearedBarbCampHere
EXTRN	?getImprovementType@CvPlot@@QBE?AW4ImprovementTypes@@XZ:PROC ; CvPlot::getImprovementType
EXTRN	?IsCapitalConnectedToPlayer@CvPlayer@@QAE_NW4PlayerTypes@@W4RouteTypes@@@Z:PROC ; CvPlayer::IsCapitalConnectedToPlayer
; Function compile flags: /Odtp
;	COMDAT ?IsComplete@CvMinorCivQuest@@QAE_NXZ
_TEXT	SEGMENT
tv381 = -176						; size = 4
_this$ = -172						; size = 4
$T235460 = -168						; size = 4
$T235450 = -164						; size = 4
$T235446 = -160						; size = 4
$T235442 = -156						; size = 4
$T235438 = -152						; size = 4
$T235434 = -148						; size = 4
$T235430 = -144						; size = 4
$T235421 = -140						; size = 4
$T235417 = -136						; size = 4
$T235408 = -132						; size = 4
$T235396 = -128						; size = 4
$T235384 = -124						; size = 4
$T235344 = -120						; size = 4
$T235332 = -116						; size = 4
$T235328 = -109						; size = 1
$T235317 = -108						; size = 4
$T235313 = -101						; size = 1
_iMapY$235353 = -100					; size = 4
_iMapX$235352 = -96					; size = 4
$T235306 = -92						; size = 4
_eReligion$221145 = -88					; size = 4
_eTargetMajor$221138 = -84				; size = 4
_pTargetMajor$221140 = -80				; size = 4
_iMostRecentBullyTurn$221134 = -76			; size = 4
_eTargetMinor$221130 = -72				; size = 4
_pTargetMinor$221132 = -68				; size = 4
_iGoldGiftedBefore$221108 = -64				; size = 4
_iNumWondersFoundBefore$221104 = -60			; size = 4
_ePlayerToFind$221099 = -56				; size = 4
_pTargetCityStateTeam$221094 = -52			; size = 4
_eTargetCityState$221090 = -48				; size = 4
_pTargetCityState$221092 = -44				; size = 4
_pLoopUnit$221083 = -40					; size = 4
_eUnit$221080 = -36					; size = 4
_iLoop$221082 = -32					; size = 4
_eWonder$221075 = -28					; size = 4
_eResource$221070 = -24					; size = 4
_pPlot$221064 = -20					; size = 4
_iX$221062 = -16					; size = 4
_iY$221063 = -12					; size = 4
_pAssignedPlayer$ = -8					; size = 4
_pMinor$ = -4						; size = 4
?IsComplete@CvMinorCivQuest@@QAE_NXZ PROC		; CvMinorCivQuest::IsComplete, COMDAT
; _this$ = ecx

; 361  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 176				; 000000b0H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 362  : 	CvPlayer* pMinor = &GET_PLAYER(m_eMinor);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pMinor$[ebp], ecx

; 363  : 	CvPlayer* pAssignedPlayer = &GET_PLAYER(m_eAssignedPlayer);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pAssignedPlayer$[ebp], eax

; 364  : 
; 365  : 	if(!pMinor)

	cmp	DWORD PTR _pMinor$[ebp], 0
	jne	SHORT $LN68@IsComplete

; 366  : 	{
; 367  : 		CvAssertMsg(false, "Minor player not found! Please send Anton your save file and version.");
; 368  : 		return false;

	xor	al, al
	jmp	$LN69@IsComplete
$LN68@IsComplete:

; 369  : 	}
; 370  : 	if(!pAssignedPlayer)

	cmp	DWORD PTR _pAssignedPlayer$[ebp], 0
	jne	SHORT $LN67@IsComplete

; 371  : 	{
; 372  : 		CvAssertMsg(false, "Assigned player not found! Please send Anton your save file and version.");
; 373  : 		return false;

	xor	al, al
	jmp	$LN69@IsComplete
$LN67@IsComplete:

; 374  : 	}
; 375  : 
; 376  : 	if(m_eType == MINOR_CIV_QUEST_ROUTE)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jne	SHORT $LN66@IsComplete

; 377  : 	{
; 378  : 		if (pAssignedPlayer->IsCapitalConnectedToPlayer(m_eMinor))

	push	-1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pAssignedPlayer$[ebp]
	call	?IsCapitalConnectedToPlayer@CvPlayer@@QAE_NW4PlayerTypes@@W4RouteTypes@@@Z ; CvPlayer::IsCapitalConnectedToPlayer
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN65@IsComplete

; 379  : 		{
; 380  : 			return true;

	mov	al, 1
	jmp	$LN69@IsComplete
$LN65@IsComplete:

; 381  : 		}
; 382  : 	}

	jmp	$LN64@IsComplete
$LN66@IsComplete:

; 383  : 	else if(m_eType == MINOR_CIV_QUEST_KILL_CAMP)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 1
	jne	$LN63@IsComplete

; 384  : 	{
; 385  : 		int iX = m_iData1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _iX$221062[ebp], ecx

; 386  : 		int iY = m_iData2;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _iY$221063[ebp], eax

; 387  : 		CvPlot* pPlot = GC.getMap().plot(iX, iY);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T235306[ebp], ecx
	cmp	DWORD PTR _iX$221062[ebp], -2147483647	; 80000001H
	je	SHORT $LN77@IsComplete
	cmp	DWORD PTR _iY$221063[ebp], -2147483647	; 80000001H
	jne	SHORT $LN78@IsComplete
$LN77@IsComplete:
	mov	DWORD PTR _pPlot$221064[ebp], 0
	jmp	$LN79@IsComplete
$LN78@IsComplete:
	mov	edx, DWORD PTR $T235306[ebp]
	mov	al, BYTE PTR [edx+4056]
	mov	BYTE PTR $T235313[ebp], al
	mov	ecx, DWORD PTR $T235306[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T235317[ebp], edx
	movzx	eax, BYTE PTR $T235313[ebp]
	test	eax, eax
	je	SHORT $LN90@IsComplete
	cmp	DWORD PTR _iX$221062[ebp], 0
	jge	SHORT $LN89@IsComplete
	mov	eax, DWORD PTR _iX$221062[ebp]
	cdq
	idiv	DWORD PTR $T235317[ebp]
	add	edx, DWORD PTR $T235317[ebp]
	mov	DWORD PTR _iMapX$235352[ebp], edx
	jmp	SHORT $LN91@IsComplete
	jmp	SHORT $LN90@IsComplete
$LN89@IsComplete:
	mov	ecx, DWORD PTR _iX$221062[ebp]
	cmp	ecx, DWORD PTR $T235317[ebp]
	jl	SHORT $LN90@IsComplete
	mov	eax, DWORD PTR _iX$221062[ebp]
	cdq
	idiv	DWORD PTR $T235317[ebp]
	mov	DWORD PTR _iMapX$235352[ebp], edx
	jmp	SHORT $LN91@IsComplete
$LN90@IsComplete:
	mov	edx, DWORD PTR _iX$221062[ebp]
	mov	DWORD PTR _iMapX$235352[ebp], edx
$LN91@IsComplete:
	mov	eax, DWORD PTR $T235306[ebp]
	mov	cl, BYTE PTR [eax+4057]
	mov	BYTE PTR $T235328[ebp], cl
	mov	edx, DWORD PTR $T235306[ebp]
	mov	eax, DWORD PTR [edx+4024]
	mov	DWORD PTR $T235332[ebp], eax
	movzx	ecx, BYTE PTR $T235328[ebp]
	test	ecx, ecx
	je	SHORT $LN100@IsComplete
	cmp	DWORD PTR _iY$221063[ebp], 0
	jge	SHORT $LN99@IsComplete
	mov	eax, DWORD PTR _iY$221063[ebp]
	cdq
	idiv	DWORD PTR $T235332[ebp]
	add	edx, DWORD PTR $T235332[ebp]
	mov	DWORD PTR _iMapY$235353[ebp], edx
	jmp	SHORT $LN101@IsComplete
	jmp	SHORT $LN100@IsComplete
$LN99@IsComplete:
	mov	edx, DWORD PTR _iY$221063[ebp]
	cmp	edx, DWORD PTR $T235332[ebp]
	jl	SHORT $LN100@IsComplete
	mov	eax, DWORD PTR _iY$221063[ebp]
	cdq
	idiv	DWORD PTR $T235332[ebp]
	mov	DWORD PTR _iMapY$235353[ebp], edx
	jmp	SHORT $LN101@IsComplete
$LN100@IsComplete:
	mov	eax, DWORD PTR _iY$221063[ebp]
	mov	DWORD PTR _iMapY$235353[ebp], eax
$LN101@IsComplete:
	mov	ecx, DWORD PTR _iMapY$235353[ebp]
	push	ecx
	mov	edx, DWORD PTR _iMapX$235352[ebp]
	push	edx
	mov	ecx, DWORD PTR $T235306[ebp]
	call	?isPlot@CvMap@@QBEHHH@Z			; CvMap::isPlot
	test	eax, eax
	je	SHORT $LN81@IsComplete
	mov	eax, DWORD PTR $T235306[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T235344[ebp], ecx
	mov	edx, DWORD PTR _iMapY$235353[ebp]
	imul	edx, DWORD PTR $T235344[ebp]
	add	edx, DWORD PTR _iMapX$235352[ebp]
	imul	edx, 484				; 000001e4H
	mov	eax, DWORD PTR $T235306[ebp]
	add	edx, DWORD PTR [eax+4068]
	mov	DWORD PTR tv381[ebp], edx
	jmp	SHORT $LN82@IsComplete
$LN81@IsComplete:
	mov	DWORD PTR tv381[ebp], 0
$LN82@IsComplete:
	mov	ecx, DWORD PTR tv381[ebp]
	mov	DWORD PTR _pPlot$221064[ebp], ecx
$LN79@IsComplete:

; 388  : 
; 389  : 		if(pPlot)

	cmp	DWORD PTR _pPlot$221064[ebp], 0
	je	SHORT $LN62@IsComplete

; 390  : 		{
; 391  : 			// No longer a camp here?
; 392  : 			if(pPlot->getImprovementType() != GC.getBARBARIAN_CAMP_IMPROVEMENT())

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8548
	mov	DWORD PTR $T235384[ebp], edx
	mov	ecx, DWORD PTR _pPlot$221064[ebp]
	call	?getImprovementType@CvPlot@@QBE?AW4ImprovementTypes@@XZ ; CvPlot::getImprovementType
	cmp	eax, DWORD PTR $T235384[ebp]
	je	SHORT $LN62@IsComplete

; 393  : 			{
; 394  : 				// Did this guy clear it?
; 395  : 				if(pPlot->GetPlayerThatClearedBarbCampHere() == m_eAssignedPlayer)

	mov	ecx, DWORD PTR _pPlot$221064[ebp]
	call	?GetPlayerThatClearedBarbCampHere@CvPlot@@QBE?AW4PlayerTypes@@XZ ; CvPlot::GetPlayerThatClearedBarbCampHere
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+4]
	jne	SHORT $LN62@IsComplete

; 396  : 				{
; 397  : 					return true;

	mov	al, 1
	jmp	$LN69@IsComplete
$LN62@IsComplete:

; 398  : 				}
; 399  : 			}
; 400  : 		}
; 401  : 	}

	jmp	$LN64@IsComplete
$LN63@IsComplete:

; 402  : 	else if(m_eType == MINOR_CIV_QUEST_CONNECT_RESOURCE)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 2
	jne	SHORT $LN58@IsComplete

; 403  : 	{
; 404  : 		ResourceTypes eResource = (ResourceTypes) m_iData1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _eResource$221070[ebp], ecx

; 405  : 
; 406  : 		// Player has the Resource?
; 407  : 		if(pAssignedPlayer->getNumResourceTotal(eResource, /*bIncludeImport*/ true) > 0)

	push	1
	mov	edx, DWORD PTR _eResource$221070[ebp]
	push	edx
	mov	ecx, DWORD PTR _pAssignedPlayer$[ebp]
	call	?getNumResourceTotal@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceTotal
	test	eax, eax
	jle	SHORT $LN57@IsComplete

; 408  : 		{
; 409  : 			return true;

	mov	al, 1
	jmp	$LN69@IsComplete
$LN57@IsComplete:

; 410  : 		}
; 411  : 	}

	jmp	$LN64@IsComplete
$LN58@IsComplete:

; 412  : 	else if(m_eType == MINOR_CIV_QUEST_CONSTRUCT_WONDER)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 3
	jne	SHORT $LN55@IsComplete

; 413  : 	{
; 414  : 		BuildingTypes eWonder = (BuildingTypes) m_iData1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _eWonder$221075[ebp], edx

; 415  : 
; 416  : 		// Player built the Wonder?
; 417  : 		if(pAssignedPlayer->countNumBuildings(eWonder) > 0)

	mov	eax, DWORD PTR _eWonder$221075[ebp]
	push	eax
	mov	ecx, DWORD PTR _pAssignedPlayer$[ebp]
	call	?countNumBuildings@CvPlayer@@QBEHW4BuildingTypes@@@Z ; CvPlayer::countNumBuildings
	test	eax, eax
	jle	SHORT $LN54@IsComplete

; 418  : 		{
; 419  : 			return true;

	mov	al, 1
	jmp	$LN69@IsComplete
$LN54@IsComplete:

; 420  : 		}
; 421  : 	}

	jmp	$LN64@IsComplete
$LN55@IsComplete:

; 422  : 	else if(m_eType == MINOR_CIV_QUEST_GREAT_PERSON)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 4
	jne	SHORT $LN52@IsComplete

; 423  : 	{
; 424  : 		UnitTypes eUnit = (UnitTypes) m_iData1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _eUnit$221080[ebp], eax

; 425  : 
; 426  : 		// Player has the Great Person?
; 427  : 		int iLoop;
; 428  : 		for(CvUnit* pLoopUnit = pAssignedPlayer->firstUnit(&iLoop); NULL != pLoopUnit; pLoopUnit = pAssignedPlayer->nextUnit(&iLoop))

	push	0
	lea	ecx, DWORD PTR _iLoop$221082[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pAssignedPlayer$[ebp]
	call	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::firstUnit
	mov	DWORD PTR _pLoopUnit$221083[ebp], eax
	jmp	SHORT $LN51@IsComplete
$LN50@IsComplete:
	push	0
	lea	edx, DWORD PTR _iLoop$221082[ebp]
	push	edx
	mov	ecx, DWORD PTR _pAssignedPlayer$[ebp]
	call	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::nextUnit
	mov	DWORD PTR _pLoopUnit$221083[ebp], eax
$LN51@IsComplete:
	cmp	DWORD PTR _pLoopUnit$221083[ebp], 0
	je	SHORT $LN49@IsComplete

; 429  : 		{
; 430  : 			if(pLoopUnit->getUnitType() == eUnit)

	mov	ecx, DWORD PTR _pLoopUnit$221083[ebp]
	call	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ ; CvUnit::getUnitType
	cmp	eax, DWORD PTR _eUnit$221080[ebp]
	jne	SHORT $LN48@IsComplete

; 431  : 			{
; 432  : 				return true;

	mov	al, 1
	jmp	$LN69@IsComplete
$LN48@IsComplete:

; 433  : 			}
; 434  : 		}

	jmp	SHORT $LN50@IsComplete
$LN49@IsComplete:

; 435  : 	}
; 436  : 	else if(m_eType == MINOR_CIV_QUEST_KILL_CITY_STATE)

	jmp	$LN64@IsComplete
$LN52@IsComplete:
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 5
	jne	SHORT $LN46@IsComplete

; 437  : 	{
; 438  : 		PlayerTypes eTargetCityState = (PlayerTypes) m_iData1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _eTargetCityState$221090[ebp], edx

; 439  : 		CvPlayer* pTargetCityState = &GET_PLAYER(eTargetCityState);

	mov	eax, DWORD PTR _eTargetCityState$221090[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pTargetCityState$221092[ebp], eax

; 440  : 		if(pTargetCityState)

	je	SHORT $LN45@IsComplete

; 441  : 		{
; 442  : 			CvTeam* pTargetCityStateTeam = &GET_TEAM(pTargetCityState->getTeam());

	mov	ecx, DWORD PTR _pTargetCityState$221092[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T235396[ebp], eax
	mov	eax, DWORD PTR $T235396[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _pTargetCityStateTeam$221094[ebp], eax

; 443  : 			if(pTargetCityStateTeam)

	je	SHORT $LN45@IsComplete

; 444  : 			{
; 445  : 				// Player killed the City State?
; 446  : 				if(pTargetCityStateTeam->GetKilledByTeam() == pAssignedPlayer->getTeam())

	mov	ecx, DWORD PTR _pAssignedPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T235408[ebp], eax
	mov	ecx, DWORD PTR _pTargetCityStateTeam$221094[ebp]
	call	?GetKilledByTeam@CvTeam@@QBE?AW4TeamTypes@@XZ ; CvTeam::GetKilledByTeam
	cmp	eax, DWORD PTR $T235408[ebp]
	jne	SHORT $LN45@IsComplete

; 447  : 				{
; 448  : 					return true;

	mov	al, 1
	jmp	$LN69@IsComplete
$LN45@IsComplete:

; 449  : 				}
; 450  : 			}
; 451  : 		}
; 452  : 	}

	jmp	$LN64@IsComplete
$LN46@IsComplete:

; 453  : 	else if(m_eType == MINOR_CIV_QUEST_FIND_PLAYER)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 6
	jne	SHORT $LN41@IsComplete

; 454  : 	{
; 455  : 		PlayerTypes ePlayerToFind = (PlayerTypes) m_iData1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _ePlayerToFind$221099[ebp], edx

; 456  : 
; 457  : 		// Player found the target player?
; 458  : 		if(GET_TEAM(pAssignedPlayer->getTeam()).IsHasFoundPlayersTerritory(ePlayerToFind))

	mov	eax, DWORD PTR _pAssignedPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T235417[ebp], eax
	mov	edx, DWORD PTR $T235417[ebp]
	imul	edx, 2984				; 00000ba8H
	add	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T235421[ebp], edx
	mov	eax, DWORD PTR _ePlayerToFind$221099[ebp]
	push	eax
	mov	ecx, DWORD PTR $T235421[ebp]
	call	?IsHasFoundPlayersTerritory@CvTeam@@QBE_NW4PlayerTypes@@@Z ; CvTeam::IsHasFoundPlayersTerritory
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN40@IsComplete

; 459  : 		{
; 460  : 			return true;

	mov	al, 1
	jmp	$LN69@IsComplete
$LN40@IsComplete:

; 461  : 		}
; 462  : 	}

	jmp	$LN64@IsComplete
$LN41@IsComplete:

; 463  : 	else if(m_eType == MINOR_CIV_QUEST_FIND_NATURAL_WONDER)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 7
	jne	SHORT $LN38@IsComplete

; 464  : 	{
; 465  : 		int iNumWondersFoundBefore = m_iData1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _iNumWondersFoundBefore$221104[ebp], ecx

; 466  : 
; 467  : 		// Player found a new NW?
; 468  : 		if(GET_TEAM(pAssignedPlayer->getTeam()).GetNumNaturalWondersDiscovered() > iNumWondersFoundBefore)

	mov	edx, DWORD PTR _pAssignedPlayer$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T235430[ebp], eax
	mov	ecx, DWORD PTR $T235430[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T235434[ebp], ecx
	mov	ecx, DWORD PTR $T235434[ebp]
	call	?GetNumNaturalWondersDiscovered@CvTeam@@QBEHXZ ; CvTeam::GetNumNaturalWondersDiscovered
	cmp	eax, DWORD PTR _iNumWondersFoundBefore$221104[ebp]
	jle	SHORT $LN37@IsComplete

; 469  : 		{
; 470  : 			return true;

	mov	al, 1
	jmp	$LN69@IsComplete
$LN37@IsComplete:

; 471  : 		}
; 472  : 	}

	jmp	$LN64@IsComplete
$LN38@IsComplete:

; 473  : 	else if(m_eType == MINOR_CIV_QUEST_GIVE_GOLD)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 8
	jne	SHORT $LN35@IsComplete

; 474  : 	{
; 475  : 		int iGoldGiftedBefore = m_iData2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _iGoldGiftedBefore$221108[ebp], ecx

; 476  : 
; 477  : 		// Has the player given gold since the quest began?
; 478  : 		if(pMinor->GetMinorCivAI()->GetNumGoldGifted(m_eAssignedPlayer) > iGoldGiftedBefore)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetNumGoldGifted@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetNumGoldGifted
	cmp	eax, DWORD PTR _iGoldGiftedBefore$221108[ebp]
	jle	SHORT $LN34@IsComplete

; 479  : 		{
; 480  : 			return true;

	mov	al, 1
	jmp	$LN69@IsComplete
$LN34@IsComplete:

; 481  : 		}
; 482  : 	}

	jmp	$LN64@IsComplete
$LN35@IsComplete:

; 483  : 	else if(m_eType == MINOR_CIV_QUEST_PLEDGE_TO_PROTECT)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 9
	jne	SHORT $LN32@IsComplete

; 484  : 	{
; 485  : 		// Has the player pledged?
; 486  : 		if(pMinor->GetMinorCivAI()->IsProtectedByMajor(m_eAssignedPlayer))

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsProtectedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsProtectedByMajor
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN31@IsComplete

; 487  : 		{
; 488  : 			return true;

	mov	al, 1
	jmp	$LN69@IsComplete
$LN31@IsComplete:

; 489  : 		}
; 490  : 	}

	jmp	$LN64@IsComplete
$LN32@IsComplete:

; 491  : 	else if(m_eType == MINOR_CIV_QUEST_CONTEST_CULTURE)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 10			; 0000000aH
	jne	SHORT $LN29@IsComplete

; 492  : 	{
; 493  : 		// Is it time to compare the score?
; 494  : 		if(GetEndTurn() == GC.getGame().getGameTurn())

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235438[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEndTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetEndTurn
	mov	esi, eax
	mov	ecx, DWORD PTR $T235438[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	cmp	esi, eax
	jne	SHORT $LN28@IsComplete

; 495  : 			if(IsContestLeader(GetPlayerAssignedTo()))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayerAssignedTo@CvMinorCivQuest@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivQuest::GetPlayerAssignedTo
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsContestLeader@CvMinorCivQuest@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivQuest::IsContestLeader
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN28@IsComplete

; 496  : 				return true;

	mov	al, 1
	jmp	$LN69@IsComplete
$LN28@IsComplete:

; 497  : 	}

	jmp	$LN64@IsComplete
$LN29@IsComplete:

; 498  : 	else if(m_eType == MINOR_CIV_QUEST_CONTEST_FAITH)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 11			; 0000000bH
	jne	SHORT $LN25@IsComplete

; 499  : 	{
; 500  : 		// Is it time to compare the score?
; 501  : 		if(GetEndTurn() == GC.getGame().getGameTurn())

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235442[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEndTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetEndTurn
	mov	esi, eax
	mov	ecx, DWORD PTR $T235442[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	cmp	esi, eax
	jne	SHORT $LN24@IsComplete

; 502  : 			if(IsContestLeader(GetPlayerAssignedTo()))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayerAssignedTo@CvMinorCivQuest@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivQuest::GetPlayerAssignedTo
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsContestLeader@CvMinorCivQuest@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivQuest::IsContestLeader
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN24@IsComplete

; 503  : 				return true;

	mov	al, 1
	jmp	$LN69@IsComplete
$LN24@IsComplete:

; 504  : 	}

	jmp	$LN64@IsComplete
$LN25@IsComplete:

; 505  : 	else if(m_eType == MINOR_CIV_QUEST_CONTEST_TECHS)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 12			; 0000000cH
	jne	SHORT $LN21@IsComplete

; 506  : 	{
; 507  : 		// Is it time to compare the score?
; 508  : 		if(GetEndTurn() == GC.getGame().getGameTurn())

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235446[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEndTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetEndTurn
	mov	esi, eax
	mov	ecx, DWORD PTR $T235446[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	cmp	esi, eax
	jne	SHORT $LN20@IsComplete

; 509  : 			if(IsContestLeader(GetPlayerAssignedTo()))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayerAssignedTo@CvMinorCivQuest@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivQuest::GetPlayerAssignedTo
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsContestLeader@CvMinorCivQuest@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivQuest::IsContestLeader
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN20@IsComplete

; 510  : 				return true;

	mov	al, 1
	jmp	$LN69@IsComplete
$LN20@IsComplete:

; 511  : 	}

	jmp	$LN64@IsComplete
$LN21@IsComplete:

; 512  : 	else if(m_eType == MINOR_CIV_QUEST_INVEST)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 13			; 0000000dH
	jne	SHORT $LN17@IsComplete

; 513  : 	{
; 514  : 		if(GetEndTurn() == GC.getGame().getGameTurn())

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235450[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEndTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetEndTurn
	mov	esi, eax
	mov	ecx, DWORD PTR $T235450[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	cmp	esi, eax
	jne	SHORT $LN16@IsComplete

; 515  : 			return true;

	mov	al, 1
	jmp	$LN69@IsComplete
$LN16@IsComplete:

; 516  : 	}

	jmp	$LN64@IsComplete
$LN17@IsComplete:

; 517  : 	else if(m_eType == MINOR_CIV_QUEST_BULLY_CITY_STATE)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 14			; 0000000eH
	jne	SHORT $LN14@IsComplete

; 518  : 	{
; 519  : 		// Has the player bullied since the quest began?
; 520  : 		PlayerTypes eTargetMinor = (PlayerTypes) m_iData1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _eTargetMinor$221130[ebp], eax

; 521  : 		CvPlayer* pTargetMinor = &GET_PLAYER(eTargetMinor);

	mov	ecx, DWORD PTR _eTargetMinor$221130[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pTargetMinor$221132[ebp], ecx

; 522  : 		if(pTargetMinor)

	je	SHORT $LN13@IsComplete

; 523  : 		{
; 524  : 			int iMostRecentBullyTurn = pTargetMinor->GetMinorCivAI()->GetTurnLastBulliedByMajor(m_eAssignedPlayer);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _pTargetMinor$221132[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetTurnLastBulliedByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetTurnLastBulliedByMajor
	mov	DWORD PTR _iMostRecentBullyTurn$221134[ebp], eax

; 525  : 			if(iMostRecentBullyTurn > m_iData2)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _iMostRecentBullyTurn$221134[ebp]
	cmp	edx, DWORD PTR [ecx+20]
	jle	SHORT $LN13@IsComplete

; 526  : 				return true;

	mov	al, 1
	jmp	$LN69@IsComplete
$LN13@IsComplete:

; 527  : 		}
; 528  : 	}

	jmp	$LN64@IsComplete
$LN14@IsComplete:

; 529  : 	else if(m_eType == MINOR_CIV_QUEST_DENOUNCE_MAJOR)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 15			; 0000000fH
	jne	SHORT $LN10@IsComplete

; 530  : 	{
; 531  : 		// Has the player denounced that major yet?
; 532  : 		PlayerTypes eTargetMajor = (PlayerTypes) m_iData1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _eTargetMajor$221138[ebp], edx

; 533  : 		CvPlayer* pTargetMajor = &GET_PLAYER(eTargetMajor);

	mov	eax, DWORD PTR _eTargetMajor$221138[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pTargetMajor$221140[ebp], eax

; 534  : 		if(pTargetMajor)

	je	SHORT $LN9@IsComplete

; 535  : 		{
; 536  : 			if(pAssignedPlayer->GetDiplomacyAI()->IsDenouncedPlayer(eTargetMajor))

	mov	ecx, DWORD PTR _eTargetMajor$221138[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pAssignedPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsDenouncedPlayer@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsDenouncedPlayer
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN9@IsComplete

; 537  : 				return true;

	mov	al, 1
	jmp	$LN69@IsComplete
$LN9@IsComplete:

; 538  : 		}
; 539  : 	}

	jmp	$LN64@IsComplete
$LN10@IsComplete:

; 540  : 	else if(m_eType == MINOR_CIV_QUEST_SPREAD_RELIGION)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 16			; 00000010H
	jne	SHORT $LN6@IsComplete

; 541  : 	{
; 542  : 		// Does the CS have the right majority religion?
; 543  : 		ReligionTypes eReligion = (ReligionTypes) m_iData1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _eReligion$221145[ebp], edx

; 544  : 		if(pMinor->getCapitalCity())

	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	test	eax, eax
	je	SHORT $LN5@IsComplete

; 545  : 		{
; 546  : 			if(pMinor->getCapitalCity()->GetCityReligions()->GetReligiousMajority() == eReligion)

	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	ecx, eax
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, DWORD PTR _eReligion$221145[ebp]
	jne	SHORT $LN5@IsComplete

; 547  : 				return true;

	mov	al, 1
	jmp	SHORT $LN69@IsComplete
$LN5@IsComplete:

; 548  : 		}
; 549  : 	}

	jmp	SHORT $LN64@IsComplete
$LN6@IsComplete:

; 550  : 	else if(m_eType == MINOR_CIV_QUEST_TRADE_ROUTE)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 17			; 00000011H
	jne	SHORT $LN64@IsComplete

; 551  : 	{
; 552  : 		if(GC.getGame().GetGameTrade()->IsPlayerConnectedToPlayer(m_eMinor,m_eAssignedPlayer))

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235460[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR $T235460[ebp]
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	ecx, eax
	call	?IsPlayerConnectedToPlayer@CvGameTrade@@QAE_NW4PlayerTypes@@0@Z ; CvGameTrade::IsPlayerConnectedToPlayer
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN64@IsComplete

; 553  : 			return true;

	mov	al, 1
	jmp	SHORT $LN69@IsComplete
$LN64@IsComplete:

; 554  : 	}
; 555  : 
; 556  : 	return false;

	xor	al, al
$LN69@IsComplete:

; 557  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?IsComplete@CvMinorCivQuest@@QAE_NXZ ENDP		; CvMinorCivQuest::IsComplete
_TEXT	ENDS
PUBLIC	?IsRecentlyBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsRecentlyBulliedByMajor
PUBLIC	?IsRevoked@CvMinorCivQuest@@QAE_NXZ		; CvMinorCivQuest::IsRevoked
; Function compile flags: /Odtp
;	COMDAT ?IsRevoked@CvMinorCivQuest@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T235466 = -4						; size = 4
?IsRevoked@CvMinorCivQuest@@QAE_NXZ PROC		; CvMinorCivQuest::IsRevoked, COMDAT
; _this$ = ecx

; 561  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 562  : 	if(GET_PLAYER(m_eMinor).GetMinorCivAI()->IsRecentlyBulliedByMajor(m_eAssignedPlayer))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T235466[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR $T235466[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsRecentlyBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsRecentlyBulliedByMajor
	movzx	ecx, al
	test	ecx, ecx
	je	$LN14@IsRevoked

; 563  : 	{
; 564  : 		if(m_eType == MINOR_CIV_QUEST_ROUTE)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jne	SHORT $LN13@IsRevoked

; 565  : 			return true;

	mov	al, 1
	jmp	$LN15@IsRevoked
$LN13@IsRevoked:

; 566  : 		if(m_eType == MINOR_CIV_QUEST_CONNECT_RESOURCE)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 2
	jne	SHORT $LN12@IsRevoked

; 567  : 			return true;

	mov	al, 1
	jmp	$LN15@IsRevoked
$LN12@IsRevoked:

; 568  : 		if(m_eType == MINOR_CIV_QUEST_CONSTRUCT_WONDER)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 3
	jne	SHORT $LN11@IsRevoked

; 569  : 			return true;

	mov	al, 1
	jmp	$LN15@IsRevoked
$LN11@IsRevoked:

; 570  : 		if(m_eType == MINOR_CIV_QUEST_GREAT_PERSON)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 4
	jne	SHORT $LN10@IsRevoked

; 571  : 			return true;

	mov	al, 1
	jmp	SHORT $LN15@IsRevoked
$LN10@IsRevoked:

; 572  : 		if(m_eType == MINOR_CIV_QUEST_FIND_PLAYER)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 6
	jne	SHORT $LN9@IsRevoked

; 573  : 			return true;

	mov	al, 1
	jmp	SHORT $LN15@IsRevoked
$LN9@IsRevoked:

; 574  : 		if(m_eType == MINOR_CIV_QUEST_FIND_NATURAL_WONDER)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 7
	jne	SHORT $LN8@IsRevoked

; 575  : 			return true;

	mov	al, 1
	jmp	SHORT $LN15@IsRevoked
$LN8@IsRevoked:

; 576  : 		if(m_eType == MINOR_CIV_QUEST_GIVE_GOLD)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 8
	jne	SHORT $LN7@IsRevoked

; 577  : 			return true;

	mov	al, 1
	jmp	SHORT $LN15@IsRevoked
$LN7@IsRevoked:

; 578  : 		if(m_eType == MINOR_CIV_QUEST_PLEDGE_TO_PROTECT)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 9
	jne	SHORT $LN6@IsRevoked

; 579  : 			return true;

	mov	al, 1
	jmp	SHORT $LN15@IsRevoked
$LN6@IsRevoked:

; 580  : 		if(m_eType == MINOR_CIV_QUEST_INVEST)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 13			; 0000000dH
	jne	SHORT $LN5@IsRevoked

; 581  : 			return true;

	mov	al, 1
	jmp	SHORT $LN15@IsRevoked
$LN5@IsRevoked:

; 582  : 		if(m_eType == MINOR_CIV_QUEST_BULLY_CITY_STATE)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 14			; 0000000eH
	jne	SHORT $LN4@IsRevoked

; 583  : 			return true;

	mov	al, 1
	jmp	SHORT $LN15@IsRevoked
$LN4@IsRevoked:

; 584  : 		if(m_eType == MINOR_CIV_QUEST_DENOUNCE_MAJOR)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 15			; 0000000fH
	jne	SHORT $LN3@IsRevoked

; 585  : 			return true;

	mov	al, 1
	jmp	SHORT $LN15@IsRevoked
$LN3@IsRevoked:

; 586  : 		if(m_eType == MINOR_CIV_QUEST_SPREAD_RELIGION)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 16			; 00000010H
	jne	SHORT $LN2@IsRevoked

; 587  : 			return true;

	mov	al, 1
	jmp	SHORT $LN15@IsRevoked
$LN2@IsRevoked:

; 588  : 		if(m_eType == MINOR_CIV_QUEST_TRADE_ROUTE)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 17			; 00000011H
	jne	SHORT $LN14@IsRevoked

; 589  : 			return true;

	mov	al, 1
	jmp	SHORT $LN15@IsRevoked
$LN14@IsRevoked:

; 590  : 	}
; 591  : 
; 592  : 	return false;

	xor	al, al
$LN15@IsRevoked:

; 593  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsRevoked@CvMinorCivQuest@@QAE_NXZ ENDP		; CvMinorCivQuest::IsRevoked
_TEXT	ENDS
PUBLIC	?coordRange@@YAHHH_N@Z				; coordRange
PUBLIC	?IsExpired@CvMinorCivQuest@@QAE_NXZ		; CvMinorCivQuest::IsExpired
EXTRN	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z:PROC ; CvGlobals::getBuildingInfo
EXTRN	?HasBarbarianCamp@CvPlot@@QAE_NXZ:PROC		; CvPlot::HasBarbarianCamp
; Function compile flags: /Odtp
;	COMDAT ?IsExpired@CvMinorCivQuest@@QAE_NXZ
_TEXT	SEGMENT
tv323 = -152						; size = 4
_this$ = -148						; size = 4
$T235629 = -142						; size = 1
$T235617 = -141						; size = 1
$T235605 = -140						; size = 4
$T235601 = -136						; size = 4
$T235597 = -132						; size = 4
$T235593 = -125						; size = 1
$T235584 = -124						; size = 4
$T235577 = -120						; size = 4
$T235568 = -116						; size = 4
$T235564 = -109						; size = 1
$T235552 = -108						; size = 4
$T235507 = -104						; size = 4
$T235502 = -100						; size = 4
$T235498 = -93						; size = 1
$T235487 = -92						; size = 4
$T235483 = -85						; size = 1
_iMapY$235516 = -84					; size = 4
_iMapX$235515 = -80					; size = 4
$T235476 = -76						; size = 4
$T235472 = -72						; size = 4
_eTargetPlayer$221241 = -68				; size = 4
_pTargetPlayer$221243 = -64				; size = 4
_eTargetCityState$221234 = -60				; size = 4
_pTargetCityState$221236 = -56				; size = 4
_eTargetPlayer$221210 = -52				; size = 4
_pTargetPlayer$221212 = -48				; size = 4
_pTargetCityStateTeam$221205 = -44			; size = 4
_eTargetCityState$221201 = -40				; size = 4
_pTargetCityState$221203 = -36				; size = 4
_pLoopPlayer$221194 = -32				; size = 4
_eLoopPlayer$221192 = -28				; size = 4
_iPlayerLoop$221188 = -24				; size = 4
_eWonder$221184 = -20					; size = 4
_pkBuildingInfo$221186 = -16				; size = 4
_pPlot$221177 = -12					; size = 4
_iX$221175 = -8						; size = 4
_iY$221176 = -4						; size = 4
?IsExpired@CvMinorCivQuest@@QAE_NXZ PROC		; CvMinorCivQuest::IsExpired, COMDAT
; _this$ = ecx

; 597  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 152				; 00000098H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 598  : 	// If this quest type has an end turn, have we passed it?
; 599  : 	if(GetEndTurn() != NO_TURN && GC.getGame().getGameTurn() > GetEndTurn())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEndTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetEndTurn
	cmp	eax, -1
	je	SHORT $LN54@IsExpired
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235472[ebp], eax
	mov	ecx, DWORD PTR $T235472[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEndTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetEndTurn
	cmp	esi, eax
	jle	SHORT $LN54@IsExpired

; 600  : 	{
; 601  : 		return true;

	mov	al, 1
	jmp	$LN56@IsExpired
$LN54@IsExpired:

; 602  : 	}
; 603  : 
; 604  : 	// Build a Route
; 605  : 	if(m_eType == MINOR_CIV_QUEST_ROUTE)
; 606  : 	{
; 607  : 	}
; 608  : 
; 609  : 	// City-state wanted us to clear a camp
; 610  : 	if(m_eType == MINOR_CIV_QUEST_KILL_CAMP)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 1
	jne	$LN53@IsExpired

; 611  : 	{
; 612  : 		int iX = GetPrimaryData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPrimaryData@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetPrimaryData
	mov	DWORD PTR _iX$221175[ebp], eax

; 613  : 		int iY = GetSecondaryData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSecondaryData@CvMinorCivQuest@@QBEHXZ ; CvMinorCivQuest::GetSecondaryData
	mov	DWORD PTR _iY$221176[ebp], eax

; 614  : 		CvPlot* pPlot = GC.getMap().plot(iX, iY);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T235476[ebp], eax
	cmp	DWORD PTR _iX$221175[ebp], -2147483647	; 80000001H
	je	SHORT $LN62@IsExpired
	cmp	DWORD PTR _iY$221176[ebp], -2147483647	; 80000001H
	jne	SHORT $LN63@IsExpired
$LN62@IsExpired:
	mov	DWORD PTR _pPlot$221177[ebp], 0
	jmp	$LN64@IsExpired
$LN63@IsExpired:
	mov	ecx, DWORD PTR $T235476[ebp]
	mov	dl, BYTE PTR [ecx+4056]
	mov	BYTE PTR $T235483[ebp], dl
	mov	eax, DWORD PTR $T235476[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T235487[ebp], ecx
	movzx	edx, BYTE PTR $T235483[ebp]
	test	edx, edx
	je	SHORT $LN75@IsExpired
	cmp	DWORD PTR _iX$221175[ebp], 0
	jge	SHORT $LN74@IsExpired
	mov	eax, DWORD PTR _iX$221175[ebp]
	cdq
	idiv	DWORD PTR $T235487[ebp]
	add	edx, DWORD PTR $T235487[ebp]
	mov	DWORD PTR _iMapX$235515[ebp], edx
	jmp	SHORT $LN76@IsExpired
	jmp	SHORT $LN75@IsExpired
$LN74@IsExpired:
	mov	eax, DWORD PTR _iX$221175[ebp]
	cmp	eax, DWORD PTR $T235487[ebp]
	jl	SHORT $LN75@IsExpired
	mov	eax, DWORD PTR _iX$221175[ebp]
	cdq
	idiv	DWORD PTR $T235487[ebp]
	mov	DWORD PTR _iMapX$235515[ebp], edx
	jmp	SHORT $LN76@IsExpired
$LN75@IsExpired:
	mov	ecx, DWORD PTR _iX$221175[ebp]
	mov	DWORD PTR _iMapX$235515[ebp], ecx
$LN76@IsExpired:
	mov	edx, DWORD PTR $T235476[ebp]
	mov	al, BYTE PTR [edx+4057]
	mov	BYTE PTR $T235498[ebp], al
	mov	ecx, DWORD PTR $T235476[ebp]
	mov	edx, DWORD PTR [ecx+4024]
	mov	DWORD PTR $T235502[ebp], edx
	movzx	eax, BYTE PTR $T235498[ebp]
	push	eax
	mov	ecx, DWORD PTR $T235502[ebp]
	push	ecx
	mov	edx, DWORD PTR _iY$221176[ebp]
	push	edx
	call	?coordRange@@YAHHH_N@Z			; coordRange
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iMapY$235516[ebp], eax
	mov	eax, DWORD PTR _iMapY$235516[ebp]
	push	eax
	mov	ecx, DWORD PTR _iMapX$235515[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T235476[ebp]
	call	?isPlot@CvMap@@QBEHHH@Z			; CvMap::isPlot
	test	eax, eax
	je	SHORT $LN66@IsExpired
	mov	edx, DWORD PTR $T235476[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T235507[ebp], eax
	mov	ecx, DWORD PTR _iMapY$235516[ebp]
	imul	ecx, DWORD PTR $T235507[ebp]
	add	ecx, DWORD PTR _iMapX$235515[ebp]
	imul	ecx, 484				; 000001e4H
	mov	edx, DWORD PTR $T235476[ebp]
	add	ecx, DWORD PTR [edx+4068]
	mov	DWORD PTR tv323[ebp], ecx
	jmp	SHORT $LN67@IsExpired
$LN66@IsExpired:
	mov	DWORD PTR tv323[ebp], 0
$LN67@IsExpired:
	mov	eax, DWORD PTR tv323[ebp]
	mov	DWORD PTR _pPlot$221177[ebp], eax
$LN64@IsExpired:

; 615  : 
; 616  : 		if(pPlot)

	cmp	DWORD PTR _pPlot$221177[ebp], 0
	je	SHORT $LN53@IsExpired

; 617  : 		{
; 618  : 			// Camp that was here is gone
; 619  : 			if(!pPlot->HasBarbarianCamp())

	mov	ecx, DWORD PTR _pPlot$221177[ebp]
	call	?HasBarbarianCamp@CvPlot@@QAE_NXZ	; CvPlot::HasBarbarianCamp
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN53@IsExpired

; 620  : 			{
; 621  : 				// Someone cleared it, and it wasn't us
; 622  : 				if(pPlot->GetPlayerThatClearedBarbCampHere() != NO_PLAYER && pPlot->GetPlayerThatClearedBarbCampHere() != m_eAssignedPlayer)

	mov	ecx, DWORD PTR _pPlot$221177[ebp]
	call	?GetPlayerThatClearedBarbCampHere@CvPlot@@QBE?AW4PlayerTypes@@XZ ; CvPlot::GetPlayerThatClearedBarbCampHere
	cmp	eax, -1
	je	SHORT $LN53@IsExpired
	mov	ecx, DWORD PTR _pPlot$221177[ebp]
	call	?GetPlayerThatClearedBarbCampHere@CvPlot@@QBE?AW4PlayerTypes@@XZ ; CvPlot::GetPlayerThatClearedBarbCampHere
	mov	edx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [edx+4]
	je	SHORT $LN53@IsExpired

; 623  : 				{
; 624  : 					return true;

	mov	al, 1
	jmp	$LN56@IsExpired
$LN53@IsExpired:

; 625  : 				}
; 626  : 			}
; 627  : 		}
; 628  : 	}
; 629  : 
; 630  : 	// Connect a resource
; 631  : 	if(m_eType == MINOR_CIV_QUEST_CONNECT_RESOURCE)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 2
	jne	SHORT $LN49@IsExpired
	jmp	$LN48@IsExpired
$LN49@IsExpired:

; 632  : 	{
; 633  : 	}
; 634  : 
; 635  : 	// CONSTRUCT A WONDER
; 636  : 	else if(m_eType == MINOR_CIV_QUEST_CONSTRUCT_WONDER)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 3
	jne	$LN47@IsExpired

; 637  : 	{
; 638  : 		BuildingTypes eWonder = (BuildingTypes) GetPrimaryData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPrimaryData@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetPrimaryData
	mov	DWORD PTR _eWonder$221184[ebp], eax

; 639  : 		CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eWonder);

	mov	edx, DWORD PTR _eWonder$221184[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingInfo$221186[ebp], eax

; 640  : 		CvAssertMsg(pkBuildingInfo, "Building info not expected to be FALSE! Please send Anton your save file and version.");
; 641  : 		if(!pkBuildingInfo) return false;

	cmp	DWORD PTR _pkBuildingInfo$221186[ebp], 0
	jne	SHORT $LN46@IsExpired
	xor	al, al
	jmp	$LN56@IsExpired
$LN46@IsExpired:

; 642  : 
; 643  : 		for(int iPlayerLoop = 0; iPlayerLoop < MAX_CIV_PLAYERS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$221188[ebp], 0
	jmp	SHORT $LN45@IsExpired
$LN44@IsExpired:
	mov	eax, DWORD PTR _iPlayerLoop$221188[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayerLoop$221188[ebp], eax
$LN45@IsExpired:
	cmp	DWORD PTR _iPlayerLoop$221188[ebp], 63	; 0000003fH
	jge	SHORT $LN43@IsExpired

; 644  : 		{
; 645  : 			const PlayerTypes eLoopPlayer = (PlayerTypes) iPlayerLoop;

	mov	ecx, DWORD PTR _iPlayerLoop$221188[ebp]
	mov	DWORD PTR _eLoopPlayer$221192[ebp], ecx

; 646  : 			CvPlayer* pLoopPlayer = &GET_PLAYER(eLoopPlayer);

	mov	edx, DWORD PTR _eLoopPlayer$221192[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pLoopPlayer$221194[ebp], edx

; 647  : 
; 648  : 			if(pLoopPlayer)

	je	SHORT $LN42@IsExpired

; 649  : 			{
; 650  : 				// Someone built the wonder, and it wasn't us
; 651  : 				if(m_eAssignedPlayer != eLoopPlayer && pLoopPlayer->countNumBuildings(eWonder) > 0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _eLoopPlayer$221192[ebp]
	je	SHORT $LN42@IsExpired
	mov	edx, DWORD PTR _eWonder$221184[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLoopPlayer$221194[ebp]
	call	?countNumBuildings@CvPlayer@@QBEHW4BuildingTypes@@@Z ; CvPlayer::countNumBuildings
	test	eax, eax
	jle	SHORT $LN42@IsExpired

; 652  : 				{
; 653  : 					return true;

	mov	al, 1
	jmp	$LN56@IsExpired
$LN42@IsExpired:

; 654  : 				}
; 655  : 			}
; 656  : 		}

	jmp	SHORT $LN44@IsExpired
$LN43@IsExpired:

; 657  : 	}
; 658  : 
; 659  : 	// Spawn a Great Person
; 660  : 	else if(m_eType == MINOR_CIV_QUEST_GREAT_PERSON)

	jmp	$LN48@IsExpired
$LN47@IsExpired:
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 4
	jne	SHORT $LN39@IsExpired
	jmp	$LN48@IsExpired
$LN39@IsExpired:

; 661  : 	{
; 662  : 	}
; 663  : 
; 664  : 	// KILL ANOTHER CITY STATE
; 665  : 	else if(m_eType == MINOR_CIV_QUEST_KILL_CITY_STATE)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 5
	jne	$LN37@IsExpired

; 666  : 	{
; 667  : 		PlayerTypes eTargetCityState = (PlayerTypes) GetPrimaryData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPrimaryData@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetPrimaryData
	mov	DWORD PTR _eTargetCityState$221201[ebp], eax

; 668  : 		CvPlayer* pTargetCityState = &GET_PLAYER(eTargetCityState);

	mov	edx, DWORD PTR _eTargetCityState$221201[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pTargetCityState$221203[ebp], edx

; 669  : 
; 670  : 		if(pTargetCityState)

	je	SHORT $LN36@IsExpired

; 671  : 		{
; 672  : 			CvTeam* pTargetCityStateTeam = &GET_TEAM(pTargetCityState->getTeam());

	mov	eax, DWORD PTR _pTargetCityState$221203[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T235552[ebp], eax
	mov	edx, DWORD PTR $T235552[ebp]
	imul	edx, 2984				; 00000ba8H
	add	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _pTargetCityStateTeam$221205[ebp], edx

; 673  : 			if(pTargetCityStateTeam)

	je	SHORT $LN36@IsExpired

; 674  : 			{
; 675  : 				// Someone killed the City State, and it wasn't us
; 676  : 				if(!pTargetCityState->isAlive() && pTargetCityStateTeam->GetKilledByTeam() != GET_PLAYER(m_eAssignedPlayer).getTeam())

	mov	eax, DWORD PTR _pTargetCityState$221203[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T235564[ebp], cl
	movzx	edx, BYTE PTR $T235564[ebp]
	test	edx, edx
	jne	SHORT $LN36@IsExpired
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T235568[ebp], ecx
	mov	edx, DWORD PTR $T235568[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T235577[ebp], eax
	mov	ecx, DWORD PTR _pTargetCityStateTeam$221205[ebp]
	call	?GetKilledByTeam@CvTeam@@QBE?AW4TeamTypes@@XZ ; CvTeam::GetKilledByTeam
	cmp	eax, DWORD PTR $T235577[ebp]
	je	SHORT $LN36@IsExpired

; 677  : 				{
; 678  : 					return true;

	mov	al, 1
	jmp	$LN56@IsExpired
$LN36@IsExpired:

; 679  : 				}
; 680  : 			}
; 681  : 		}
; 682  : 	}

	jmp	$LN48@IsExpired
$LN37@IsExpired:

; 683  : 
; 684  : 	// Find a Player
; 685  : 	else if(m_eType == MINOR_CIV_QUEST_FIND_PLAYER)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 6
	jne	SHORT $LN32@IsExpired

; 686  : 	{
; 687  : 		PlayerTypes eTargetPlayer = (PlayerTypes) GetPrimaryData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPrimaryData@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetPrimaryData
	mov	DWORD PTR _eTargetPlayer$221210[ebp], eax

; 688  : 		CvPlayer* pTargetPlayer = &GET_PLAYER(eTargetPlayer);

	mov	edx, DWORD PTR _eTargetPlayer$221210[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pTargetPlayer$221212[ebp], edx

; 689  : 
; 690  : 		if(pTargetPlayer)

	je	SHORT $LN31@IsExpired

; 691  : 		{
; 692  : 			// Someone killed the Player
; 693  : 			if(!GET_PLAYER(eTargetPlayer).isAlive())

	mov	eax, DWORD PTR _eTargetPlayer$221210[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T235584[ebp], eax
	mov	ecx, DWORD PTR $T235584[ebp]
	mov	dl, BYTE PTR [ecx+2256]
	mov	BYTE PTR $T235593[ebp], dl
	movzx	eax, BYTE PTR $T235593[ebp]
	test	eax, eax
	jne	SHORT $LN31@IsExpired

; 694  : 				return true;

	mov	al, 1
	jmp	$LN56@IsExpired
$LN31@IsExpired:

; 695  : 		}
; 696  : 	}

	jmp	$LN48@IsExpired
$LN32@IsExpired:

; 697  : 
; 698  : 	// Find a Natural Wonder
; 699  : 	else if(m_eType == MINOR_CIV_QUEST_FIND_NATURAL_WONDER)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 7
	jne	SHORT $LN28@IsExpired
	jmp	$LN48@IsExpired
$LN28@IsExpired:

; 700  : 	{
; 701  : 	}
; 702  : 
; 703  : 	// Give Gold
; 704  : 	else if(m_eType == MINOR_CIV_QUEST_GIVE_GOLD)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 8
	jne	SHORT $LN26@IsExpired
	jmp	$LN48@IsExpired
$LN26@IsExpired:

; 705  : 	{
; 706  : 	}
; 707  : 
; 708  : 	// Pledge to Protect
; 709  : 	else if(m_eType == MINOR_CIV_QUEST_PLEDGE_TO_PROTECT)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 9
	jne	SHORT $LN24@IsExpired
	jmp	$LN48@IsExpired
$LN24@IsExpired:

; 710  : 	{
; 711  : 	}
; 712  : 
; 713  : 	// Contest Culture
; 714  : 	else if(m_eType == MINOR_CIV_QUEST_CONTEST_CULTURE)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 10			; 0000000aH
	jne	SHORT $LN22@IsExpired

; 715  : 	{
; 716  : 		if(GC.getGame().getGameTurn() == GetEndTurn() && !IsComplete())

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235597[ebp], edx
	mov	ecx, DWORD PTR $T235597[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEndTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetEndTurn
	cmp	esi, eax
	jne	SHORT $LN21@IsExpired
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsComplete@CvMinorCivQuest@@QAE_NXZ	; CvMinorCivQuest::IsComplete
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN21@IsExpired

; 717  : 			return true;

	mov	al, 1
	jmp	$LN56@IsExpired
$LN21@IsExpired:

; 718  : 	}

	jmp	$LN48@IsExpired
$LN22@IsExpired:

; 719  : 
; 720  : 	// Contest Faith
; 721  : 	else if(m_eType == MINOR_CIV_QUEST_CONTEST_FAITH)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 11			; 0000000bH
	jne	SHORT $LN19@IsExpired

; 722  : 	{
; 723  : 		if(GC.getGame().getGameTurn() == GetEndTurn() && !IsComplete())

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235601[ebp], edx
	mov	ecx, DWORD PTR $T235601[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEndTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetEndTurn
	cmp	esi, eax
	jne	SHORT $LN18@IsExpired
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsComplete@CvMinorCivQuest@@QAE_NXZ	; CvMinorCivQuest::IsComplete
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN18@IsExpired

; 724  : 			return true;

	mov	al, 1
	jmp	$LN56@IsExpired
$LN18@IsExpired:

; 725  : 	}

	jmp	$LN48@IsExpired
$LN19@IsExpired:

; 726  : 
; 727  : 	// Contest Techs
; 728  : 	else if(m_eType == MINOR_CIV_QUEST_CONTEST_TECHS)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 12			; 0000000cH
	jne	SHORT $LN16@IsExpired

; 729  : 	{
; 730  : 		if(GC.getGame().getGameTurn() == GetEndTurn() && !IsComplete())

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235605[ebp], edx
	mov	ecx, DWORD PTR $T235605[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEndTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetEndTurn
	cmp	esi, eax
	jne	SHORT $LN15@IsExpired
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsComplete@CvMinorCivQuest@@QAE_NXZ	; CvMinorCivQuest::IsComplete
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN15@IsExpired

; 731  : 			return true;

	mov	al, 1
	jmp	$LN56@IsExpired
$LN15@IsExpired:

; 732  : 	}

	jmp	$LN48@IsExpired
$LN16@IsExpired:

; 733  : 
; 734  : 	// Invest
; 735  : 	else if(m_eType == MINOR_CIV_QUEST_INVEST)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 13			; 0000000dH
	jne	SHORT $LN13@IsExpired
	jmp	$LN48@IsExpired
$LN13@IsExpired:

; 736  : 	{
; 737  : 	}
; 738  : 
; 739  : 	// Bully target City-State
; 740  : 	else if(m_eType == MINOR_CIV_QUEST_BULLY_CITY_STATE)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 14			; 0000000eH
	jne	SHORT $LN11@IsExpired

; 741  : 	{
; 742  : 		PlayerTypes eTargetCityState = (PlayerTypes) GetPrimaryData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPrimaryData@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetPrimaryData
	mov	DWORD PTR _eTargetCityState$221234[ebp], eax

; 743  : 		CvPlayer* pTargetCityState = &GET_PLAYER(eTargetCityState);

	mov	eax, DWORD PTR _eTargetCityState$221234[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pTargetCityState$221236[ebp], eax

; 744  : 
; 745  : 		if(pTargetCityState)

	je	SHORT $LN10@IsExpired

; 746  : 		{
; 747  : 			// Someone killed the City State...ouch
; 748  : 			if(!pTargetCityState->isAlive())

	mov	ecx, DWORD PTR _pTargetCityState$221236[ebp]
	mov	dl, BYTE PTR [ecx+2256]
	mov	BYTE PTR $T235617[ebp], dl
	movzx	eax, BYTE PTR $T235617[ebp]
	test	eax, eax
	jne	SHORT $LN10@IsExpired

; 749  : 				return true;

	mov	al, 1
	jmp	SHORT $LN56@IsExpired
$LN10@IsExpired:

; 750  : 		}
; 751  : 	}

	jmp	SHORT $LN48@IsExpired
$LN11@IsExpired:

; 752  : 
; 753  : 	// Denounce target Major
; 754  : 	else if(m_eType == MINOR_CIV_QUEST_DENOUNCE_MAJOR)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 15			; 0000000fH
	jne	SHORT $LN48@IsExpired

; 755  : 	{
; 756  : 		PlayerTypes eTargetPlayer = (PlayerTypes) GetPrimaryData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPrimaryData@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetPrimaryData
	mov	DWORD PTR _eTargetPlayer$221241[ebp], eax

; 757  : 		CvPlayer* pTargetPlayer = &GET_PLAYER(eTargetPlayer);

	mov	edx, DWORD PTR _eTargetPlayer$221241[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pTargetPlayer$221243[ebp], edx

; 758  : 
; 759  : 		if(pTargetPlayer)

	je	SHORT $LN48@IsExpired

; 760  : 		{
; 761  : 			// Someone killed the Major
; 762  : 			if(!pTargetPlayer->isAlive())

	mov	eax, DWORD PTR _pTargetPlayer$221243[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T235629[ebp], cl
	movzx	edx, BYTE PTR $T235629[ebp]
	test	edx, edx
	jne	SHORT $LN48@IsExpired

; 763  : 				return true;

	mov	al, 1
	jmp	SHORT $LN56@IsExpired
$LN48@IsExpired:

; 764  : 		}
; 765  : 	}
; 766  : 
; 767  : 	// Spread your religion to us
; 768  : 	else if(m_eType == MINOR_CIV_QUEST_SPREAD_RELIGION)
; 769  : 	{
; 770  : 		//antonjs: consider: if holy city is lost
; 771  : 	}
; 772  : 	
; 773  : 	// Trade Route
; 774  : 	else if(m_eType == MINOR_CIV_QUEST_TRADE_ROUTE)
; 775  : 	{
; 776  : 	}
; 777  : 
; 778  : 	return false;

	xor	al, al
$LN56@IsExpired:

; 779  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?IsExpired@CvMinorCivQuest@@QAE_NXZ ENDP		; CvMinorCivQuest::IsExpired
_TEXT	ENDS
PUBLIC	?IsObsolete@CvMinorCivQuest@@QAE_NXZ		; CvMinorCivQuest::IsObsolete
; Function compile flags: /Odtp
;	COMDAT ?IsObsolete@CvMinorCivQuest@@QAE_NXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?IsObsolete@CvMinorCivQuest@@QAE_NXZ PROC		; CvMinorCivQuest::IsObsolete, COMDAT
; _this$ = ecx

; 782  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 783  : 	return (IsRevoked() || IsExpired());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsRevoked@CvMinorCivQuest@@QAE_NXZ	; CvMinorCivQuest::IsRevoked
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@IsObsolete
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsExpired@CvMinorCivQuest@@QAE_NXZ	; CvMinorCivQuest::IsExpired
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@IsObsolete
	mov	DWORD PTR tv72[ebp], 0
	jmp	SHORT $LN4@IsObsolete
$LN3@IsObsolete:
	mov	DWORD PTR tv72[ebp], 1
$LN4@IsObsolete:
	mov	al, BYTE PTR tv72[ebp]

; 784  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsObsolete@CvMinorCivQuest@@QAE_NXZ ENDP		; CvMinorCivQuest::IsObsolete
_TEXT	ENDS
PUBLIC	?IsHandled@CvMinorCivQuest@@QAE_NXZ		; CvMinorCivQuest::IsHandled
; Function compile flags: /Odtp
;	COMDAT ?IsHandled@CvMinorCivQuest@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsHandled@CvMinorCivQuest@@QAE_NXZ PROC		; CvMinorCivQuest::IsHandled, COMDAT
; _this$ = ecx

; 788  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 789  : 	return m_bHandled;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+24]

; 790  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsHandled@CvMinorCivQuest@@QAE_NXZ ENDP		; CvMinorCivQuest::IsHandled
_TEXT	ENDS
PUBLIC	?SetHandled@CvMinorCivQuest@@QAEX_N@Z		; CvMinorCivQuest::SetHandled
; Function compile flags: /Odtp
;	COMDAT ?SetHandled@CvMinorCivQuest@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bValue$ = 8						; size = 1
?SetHandled@CvMinorCivQuest@@QAEX_N@Z PROC		; CvMinorCivQuest::SetHandled, COMDAT
; _this$ = ecx

; 793  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 794  : 	m_bHandled = bValue;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _bValue$[ebp]
	mov	BYTE PTR [eax+24], cl

; 795  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetHandled@CvMinorCivQuest@@QAEX_N@Z ENDP		; CvMinorCivQuest::SetHandled
_TEXT	ENDS
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
PUBLIC	?AddQuestNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH_N@Z ; CvMinorCivAI::AddQuestNotification
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_0DF@HPHHOMOK@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0CN@IBMIDFCJ@TXT_KEY_NOTIFICATION_QUEST_START@ ; `string'
PUBLIC	??_C@_0M@KDICFKJM@No?5Religion?$AA@		; `string'
PUBLIC	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
PUBLIC	??_C@_0DD@DMMJAENL@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0CL@JFCNGIIL@TXT_KEY_NOTIFICATION_QUEST_SPREA@ ; `string'
PUBLIC	??_C@_0DC@KGPCGOOH@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0CK@PODAGNAL@TXT_KEY_NOTIFICATION_QUEST_DENOU@ ; `string'
PUBLIC	??_C@_0DE@ODEBBMLO@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0CM@IIIDKJCG@TXT_KEY_NOTIFICATION_QUEST_BULLY@ ; `string'
PUBLIC	??_C@_0CK@KFPMMEMI@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0CC@HPMCMOPM@TXT_KEY_NOTIFICATION_QUEST_INVES@ ; `string'
PUBLIC	??_C@_0DB@MDKFBKNC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0CJ@GJOKOHOP@TXT_KEY_NOTIFICATION_QUEST_CONTE@ ; `string'
PUBLIC	??_C@_0DB@KLIMGOGI@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0CJ@BMDJDFF@TXT_KEY_NOTIFICATION_QUEST_CONTE@ ; `string'
PUBLIC	??_C@_0DD@MMNHOPKK@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z	; operator<<<int>
PUBLIC	??_C@_0CL@GFDDIDPK@TXT_KEY_NOTIFICATION_QUEST_CONTE@ ; `string'
PUBLIC	??_C@_0DF@MLEJDGL@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0CN@PCALEKKI@TXT_KEY_NOTIFICATION_QUEST_PLEDG@ ; `string'
PUBLIC	??_C@_06LOJBPBBB@Nobody?$AA@			; `string'
PUBLIC	??_C@_0CN@IAOJKNLN@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0CF@JIAFBFAK@TXT_KEY_NOTIFICATION_QUEST_GIVE_@ ; `string'
PUBLIC	?GetMostRecentBullyForQuest@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetMostRecentBullyForQuest
PUBLIC	??_C@_0DH@JFBGAKGN@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0CP@IKMOBKCP@TXT_KEY_NOTIFICATION_QUEST_FIND_@ ; `string'
PUBLIC	??_C@_0CP@MBHJPNJJ@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0CH@KPEHOGLE@TXT_KEY_NOTIFICATION_QUEST_FIND_@ ; `string'
PUBLIC	?GetBestPlayerToFind@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z ; CvMinorCivAI::GetBestPlayerToFind
PUBLIC	??_C@_0DD@OKPFDOEH@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0CL@EDBBFCBH@TXT_KEY_NOTIFICATION_QUEST_KILL_@ ; `string'
PUBLIC	?GetBestCityStateTarget@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z ; CvMinorCivAI::GetBestCityStateTarget
PUBLIC	??_C@_0DA@PEDKNNEN@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0CI@LBILLPCD@TXT_KEY_NOTIFICATION_QUEST_GREAT@ ; `string'
PUBLIC	?GetBestGreatPersonForQuest@CvMinorCivAI@@QAE?AW4UnitTypes@@W4PlayerTypes@@@Z ; CvMinorCivAI::GetBestGreatPersonForQuest
PUBLIC	??_C@_0DE@OCEMCCFF@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0CM@IJIOJHMN@TXT_KEY_NOTIFICATION_QUEST_CONST@ ; `string'
PUBLIC	?GetBestWonderForQuest@CvMinorCivAI@@QAE?AW4BuildingTypes@@W4PlayerTypes@@@Z ; CvMinorCivAI::GetBestWonderForQuest
PUBLIC	??_C@_0DE@DIFGCIIG@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
PUBLIC	??_C@_0CM@FDJEJNBO@TXT_KEY_NOTIFICATION_QUEST_CONNE@ ; `string'
PUBLIC	?GetNearbyResourceForQuest@CvMinorCivAI@@QAE?AW4ResourceTypes@@W4PlayerTypes@@@Z ; CvMinorCivAI::GetNearbyResourceForQuest
PUBLIC	??_C@_0CN@NIAFEJJC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0CF@MAOJPBCF@TXT_KEY_NOTIFICATION_QUEST_KILL_@ ; `string'
PUBLIC	?GetBestNearbyCampToKill@CvMinorCivAI@@QAEPAVCvPlot@@XZ ; CvMinorCivAI::GetBestNearbyCampToKill
PUBLIC	??_C@_0CP@GBAOMNJD@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0CH@PDANGLO@TXT_KEY_NOTIFICATION_QUEST_START@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?DoStartQuest@CvMinorCivQuest@@QAEXH@Z		; CvMinorCivQuest::DoStartQuest
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
EXTRN	__imp_?toUTF8@String@Localization@@QAEPBDXZ:PROC
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	?GetName@CvReligion@@QBE?AVCvString@@XZ:PROC	; CvReligion::GetName
EXTRN	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z:PROC ; CvGameReligions::GetReligion
EXTRN	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z:PROC ; CvGameReligions::GetReligionCreatedByPlayer
EXTRN	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ:PROC ; CvGame::GetGameReligions
EXTRN	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ:PROC ; CvPlayer::getCivilizationShortDescriptionKey
EXTRN	?getNameKey@CvPlayer@@QBEPBDXZ:PROC		; CvPlayer::getNameKey
EXTRN	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z:PROC ; CvGlobals::getUnitInfo
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
EXTRN	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z:PROC ; CvGlobals::getResourceInfo
EXTRN	?setRevealedImprovementType@CvPlot@@QAE_NW4TeamTypes@@W4ImprovementTypes@@@Z:PROC ; CvPlot::setRevealedImprovementType
EXTRN	?setRevealed@CvPlot@@QAE_NW4TeamTypes@@_N10@Z:PROC ; CvPlot::setRevealed
EXTRN	__imp_??1String@Localization@@UAE@XZ:PROC
EXTRN	__imp_??4String@Localization@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_?Lookup@Localization@@YA?AVString@1@PBD@Z:PROC
EXTRN	__imp_??0String@Localization@@QAE@XZ:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@HPHHOMOK@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DF@HPHHOMOK@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_START_TRADE_ROUTE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@IBMIDFCJ@TXT_KEY_NOTIFICATION_QUEST_START@
CONST	SEGMENT
??_C@_0CN@IBMIDFCJ@TXT_KEY_NOTIFICATION_QUEST_START@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_START_TRADE_ROUTE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KDICFKJM@No?5Religion?$AA@
CONST	SEGMENT
??_C@_0M@KDICFKJM@No?5Religion?$AA@ DB 'No Religion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@DMMJAENL@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DD@DMMJAENL@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_SPREAD_RELIGION', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@JFCNGIIL@TXT_KEY_NOTIFICATION_QUEST_SPREA@
CONST	SEGMENT
??_C@_0CL@JFCNGIIL@TXT_KEY_NOTIFICATION_QUEST_SPREA@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_SPREAD_RELIGION', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@KGPCGOOH@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DC@KGPCGOOH@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_DENOUNCE_MAJOR', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@PODAGNAL@TXT_KEY_NOTIFICATION_QUEST_DENOU@
CONST	SEGMENT
??_C@_0CK@PODAGNAL@TXT_KEY_NOTIFICATION_QUEST_DENOU@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_DENOUNCE_MAJOR', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@ODEBBMLO@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DE@ODEBBMLO@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_BULLY_CITY_STATE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@IIIDKJCG@TXT_KEY_NOTIFICATION_QUEST_BULLY@
CONST	SEGMENT
??_C@_0CM@IIIDKJCG@TXT_KEY_NOTIFICATION_QUEST_BULLY@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_BULLY_CITY_STATE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@KFPMMEMI@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0CK@KFPMMEMI@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_INVEST', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@HPMCMOPM@TXT_KEY_NOTIFICATION_QUEST_INVES@
CONST	SEGMENT
??_C@_0CC@HPMCMOPM@TXT_KEY_NOTIFICATION_QUEST_INVES@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_INVEST', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@MDKFBKNC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DB@MDKFBKNC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_CONTEST_TECHS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@GJOKOHOP@TXT_KEY_NOTIFICATION_QUEST_CONTE@
CONST	SEGMENT
??_C@_0CJ@GJOKOHOP@TXT_KEY_NOTIFICATION_QUEST_CONTE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_CONTEST_TECHS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@KLIMGOGI@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DB@KLIMGOGI@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_CONTEST_FAITH', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@BMDJDFF@TXT_KEY_NOTIFICATION_QUEST_CONTE@
CONST	SEGMENT
??_C@_0CJ@BMDJDFF@TXT_KEY_NOTIFICATION_QUEST_CONTE@ DB 'TXT_KEY_NOTIFICAT'
	DB	'ION_QUEST_CONTEST_FAITH', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@MMNHOPKK@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DD@MMNHOPKK@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_CONTEST_CULTURE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@GFDDIDPK@TXT_KEY_NOTIFICATION_QUEST_CONTE@
CONST	SEGMENT
??_C@_0CL@GFDDIDPK@TXT_KEY_NOTIFICATION_QUEST_CONTE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_CONTEST_CULTURE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@MLEJDGL@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DF@MLEJDGL@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICAT'
	DB	'ION_SUMMARY_QUEST_PLEDGE_TO_PROTECT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@PCALEKKI@TXT_KEY_NOTIFICATION_QUEST_PLEDG@
CONST	SEGMENT
??_C@_0CN@PCALEKKI@TXT_KEY_NOTIFICATION_QUEST_PLEDG@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_PLEDGE_TO_PROTECT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LOJBPBBB@Nobody?$AA@
CONST	SEGMENT
??_C@_06LOJBPBBB@Nobody?$AA@ DB 'Nobody', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@IAOJKNLN@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0CN@IAOJKNLN@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_GIVE_GOLD', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@JIAFBFAK@TXT_KEY_NOTIFICATION_QUEST_GIVE_@
CONST	SEGMENT
??_C@_0CF@JIAFBFAK@TXT_KEY_NOTIFICATION_QUEST_GIVE_@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_GIVE_GOLD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@JFBGAKGN@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DH@JFBGAKGN@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_FIND_NATURAL_WONDER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@IKMOBKCP@TXT_KEY_NOTIFICATION_QUEST_FIND_@
CONST	SEGMENT
??_C@_0CP@IKMOBKCP@TXT_KEY_NOTIFICATION_QUEST_FIND_@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_FIND_NATURAL_WONDER', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@MBHJPNJJ@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0CP@MBHJPNJJ@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_FIND_PLAYER', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@KPEHOGLE@TXT_KEY_NOTIFICATION_QUEST_FIND_@
CONST	SEGMENT
??_C@_0CH@KPEHOGLE@TXT_KEY_NOTIFICATION_QUEST_FIND_@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_FIND_PLAYER', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@OKPFDOEH@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DD@OKPFDOEH@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_KILL_CITY_STATE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@EDBBFCBH@TXT_KEY_NOTIFICATION_QUEST_KILL_@
CONST	SEGMENT
??_C@_0CL@EDBBFCBH@TXT_KEY_NOTIFICATION_QUEST_KILL_@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_KILL_CITY_STATE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@PEDKNNEN@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DA@PEDKNNEN@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_GREAT_PERSON', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@LBILLPCD@TXT_KEY_NOTIFICATION_QUEST_GREAT@
CONST	SEGMENT
??_C@_0CI@LBILLPCD@TXT_KEY_NOTIFICATION_QUEST_GREAT@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_GREAT_PERSON', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@OCEMCCFF@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DE@OCEMCCFF@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_CONSTRUCT_WONDER', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@IJIOJHMN@TXT_KEY_NOTIFICATION_QUEST_CONST@
CONST	SEGMENT
??_C@_0CM@IJIOJHMN@TXT_KEY_NOTIFICATION_QUEST_CONST@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_CONSTRUCT_WONDER', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@DIFGCIIG@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DE@DIFGCIIG@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_CONNECT_RESOURCE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@FDJEJNBO@TXT_KEY_NOTIFICATION_QUEST_CONNE@
CONST	SEGMENT
??_C@_0CM@FDJEJNBO@TXT_KEY_NOTIFICATION_QUEST_CONNE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_CONNECT_RESOURCE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@NIAFEJJC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0CN@NIAFEJJC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_KILL_CAMP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@MAOJPBCF@TXT_KEY_NOTIFICATION_QUEST_KILL_@
CONST	SEGMENT
??_C@_0CF@MAOJPBCF@TXT_KEY_NOTIFICATION_QUEST_KILL_@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_KILL_CAMP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@GBAOMNJD@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0CP@GBAOMNJD@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_START_ROUTE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@PDANGLO@TXT_KEY_NOTIFICATION_QUEST_START@
CONST	SEGMENT
??_C@_0CH@PDANGLO@TXT_KEY_NOTIFICATION_QUEST_START@ DB 'TXT_KEY_NOTIFICAT'
	DB	'ION_QUEST_START_ROUTE', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z DD 019930522H
	DD	029H
	DD	FLAT:__unwindtable$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$7
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$8
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$9
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$10
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$11
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$12
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$13
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$14
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$15
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$16
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$17
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$18
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$19
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$20
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$21
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$22
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$23
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$24
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$25
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$26
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$27
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$28
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$29
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$30
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$31
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$32
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$33
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$34
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$35
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$36
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$37
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$38
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$39
	DD	027H
	DD	FLAT:__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$40
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoStartQuest@CvMinorCivQuest@@QAEXH@Z
_TEXT	SEGMENT
tv976 = -3688						; size = 4
tv1081 = -3684						; size = 4
tv973 = -3680						; size = 4
tv1068 = -3676						; size = 4
tv967 = -3672						; size = 4
tv1117 = -3668						; size = 4
tv965 = -3664						; size = 4
tv819 = -3660						; size = 4
tv962 = -3656						; size = 4
tv1116 = -3652						; size = 4
tv960 = -3648						; size = 4
tv1115 = -3644						; size = 4
tv958 = -3640						; size = 4
tv1114 = -3636						; size = 4
tv956 = -3632						; size = 4
tv1113 = -3628						; size = 4
tv954 = -3624						; size = 4
tv1112 = -3620						; size = 4
tv952 = -3616						; size = 4
tv1111 = -3612						; size = 4
tv950 = -3608						; size = 4
tv1110 = -3604						; size = 4
tv948 = -3600						; size = 4
tv1109 = -3596						; size = 4
tv946 = -3592						; size = 4
tv1108 = -3588						; size = 4
tv944 = -3584						; size = 4
tv1107 = -3580						; size = 4
tv942 = -3576						; size = 4
tv1106 = -3572						; size = 4
tv940 = -3568						; size = 4
tv1105 = -3564						; size = 4
tv938 = -3560						; size = 4
tv1104 = -3556						; size = 4
tv936 = -3552						; size = 4
tv1103 = -3548						; size = 4
tv934 = -3544						; size = 4
tv1102 = -3540						; size = 4
tv932 = -3536						; size = 4
tv1101 = -3532						; size = 4
tv930 = -3528						; size = 4
tv1100 = -3524						; size = 4
tv928 = -3520						; size = 4
tv1099 = -3516						; size = 4
tv926 = -3512						; size = 4
tv1098 = -3508						; size = 4
tv924 = -3504						; size = 4
tv1097 = -3500						; size = 4
tv922 = -3496						; size = 4
tv1096 = -3492						; size = 4
tv920 = -3488						; size = 4
tv1095 = -3484						; size = 4
tv918 = -3480						; size = 4
tv1094 = -3476						; size = 4
tv916 = -3472						; size = 4
tv1093 = -3468						; size = 4
tv914 = -3464						; size = 4
tv1092 = -3460						; size = 4
tv912 = -3456						; size = 4
tv1091 = -3452						; size = 4
tv910 = -3448						; size = 4
tv1090 = -3444						; size = 4
tv908 = -3440						; size = 4
tv1089 = -3436						; size = 4
tv906 = -3432						; size = 4
tv883 = -3428						; size = 4
tv904 = -3424						; size = 4
tv887 = -3420						; size = 4
tv902 = -3416						; size = 4
tv1066 = -3412						; size = 4
tv900 = -3408						; size = 4
tv1079 = -3404						; size = 4
tv898 = -3400						; size = 4
tv79 = -3396						; size = 4
tv896 = -3392						; size = 4
tv82 = -3388						; size = 4
_this$ = -3384						; size = 4
$T235870 = -3380					; size = 4
$T235869 = -3376					; size = 4
$T235860 = -3372					; size = 4
$T235859 = -3368					; size = 4
$T235846 = -3364					; size = 4
$T235842 = -3360					; size = 4
$T235838 = -3356					; size = 4
$T235834 = -3352					; size = 4
$T235830 = -3348					; size = 4
$T235826 = -3344					; size = 4
$T235822 = -3340					; size = 4
$T235818 = -3336					; size = 4
$T235814 = -3332					; size = 4
$T235805 = -3328					; size = 4
$T235801 = -3324					; size = 4
$T235797 = -3320					; size = 4
$T235793 = -3316					; size = 4
$T235789 = -3312					; size = 4
$T235785 = -3308					; size = 4
$T235776 = -3304					; size = 4
$T235772 = -3300					; size = 4
$T235768 = -3296					; size = 4
$T235764 = -3292					; size = 4
$T235760 = -3288					; size = 4
$T235750 = -3284					; size = 4
$T235680 = -3280					; size = 4
$T235679 = -3276					; size = 4
$T235678 = -3272					; size = 4
$T235677 = -3268					; size = 4
$T235676 = -3264					; size = 80
$T235675 = -3184					; size = 80
$T235674 = -3104					; size = 80
$T235673 = -3024					; size = 80
$T235672 = -2944					; size = 80
$T235671 = -2864					; size = 80
$T235670 = -2784					; size = 80
$T235669 = -2704					; size = 80
$T235668 = -2624					; size = 80
$T235667 = -2544					; size = 80
$T235666 = -2464					; size = 80
$T235665 = -2384					; size = 80
$T235664 = -2304					; size = 80
$T235663 = -2224					; size = 80
$T235662 = -2144					; size = 80
$T235661 = -2064					; size = 80
$T235660 = -1984					; size = 80
$T235659 = -1904					; size = 80
$T235658 = -1824					; size = 80
$T235657 = -1744					; size = 80
$T235656 = -1664					; size = 80
$T235655 = -1584					; size = 80
$T235654 = -1504					; size = 80
$T235653 = -1424					; size = 80
$T235652 = -1344					; size = 80
$T235651 = -1264					; size = 80
$T235650 = -1184					; size = 80
$T235649 = -1104					; size = 80
$T235648 = -1024					; size = 80
$T235647 = -944						; size = 80
$T235646 = -864						; size = 80
$T235645 = -784						; size = 80
$T235644 = -704						; size = 80
$T235643 = -624						; size = 80
$T235642 = -544						; size = 80
$T235641 = -464						; size = 80
_strReligion$221429 = -384				; size = 4
_strReligion$221426 = -380				; size = 28
__$ArrayPad$ = -352					; size = 4
_pkReligion$221425 = -348				; size = 4
_eReligion$221419 = -344				; size = 4
_strCivKey$221416 = -340				; size = 4
_strCivKey$221414 = -336				; size = 4
_eMostRecentBully$221408 = -332				; size = 4
_strCivKey$221405 = -328				; size = 4
_strCivKey$221403 = -324				; size = 4
_eTargetMinor$221396 = -320				; size = 4
_iLastBullyTurn$221397 = -316				; size = 4
_iTurnsRemaining$221388 = -312				; size = 4
_iBoostPercentage$221389 = -308				; size = 4
_iGoldAlreadyGiven$221387 = -304			; size = 4
_iTurnsDuration$221380 = -300				; size = 4
_iTurnsRemaining$221379 = -296				; size = 4
_iStartingTechs$221378 = -292				; size = 4
_iTurnsDuration$221371 = -288				; size = 4
_iTurnsRemaining$221370 = -284				; size = 4
_iStartingFaith$221369 = -280				; size = 4
_iTurnsDuration$221362 = -276				; size = 4
_iTurnsRemaining$221361 = -272				; size = 4
_iStartingCulture$221360 = -268				; size = 4
_strCivKey$221357 = -264				; size = 4
_strCivKey$221355 = -260				; size = 4
_eMostRecentBully$221349 = -256				; size = 4
_strCivKey$221345 = -252				; size = 4
_strCivKey$221343 = -248				; size = 4
_eMostRecentBully$221336 = -244				; size = 4
_iGoldAlreadyGiven$221337 = -240			; size = 4
_iNumWondersAlreadyFound$221329 = -236			; size = 4
_strCivKey$221322 = -232				; size = 4
_ePlayerToFind$221321 = -228				; size = 4
_eTargetCityState$221313 = -224				; size = 4
_strTargetNameKey$221314 = -220				; size = 4
_eUnit$221305 = -216					; size = 4
_strUnitName$221306 = -212				; size = 4
_eWonder$221297 = -208					; size = 4
_strBuildingName$221298 = -204				; size = 4
_eResource$221284 = -200				; size = 4
_strResourceName$221285 = -196				; size = 4
_pPlot$221277 = -192					; size = 4
_pAssignedPlayer$ = -188				; size = 4
_iNotificationX$ = -184					; size = 4
_strMessage$ = -180					; size = 80
_strSummary$ = -100					; size = 80
_iNotificationY$ = -20					; size = 4
_pMinor$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_iStartTurn$ = 8					; size = 4
?DoStartQuest@CvMinorCivQuest@@QAEXH@Z PROC		; CvMinorCivQuest::DoStartQuest, COMDAT
; _this$ = ecx

; 801  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 3676				; 00000e5cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 802  : 	m_iStartTurn = iStartTurn;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _iStartTurn$[ebp]
	mov	DWORD PTR [eax+12], ecx

; 803  : 
; 804  : 	CvPlayer* pMinor = &GET_PLAYER(m_eMinor);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pMinor$[ebp], eax

; 805  : 	CvPlayer* pAssignedPlayer = &GET_PLAYER(m_eAssignedPlayer);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pAssignedPlayer$[ebp], edx

; 806  : 
; 807  : 	Localization::String strMessage;

	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 808  : 	Localization::String strSummary;

	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 809  : 	int iNotificationX = -1;

	mov	DWORD PTR _iNotificationX$[ebp], -1

; 810  : 	int iNotificationY = -1;

	mov	DWORD PTR _iNotificationY$[ebp], -1

; 811  : 
; 812  : 	// Build a Route
; 813  : 	if(m_eType == MINOR_CIV_QUEST_ROUTE)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	$LN45@DoStartQue

; 814  : 	{
; 815  : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_START_ROUTE");

	push	OFFSET ??_C@_0CH@PDANGLO@TXT_KEY_NOTIFICATION_QUEST_START@
	lea	ecx, DWORD PTR $T235641[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv82[ebp], eax
	mov	edx, DWORD PTR tv82[ebp]
	mov	DWORD PTR tv896[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR tv896[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235641[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 816  : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_START_ROUTE");

	push	OFFSET ??_C@_0CP@GBAOMNJD@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	ecx, DWORD PTR $T235642[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv79[ebp], eax
	mov	edx, DWORD PTR tv79[ebp]
	mov	DWORD PTR tv898[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv898[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235642[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN44@DoStartQue
$LN45@DoStartQue:

; 817  : 	}
; 818  : 	// Kill a Camp
; 819  : 	else if(m_eType == MINOR_CIV_QUEST_KILL_CAMP)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 1
	jne	$LN43@DoStartQue

; 820  : 	{
; 821  : 		CvPlot* pPlot = pMinor->GetMinorCivAI()->GetBestNearbyCampToKill();

	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetBestNearbyCampToKill@CvMinorCivAI@@QAEPAVCvPlot@@XZ ; CvMinorCivAI::GetBestNearbyCampToKill
	mov	DWORD PTR _pPlot$221277[ebp], eax

; 822  : 
; 823  : 		FAssertMsg(pPlot != NULL, "MINOR CIV AI: Somehow we're starting a quest to kill a barb camp but we can't find one nearby. Please send Jon this with your last 5 autosaves and what changelist # you're playing. Oh, and you're about to crash.");
; 824  : 
; 825  : 		m_iData1 = pPlot->getX();

	mov	edx, DWORD PTR _pPlot$221277[ebp]
	movsx	eax, WORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax

; 826  : 		m_iData2 = pPlot->getY();

	mov	edx, DWORD PTR _pPlot$221277[ebp]
	movsx	eax, WORD PTR [edx+2]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax

; 827  : 
; 828  : 		pPlot->setRevealed(pAssignedPlayer->getTeam(), true);

	push	-1
	push	0
	push	1
	mov	edx, DWORD PTR _pAssignedPlayer$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _pPlot$221277[ebp]
	call	?setRevealed@CvPlot@@QAE_NW4TeamTypes@@_N10@Z ; CvPlot::setRevealed

; 829  : 		pPlot->setRevealedImprovementType(pAssignedPlayer->getTeam(), pPlot->getImprovementType());

	mov	ecx, DWORD PTR _pAssignedPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T235750[ebp], eax
	mov	ecx, DWORD PTR _pPlot$221277[ebp]
	call	?getImprovementType@CvPlot@@QBE?AW4ImprovementTypes@@XZ ; CvPlot::getImprovementType
	push	eax
	mov	eax, DWORD PTR $T235750[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlot$221277[ebp]
	call	?setRevealedImprovementType@CvPlot@@QAE_NW4TeamTypes@@W4ImprovementTypes@@@Z ; CvPlot::setRevealedImprovementType

; 830  : 
; 831  : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_KILL_CAMP");

	push	OFFSET ??_C@_0CF@MAOJPBCF@TXT_KEY_NOTIFICATION_QUEST_KILL_@
	lea	ecx, DWORD PTR $T235643[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1079[ebp], eax
	mov	edx, DWORD PTR tv1079[ebp]
	mov	DWORD PTR tv900[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR tv900[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235643[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 832  : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_KILL_CAMP");

	push	OFFSET ??_C@_0CN@NIAFEJJC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	ecx, DWORD PTR $T235644[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1066[ebp], eax
	mov	edx, DWORD PTR tv1066[ebp]
	mov	DWORD PTR tv902[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR tv902[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235644[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 833  : 		iNotificationX = pPlot->getX();

	mov	ecx, DWORD PTR _pPlot$221277[ebp]
	movsx	edx, WORD PTR [ecx]
	mov	DWORD PTR _iNotificationX$[ebp], edx

; 834  : 		iNotificationY = pPlot->getY();

	mov	eax, DWORD PTR _pPlot$221277[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _iNotificationY$[ebp], ecx
	jmp	$LN44@DoStartQue
$LN43@DoStartQue:

; 835  : 	}
; 836  : 	// Connect a Resource
; 837  : 	else if(m_eType == MINOR_CIV_QUEST_CONNECT_RESOURCE)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 2
	jne	$LN41@DoStartQue

; 838  : 	{
; 839  : 		ResourceTypes eResource = pMinor->GetMinorCivAI()->GetNearbyResourceForQuest(m_eAssignedPlayer);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetNearbyResourceForQuest@CvMinorCivAI@@QAE?AW4ResourceTypes@@W4PlayerTypes@@@Z ; CvMinorCivAI::GetNearbyResourceForQuest
	mov	DWORD PTR _eResource$221284[ebp], eax

; 840  : 
; 841  : 		FAssertMsg(eResource != NO_RESOURCE, "MINOR CIV AI: For some reason we got NO_RESOURCE when starting a quest for a major to find a Resource. Please send Jon this with your last 5 autosaves and what changelist # you're playing. Bad things are probably going to happen.");
; 842  : 
; 843  : 		m_iData1 = eResource;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _eResource$221284[ebp]
	mov	DWORD PTR [edx+16], eax

; 844  : 
; 845  : 		const char* strResourceName = GC.getResourceInfo(eResource)->GetDescriptionKey();

	mov	ecx, DWORD PTR _eResource$221284[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	DWORD PTR $T235760[ebp], eax
	mov	ecx, DWORD PTR $T235760[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR _strResourceName$221285[ebp], eax

; 846  : 
; 847  : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_CONNECT_RESOURCE");

	push	OFFSET ??_C@_0CM@FDJEJNBO@TXT_KEY_NOTIFICATION_QUEST_CONNE@
	lea	edx, DWORD PTR $T235645[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv887[ebp], eax
	mov	eax, DWORD PTR tv887[ebp]
	mov	DWORD PTR tv904[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR tv904[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235645[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 848  : 		strMessage << strResourceName;

	lea	edx, DWORD PTR _strResourceName$221285[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 849  : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_CONNECT_RESOURCE");

	push	OFFSET ??_C@_0DE@DIFGCIIG@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	ecx, DWORD PTR $T235646[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv883[ebp], eax
	mov	edx, DWORD PTR tv883[ebp]
	mov	DWORD PTR tv906[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR tv906[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235646[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 850  : 		strSummary << strResourceName;

	lea	ecx, DWORD PTR _strResourceName$221285[ebp]
	push	ecx
	lea	edx, DWORD PTR _strSummary$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	jmp	$LN44@DoStartQue
$LN41@DoStartQue:

; 851  : 	}
; 852  : 	// Construct a Wonder
; 853  : 	else if(m_eType == MINOR_CIV_QUEST_CONSTRUCT_WONDER)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 3
	jne	$LN39@DoStartQue

; 854  : 	{
; 855  : 		BuildingTypes eWonder = pMinor->GetMinorCivAI()->GetBestWonderForQuest(m_eAssignedPlayer);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetBestWonderForQuest@CvMinorCivAI@@QAE?AW4BuildingTypes@@W4PlayerTypes@@@Z ; CvMinorCivAI::GetBestWonderForQuest
	mov	DWORD PTR _eWonder$221297[ebp], eax

; 856  : 
; 857  : 		FAssertMsg(eWonder != NO_BUILDING, "MINOR CIV AI: For some reason we got NO_BUILDING when starting a quest for a major to find a Wonder. Please send Jon this with your last 5 autosaves and what changelist # you're playing. Bad things are probably going to happen.");
; 858  : 
; 859  : 		m_iData1 = eWonder;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _eWonder$221297[ebp]
	mov	DWORD PTR [eax+16], ecx

; 860  : 
; 861  : #ifdef AUI_WARNING_FIXES
; 862  : 		const char* strBuildingName;
; 863  : 		CvBuildingEntry* pWonderInfo = GC.getBuildingInfo(eWonder);
; 864  : 		if (pWonderInfo)
; 865  : 			strBuildingName = pWonderInfo->GetDescriptionKey();
; 866  : #else
; 867  : 		const char* strBuildingName = GC.getBuildingInfo(eWonder)->GetDescriptionKey();

	mov	edx, DWORD PTR _eWonder$221297[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR $T235764[ebp], eax
	mov	ecx, DWORD PTR $T235764[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR _strBuildingName$221298[ebp], eax

; 868  : #endif
; 869  : 
; 870  : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_CONSTRUCT_WONDER");

	push	OFFSET ??_C@_0CM@IJIOJHMN@TXT_KEY_NOTIFICATION_QUEST_CONST@
	lea	eax, DWORD PTR $T235647[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1089[ebp], eax
	mov	ecx, DWORD PTR tv1089[ebp]
	mov	DWORD PTR tv908[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	edx, DWORD PTR tv908[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235647[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 871  : 		strMessage << strBuildingName;

	lea	eax, DWORD PTR _strBuildingName$221298[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 872  : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_CONSTRUCT_WONDER");

	push	OFFSET ??_C@_0DE@OCEMCCFF@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	edx, DWORD PTR $T235648[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1090[ebp], eax
	mov	eax, DWORD PTR tv1090[ebp]
	mov	DWORD PTR tv910[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	ecx, DWORD PTR tv910[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235648[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 873  : 		strSummary << strBuildingName;

	lea	edx, DWORD PTR _strBuildingName$221298[ebp]
	push	edx
	lea	eax, DWORD PTR _strSummary$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	jmp	$LN44@DoStartQue
$LN39@DoStartQue:

; 874  : 	}
; 875  : 	// Great Person
; 876  : 	else if(m_eType == MINOR_CIV_QUEST_GREAT_PERSON)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 4
	jne	$LN37@DoStartQue

; 877  : 	{
; 878  : 		UnitTypes eUnit = pMinor->GetMinorCivAI()->GetBestGreatPersonForQuest(m_eAssignedPlayer);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetBestGreatPersonForQuest@CvMinorCivAI@@QAE?AW4UnitTypes@@W4PlayerTypes@@@Z ; CvMinorCivAI::GetBestGreatPersonForQuest
	mov	DWORD PTR _eUnit$221305[ebp], eax

; 879  : 
; 880  : 		FAssertMsg(eUnit != NO_UNIT, "MINOR CIV AI: For some reason we got NO_UNIT when starting a quest for a major to find a Great Person. Please send Jon this with your last 5 autosaves and what changelist # you're playing. Bad things are probably going to happen.");
; 881  : 
; 882  : 		m_iData1 = eUnit;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _eUnit$221305[ebp]
	mov	DWORD PTR [ecx+16], edx

; 883  : 
; 884  : #ifdef AUI_WARNING_FIXES
; 885  : 		const char* strUnitName;
; 886  : 		CvUnitEntry* pUnitInfo = GC.getUnitInfo(eUnit);
; 887  : 		if (pUnitInfo)
; 888  : 			strUnitName = pUnitInfo->GetDescriptionKey();
; 889  : #else
; 890  : 		const char* strUnitName = GC.getUnitInfo(eUnit)->GetDescriptionKey();

	mov	eax, DWORD PTR _eUnit$221305[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	DWORD PTR $T235768[ebp], eax
	mov	ecx, DWORD PTR $T235768[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR _strUnitName$221306[ebp], eax

; 891  : #endif
; 892  : 
; 893  : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_GREAT_PERSON");

	push	OFFSET ??_C@_0CI@LBILLPCD@TXT_KEY_NOTIFICATION_QUEST_GREAT@
	lea	ecx, DWORD PTR $T235649[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1091[ebp], eax
	mov	edx, DWORD PTR tv1091[ebp]
	mov	DWORD PTR tv912[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	eax, DWORD PTR tv912[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235649[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 894  : 		strMessage << strUnitName;

	lea	ecx, DWORD PTR _strUnitName$221306[ebp]
	push	ecx
	lea	edx, DWORD PTR _strMessage$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 895  : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_GREAT_PERSON");

	push	OFFSET ??_C@_0DA@PEDKNNEN@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	eax, DWORD PTR $T235650[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1092[ebp], eax
	mov	ecx, DWORD PTR tv1092[ebp]
	mov	DWORD PTR tv914[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	edx, DWORD PTR tv914[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235650[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 896  : 		strSummary << strUnitName;

	lea	eax, DWORD PTR _strUnitName$221306[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	jmp	$LN44@DoStartQue
$LN37@DoStartQue:

; 897  : 	}
; 898  : 	// Kill another City State
; 899  : 	else if(m_eType == MINOR_CIV_QUEST_KILL_CITY_STATE)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 5
	jne	$LN35@DoStartQue

; 900  : 	{
; 901  : 		PlayerTypes eTargetCityState = pMinor->GetMinorCivAI()->GetBestCityStateTarget(m_eAssignedPlayer);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetBestCityStateTarget@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z ; CvMinorCivAI::GetBestCityStateTarget
	mov	DWORD PTR _eTargetCityState$221313[ebp], eax

; 902  : 
; 903  : 		FAssertMsg(eTargetCityState != NO_PLAYER, "MINOR CIV AI: For some reason we got NO_PLAYER when starting a quest for a major to kill a City State. Please send Jon this with your last 5 autosaves and what changelist # you're playing. Bad things are probably going to happen.");
; 904  : 
; 905  : 		m_iData1 = eTargetCityState;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _eTargetCityState$221313[ebp]
	mov	DWORD PTR [edx+16], eax

; 906  : 
; 907  : 		const char* strTargetNameKey = GET_PLAYER(eTargetCityState).getNameKey();

	mov	ecx, DWORD PTR _eTargetCityState$221313[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T235772[ebp], ecx
	mov	ecx, DWORD PTR $T235772[ebp]
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR _strTargetNameKey$221314[ebp], eax

; 908  : 
; 909  : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_KILL_CITY_STATE");

	push	OFFSET ??_C@_0CL@EDBBFCBH@TXT_KEY_NOTIFICATION_QUEST_KILL_@
	lea	edx, DWORD PTR $T235651[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1093[ebp], eax
	mov	eax, DWORD PTR tv1093[ebp]
	mov	DWORD PTR tv916[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	ecx, DWORD PTR tv916[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235651[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 910  : 		strMessage << strTargetNameKey;

	lea	edx, DWORD PTR _strTargetNameKey$221314[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 911  : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_KILL_CITY_STATE");

	push	OFFSET ??_C@_0DD@OKPFDOEH@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	ecx, DWORD PTR $T235652[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1094[ebp], eax
	mov	edx, DWORD PTR tv1094[ebp]
	mov	DWORD PTR tv918[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	eax, DWORD PTR tv918[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235652[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 912  : 		strSummary << strTargetNameKey;

	lea	ecx, DWORD PTR _strTargetNameKey$221314[ebp]
	push	ecx
	lea	edx, DWORD PTR _strSummary$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	jmp	$LN44@DoStartQue
$LN35@DoStartQue:

; 913  : 	}
; 914  : 	// Find another player's territory
; 915  : 	else if(m_eType == MINOR_CIV_QUEST_FIND_PLAYER)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 6
	jne	$LN33@DoStartQue

; 916  : 	{
; 917  : 		PlayerTypes ePlayerToFind = pMinor->GetMinorCivAI()->GetBestPlayerToFind(m_eAssignedPlayer);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetBestPlayerToFind@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z ; CvMinorCivAI::GetBestPlayerToFind
	mov	DWORD PTR _ePlayerToFind$221321[ebp], eax

; 918  : 
; 919  : 		FAssertMsg(ePlayerToFind != NO_PLAYER, "MINOR CIV AI: For some reason we got NO_PLAYER when starting a quest for a major to find a player. Please send Jon this with your last 5 autosaves and what changelist # you're playing. Bad things are probably going to happen.");
; 920  : 
; 921  : 		m_iData1 = ePlayerToFind;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ePlayerToFind$221321[ebp]
	mov	DWORD PTR [eax+16], ecx

; 922  : 
; 923  : 		const char* strCivKey = GET_PLAYER(ePlayerToFind).getCivilizationShortDescriptionKey();

	mov	edx, DWORD PTR _ePlayerToFind$221321[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T235776[ebp], edx
	mov	ecx, DWORD PTR $T235776[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR _strCivKey$221322[ebp], eax

; 924  : 
; 925  : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_FIND_PLAYER");

	push	OFFSET ??_C@_0CH@KPEHOGLE@TXT_KEY_NOTIFICATION_QUEST_FIND_@
	lea	eax, DWORD PTR $T235653[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1095[ebp], eax
	mov	ecx, DWORD PTR tv1095[ebp]
	mov	DWORD PTR tv920[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	edx, DWORD PTR tv920[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235653[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 926  : 		strMessage << strCivKey;

	lea	eax, DWORD PTR _strCivKey$221322[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 927  : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_FIND_PLAYER");

	push	OFFSET ??_C@_0CP@MBHJPNJJ@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	edx, DWORD PTR $T235654[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1096[ebp], eax
	mov	eax, DWORD PTR tv1096[ebp]
	mov	DWORD PTR tv922[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	ecx, DWORD PTR tv922[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235654[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 928  : 		strSummary << strCivKey;

	lea	edx, DWORD PTR _strCivKey$221322[ebp]
	push	edx
	lea	eax, DWORD PTR _strSummary$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	jmp	$LN44@DoStartQue
$LN33@DoStartQue:

; 929  : 	}
; 930  : 	// Find a Natural Wonder
; 931  : 	else if(m_eType == MINOR_CIV_QUEST_FIND_NATURAL_WONDER)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 7
	jne	$LN31@DoStartQue

; 932  : 	{
; 933  : 		int iNumWondersAlreadyFound = GET_TEAM(pAssignedPlayer->getTeam()).GetNumNaturalWondersDiscovered();

	mov	edx, DWORD PTR _pAssignedPlayer$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T235785[ebp], eax
	mov	ecx, DWORD PTR $T235785[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T235789[ebp], ecx
	mov	ecx, DWORD PTR $T235789[ebp]
	call	?GetNumNaturalWondersDiscovered@CvTeam@@QBEHXZ ; CvTeam::GetNumNaturalWondersDiscovered
	mov	DWORD PTR _iNumWondersAlreadyFound$221329[ebp], eax

; 934  : 
; 935  : 		m_iData1 = iNumWondersAlreadyFound;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _iNumWondersAlreadyFound$221329[ebp]
	mov	DWORD PTR [edx+16], eax

; 936  : 
; 937  : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_FIND_NATURAL_WONDER");

	push	OFFSET ??_C@_0CP@IKMOBKCP@TXT_KEY_NOTIFICATION_QUEST_FIND_@
	lea	ecx, DWORD PTR $T235655[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1097[ebp], eax
	mov	edx, DWORD PTR tv1097[ebp]
	mov	DWORD PTR tv924[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	eax, DWORD PTR tv924[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235655[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 938  : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_FIND_NATURAL_WONDER");

	push	OFFSET ??_C@_0DH@JFBGAKGN@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	ecx, DWORD PTR $T235656[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1098[ebp], eax
	mov	edx, DWORD PTR tv1098[ebp]
	mov	DWORD PTR tv926[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	eax, DWORD PTR tv926[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235656[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN44@DoStartQue
$LN31@DoStartQue:

; 939  : 	}
; 940  : 	// Give a gift of gold
; 941  : 	else if(m_eType == MINOR_CIV_QUEST_GIVE_GOLD)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 8
	jne	$LN29@DoStartQue

; 942  : 	{
; 943  : 		PlayerTypes eMostRecentBully = pMinor->GetMinorCivAI()->GetMostRecentBullyForQuest();

	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetMostRecentBullyForQuest@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetMostRecentBullyForQuest
	mov	DWORD PTR _eMostRecentBully$221336[ebp], eax

; 944  : 		int iGoldAlreadyGiven = pMinor->GetMinorCivAI()->GetNumGoldGifted(m_eAssignedPlayer);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetNumGoldGifted@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetNumGoldGifted
	mov	DWORD PTR _iGoldAlreadyGiven$221337[ebp], eax

; 945  : 
; 946  : 		CvAssertMsg(eMostRecentBully != NO_PLAYER, "MINOR CIV AI: eMostRecentBully should not be NO_PLAYER when giving a Give Gold quest! Please send Anton your save file and version.");
; 947  : 
; 948  : 		m_iData1 = eMostRecentBully;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _eMostRecentBully$221336[ebp]
	mov	DWORD PTR [ecx+16], edx

; 949  : 		m_iData2 = iGoldAlreadyGiven;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _iGoldAlreadyGiven$221337[ebp]
	mov	DWORD PTR [eax+20], ecx

; 950  : 
; 951  : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_GIVE_GOLD");

	push	OFFSET ??_C@_0CF@JIAFBFAK@TXT_KEY_NOTIFICATION_QUEST_GIVE_@
	lea	edx, DWORD PTR $T235657[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1099[ebp], eax
	mov	eax, DWORD PTR tv1099[ebp]
	mov	DWORD PTR tv928[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	mov	ecx, DWORD PTR tv928[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235657[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 952  : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_GIVE_GOLD");

	push	OFFSET ??_C@_0CN@IAOJKNLN@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	edx, DWORD PTR $T235658[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1100[ebp], eax
	mov	eax, DWORD PTR tv1100[ebp]
	mov	DWORD PTR tv930[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	mov	ecx, DWORD PTR tv930[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235658[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 953  : 
; 954  : 		if(eMostRecentBully != NO_PLAYER)

	cmp	DWORD PTR _eMostRecentBully$221336[ebp], -1
	je	SHORT $LN28@DoStartQue

; 955  : 		{
; 956  : 			const char* strCivKey = GET_PLAYER(eMostRecentBully).getCivilizationShortDescriptionKey();

	mov	edx, DWORD PTR _eMostRecentBully$221336[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T235793[ebp], edx
	mov	ecx, DWORD PTR $T235793[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR _strCivKey$221343[ebp], eax

; 957  : 			strMessage << strCivKey;

	lea	eax, DWORD PTR _strCivKey$221343[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 958  : 		}
; 959  : 		else

	jmp	SHORT $LN27@DoStartQue
$LN28@DoStartQue:

; 960  : 		{
; 961  : 			const char* strCivKey = "Nobody";

	mov	DWORD PTR _strCivKey$221345[ebp], OFFSET ??_C@_06LOJBPBBB@Nobody?$AA@

; 962  : 			strMessage << strCivKey;

	lea	edx, DWORD PTR _strCivKey$221345[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
$LN27@DoStartQue:

; 963  : 		}

	jmp	$LN44@DoStartQue
$LN29@DoStartQue:

; 964  : 	}
; 965  : 	// Pledge to protect them
; 966  : 	else if(m_eType == MINOR_CIV_QUEST_PLEDGE_TO_PROTECT)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 9
	jne	$LN25@DoStartQue

; 967  : 	{
; 968  : 		PlayerTypes eMostRecentBully = pMinor->GetMinorCivAI()->GetMostRecentBullyForQuest();

	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetMostRecentBullyForQuest@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetMostRecentBullyForQuest
	mov	DWORD PTR _eMostRecentBully$221349[ebp], eax

; 969  : 
; 970  : 		CvAssertMsg(eMostRecentBully != NO_PLAYER, "MINOR CIV AI: eMostRecentBully should not be NO_PLAYER when giving a Pledge to Protect quest! Please send Anton your save file and version.");
; 971  : 
; 972  : 		m_iData1 = eMostRecentBully;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _eMostRecentBully$221349[ebp]
	mov	DWORD PTR [edx+16], eax

; 973  : 
; 974  : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_PLEDGE_TO_PROTECT");

	push	OFFSET ??_C@_0CN@PCALEKKI@TXT_KEY_NOTIFICATION_QUEST_PLEDG@
	lea	ecx, DWORD PTR $T235659[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1101[ebp], eax
	mov	edx, DWORD PTR tv1101[ebp]
	mov	DWORD PTR tv932[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	mov	eax, DWORD PTR tv932[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235659[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 975  : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_PLEDGE_TO_PROTECT");

	push	OFFSET ??_C@_0DF@MLEJDGL@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	ecx, DWORD PTR $T235660[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1102[ebp], eax
	mov	edx, DWORD PTR tv1102[ebp]
	mov	DWORD PTR tv934[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	mov	eax, DWORD PTR tv934[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235660[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 976  : 
; 977  : 		if(eMostRecentBully != NO_PLAYER)

	cmp	DWORD PTR _eMostRecentBully$221349[ebp], -1
	je	SHORT $LN24@DoStartQue

; 978  : 		{
; 979  : 			const char* strCivKey = GET_PLAYER(eMostRecentBully).getCivilizationShortDescriptionKey();

	mov	ecx, DWORD PTR _eMostRecentBully$221349[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T235797[ebp], ecx
	mov	ecx, DWORD PTR $T235797[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR _strCivKey$221355[ebp], eax

; 980  : 			strMessage << strCivKey;

	lea	edx, DWORD PTR _strCivKey$221355[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 981  : 		}
; 982  : 		else

	jmp	SHORT $LN23@DoStartQue
$LN24@DoStartQue:

; 983  : 		{
; 984  : 			const char* strCivKey = "Nobody";

	mov	DWORD PTR _strCivKey$221357[ebp], OFFSET ??_C@_06LOJBPBBB@Nobody?$AA@

; 985  : 			strMessage << strCivKey;

	lea	ecx, DWORD PTR _strCivKey$221357[ebp]
	push	ecx
	lea	edx, DWORD PTR _strMessage$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
$LN23@DoStartQue:

; 986  : 		}

	jmp	$LN44@DoStartQue
$LN25@DoStartQue:

; 987  : 	}
; 988  : 	// Culture contest
; 989  : 	else if(m_eType == MINOR_CIV_QUEST_CONTEST_CULTURE)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 10			; 0000000aH
	jne	$LN21@DoStartQue

; 990  : 	{
; 991  : 		int iStartingCulture = pAssignedPlayer->GetJONSCultureEverGenerated();

	mov	ecx, DWORD PTR _pAssignedPlayer$[ebp]
	call	?GetJONSCultureEverGenerated@CvPlayer@@QBEHXZ ; CvPlayer::GetJONSCultureEverGenerated
	mov	DWORD PTR _iStartingCulture$221360[ebp], eax

; 992  : 
; 993  : 		m_iData1 = iStartingCulture;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _iStartingCulture$221360[ebp]
	mov	DWORD PTR [ecx+16], edx

; 994  : 
; 995  : 		int iTurnsRemaining = GetEndTurn() - GC.getGame().getGameTurn();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235801[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEndTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetEndTurn
	mov	esi, eax
	mov	ecx, DWORD PTR $T235801[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	sub	esi, eax
	mov	DWORD PTR _iTurnsRemaining$221361[ebp], esi

; 996  : 		int iTurnsDuration = GetEndTurn() - GetStartTurn();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEndTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetEndTurn
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetStartTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetStartTurn
	sub	esi, eax
	mov	DWORD PTR _iTurnsDuration$221362[ebp], esi

; 997  : 
; 998  : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_CONTEST_CULTURE");

	push	OFFSET ??_C@_0CL@GFDDIDPK@TXT_KEY_NOTIFICATION_QUEST_CONTE@
	lea	ecx, DWORD PTR $T235661[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1103[ebp], eax
	mov	edx, DWORD PTR tv1103[ebp]
	mov	DWORD PTR tv936[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	mov	eax, DWORD PTR tv936[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235661[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 999  : 		strMessage << iTurnsRemaining;

	lea	ecx, DWORD PTR _iTurnsRemaining$221361[ebp]
	push	ecx
	lea	edx, DWORD PTR _strMessage$[ebp]
	push	edx
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 1000 : 		strMessage << iTurnsDuration;

	lea	eax, DWORD PTR _iTurnsDuration$221362[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	push	ecx
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 1001 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_CONTEST_CULTURE");

	push	OFFSET ??_C@_0DD@MMNHOPKK@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	edx, DWORD PTR $T235662[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1104[ebp], eax
	mov	eax, DWORD PTR tv1104[ebp]
	mov	DWORD PTR tv938[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	ecx, DWORD PTR tv938[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235662[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN44@DoStartQue
$LN21@DoStartQue:

; 1002 : 	}
; 1003 : 	// Faith contest
; 1004 : 	else if(m_eType == MINOR_CIV_QUEST_CONTEST_FAITH)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 11			; 0000000bH
	jne	$LN19@DoStartQue

; 1005 : 	{
; 1006 : 		int iStartingFaith = pAssignedPlayer->GetFaithEverGenerated();

	mov	ecx, DWORD PTR _pAssignedPlayer$[ebp]
	call	?GetFaithEverGenerated@CvPlayer@@QBEHXZ	; CvPlayer::GetFaithEverGenerated
	mov	DWORD PTR _iStartingFaith$221369[ebp], eax

; 1007 : 
; 1008 : 		m_iData1 = iStartingFaith;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _iStartingFaith$221369[ebp]
	mov	DWORD PTR [eax+16], ecx

; 1009 : 
; 1010 : 		int iTurnsRemaining = GetEndTurn() - GC.getGame().getGameTurn();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235805[ebp], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEndTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetEndTurn
	mov	esi, eax
	mov	ecx, DWORD PTR $T235805[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	sub	esi, eax
	mov	DWORD PTR _iTurnsRemaining$221370[ebp], esi

; 1011 : 		int iTurnsDuration = GetEndTurn() - GetStartTurn();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEndTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetEndTurn
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetStartTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetStartTurn
	sub	esi, eax
	mov	DWORD PTR _iTurnsDuration$221371[ebp], esi

; 1012 : 
; 1013 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_CONTEST_FAITH");

	push	OFFSET ??_C@_0CJ@BMDJDFF@TXT_KEY_NOTIFICATION_QUEST_CONTE@
	lea	eax, DWORD PTR $T235663[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1105[ebp], eax
	mov	ecx, DWORD PTR tv1105[ebp]
	mov	DWORD PTR tv940[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	mov	edx, DWORD PTR tv940[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235663[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1014 : 		strMessage << iTurnsRemaining;

	lea	eax, DWORD PTR _iTurnsRemaining$221370[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	push	ecx
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 1015 : 		strMessage << iTurnsDuration;

	lea	edx, DWORD PTR _iTurnsDuration$221371[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$[ebp]
	push	eax
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 1016 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_CONTEST_FAITH");

	push	OFFSET ??_C@_0DB@KLIMGOGI@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	ecx, DWORD PTR $T235664[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1106[ebp], eax
	mov	edx, DWORD PTR tv1106[ebp]
	mov	DWORD PTR tv942[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	mov	eax, DWORD PTR tv942[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235664[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN44@DoStartQue
$LN19@DoStartQue:

; 1017 : 	}
; 1018 : 	// Techs contest
; 1019 : 	else if(m_eType == MINOR_CIV_QUEST_CONTEST_TECHS)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 12			; 0000000cH
	jne	$LN17@DoStartQue

; 1020 : 	{
; 1021 : 		int iStartingTechs = GET_TEAM(pAssignedPlayer->getTeam()).GetTeamTechs()->GetNumTechsKnown();

	mov	edx, DWORD PTR _pAssignedPlayer$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T235814[ebp], eax
	mov	ecx, DWORD PTR $T235814[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T235818[ebp], ecx
	mov	ecx, DWORD PTR $T235818[ebp]
	call	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ ; CvTeam::GetTeamTechs
	mov	ecx, eax
	call	?GetNumTechsKnown@CvTeamTechs@@QBEHXZ	; CvTeamTechs::GetNumTechsKnown
	mov	DWORD PTR _iStartingTechs$221378[ebp], eax

; 1022 : 
; 1023 : 		m_iData1 = iStartingTechs;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _iStartingTechs$221378[ebp]
	mov	DWORD PTR [edx+16], eax

; 1024 : 
; 1025 : 		int iTurnsRemaining = GetEndTurn() - GC.getGame().getGameTurn();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235822[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEndTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetEndTurn
	mov	esi, eax
	mov	ecx, DWORD PTR $T235822[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	sub	esi, eax
	mov	DWORD PTR _iTurnsRemaining$221379[ebp], esi

; 1026 : 		int iTurnsDuration = GetEndTurn() - GetStartTurn();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEndTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetEndTurn
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetStartTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetStartTurn
	sub	esi, eax
	mov	DWORD PTR _iTurnsDuration$221380[ebp], esi

; 1027 : 
; 1028 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_CONTEST_TECHS");

	push	OFFSET ??_C@_0CJ@GJOKOHOP@TXT_KEY_NOTIFICATION_QUEST_CONTE@
	lea	edx, DWORD PTR $T235665[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1107[ebp], eax
	mov	eax, DWORD PTR tv1107[ebp]
	mov	DWORD PTR tv944[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	mov	ecx, DWORD PTR tv944[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235665[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1029 : 		strMessage << iTurnsRemaining;

	lea	edx, DWORD PTR _iTurnsRemaining$221379[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$[ebp]
	push	eax
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 1030 : 		strMessage << iTurnsDuration;

	lea	ecx, DWORD PTR _iTurnsDuration$221380[ebp]
	push	ecx
	lea	edx, DWORD PTR _strMessage$[ebp]
	push	edx
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 1031 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_CONTEST_TECHS");

	push	OFFSET ??_C@_0DB@MDKFBKNC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	eax, DWORD PTR $T235666[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1108[ebp], eax
	mov	ecx, DWORD PTR tv1108[ebp]
	mov	DWORD PTR tv946[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	mov	edx, DWORD PTR tv946[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235666[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN44@DoStartQue
$LN17@DoStartQue:

; 1032 : 	}
; 1033 : 	// Invest
; 1034 : 	else if(m_eType == MINOR_CIV_QUEST_INVEST)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 13			; 0000000dH
	jne	$LN15@DoStartQue

; 1035 : 	{
; 1036 : 		int iGoldAlreadyGiven = pMinor->GetMinorCivAI()->GetNumGoldGifted(m_eAssignedPlayer);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetNumGoldGifted@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetNumGoldGifted
	mov	DWORD PTR _iGoldAlreadyGiven$221387[ebp], eax

; 1037 : 
; 1038 : 		m_iData1 = iGoldAlreadyGiven;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _iGoldAlreadyGiven$221387[ebp]
	mov	DWORD PTR [eax+16], ecx

; 1039 : 
; 1040 : 		int iTurnsRemaining = GetEndTurn() - GC.getGame().getGameTurn();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235826[ebp], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEndTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetEndTurn
	mov	esi, eax
	mov	ecx, DWORD PTR $T235826[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	sub	esi, eax
	mov	DWORD PTR _iTurnsRemaining$221388[ebp], esi

; 1041 : 		int iBoostPercentage = 50;//antonjs: todo: XML

	mov	DWORD PTR _iBoostPercentage$221389[ebp], 50 ; 00000032H

; 1042 : 
; 1043 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_INVEST");

	push	OFFSET ??_C@_0CC@HPMCMOPM@TXT_KEY_NOTIFICATION_QUEST_INVES@
	lea	eax, DWORD PTR $T235667[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1109[ebp], eax
	mov	ecx, DWORD PTR tv1109[ebp]
	mov	DWORD PTR tv948[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
	mov	edx, DWORD PTR tv948[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235667[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1044 : 		strMessage << iTurnsRemaining;

	lea	eax, DWORD PTR _iTurnsRemaining$221388[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	push	ecx
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 1045 : 		strMessage << iBoostPercentage;

	lea	edx, DWORD PTR _iBoostPercentage$221389[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$[ebp]
	push	eax
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 1046 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_INVEST");

	push	OFFSET ??_C@_0CK@KFPMMEMI@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	ecx, DWORD PTR $T235668[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1110[ebp], eax
	mov	edx, DWORD PTR tv1110[ebp]
	mov	DWORD PTR tv950[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	mov	eax, DWORD PTR tv950[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235668[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN44@DoStartQue
$LN15@DoStartQue:

; 1047 : 	}
; 1048 : 	// Bully target City-State
; 1049 : 	else if(m_eType == MINOR_CIV_QUEST_BULLY_CITY_STATE)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 14			; 0000000eH
	jne	$LN13@DoStartQue

; 1050 : 	{
; 1051 : 		PlayerTypes eTargetMinor = pMinor->GetMinorCivAI()->GetBestCityStateTarget(m_eAssignedPlayer);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetBestCityStateTarget@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z ; CvMinorCivAI::GetBestCityStateTarget
	mov	DWORD PTR _eTargetMinor$221396[ebp], eax

; 1052 : 		CvAssertMsg(eTargetMinor != NO_PLAYER, "MINOR CIV AI: eTargetMinor should not be NO_PLAYER when giving a Bully CS quest! Please send Anton your save file and version.");
; 1053 : 		int iLastBullyTurn = GET_PLAYER(eTargetMinor).GetMinorCivAI()->GetTurnLastBulliedByMajor(m_eAssignedPlayer);

	mov	ecx, DWORD PTR _eTargetMinor$221396[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T235830[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR $T235830[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetTurnLastBulliedByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetTurnLastBulliedByMajor
	mov	DWORD PTR _iLastBullyTurn$221397[ebp], eax

; 1054 : 
; 1055 : 		m_iData1 = eTargetMinor;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _eTargetMinor$221396[ebp]
	mov	DWORD PTR [ecx+16], edx

; 1056 : 		m_iData2 = iLastBullyTurn;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _iLastBullyTurn$221397[ebp]
	mov	DWORD PTR [eax+20], ecx

; 1057 : 
; 1058 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_BULLY_CITY_STATE");

	push	OFFSET ??_C@_0CM@IIIDKJCG@TXT_KEY_NOTIFICATION_QUEST_BULLY@
	lea	edx, DWORD PTR $T235669[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1111[ebp], eax
	mov	eax, DWORD PTR tv1111[ebp]
	mov	DWORD PTR tv952[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	mov	ecx, DWORD PTR tv952[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235669[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1059 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_BULLY_CITY_STATE");

	push	OFFSET ??_C@_0DE@ODEBBMLO@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	edx, DWORD PTR $T235670[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1112[ebp], eax
	mov	eax, DWORD PTR tv1112[ebp]
	mov	DWORD PTR tv954[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	mov	ecx, DWORD PTR tv954[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235670[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1060 : 
; 1061 : 		if(eTargetMinor != NO_PLAYER)

	cmp	DWORD PTR _eTargetMinor$221396[ebp], -1
	je	SHORT $LN12@DoStartQue

; 1062 : 		{
; 1063 : 			const char* strCivKey = GET_PLAYER(eTargetMinor).getCivilizationShortDescriptionKey();

	mov	edx, DWORD PTR _eTargetMinor$221396[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T235834[ebp], edx
	mov	ecx, DWORD PTR $T235834[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR _strCivKey$221403[ebp], eax

; 1064 : 			strMessage << strCivKey;

	lea	eax, DWORD PTR _strCivKey$221403[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1065 : 			strSummary << strCivKey;

	lea	edx, DWORD PTR _strCivKey$221403[ebp]
	push	edx
	lea	eax, DWORD PTR _strSummary$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1066 : 		}
; 1067 : 		else

	jmp	SHORT $LN11@DoStartQue
$LN12@DoStartQue:

; 1068 : 		{
; 1069 : 			const char* strCivKey = "Nobody";

	mov	DWORD PTR _strCivKey$221405[ebp], OFFSET ??_C@_06LOJBPBBB@Nobody?$AA@

; 1070 : 			strMessage << strCivKey;

	lea	ecx, DWORD PTR _strCivKey$221405[ebp]
	push	ecx
	lea	edx, DWORD PTR _strMessage$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1071 : 			strSummary << strCivKey;

	lea	eax, DWORD PTR _strCivKey$221405[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
$LN11@DoStartQue:

; 1072 : 		}

	jmp	$LN44@DoStartQue
$LN13@DoStartQue:

; 1073 : 	}
; 1074 : 	// Denounce target Major
; 1075 : 	else if(m_eType == MINOR_CIV_QUEST_DENOUNCE_MAJOR)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 15			; 0000000fH
	jne	$LN9@DoStartQue

; 1076 : 	{
; 1077 : 		PlayerTypes eMostRecentBully = pMinor->GetMinorCivAI()->GetMostRecentBullyForQuest();

	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetMostRecentBullyForQuest@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetMostRecentBullyForQuest
	mov	DWORD PTR _eMostRecentBully$221408[ebp], eax

; 1078 : 
; 1079 : 		CvAssertMsg(eMostRecentBully != NO_PLAYER, "MINOR CIV AI: eMostRecentBully should not be NO_PLAYER when giving a Denounce Major quest! Please send Anton your save file and version.");
; 1080 : 
; 1081 : 		m_iData1 = eMostRecentBully;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _eMostRecentBully$221408[ebp]
	mov	DWORD PTR [eax+16], ecx

; 1082 : 
; 1083 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_DENOUNCE_MAJOR");

	push	OFFSET ??_C@_0CK@PODAGNAL@TXT_KEY_NOTIFICATION_QUEST_DENOU@
	lea	edx, DWORD PTR $T235671[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1113[ebp], eax
	mov	eax, DWORD PTR tv1113[ebp]
	mov	DWORD PTR tv956[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	mov	ecx, DWORD PTR tv956[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235671[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1084 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_DENOUNCE_MAJOR");

	push	OFFSET ??_C@_0DC@KGPCGOOH@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	edx, DWORD PTR $T235672[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1114[ebp], eax
	mov	eax, DWORD PTR tv1114[ebp]
	mov	DWORD PTR tv958[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	mov	ecx, DWORD PTR tv958[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235672[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1085 : 
; 1086 : 		if(eMostRecentBully != NO_PLAYER)

	cmp	DWORD PTR _eMostRecentBully$221408[ebp], -1
	je	SHORT $LN8@DoStartQue

; 1087 : 		{
; 1088 : 			const char* strCivKey = GET_PLAYER(eMostRecentBully).getCivilizationShortDescriptionKey();

	mov	edx, DWORD PTR _eMostRecentBully$221408[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T235838[ebp], edx
	mov	ecx, DWORD PTR $T235838[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR _strCivKey$221414[ebp], eax

; 1089 : 			strMessage << strCivKey;

	lea	eax, DWORD PTR _strCivKey$221414[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1090 : 			strSummary << strCivKey;

	lea	edx, DWORD PTR _strCivKey$221414[ebp]
	push	edx
	lea	eax, DWORD PTR _strSummary$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1091 : 		}
; 1092 : 		else

	jmp	SHORT $LN7@DoStartQue
$LN8@DoStartQue:

; 1093 : 		{
; 1094 : 			const char* strCivKey = "Nobody";

	mov	DWORD PTR _strCivKey$221416[ebp], OFFSET ??_C@_06LOJBPBBB@Nobody?$AA@

; 1095 : 			strMessage << strCivKey;

	lea	ecx, DWORD PTR _strCivKey$221416[ebp]
	push	ecx
	lea	edx, DWORD PTR _strMessage$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1096 : 			strSummary << strCivKey;

	lea	eax, DWORD PTR _strCivKey$221416[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
$LN7@DoStartQue:

; 1097 : 		}

	jmp	$LN44@DoStartQue
$LN9@DoStartQue:

; 1098 : 	}
; 1099 : 	// Spread your religion to us
; 1100 : 	else if(m_eType == MINOR_CIV_QUEST_SPREAD_RELIGION)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 16			; 00000010H
	jne	$LN5@DoStartQue

; 1101 : 	{
; 1102 : 		ReligionTypes eReligion = GC.getGame().GetGameReligions()->GetReligionCreatedByPlayer(m_eAssignedPlayer);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235842[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR $T235842[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer
	mov	DWORD PTR _eReligion$221419[ebp], eax

; 1103 : 
; 1104 : 		CvAssertMsg(eReligion != NO_RELIGION, "MINOR CIV AI: eReligion should not be NO_RELIGION when giving a Spread Religion quest! Please send Anton your save file and version.");
; 1105 : 
; 1106 : 		m_iData1 = eReligion;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _eReligion$221419[ebp]
	mov	DWORD PTR [eax+16], ecx

; 1107 : 
; 1108 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_SPREAD_RELIGION");

	push	OFFSET ??_C@_0CL@JFCNGIIL@TXT_KEY_NOTIFICATION_QUEST_SPREA@
	lea	edx, DWORD PTR $T235673[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1115[ebp], eax
	mov	eax, DWORD PTR tv1115[ebp]
	mov	DWORD PTR tv960[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	mov	ecx, DWORD PTR tv960[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235673[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1109 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_SPREAD_RELIGION");

	push	OFFSET ??_C@_0DD@DMMJAENL@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	edx, DWORD PTR $T235674[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1116[ebp], eax
	mov	eax, DWORD PTR tv1116[ebp]
	mov	DWORD PTR tv962[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	mov	ecx, DWORD PTR tv962[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235674[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1110 : 
; 1111 : 		if(eReligion != NO_RELIGION)

	cmp	DWORD PTR _eReligion$221419[ebp], -1
	je	SHORT $LN4@DoStartQue

; 1112 : 		{
; 1113 : 			const CvReligion* pkReligion = GC.getGame().GetGameReligions()->GetReligion(eReligion, NO_PLAYER);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235846[ebp], edx
	push	-1
	mov	eax, DWORD PTR _eReligion$221419[ebp]
	push	eax
	mov	ecx, DWORD PTR $T235846[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pkReligion$221425[ebp], eax

; 1114 : 			CvString strReligion = pkReligion->GetName(); // Not a key, already localized (may be custom name)

	lea	ecx, DWORD PTR _strReligion$221426[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkReligion$221425[ebp]
	call	?GetName@CvReligion@@QBE?AVCvString@@XZ	; CvReligion::GetName
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H

; 1115 : 			strMessage << strReligion;

	lea	edx, DWORD PTR _strReligion$221426[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$[ebp]
	push	eax
	call	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
	add	esp, 8

; 1116 : 			strSummary << strReligion;

	lea	ecx, DWORD PTR _strReligion$221426[ebp]
	push	ecx
	lea	edx, DWORD PTR _strSummary$[ebp]
	push	edx
	call	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
	add	esp, 8

; 1117 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _strReligion$221426[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1118 : 		else

	jmp	SHORT $LN3@DoStartQue
$LN4@DoStartQue:

; 1119 : 		{
; 1120 : 			const char* strReligion = "No Religion";

	mov	DWORD PTR _strReligion$221429[ebp], OFFSET ??_C@_0M@KDICFKJM@No?5Religion?$AA@

; 1121 : 			strMessage << strReligion;

	lea	eax, DWORD PTR _strReligion$221429[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1122 : 			strSummary << strReligion;

	lea	edx, DWORD PTR _strReligion$221429[ebp]
	push	edx
	lea	eax, DWORD PTR _strSummary$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
$LN3@DoStartQue:

; 1123 : 		}

	jmp	$LN44@DoStartQue
$LN5@DoStartQue:

; 1124 : 	}
; 1125 : 	// Connect a trade Route
; 1126 : 	else if(m_eType == MINOR_CIV_QUEST_TRADE_ROUTE)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 17			; 00000011H
	jne	$LN44@DoStartQue

; 1127 : 	{
; 1128 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_START_TRADE_ROUTE");

	push	OFFSET ??_C@_0CN@IBMIDFCJ@TXT_KEY_NOTIFICATION_QUEST_START@
	lea	edx, DWORD PTR $T235675[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv819[ebp], eax
	mov	eax, DWORD PTR tv819[ebp]
	mov	DWORD PTR tv965[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	mov	ecx, DWORD PTR tv965[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235675[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1129 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_START_TRADE_ROUTE");

	push	OFFSET ??_C@_0DF@HPHHOMOK@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	edx, DWORD PTR $T235676[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1117[ebp], eax
	mov	eax, DWORD PTR tv1117[ebp]
	mov	DWORD PTR tv967[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	mov	ecx, DWORD PTR tv967[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235676[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN44@DoStartQue:

; 1130 : 	}
; 1131 : 
; 1132 : 	strMessage << pMinor->getNameKey();

	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T235677[ebp], eax
	lea	edx, DWORD PTR $T235677[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1133 : 	strSummary << pMinor->getNameKey();

	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T235678[ebp], eax
	lea	ecx, DWORD PTR $T235678[ebp]
	push	ecx
	lea	edx, DWORD PTR _strSummary$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1134 : 	pMinor->GetMinorCivAI()->AddQuestNotification(strMessage.toUTF8(), strSummary.toUTF8(), m_eAssignedPlayer, iNotificationX, iNotificationY);

	push	0
	mov	eax, DWORD PTR _iNotificationY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iNotificationX$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T235860[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T235679[ebp], esp
	mov	DWORD PTR $T235859[ebp], ecx
	cmp	DWORD PTR $T235860[ebp], 0
	je	SHORT $LN158@DoStartQue
	mov	edx, DWORD PTR $T235860[ebp]
	mov	DWORD PTR tv1068[ebp], edx
	jmp	SHORT $LN159@DoStartQue
$LN158@DoStartQue:
	mov	DWORD PTR tv1068[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN159@DoStartQue:
	mov	eax, DWORD PTR tv1068[ebp]
	push	eax
	mov	ecx, DWORD PTR $T235859[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	ecx, DWORD PTR $T235859[ebp]
	mov	DWORD PTR tv973[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T235870[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T235680[ebp], esp
	mov	DWORD PTR $T235869[ebp], edx
	cmp	DWORD PTR $T235870[ebp], 0
	je	SHORT $LN163@DoStartQue
	mov	eax, DWORD PTR $T235870[ebp]
	mov	DWORD PTR tv1081[ebp], eax
	jmp	SHORT $LN164@DoStartQue
$LN163@DoStartQue:
	mov	DWORD PTR tv1081[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN164@DoStartQue:
	mov	ecx, DWORD PTR tv1081[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T235869[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	edx, DWORD PTR $T235869[ebp]
	mov	DWORD PTR tv976[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, eax
	call	?AddQuestNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH_N@Z ; CvMinorCivAI::AddQuestNotification

; 1135 : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$0:
	lea	ecx, DWORD PTR _strMessage$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$1:
	lea	ecx, DWORD PTR _strSummary$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$2:
	lea	ecx, DWORD PTR $T235641[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$3:
	lea	ecx, DWORD PTR $T235642[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$4:
	lea	ecx, DWORD PTR $T235643[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$5:
	lea	ecx, DWORD PTR $T235644[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$6:
	lea	ecx, DWORD PTR $T235645[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$7:
	lea	ecx, DWORD PTR $T235646[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$8:
	lea	ecx, DWORD PTR $T235647[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$9:
	lea	ecx, DWORD PTR $T235648[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$10:
	lea	ecx, DWORD PTR $T235649[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$11:
	lea	ecx, DWORD PTR $T235650[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$12:
	lea	ecx, DWORD PTR $T235651[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$13:
	lea	ecx, DWORD PTR $T235652[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$14:
	lea	ecx, DWORD PTR $T235653[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$15:
	lea	ecx, DWORD PTR $T235654[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$16:
	lea	ecx, DWORD PTR $T235655[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$17:
	lea	ecx, DWORD PTR $T235656[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$18:
	lea	ecx, DWORD PTR $T235657[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$19:
	lea	ecx, DWORD PTR $T235658[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$20:
	lea	ecx, DWORD PTR $T235659[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$21:
	lea	ecx, DWORD PTR $T235660[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$22:
	lea	ecx, DWORD PTR $T235661[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$23:
	lea	ecx, DWORD PTR $T235662[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$24:
	lea	ecx, DWORD PTR $T235663[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$25:
	lea	ecx, DWORD PTR $T235664[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$26:
	lea	ecx, DWORD PTR $T235665[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$27:
	lea	ecx, DWORD PTR $T235666[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$28:
	lea	ecx, DWORD PTR $T235667[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$29:
	lea	ecx, DWORD PTR $T235668[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$30:
	lea	ecx, DWORD PTR $T235669[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$31:
	lea	ecx, DWORD PTR $T235670[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$32:
	lea	ecx, DWORD PTR $T235671[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$33:
	lea	ecx, DWORD PTR $T235672[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$34:
	lea	ecx, DWORD PTR $T235673[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$35:
	lea	ecx, DWORD PTR $T235674[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$36:
	lea	ecx, DWORD PTR _strReligion$221426[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$37:
	lea	ecx, DWORD PTR $T235675[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$38:
	lea	ecx, DWORD PTR $T235676[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$39:
	mov	ecx, DWORD PTR $T235679[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z$40:
	mov	ecx, DWORD PTR $T235680[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-3684]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-340]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoStartQuest@CvMinorCivQuest@@QAEXH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoStartQuest@CvMinorCivQuest@@QAEXH@Z ENDP		; CvMinorCivQuest::DoStartQuest
PUBLIC	?IsGlobalQuest@CvMinorCivAI@@QBE_NW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsGlobalQuest
PUBLIC	?DoStartQuestUsingExistingData@CvMinorCivQuest@@QAEXPAV1@@Z ; CvMinorCivQuest::DoStartQuestUsingExistingData
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__ehfuncinfo$?DoStartQuestUsingExistingData@CvMinorCivQuest@@QAEXPAV1@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?DoStartQuestUsingExistingData@CvMinorCivQuest@@QAEXPAV1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?DoStartQuestUsingExistingData@CvMinorCivQuest@@QAEXPAV1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoStartQuestUsingExistingData@CvMinorCivQuest@@QAEXPAV1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DoStartQuestUsingExistingData@CvMinorCivQuest@@QAEXPAV1@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuestUsingExistingData@CvMinorCivQuest@@QAEXPAV1@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuestUsingExistingData@CvMinorCivQuest@@QAEXPAV1@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?DoStartQuestUsingExistingData@CvMinorCivQuest@@QAEXPAV1@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?DoStartQuestUsingExistingData@CvMinorCivQuest@@QAEXPAV1@@Z$5
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoStartQuestUsingExistingData@CvMinorCivQuest@@QAEXPAV1@@Z
_TEXT	SEGMENT
tv255 = -472						; size = 4
tv321 = -468						; size = 4
tv252 = -464						; size = 4
tv308 = -460						; size = 4
tv246 = -456						; size = 4
tv81 = -452						; size = 4
tv244 = -448						; size = 4
tv84 = -444						; size = 4
tv288 = -440						; size = 4
_this$ = -436						; size = 4
$T236021 = -432						; size = 4
$T236020 = -428						; size = 4
$T236011 = -424						; size = 4
$T236010 = -420						; size = 4
$T235995 = -416						; size = 4
$T235978 = -412						; size = 4
$T235938 = -408						; size = 4
$T235926 = -404						; size = 4
$T235922 = -397						; size = 1
$T235911 = -396						; size = 4
$T235907 = -389						; size = 1
_iMapY$235974 = -388					; size = 4
_iMapX$235973 = -384					; size = 4
$T235900 = -380						; size = 4
$T235884 = -376						; size = 4
$T235883 = -372						; size = 4
$T235882 = -368						; size = 4
$T235881 = -364						; size = 4
$T235880 = -360						; size = 80
$T235879 = -280						; size = 80
_pPlot$221456 = -200					; size = 4
_iCampX$221454 = -196					; size = 4
_iCampY$221455 = -192					; size = 4
_pAssignedPlayer$ = -188				; size = 4
_iNotificationX$ = -184					; size = 4
_strMessage$ = -180					; size = 80
_strSummary$ = -100					; size = 80
_iNotificationY$ = -20					; size = 4
_pMinor$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pExistingQuest$ = 8					; size = 4
?DoStartQuestUsingExistingData@CvMinorCivQuest@@QAEXPAV1@@Z PROC ; CvMinorCivQuest::DoStartQuestUsingExistingData, COMDAT
; _this$ = ecx

; 1140 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoStartQuestUsingExistingData@CvMinorCivQuest@@QAEXPAV1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 460				; 000001ccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1141 : 	CvPlayer* pMinor = &GET_PLAYER(m_eMinor);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pMinor$[ebp], ecx

; 1142 : 	CvPlayer* pAssignedPlayer = &GET_PLAYER(m_eAssignedPlayer);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pAssignedPlayer$[ebp], eax

; 1143 : 
; 1144 : 	CvAssertMsg(pMinor != NULL, "pMinor should not be NULL. Please send Anton your save file and version.");
; 1145 : 	CvAssertMsg(pAssignedPlayer != NULL, "pAssignedPlayer should not be NULL. Please send Anton your save file and version.");
; 1146 : 	CvAssertMsg(pExistingQuest != NULL, "pExistingQuest should not be NULL. Please send Anton your save file and version.");
; 1147 : 	if(pMinor == NULL || pAssignedPlayer == NULL || pExistingQuest == NULL) return;

	cmp	DWORD PTR _pMinor$[ebp], 0
	je	SHORT $LN7@DoStartQue@2
	cmp	DWORD PTR _pAssignedPlayer$[ebp], 0
	je	SHORT $LN7@DoStartQue@2
	cmp	DWORD PTR _pExistingQuest$[ebp], 0
	jne	SHORT $LN8@DoStartQue@2
$LN7@DoStartQue@2:
	jmp	$LN9@DoStartQue@2
$LN8@DoStartQue@2:

; 1148 : 
; 1149 : 	Localization::String strMessage;

	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1150 : 	Localization::String strSummary;

	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 1151 : 	int iNotificationX = -1;

	mov	DWORD PTR _iNotificationX$[ebp], -1

; 1152 : 	int iNotificationY = -1;

	mov	DWORD PTR _iNotificationY$[ebp], -1

; 1153 : 
; 1154 : 	// Kill a Camp - This quest needs to have the data for the same camp as the existing quest
; 1155 : 	if(m_eType == MINOR_CIV_QUEST_KILL_CAMP)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 1
	jne	$LN6@DoStartQue@2

; 1156 : 	{
; 1157 : 		m_iStartTurn = pExistingQuest->GetStartTurn();

	mov	ecx, DWORD PTR _pExistingQuest$[ebp]
	call	?GetStartTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetStartTurn
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], eax

; 1158 : 
; 1159 : 		int iCampX = pExistingQuest->GetPrimaryData();

	mov	ecx, DWORD PTR _pExistingQuest$[ebp]
	call	?GetPrimaryData@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetPrimaryData
	mov	DWORD PTR _iCampX$221454[ebp], eax

; 1160 : 		int iCampY = pExistingQuest->GetSecondaryData();

	mov	ecx, DWORD PTR _pExistingQuest$[ebp]
	call	?GetSecondaryData@CvMinorCivQuest@@QBEHXZ ; CvMinorCivQuest::GetSecondaryData
	mov	DWORD PTR _iCampY$221455[ebp], eax

; 1161 : 
; 1162 : 		CvPlot* pPlot = GC.getMap().plot(iCampX, iCampY);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T235900[ebp], eax
	cmp	DWORD PTR _iCampX$221454[ebp], -2147483647 ; 80000001H
	je	SHORT $LN23@DoStartQue@2
	cmp	DWORD PTR _iCampY$221455[ebp], -2147483647 ; 80000001H
	jne	SHORT $LN24@DoStartQue@2
$LN23@DoStartQue@2:
	mov	DWORD PTR _pPlot$221456[ebp], 0
	jmp	$LN25@DoStartQue@2
$LN24@DoStartQue@2:
	mov	ecx, DWORD PTR $T235900[ebp]
	mov	dl, BYTE PTR [ecx+4056]
	mov	BYTE PTR $T235907[ebp], dl
	mov	eax, DWORD PTR $T235900[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T235911[ebp], ecx
	movzx	edx, BYTE PTR $T235907[ebp]
	test	edx, edx
	je	SHORT $LN36@DoStartQue@2
	cmp	DWORD PTR _iCampX$221454[ebp], 0
	jge	SHORT $LN35@DoStartQue@2
	mov	eax, DWORD PTR _iCampX$221454[ebp]
	cdq
	idiv	DWORD PTR $T235911[ebp]
	add	edx, DWORD PTR $T235911[ebp]
	mov	DWORD PTR _iMapX$235973[ebp], edx
	jmp	SHORT $LN37@DoStartQue@2
	jmp	SHORT $LN36@DoStartQue@2
$LN35@DoStartQue@2:
	mov	eax, DWORD PTR _iCampX$221454[ebp]
	cmp	eax, DWORD PTR $T235911[ebp]
	jl	SHORT $LN36@DoStartQue@2
	mov	eax, DWORD PTR _iCampX$221454[ebp]
	cdq
	idiv	DWORD PTR $T235911[ebp]
	mov	DWORD PTR _iMapX$235973[ebp], edx
	jmp	SHORT $LN37@DoStartQue@2
$LN36@DoStartQue@2:
	mov	ecx, DWORD PTR _iCampX$221454[ebp]
	mov	DWORD PTR _iMapX$235973[ebp], ecx
$LN37@DoStartQue@2:
	mov	edx, DWORD PTR $T235900[ebp]
	mov	al, BYTE PTR [edx+4057]
	mov	BYTE PTR $T235922[ebp], al
	mov	ecx, DWORD PTR $T235900[ebp]
	mov	edx, DWORD PTR [ecx+4024]
	mov	DWORD PTR $T235926[ebp], edx
	movzx	eax, BYTE PTR $T235922[ebp]
	test	eax, eax
	je	SHORT $LN46@DoStartQue@2
	cmp	DWORD PTR _iCampY$221455[ebp], 0
	jge	SHORT $LN45@DoStartQue@2
	mov	eax, DWORD PTR _iCampY$221455[ebp]
	cdq
	idiv	DWORD PTR $T235926[ebp]
	add	edx, DWORD PTR $T235926[ebp]
	mov	DWORD PTR _iMapY$235974[ebp], edx
	jmp	SHORT $LN47@DoStartQue@2
	jmp	SHORT $LN46@DoStartQue@2
$LN45@DoStartQue@2:
	mov	ecx, DWORD PTR _iCampY$221455[ebp]
	cmp	ecx, DWORD PTR $T235926[ebp]
	jl	SHORT $LN46@DoStartQue@2
	mov	eax, DWORD PTR _iCampY$221455[ebp]
	cdq
	idiv	DWORD PTR $T235926[ebp]
	mov	DWORD PTR _iMapY$235974[ebp], edx
	jmp	SHORT $LN47@DoStartQue@2
$LN46@DoStartQue@2:
	mov	edx, DWORD PTR _iCampY$221455[ebp]
	mov	DWORD PTR _iMapY$235974[ebp], edx
$LN47@DoStartQue@2:
	mov	eax, DWORD PTR _iMapY$235974[ebp]
	push	eax
	mov	ecx, DWORD PTR _iMapX$235973[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T235900[ebp]
	call	?isPlot@CvMap@@QBEHHH@Z			; CvMap::isPlot
	test	eax, eax
	je	SHORT $LN27@DoStartQue@2
	mov	edx, DWORD PTR $T235900[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T235938[ebp], eax
	mov	ecx, DWORD PTR _iMapY$235974[ebp]
	imul	ecx, DWORD PTR $T235938[ebp]
	add	ecx, DWORD PTR _iMapX$235973[ebp]
	imul	ecx, 484				; 000001e4H
	mov	edx, DWORD PTR $T235900[ebp]
	add	ecx, DWORD PTR [edx+4068]
	mov	DWORD PTR tv288[ebp], ecx
	jmp	SHORT $LN28@DoStartQue@2
$LN27@DoStartQue@2:
	mov	DWORD PTR tv288[ebp], 0
$LN28@DoStartQue@2:
	mov	eax, DWORD PTR tv288[ebp]
	mov	DWORD PTR _pPlot$221456[ebp], eax
$LN25@DoStartQue@2:

; 1163 : 
; 1164 : 		if(!pPlot)

	cmp	DWORD PTR _pPlot$221456[ebp], 0
	jne	SHORT $LN5@DoStartQue@2

; 1165 : 		{
; 1166 : 			CvAssertMsg(false, "We're starting a quest to kill a barb camp using an existing quest's barb camp data, but the data is bad. Please send Anton your save file and version.");
; 1167 : 			return;

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN9@DoStartQue@2
$LN5@DoStartQue@2:

; 1168 : 		}
; 1169 : 		if(pPlot->getImprovementType() != GC.getBARBARIAN_CAMP_IMPROVEMENT())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8548
	mov	DWORD PTR $T235978[ebp], ecx
	mov	ecx, DWORD PTR _pPlot$221456[ebp]
	call	?getImprovementType@CvPlot@@QBE?AW4ImprovementTypes@@XZ ; CvPlot::getImprovementType
	cmp	eax, DWORD PTR $T235978[ebp]
	je	SHORT $LN4@DoStartQue@2

; 1170 : 		{
; 1171 : 			CvAssertMsg(false, "We're starting a quest to kill a barb camp using an existing quest's barb camp data, but there's no camp there anymore. Please send Anton your save file and version.");
; 1172 : 			return;

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN9@DoStartQue@2
$LN4@DoStartQue@2:

; 1173 : 		}
; 1174 : 
; 1175 : 		m_iData1 = iCampX;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _iCampX$221454[ebp]
	mov	DWORD PTR [edx+16], eax

; 1176 : 		m_iData2 = iCampY;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _iCampY$221455[ebp]
	mov	DWORD PTR [ecx+20], edx

; 1177 : 
; 1178 : 		pPlot->setRevealed(pAssignedPlayer->getTeam(), true);

	push	-1
	push	0
	push	1
	mov	eax, DWORD PTR _pAssignedPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _pPlot$221456[ebp]
	call	?setRevealed@CvPlot@@QAE_NW4TeamTypes@@_N10@Z ; CvPlot::setRevealed

; 1179 : 		pPlot->setRevealedImprovementType(pAssignedPlayer->getTeam(), pPlot->getImprovementType());

	mov	edx, DWORD PTR _pAssignedPlayer$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T235995[ebp], eax
	mov	ecx, DWORD PTR _pPlot$221456[ebp]
	call	?getImprovementType@CvPlot@@QBE?AW4ImprovementTypes@@XZ ; CvPlot::getImprovementType
	push	eax
	mov	ecx, DWORD PTR $T235995[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlot$221456[ebp]
	call	?setRevealedImprovementType@CvPlot@@QAE_NW4TeamTypes@@W4ImprovementTypes@@@Z ; CvPlot::setRevealedImprovementType

; 1180 : 
; 1181 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_KILL_CAMP");

	push	OFFSET ??_C@_0CF@MAOJPBCF@TXT_KEY_NOTIFICATION_QUEST_KILL_@
	lea	edx, DWORD PTR $T235879[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv84[ebp], eax
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR tv244[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv244[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235879[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1182 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_KILL_CAMP");

	push	OFFSET ??_C@_0CN@NIAFEJJC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	edx, DWORD PTR $T235880[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv81[ebp], eax
	mov	eax, DWORD PTR tv81[ebp]
	mov	DWORD PTR tv246[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv246[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235880[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1183 : 		iNotificationX = pPlot->getX();

	mov	edx, DWORD PTR _pPlot$221456[ebp]
	movsx	eax, WORD PTR [edx]
	mov	DWORD PTR _iNotificationX$[ebp], eax

; 1184 : 		iNotificationY = pPlot->getY();

	mov	ecx, DWORD PTR _pPlot$221456[ebp]
	movsx	edx, WORD PTR [ecx+2]
	mov	DWORD PTR _iNotificationY$[ebp], edx

; 1185 : 
; 1186 : 		strMessage << pMinor->getNameKey();

	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T235881[ebp], eax
	lea	eax, DWORD PTR $T235881[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1187 : 		strSummary << pMinor->getNameKey();

	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T235882[ebp], eax
	lea	edx, DWORD PTR $T235882[ebp]
	push	edx
	lea	eax, DWORD PTR _strSummary$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1188 : 		pMinor->GetMinorCivAI()->AddQuestNotification(strMessage.toUTF8(), strSummary.toUTF8(), m_eAssignedPlayer, iNotificationX, iNotificationY);

	push	0
	mov	ecx, DWORD PTR _iNotificationY$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iNotificationX$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T236011[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T235883[ebp], esp
	mov	DWORD PTR $T236010[ebp], edx
	cmp	DWORD PTR $T236011[ebp], 0
	je	SHORT $LN69@DoStartQue@2
	mov	eax, DWORD PTR $T236011[ebp]
	mov	DWORD PTR tv308[ebp], eax
	jmp	SHORT $LN70@DoStartQue@2
$LN69@DoStartQue@2:
	mov	DWORD PTR tv308[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN70@DoStartQue@2:
	mov	ecx, DWORD PTR tv308[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T236010[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	edx, DWORD PTR $T236010[ebp]
	mov	DWORD PTR tv252[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T236021[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T235884[ebp], esp
	mov	DWORD PTR $T236020[ebp], eax
	cmp	DWORD PTR $T236021[ebp], 0
	je	SHORT $LN74@DoStartQue@2
	mov	ecx, DWORD PTR $T236021[ebp]
	mov	DWORD PTR tv321[ebp], ecx
	jmp	SHORT $LN75@DoStartQue@2
$LN74@DoStartQue@2:
	mov	DWORD PTR tv321[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN75@DoStartQue@2:
	mov	edx, DWORD PTR tv321[ebp]
	push	edx
	mov	ecx, DWORD PTR $T236020[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR $T236020[ebp]
	mov	DWORD PTR tv255[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, eax
	call	?AddQuestNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH_N@Z ; CvMinorCivAI::AddQuestNotification
	jmp	SHORT $LN3@DoStartQue@2
$LN6@DoStartQue@2:

; 1189 : 	}
; 1190 : 
; 1191 : 	// Other global quests (ie. contests) - Quest data is initialized as normal except for the start turn, which was in the past
; 1192 : 	else if(pMinor->GetMinorCivAI()->IsGlobalQuest(pExistingQuest->GetType()))

	mov	ecx, DWORD PTR _pExistingQuest$[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	push	eax
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsGlobalQuest@CvMinorCivAI@@QBE_NW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsGlobalQuest
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@DoStartQue@2

; 1193 : 	{
; 1194 : 		DoStartQuest(pExistingQuest->GetStartTurn());

	mov	ecx, DWORD PTR _pExistingQuest$[ebp]
	call	?GetStartTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetStartTurn
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoStartQuest@CvMinorCivQuest@@QAEXH@Z	; CvMinorCivQuest::DoStartQuest

; 1195 : 	}
; 1196 : 
; 1197 : 	// Personal quests - Should not be started from an existing quest's data!!
; 1198 : 	else

	jmp	SHORT $LN3@DoStartQue@2
$LN2@DoStartQue@2:

; 1199 : 	{
; 1200 : 		CvAssertMsg(false, "Trying to start a personal quest using existing quest data.  This should not be done.  Please send Anton your save file and version.");
; 1201 : 		DoStartQuest(pExistingQuest->GetStartTurn());

	mov	ecx, DWORD PTR _pExistingQuest$[ebp]
	call	?GetStartTurn@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetStartTurn
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoStartQuest@CvMinorCivQuest@@QAEXH@Z	; CvMinorCivQuest::DoStartQuest
$LN3@DoStartQue@2:

; 1202 : 	}
; 1203 : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN9@DoStartQue@2:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoStartQuestUsingExistingData@CvMinorCivQuest@@QAEXPAV1@@Z$0:
	lea	ecx, DWORD PTR _strMessage$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuestUsingExistingData@CvMinorCivQuest@@QAEXPAV1@@Z$1:
	lea	ecx, DWORD PTR _strSummary$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuestUsingExistingData@CvMinorCivQuest@@QAEXPAV1@@Z$2:
	lea	ecx, DWORD PTR $T235879[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuestUsingExistingData@CvMinorCivQuest@@QAEXPAV1@@Z$3:
	lea	ecx, DWORD PTR $T235880[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoStartQuestUsingExistingData@CvMinorCivQuest@@QAEXPAV1@@Z$4:
	mov	ecx, DWORD PTR $T235883[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoStartQuestUsingExistingData@CvMinorCivQuest@@QAEXPAV1@@Z$5:
	mov	ecx, DWORD PTR $T235884[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?DoStartQuestUsingExistingData@CvMinorCivQuest@@QAEXPAV1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-464]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoStartQuestUsingExistingData@CvMinorCivQuest@@QAEXPAV1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoStartQuestUsingExistingData@CvMinorCivQuest@@QAEXPAV1@@Z ENDP ; CvMinorCivQuest::DoStartQuestUsingExistingData
PUBLIC	??1?$pair@VCvString@@V1@@std@@QAE@XZ		; std::pair<CvString,CvString>::~pair<CvString,CvString>
PUBLIC	??_C@_0BD@CNJPLLGH@?$FLNEWLINE?$FN?$FLNEWLINE?$FN?$AA@ ; `string'
PUBLIC	?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z ; CvMinorCivAI::GetStatusChangeNotificationStrings
PUBLIC	?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z ; CvMinorCivAI::GetNamesListAsString
PUBLIC	??_C@_0DI@JEIAPGCG@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0DA@MENAOIK@TXT_KEY_NOTIFICATION_QUEST_COMPL@ ; `string'
PUBLIC	??_C@_0DM@KNAPHEH@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0DE@DGDKMBOH@TXT_KEY_NOTIFICATION_QUEST_COMPL@ ; `string'
PUBLIC	??_C@_07BCHCBILN@Atheism?$AA@			; `string'
PUBLIC	??_C@_0DL@LMELAEEN@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0DD@FFJJHFGJ@TXT_KEY_NOTIFICATION_QUEST_COMPL@ ; `string'
PUBLIC	??_C@_0DN@BKMONKCC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0DF@MMCEJDPM@TXT_KEY_NOTIFICATION_QUEST_COMPL@ ; `string'
PUBLIC	??_C@_0DD@CMGLGCBM@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0CL@IFIPAOEM@TXT_KEY_NOTIFICATION_QUEST_COMPL@ ; `string'
PUBLIC	??_C@_0DK@KABLMNMG@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0DC@BBMPNMMA@TXT_KEY_NOTIFICATION_QUEST_COMPL@ ; `string'
PUBLIC	??_C@_0DK@MIDCLJHM@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0DC@HJOGKIHK@TXT_KEY_NOTIFICATION_QUEST_COMPL@ ; `string'
PUBLIC	??4?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAEXABV0@@Z ; FStaticVector<enum PlayerTypes,64,1,297,0>::operator=
PUBLIC	??_C@_0DM@PKMOBMDG@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0DE@MGCECKJG@TXT_KEY_NOTIFICATION_QUEST_COMPL@ ; `string'
PUBLIC	??_C@_0DO@PFPEMDMC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0DG@JEEJNGFI@TXT_KEY_NOTIFICATION_QUEST_COMPL@ ; `string'
PUBLIC	??_C@_0DG@JMFPCNFA@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0CO@JOMMABID@TXT_KEY_NOTIFICATION_QUEST_COMPL@ ; `string'
PUBLIC	??_C@_0EA@IBLIKFHJ@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0DI@GHMLECLP@TXT_KEY_NOTIFICATION_QUEST_COMPL@ ; `string'
PUBLIC	??_C@_0DI@MHBBOPKO@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0DA@FPNMBHAC@TXT_KEY_NOTIFICATION_QUEST_COMPL@ ; `string'
PUBLIC	??_C@_0DM@NMOMMNNL@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0DE@OAAGPLHL@TXT_KEY_NOTIFICATION_QUEST_COMPL@ ; `string'
PUBLIC	??_C@_0DJ@EMIBBAFA@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0DB@JDHJDCGL@TXT_KEY_NOTIFICATION_QUEST_COMPL@ ; `string'
PUBLIC	??_C@_0DN@BLMDOEMJ@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0DF@MNCJKNBH@TXT_KEY_NOTIFICATION_QUEST_COMPL@ ; `string'
PUBLIC	??_C@_0DN@MBNJOOBK@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0DF@BHDDKHME@TXT_KEY_NOTIFICATION_QUEST_COMPL@ ; `string'
PUBLIC	??_C@_0DG@MELDMJHP@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0CO@MGCAOFKM@TXT_KEY_NOTIFICATION_QUEST_COMPL@ ; `string'
PUBLIC	??_C@_0DE@KGEFMFOO@TXT_KEY_NOTIFICATION_SUMMARY_MIN@ ; `string'
PUBLIC	??_C@_0CM@MNIHHAHG@TXT_KEY_NOTIFICATION_MINOR_ROUTE@ ; `string'
PUBLIC	?SetRouteConnectionEstablished@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z ; CvMinorCivAI::SetRouteConnectionEstablished
PUBLIC	?ChangeFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::ChangeFriendshipWithMajor
PUBLIC	?GetEffectiveFriendshipWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajor
PUBLIC	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ	; CvMinorCivAI::GetAlly
PUBLIC	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z	; CvMinorCivAI::IsAllies
PUBLIC	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z	; CvMinorCivAI::IsFriends
PUBLIC	__$ArrayPad$
PUBLIC	?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ		; CvMinorCivQuest::DoFinishQuest
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z:PROC
EXTRN	__imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z:PROC
EXTRN	__imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z:PROC
EXTRN	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ:PROC ; CvGame::getActivePlayer
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0BD@CNJPLLGH@?$FLNEWLINE?$FN?$FLNEWLINE?$FN?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0BD@CNJPLLGH@?$FLNEWLINE?$FN?$FLNEWLINE?$FN?$AA@ DB '[NEWLINE][NEWL'
	DB	'INE]', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@JEIAPGCG@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DI@JEIAPGCG@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_COMPLETE_TRADE_ROUTE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@MENAOIK@TXT_KEY_NOTIFICATION_QUEST_COMPL@
CONST	SEGMENT
??_C@_0DA@MENAOIK@TXT_KEY_NOTIFICATION_QUEST_COMPL@ DB 'TXT_KEY_NOTIFICAT'
	DB	'ION_QUEST_COMPLETE_TRADE_ROUTE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@KNAPHEH@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DM@KNAPHEH@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICAT'
	DB	'ION_SUMMARY_QUEST_COMPLETE_SPREAD_RELIGION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@DGDKMBOH@TXT_KEY_NOTIFICATION_QUEST_COMPL@
CONST	SEGMENT
??_C@_0DE@DGDKMBOH@TXT_KEY_NOTIFICATION_QUEST_COMPL@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_COMPLETE_SPREAD_RELIGION', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07BCHCBILN@Atheism?$AA@
CONST	SEGMENT
??_C@_07BCHCBILN@Atheism?$AA@ DB 'Atheism', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@LMELAEEN@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DL@LMELAEEN@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_COMPLETE_DENOUNCE_MAJOR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@FFJJHFGJ@TXT_KEY_NOTIFICATION_QUEST_COMPL@
CONST	SEGMENT
??_C@_0DD@FFJJHFGJ@TXT_KEY_NOTIFICATION_QUEST_COMPL@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_COMPLETE_DENOUNCE_MAJOR', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@BKMONKCC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DN@BKMONKCC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_COMPLETE_BULLY_CITY_STATE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@MMCEJDPM@TXT_KEY_NOTIFICATION_QUEST_COMPL@
CONST	SEGMENT
??_C@_0DF@MMCEJDPM@TXT_KEY_NOTIFICATION_QUEST_COMPL@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_COMPLETE_BULLY_CITY_STATE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@CMGLGCBM@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DD@CMGLGCBM@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_COMPLETE_INVEST', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@IFIPAOEM@TXT_KEY_NOTIFICATION_QUEST_COMPL@
CONST	SEGMENT
??_C@_0CL@IFIPAOEM@TXT_KEY_NOTIFICATION_QUEST_COMPL@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_COMPLETE_INVEST', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@KABLMNMG@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DK@KABLMNMG@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_COMPLETE_CONTEST_TECHS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@BBMPNMMA@TXT_KEY_NOTIFICATION_QUEST_COMPL@
CONST	SEGMENT
??_C@_0DC@BBMPNMMA@TXT_KEY_NOTIFICATION_QUEST_COMPL@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_COMPLETE_CONTEST_TECHS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@MIDCLJHM@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DK@MIDCLJHM@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_COMPLETE_CONTEST_FAITH', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@HJOGKIHK@TXT_KEY_NOTIFICATION_QUEST_COMPL@
CONST	SEGMENT
??_C@_0DC@HJOGKIHK@TXT_KEY_NOTIFICATION_QUEST_COMPL@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_COMPLETE_CONTEST_FAITH', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@PKMOBMDG@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DM@PKMOBMDG@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_COMPLETE_CONTEST_CULTURE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@MGCECKJG@TXT_KEY_NOTIFICATION_QUEST_COMPL@
CONST	SEGMENT
??_C@_0DE@MGCECKJG@TXT_KEY_NOTIFICATION_QUEST_COMPL@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_COMPLETE_CONTEST_CULTURE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@PFPEMDMC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DO@PFPEMDMC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_COMPLETE_PLEDGE_TO_PROTECT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@JEEJNGFI@TXT_KEY_NOTIFICATION_QUEST_COMPL@
CONST	SEGMENT
??_C@_0DG@JEEJNGFI@TXT_KEY_NOTIFICATION_QUEST_COMPL@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_COMPLETE_PLEDGE_TO_PROTECT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@JMFPCNFA@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DG@JMFPCNFA@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_COMPLETE_GIVE_GOLD', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@JOMMABID@TXT_KEY_NOTIFICATION_QUEST_COMPL@
CONST	SEGMENT
??_C@_0CO@JOMMABID@TXT_KEY_NOTIFICATION_QUEST_COMPL@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_COMPLETE_GIVE_GOLD', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@IBLIKFHJ@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0EA@IBLIKFHJ@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_COMPLETE_FIND_NATURAL_WONDER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@GHMLECLP@TXT_KEY_NOTIFICATION_QUEST_COMPL@
CONST	SEGMENT
??_C@_0DI@GHMLECLP@TXT_KEY_NOTIFICATION_QUEST_COMPL@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_COMPLETE_FIND_NATURAL_WONDER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@MHBBOPKO@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DI@MHBBOPKO@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_COMPLETE_FIND_PLAYER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@FPNMBHAC@TXT_KEY_NOTIFICATION_QUEST_COMPL@
CONST	SEGMENT
??_C@_0DA@FPNMBHAC@TXT_KEY_NOTIFICATION_QUEST_COMPL@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_COMPLETE_FIND_PLAYER', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@NMOMMNNL@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DM@NMOMMNNL@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_COMPLETE_KILL_CITY_STATE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@OAAGPLHL@TXT_KEY_NOTIFICATION_QUEST_COMPL@
CONST	SEGMENT
??_C@_0DE@OAAGPLHL@TXT_KEY_NOTIFICATION_QUEST_COMPL@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_COMPLETE_KILL_CITY_STATE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@EMIBBAFA@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DJ@EMIBBAFA@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_COMPLETE_GREAT_PERSON', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@JDHJDCGL@TXT_KEY_NOTIFICATION_QUEST_COMPL@
CONST	SEGMENT
??_C@_0DB@JDHJDCGL@TXT_KEY_NOTIFICATION_QUEST_COMPL@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_COMPLETE_GREAT_PERSON', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@BLMDOEMJ@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DN@BLMDOEMJ@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_COMPLETE_CONSTRUCT_WONDER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@MNCJKNBH@TXT_KEY_NOTIFICATION_QUEST_COMPL@
CONST	SEGMENT
??_C@_0DF@MNCJKNBH@TXT_KEY_NOTIFICATION_QUEST_COMPL@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_COMPLETE_CONSTRUCT_WONDER', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@MBNJOOBK@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DN@MBNJOOBK@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_COMPLETE_CONNECT_RESOURCE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@BHDDKHME@TXT_KEY_NOTIFICATION_QUEST_COMPL@
CONST	SEGMENT
??_C@_0DF@BHDDKHME@TXT_KEY_NOTIFICATION_QUEST_COMPL@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_COMPLETE_CONNECT_RESOURCE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@MELDMJHP@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DG@MELDMJHP@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_COMPLETE_KILL_CAMP', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@MGCAOFKM@TXT_KEY_NOTIFICATION_QUEST_COMPL@
CONST	SEGMENT
??_C@_0CO@MGCAOFKM@TXT_KEY_NOTIFICATION_QUEST_COMPL@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_COMPLETE_KILL_CAMP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@KGEFMFOO@TXT_KEY_NOTIFICATION_SUMMARY_MIN@
CONST	SEGMENT
??_C@_0DE@KGEFMFOO@TXT_KEY_NOTIFICATION_SUMMARY_MIN@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_MINOR_ROUTE_CONNECTION', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@MNIHHAHG@TXT_KEY_NOTIFICATION_MINOR_ROUTE@
CONST	SEGMENT
??_C@_0CM@MNIHHAHG@TXT_KEY_NOTIFICATION_MINOR_ROUTE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_ROUTE_CONNECTION', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ DD 019930522H
	DD	037H
	DD	FLAT:__unwindtable$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$3
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$4
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$5
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$6
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$7
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$8
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$9
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$10
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$11
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$12
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$13
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$14
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$15
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$16
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$17
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$18
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$19
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$20
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$21
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$22
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$23
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$24
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$25
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$26
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$27
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$28
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$29
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$30
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$31
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$32
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$33
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$34
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$35
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$36
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$37
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$38
	DD	026H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$39
	DD	026H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$40
	DD	026H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$41
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$42
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$43
	DD	02H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$44
	DD	02cH
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$45
	DD	02dH
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$46
	DD	02dH
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$47
	DD	02fH
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$48
	DD	02dH
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$49
	DD	031H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$50
	DD	032H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$51
	DD	02dH
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$65
	DD	02dH
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$52
	DD	035H
	DD	FLAT:__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$53
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ
_TEXT	SEGMENT
tv1022 = -5136						; size = 4
tv1019 = -5132						; size = 4
tv1619 = -5128						; size = 4
tv1011 = -5124						; size = 4
tv849 = -5120						; size = 4
tv1618 = -5116						; size = 4
tv1006 = -5112						; size = 4
tv1004 = -5108						; size = 4
tv1003 = -5104						; size = 4
tv1616 = -5100						; size = 4
tv1402 = -5096						; size = 4
tv1389 = -5092						; size = 4
tv767 = -5088						; size = 4
tv999 = -5084						; size = 4
tv1615 = -5080						; size = 4
tv997 = -5076						; size = 4
tv1614 = -5072						; size = 4
tv995 = -5068						; size = 4
tv1613 = -5064						; size = 4
tv993 = -5060						; size = 4
tv1612 = -5056						; size = 4
tv1611 = -5052						; size = 4
tv1349 = -5048						; size = 4
tv988 = -5044						; size = 4
tv1610 = -5040						; size = 4
tv986 = -5036						; size = 4
tv1609 = -5032						; size = 4
tv984 = -5028						; size = 4
tv1608 = -5024						; size = 4
tv982 = -5020						; size = 4
tv1607 = -5016						; size = 4
tv980 = -5012						; size = 4
tv1606 = -5008						; size = 4
tv978 = -5004						; size = 4
tv1605 = -5000						; size = 4
tv976 = -4996						; size = 4
tv1604 = -4992						; size = 4
tv974 = -4988						; size = 4
tv1603 = -4984						; size = 4
tv972 = -4980						; size = 4
tv1602 = -4976						; size = 4
tv970 = -4972						; size = 4
tv1601 = -4968						; size = 4
tv968 = -4964						; size = 4
tv1600 = -4960						; size = 4
tv966 = -4956						; size = 4
tv1567 = -4952						; size = 4
tv964 = -4948						; size = 4
tv1558 = -4944						; size = 4
tv962 = -4940						; size = 4
tv1560 = -4936						; size = 4
tv960 = -4932						; size = 4
tv1559 = -4928						; size = 4
tv958 = -4924						; size = 4
tv1539 = -4920						; size = 4
tv956 = -4916						; size = 4
tv1551 = -4912						; size = 4
tv954 = -4908						; size = 4
tv1545 = -4904						; size = 4
tv952 = -4900						; size = 4
tv1538 = -4896						; size = 4
tv950 = -4892						; size = 4
tv1540 = -4888						; size = 4
tv948 = -4884						; size = 4
tv1553 = -4880						; size = 4
tv946 = -4876						; size = 4
tv1564 = -4872						; size = 4
tv944 = -4868						; size = 4
tv1565 = -4864						; size = 4
tv942 = -4860						; size = 4
tv1566 = -4856						; size = 4
tv940 = -4852						; size = 4
tv1561 = -4848						; size = 4
tv938 = -4844						; size = 4
tv1562 = -4840						; size = 4
tv936 = -4836						; size = 4
tv1563 = -4832						; size = 4
tv934 = -4828						; size = 4
tv1357 = -4824						; size = 4
tv932 = -4820						; size = 4
tv1387 = -4816						; size = 4
tv930 = -4812						; size = 4
tv1400 = -4808						; size = 4
tv928 = -4804						; size = 4
tv1495 = -4800						; size = 4
tv926 = -4796						; size = 4
tv1514 = -4792						; size = 4
tv924 = -4788						; size = 4
tv167 = -4784						; size = 4
tv922 = -4780						; size = 4
tv170 = -4776						; size = 4
tv920 = -4772						; size = 4
tv173 = -4768						; size = 4
_this$ = -4764						; size = 4
$T236381 = -4748					; size = 4
$T236376 = -4744					; size = 4
$T236361 = -4740					; size = 4
$T236353 = -4736					; size = 4
$T236345 = -4732					; size = 4
$T236322 = -4712					; size = 4
$T236318 = -4708					; size = 4
$T236309 = -4704					; size = 4
$T236300 = -4700					; size = 4
$T236296 = -4696					; size = 4
$T236284 = -4692					; size = 4
$T236280 = -4688					; size = 4
$T236268 = -4684					; size = 4
$T236264 = -4680					; size = 4
$T236179 = -4604					; size = 4
$T236175 = -4600					; size = 4
$T236171 = -4596					; size = 4
$T236167 = -4592					; size = 4
$T236163 = -4588					; size = 4
$T236159 = -4584					; size = 4
$T236155 = -4580					; size = 4
$T236082 = -4565					; size = 1
$T236081 = -4564					; size = 4
$T236080 = -4560					; size = 4
$T236079 = -4556					; size = 28
$T236078 = -4528					; size = 28
$T236077 = -4500					; size = 28
$T236076 = -4472					; size = 28
$T236075 = -4444					; size = 4
$T236074 = -4440					; size = 4
$T236073 = -4436					; size = 4
$T236072 = -4432					; size = 80
$T236071 = -4352					; size = 80
$T236070 = -4272					; size = 4
$T236069 = -4268					; size = 80
$T236068 = -4188					; size = 4
$T236067 = -4184					; size = 80
$T236066 = -4104					; size = 28
$T236065 = -4076					; size = 80
$T236064 = -3996					; size = 80
$T236063 = -3916					; size = 80
$T236062 = -3836					; size = 80
$T236061 = -3756					; size = 80
$T236060 = -3676					; size = 80
$T236059 = -3596					; size = 272
$T236058 = -3324					; size = 80
$T236057 = -3244					; size = 80
$T236056 = -3164					; size = 272
$T236055 = -2892					; size = 80
$T236054 = -2812					; size = 80
$T236053 = -2732					; size = 272
$T236052 = -2460					; size = 80
$T236051 = -2380					; size = 80
$T236050 = -2300					; size = 80
$T236049 = -2220					; size = 80
$T236048 = -2140					; size = 80
$T236047 = -2060					; size = 80
$T236046 = -1980					; size = 80
$T236045 = -1900					; size = 80
$T236044 = -1820					; size = 80
$T236043 = -1740					; size = 80
$T236042 = -1660					; size = 80
$T236041 = -1580					; size = 80
$T236040 = -1500					; size = 80
$T236039 = -1420					; size = 80
$T236038 = -1340					; size = 80
$T236037 = -1260					; size = 80
$T236036 = -1180					; size = 80
$T236035 = -1100					; size = 80
$T236034 = -1020					; size = 80
$T236033 = -940						; size = 80
$T236032 = -860						; size = 80
$T236031 = -780						; size = 80
_statusChangeStrings$221680 = -700			; size = 56
_pReligion$221622 = -644				; size = 4
_eReligion$221617 = -640				; size = 4
_strReligionKey$221619 = -636				; size = 28
_eTargetMajor$221607 = -608				; size = 4
_strCivKey$221609 = -604				; size = 4
_strCivKey$221599 = -600				; size = 4
_eTargetMinor$221597 = -596				; size = 4
_eMostRecentBully$221560 = -592				; size = 4
_strCivKey$221562 = -588				; size = 4
_eMostRecentBully$221550 = -584				; size = 4
_strCivKey$221552 = -580				; size = 4
_ePlayerFound$221535 = -576				; size = 4
_strCivKey$221537 = -572				; size = 4
_eTargetCityState$221526 = -568				; size = 4
_strTargetNameKey$221528 = -564				; size = 4
_eUnit$221517 = -560					; size = 4
_strUnitName$221519 = -556				; size = 4
_eWonder$221508 = -552					; size = 4
_strBuildingName$221510 = -548				; size = 4
_eResource$221499 = -544				; size = 4
_strResourceName$221501 = -540				; size = 4
_eNewAlly$ = -536					; size = 4
_veNamesToShow$ = -532					; size = 272
_sSummary$ = -260					; size = 28
_iInfChange$ = -232					; size = 4
_iOldInf$ = -228					; size = 4
_bNowAllies$ = -222					; size = 1
_bNowFriends$ = -221					; size = 1
_sMessage$ = -220					; size = 28
__$ArrayPad$ = -192					; size = 4
_strMessage$ = -188					; size = 80
_strSummary$ = -108					; size = 80
_pMinor$ = -28						; size = 4
_eOldAlly$ = -24					; size = 4
_iNewInf$ = -20						; size = 4
_bWasFriends$ = -14					; size = 1
_bWasAllies$ = -13					; size = 1
__$EHRec$ = -12						; size = 12
?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ PROC		; CvMinorCivQuest::DoFinishQuest, COMDAT
; _this$ = ecx

; 1208 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 5124				; 00001404H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1209 : 	if (!IsComplete())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsComplete@CvMinorCivQuest@@QAE_NXZ	; CvMinorCivQuest::IsComplete
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN47@DoFinishQu

; 1210 : 		return false;

	xor	al, al
	jmp	$LN48@DoFinishQu
$LN47@DoFinishQu:

; 1211 : 
; 1212 : 	if (IsHandled())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsHandled@CvMinorCivQuest@@QAE_NXZ	; CvMinorCivQuest::IsHandled
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN46@DoFinishQu

; 1213 : 		return false;

	xor	al, al
	jmp	$LN48@DoFinishQu
$LN46@DoFinishQu:

; 1214 : 
; 1215 : 	SetHandled(true); // We are handling the end of the quest, and this should only happen once

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetHandled@CvMinorCivQuest@@QAEX_N@Z	; CvMinorCivQuest::SetHandled

; 1216 : 
; 1217 : 	CvPlayer* pMinor = &GET_PLAYER(m_eMinor);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pMinor$[ebp], eax

; 1218 : 
; 1219 : 	bool bWasFriends = pMinor->GetMinorCivAI()->IsFriends(m_eAssignedPlayer);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	mov	BYTE PTR _bWasFriends$[ebp], al

; 1220 : 	bool bWasAllies = pMinor->GetMinorCivAI()->IsAllies(m_eAssignedPlayer);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAllies
	mov	BYTE PTR _bWasAllies$[ebp], al

; 1221 : 	PlayerTypes eOldAlly = pMinor->GetMinorCivAI()->GetAlly();

	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetAlly
	mov	DWORD PTR _eOldAlly$[ebp], eax

; 1222 : 	int iOldInf = pMinor->GetMinorCivAI()->GetEffectiveFriendshipWithMajor(m_eAssignedPlayer);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetEffectiveFriendshipWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajor
	mov	DWORD PTR _iOldInf$[ebp], eax

; 1223 : 
; 1224 : 	pMinor->GetMinorCivAI()->ChangeFriendshipWithMajor(m_eAssignedPlayer, GetInfluenceReward(), /*bFromQuest*/ true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetInfluenceReward@CvMinorCivQuest@@QBEHXZ ; CvMinorCivQuest::GetInfluenceReward
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?ChangeFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::ChangeFriendshipWithMajor

; 1225 : 	
; 1226 : 	bool bNowFriends = pMinor->GetMinorCivAI()->IsFriends(m_eAssignedPlayer);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	mov	BYTE PTR _bNowFriends$[ebp], al

; 1227 : 	bool bNowAllies = pMinor->GetMinorCivAI()->IsAllies(m_eAssignedPlayer);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAllies
	mov	BYTE PTR _bNowAllies$[ebp], al

; 1228 : 	PlayerTypes eNewAlly = pMinor->GetMinorCivAI()->GetAlly();

	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetAlly
	mov	DWORD PTR _eNewAlly$[ebp], eax

; 1229 : 	int iNewInf = pMinor->GetMinorCivAI()->GetEffectiveFriendshipWithMajor(m_eAssignedPlayer);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetEffectiveFriendshipWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajor
	mov	DWORD PTR _iNewInf$[ebp], eax

; 1230 : 	int iInfChange = iNewInf - iOldInf;

	mov	eax, DWORD PTR _iNewInf$[ebp]
	sub	eax, DWORD PTR _iOldInf$[ebp]
	mov	DWORD PTR _iInfChange$[ebp], eax

; 1231 : 
; 1232 : 	Localization::String strMessage;

	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1233 : 	Localization::String strSummary;

	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 1234 : 	CivsList veNamesToShow;

	lea	ecx, DWORD PTR _veNamesToShow$[ebp]
	call	??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::FStaticVector<enum PlayerTypes,64,1,297,0>
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 1235 : 
; 1236 : 	// BUILD A ROUTE
; 1237 : 	if(m_eType == MINOR_CIV_QUEST_ROUTE)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jne	$LN45@DoFinishQu

; 1238 : 	{
; 1239 : 		// Route exists!
; 1240 : 		pMinor->GetMinorCivAI()->SetRouteConnectionEstablished(m_eAssignedPlayer, true);

	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?SetRouteConnectionEstablished@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z ; CvMinorCivAI::SetRouteConnectionEstablished

; 1241 : 
; 1242 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_ROUTE_CONNECTION");

	push	OFFSET ??_C@_0CM@MNIHHAHG@TXT_KEY_NOTIFICATION_MINOR_ROUTE@
	lea	ecx, DWORD PTR $T236031[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv173[ebp], eax
	mov	edx, DWORD PTR tv173[ebp]
	mov	DWORD PTR tv920[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv920[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236031[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1243 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_MINOR_ROUTE_CONNECTION");

	push	OFFSET ??_C@_0DE@KGEFMFOO@TXT_KEY_NOTIFICATION_SUMMARY_MIN@
	lea	ecx, DWORD PTR $T236032[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv170[ebp], eax
	mov	edx, DWORD PTR tv170[ebp]
	mov	DWORD PTR tv922[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR tv922[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236032[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN44@DoFinishQu
$LN45@DoFinishQu:

; 1244 : 	}
; 1245 : 
; 1246 : 	// KILL A CAMP
; 1247 : 	else if(m_eType == MINOR_CIV_QUEST_KILL_CAMP)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 1
	jne	$LN43@DoFinishQu

; 1248 : 	{
; 1249 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_COMPLETE_KILL_CAMP");

	push	OFFSET ??_C@_0CO@MGCAOFKM@TXT_KEY_NOTIFICATION_QUEST_COMPL@
	lea	edx, DWORD PTR $T236033[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv167[ebp], eax
	mov	eax, DWORD PTR tv167[ebp]
	mov	DWORD PTR tv924[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv924[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236033[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1250 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_COMPLETE_KILL_CAMP");

	push	OFFSET ??_C@_0DG@MELDMJHP@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	edx, DWORD PTR $T236034[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1514[ebp], eax
	mov	eax, DWORD PTR tv1514[ebp]
	mov	DWORD PTR tv926[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR tv926[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236034[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN44@DoFinishQu
$LN43@DoFinishQu:

; 1251 : 	}
; 1252 : 
; 1253 : 	// CONNECT A RESOURCE
; 1254 : 	else if(m_eType == MINOR_CIV_QUEST_CONNECT_RESOURCE)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 2
	jne	$LN41@DoFinishQu

; 1255 : 	{
; 1256 : 		ResourceTypes eResource = (ResourceTypes) GetPrimaryData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPrimaryData@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetPrimaryData
	mov	DWORD PTR _eResource$221499[ebp], eax

; 1257 : 		const char* strResourceName = GC.getResourceInfo(eResource)->GetDescriptionKey();

	mov	eax, DWORD PTR _eResource$221499[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	DWORD PTR $T236155[ebp], eax
	mov	ecx, DWORD PTR $T236155[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR _strResourceName$221501[ebp], eax

; 1258 : 
; 1259 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_COMPLETE_CONNECT_RESOURCE");

	push	OFFSET ??_C@_0DF@BHDDKHME@TXT_KEY_NOTIFICATION_QUEST_COMPL@
	lea	ecx, DWORD PTR $T236035[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1495[ebp], eax
	mov	edx, DWORD PTR tv1495[ebp]
	mov	DWORD PTR tv928[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR tv928[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236035[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1260 : 		strMessage << strResourceName;

	lea	ecx, DWORD PTR _strResourceName$221501[ebp]
	push	ecx
	lea	edx, DWORD PTR _strMessage$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1261 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_COMPLETE_CONNECT_RESOURCE");

	push	OFFSET ??_C@_0DN@MBNJOOBK@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	eax, DWORD PTR $T236036[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1400[ebp], eax
	mov	ecx, DWORD PTR tv1400[ebp]
	mov	DWORD PTR tv930[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	edx, DWORD PTR tv930[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236036[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1262 : 		strSummary << strResourceName;

	lea	eax, DWORD PTR _strResourceName$221501[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	jmp	$LN44@DoFinishQu
$LN41@DoFinishQu:

; 1263 : 	}
; 1264 : 
; 1265 : 	// CONSTRUCT A WONDER
; 1266 : 	else if(m_eType == MINOR_CIV_QUEST_CONSTRUCT_WONDER)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 3
	jne	$LN39@DoFinishQu

; 1267 : 	{
; 1268 : 		BuildingTypes eWonder = (BuildingTypes) GetPrimaryData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPrimaryData@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetPrimaryData
	mov	DWORD PTR _eWonder$221508[ebp], eax

; 1269 : 		const char* strBuildingName = GC.getBuildingInfo(eWonder)->GetDescriptionKey();

	mov	eax, DWORD PTR _eWonder$221508[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR $T236159[ebp], eax
	mov	ecx, DWORD PTR $T236159[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR _strBuildingName$221510[ebp], eax

; 1270 : 
; 1271 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_COMPLETE_CONSTRUCT_WONDER");

	push	OFFSET ??_C@_0DF@MNCJKNBH@TXT_KEY_NOTIFICATION_QUEST_COMPL@
	lea	ecx, DWORD PTR $T236037[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1387[ebp], eax
	mov	edx, DWORD PTR tv1387[ebp]
	mov	DWORD PTR tv932[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	eax, DWORD PTR tv932[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236037[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1272 : 		strMessage << strBuildingName;

	lea	ecx, DWORD PTR _strBuildingName$221510[ebp]
	push	ecx
	lea	edx, DWORD PTR _strMessage$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1273 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_COMPLETE_CONSTRUCT_WONDER");

	push	OFFSET ??_C@_0DN@BLMDOEMJ@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	eax, DWORD PTR $T236038[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1357[ebp], eax
	mov	ecx, DWORD PTR tv1357[ebp]
	mov	DWORD PTR tv934[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	edx, DWORD PTR tv934[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236038[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1274 : 		strSummary << strBuildingName;

	lea	eax, DWORD PTR _strBuildingName$221510[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	jmp	$LN44@DoFinishQu
$LN39@DoFinishQu:

; 1275 : 	}
; 1276 : 
; 1277 : 	// GREAT PERSON
; 1278 : 	else if(m_eType == MINOR_CIV_QUEST_GREAT_PERSON)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 4
	jne	$LN37@DoFinishQu

; 1279 : 	{
; 1280 : 		UnitTypes eUnit = (UnitTypes) GetPrimaryData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPrimaryData@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetPrimaryData
	mov	DWORD PTR _eUnit$221517[ebp], eax

; 1281 : 		const char* strUnitName = GC.getUnitInfo(eUnit)->GetDescriptionKey();

	mov	eax, DWORD PTR _eUnit$221517[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	DWORD PTR $T236163[ebp], eax
	mov	ecx, DWORD PTR $T236163[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR _strUnitName$221519[ebp], eax

; 1282 : 
; 1283 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_COMPLETE_GREAT_PERSON");

	push	OFFSET ??_C@_0DB@JDHJDCGL@TXT_KEY_NOTIFICATION_QUEST_COMPL@
	lea	ecx, DWORD PTR $T236039[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1563[ebp], eax
	mov	edx, DWORD PTR tv1563[ebp]
	mov	DWORD PTR tv936[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	eax, DWORD PTR tv936[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236039[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1284 : 		strMessage << strUnitName;

	lea	ecx, DWORD PTR _strUnitName$221519[ebp]
	push	ecx
	lea	edx, DWORD PTR _strMessage$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1285 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_COMPLETE_GREAT_PERSON");

	push	OFFSET ??_C@_0DJ@EMIBBAFA@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	eax, DWORD PTR $T236040[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1562[ebp], eax
	mov	ecx, DWORD PTR tv1562[ebp]
	mov	DWORD PTR tv938[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	edx, DWORD PTR tv938[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236040[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1286 : 		strSummary << strUnitName;

	lea	eax, DWORD PTR _strUnitName$221519[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	jmp	$LN44@DoFinishQu
$LN37@DoFinishQu:

; 1287 : 	}
; 1288 : 
; 1289 : 	// KILL ANOTHER CITY STATE
; 1290 : 	else if(m_eType == MINOR_CIV_QUEST_KILL_CITY_STATE)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 5
	jne	$LN35@DoFinishQu

; 1291 : 	{
; 1292 : 		PlayerTypes eTargetCityState = (PlayerTypes) GetPrimaryData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPrimaryData@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetPrimaryData
	mov	DWORD PTR _eTargetCityState$221526[ebp], eax

; 1293 : 		const char* strTargetNameKey = GET_PLAYER(eTargetCityState).getNameKey();

	mov	eax, DWORD PTR _eTargetCityState$221526[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T236167[ebp], eax
	mov	ecx, DWORD PTR $T236167[ebp]
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR _strTargetNameKey$221528[ebp], eax

; 1294 : 
; 1295 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_COMPLETE_KILL_CITY_STATE");

	push	OFFSET ??_C@_0DE@OAAGPLHL@TXT_KEY_NOTIFICATION_QUEST_COMPL@
	lea	ecx, DWORD PTR $T236041[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1561[ebp], eax
	mov	edx, DWORD PTR tv1561[ebp]
	mov	DWORD PTR tv940[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	eax, DWORD PTR tv940[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236041[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1296 : 		strMessage << strTargetNameKey;

	lea	ecx, DWORD PTR _strTargetNameKey$221528[ebp]
	push	ecx
	lea	edx, DWORD PTR _strMessage$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1297 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_COMPLETE_KILL_CITY_STATE");

	push	OFFSET ??_C@_0DM@NMOMMNNL@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	eax, DWORD PTR $T236042[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1566[ebp], eax
	mov	ecx, DWORD PTR tv1566[ebp]
	mov	DWORD PTR tv942[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	edx, DWORD PTR tv942[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236042[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1298 : 		strSummary << strTargetNameKey;

	lea	eax, DWORD PTR _strTargetNameKey$221528[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	jmp	$LN44@DoFinishQu
$LN35@DoFinishQu:

; 1299 : 	}
; 1300 : 
; 1301 : 	// FIND ANOTHER PLAYER
; 1302 : 	else if(m_eType == MINOR_CIV_QUEST_FIND_PLAYER)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 6
	jne	$LN33@DoFinishQu

; 1303 : 	{
; 1304 : 		PlayerTypes ePlayerFound = (PlayerTypes) GetPrimaryData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPrimaryData@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetPrimaryData
	mov	DWORD PTR _ePlayerFound$221535[ebp], eax

; 1305 : 		const char* strCivKey = GET_PLAYER(ePlayerFound).getCivilizationShortDescriptionKey();

	mov	eax, DWORD PTR _ePlayerFound$221535[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T236171[ebp], eax
	mov	ecx, DWORD PTR $T236171[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR _strCivKey$221537[ebp], eax

; 1306 : 
; 1307 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_COMPLETE_FIND_PLAYER");

	push	OFFSET ??_C@_0DA@FPNMBHAC@TXT_KEY_NOTIFICATION_QUEST_COMPL@
	lea	ecx, DWORD PTR $T236043[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1565[ebp], eax
	mov	edx, DWORD PTR tv1565[ebp]
	mov	DWORD PTR tv944[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	eax, DWORD PTR tv944[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236043[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1308 : 		strMessage << strCivKey;

	lea	ecx, DWORD PTR _strCivKey$221537[ebp]
	push	ecx
	lea	edx, DWORD PTR _strMessage$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1309 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_COMPLETE_FIND_PLAYER");

	push	OFFSET ??_C@_0DI@MHBBOPKO@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	eax, DWORD PTR $T236044[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1564[ebp], eax
	mov	ecx, DWORD PTR tv1564[ebp]
	mov	DWORD PTR tv946[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	edx, DWORD PTR tv946[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236044[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1310 : 		strSummary << strCivKey;

	lea	eax, DWORD PTR _strCivKey$221537[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	jmp	$LN44@DoFinishQu
$LN33@DoFinishQu:

; 1311 : 	}
; 1312 : 
; 1313 : 	// FIND NATURAL WONDER
; 1314 : 	else if(m_eType == MINOR_CIV_QUEST_FIND_NATURAL_WONDER)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 7
	jne	$LN31@DoFinishQu

; 1315 : 	{
; 1316 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_COMPLETE_FIND_NATURAL_WONDER");

	push	OFFSET ??_C@_0DI@GHMLECLP@TXT_KEY_NOTIFICATION_QUEST_COMPL@
	lea	eax, DWORD PTR $T236045[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1553[ebp], eax
	mov	ecx, DWORD PTR tv1553[ebp]
	mov	DWORD PTR tv948[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	edx, DWORD PTR tv948[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236045[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1317 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_COMPLETE_FIND_NATURAL_WONDER");

	push	OFFSET ??_C@_0EA@IBLIKFHJ@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	eax, DWORD PTR $T236046[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1540[ebp], eax
	mov	ecx, DWORD PTR tv1540[ebp]
	mov	DWORD PTR tv950[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	mov	edx, DWORD PTR tv950[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236046[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN44@DoFinishQu
$LN31@DoFinishQu:

; 1318 : 	}
; 1319 : 
; 1320 : 	// Give gold
; 1321 : 	else if(m_eType == MINOR_CIV_QUEST_GIVE_GOLD)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 8
	jne	$LN29@DoFinishQu

; 1322 : 	{
; 1323 : 		PlayerTypes eMostRecentBully = (PlayerTypes) GetPrimaryData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPrimaryData@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetPrimaryData
	mov	DWORD PTR _eMostRecentBully$221550[ebp], eax

; 1324 : 		const char* strCivKey = "Nobody";

	mov	DWORD PTR _strCivKey$221552[ebp], OFFSET ??_C@_06LOJBPBBB@Nobody?$AA@

; 1325 : 		if(eMostRecentBully != NO_PLAYER)

	cmp	DWORD PTR _eMostRecentBully$221550[ebp], -1
	je	SHORT $LN28@DoFinishQu

; 1326 : 			strCivKey = GET_PLAYER(eMostRecentBully).getCivilizationShortDescriptionKey();

	mov	ecx, DWORD PTR _eMostRecentBully$221550[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T236175[ebp], ecx
	mov	ecx, DWORD PTR $T236175[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR _strCivKey$221552[ebp], eax
$LN28@DoFinishQu:

; 1327 : 
; 1328 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_COMPLETE_GIVE_GOLD");

	push	OFFSET ??_C@_0CO@JOMMABID@TXT_KEY_NOTIFICATION_QUEST_COMPL@
	lea	edx, DWORD PTR $T236047[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1538[ebp], eax
	mov	eax, DWORD PTR tv1538[ebp]
	mov	DWORD PTR tv952[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	mov	ecx, DWORD PTR tv952[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236047[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1329 : 		strMessage << strCivKey;

	lea	edx, DWORD PTR _strCivKey$221552[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1330 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_COMPLETE_GIVE_GOLD");

	push	OFFSET ??_C@_0DG@JMFPCNFA@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	ecx, DWORD PTR $T236048[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1545[ebp], eax
	mov	edx, DWORD PTR tv1545[ebp]
	mov	DWORD PTR tv954[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	mov	eax, DWORD PTR tv954[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236048[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN44@DoFinishQu
$LN29@DoFinishQu:

; 1331 : 	}
; 1332 : 
; 1333 : 	// Pledge to protect
; 1334 : 	else if(m_eType == MINOR_CIV_QUEST_PLEDGE_TO_PROTECT)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 9
	jne	$LN26@DoFinishQu

; 1335 : 	{
; 1336 : 		PlayerTypes eMostRecentBully = (PlayerTypes) GetPrimaryData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPrimaryData@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetPrimaryData
	mov	DWORD PTR _eMostRecentBully$221560[ebp], eax

; 1337 : 		const char* strCivKey = "Nobody";

	mov	DWORD PTR _strCivKey$221562[ebp], OFFSET ??_C@_06LOJBPBBB@Nobody?$AA@

; 1338 : 		if(eMostRecentBully != NO_PLAYER)

	cmp	DWORD PTR _eMostRecentBully$221560[ebp], -1
	je	SHORT $LN25@DoFinishQu

; 1339 : 			strCivKey = GET_PLAYER(eMostRecentBully).getCivilizationShortDescriptionKey();

	mov	edx, DWORD PTR _eMostRecentBully$221560[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T236179[ebp], edx
	mov	ecx, DWORD PTR $T236179[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR _strCivKey$221562[ebp], eax
$LN25@DoFinishQu:

; 1340 : 
; 1341 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_COMPLETE_PLEDGE_TO_PROTECT");

	push	OFFSET ??_C@_0DG@JEEJNGFI@TXT_KEY_NOTIFICATION_QUEST_COMPL@
	lea	eax, DWORD PTR $T236049[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1551[ebp], eax
	mov	ecx, DWORD PTR tv1551[ebp]
	mov	DWORD PTR tv956[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	mov	edx, DWORD PTR tv956[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236049[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1342 : 		strMessage << strCivKey;

	lea	eax, DWORD PTR _strCivKey$221562[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1343 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_COMPLETE_PLEDGE_TO_PROTECT");

	push	OFFSET ??_C@_0DO@PFPEMDMC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	edx, DWORD PTR $T236050[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1539[ebp], eax
	mov	eax, DWORD PTR tv1539[ebp]
	mov	DWORD PTR tv958[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	mov	ecx, DWORD PTR tv958[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236050[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN44@DoFinishQu
$LN26@DoFinishQu:

; 1344 : 	}
; 1345 : 
; 1346 : 	// Culture contest
; 1347 : 	else if(m_eType == MINOR_CIV_QUEST_CONTEST_CULTURE)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 10			; 0000000aH
	jne	$LN23@DoFinishQu

; 1348 : 	{
; 1349 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_COMPLETE_CONTEST_CULTURE");

	push	OFFSET ??_C@_0DE@MGCECKJG@TXT_KEY_NOTIFICATION_QUEST_COMPL@
	lea	eax, DWORD PTR $T236051[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1559[ebp], eax
	mov	ecx, DWORD PTR tv1559[ebp]
	mov	DWORD PTR tv960[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	edx, DWORD PTR tv960[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236051[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1350 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_COMPLETE_CONTEST_CULTURE");

	push	OFFSET ??_C@_0DM@PKMOBMDG@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	eax, DWORD PTR $T236052[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1560[ebp], eax
	mov	ecx, DWORD PTR tv1560[ebp]
	mov	DWORD PTR tv962[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	mov	edx, DWORD PTR tv962[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236052[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1351 : 		veNamesToShow = GetContestLeaders();

	lea	eax, DWORD PTR $T236053[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetContestLeaders@CvMinorCivQuest@@QAE?AV?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@XZ ; CvMinorCivQuest::GetContestLeaders
	mov	DWORD PTR tv1558[ebp], eax
	mov	ecx, DWORD PTR tv1558[ebp]
	mov	DWORD PTR tv964[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	mov	edx, DWORD PTR tv964[ebp]
	push	edx
	lea	ecx, DWORD PTR _veNamesToShow$[ebp]
	call	??4?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAEXABV0@@Z ; FStaticVector<enum PlayerTypes,64,1,297,0>::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236053[ebp]
	call	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
	jmp	$LN44@DoFinishQu
$LN23@DoFinishQu:

; 1352 : 	}
; 1353 : 
; 1354 : 	// Faith contest
; 1355 : 	else if(m_eType == MINOR_CIV_QUEST_CONTEST_FAITH)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 11			; 0000000bH
	jne	$LN21@DoFinishQu

; 1356 : 	{
; 1357 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_COMPLETE_CONTEST_FAITH");

	push	OFFSET ??_C@_0DC@HJOGKIHK@TXT_KEY_NOTIFICATION_QUEST_COMPL@
	lea	ecx, DWORD PTR $T236054[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1567[ebp], eax
	mov	edx, DWORD PTR tv1567[ebp]
	mov	DWORD PTR tv966[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	mov	eax, DWORD PTR tv966[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236054[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1358 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_COMPLETE_CONTEST_FAITH");

	push	OFFSET ??_C@_0DK@MIDCLJHM@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	ecx, DWORD PTR $T236055[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1600[ebp], eax
	mov	edx, DWORD PTR tv1600[ebp]
	mov	DWORD PTR tv968[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	mov	eax, DWORD PTR tv968[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236055[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1359 : 		veNamesToShow = GetContestLeaders();

	lea	ecx, DWORD PTR $T236056[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetContestLeaders@CvMinorCivQuest@@QAE?AV?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@XZ ; CvMinorCivQuest::GetContestLeaders
	mov	DWORD PTR tv1601[ebp], eax
	mov	edx, DWORD PTR tv1601[ebp]
	mov	DWORD PTR tv970[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
	mov	eax, DWORD PTR tv970[ebp]
	push	eax
	lea	ecx, DWORD PTR _veNamesToShow$[ebp]
	call	??4?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAEXABV0@@Z ; FStaticVector<enum PlayerTypes,64,1,297,0>::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236056[ebp]
	call	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
	jmp	$LN44@DoFinishQu
$LN21@DoFinishQu:

; 1360 : 	}
; 1361 : 
; 1362 : 	// Techs contest
; 1363 : 	else if(m_eType == MINOR_CIV_QUEST_CONTEST_TECHS)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 12			; 0000000cH
	jne	$LN19@DoFinishQu

; 1364 : 	{
; 1365 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_COMPLETE_CONTEST_TECHS");

	push	OFFSET ??_C@_0DC@BBMPNMMA@TXT_KEY_NOTIFICATION_QUEST_COMPL@
	lea	edx, DWORD PTR $T236057[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1602[ebp], eax
	mov	eax, DWORD PTR tv1602[ebp]
	mov	DWORD PTR tv972[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	mov	ecx, DWORD PTR tv972[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236057[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1366 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_COMPLETE_CONTEST_TECHS");

	push	OFFSET ??_C@_0DK@KABLMNMG@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	edx, DWORD PTR $T236058[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1603[ebp], eax
	mov	eax, DWORD PTR tv1603[ebp]
	mov	DWORD PTR tv974[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	mov	ecx, DWORD PTR tv974[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236058[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1367 : 		veNamesToShow = GetContestLeaders();

	lea	edx, DWORD PTR $T236059[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetContestLeaders@CvMinorCivQuest@@QAE?AV?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@XZ ; CvMinorCivQuest::GetContestLeaders
	mov	DWORD PTR tv1604[ebp], eax
	mov	eax, DWORD PTR tv1604[ebp]
	mov	DWORD PTR tv976[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	mov	ecx, DWORD PTR tv976[ebp]
	push	ecx
	lea	ecx, DWORD PTR _veNamesToShow$[ebp]
	call	??4?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAEXABV0@@Z ; FStaticVector<enum PlayerTypes,64,1,297,0>::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236059[ebp]
	call	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
	jmp	$LN44@DoFinishQu
$LN19@DoFinishQu:

; 1368 : 	}
; 1369 : 
; 1370 : 	// Invest
; 1371 : 	else if(m_eType == MINOR_CIV_QUEST_INVEST)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 13			; 0000000dH
	jne	$LN17@DoFinishQu

; 1372 : 	{
; 1373 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_COMPLETE_INVEST");

	push	OFFSET ??_C@_0CL@IFIPAOEM@TXT_KEY_NOTIFICATION_QUEST_COMPL@
	lea	eax, DWORD PTR $T236060[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1605[ebp], eax
	mov	ecx, DWORD PTR tv1605[ebp]
	mov	DWORD PTR tv978[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	mov	edx, DWORD PTR tv978[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236060[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1374 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_COMPLETE_INVEST");

	push	OFFSET ??_C@_0DD@CMGLGCBM@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	eax, DWORD PTR $T236061[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1606[ebp], eax
	mov	ecx, DWORD PTR tv1606[ebp]
	mov	DWORD PTR tv980[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	mov	edx, DWORD PTR tv980[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236061[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN44@DoFinishQu
$LN17@DoFinishQu:

; 1375 : 	}
; 1376 : 
; 1377 : 	// Bully target City-State
; 1378 : 	else if(m_eType == MINOR_CIV_QUEST_BULLY_CITY_STATE)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 14			; 0000000eH
	jne	$LN15@DoFinishQu

; 1379 : 	{
; 1380 : 		PlayerTypes eTargetMinor = (PlayerTypes) GetPrimaryData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPrimaryData@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetPrimaryData
	mov	DWORD PTR _eTargetMinor$221597[ebp], eax

; 1381 : 		const char* strCivKey = "Nobody";

	mov	DWORD PTR _strCivKey$221599[ebp], OFFSET ??_C@_06LOJBPBBB@Nobody?$AA@

; 1382 : 		if(eTargetMinor != NO_PLAYER)

	cmp	DWORD PTR _eTargetMinor$221597[ebp], -1
	je	SHORT $LN14@DoFinishQu

; 1383 : 			strCivKey = GET_PLAYER(eTargetMinor).getCivilizationShortDescriptionKey();

	mov	ecx, DWORD PTR _eTargetMinor$221597[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T236264[ebp], ecx
	mov	ecx, DWORD PTR $T236264[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR _strCivKey$221599[ebp], eax
$LN14@DoFinishQu:

; 1384 : 
; 1385 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_COMPLETE_BULLY_CITY_STATE");

	push	OFFSET ??_C@_0DF@MMCEJDPM@TXT_KEY_NOTIFICATION_QUEST_COMPL@
	lea	edx, DWORD PTR $T236062[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1607[ebp], eax
	mov	eax, DWORD PTR tv1607[ebp]
	mov	DWORD PTR tv982[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	mov	ecx, DWORD PTR tv982[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236062[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1386 : 		strMessage << strCivKey;

	lea	edx, DWORD PTR _strCivKey$221599[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1387 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_COMPLETE_BULLY_CITY_STATE");

	push	OFFSET ??_C@_0DN@BKMONKCC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	ecx, DWORD PTR $T236063[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1608[ebp], eax
	mov	edx, DWORD PTR tv1608[ebp]
	mov	DWORD PTR tv984[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	mov	eax, DWORD PTR tv984[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236063[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1388 : 		strSummary << strCivKey;

	lea	ecx, DWORD PTR _strCivKey$221599[ebp]
	push	ecx
	lea	edx, DWORD PTR _strSummary$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	jmp	$LN44@DoFinishQu
$LN15@DoFinishQu:

; 1389 : 	}
; 1390 : 
; 1391 : 	// Denounce target Major
; 1392 : 	else if(m_eType == MINOR_CIV_QUEST_DENOUNCE_MAJOR)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 15			; 0000000fH
	jne	$LN12@DoFinishQu

; 1393 : 	{
; 1394 : 		PlayerTypes eTargetMajor = (PlayerTypes) GetPrimaryData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPrimaryData@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetPrimaryData
	mov	DWORD PTR _eTargetMajor$221607[ebp], eax

; 1395 : 		const char* strCivKey = "Nobody";

	mov	DWORD PTR _strCivKey$221609[ebp], OFFSET ??_C@_06LOJBPBBB@Nobody?$AA@

; 1396 : 		if(eTargetMajor != NO_PLAYER)

	cmp	DWORD PTR _eTargetMajor$221607[ebp], -1
	je	SHORT $LN11@DoFinishQu

; 1397 : 			strCivKey = GET_PLAYER(eTargetMajor).getCivilizationShortDescriptionKey();

	mov	ecx, DWORD PTR _eTargetMajor$221607[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T236268[ebp], ecx
	mov	ecx, DWORD PTR $T236268[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR _strCivKey$221609[ebp], eax
$LN11@DoFinishQu:

; 1398 : 
; 1399 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_COMPLETE_DENOUNCE_MAJOR");

	push	OFFSET ??_C@_0DD@FFJJHFGJ@TXT_KEY_NOTIFICATION_QUEST_COMPL@
	lea	edx, DWORD PTR $T236064[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1609[ebp], eax
	mov	eax, DWORD PTR tv1609[ebp]
	mov	DWORD PTR tv986[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	mov	ecx, DWORD PTR tv986[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236064[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1400 : 		strMessage << strCivKey;

	lea	edx, DWORD PTR _strCivKey$221609[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1401 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_COMPLETE_DENOUNCE_MAJOR");

	push	OFFSET ??_C@_0DL@LMELAEEN@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	ecx, DWORD PTR $T236065[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1610[ebp], eax
	mov	edx, DWORD PTR tv1610[ebp]
	mov	DWORD PTR tv988[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	mov	eax, DWORD PTR tv988[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236065[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1402 : 		strSummary << strCivKey;

	lea	ecx, DWORD PTR _strCivKey$221609[ebp]
	push	ecx
	lea	edx, DWORD PTR _strSummary$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	jmp	$LN44@DoFinishQu
$LN12@DoFinishQu:

; 1403 : 	}
; 1404 : 
; 1405 : 	// Spread your religion to us
; 1406 : 	else if(m_eType == MINOR_CIV_QUEST_SPREAD_RELIGION)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 16			; 00000010H
	jne	$LN44@DoFinishQu

; 1407 : 	{
; 1408 : 		ReligionTypes eReligion = (ReligionTypes) GetPrimaryData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPrimaryData@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetPrimaryData
	mov	DWORD PTR _eReligion$221617[ebp], eax

; 1409 : 		CvString strReligionKey = "Atheism";

	mov	ecx, OFFSET ??_C@_07BCHCBILN@Atheism?$AA@
	test	ecx, ecx
	je	SHORT $LN198@DoFinishQu
	mov	DWORD PTR tv1349[ebp], OFFSET ??_C@_07BCHCBILN@Atheism?$AA@
	jmp	SHORT $LN199@DoFinishQu
$LN198@DoFinishQu:
	mov	DWORD PTR tv1349[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN199@DoFinishQu:
	mov	edx, DWORD PTR tv1349[ebp]
	push	edx
	lea	ecx, DWORD PTR _strReligionKey$221619[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H

; 1410 : 		if(eReligion != NO_RELIGION)

	cmp	DWORD PTR _eReligion$221617[ebp], -1
	je	$LN8@DoFinishQu

; 1411 : 		{
; 1412 : 			const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eReligion, NO_PLAYER);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T236280[ebp], eax
	push	-1
	mov	ecx, DWORD PTR _eReligion$221617[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T236280[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pReligion$221622[ebp], eax

; 1413 : 			if(pReligion != NULL)

	cmp	DWORD PTR _pReligion$221622[ebp], 0
	je	SHORT $LN8@DoFinishQu

; 1414 : 			{
; 1415 : 				strReligionKey = pReligion->GetName();

	lea	edx, DWORD PTR $T236066[ebp]
	push	edx
	mov	ecx, DWORD PTR _pReligion$221622[ebp]
	call	?GetName@CvReligion@@QBE?AVCvString@@XZ	; CvReligion::GetName
	mov	DWORD PTR tv1611[ebp], eax
	mov	eax, DWORD PTR tv1611[ebp]
	mov	DWORD PTR $T236284[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	mov	ecx, DWORD PTR $T236284[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strReligionKey$221619[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	lea	ecx, DWORD PTR $T236066[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN8@DoFinishQu:

; 1416 : 			}	
; 1417 : 		}
; 1418 : 
; 1419 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_COMPLETE_SPREAD_RELIGION");

	push	OFFSET ??_C@_0DE@DGDKMBOH@TXT_KEY_NOTIFICATION_QUEST_COMPL@
	lea	edx, DWORD PTR $T236067[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1612[ebp], eax
	mov	eax, DWORD PTR tv1612[ebp]
	mov	DWORD PTR tv993[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	mov	ecx, DWORD PTR tv993[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	lea	ecx, DWORD PTR $T236067[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1420 : 		strMessage << strReligionKey.c_str();

	lea	ecx, DWORD PTR _strReligionKey$221619[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T236068[ebp], eax
	lea	edx, DWORD PTR $T236068[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1421 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_COMPLETE_SPREAD_RELIGION");

	push	OFFSET ??_C@_0DM@KNAPHEH@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	ecx, DWORD PTR $T236069[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1613[ebp], eax
	mov	edx, DWORD PTR tv1613[ebp]
	mov	DWORD PTR tv995[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	mov	eax, DWORD PTR tv995[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	lea	ecx, DWORD PTR $T236069[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1422 : 		strSummary << strReligionKey.c_str();

	lea	ecx, DWORD PTR _strReligionKey$221619[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T236070[ebp], eax
	lea	ecx, DWORD PTR $T236070[ebp]
	push	ecx
	lea	edx, DWORD PTR _strSummary$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1423 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _strReligionKey$221619[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN44@DoFinishQu:

; 1424 : 
; 1425 : 	// Connect A Trade Route
; 1426 : 	if(m_eType == MINOR_CIV_QUEST_TRADE_ROUTE)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 17			; 00000011H
	jne	$LN6@DoFinishQu

; 1427 : 	{
; 1428 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_COMPLETE_TRADE_ROUTE");

	push	OFFSET ??_C@_0DA@MENAOIK@TXT_KEY_NOTIFICATION_QUEST_COMPL@
	lea	ecx, DWORD PTR $T236071[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1614[ebp], eax
	mov	edx, DWORD PTR tv1614[ebp]
	mov	DWORD PTR tv997[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
	mov	eax, DWORD PTR tv997[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236071[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1429 : 		strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_COMPLETE_TRADE_ROUTE");

	push	OFFSET ??_C@_0DI@JEIAPGCG@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	ecx, DWORD PTR $T236072[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1615[ebp], eax
	mov	edx, DWORD PTR tv1615[ebp]
	mov	DWORD PTR tv999[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
	mov	eax, DWORD PTR tv999[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236072[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN6@DoFinishQu:

; 1430 : 	}
; 1431 : 
; 1432 : 	// Update the UI with the changed data, in case it is open
; 1433 : 	if(m_eAssignedPlayer == GC.getGame().getActivePlayer())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T236296[ebp], ecx
	mov	ecx, DWORD PTR $T236296[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], eax
	jne	SHORT $LN5@DoFinishQu

; 1434 : 	{
; 1435 : 		GC.GetEngineUserInterface()->setDirty(GameData_DIRTY_BIT, true);

	mov	eax, DWORD PTR $T236300[ebp]
	mov	DWORD PTR tv767[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv767[ebp], ecx
	push	1
	push	11					; 0000000bH
	mov	edx, DWORD PTR tv767[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv767[ebp]
	mov	edx, DWORD PTR [eax+260]
	call	edx
$LN5@DoFinishQu:

; 1436 : 	}
; 1437 : 
; 1438 : 	strMessage << pMinor->getNameKey();

	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T236073[ebp], eax
	lea	eax, DWORD PTR $T236073[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1439 : 	strMessage << iInfChange;

	lea	edx, DWORD PTR _iInfChange$[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$[ebp]
	push	eax
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 1440 : 	strSummary << pMinor->getNameKey();

	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T236074[ebp], eax
	lea	ecx, DWORD PTR $T236074[ebp]
	push	ecx
	lea	edx, DWORD PTR _strSummary$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1441 : 
; 1442 : 	CvString sMessage = strMessage.toUTF8();

	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T236309[ebp], eax
	cmp	DWORD PTR $T236309[ebp], 0
	je	SHORT $LN217@DoFinishQu
	mov	eax, DWORD PTR $T236309[ebp]
	mov	DWORD PTR tv1389[ebp], eax
	jmp	SHORT $LN218@DoFinishQu
$LN217@DoFinishQu:
	mov	DWORD PTR tv1389[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN218@DoFinishQu:
	mov	ecx, DWORD PTR tv1389[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sMessage$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 44		; 0000002cH

; 1443 : 	CvString sSummary = strSummary.toUTF8();

	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T236318[ebp], eax
	cmp	DWORD PTR $T236318[ebp], 0
	je	SHORT $LN222@DoFinishQu
	mov	edx, DWORD PTR $T236318[ebp]
	mov	DWORD PTR tv1402[ebp], edx
	jmp	SHORT $LN223@DoFinishQu
$LN222@DoFinishQu:
	mov	DWORD PTR tv1402[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN223@DoFinishQu:
	mov	eax, DWORD PTR tv1402[ebp]
	push	eax
	lea	ecx, DWORD PTR _sSummary$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH

; 1444 : 
; 1445 : 	// This quest involved multiple minors, so grab their names for the notification
; 1446 : 	if(veNamesToShow.size() > 0)

	mov	ecx, DWORD PTR _veNamesToShow$[ebp+4]
	mov	DWORD PTR $T236322[ebp], ecx
	cmp	DWORD PTR $T236322[ebp], 0
	jbe	$LN4@DoFinishQu

; 1447 : 	{
; 1448 : 		sMessage = sMessage + pMinor->GetMinorCivAI()->GetNamesListAsString(veNamesToShow);

	sub	esp, 272				; 00000110H
	mov	ecx, esp
	mov	DWORD PTR $T236075[ebp], esp
	lea	edx, DWORD PTR _veNamesToShow$[ebp]
	push	edx
	call	??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@ABV0@@Z ; FStaticVector<enum PlayerTypes,64,1,297,0>::FStaticVector<enum PlayerTypes,64,1,297,0>
	mov	DWORD PTR tv1616[ebp], eax
	mov	eax, DWORD PTR tv1616[ebp]
	mov	DWORD PTR tv1003[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 46		; 0000002eH
	lea	ecx, DWORD PTR $T236076[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH
	mov	ecx, eax
	call	?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z ; CvMinorCivAI::GetNamesListAsString
	mov	DWORD PTR tv1004[ebp], eax
	mov	edx, DWORD PTR tv1004[ebp]
	mov	DWORD PTR tv1006[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 47		; 0000002fH
	mov	eax, DWORD PTR tv1006[ebp]
	push	eax
	lea	ecx, DWORD PTR _sMessage$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T236077[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1618[ebp], eax
	mov	eax, DWORD PTR tv1618[ebp]
	mov	DWORD PTR $T236345[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 48		; 00000030H
	mov	ecx, DWORD PTR $T236345[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _sMessage$[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 47		; 0000002fH
	lea	ecx, DWORD PTR $T236077[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH
	lea	ecx, DWORD PTR $T236076[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN4@DoFinishQu:

; 1449 : 	}
; 1450 : 
; 1451 : 	// This quest reward changed our status, so grab that info for the notification
; 1452 : 	if ((!bWasFriends && bNowFriends) || (!bWasAllies && bNowAllies))

	movzx	ecx, BYTE PTR _bWasFriends$[ebp]
	test	ecx, ecx
	jne	SHORT $LN1@DoFinishQu
	movzx	edx, BYTE PTR _bNowFriends$[ebp]
	test	edx, edx
	jne	SHORT $LN2@DoFinishQu
$LN1@DoFinishQu:
	movzx	eax, BYTE PTR _bWasAllies$[ebp]
	test	eax, eax
	jne	$LN3@DoFinishQu
	movzx	ecx, BYTE PTR _bNowAllies$[ebp]
	test	ecx, ecx
	je	$LN3@DoFinishQu
$LN2@DoFinishQu:

; 1453 : 	{
; 1454 : 		pair<CvString, CvString> statusChangeStrings = pMinor->GetMinorCivAI()->GetStatusChangeNotificationStrings(m_eAssignedPlayer, /*bAdd*/true, bNowFriends, bNowAllies, eOldAlly, eNewAlly);

	mov	edx, DWORD PTR _eNewAlly$[ebp]
	push	edx
	mov	eax, DWORD PTR _eOldAlly$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bNowAllies$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bNowFriends$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR _statusChangeStrings$221680[ebp]
	push	edx
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z ; CvMinorCivAI::GetStatusChangeNotificationStrings
	mov	BYTE PTR __$EHRec$[ebp+8], 49		; 00000031H

; 1455 : 		sMessage = sMessage + "[NEWLINE][NEWLINE]" + statusChangeStrings.first;

	push	OFFSET ??_C@_0BD@CNJPLLGH@?$FLNEWLINE?$FN?$FLNEWLINE?$FN?$AA@
	lea	eax, DWORD PTR _sMessage$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T236078[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv849[ebp], eax
	mov	edx, DWORD PTR tv849[ebp]
	mov	DWORD PTR tv1011[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 50		; 00000032H
	lea	eax, DWORD PTR _statusChangeStrings$221680[ebp]
	push	eax
	mov	ecx, DWORD PTR tv1011[ebp]
	push	ecx
	lea	edx, DWORD PTR $T236079[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1619[ebp], eax
	mov	eax, DWORD PTR tv1619[ebp]
	mov	DWORD PTR $T236353[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 51		; 00000033H
	mov	ecx, DWORD PTR $T236353[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _sMessage$[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 50		; 00000032H
	lea	ecx, DWORD PTR $T236079[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 49		; 00000031H
	lea	ecx, DWORD PTR $T236078[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1456 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 52		; 00000034H
	lea	ecx, DWORD PTR _statusChangeStrings$221680[ebp+28]
	mov	DWORD PTR $T236361[ebp], ecx
	mov	ecx, DWORD PTR $T236361[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH
	lea	ecx, DWORD PTR _statusChangeStrings$221680[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN3@DoFinishQu:

; 1457 : 
; 1458 : 	pMinor->GetMinorCivAI()->AddQuestNotification(sMessage, sSummary, m_eAssignedPlayer);

	push	0
	push	-1
	push	-1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T236080[ebp], esp
	mov	DWORD PTR $T236376[ebp], ecx
	lea	edx, DWORD PTR _sSummary$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T236376[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T236376[ebp]
	mov	DWORD PTR tv1019[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 53		; 00000035H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T236081[ebp], esp
	mov	DWORD PTR $T236381[ebp], ecx
	lea	edx, DWORD PTR _sMessage$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T236381[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T236381[ebp]
	mov	DWORD PTR tv1022[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 54		; 00000036H
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH
	mov	ecx, eax
	call	?AddQuestNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH_N@Z ; CvMinorCivAI::AddQuestNotification

; 1459 : 
; 1460 : 	return true;

	mov	BYTE PTR $T236082[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 44		; 0000002cH
	lea	ecx, DWORD PTR _sSummary$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _sMessage$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _veNamesToShow$[ebp]
	call	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	al, BYTE PTR $T236082[ebp]
$LN48@DoFinishQu:

; 1461 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$0:
	lea	ecx, DWORD PTR _strMessage$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$1:
	lea	ecx, DWORD PTR _strSummary$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$2:
	lea	ecx, DWORD PTR _veNamesToShow$[ebp]
	jmp	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$3:
	lea	ecx, DWORD PTR $T236031[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$4:
	lea	ecx, DWORD PTR $T236032[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$5:
	lea	ecx, DWORD PTR $T236033[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$6:
	lea	ecx, DWORD PTR $T236034[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$7:
	lea	ecx, DWORD PTR $T236035[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$8:
	lea	ecx, DWORD PTR $T236036[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$9:
	lea	ecx, DWORD PTR $T236037[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$10:
	lea	ecx, DWORD PTR $T236038[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$11:
	lea	ecx, DWORD PTR $T236039[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$12:
	lea	ecx, DWORD PTR $T236040[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$13:
	lea	ecx, DWORD PTR $T236041[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$14:
	lea	ecx, DWORD PTR $T236042[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$15:
	lea	ecx, DWORD PTR $T236043[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$16:
	lea	ecx, DWORD PTR $T236044[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$17:
	lea	ecx, DWORD PTR $T236045[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$18:
	lea	ecx, DWORD PTR $T236046[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$19:
	lea	ecx, DWORD PTR $T236047[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$20:
	lea	ecx, DWORD PTR $T236048[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$21:
	lea	ecx, DWORD PTR $T236049[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$22:
	lea	ecx, DWORD PTR $T236050[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$23:
	lea	ecx, DWORD PTR $T236051[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$24:
	lea	ecx, DWORD PTR $T236052[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$25:
	lea	ecx, DWORD PTR $T236053[ebp]
	jmp	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$26:
	lea	ecx, DWORD PTR $T236054[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$27:
	lea	ecx, DWORD PTR $T236055[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$28:
	lea	ecx, DWORD PTR $T236056[ebp]
	jmp	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$29:
	lea	ecx, DWORD PTR $T236057[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$30:
	lea	ecx, DWORD PTR $T236058[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$31:
	lea	ecx, DWORD PTR $T236059[ebp]
	jmp	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$32:
	lea	ecx, DWORD PTR $T236060[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$33:
	lea	ecx, DWORD PTR $T236061[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$34:
	lea	ecx, DWORD PTR $T236062[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$35:
	lea	ecx, DWORD PTR $T236063[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$36:
	lea	ecx, DWORD PTR $T236064[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$37:
	lea	ecx, DWORD PTR $T236065[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$38:
	lea	ecx, DWORD PTR _strReligionKey$221619[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$39:
	lea	ecx, DWORD PTR $T236066[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$40:
	lea	ecx, DWORD PTR $T236067[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$41:
	lea	ecx, DWORD PTR $T236069[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$42:
	lea	ecx, DWORD PTR $T236071[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$43:
	lea	ecx, DWORD PTR $T236072[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$44:
	lea	ecx, DWORD PTR _sMessage$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$45:
	lea	ecx, DWORD PTR _sSummary$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$46:
	mov	ecx, DWORD PTR $T236075[ebp]
	jmp	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$47:
	lea	ecx, DWORD PTR $T236076[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$48:
	lea	ecx, DWORD PTR $T236077[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$49:
	lea	ecx, DWORD PTR _statusChangeStrings$221680[ebp]
	jmp	??1?$pair@VCvString@@V1@@std@@QAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$50:
	lea	ecx, DWORD PTR $T236078[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$51:
	lea	ecx, DWORD PTR $T236079[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$65:
	lea	ecx, DWORD PTR _statusChangeStrings$221680[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$52:
	mov	ecx, DWORD PTR $T236080[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ$53:
	mov	ecx, DWORD PTR $T236081[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-5128]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-180]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ ENDP		; CvMinorCivQuest::DoFinishQuest
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$pair@VCvString@@V1@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$pair@VCvString@@V1@@std@@QAE@XZ$0
__ehfuncinfo$??1?$pair@VCvString@@V1@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$pair@VCvString@@V1@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$pair@VCvString@@V1@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T236432 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$pair@VCvString@@V1@@std@@QAE@XZ PROC		; std::pair<CvString,CvString>::~pair<CvString,CvString>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$pair@VCvString@@V1@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR $T236432[ebp], eax
	mov	ecx, DWORD PTR $T236432[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$pair@VCvString@@V1@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$??1?$pair@VCvString@@V1@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$pair@VCvString@@V1@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$pair@VCvString@@V1@@std@@QAE@XZ ENDP		; std::pair<CvString,CvString>::~pair<CvString,CvString>
PUBLIC	??_C@_0CP@IOCNLJFC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0CH@OABDKCHP@TXT_KEY_NOTIFICATION_QUEST_ENDED@ ; `string'
PUBLIC	??_C@_0DH@FJKOLMI@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0CP@BKECPLIK@TXT_KEY_NOTIFICATION_QUEST_ENDED@ ; `string'
PUBLIC	??_C@_0DH@GNLDJPHC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0CP@HCGLIPDA@TXT_KEY_NOTIFICATION_QUEST_ENDED@ ; `string'
PUBLIC	??_C@_0DJ@LGEABBME@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0DB@GJLIDDPP@TXT_KEY_NOTIFICATION_QUEST_ENDED@ ; `string'
PUBLIC	??_C@_0DJ@JAGCMACJ@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0DB@EPJKOCBC@TXT_KEY_NOTIFICATION_QUEST_ENDED@ ; `string'
PUBLIC	??_C@_0DK@EIDMPJPE@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0DC@PJOIOIPC@TXT_KEY_NOTIFICATION_QUEST_ENDED@ ; `string'
PUBLIC	??_C@_0CF@BDAFJBNG@TXT_KEY_NTFN_QUEST_ENDED_KILL_CA@ ; `string'
PUBLIC	??_C@_0CD@PEJGKKKF@TXT_KEY_NTFN_QUEST_ENDED_KILL_CA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ		; CvMinorCivQuest::DoCancelQuest
;	COMDAT ??_C@_0CP@IOCNLJFC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0CP@IOCNLJFC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_ENDED_OTHER', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@OABDKCHP@TXT_KEY_NOTIFICATION_QUEST_ENDED@
CONST	SEGMENT
??_C@_0CH@OABDKCHP@TXT_KEY_NOTIFICATION_QUEST_ENDED@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_ENDED_OTHER', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@FJKOLMI@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DH@FJKOLMI@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICAT'
	DB	'ION_SUMMARY_QUEST_ENDED_CONTEST_TECHS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@BKECPLIK@TXT_KEY_NOTIFICATION_QUEST_ENDED@
CONST	SEGMENT
??_C@_0CP@BKECPLIK@TXT_KEY_NOTIFICATION_QUEST_ENDED@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_ENDED_CONTEST_TECHS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@GNLDJPHC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DH@GNLDJPHC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_ENDED_CONTEST_FAITH', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@HCGLIPDA@TXT_KEY_NOTIFICATION_QUEST_ENDED@
CONST	SEGMENT
??_C@_0CP@HCGLIPDA@TXT_KEY_NOTIFICATION_QUEST_ENDED@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_ENDED_CONTEST_FAITH', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@LGEABBME@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DJ@LGEABBME@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_ENDED_CONTEST_CULTURE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@GJLIDDPP@TXT_KEY_NOTIFICATION_QUEST_ENDED@
CONST	SEGMENT
??_C@_0DB@GJLIDDPP@TXT_KEY_NOTIFICATION_QUEST_ENDED@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_ENDED_CONTEST_CULTURE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@JAGCMACJ@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DJ@JAGCMACJ@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_ENDED_KILL_CITY_STATE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@EPJKOCBC@TXT_KEY_NOTIFICATION_QUEST_ENDED@
CONST	SEGMENT
??_C@_0DB@EPJKOCBC@TXT_KEY_NOTIFICATION_QUEST_ENDED@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_ENDED_KILL_CITY_STATE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@EIDMPJPE@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
CONST	SEGMENT
??_C@_0DK@EIDMPJPE@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_ENDED_CONSTRUCT_WONDER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@PJOIOIPC@TXT_KEY_NOTIFICATION_QUEST_ENDED@
CONST	SEGMENT
??_C@_0DC@PJOIOIPC@TXT_KEY_NOTIFICATION_QUEST_ENDED@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_QUEST_ENDED_CONSTRUCT_WONDER', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@BDAFJBNG@TXT_KEY_NTFN_QUEST_ENDED_KILL_CA@
CONST	SEGMENT
??_C@_0CF@BDAFJBNG@TXT_KEY_NTFN_QUEST_ENDED_KILL_CA@ DB 'TXT_KEY_NTFN_QUE'
	DB	'ST_ENDED_KILL_CAMP_S', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@PEJGKKKF@TXT_KEY_NTFN_QUEST_ENDED_KILL_CA@
CONST	SEGMENT
??_C@_0CD@PEJGKKKF@TXT_KEY_NTFN_QUEST_ENDED_KILL_CA@ DB 'TXT_KEY_NTFN_QUE'
	DB	'ST_ENDED_KILL_CAMP', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ DD 019930522H
	DD	01bH
	DD	FLAT:__unwindtable$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$3
	DD	02H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$4
	DD	02H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$5
	DD	02H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$6
	DD	02H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$7
	DD	02H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$8
	DD	02H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$9
	DD	02H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$10
	DD	02H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$11
	DD	02H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$12
	DD	02H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$13
	DD	02H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$14
	DD	02H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$15
	DD	02H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$16
	DD	02H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$17
	DD	02H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$18
	DD	02H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$19
	DD	02H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$20
	DD	014H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$21
	DD	015H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$22
	DD	015H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$23
	DD	017H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$24
	DD	015H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$25
	DD	019H
	DD	FLAT:__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$26
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ
_TEXT	SEGMENT
tv474 = -2844						; size = 4
tv471 = -2840						; size = 4
tv931 = -2836						; size = 4
tv463 = -2832						; size = 4
tv461 = -2828						; size = 4
tv460 = -2824						; size = 4
tv891 = -2820						; size = 4
tv764 = -2816						; size = 4
tv705 = -2812						; size = 4
tv456 = -2808						; size = 4
tv885 = -2804						; size = 4
tv454 = -2800						; size = 4
tv878 = -2796						; size = 4
tv452 = -2792						; size = 4
tv880 = -2788						; size = 4
tv450 = -2784						; size = 4
tv893 = -2780						; size = 4
tv448 = -2776						; size = 4
tv936 = -2772						; size = 4
tv446 = -2768						; size = 4
tv937 = -2764						; size = 4
tv444 = -2760						; size = 4
tv938 = -2756						; size = 4
tv442 = -2752						; size = 4
tv933 = -2748						; size = 4
tv440 = -2744						; size = 4
tv934 = -2740						; size = 4
tv438 = -2736						; size = 4
tv935 = -2732						; size = 4
tv436 = -2728						; size = 4
tv751 = -2724						; size = 4
tv434 = -2720						; size = 4
tv762 = -2716						; size = 4
tv432 = -2712						; size = 4
tv786 = -2708						; size = 4
tv430 = -2704						; size = 4
tv854 = -2700						; size = 4
tv428 = -2696						; size = 4
tv81 = -2692						; size = 4
tv423 = -2688						; size = 4
tv84 = -2684						; size = 4
tv421 = -2680						; size = 4
tv87 = -2676						; size = 4
_this$ = -2672						; size = 4
$T236644 = -2656					; size = 4
$T236639 = -2652					; size = 4
$T236630 = -2648					; size = 4
$T236614 = -2636					; size = 4
$T236610 = -2632					; size = 4
$T236601 = -2628					; size = 4
$T236532 = -2576					; size = 4
$T236471 = -2553					; size = 1
$T236470 = -2552					; size = 4
$T236469 = -2548					; size = 4
$T236468 = -2544					; size = 28
$T236467 = -2516					; size = 28
$T236466 = -2488					; size = 4
$T236465 = -2484					; size = 4
$T236464 = -2480					; size = 4
$T236463 = -2476					; size = 80
$T236462 = -2396					; size = 80
$T236461 = -2316					; size = 272
$T236460 = -2044					; size = 80
$T236459 = -1964					; size = 80
$T236458 = -1884					; size = 272
$T236457 = -1612					; size = 80
$T236456 = -1532					; size = 80
$T236455 = -1452					; size = 272
$T236454 = -1180					; size = 80
$T236453 = -1100					; size = 80
$T236452 = -1020					; size = 80
$T236451 = -940						; size = 80
$T236450 = -860						; size = 80
$T236449 = -780						; size = 80
$T236448 = -697						; size = 1
$T236447 = -696						; size = 80
$T236446 = -616						; size = 80
_eTargetCityState$221730 = -536				; size = 4
_strTargetNameKey$221732 = -532				; size = 4
_eWonder$221718 = -528					; size = 4
_strBuildingName$221723 = -524				; size = 4
_pkBuildingInfo$221720 = -520				; size = 4
_sSummary$221766 = -516					; size = 28
_sMessage$221765 = -488					; size = 28
_veNamesToShow$ = -460					; size = 272
__$ArrayPad$ = -184					; size = 4
_strMessage$ = -180					; size = 80
_strSummary$ = -100					; size = 80
_bRevoked$ = -18					; size = 1
_bExpired$ = -17					; size = 1
_pMinor$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ PROC		; CvMinorCivQuest::DoCancelQuest, COMDAT
; _this$ = ecx

; 1465 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 2832				; 00000b10H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1466 : 	if (IsHandled())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsHandled@CvMinorCivQuest@@QAE_NXZ	; CvMinorCivQuest::IsHandled
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@DoCancelQu

; 1467 : 		return false;

	xor	al, al
	jmp	$LN19@DoCancelQu
$LN18@DoCancelQu:

; 1468 : 
; 1469 : 	SetHandled(true); // We are handling the end of the quest, and this should only happen once

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetHandled@CvMinorCivQuest@@QAEX_N@Z	; CvMinorCivQuest::SetHandled

; 1470 : 
; 1471 : 	CvPlayer* pMinor = &GET_PLAYER(m_eMinor);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pMinor$[ebp], edx

; 1472 : 
; 1473 : 	// Why is the quest cancelled?  Will affect which notification message we send
; 1474 : 	bool bRevoked = IsRevoked();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsRevoked@CvMinorCivQuest@@QAE_NXZ	; CvMinorCivQuest::IsRevoked
	mov	BYTE PTR _bRevoked$[ebp], al

; 1475 : 	bool bExpired = IsExpired();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsExpired@CvMinorCivQuest@@QAE_NXZ	; CvMinorCivQuest::IsExpired
	mov	BYTE PTR _bExpired$[ebp], al

; 1476 : 
; 1477 : 	Localization::String strMessage;

	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1478 : 	Localization::String strSummary;

	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 1479 : 	CivsList veNamesToShow;

	lea	ecx, DWORD PTR _veNamesToShow$[ebp]
	call	??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::FStaticVector<enum PlayerTypes,64,1,297,0>
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 1480 : 
; 1481 : 	// If quest was revoked due to bullying, notification is handled elsewhere (to allow condensing)
; 1482 : 	if(bRevoked)

	movzx	eax, BYTE PTR _bRevoked$[ebp]
	test	eax, eax
	je	SHORT $LN17@DoCancelQu
	jmp	$LN16@DoCancelQu
$LN17@DoCancelQu:

; 1483 : 	{
; 1484 : 	}
; 1485 : 	// If quest expired "naturally", send a notification particular to the expiration conditions of the quest
; 1486 : 	else if(bExpired)

	movzx	ecx, BYTE PTR _bExpired$[ebp]
	test	ecx, ecx
	je	$LN16@DoCancelQu

; 1487 : 	{
; 1488 : 		// City-state wanted us to clear a camp
; 1489 : 		if(m_eType == MINOR_CIV_QUEST_KILL_CAMP)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 1
	jne	$LN14@DoCancelQu

; 1490 : 		{
; 1491 : 			strMessage = Localization::Lookup("TXT_KEY_NTFN_QUEST_ENDED_KILL_CAMP");

	push	OFFSET ??_C@_0CD@PEJGKKKF@TXT_KEY_NTFN_QUEST_ENDED_KILL_CA@
	lea	eax, DWORD PTR $T236446[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv87[ebp], eax
	mov	ecx, DWORD PTR tv87[ebp]
	mov	DWORD PTR tv421[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR tv421[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236446[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1492 : 			strSummary = Localization::Lookup("TXT_KEY_NTFN_QUEST_ENDED_KILL_CAMP_S");

	push	OFFSET ??_C@_0CF@BDAFJBNG@TXT_KEY_NTFN_QUEST_ENDED_KILL_CA@
	lea	eax, DWORD PTR $T236447[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv84[ebp], eax
	mov	ecx, DWORD PTR tv84[ebp]
	mov	DWORD PTR tv423[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR tv423[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236447[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN13@DoCancelQu
$LN14@DoCancelQu:

; 1493 : 		}
; 1494 : 		// CONSTRUCT A WONDER
; 1495 : 		else if(m_eType == MINOR_CIV_QUEST_CONSTRUCT_WONDER)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 3
	jne	$LN12@DoCancelQu

; 1496 : 		{
; 1497 : 			BuildingTypes eWonder = (BuildingTypes) GetPrimaryData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPrimaryData@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetPrimaryData
	mov	DWORD PTR _eWonder$221718[ebp], eax

; 1498 : 			CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eWonder);

	mov	ecx, DWORD PTR _eWonder$221718[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingInfo$221720[ebp], eax

; 1499 : 			CvAssertMsg(pkBuildingInfo, "Building info not expected to be FALSE! Please send Anton your save file and version.");
; 1500 : 			if(!pkBuildingInfo) 

	cmp	DWORD PTR _pkBuildingInfo$221720[ebp], 0
	jne	SHORT $LN68@DoCancelQu

; 1501 : 				return false;

	mov	BYTE PTR $T236448[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _veNamesToShow$[ebp]
	call	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	al, BYTE PTR $T236448[ebp]
	jmp	$LN19@DoCancelQu

; 1502 : 
; 1503 : 			const char* strBuildingName = pkBuildingInfo->GetDescriptionKey();

$LN68@DoCancelQu:
	mov	ecx, DWORD PTR _pkBuildingInfo$221720[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR _strBuildingName$221723[ebp], eax

; 1504 : 
; 1505 : 			strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_ENDED_CONSTRUCT_WONDER");

	push	OFFSET ??_C@_0DC@PJOIOIPC@TXT_KEY_NOTIFICATION_QUEST_ENDED@
	lea	edx, DWORD PTR $T236449[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv81[ebp], eax
	mov	eax, DWORD PTR tv81[ebp]
	mov	DWORD PTR tv428[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv428[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236449[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1506 : 			strMessage << strBuildingName;

	lea	edx, DWORD PTR _strBuildingName$221723[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1507 : 			strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_ENDED_CONSTRUCT_WONDER");

	push	OFFSET ??_C@_0DK@EIDMPJPE@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	ecx, DWORD PTR $T236450[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv854[ebp], eax
	mov	edx, DWORD PTR tv854[ebp]
	mov	DWORD PTR tv430[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR tv430[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236450[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1508 : 			strSummary << strBuildingName;

	lea	ecx, DWORD PTR _strBuildingName$221723[ebp]
	push	ecx
	lea	edx, DWORD PTR _strSummary$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	jmp	$LN13@DoCancelQu
$LN12@DoCancelQu:

; 1509 : 		}
; 1510 : 
; 1511 : 		// KILL ANOTHER CITY STATE
; 1512 : 		else if(m_eType == MINOR_CIV_QUEST_KILL_CITY_STATE)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 5
	jne	$LN9@DoCancelQu

; 1513 : 		{
; 1514 : 			PlayerTypes eTargetCityState = (PlayerTypes) GetPrimaryData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPrimaryData@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetPrimaryData
	mov	DWORD PTR _eTargetCityState$221730[ebp], eax

; 1515 : 
; 1516 : 			const char* strTargetNameKey = GET_PLAYER(eTargetCityState).getNameKey();

	mov	ecx, DWORD PTR _eTargetCityState$221730[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T236532[ebp], ecx
	mov	ecx, DWORD PTR $T236532[ebp]
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR _strTargetNameKey$221732[ebp], eax

; 1517 : 
; 1518 : 			strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_ENDED_KILL_CITY_STATE");

	push	OFFSET ??_C@_0DB@EPJKOCBC@TXT_KEY_NOTIFICATION_QUEST_ENDED@
	lea	edx, DWORD PTR $T236451[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv786[ebp], eax
	mov	eax, DWORD PTR tv786[ebp]
	mov	DWORD PTR tv432[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR tv432[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236451[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1519 : 			strMessage << strTargetNameKey;

	lea	edx, DWORD PTR _strTargetNameKey$221732[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1520 : 			strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_ENDED_KILL_CITY_STATE");

	push	OFFSET ??_C@_0DJ@JAGCMACJ@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	ecx, DWORD PTR $T236452[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv762[ebp], eax
	mov	edx, DWORD PTR tv762[ebp]
	mov	DWORD PTR tv434[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	eax, DWORD PTR tv434[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236452[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1521 : 			strSummary << strTargetNameKey;

	lea	ecx, DWORD PTR _strTargetNameKey$221732[ebp]
	push	ecx
	lea	edx, DWORD PTR _strSummary$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	jmp	$LN13@DoCancelQu
$LN9@DoCancelQu:

; 1522 : 		}
; 1523 : 
; 1524 : 		// Contest Culture
; 1525 : 		else if(m_eType == MINOR_CIV_QUEST_CONTEST_CULTURE)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 10			; 0000000aH
	jne	$LN7@DoCancelQu

; 1526 : 		{
; 1527 : 			strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_ENDED_CONTEST_CULTURE");

	push	OFFSET ??_C@_0DB@GJLIDDPP@TXT_KEY_NOTIFICATION_QUEST_ENDED@
	lea	ecx, DWORD PTR $T236453[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv751[ebp], eax
	mov	edx, DWORD PTR tv751[ebp]
	mov	DWORD PTR tv436[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	eax, DWORD PTR tv436[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236453[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1528 : 			strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_ENDED_CONTEST_CULTURE");

	push	OFFSET ??_C@_0DJ@LGEABBME@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	ecx, DWORD PTR $T236454[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv935[ebp], eax
	mov	edx, DWORD PTR tv935[ebp]
	mov	DWORD PTR tv438[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	eax, DWORD PTR tv438[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236454[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1529 : 			veNamesToShow = GetContestLeaders();

	lea	ecx, DWORD PTR $T236455[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetContestLeaders@CvMinorCivQuest@@QAE?AV?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@XZ ; CvMinorCivQuest::GetContestLeaders
	mov	DWORD PTR tv934[ebp], eax
	mov	edx, DWORD PTR tv934[ebp]
	mov	DWORD PTR tv440[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	eax, DWORD PTR tv440[ebp]
	push	eax
	lea	ecx, DWORD PTR _veNamesToShow$[ebp]
	call	??4?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAEXABV0@@Z ; FStaticVector<enum PlayerTypes,64,1,297,0>::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236455[ebp]
	call	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
	jmp	$LN13@DoCancelQu
$LN7@DoCancelQu:

; 1530 : 		}
; 1531 : 
; 1532 : 		// Contest Faith
; 1533 : 		else if(m_eType == MINOR_CIV_QUEST_CONTEST_FAITH)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 11			; 0000000bH
	jne	$LN5@DoCancelQu

; 1534 : 		{
; 1535 : 			strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_ENDED_CONTEST_FAITH");

	push	OFFSET ??_C@_0CP@HCGLIPDA@TXT_KEY_NOTIFICATION_QUEST_ENDED@
	lea	edx, DWORD PTR $T236456[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv933[ebp], eax
	mov	eax, DWORD PTR tv933[ebp]
	mov	DWORD PTR tv442[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	ecx, DWORD PTR tv442[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236456[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1536 : 			strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_ENDED_CONTEST_FAITH");

	push	OFFSET ??_C@_0DH@GNLDJPHC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	edx, DWORD PTR $T236457[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv938[ebp], eax
	mov	eax, DWORD PTR tv938[ebp]
	mov	DWORD PTR tv444[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	ecx, DWORD PTR tv444[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236457[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1537 : 			veNamesToShow = GetContestLeaders();

	lea	edx, DWORD PTR $T236458[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetContestLeaders@CvMinorCivQuest@@QAE?AV?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@XZ ; CvMinorCivQuest::GetContestLeaders
	mov	DWORD PTR tv937[ebp], eax
	mov	eax, DWORD PTR tv937[ebp]
	mov	DWORD PTR tv446[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	ecx, DWORD PTR tv446[ebp]
	push	ecx
	lea	ecx, DWORD PTR _veNamesToShow$[ebp]
	call	??4?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAEXABV0@@Z ; FStaticVector<enum PlayerTypes,64,1,297,0>::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236458[ebp]
	call	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
	jmp	$LN13@DoCancelQu
$LN5@DoCancelQu:

; 1538 : 		}
; 1539 : 
; 1540 : 		// Contest Techs
; 1541 : 		else if(m_eType == MINOR_CIV_QUEST_CONTEST_TECHS)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 12			; 0000000cH
	jne	$LN3@DoCancelQu

; 1542 : 		{
; 1543 : 			strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_ENDED_CONTEST_TECHS");

	push	OFFSET ??_C@_0CP@BKECPLIK@TXT_KEY_NOTIFICATION_QUEST_ENDED@
	lea	eax, DWORD PTR $T236459[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv936[ebp], eax
	mov	ecx, DWORD PTR tv936[ebp]
	mov	DWORD PTR tv448[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	edx, DWORD PTR tv448[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236459[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1544 : 			strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_ENDED_CONTEST_TECHS");

	push	OFFSET ??_C@_0DH@FJKOLMI@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	eax, DWORD PTR $T236460[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv893[ebp], eax
	mov	ecx, DWORD PTR tv893[ebp]
	mov	DWORD PTR tv450[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	edx, DWORD PTR tv450[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236460[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1545 : 			veNamesToShow = GetContestLeaders();

	lea	eax, DWORD PTR $T236461[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetContestLeaders@CvMinorCivQuest@@QAE?AV?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@XZ ; CvMinorCivQuest::GetContestLeaders
	mov	DWORD PTR tv880[ebp], eax
	mov	ecx, DWORD PTR tv880[ebp]
	mov	DWORD PTR tv452[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	edx, DWORD PTR tv452[ebp]
	push	edx
	lea	ecx, DWORD PTR _veNamesToShow$[ebp]
	call	??4?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAEXABV0@@Z ; FStaticVector<enum PlayerTypes,64,1,297,0>::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236461[ebp]
	call	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>

; 1546 : 		}
; 1547 : 
; 1548 : 		// General "Quest Expired" catch statement
; 1549 : 		else

	jmp	$LN13@DoCancelQu
$LN3@DoCancelQu:

; 1550 : 		{
; 1551 : 			strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_ENDED_OTHER");

	push	OFFSET ??_C@_0CH@OABDKCHP@TXT_KEY_NOTIFICATION_QUEST_ENDED@
	lea	eax, DWORD PTR $T236462[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv878[ebp], eax
	mov	ecx, DWORD PTR tv878[ebp]
	mov	DWORD PTR tv454[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	mov	edx, DWORD PTR tv454[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236462[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1552 : 			strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_ENDED_OTHER");

	push	OFFSET ??_C@_0CP@IOCNLJFC@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	eax, DWORD PTR $T236463[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv885[ebp], eax
	mov	ecx, DWORD PTR tv885[ebp]
	mov	DWORD PTR tv456[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	mov	edx, DWORD PTR tv456[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T236463[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN13@DoCancelQu:

; 1553 : 		}
; 1554 : 
; 1555 : 		strMessage << pMinor->getNameKey();

	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T236464[ebp], eax
	lea	eax, DWORD PTR $T236464[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1556 : 		strSummary << pMinor->getNameKey();

	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T236465[ebp], eax
	lea	edx, DWORD PTR $T236465[ebp]
	push	edx
	lea	eax, DWORD PTR _strSummary$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 1557 : 
; 1558 : 		CvString sMessage = strMessage.toUTF8();

	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T236601[ebp], eax
	cmp	DWORD PTR $T236601[ebp], 0
	je	SHORT $LN125@DoCancelQu
	mov	ecx, DWORD PTR $T236601[ebp]
	mov	DWORD PTR tv705[ebp], ecx
	jmp	SHORT $LN126@DoCancelQu
$LN125@DoCancelQu:
	mov	DWORD PTR tv705[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN126@DoCancelQu:
	mov	edx, DWORD PTR tv705[ebp]
	push	edx
	lea	ecx, DWORD PTR _sMessage$221765[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H

; 1559 : 		CvString sSummary = strSummary.toUTF8();

	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T236610[ebp], eax
	cmp	DWORD PTR $T236610[ebp], 0
	je	SHORT $LN130@DoCancelQu
	mov	eax, DWORD PTR $T236610[ebp]
	mov	DWORD PTR tv764[ebp], eax
	jmp	SHORT $LN131@DoCancelQu
$LN130@DoCancelQu:
	mov	DWORD PTR tv764[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN131@DoCancelQu:
	mov	ecx, DWORD PTR tv764[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sSummary$221766[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H

; 1560 : 
; 1561 : 		// This quest involved multiple winners, so grab their names for the notification
; 1562 : 		if(veNamesToShow.size() > 0)

	mov	edx, DWORD PTR _veNamesToShow$[ebp+4]
	mov	DWORD PTR $T236614[ebp], edx
	cmp	DWORD PTR $T236614[ebp], 0
	jbe	$LN1@DoCancelQu

; 1563 : 		{
; 1564 : 			sMessage = sMessage + pMinor->GetMinorCivAI()->GetNamesListAsString(veNamesToShow);

	sub	esp, 272				; 00000110H
	mov	ecx, esp
	mov	DWORD PTR $T236466[ebp], esp
	lea	eax, DWORD PTR _veNamesToShow$[ebp]
	push	eax
	call	??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@ABV0@@Z ; FStaticVector<enum PlayerTypes,64,1,297,0>::FStaticVector<enum PlayerTypes,64,1,297,0>
	mov	DWORD PTR tv891[ebp], eax
	mov	ecx, DWORD PTR tv891[ebp]
	mov	DWORD PTR tv460[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	lea	edx, DWORD PTR $T236467[ebp]
	push	edx
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	mov	ecx, eax
	call	?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z ; CvMinorCivAI::GetNamesListAsString
	mov	DWORD PTR tv461[ebp], eax
	mov	eax, DWORD PTR tv461[ebp]
	mov	DWORD PTR tv463[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	ecx, DWORD PTR tv463[ebp]
	push	ecx
	lea	edx, DWORD PTR _sMessage$221765[ebp]
	push	edx
	lea	eax, DWORD PTR $T236468[ebp]
	push	eax
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv931[ebp], eax
	mov	ecx, DWORD PTR tv931[ebp]
	mov	DWORD PTR $T236630[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	mov	ecx, DWORD PTR $T236630[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _sMessage$221765[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	lea	ecx, DWORD PTR $T236468[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	lea	ecx, DWORD PTR $T236467[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN1@DoCancelQu:

; 1565 : 		}
; 1566 : 
; 1567 : 		pMinor->GetMinorCivAI()->AddQuestNotification(sMessage, sSummary, m_eAssignedPlayer);

	push	0
	push	-1
	push	-1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T236469[ebp], esp
	mov	DWORD PTR $T236639[ebp], ecx
	lea	edx, DWORD PTR _sSummary$221766[ebp]
	push	edx
	mov	ecx, DWORD PTR $T236639[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T236639[ebp]
	mov	DWORD PTR tv471[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T236470[ebp], esp
	mov	DWORD PTR $T236644[ebp], ecx
	lea	edx, DWORD PTR _sMessage$221765[ebp]
	push	edx
	mov	ecx, DWORD PTR $T236644[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T236644[ebp]
	mov	DWORD PTR tv474[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	mov	ecx, DWORD PTR _pMinor$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	mov	ecx, eax
	call	?AddQuestNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH_N@Z ; CvMinorCivAI::AddQuestNotification

; 1568 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	lea	ecx, DWORD PTR _sSummary$221766[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _sMessage$221765[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN16@DoCancelQu:

; 1569 : 
; 1570 : 	return true;

	mov	BYTE PTR $T236471[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _veNamesToShow$[ebp]
	call	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	al, BYTE PTR $T236471[ebp]
$LN19@DoCancelQu:

; 1571 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$0:
	lea	ecx, DWORD PTR _strMessage$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$1:
	lea	ecx, DWORD PTR _strSummary$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$2:
	lea	ecx, DWORD PTR _veNamesToShow$[ebp]
	jmp	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$3:
	lea	ecx, DWORD PTR $T236446[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$4:
	lea	ecx, DWORD PTR $T236447[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$5:
	lea	ecx, DWORD PTR $T236449[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$6:
	lea	ecx, DWORD PTR $T236450[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$7:
	lea	ecx, DWORD PTR $T236451[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$8:
	lea	ecx, DWORD PTR $T236452[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$9:
	lea	ecx, DWORD PTR $T236453[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$10:
	lea	ecx, DWORD PTR $T236454[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$11:
	lea	ecx, DWORD PTR $T236455[ebp]
	jmp	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$12:
	lea	ecx, DWORD PTR $T236456[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$13:
	lea	ecx, DWORD PTR $T236457[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$14:
	lea	ecx, DWORD PTR $T236458[ebp]
	jmp	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$15:
	lea	ecx, DWORD PTR $T236459[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$16:
	lea	ecx, DWORD PTR $T236460[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$17:
	lea	ecx, DWORD PTR $T236461[ebp]
	jmp	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$18:
	lea	ecx, DWORD PTR $T236462[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$19:
	lea	ecx, DWORD PTR $T236463[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$20:
	lea	ecx, DWORD PTR _sMessage$221765[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$21:
	lea	ecx, DWORD PTR _sSummary$221766[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$22:
	mov	ecx, DWORD PTR $T236466[ebp]
	jmp	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$23:
	lea	ecx, DWORD PTR $T236467[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$24:
	lea	ecx, DWORD PTR $T236468[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$25:
	mov	ecx, DWORD PTR $T236469[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ$26:
	mov	ecx, DWORD PTR $T236470[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-2836]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-172]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ ENDP		; CvMinorCivQuest::DoCancelQuest
PUBLIC	??5@YAAAVFDataStream@@AAV0@AAW4MinorCivQuestTypes@@@Z ; operator>>
PUBLIC	??5@YAAAVFDataStream@@AAV0@AAVCvMinorCivQuest@@@Z ; operator>>
EXTRN	?Read@FDataStream@@IAEXAA_N@Z:PROC		; FDataStream::Read
EXTRN	?Read@FDataStream@@IAEXAAH@Z:PROC		; FDataStream::Read
EXTRN	?Read@FDataStream@@IAEXAAI@Z:PROC		; FDataStream::Read
; Function compile flags: /Odtp
;	COMDAT ??5@YAAAVFDataStream@@AAV0@AAVCvMinorCivQuest@@@Z
_TEXT	SEGMENT
_uiVersion$ = -4					; size = 4
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??5@YAAAVFDataStream@@AAV0@AAVCvMinorCivQuest@@@Z PROC	; operator>>, COMDAT

; 1575 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1576 : 	uint uiVersion;
; 1577 : 	loadFrom >> uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 1578 : 
; 1579 : 	loadFrom >> writeTo.m_eType;

	mov	ecx, DWORD PTR _writeTo$[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _loadFrom$[ebp]
	push	edx
	call	??5@YAAAVFDataStream@@AAV0@AAW4MinorCivQuestTypes@@@Z ; operator>>
	add	esp, 8

; 1580 : 	loadFrom >> writeTo.m_iStartTurn;

	mov	eax, DWORD PTR _writeTo$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 1581 : 	loadFrom >> writeTo.m_iData1;

	mov	ecx, DWORD PTR _writeTo$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 1582 : 	loadFrom >> writeTo.m_iData2;

	mov	edx, DWORD PTR _writeTo$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 1583 : 	if (uiVersion >= 2)

	cmp	DWORD PTR _uiVersion$[ebp], 2
	jb	SHORT $LN2@operator

; 1584 : 	{
; 1585 : 		loadFrom >> writeTo.m_bHandled;

	mov	eax, DWORD PTR _writeTo$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 1586 : 	}
; 1587 : 	else

	jmp	SHORT $LN1@operator
$LN2@operator:

; 1588 : 	{
; 1589 : 		writeTo.m_bHandled = false;

	mov	ecx, DWORD PTR _writeTo$[ebp]
	mov	BYTE PTR [ecx+24], 0
$LN1@operator:

; 1590 : 	}
; 1591 : 
; 1592 : 	return loadFrom;

	mov	eax, DWORD PTR _loadFrom$[ebp]

; 1593 : }

	mov	esp, ebp
	pop	ebp
	ret	0
??5@YAAAVFDataStream@@AAV0@AAVCvMinorCivQuest@@@Z ENDP	; operator>>
_TEXT	ENDS
PUBLIC	??6@YAAAVFDataStream@@AAV0@ABW4MinorCivQuestTypes@@@Z ; operator<<
PUBLIC	??6@YAAAVFDataStream@@AAV0@ABVCvMinorCivQuest@@@Z ; operator<<
EXTRN	?Write@FDataStream@@IAEXAB_N@Z:PROC		; FDataStream::Write
EXTRN	?Write@FDataStream@@IAEXABH@Z:PROC		; FDataStream::Write
EXTRN	?Write@FDataStream@@IAEXABI@Z:PROC		; FDataStream::Write
; Function compile flags: /Odtp
;	COMDAT ??6@YAAAVFDataStream@@AAV0@ABVCvMinorCivQuest@@@Z
_TEXT	SEGMENT
_uiVersion$ = -4					; size = 4
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??6@YAAAVFDataStream@@AAV0@ABVCvMinorCivQuest@@@Z PROC	; operator<<, COMDAT

; 1597 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1598 : 	uint uiVersion = 2;

	mov	DWORD PTR _uiVersion$[ebp], 2

; 1599 : 	saveTo << uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 1600 : 
; 1601 : 	saveTo << readFrom.m_eType;

	mov	ecx, DWORD PTR _readFrom$[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _saveTo$[ebp]
	push	edx
	call	??6@YAAAVFDataStream@@AAV0@ABW4MinorCivQuestTypes@@@Z ; operator<<
	add	esp, 8

; 1602 : 	saveTo << readFrom.m_iStartTurn;

	mov	eax, DWORD PTR _readFrom$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 1603 : 	saveTo << readFrom.m_iData1;

	mov	ecx, DWORD PTR _readFrom$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 1604 : 	saveTo << readFrom.m_iData2;

	mov	edx, DWORD PTR _readFrom$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 1605 : 	saveTo << readFrom.m_bHandled;

	mov	eax, DWORD PTR _readFrom$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 1606 : 
; 1607 : 	return saveTo;

	mov	eax, DWORD PTR _saveTo$[ebp]

; 1608 : }

	mov	esp, ebp
	pop	ebp
	ret	0
??6@YAAAVFDataStream@@AAV0@ABVCvMinorCivQuest@@@Z ENDP	; operator<<
_TEXT	ENDS
PUBLIC	??0?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>::FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>
PUBLIC	??0CvMinorCivAI@@QAE@XZ				; CvMinorCivAI::CvMinorCivAI
; Function compile flags: /Odtp
;	COMDAT ??0CvMinorCivAI@@QAE@XZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
??0CvMinorCivAI@@QAE@XZ PROC				; CvMinorCivAI::CvMinorCivAI, COMDAT
; _this$ = ecx

; 1615 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3328				; 00000d00H
	call	??0?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>::FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>

; 1616 : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CvMinorCivAI@@QAE@XZ ENDP				; CvMinorCivAI::CvMinorCivAI
_TEXT	ENDS
PUBLIC	??1?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>::~FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>
PUBLIC	?Uninit@CvMinorCivAI@@QAEXXZ			; CvMinorCivAI::Uninit
PUBLIC	??1CvMinorCivAI@@QAE@XZ				; CvMinorCivAI::~CvMinorCivAI
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$??1CvMinorCivAI@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvMinorCivAI@@QAE@XZ$0
__ehfuncinfo$??1CvMinorCivAI@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CvMinorCivAI@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ??1CvMinorCivAI@@QAE@XZ
_TEXT	SEGMENT
_this$ = -40						; size = 4
__$EHRec$ = -12						; size = 12
??1CvMinorCivAI@@QAE@XZ PROC				; CvMinorCivAI::~CvMinorCivAI, COMDAT
; _this$ = ecx

; 1619 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CvMinorCivAI@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1620 : 	Uninit();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Uninit@CvMinorCivAI@@QAEXXZ		; CvMinorCivAI::Uninit

; 1621 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3328				; 00000d00H
	call	??1?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>::~FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CvMinorCivAI@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3328				; 00000d00H
	jmp	??1?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>::~FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>
__ehhandler$??1CvMinorCivAI@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CvMinorCivAI@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CvMinorCivAI@@QAE@XZ ENDP				; CvMinorCivAI::~CvMinorCivAI
PUBLIC	?Reset@CvMinorCivAI@@QAEXXZ			; CvMinorCivAI::Reset
PUBLIC	?Init@CvMinorCivAI@@QAEXPAVCvPlayer@@@Z		; CvMinorCivAI::Init
EXTRN	?minorCivType@CvPreGame@@YA?AW4MinorCivTypes@@W4PlayerTypes@@@Z:PROC ; CvPreGame::minorCivType
; Function compile flags: /Odtp
;	COMDAT ?Init@CvMinorCivAI@@QAEXPAVCvPlayer@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T236802 = -4						; size = 4
_pPlayer$ = 8						; size = 4
?Init@CvMinorCivAI@@QAEXPAVCvPlayer@@@Z PROC		; CvMinorCivAI::Init, COMDAT
; _this$ = ecx

; 1625 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1626 : 	m_pPlayer = pPlayer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	mov	DWORD PTR [eax], ecx

; 1627 : 	m_minorCivType = CvPreGame::minorCivType(m_pPlayer->GetID());

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T236802[ebp], ecx
	mov	edx, DWORD PTR $T236802[ebp]
	push	edx
	call	?minorCivType@CvPreGame@@YA?AW4MinorCivTypes@@W4PlayerTypes@@@Z ; CvPreGame::minorCivType
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1628 : 
; 1629 : 	Reset();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@CvMinorCivAI@@QAEXXZ		; CvMinorCivAI::Reset

; 1630 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Init@CvMinorCivAI@@QAEXPAVCvPlayer@@@Z ENDP		; CvMinorCivAI::Init
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Uninit@CvMinorCivAI@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Uninit@CvMinorCivAI@@QAEXXZ PROC			; CvMinorCivAI::Uninit, COMDAT
; _this$ = ecx

; 1634 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1635 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Uninit@CvMinorCivAI@@QAEXXZ ENDP			; CvMinorCivAI::Uninit
_TEXT	ENDS
PUBLIC	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ	; CvMinorCivAI::GetPlayer
PUBLIC	?ResetQuestList@CvMinorCivAI@@QAEXXZ		; CvMinorCivAI::ResetQuestList
EXTRN	?isMinorCiv@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isMinorCiv
; Function compile flags: /Odtp
;	COMDAT ?Reset@CvMinorCivAI@@QAEXXZ
_TEXT	SEGMENT
_this$ = -40						; size = 4
$T236826 = -36						; size = 4
$T236819 = -32						; size = 4
$T236815 = -28						; size = 4
_iLoopPlot$221829 = -24					; size = 4
_pLoopPlot$221826 = -20					; size = 4
_eTeam$221827 = -16					; size = 4
_iNumPlotsInEntireWorld$221828 = -12			; size = 4
_iJ$ = -8						; size = 4
_iI$ = -4						; size = 4
?Reset@CvMinorCivAI@@QAEXXZ PROC			; CvMinorCivAI::Reset, COMDAT
; _this$ = ecx

; 1639 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	DWORD PTR _this$[ebp], ecx

; 1640 : 	m_ePersonality = NO_MINOR_CIV_PERSONALITY_TYPE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], -1

; 1641 : 	m_eStatus = NO_MINOR_CIV_STATUS_TYPE;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], -1

; 1642 : 	m_eUniqueUnit = NO_UNIT;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], -1

; 1643 : 
; 1644 : 	m_iTurnsSinceThreatenedByBarbarians = -1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], -1

; 1645 : 	m_iGlobalQuestCountdown = -1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], -1

; 1646 : 
; 1647 : 	m_eAlly = NO_PLAYER;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+2012], -1

; 1648 : 	m_iTurnAllied = -1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+2016], -1

; 1649 : 	m_eMajorBoughtOutBy = NO_PLAYER;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+2020], -1

; 1650 : 	m_bDisableNotifications = false;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+6864], 0

; 1651 : 
; 1652 : 	int iI, iJ;
; 1653 : 
; 1654 : 	for(iI = 0; iI < MAX_MAJOR_CIVS; iI++)

	mov	DWORD PTR _iI$[ebp], 0
	jmp	SHORT $LN14@Reset
$LN13@Reset:
	mov	eax, DWORD PTR _iI$[ebp]
	add	eax, 1
	mov	DWORD PTR _iI$[ebp], eax
$LN14@Reset:
	cmp	DWORD PTR _iI$[ebp], 22			; 00000016H
	jge	$LN12@Reset

; 1655 : 	{
; 1656 : 		m_abWarQuestAgainstMajor[iI] = false;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _iI$[ebp]
	mov	BYTE PTR [ecx+28], 0

; 1657 : 
; 1658 : 		for(iJ = 0; iJ < MAX_MAJOR_CIVS; iJ++)

	mov	DWORD PTR _iJ$[ebp], 0
	jmp	SHORT $LN11@Reset
$LN10@Reset:
	mov	edx, DWORD PTR _iJ$[ebp]
	add	edx, 1
	mov	DWORD PTR _iJ$[ebp], edx
$LN11@Reset:
	cmp	DWORD PTR _iJ$[ebp], 22			; 00000016H
	jge	SHORT $LN9@Reset

; 1659 : 		{
; 1660 : 			m_aaiNumEnemyUnitsLeftToKillByMajor[iI][iJ] = -1;

	mov	eax, DWORD PTR _iI$[ebp]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+52]
	mov	eax, DWORD PTR _iJ$[ebp]
	mov	DWORD PTR [edx+eax*4], -1

; 1661 : 		}

	jmp	SHORT $LN10@Reset
$LN9@Reset:

; 1662 : 
; 1663 : 		m_abRouteConnectionEstablished[iI] = false;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _iI$[ebp]
	mov	BYTE PTR [ecx+1988], 0

; 1664 : 
; 1665 : 		m_aiFriendshipWithMajorTimes100[iI] = 0;

	mov	edx, DWORD PTR _iI$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx*4+2024], 0

; 1666 : 		m_aiAngerFreeIntrusionCounter[iI] = 0;

	mov	ecx, DWORD PTR _iI$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*4+2112], 0

; 1667 : 		m_aiPlayerQuests[iI] = NO_MINOR_CIV_QUEST_TYPE;

	mov	eax, DWORD PTR _iI$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+2200], -1

; 1668 : 		m_aiQuestData1[iI] = -1;

	mov	edx, DWORD PTR _iI$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx*4+2288], -1

; 1669 : 		m_aiQuestData2[iI] = -1;

	mov	ecx, DWORD PTR _iI$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*4+2376], -1

; 1670 : 		m_aiQuestCountdown[iI] = -1;

	mov	eax, DWORD PTR _iI$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+2464], -1

; 1671 : 		m_aiUnitSpawnCounter[iI] = -1;

	mov	edx, DWORD PTR _iI$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx*4+2552], -1

; 1672 : 		m_aiNumUnitsGifted[iI] = 0;

	mov	ecx, DWORD PTR _iI$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*4+2640], 0

; 1673 : 		m_aiNumGoldGifted[iI] = 0;

	mov	eax, DWORD PTR _iI$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+2728], 0

; 1674 : 		m_aiTurnLastBullied[iI] = -1;

	mov	edx, DWORD PTR _iI$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx*4+2816], -1

; 1675 : 		m_aiTurnLastPledged[iI] = -1;

	mov	ecx, DWORD PTR _iI$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*4+2904], -1

; 1676 : 		m_aiTurnLastBrokePledge[iI] = -1;

	mov	eax, DWORD PTR _iI$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+2992], -1

; 1677 : 		m_abUnitSpawningDisabled[iI] = false;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _iI$[ebp]
	mov	BYTE PTR [edx+3080], 0

; 1678 : 		m_abMajorIntruding[iI] = false;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _iI$[ebp]
	mov	BYTE PTR [eax+3102], 0

; 1679 : 		m_abEverFriends[iI] = false;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _iI$[ebp]
	mov	BYTE PTR [ecx+3124], 0

; 1680 : 		m_abPledgeToProtect[iI] = false;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _iI$[ebp]
	mov	BYTE PTR [edx+3146], 0

; 1681 : 		m_aiMajorScratchPad[iI] = 0;

	mov	eax, DWORD PTR _iI$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+6776], 0

; 1682 : 	}

	jmp	$LN13@Reset
$LN12@Reset:

; 1683 : 
; 1684 : 	for(iI = 0; iI < REALLY_MAX_TEAMS; iI++)

	mov	DWORD PTR _iI$[ebp], 0
	jmp	SHORT $LN8@Reset
$LN7@Reset:
	mov	edx, DWORD PTR _iI$[ebp]
	add	edx, 1
	mov	DWORD PTR _iI$[ebp], edx
$LN8@Reset:
	cmp	DWORD PTR _iI$[ebp], 80			; 00000050H
	jge	SHORT $LN6@Reset

; 1685 : 	{
; 1686 : 		m_abPermanentWar[iI] = false;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _iI$[ebp]
	mov	BYTE PTR [eax+3168], 0

; 1687 : 		m_abWaryOfTeam[iI] = false;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _iI$[ebp]
	mov	BYTE PTR [ecx+3248], 0

; 1688 : 	}

	jmp	SHORT $LN7@Reset
$LN6@Reset:

; 1689 : 
; 1690 : 	ResetQuestList();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ResetQuestList@CvMinorCivAI@@QAEXXZ	; CvMinorCivAI::ResetQuestList

; 1691 : 
; 1692 : 	if(GetPlayer()->isMinorCiv())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	movzx	edx, al
	test	edx, edx
	je	$LN15@Reset

; 1693 : 	{
; 1694 : 		CvPlot* pLoopPlot;
; 1695 : 		TeamTypes eTeam = GetPlayer()->getTeam();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T236815[ebp], eax
	mov	eax, DWORD PTR $T236815[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR _eTeam$221827[ebp], eax

; 1696 : 		int iNumPlotsInEntireWorld = GC.getMap().numPlots();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T236819[ebp], edx
	mov	eax, DWORD PTR $T236819[ebp]
	mov	ecx, DWORD PTR [eax+4028]
	mov	DWORD PTR _iNumPlotsInEntireWorld$221828[ebp], ecx

; 1697 : 		for(int iLoopPlot = 0; iLoopPlot < iNumPlotsInEntireWorld; iLoopPlot++)

	mov	DWORD PTR _iLoopPlot$221829[ebp], 0
	jmp	SHORT $LN4@Reset
$LN3@Reset:
	mov	edx, DWORD PTR _iLoopPlot$221829[ebp]
	add	edx, 1
	mov	DWORD PTR _iLoopPlot$221829[ebp], edx
$LN4@Reset:
	mov	eax, DWORD PTR _iLoopPlot$221829[ebp]
	cmp	eax, DWORD PTR _iNumPlotsInEntireWorld$221828[ebp]
	jge	SHORT $LN15@Reset

; 1698 : 		{
; 1699 : 			pLoopPlot = GC.getMap().plotByIndexUnchecked(iLoopPlot);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T236826[ebp], ecx
	mov	edx, DWORD PTR _iLoopPlot$221829[ebp]
	imul	edx, 484				; 000001e4H
	mov	eax, DWORD PTR $T236826[ebp]
	add	edx, DWORD PTR [eax+4068]
	mov	DWORD PTR _pLoopPlot$221826[ebp], edx

; 1700 : 			if(pLoopPlot)

	je	SHORT $LN1@Reset

; 1701 : 				pLoopPlot->setRevealed(eTeam, true);

	push	-1
	push	0
	push	1
	mov	ecx, DWORD PTR _eTeam$221827[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pLoopPlot$221826[ebp]
	call	?setRevealed@CvPlot@@QAE_NW4TeamTypes@@_N10@Z ; CvPlot::setRevealed
$LN1@Reset:

; 1702 : 		}

	jmp	SHORT $LN3@Reset
$LN15@Reset:

; 1703 : 	}
; 1704 : 
; 1705 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@CvMinorCivAI@@QAEXXZ ENDP			; CvMinorCivAI::Reset
_TEXT	ENDS
PUBLIC	??1?$BaseVector@VCvMinorCivQuest@@$0A@@@QAE@XZ	; BaseVector<CvMinorCivQuest,0>::~BaseVector<CvMinorCivQuest,0>
PUBLIC	??1?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvMinorCivQuest,5,0,297,0>::~FStaticVector<CvMinorCivQuest,5,0,297,0>
PUBLIC	?Free@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@IAEXPAVCvMinorCivQuest@@I@Z ; FStaticVector<CvMinorCivQuest,5,0,297,0>::Free
PUBLIC	?push_back@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAEIABV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@@Z ; FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>::push_back
PUBLIC	??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvMinorCivQuest,5,0,297,0>::FStaticVector<CvMinorCivQuest,5,0,297,0>
PUBLIC	?clear@?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@QAEXXZ ; BaseVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,0>::clear
PUBLIC	?clear@?$BaseVector@VCvMinorCivQuest@@$0A@@@QAEXXZ ; BaseVector<CvMinorCivQuest,0>::clear
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?ResetQuestList@CvMinorCivAI@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ResetQuestList@CvMinorCivAI@@QAEXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ResetQuestList@CvMinorCivAI@@QAEXXZ$5
__ehfuncinfo$?ResetQuestList@CvMinorCivAI@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?ResetQuestList@CvMinorCivAI@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?ResetQuestList@CvMinorCivAI@@QAEXXZ
_TEXT	SEGMENT
_this$ = -280						; size = 4
$T236837 = -192						; size = 4
_vQuestList$221845 = -188				; size = 156
__$ArrayPad$ = -24					; size = 4
_iNewEntry$221841 = -20					; size = 4
_iPlayerEntry$221837 = -16				; size = 4
__$EHRec$ = -12						; size = 12
?ResetQuestList@CvMinorCivAI@@QAEXXZ PROC		; CvMinorCivAI::ResetQuestList, COMDAT
; _this$ = ecx

; 1708 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ResetQuestList@CvMinorCivAI@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1709 : 	//antonjs: todo: this is called when PlayerTypes is -1, why? does it cause inefficiency or unused memory?
; 1710 : 
; 1711 : 	for(uint iPlayerEntry = 0; iPlayerEntry < m_QuestsGiven.size(); iPlayerEntry++)

	mov	DWORD PTR _iPlayerEntry$221837[ebp], 0
	jmp	SHORT $LN6@ResetQuest
$LN5@ResetQuest:
	mov	eax, DWORD PTR _iPlayerEntry$221837[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayerEntry$221837[ebp], eax
$LN6@ResetQuest:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+3332]
	mov	DWORD PTR $T236837[ebp], edx
	mov	eax, DWORD PTR _iPlayerEntry$221837[ebp]
	cmp	eax, DWORD PTR $T236837[ebp]
	jae	SHORT $LN4@ResetQuest

; 1712 : 	{
; 1713 : 		m_QuestsGiven[iPlayerEntry].clear();

	mov	ecx, DWORD PTR _iPlayerEntry$221837[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	call	?clear@?$BaseVector@VCvMinorCivQuest@@$0A@@@QAEXXZ ; BaseVector<CvMinorCivQuest,0>::clear

; 1714 : 	}

	jmp	SHORT $LN5@ResetQuest
$LN4@ResetQuest:

; 1715 : 
; 1716 : 	m_QuestsGiven.clear();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3328				; 00000d00H
	call	?clear@?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@QAEXXZ ; BaseVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,0>::clear

; 1717 : 
; 1718 : 	for(int iNewEntry = 0; iNewEntry < MAX_MAJOR_CIVS; iNewEntry++)

	mov	DWORD PTR _iNewEntry$221841[ebp], 0
	jmp	SHORT $LN3@ResetQuest
$LN2@ResetQuest:
	mov	eax, DWORD PTR _iNewEntry$221841[ebp]
	add	eax, 1
	mov	DWORD PTR _iNewEntry$221841[ebp], eax
$LN3@ResetQuest:
	cmp	DWORD PTR _iNewEntry$221841[ebp], 22	; 00000016H
	jge	SHORT $LN7@ResetQuest

; 1719 : 	{
; 1720 : 		QuestListForPlayer vQuestList;

	lea	ecx, DWORD PTR _vQuestList$221845[ebp]
	call	??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvMinorCivQuest,5,0,297,0>::FStaticVector<CvMinorCivQuest,5,0,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1721 : 		m_QuestsGiven.push_back(vQuestList);

	lea	ecx, DWORD PTR _vQuestList$221845[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3328				; 00000d00H
	call	?push_back@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAEIABV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@@Z ; FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>::push_back

; 1722 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR _vQuestList$221845[ebp+4]
	push	edx
	mov	eax, DWORD PTR _vQuestList$221845[ebp]
	push	eax
	lea	ecx, DWORD PTR _vQuestList$221845[ebp]
	call	?Free@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@IAEXPAVCvMinorCivQuest@@I@Z ; FStaticVector<CvMinorCivQuest,5,0,297,0>::Free
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	jmp	SHORT $LN2@ResetQuest
$LN7@ResetQuest:

; 1723 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ResetQuestList@CvMinorCivAI@@QAEXXZ$0:
	lea	ecx, DWORD PTR _vQuestList$221845[ebp]
	jmp	??1?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvMinorCivQuest,5,0,297,0>::~FStaticVector<CvMinorCivQuest,5,0,297,0>
__unwindfunclet$?ResetQuestList@CvMinorCivAI@@QAEXXZ$5:
	lea	ecx, DWORD PTR _vQuestList$221845[ebp]
	jmp	??1?$BaseVector@VCvMinorCivQuest@@$0A@@@QAE@XZ ; BaseVector<CvMinorCivQuest,0>::~BaseVector<CvMinorCivQuest,0>
__ehhandler$?ResetQuestList@CvMinorCivAI@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ResetQuestList@CvMinorCivAI@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ResetQuestList@CvMinorCivAI@@QAEXXZ ENDP		; CvMinorCivAI::ResetQuestList
PUBLIC	?push_back@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAEIABVCvMinorCivQuest@@@Z ; FStaticVector<CvMinorCivQuest,5,0,297,0>::push_back
PUBLIC	??$?5_N$0FA@@@YAAAVFDataStream@@AAV0@AAY0FA@_N@Z ; operator>><bool,80>
PUBLIC	??$?5H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@H@Z	; operator>><int,22>
PUBLIC	??$?5$$BY0BG@H$0BG@@@YAAAVFDataStream@@AAV0@AAY1BG@BG@H@Z ; operator>><int [22],22>
PUBLIC	??$?5_N$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@_N@Z ; operator>><bool,22>
PUBLIC	??5@YAAAVFDataStream@@AAV0@AAW4MinorCivStatusTypes@@@Z ; operator>>
PUBLIC	??5@YAAAVFDataStream@@AAV0@AAW4MinorCivPersonalityTypes@@@Z ; operator>>
PUBLIC	?Read@CvMinorCivAI@@QAEXAAVFDataStream@@@Z	; CvMinorCivAI::Read
EXTRN	??5@YAAAVFDataStream@@AAV0@AAW4PlayerTypes@@@Z:PROC ; operator>>
EXTRN	??5@YAAAVFDataStream@@AAV0@AAW4UnitTypes@@@Z:PROC ; operator>>
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fdatastream.h
xdata$x	SEGMENT
__unwindtable$?Read@CvMinorCivAI@@QAEXAAVFDataStream@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Read@CvMinorCivAI@@QAEXAAVFDataStream@@@Z$0
__ehfuncinfo$?Read@CvMinorCivAI@@QAEXAAVFDataStream@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Read@CvMinorCivAI@@QAEXAAVFDataStream@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?Read@CvMinorCivAI@@QAEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_this$ = -92						; size = 4
$T236980 = -68						; size = 4
$T236979 = -64						; size = 4
_iQuestLoop$221900 = -60				; size = 4
_iQuestEntriesToRead$221898 = -56			; size = 4
_tempQuest$221899 = -52					; size = 28
_iPlayerLoop$221894 = -24				; size = 4
_uiVersion$ = -20					; size = 4
_iPlayerEntriesToRead$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
_kStream$ = 8						; size = 4
?Read@CvMinorCivAI@@QAEXAAVFDataStream@@@Z PROC		; CvMinorCivAI::Read, COMDAT
; _this$ = ecx

; 1727 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Read@CvMinorCivAI@@QAEXAAVFDataStream@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1728 : 	// Version number to maintain backwards compatibility
; 1729 : 	uint uiVersion;
; 1730 : 	kStream >> uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 1731 : 
; 1732 : 	kStream >> m_ePersonality;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??5@YAAAVFDataStream@@AAV0@AAW4MinorCivPersonalityTypes@@@Z ; operator>>
	add	esp, 8

; 1733 : 	kStream >> m_eStatus;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??5@YAAAVFDataStream@@AAV0@AAW4MinorCivStatusTypes@@@Z ; operator>>
	add	esp, 8

; 1734 : 	kStream >> m_eUniqueUnit;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	call	??5@YAAAVFDataStream@@AAV0@AAW4UnitTypes@@@Z ; operator>>
	add	esp, 8

; 1735 : 
; 1736 : 	kStream >> m_iTurnsSinceThreatenedByBarbarians;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 1737 : 
; 1738 : 	kStream >> m_iGlobalQuestCountdown;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 1739 : 
; 1740 : 	kStream >> m_eAlly;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 2012				; 000007dcH
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??5@YAAAVFDataStream@@AAV0@AAW4PlayerTypes@@@Z ; operator>>
	add	esp, 8

; 1741 : 
; 1742 : 	kStream >> m_iTurnAllied;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 2016				; 000007e0H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 1743 : 
; 1744 : 	kStream >> m_eMajorBoughtOutBy;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 2020				; 000007e4H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??5@YAAAVFDataStream@@AAV0@AAW4PlayerTypes@@@Z ; operator>>
	add	esp, 8

; 1745 : 
; 1746 : 	kStream >> m_abWarQuestAgainstMajor;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	call	??$?5_N$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@_N@Z ; operator>><bool,22>
	add	esp, 8

; 1747 : 
; 1748 : 	kStream >> m_aaiNumEnemyUnitsLeftToKillByMajor;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??$?5$$BY0BG@H$0BG@@@YAAAVFDataStream@@AAV0@AAY1BG@BG@H@Z ; operator>><int [22],22>
	add	esp, 8

; 1749 : 
; 1750 : 	kStream >> m_abRouteConnectionEstablished;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1988				; 000007c4H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??$?5_N$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@_N@Z ; operator>><bool,22>
	add	esp, 8

; 1751 : 
; 1752 : 	kStream >> m_aiFriendshipWithMajorTimes100;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 2024				; 000007e8H
	push	edx
	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	call	??$?5H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@H@Z ; operator>><int,22>
	add	esp, 8

; 1753 : 
; 1754 : 	kStream >> m_aiAngerFreeIntrusionCounter;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2112				; 00000840H
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??$?5H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@H@Z ; operator>><int,22>
	add	esp, 8

; 1755 : 
; 1756 : 	kStream >> m_aiPlayerQuests;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 2200				; 00000898H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??$?5H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@H@Z ; operator>><int,22>
	add	esp, 8

; 1757 : 	kStream >> m_aiQuestData1;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 2288				; 000008f0H
	push	edx
	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	call	??$?5H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@H@Z ; operator>><int,22>
	add	esp, 8

; 1758 : 	kStream >> m_aiQuestData2;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2376				; 00000948H
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??$?5H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@H@Z ; operator>><int,22>
	add	esp, 8

; 1759 : 	kStream >> m_aiQuestCountdown;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 2464				; 000009a0H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??$?5H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@H@Z ; operator>><int,22>
	add	esp, 8

; 1760 : 	kStream >> m_aiUnitSpawnCounter;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 2552				; 000009f8H
	push	edx
	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	call	??$?5H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@H@Z ; operator>><int,22>
	add	esp, 8

; 1761 : 
; 1762 : 	kStream >> m_aiNumUnitsGifted;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2640				; 00000a50H
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??$?5H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@H@Z ; operator>><int,22>
	add	esp, 8

; 1763 : 
; 1764 : 	kStream >> m_aiNumGoldGifted;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 2728				; 00000aa8H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??$?5H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@H@Z ; operator>><int,22>
	add	esp, 8

; 1765 : 
; 1766 : 	kStream >> m_aiTurnLastBullied;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 2816				; 00000b00H
	push	edx
	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	call	??$?5H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@H@Z ; operator>><int,22>
	add	esp, 8

; 1767 : 
; 1768 : 	kStream >> m_aiTurnLastPledged;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2904				; 00000b58H
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??$?5H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@H@Z ; operator>><int,22>
	add	esp, 8

; 1769 : 	kStream >> m_aiTurnLastBrokePledge;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 2992				; 00000bb0H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??$?5H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@H@Z ; operator>><int,22>
	add	esp, 8

; 1770 : 
; 1771 : 	kStream >> m_abUnitSpawningDisabled;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 3080				; 00000c08H
	push	edx
	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	call	??$?5_N$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@_N@Z ; operator>><bool,22>
	add	esp, 8

; 1772 : 	kStream >> m_abMajorIntruding;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3102				; 00000c1eH
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??$?5_N$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@_N@Z ; operator>><bool,22>
	add	esp, 8

; 1773 : 	kStream >> m_abEverFriends;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 3124				; 00000c34H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??$?5_N$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@_N@Z ; operator>><bool,22>
	add	esp, 8

; 1774 : 
; 1775 : 	kStream >> m_abPledgeToProtect;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 3146				; 00000c4aH
	push	edx
	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	call	??$?5_N$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@_N@Z ; operator>><bool,22>
	add	esp, 8

; 1776 : 
; 1777 : 	kStream >> m_abPermanentWar;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3168				; 00000c60H
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??$?5_N$0FA@@@YAAAVFDataStream@@AAV0@AAY0FA@_N@Z ; operator>><bool,80>
	add	esp, 8

; 1778 : 
; 1779 : 	kStream >> m_abWaryOfTeam;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 3248				; 00000cb0H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??$?5_N$0FA@@@YAAAVFDataStream@@AAV0@AAY0FA@_N@Z ; operator>><bool,80>
	add	esp, 8

; 1780 : 
; 1781 : 	// List of quests given
; 1782 : 	ResetQuestList();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ResetQuestList@CvMinorCivAI@@QAEXXZ	; CvMinorCivAI::ResetQuestList

; 1783 : 
; 1784 : 	int iPlayerEntriesToRead;
; 1785 : 	//antonjs: consider: change this; always read in iPlayerEntriesToRead
; 1786 : 	iPlayerEntriesToRead = MAX_MAJOR_CIVS;

	mov	DWORD PTR _iPlayerEntriesToRead$[ebp], 22 ; 00000016H

; 1787 : 
; 1788 : 	for(int iPlayerLoop = 0; iPlayerLoop < iPlayerEntriesToRead; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$221894[ebp], 0
	jmp	SHORT $LN6@Read
$LN5@Read:
	mov	edx, DWORD PTR _iPlayerLoop$221894[ebp]
	add	edx, 1
	mov	DWORD PTR _iPlayerLoop$221894[ebp], edx
$LN6@Read:
	mov	eax, DWORD PTR _iPlayerLoop$221894[ebp]
	cmp	eax, DWORD PTR _iPlayerEntriesToRead$[ebp]
	jge	$LN4@Read

; 1789 : 	{
; 1790 : 		int iQuestEntriesToRead;
; 1791 : 		kStream >> iQuestEntriesToRead;

	lea	ecx, DWORD PTR _iQuestEntriesToRead$221898[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 1792 : 		CvMinorCivQuest tempQuest;

	lea	ecx, DWORD PTR _tempQuest$221899[ebp]
	call	??0CvMinorCivQuest@@QAE@XZ		; CvMinorCivQuest::CvMinorCivQuest
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1793 : 		for(int iQuestLoop = 0; iQuestLoop < iQuestEntriesToRead; iQuestLoop++)

	mov	DWORD PTR _iQuestLoop$221900[ebp], 0
	jmp	SHORT $LN3@Read
$LN2@Read:
	mov	edx, DWORD PTR _iQuestLoop$221900[ebp]
	add	edx, 1
	mov	DWORD PTR _iQuestLoop$221900[ebp], edx
$LN3@Read:
	mov	eax, DWORD PTR _iQuestLoop$221900[ebp]
	cmp	eax, DWORD PTR _iQuestEntriesToRead$221898[ebp]
	jge	SHORT $LN1@Read

; 1794 : 		{
; 1795 : 			kStream >> tempQuest;

	lea	ecx, DWORD PTR _tempQuest$221899[ebp]
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??5@YAAAVFDataStream@@AAV0@AAVCvMinorCivQuest@@@Z ; operator>>
	add	esp, 8

; 1796 : 
; 1797 : 			tempQuest.m_eMinor = GetPlayer()->GetID();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T236979[ebp], eax
	mov	eax, DWORD PTR $T236979[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T236980[ebp], ecx
	mov	edx, DWORD PTR $T236980[ebp]
	mov	DWORD PTR _tempQuest$221899[ebp], edx

; 1798 : 			tempQuest.m_eAssignedPlayer = (PlayerTypes) iPlayerLoop;

	mov	eax, DWORD PTR _iPlayerLoop$221894[ebp]
	mov	DWORD PTR _tempQuest$221899[ebp+4], eax

; 1799 : 
; 1800 : 			m_QuestsGiven[iPlayerLoop].push_back(tempQuest);

	lea	ecx, DWORD PTR _tempQuest$221899[ebp]
	push	ecx
	mov	ecx, DWORD PTR _iPlayerLoop$221894[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	call	?push_back@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAEIABVCvMinorCivQuest@@@Z ; FStaticVector<CvMinorCivQuest,5,0,297,0>::push_back

; 1801 : 		}

	jmp	SHORT $LN2@Read
$LN1@Read:

; 1802 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tempQuest$221899[ebp]
	call	??1CvMinorCivQuest@@QAE@XZ		; CvMinorCivQuest::~CvMinorCivQuest
	jmp	$LN5@Read
$LN4@Read:

; 1803 : 	CvAssertMsg(m_QuestsGiven.size() == MAX_MAJOR_CIVS, "Number of entries in minor's quest list does not match MAX_MAJOR_CIVS when read from memory!");
; 1804 : 
; 1805 : 	kStream >> m_bDisableNotifications;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 6864				; 00001ad0H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 1806 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Read@CvMinorCivAI@@QAEXAAVFDataStream@@@Z$0:
	lea	ecx, DWORD PTR _tempQuest$221899[ebp]
	jmp	??1CvMinorCivQuest@@QAE@XZ		; CvMinorCivQuest::~CvMinorCivQuest
__ehhandler$?Read@CvMinorCivAI@@QAEXAAVFDataStream@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Read@CvMinorCivAI@@QAEXAAVFDataStream@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Read@CvMinorCivAI@@QAEXAAVFDataStream@@@Z ENDP		; CvMinorCivAI::Read
PUBLIC	??$?6_N$0FA@@@YAAAVFDataStream@@AAV0@AAY0FA@$$CB_N@Z ; operator<<<bool,80>
PUBLIC	??$?6H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CBH@Z ; operator<<<int,22>
PUBLIC	??$?6$$BY0BG@$$CBH$0BG@@@YAAAVFDataStream@@AAV0@AAY1BG@BG@$$CBH@Z ; operator<<<int const [22],22>
PUBLIC	??$?6_N$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CB_N@Z ; operator<<<bool,22>
PUBLIC	??6@YAAAVFDataStream@@AAV0@ABW4MinorCivStatusTypes@@@Z ; operator<<
PUBLIC	??6@YAAAVFDataStream@@AAV0@ABW4MinorCivPersonalityTypes@@@Z ; operator<<
PUBLIC	?Write@CvMinorCivAI@@QBEXAAVFDataStream@@@Z	; CvMinorCivAI::Write
EXTRN	??6@YAAAVFDataStream@@AAV0@ABW4PlayerTypes@@@Z:PROC ; operator<<
EXTRN	??6@YAAAVFDataStream@@AAV0@ABW4UnitTypes@@@Z:PROC ; operator<<
; Function compile flags: /Odtp
;	COMDAT ?Write@CvMinorCivAI@@QBEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T237031 = -28						; size = 4
$T237027 = -24						; size = 4
_iQuestEntriesToWrite$221991 = -20			; size = 4
_pvQuestList$221989 = -16				; size = 4
_itr_quest$221992 = -12					; size = 4
_itr_player$ = -8					; size = 4
_uiVersion$ = -4					; size = 4
_kStream$ = 8						; size = 4
?Write@CvMinorCivAI@@QBEXAAVFDataStream@@@Z PROC	; CvMinorCivAI::Write, COMDAT
; _this$ = ecx

; 1810 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 1811 : 	// Current version number
; 1812 : 	uint uiVersion = 1;

	mov	DWORD PTR _uiVersion$[ebp], 1

; 1813 : 	kStream << uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 1814 : 
; 1815 : 	kStream << m_ePersonality;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??6@YAAAVFDataStream@@AAV0@ABW4MinorCivPersonalityTypes@@@Z ; operator<<
	add	esp, 8

; 1816 : 	kStream << m_eStatus;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??6@YAAAVFDataStream@@AAV0@ABW4MinorCivStatusTypes@@@Z ; operator<<
	add	esp, 8

; 1817 : 	kStream << m_eUniqueUnit; // Version 14

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	call	??6@YAAAVFDataStream@@AAV0@ABW4UnitTypes@@@Z ; operator<<
	add	esp, 8

; 1818 : 
; 1819 : 	kStream << m_iTurnsSinceThreatenedByBarbarians;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 1820 : 
; 1821 : 	kStream << m_iGlobalQuestCountdown; // Version 11

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 1822 : 
; 1823 : 	kStream << m_eAlly;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 2012				; 000007dcH
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??6@YAAAVFDataStream@@AAV0@ABW4PlayerTypes@@@Z ; operator<<
	add	esp, 8

; 1824 : 	kStream << m_iTurnAllied;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 2016				; 000007e0H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 1825 : 
; 1826 : 	kStream << m_eMajorBoughtOutBy; // Version 16

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 2020				; 000007e4H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??6@YAAAVFDataStream@@AAV0@ABW4PlayerTypes@@@Z ; operator<<
	add	esp, 8

; 1827 : 
; 1828 : 	kStream << m_abWarQuestAgainstMajor;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	call	??$?6_N$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CB_N@Z ; operator<<<bool,22>
	add	esp, 8

; 1829 : 
; 1830 : 	kStream << m_aaiNumEnemyUnitsLeftToKillByMajor;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??$?6$$BY0BG@$$CBH$0BG@@@YAAAVFDataStream@@AAV0@AAY1BG@BG@$$CBH@Z ; operator<<<int const [22],22>
	add	esp, 8

; 1831 : 
; 1832 : 	kStream << m_abRouteConnectionEstablished;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1988				; 000007c4H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??$?6_N$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CB_N@Z ; operator<<<bool,22>
	add	esp, 8

; 1833 : 
; 1834 : 	kStream << m_aiFriendshipWithMajorTimes100;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 2024				; 000007e8H
	push	edx
	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	call	??$?6H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CBH@Z ; operator<<<int,22>
	add	esp, 8

; 1835 : 	kStream << m_aiAngerFreeIntrusionCounter;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2112				; 00000840H
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??$?6H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CBH@Z ; operator<<<int,22>
	add	esp, 8

; 1836 : 	kStream << m_aiPlayerQuests;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 2200				; 00000898H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??$?6H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CBH@Z ; operator<<<int,22>
	add	esp, 8

; 1837 : 	kStream << m_aiQuestData1;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 2288				; 000008f0H
	push	edx
	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	call	??$?6H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CBH@Z ; operator<<<int,22>
	add	esp, 8

; 1838 : 	kStream << m_aiQuestData2;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2376				; 00000948H
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??$?6H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CBH@Z ; operator<<<int,22>
	add	esp, 8

; 1839 : 	kStream << m_aiQuestCountdown;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 2464				; 000009a0H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??$?6H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CBH@Z ; operator<<<int,22>
	add	esp, 8

; 1840 : 	kStream << m_aiUnitSpawnCounter;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 2552				; 000009f8H
	push	edx
	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	call	??$?6H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CBH@Z ; operator<<<int,22>
	add	esp, 8

; 1841 : 	kStream << m_aiNumUnitsGifted;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2640				; 00000a50H
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??$?6H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CBH@Z ; operator<<<int,22>
	add	esp, 8

; 1842 : 	kStream << m_aiNumGoldGifted;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 2728				; 00000aa8H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??$?6H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CBH@Z ; operator<<<int,22>
	add	esp, 8

; 1843 : 	kStream << m_aiTurnLastBullied;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 2816				; 00000b00H
	push	edx
	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	call	??$?6H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CBH@Z ; operator<<<int,22>
	add	esp, 8

; 1844 : 	kStream << m_aiTurnLastPledged;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2904				; 00000b58H
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??$?6H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CBH@Z ; operator<<<int,22>
	add	esp, 8

; 1845 : 	kStream << m_aiTurnLastBrokePledge;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 2992				; 00000bb0H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??$?6H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CBH@Z ; operator<<<int,22>
	add	esp, 8

; 1846 : 	kStream << m_abUnitSpawningDisabled;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 3080				; 00000c08H
	push	edx
	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	call	??$?6_N$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CB_N@Z ; operator<<<bool,22>
	add	esp, 8

; 1847 : 	kStream << m_abMajorIntruding;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3102				; 00000c1eH
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??$?6_N$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CB_N@Z ; operator<<<bool,22>
	add	esp, 8

; 1848 : 	kStream << m_abEverFriends;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 3124				; 00000c34H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??$?6_N$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CB_N@Z ; operator<<<bool,22>
	add	esp, 8

; 1849 : 	kStream << m_abPledgeToProtect;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 3146				; 00000c4aH
	push	edx
	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	call	??$?6_N$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CB_N@Z ; operator<<<bool,22>
	add	esp, 8

; 1850 : 	kStream << m_abPermanentWar;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3168				; 00000c60H
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??$?6_N$0FA@@@YAAAVFDataStream@@AAV0@AAY0FA@$$CB_N@Z ; operator<<<bool,80>
	add	esp, 8

; 1851 : 	kStream << m_abWaryOfTeam; // Version 12

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 3248				; 00000cb0H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??$?6_N$0FA@@@YAAAVFDataStream@@AAV0@AAY0FA@$$CB_N@Z ; operator<<<bool,80>
	add	esp, 8

; 1852 : 
; 1853 : 	// List of quests given
; 1854 : 	CvAssertMsg(m_QuestsGiven.size() == MAX_MAJOR_CIVS, "Number of entries in minor's quest list does not match MAX_MAJOR_CIVS when writing to memory!");
; 1855 : 	QuestListForAllPlayers::const_iterator itr_player;
; 1856 : 	for(itr_player = m_QuestsGiven.begin(); itr_player != m_QuestsGiven.end(); itr_player++)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+3328]
	mov	DWORD PTR _itr_player$[ebp], eax
	jmp	SHORT $LN6@Write
$LN5@Write:
	mov	ecx, DWORD PTR _itr_player$[ebp]
	add	ecx, 156				; 0000009cH
	mov	DWORD PTR _itr_player$[ebp], ecx
$LN6@Write:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 3328				; 00000d00H
	mov	DWORD PTR $T237027[ebp], edx
	mov	eax, DWORD PTR $T237027[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR $T237027[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _itr_player$[ebp], ecx
	je	SHORT $LN4@Write

; 1857 : 	{
; 1858 : 		QuestListForPlayer* pvQuestList = (QuestListForPlayer*)itr_player;

	mov	eax, DWORD PTR _itr_player$[ebp]
	mov	DWORD PTR _pvQuestList$221989[ebp], eax

; 1859 : 		int iQuestEntriesToWrite = pvQuestList->size();

	mov	ecx, DWORD PTR _pvQuestList$221989[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T237031[ebp], edx
	mov	eax, DWORD PTR $T237031[ebp]
	mov	DWORD PTR _iQuestEntriesToWrite$221991[ebp], eax

; 1860 : 		kStream << iQuestEntriesToWrite;

	lea	ecx, DWORD PTR _iQuestEntriesToWrite$221991[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 1861 : 		QuestListForPlayer::const_iterator itr_quest;
; 1862 : 		for(itr_quest = pvQuestList->begin(); itr_quest != pvQuestList->end(); itr_quest++)

	mov	edx, DWORD PTR _pvQuestList$221989[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _itr_quest$221992[ebp], eax
	jmp	SHORT $LN27@Write
$LN2@Write:
	mov	ecx, DWORD PTR _itr_quest$221992[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR _itr_quest$221992[ebp], ecx
$LN27@Write:
	mov	edx, DWORD PTR _pvQuestList$221989[ebp]
	mov	eax, DWORD PTR [edx+4]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _pvQuestList$221989[ebp]
	add	eax, DWORD PTR [ecx]
	cmp	DWORD PTR _itr_quest$221992[ebp], eax
	je	SHORT $LN1@Write

; 1863 : 		{
; 1864 : 			kStream << *itr_quest;

	mov	edx, DWORD PTR _itr_quest$221992[ebp]
	push	edx
	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	call	??6@YAAAVFDataStream@@AAV0@ABVCvMinorCivQuest@@@Z ; operator<<
	add	esp, 8

; 1865 : 		}

	jmp	SHORT $LN2@Write
$LN1@Write:

; 1866 : 	}

	jmp	$LN5@Write
$LN4@Write:

; 1867 : 
; 1868 : 	kStream << m_bDisableNotifications;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 6864				; 00001ad0H
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 1869 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Write@CvMinorCivAI@@QBEXAAVFDataStream@@@Z ENDP	; CvMinorCivAI::Write
_TEXT	ENDS
PUBLIC	?DoPickUniqueUnit@CvMinorCivAI@@QAEXXZ		; CvMinorCivAI::DoPickUniqueUnit
PUBLIC	?DoPickPersonality@CvMinorCivAI@@QAEXXZ		; CvMinorCivAI::DoPickPersonality
PUBLIC	?DoPickInitialItems@CvMinorCivAI@@QAEXXZ	; CvMinorCivAI::DoPickInitialItems
; Function compile flags: /Odtp
;	COMDAT ?DoPickInitialItems@CvMinorCivAI@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DoPickInitialItems@CvMinorCivAI@@QAEXXZ PROC		; CvMinorCivAI::DoPickInitialItems, COMDAT
; _this$ = ecx

; 1873 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1874 : 	// Personality
; 1875 : 	DoPickPersonality();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoPickPersonality@CvMinorCivAI@@QAEXXZ	; CvMinorCivAI::DoPickPersonality

; 1876 : 
; 1877 : 	// Unique unit
; 1878 : 	DoPickUniqueUnit();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoPickUniqueUnit@CvMinorCivAI@@QAEXXZ	; CvMinorCivAI::DoPickUniqueUnit

; 1879 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoPickInitialItems@CvMinorCivAI@@QAEXXZ ENDP		; CvMinorCivAI::DoPickInitialItems
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ PROC	; CvMinorCivAI::GetPlayer, COMDAT
; _this$ = ecx

; 1883 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1884 : 	return m_pPlayer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 1885 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ENDP	; CvMinorCivAI::GetPlayer
_TEXT	ENDS
PUBLIC	?GetMinorCivType@CvMinorCivAI@@QBE?AW4MinorCivTypes@@XZ ; CvMinorCivAI::GetMinorCivType
; Function compile flags: /Odtp
;	COMDAT ?GetMinorCivType@CvMinorCivAI@@QBE?AW4MinorCivTypes@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T237058 = -4						; size = 4
?GetMinorCivType@CvMinorCivAI@@QBE?AW4MinorCivTypes@@XZ PROC ; CvMinorCivAI::GetMinorCivType, COMDAT
; _this$ = ecx

; 1889 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1890 : 	//	return m_minorCivType;
; 1891 : 	return CvPreGame::minorCivType(m_pPlayer->GetID());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T237058[ebp], edx
	mov	eax, DWORD PTR $T237058[ebp]
	push	eax
	call	?minorCivType@CvPreGame@@YA?AW4MinorCivTypes@@W4PlayerTypes@@@Z ; CvPreGame::minorCivType
	add	esp, 4

; 1892 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetMinorCivType@CvMinorCivAI@@QBE?AW4MinorCivTypes@@XZ ENDP ; CvMinorCivAI::GetMinorCivType
_TEXT	ENDS
PUBLIC	?GetPersonality@CvMinorCivAI@@QBE?AW4MinorCivPersonalityTypes@@XZ ; CvMinorCivAI::GetPersonality
; Function compile flags: /Odtp
;	COMDAT ?GetPersonality@CvMinorCivAI@@QBE?AW4MinorCivPersonalityTypes@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPersonality@CvMinorCivAI@@QBE?AW4MinorCivPersonalityTypes@@XZ PROC ; CvMinorCivAI::GetPersonality, COMDAT
; _this$ = ecx

; 1896 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1897 : 	return m_ePersonality;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 1898 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetPersonality@CvMinorCivAI@@QBE?AW4MinorCivPersonalityTypes@@XZ ENDP ; CvMinorCivAI::GetPersonality
_TEXT	ENDS
PUBLIC	??_C@_0FF@EBFNOFDJ@Minor?5Civ?5AI?3?5Picking?5Personalit@ ; `string'
PUBLIC	??_C@_0P@ELMNBNJP@FLAVOR_OFFENSE?$AA@		; `string'
PUBLIC	??_C@_0P@CHEPBLFE@FLAVOR_DEFENSE?$AA@		; `string'
PUBLIC	??_C@_0BE@EEBBMCFH@FLAVOR_CITY_DEFENSE?$AA@	; `string'
EXTRN	?ResetToBasePersonality@CvFlavorManager@@QAEXXZ:PROC ; CvFlavorManager::ResetToBasePersonality
EXTRN	?GetAdjustedValue@CvFlavorManager@@QAEHHHHH@Z:PROC ; CvFlavorManager::GetAdjustedValue
EXTRN	?getJonRandNum@CvGame@@QAEHHPBD@Z:PROC		; CvGame::getJonRandNum
EXTRN	?GetAllPersonalityFlavors@CvFlavorManager@@QAEPAHXZ:PROC ; CvFlavorManager::GetAllPersonalityFlavors
EXTRN	?GetFlavorManager@CvPlayer@@QBEPAVCvFlavorManager@@XZ:PROC ; CvPlayer::GetFlavorManager
EXTRN	__imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z:PROC
;	COMDAT ??_C@_0FF@EBFNOFDJ@Minor?5Civ?5AI?3?5Picking?5Personalit@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
CONST	SEGMENT
??_C@_0FF@EBFNOFDJ@Minor?5Civ?5AI?3?5Picking?5Personalit@ DB 'Minor Civ A'
	DB	'I: Picking Personality for this Game (should happen only once'
	DB	' per player)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ELMNBNJP@FLAVOR_OFFENSE?$AA@
CONST	SEGMENT
??_C@_0P@ELMNBNJP@FLAVOR_OFFENSE?$AA@ DB 'FLAVOR_OFFENSE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CHEPBLFE@FLAVOR_DEFENSE?$AA@
CONST	SEGMENT
??_C@_0P@CHEPBLFE@FLAVOR_DEFENSE?$AA@ DB 'FLAVOR_DEFENSE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EEBBMCFH@FLAVOR_CITY_DEFENSE?$AA@
CONST	SEGMENT
??_C@_0BE@EEBBMCFH@FLAVOR_CITY_DEFENSE?$AA@ DB 'FLAVOR_CITY_DEFENSE', 00H ; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
CONST	ENDS
;	COMDAT ?DoPickPersonality@CvMinorCivAI@@QAEXXZ
_TEXT	SEGMENT
tv147 = -56						; size = 4
_this$ = -52						; size = 4
$T237082 = -48						; size = 4
$T237078 = -44						; size = 4
$T237074 = -40						; size = 4
$T237070 = -36						; size = 4
$T237066 = -32						; size = 4
_iFlavorLoop$222022 = -28				; size = 4
_eFlavorCityDefense$ = -24				; size = 4
_pFlavorManager$ = -20					; size = 4
_eFlavorDefense$ = -16					; size = 4
_pFlavors$ = -12					; size = 4
_eFlavorOffense$ = -8					; size = 4
_eRandPersonality$ = -4					; size = 4
?DoPickPersonality@CvMinorCivAI@@QAEXXZ PROC		; CvMinorCivAI::DoPickPersonality, COMDAT
; _this$ = ecx

; 1902 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	mov	DWORD PTR _this$[ebp], ecx

; 1903 : 
; 1904 : 	FlavorTypes eFlavorCityDefense = NO_FLAVOR;

	mov	DWORD PTR _eFlavorCityDefense$[ebp], -1

; 1905 : 	FlavorTypes eFlavorDefense = NO_FLAVOR;

	mov	DWORD PTR _eFlavorDefense$[ebp], -1

; 1906 : 	FlavorTypes eFlavorOffense = NO_FLAVOR;

	mov	DWORD PTR _eFlavorOffense$[ebp], -1

; 1907 : 	for(int iFlavorLoop = 0; iFlavorLoop < GC.getNumFlavorTypes(); iFlavorLoop++)

	mov	DWORD PTR _iFlavorLoop$222022[ebp], 0
	jmp	SHORT $LN10@DoPickPers
$LN9@DoPickPers:
	mov	eax, DWORD PTR _iFlavorLoop$222022[ebp]
	add	eax, 1
	mov	DWORD PTR _iFlavorLoop$222022[ebp], eax
$LN10@DoPickPers:
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764
	mov	DWORD PTR $T237066[ebp], ecx
	mov	edx, DWORD PTR _iFlavorLoop$222022[ebp]
	cmp	edx, DWORD PTR $T237066[ebp]
	jge	$LN8@DoPickPers

; 1908 : 	{
; 1909 : 		if(GC.getFlavorTypes((FlavorTypes)iFlavorLoop) == "FLAVOR_CITY_DEFENSE")

	mov	eax, DWORD PTR _iFlavorLoop$222022[ebp]
	imul	eax, 28					; 0000001cH
	add	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1760
	mov	DWORD PTR $T237070[ebp], eax
	push	OFFSET ??_C@_0BE@EEBBMCFH@FLAVOR_CITY_DEFENSE?$AA@
	mov	ecx, DWORD PTR $T237070[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN7@DoPickPers

; 1910 : 		{
; 1911 : 			eFlavorCityDefense = (FlavorTypes)iFlavorLoop;

	mov	eax, DWORD PTR _iFlavorLoop$222022[ebp]
	mov	DWORD PTR _eFlavorCityDefense$[ebp], eax
$LN7@DoPickPers:

; 1912 : 		}
; 1913 : 		if(GC.getFlavorTypes((FlavorTypes)iFlavorLoop) == "FLAVOR_DEFENSE")

	mov	ecx, DWORD PTR _iFlavorLoop$222022[ebp]
	imul	ecx, 28					; 0000001cH
	add	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1760
	mov	DWORD PTR $T237074[ebp], ecx
	push	OFFSET ??_C@_0P@CHEPBLFE@FLAVOR_DEFENSE?$AA@
	mov	edx, DWORD PTR $T237074[ebp]
	push	edx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@DoPickPers

; 1914 : 		{
; 1915 : 			eFlavorDefense = (FlavorTypes)iFlavorLoop;

	mov	ecx, DWORD PTR _iFlavorLoop$222022[ebp]
	mov	DWORD PTR _eFlavorDefense$[ebp], ecx
$LN6@DoPickPers:

; 1916 : 		}
; 1917 : 		if(GC.getFlavorTypes((FlavorTypes)iFlavorLoop) == "FLAVOR_OFFENSE")

	mov	edx, DWORD PTR _iFlavorLoop$222022[ebp]
	imul	edx, 28					; 0000001cH
	add	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1760
	mov	DWORD PTR $T237078[ebp], edx
	push	OFFSET ??_C@_0P@ELMNBNJP@FLAVOR_OFFENSE?$AA@
	mov	eax, DWORD PTR $T237078[ebp]
	push	eax
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@DoPickPers

; 1918 : 		{
; 1919 : 			eFlavorOffense = (FlavorTypes)iFlavorLoop;

	mov	edx, DWORD PTR _iFlavorLoop$222022[ebp]
	mov	DWORD PTR _eFlavorOffense$[ebp], edx
$LN5@DoPickPers:

; 1920 : 		}
; 1921 : 	}

	jmp	$LN9@DoPickPers
$LN8@DoPickPers:

; 1922 : 
; 1923 : 	CvFlavorManager* pFlavorManager = m_pPlayer->GetFlavorManager();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetFlavorManager@CvPlayer@@QBEPAVCvFlavorManager@@XZ ; CvPlayer::GetFlavorManager
	mov	DWORD PTR _pFlavorManager$[ebp], eax

; 1924 : 	int* pFlavors = pFlavorManager->GetAllPersonalityFlavors();

	mov	ecx, DWORD PTR _pFlavorManager$[ebp]
	call	?GetAllPersonalityFlavors@CvFlavorManager@@QAEPAHXZ ; CvFlavorManager::GetAllPersonalityFlavors
	mov	DWORD PTR _pFlavors$[ebp], eax

; 1925 : 
; 1926 : 	MinorCivPersonalityTypes eRandPersonality = (MinorCivPersonalityTypes) GC.getGame().getJonRandNum(NUM_MINOR_CIV_PERSONALITY_TYPES, "Minor Civ AI: Picking Personality for this Game (should happen only once per player)");

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T237082[ebp], ecx
	push	OFFSET ??_C@_0FF@EBFNOFDJ@Minor?5Civ?5AI?3?5Picking?5Personalit@
	push	4
	mov	ecx, DWORD PTR $T237082[ebp]
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	mov	DWORD PTR _eRandPersonality$[ebp], eax

; 1927 : 	m_ePersonality = eRandPersonality;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _eRandPersonality$[ebp]
	mov	DWORD PTR [edx+8], eax

; 1928 : 
; 1929 : 	switch(eRandPersonality)

	mov	ecx, DWORD PTR _eRandPersonality$[ebp]
	mov	DWORD PTR tv147[ebp], ecx
	cmp	DWORD PTR tv147[ebp], 0
	je	SHORT $LN2@DoPickPers
	cmp	DWORD PTR tv147[ebp], 2
	je	SHORT $LN1@DoPickPers
	jmp	$LN11@DoPickPers
$LN2@DoPickPers:

; 1930 : 	{
; 1931 : 	case MINOR_CIV_PERSONALITY_FRIENDLY:
; 1932 : 		pFlavors[eFlavorCityDefense] = pFlavorManager->GetAdjustedValue(pFlavors[eFlavorCityDefense], -2, 0, 10);

	push	10					; 0000000aH
	push	0
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _eFlavorCityDefense$[ebp]
	mov	eax, DWORD PTR _pFlavors$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	mov	ecx, DWORD PTR _pFlavorManager$[ebp]
	call	?GetAdjustedValue@CvFlavorManager@@QAEHHHHH@Z ; CvFlavorManager::GetAdjustedValue
	mov	edx, DWORD PTR _eFlavorCityDefense$[ebp]
	mov	ecx, DWORD PTR _pFlavors$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax

; 1933 : 		pFlavors[eFlavorDefense] = pFlavorManager->GetAdjustedValue(pFlavors[eFlavorDefense], -2, 0, 10);

	push	10					; 0000000aH
	push	0
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _eFlavorDefense$[ebp]
	mov	eax, DWORD PTR _pFlavors$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	mov	ecx, DWORD PTR _pFlavorManager$[ebp]
	call	?GetAdjustedValue@CvFlavorManager@@QAEHHHHH@Z ; CvFlavorManager::GetAdjustedValue
	mov	edx, DWORD PTR _eFlavorDefense$[ebp]
	mov	ecx, DWORD PTR _pFlavors$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax

; 1934 : 		pFlavors[eFlavorOffense] = pFlavorManager->GetAdjustedValue(pFlavors[eFlavorOffense], -2, 0, 10);

	push	10					; 0000000aH
	push	0
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _eFlavorOffense$[ebp]
	mov	eax, DWORD PTR _pFlavors$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	mov	ecx, DWORD PTR _pFlavorManager$[ebp]
	call	?GetAdjustedValue@CvFlavorManager@@QAEHHHHH@Z ; CvFlavorManager::GetAdjustedValue
	mov	edx, DWORD PTR _eFlavorOffense$[ebp]
	mov	ecx, DWORD PTR _pFlavors$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax

; 1935 : 		pFlavorManager->ResetToBasePersonality();

	mov	ecx, DWORD PTR _pFlavorManager$[ebp]
	call	?ResetToBasePersonality@CvFlavorManager@@QAEXXZ ; CvFlavorManager::ResetToBasePersonality

; 1936 : 		break;

	jmp	SHORT $LN11@DoPickPers
$LN1@DoPickPers:

; 1937 : 	case MINOR_CIV_PERSONALITY_HOSTILE:
; 1938 : 		pFlavors[eFlavorCityDefense] = pFlavorManager->GetAdjustedValue(pFlavors[eFlavorCityDefense], 2, 0, 10);

	push	10					; 0000000aH
	push	0
	push	2
	mov	edx, DWORD PTR _eFlavorCityDefense$[ebp]
	mov	eax, DWORD PTR _pFlavors$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	mov	ecx, DWORD PTR _pFlavorManager$[ebp]
	call	?GetAdjustedValue@CvFlavorManager@@QAEHHHHH@Z ; CvFlavorManager::GetAdjustedValue
	mov	edx, DWORD PTR _eFlavorCityDefense$[ebp]
	mov	ecx, DWORD PTR _pFlavors$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax

; 1939 : 		pFlavors[eFlavorDefense] = pFlavorManager->GetAdjustedValue(pFlavors[eFlavorDefense], 2, 0, 10);

	push	10					; 0000000aH
	push	0
	push	2
	mov	edx, DWORD PTR _eFlavorDefense$[ebp]
	mov	eax, DWORD PTR _pFlavors$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	mov	ecx, DWORD PTR _pFlavorManager$[ebp]
	call	?GetAdjustedValue@CvFlavorManager@@QAEHHHHH@Z ; CvFlavorManager::GetAdjustedValue
	mov	edx, DWORD PTR _eFlavorDefense$[ebp]
	mov	ecx, DWORD PTR _pFlavors$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax

; 1940 : 		pFlavors[eFlavorOffense] = pFlavorManager->GetAdjustedValue(pFlavors[eFlavorOffense], 2, 0, 10);

	push	10					; 0000000aH
	push	0
	push	2
	mov	edx, DWORD PTR _eFlavorOffense$[ebp]
	mov	eax, DWORD PTR _pFlavors$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	mov	ecx, DWORD PTR _pFlavorManager$[ebp]
	call	?GetAdjustedValue@CvFlavorManager@@QAEHHHHH@Z ; CvFlavorManager::GetAdjustedValue
	mov	edx, DWORD PTR _eFlavorOffense$[ebp]
	mov	ecx, DWORD PTR _pFlavors$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax

; 1941 : 		pFlavorManager->ResetToBasePersonality();

	mov	ecx, DWORD PTR _pFlavorManager$[ebp]
	call	?ResetToBasePersonality@CvFlavorManager@@QAEXXZ ; CvFlavorManager::ResetToBasePersonality
$LN11@DoPickPers:

; 1942 : 		break;
; 1943 : 	}
; 1944 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoPickPersonality@CvMinorCivAI@@QAEXXZ ENDP		; CvMinorCivAI::DoPickPersonality
_TEXT	ENDS
PUBLIC	?GetMinorCivTrait@CvMinorCivInfo@@QBEHXZ	; CvMinorCivInfo::GetMinorCivTrait
PUBLIC	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait
EXTRN	?getMinorCivInfo@CvGlobals@@QAEPAVCvMinorCivInfo@@W4MinorCivTypes@@@Z:PROC ; CvGlobals::getMinorCivInfo
; Function compile flags: /Odtp
;	COMDAT ?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pkMinorCivInfo$ = -4					; size = 4
?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ PROC ; CvMinorCivAI::GetTrait, COMDAT
; _this$ = ecx

; 1948 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1949 : 	CvMinorCivInfo* pkMinorCivInfo = GC.getMinorCivInfo(GetMinorCivType());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMinorCivType@CvMinorCivAI@@QBE?AW4MinorCivTypes@@XZ ; CvMinorCivAI::GetMinorCivType
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getMinorCivInfo@CvGlobals@@QAEPAVCvMinorCivInfo@@W4MinorCivTypes@@@Z ; CvGlobals::getMinorCivInfo
	mov	DWORD PTR _pkMinorCivInfo$[ebp], eax

; 1950 : 	if(pkMinorCivInfo)

	cmp	DWORD PTR _pkMinorCivInfo$[ebp], 0
	je	SHORT $LN1@GetTrait

; 1951 : 	{
; 1952 : 		return (MinorCivTraitTypes) pkMinorCivInfo->GetMinorCivTrait();

	mov	ecx, DWORD PTR _pkMinorCivInfo$[ebp]
	call	?GetMinorCivTrait@CvMinorCivInfo@@QBEHXZ ; CvMinorCivInfo::GetMinorCivTrait
	jmp	SHORT $LN2@GetTrait
$LN1@GetTrait:

; 1953 : 	}
; 1954 : 
; 1955 : 	return NO_MINOR_CIV_TRAIT_TYPE;

	or	eax, -1
$LN2@GetTrait:

; 1956 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ENDP ; CvMinorCivAI::GetTrait
_TEXT	ENDS
PUBLIC	?IsHasUniqueUnit@CvMinorCivAI@@QBE_NXZ		; CvMinorCivAI::IsHasUniqueUnit
; Function compile flags: /Odtp
;	COMDAT ?IsHasUniqueUnit@CvMinorCivAI@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsHasUniqueUnit@CvMinorCivAI@@QBE_NXZ PROC		; CvMinorCivAI::IsHasUniqueUnit, COMDAT
; _this$ = ecx

; 1960 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1961 : 	return (m_eUniqueUnit != NO_UNIT);

	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+16], -1
	setne	cl
	mov	al, cl

; 1962 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsHasUniqueUnit@CvMinorCivAI@@QBE_NXZ ENDP		; CvMinorCivAI::IsHasUniqueUnit
_TEXT	ENDS
PUBLIC	?GetUniqueUnit@CvMinorCivAI@@QBE?AW4UnitTypes@@XZ ; CvMinorCivAI::GetUniqueUnit
; Function compile flags: /Odtp
;	COMDAT ?GetUniqueUnit@CvMinorCivAI@@QBE?AW4UnitTypes@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUniqueUnit@CvMinorCivAI@@QBE?AW4UnitTypes@@XZ PROC	; CvMinorCivAI::GetUniqueUnit, COMDAT
; _this$ = ecx

; 1966 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1967 : 	return m_eUniqueUnit;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1968 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetUniqueUnit@CvMinorCivAI@@QBE?AW4UnitTypes@@XZ ENDP	; CvMinorCivAI::GetUniqueUnit
_TEXT	ENDS
PUBLIC	?SetUniqueUnit@CvMinorCivAI@@QAEXW4UnitTypes@@@Z ; CvMinorCivAI::SetUniqueUnit
; Function compile flags: /Odtp
;	COMDAT ?SetUniqueUnit@CvMinorCivAI@@QAEXW4UnitTypes@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pInfo$ = -4						; size = 4
_eUnit$ = 8						; size = 4
?SetUniqueUnit@CvMinorCivAI@@QAEXW4UnitTypes@@@Z PROC	; CvMinorCivAI::SetUniqueUnit, COMDAT
; _this$ = ecx

; 1972 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1973 : 	CvAssertMsg(GetTrait() == MINOR_CIV_TRAIT_MILITARISTIC, "Setting a unique unit for a non-Militaristic City-State.  It will never be spawned without additional scripting.");
; 1974 : 	CvUnitEntry* pInfo = GC.getUnitInfo(eUnit);

	mov	eax, DWORD PTR _eUnit$[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	DWORD PTR _pInfo$[ebp], eax

; 1975 : 	CvAssertMsg(pInfo, "Setting a unique unit for a City-State that the game core could not identify. Please send Anton your save file and version.");
; 1976 : 	if (pInfo)

	cmp	DWORD PTR _pInfo$[ebp], 0
	je	SHORT $LN2@SetUniqueU

; 1977 : 	{
; 1978 : 		m_eUniqueUnit = eUnit;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _eUnit$[ebp]
	mov	DWORD PTR [ecx+16], edx
$LN2@SetUniqueU:

; 1979 : 	}
; 1980 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetUniqueUnit@CvMinorCivAI@@QAEXW4UnitTypes@@@Z ENDP	; CvMinorCivAI::SetUniqueUnit
_TEXT	ENDS
EXTRN	?GetRandomUniqueUnitType@CvGame@@QAE?AW4UnitTypes@@_N000@Z:PROC ; CvGame::GetRandomUniqueUnitType
; Function compile flags: /Odtp
;	COMDAT ?DoPickUniqueUnit@CvMinorCivAI@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T237096 = -4						; size = 4
?DoPickUniqueUnit@CvMinorCivAI@@QAEXXZ PROC		; CvMinorCivAI::DoPickUniqueUnit, COMDAT
; _this$ = ecx

; 1984 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1985 : 	m_eUniqueUnit = NO_UNIT;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], -1

; 1986 : 	if (GetTrait() == MINOR_CIV_TRAIT_MILITARISTIC)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait
	cmp	eax, 1
	jne	SHORT $LN2@DoPickUniq

; 1987 : 	{
; 1988 : 		// Units from our starting era or before would be no fun because players won't get the chance to use them
; 1989 : 		m_eUniqueUnit = GC.getGame().GetRandomUniqueUnitType(/*bIncludeCivsInGame*/false, /*bIncludeStartEraUnits*/false, /*bIncludeOldEras*/false, /*bIncludeRanged*/true);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T237096[ebp], ecx
	push	1
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR $T237096[ebp]
	call	?GetRandomUniqueUnitType@CvGame@@QAE?AW4UnitTypes@@_N000@Z ; CvGame::GetRandomUniqueUnitType
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], eax
$LN2@DoPickUniq:

; 1990 : 	}
; 1991 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoPickUniqueUnit@CvMinorCivAI@@QAEXXZ ENDP		; CvMinorCivAI::DoPickUniqueUnit
_TEXT	ENDS
PUBLIC	?DoIntrusion@CvMinorCivAI@@QAEXXZ		; CvMinorCivAI::DoIntrusion
PUBLIC	?DoUnitSpawnTurn@CvMinorCivAI@@QAEXXZ		; CvMinorCivAI::DoUnitSpawnTurn
PUBLIC	?DoTurnQuests@CvMinorCivAI@@QAEXXZ		; CvMinorCivAI::DoTurnQuests
PUBLIC	?DoTestProxyWarAnnouncement@CvMinorCivAI@@QAEXXZ ; CvMinorCivAI::DoTestProxyWarAnnouncement
PUBLIC	?DoTestThreatenedAnnouncement@CvMinorCivAI@@QAEXXZ ; CvMinorCivAI::DoTestThreatenedAnnouncement
PUBLIC	?DoFriendship@CvMinorCivAI@@QAEXXZ		; CvMinorCivAI::DoFriendship
PUBLIC	?DoElection@CvMinorCivAI@@QAEXXZ		; CvMinorCivAI::DoElection
PUBLIC	?DoTurnStatus@CvMinorCivAI@@QAEXXZ		; CvMinorCivAI::DoTurnStatus
PUBLIC	?DoTurn@CvMinorCivAI@@QAEXXZ			; CvMinorCivAI::DoTurn
; Function compile flags: /Odtp
;	COMDAT ?DoTurn@CvMinorCivAI@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DoTurn@CvMinorCivAI@@QAEXXZ PROC			; CvMinorCivAI::DoTurn, COMDAT
; _this$ = ecx

; 2001 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2002 : 	AI_PERF_FORMAT("AI-perf.csv", ("CvMinorCivAI::DoTurn, Turn %03d, %s", GC.getGame().getElapsedGameTurns(), GetPlayer()->getCivilizationShortDescription()) );
; 2003 : 	if(GetPlayer()->isMinorCiv())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@DoTurn

; 2004 : 	{
; 2005 : 		DoTurnStatus();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoTurnStatus@CvMinorCivAI@@QAEXXZ	; CvMinorCivAI::DoTurnStatus

; 2006 : 
; 2007 : 		DoElection();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoElection@CvMinorCivAI@@QAEXXZ	; CvMinorCivAI::DoElection

; 2008 : 		DoFriendship();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoFriendship@CvMinorCivAI@@QAEXXZ	; CvMinorCivAI::DoFriendship

; 2009 : 
; 2010 : 		DoTestThreatenedAnnouncement();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoTestThreatenedAnnouncement@CvMinorCivAI@@QAEXXZ ; CvMinorCivAI::DoTestThreatenedAnnouncement

; 2011 : 		DoTestProxyWarAnnouncement();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoTestProxyWarAnnouncement@CvMinorCivAI@@QAEXXZ ; CvMinorCivAI::DoTestProxyWarAnnouncement

; 2012 : 
; 2013 : 		DoTurnQuests();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoTurnQuests@CvMinorCivAI@@QAEXXZ	; CvMinorCivAI::DoTurnQuests

; 2014 : 
; 2015 : 		DoUnitSpawnTurn();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoUnitSpawnTurn@CvMinorCivAI@@QAEXXZ	; CvMinorCivAI::DoUnitSpawnTurn

; 2016 : 
; 2017 : 		DoIntrusion();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoIntrusion@CvMinorCivAI@@QAEXXZ	; CvMinorCivAI::DoIntrusion
$LN2@DoTurn:

; 2018 : 	}
; 2019 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoTurn@CvMinorCivAI@@QAEXXZ ENDP			; CvMinorCivAI::DoTurn
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ ; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >
PUBLIC	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
PUBLIC	?SetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QAEXH@Z ; CvMinorCivAI::SetTurnsSinceThreatenedAnnouncement
PUBLIC	?SetAlly@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z	; CvMinorCivAI::SetAlly
PUBLIC	?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z ; CvMinorCivAI::DoSetBonus
PUBLIC	?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
PUBLIC	?SetFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::SetFriendshipWithMajor
PUBLIC	?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z ; CvMinorCivAI::DoFriendshipChangeEffects
PUBLIC	?at@?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z ; std::vector<int,std::allocator<int> >::at
PUBLIC	?SetDisableNotifications@CvMinorCivAI@@QAEX_N@Z	; CvMinorCivAI::SetDisableNotifications
PUBLIC	?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEXABH@Z ; std::vector<int,std::allocator<int> >::push_back
PUBLIC	?IsFriendshipAboveFriendsThreshold@CvMinorCivAI@@QBE_NH@Z ; CvMinorCivAI::IsFriendshipAboveFriendsThreshold
PUBLIC	?IsFriendshipAboveAlliesThreshold@CvMinorCivAI@@QBE_NH@Z ; CvMinorCivAI::IsFriendshipAboveAlliesThreshold
PUBLIC	?GetBaseFriendshipWithMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBaseFriendshipWithMajor
PUBLIC	?EndAllActiveQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ; CvMinorCivAI::EndAllActiveQuestsForPlayer
PUBLIC	?DoChangeProtectionFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@_N1@Z ; CvMinorCivAI::DoChangeProtectionFromMajor
PUBLIC	??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
PUBLIC	?DoTestActiveQuests@CvMinorCivAI@@QAEX_N0@Z	; CvMinorCivAI::DoTestActiveQuests
PUBLIC	?DoChangeAliveStatus@CvMinorCivAI@@QAEX_N@Z	; CvMinorCivAI::DoChangeAliveStatus
EXTRN	__CxxThrowException@8:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?DoChangeAliveStatus@CvMinorCivAI@@QAEX_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoChangeAliveStatus@CvMinorCivAI@@QAEX_N@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?DoChangeAliveStatus@CvMinorCivAI@@QAEX_N@Z$6
__ehfuncinfo$?DoChangeAliveStatus@CvMinorCivAI@@QAEX_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?DoChangeAliveStatus@CvMinorCivAI@@QAEX_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoChangeAliveStatus@CvMinorCivAI@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -352						; size = 4
$T237148 = -104						; size = 4
$T237144 = -100						; size = 4
$T237140 = -96						; size = 4
$T237136 = -92						; size = 4
_bHasAlly$222118 = -65					; size = 1
_ePlayer$222109 = -64					; size = 4
_bAllies$222112 = -58					; size = 1
_bFriends$222111 = -57					; size = 1
_iPlayerLoop$222105 = -56				; size = 4
_e$222103 = -52						; size = 4
_i$222099 = -48						; size = 4
_e$222090 = -44						; size = 4
_iOldInfluence$222092 = -40				; size = 4
_iNewInfluence$222093 = -36				; size = 4
_i$222086 = -32						; size = 4
_vNewInfluence$222085 = -28				; size = 16
__$EHRec$ = -12						; size = 12
_bAlive$ = 8						; size = 1
?DoChangeAliveStatus@CvMinorCivAI@@QAEX_N@Z PROC	; CvMinorCivAI::DoChangeAliveStatus, COMDAT
; _this$ = ecx

; 2024 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoChangeAliveStatus@CvMinorCivAI@@QAEX_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 340				; 00000154H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2025 : 	if (!bAlive)

	movzx	eax, BYTE PTR _bAlive$[ebp]
	test	eax, eax
	jne	$LN21@DoChangeAl

; 2026 : 	{
; 2027 : 		// Final check for quests
; 2028 : 		DoTestActiveQuests(/*bTestComplete*/ true, /*bTestObsolete*/ true);

	push	1
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoTestActiveQuests@CvMinorCivAI@@QAEX_N0@Z ; CvMinorCivAI::DoTestActiveQuests

; 2029 : 
; 2030 : 		std::vector<int> vNewInfluence;

	lea	ecx, DWORD PTR _vNewInfluence$222085[ebp]
	call	??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2031 : 		for (int i = 0; i < MAX_MAJOR_CIVS; ++i)

	mov	DWORD PTR _i$222086[ebp], 0
	jmp	SHORT $LN20@DoChangeAl
$LN19@DoChangeAl:
	mov	ecx, DWORD PTR _i$222086[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$222086[ebp], ecx
$LN20@DoChangeAl:
	cmp	DWORD PTR _i$222086[ebp], 22		; 00000016H
	jge	$LN18@DoChangeAl

; 2032 : 		{
; 2033 : 			PlayerTypes e = (PlayerTypes)i;

	mov	edx, DWORD PTR _i$222086[ebp]
	mov	DWORD PTR _e$222090[ebp], edx

; 2034 : 
; 2035 : 			// Cancel quests and PtPs
; 2036 : 			DoChangeProtectionFromMajor(e, false);

	push	0
	push	0
	mov	eax, DWORD PTR _e$222090[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoChangeProtectionFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@_N1@Z ; CvMinorCivAI::DoChangeProtectionFromMajor

; 2037 : 			EndAllActiveQuestsForPlayer(e);

	mov	ecx, DWORD PTR _e$222090[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndAllActiveQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ; CvMinorCivAI::EndAllActiveQuestsForPlayer

; 2038 : 
; 2039 : 			// Calculate new influence levels (don't set here, since that could create a false temporary ally)
; 2040 : 			int iOldInfluence = GetBaseFriendshipWithMajor(e);

	mov	edx, DWORD PTR _e$222090[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBaseFriendshipWithMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBaseFriendshipWithMajor
	mov	DWORD PTR _iOldInfluence$222092[ebp], eax

; 2041 : 			int iNewInfluence = iOldInfluence;

	mov	eax, DWORD PTR _iOldInfluence$222092[ebp]
	mov	DWORD PTR _iNewInfluence$222093[ebp], eax

; 2042 : 			if (IsFriendshipAboveAlliesThreshold(iOldInfluence))

	mov	ecx, DWORD PTR _iOldInfluence$222092[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriendshipAboveAlliesThreshold@CvMinorCivAI@@QBE_NH@Z ; CvMinorCivAI::IsFriendshipAboveAlliesThreshold
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN17@DoChangeAl

; 2043 : 			{
; 2044 : 				iNewInfluence = GC.getFRIENDSHIP_ALLIES_ON_DEATH();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2836
	mov	DWORD PTR $T237136[ebp], eax
	mov	ecx, DWORD PTR $T237136[ebp]
	mov	DWORD PTR _iNewInfluence$222093[ebp], ecx
	jmp	SHORT $LN16@DoChangeAl
$LN17@DoChangeAl:

; 2045 : 			}
; 2046 : 			else if (IsFriendshipAboveFriendsThreshold(iOldInfluence))

	mov	edx, DWORD PTR _iOldInfluence$222092[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriendshipAboveFriendsThreshold@CvMinorCivAI@@QBE_NH@Z ; CvMinorCivAI::IsFriendshipAboveFriendsThreshold
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@DoChangeAl

; 2047 : 			{
; 2048 : 				iNewInfluence = GC.getFRIENDSHIP_FRIENDS_ON_DEATH();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2828
	mov	DWORD PTR $T237140[ebp], ecx
	mov	edx, DWORD PTR $T237140[ebp]
	mov	DWORD PTR _iNewInfluence$222093[ebp], edx
	jmp	SHORT $LN16@DoChangeAl
$LN15@DoChangeAl:

; 2049 : 			}
; 2050 : 			else if (iOldInfluence > GC.getFRIENDSHIP_THRESHOLD_NEUTRAL())

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2824
	mov	DWORD PTR $T237144[ebp], eax
	mov	ecx, DWORD PTR _iOldInfluence$222092[ebp]
	cmp	ecx, DWORD PTR $T237144[ebp]
	jle	SHORT $LN16@DoChangeAl

; 2051 : 			{
; 2052 : 				iNewInfluence = GC.getFRIENDSHIP_NEUTRAL_ON_DEATH();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2820
	mov	DWORD PTR $T237148[ebp], edx
	mov	eax, DWORD PTR $T237148[ebp]
	mov	DWORD PTR _iNewInfluence$222093[ebp], eax
$LN16@DoChangeAl:

; 2053 : 			}
; 2054 : 			vNewInfluence.push_back(iNewInfluence);

	lea	ecx, DWORD PTR _iNewInfluence$222093[ebp]
	push	ecx
	lea	ecx, DWORD PTR _vNewInfluence$222085[ebp]
	call	?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEXABH@Z ; std::vector<int,std::allocator<int> >::push_back

; 2055 : 		}

	jmp	$LN19@DoChangeAl
$LN18@DoChangeAl:

; 2056 : 
; 2057 : 		// Set new influence values
; 2058 : 		SetDisableNotifications(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDisableNotifications@CvMinorCivAI@@QAEX_N@Z ; CvMinorCivAI::SetDisableNotifications

; 2059 : 		for (unsigned int i = 0; i < vNewInfluence.size(); ++i)

	mov	DWORD PTR _i$222099[ebp], 0
	jmp	SHORT $LN91@DoChangeAl
$LN11@DoChangeAl:
	mov	edx, DWORD PTR _i$222099[ebp]
	add	edx, 1
	mov	DWORD PTR _i$222099[ebp], edx
$LN91@DoChangeAl:
	mov	eax, DWORD PTR _vNewInfluence$222085[ebp+8]
	sub	eax, DWORD PTR _vNewInfluence$222085[ebp+4]
	sar	eax, 2
	cmp	DWORD PTR _i$222099[ebp], eax
	jae	SHORT $LN10@DoChangeAl

; 2060 : 		{
; 2061 : 			PlayerTypes e = (PlayerTypes)i;

	mov	ecx, DWORD PTR _i$222099[ebp]
	mov	DWORD PTR _e$222103[ebp], ecx

; 2062 : 			// special workaround to allow status changes despite minor already being dead
; 2063 : 			DoFriendshipChangeEffects(e, GetEffectiveFriendshipWithMajor(e), vNewInfluence.at(i), /*bFromQuest*/false, /*bIgnoreMinorDeath*/true);

	push	1
	push	0
	mov	edx, DWORD PTR _i$222099[ebp]
	push	edx
	lea	ecx, DWORD PTR _vNewInfluence$222085[ebp]
	call	?at@?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z ; std::vector<int,std::allocator<int> >::at
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _e$222103[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajor
	push	eax
	mov	edx, DWORD PTR _e$222103[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z ; CvMinorCivAI::DoFriendshipChangeEffects

; 2064 : 			SetFriendshipWithMajor(e, vNewInfluence.at(i));

	push	0
	mov	eax, DWORD PTR _i$222099[ebp]
	push	eax
	lea	ecx, DWORD PTR _vNewInfluence$222085[ebp]
	call	?at@?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z ; std::vector<int,std::allocator<int> >::at
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _e$222103[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::SetFriendshipWithMajor

; 2065 : 		}

	jmp	SHORT $LN11@DoChangeAl
$LN10@DoChangeAl:

; 2066 : 		SetDisableNotifications(false);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDisableNotifications@CvMinorCivAI@@QAEX_N@Z ; CvMinorCivAI::SetDisableNotifications

; 2067 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _vNewInfluence$222085[ebp]
	call	?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1
$LN21@DoChangeAl:

; 2068 : 
; 2069 : 	// Apply or Remove any active bonuses
; 2070 : 	for(int iPlayerLoop = 0; iPlayerLoop < MAX_MAJOR_CIVS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$222105[ebp], 0
	jmp	SHORT $LN9@DoChangeAl
$LN8@DoChangeAl:
	mov	eax, DWORD PTR _iPlayerLoop$222105[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayerLoop$222105[ebp], eax
$LN9@DoChangeAl:
	cmp	DWORD PTR _iPlayerLoop$222105[ebp], 22	; 00000016H
	jge	$LN7@DoChangeAl

; 2071 : 	{
; 2072 : 		PlayerTypes ePlayer = (PlayerTypes) iPlayerLoop;

	mov	ecx, DWORD PTR _iPlayerLoop$222105[ebp]
	mov	DWORD PTR _ePlayer$222109[ebp], ecx

; 2073 : 
; 2074 : 		bool bFriends = false;

	mov	BYTE PTR _bFriends$222111[ebp], 0

; 2075 : 		bool bAllies = false;

	mov	BYTE PTR _bAllies$222112[ebp], 0

; 2076 : 		if(IsFriendshipAboveFriendsThreshold(GetEffectiveFriendshipWithMajor(ePlayer)))

	mov	edx, DWORD PTR _ePlayer$222109[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajor
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriendshipAboveFriendsThreshold@CvMinorCivAI@@QBE_NH@Z ; CvMinorCivAI::IsFriendshipAboveFriendsThreshold
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@DoChangeAl

; 2077 : 		{
; 2078 : 			bFriends = true;

	mov	BYTE PTR _bFriends$222111[ebp], 1
$LN6@DoChangeAl:

; 2079 : 		}
; 2080 : 		if(GetAlly() == ePlayer)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetAlly
	cmp	eax, DWORD PTR _ePlayer$222109[ebp]
	jne	SHORT $LN5@DoChangeAl

; 2081 : 		{
; 2082 : 			CvAssertMsg(bAlive, "A Minor about to die still has an Ally, when it should have none.");
; 2083 : 			bAllies = true;

	mov	BYTE PTR _bAllies$222112[ebp], 1
$LN5@DoChangeAl:

; 2084 : 		}
; 2085 : 		if(bFriends || bAllies)

	movzx	ecx, BYTE PTR _bFriends$222111[ebp]
	test	ecx, ecx
	jne	SHORT $LN3@DoChangeAl
	movzx	edx, BYTE PTR _bAllies$222112[ebp]
	test	edx, edx
	je	SHORT $LN4@DoChangeAl
$LN3@DoChangeAl:

; 2086 : 		{
; 2087 : 			DoSetBonus(ePlayer, bAlive, bFriends, bAllies);

	push	-1
	push	0
	push	0
	movzx	eax, BYTE PTR _bAllies$222112[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bFriends$222111[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bAlive$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$222109[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z ; CvMinorCivAI::DoSetBonus
$LN4@DoChangeAl:

; 2088 : 		}
; 2089 : 	}

	jmp	$LN8@DoChangeAl
$LN7@DoChangeAl:

; 2090 : 
; 2091 : 	// Death - Reset the cached ally and barbarian threat counter
; 2092 : 	if (!bAlive)

	movzx	ecx, BYTE PTR _bAlive$[ebp]
	test	ecx, ecx
	jne	SHORT $LN22@DoChangeAl

; 2093 : 	{
; 2094 : 		bool bHasAlly = GetAlly() != NO_PLAYER;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetAlly
	xor	edx, edx
	cmp	eax, -1
	setne	dl
	mov	BYTE PTR _bHasAlly$222118[ebp], dl

; 2095 : 		CvAssertMsg(!bHasAlly, "A Minor about to die still has an Ally, when it should have none.");
; 2096 : 		if(bHasAlly)

	movzx	eax, BYTE PTR _bHasAlly$222118[ebp]
	test	eax, eax
	je	SHORT $LN1@DoChangeAl

; 2097 : 		{
; 2098 : 			SetAlly(NO_PLAYER);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetAlly@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ; CvMinorCivAI::SetAlly
$LN1@DoChangeAl:

; 2099 : 		}
; 2100 : 
; 2101 : 		SetTurnsSinceThreatenedAnnouncement(-1);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QAEXH@Z ; CvMinorCivAI::SetTurnsSinceThreatenedAnnouncement
$LN22@DoChangeAl:

; 2102 : 	}
; 2103 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoChangeAliveStatus@CvMinorCivAI@@QAEX_N@Z$0:
	lea	ecx, DWORD PTR _vNewInfluence$222085[ebp]
	jmp	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
__unwindfunclet$?DoChangeAliveStatus@CvMinorCivAI@@QAEX_N@Z$6:
	lea	ecx, DWORD PTR _vNewInfluence$222085[ebp]
	jmp	??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ
__ehhandler$?DoChangeAliveStatus@CvMinorCivAI@@QAEX_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-344]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoChangeAliveStatus@CvMinorCivAI@@QAEX_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoChangeAliveStatus@CvMinorCivAI@@QAEX_N@Z ENDP	; CvMinorCivAI::DoChangeAliveStatus
PUBLIC	??1?$auto_ptr@VICvCity1@@@std@@QAE@XZ		; std::auto_ptr<ICvCity1>::~auto_ptr<ICvCity1>
PUBLIC	?DoTestQuestsOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ; CvMinorCivAI::DoTestQuestsOnFirstContact
PUBLIC	?DoTestProxyWarAnnouncementOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ; CvMinorCivAI::DoTestProxyWarAnnouncementOnFirstContact
PUBLIC	?DoTestThreatenedAnnouncementForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ; CvMinorCivAI::DoTestThreatenedAnnouncementForPlayer
PUBLIC	?GetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetTurnsSinceThreatenedAnnouncement
PUBLIC	?DoTestSeedQuestCountdownForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z ; CvMinorCivAI::DoTestSeedQuestCountdownForPlayer
PUBLIC	?GetFirstPossibleTurnForPersonalQuests@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetFirstPossibleTurnForPersonalQuests
PUBLIC	?IsPeaceBlocked@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z ; CvMinorCivAI::IsPeaceBlocked
PUBLIC	?SetMajorIntruding@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z ; CvMinorCivAI::SetMajorIntruding
PUBLIC	__$ArrayPad$
PUBLIC	?DoFirstContactWithMajor@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z ; CvMinorCivAI::DoFirstContactWithMajor
EXTRN	?WrapCityPointer@CvGlobals@@QAE?AV?$auto_ptr@VICvCity1@@@std@@PAVCvCity@@@Z:PROC ; CvGlobals::WrapCityPointer
EXTRN	?plot@CvCity@@QBEPAVCvPlot@@XZ:PROC		; CvCity::plot
EXTRN	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z:PROC	; CvPlayer::nextCity
EXTRN	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z:PROC	; CvPlayer::firstCity
EXTRN	?CancelActivePlayerEndTurn@@YA_NXZ:PROC		; CancelActivePlayerEndTurn
EXTRN	?isNetworkMultiPlayer@CvGame@@QBE_NXZ:PROC	; CvGame::isNetworkMultiPlayer
EXTRN	?getElapsedGameTurns@CvGame@@QBEHXZ:PROC	; CvGame::getElapsedGameTurns
EXTRN	?ChangeFaith@CvPlayer@@QAEXH@Z:PROC		; CvPlayer::ChangeFaith
EXTRN	?ChangeGold@CvTreasury@@QAEXH@Z:PROC		; CvTreasury::ChangeGold
EXTRN	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ:PROC ; CvPlayer::GetTreasury
EXTRN	?getHasMetCivCount@CvTeam@@QBEH_N@Z:PROC	; CvTeam::getHasMetCivCount
EXTRN	?IsMinorCivAggressor@CvTeam@@QBE_NXZ:PROC	; CvTeam::IsMinorCivAggressor
EXTRN	?declareWar@CvTeam@@QAEXW4TeamTypes@@_N@Z:PROC	; CvTeam::declareWar
EXTRN	?isHuman@CvPlayer@@QBE_NXZ:PROC			; CvPlayer::isHuman
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces.h
xdata$x	SEGMENT
__unwindtable$?DoFirstContactWithMajor@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoFirstContactWithMajor@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z$1
__ehfuncinfo$?DoFirstContactWithMajor@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DoFirstContactWithMajor@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoFirstContactWithMajor@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z
_TEXT	SEGMENT
tv287 = -724						; size = 4
tv247 = -720						; size = 4
_this$ = -716						; size = 4
_inst$237580 = -712					; size = 4
$T237576 = -708						; size = 4
$T237564 = -704						; size = 4
_inst$237559 = -700					; size = 4
$T237556 = -696						; size = 4
$T237546 = -692						; size = 4
__Ptr$237544 = -688					; size = 4
$T237541 = -684						; size = 4
__Cvtptr$237536 = -680					; size = 4
__Ans$237537 = -676					; size = 4
$T237530 = -672						; size = 4
_uiOffset$237528 = -668					; size = 4
$T237519 = -664						; size = 4
$T237512 = -660						; size = 4
$T237511 = -656						; size = 4
$T237502 = -652						; size = 4
$T237498 = -648						; size = 4
$T237494 = -644						; size = 4
$T237487 = -640						; size = 4
$T237475 = -636						; size = 4
$T237465 = -632						; size = 4
$T237461 = -628						; size = 4
$T237460 = -624						; size = 4
$T237451 = -620						; size = 4
$T237444 = -616						; size = 4
$T237443 = -612						; size = 4
$T237434 = -608						; size = 4
$T237422 = -604						; size = 4
$T237416 = -600						; size = 4
$T237415 = -596						; size = 4
_pDllLoopCity$222210 = -592				; size = 4
_kPopupInfo$222156 = -588				; size = 536
__$ArrayPad$ = -52					; size = 4
_pLoopCity$222158 = -48					; size = 4
_iLoop$222157 = -44					; size = 4
_iPlayerLoop$222145 = -40				; size = 4
_ePlayer$222144 = -36					; size = 4
_iFaithGift$222137 = -32				; size = 4
_iGoldGift$222136 = -28					; size = 4
_bFirstMajorCiv$222138 = -21				; size = 1
_ePlayer$222129 = -20					; size = 4
_iPlayerLoop$222125 = -16				; size = 4
__$EHRec$ = -12						; size = 12
_eTeam$ = 8						; size = 4
_bSuppressMessages$ = 12				; size = 1
?DoFirstContactWithMajor@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z PROC ; CvMinorCivAI::DoFirstContactWithMajor, COMDAT
; _this$ = ecx

; 2108 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoFirstContactWithMajor@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 712				; 000002c8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2109 : 	// Set intrusion flag (used for unit movement)
; 2110 : 	for(int iPlayerLoop = 0; iPlayerLoop < MAX_MAJOR_CIVS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$222125[ebp], 0
	jmp	SHORT $LN26@DoFirstCon
$LN25@DoFirstCon:
	mov	eax, DWORD PTR _iPlayerLoop$222125[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayerLoop$222125[ebp], eax
$LN26@DoFirstCon:
	cmp	DWORD PTR _iPlayerLoop$222125[ebp], 22	; 00000016H
	jge	$LN24@DoFirstCon

; 2111 : 	{
; 2112 : 		PlayerTypes ePlayer = (PlayerTypes) iPlayerLoop;

	mov	ecx, DWORD PTR _iPlayerLoop$222125[ebp]
	mov	DWORD PTR _ePlayer$222129[ebp], ecx

; 2113 : 		if(GET_PLAYER(ePlayer).getTeam() == eTeam)

	mov	edx, DWORD PTR _ePlayer$222129[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T237422[ebp], edx
	mov	eax, DWORD PTR $T237422[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	cmp	eax, DWORD PTR _eTeam$[ebp]
	jne	SHORT $LN23@DoFirstCon

; 2114 : 		{
; 2115 : 			if(GET_PLAYER(ePlayer).isHuman())

	mov	edx, DWORD PTR _ePlayer$222129[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T237434[ebp], edx
	mov	ecx, DWORD PTR $T237434[ebp]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@DoFirstCon

; 2116 : 			{
; 2117 : 				// Humans intrude automatically upon meeting (allowing them to enter our territory if they choose)
; 2118 : 				SetMajorIntruding(ePlayer, true);

	push	1
	mov	ecx, DWORD PTR _ePlayer$222129[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetMajorIntruding@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z ; CvMinorCivAI::SetMajorIntruding

; 2119 : 			}
; 2120 : 			else

	jmp	SHORT $LN23@DoFirstCon
$LN22@DoFirstCon:

; 2121 : 			{
; 2122 : 				SetMajorIntruding(ePlayer, false);

	push	0
	mov	edx, DWORD PTR _ePlayer$222129[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetMajorIntruding@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z ; CvMinorCivAI::SetMajorIntruding
$LN23@DoFirstCon:

; 2123 : 			}
; 2124 : 		}
; 2125 : 	}

	jmp	$LN25@DoFirstCon
$LN24@DoFirstCon:

; 2126 : 
; 2127 : 	// This guy's a warmonger or at war with our ally, so we DoW him
; 2128 : 	if(IsPeaceBlocked(eTeam))

	mov	eax, DWORD PTR _eTeam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsPeaceBlocked@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z ; CvMinorCivAI::IsPeaceBlocked
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN20@DoFirstCon

; 2129 : 	{
; 2130 : 		GET_TEAM(GetPlayer()->getTeam()).declareWar(eTeam);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T237443[ebp], eax
	mov	edx, DWORD PTR $T237443[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T237444[ebp], eax
	push	0
	mov	ecx, DWORD PTR _eTeam$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T237444[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	call	?declareWar@CvTeam@@QAEXW4TeamTypes@@_N@Z ; CvTeam::declareWar

; 2131 : 	}
; 2132 : 	// Normal diplo
; 2133 : 	else

	jmp	$LN27@DoFirstCon
$LN20@DoFirstCon:

; 2134 : 	{
; 2135 : 		int iGoldGift = 0;

	mov	DWORD PTR _iGoldGift$222136[ebp], 0

; 2136 : 		int iFaithGift = 0;

	mov	DWORD PTR _iFaithGift$222137[ebp], 0

; 2137 : 		bool bFirstMajorCiv = false;

	mov	BYTE PTR _bFirstMajorCiv$222138[ebp], 0

; 2138 : 
; 2139 : 		// If this guy has been mean then no Gold gifts
; 2140 : 		if(!GET_TEAM(eTeam).IsMinorCivAggressor())

	mov	edx, DWORD PTR _eTeam$[ebp]
	imul	edx, 2984				; 00000ba8H
	add	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T237451[ebp], edx
	mov	ecx, DWORD PTR $T237451[ebp]
	call	?IsMinorCivAggressor@CvTeam@@QBE_NXZ	; CvTeam::IsMinorCivAggressor
	movzx	eax, al
	test	eax, eax
	jne	$LN18@DoFirstCon

; 2141 : 		{
; 2142 : 			// Hasn't met anyone yet?
; 2143 : 			if(GET_TEAM(GetPlayer()->getTeam()).getHasMetCivCount(true) == 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T237460[ebp], eax
	mov	ecx, DWORD PTR $T237460[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T237461[ebp], eax
	mov	eax, DWORD PTR $T237461[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T237465[ebp], eax
	push	1
	mov	ecx, DWORD PTR $T237465[ebp]
	call	?getHasMetCivCount@CvTeam@@QBEH_N@Z	; CvTeam::getHasMetCivCount
	test	eax, eax
	jne	SHORT $LN17@DoFirstCon

; 2144 : 			{
; 2145 : 				iGoldGift = /*60*/ GC.getMINOR_CIV_CONTACT_GOLD_FIRST();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7280
	mov	DWORD PTR _iGoldGift$222136[ebp], ecx

; 2146 : 				if(GetTrait() == MINOR_CIV_TRAIT_RELIGIOUS)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait
	cmp	eax, 4
	jne	SHORT $LN16@DoFirstCon

; 2147 : 					iFaithGift = 0; // GJS - lowered from 8; //antonjs: todo: XML

	mov	DWORD PTR _iFaithGift$222137[ebp], 0
$LN16@DoFirstCon:

; 2148 : 				bFirstMajorCiv = true;

	mov	BYTE PTR _bFirstMajorCiv$222138[ebp], 1

; 2149 : 			}
; 2150 : 			else

	jmp	SHORT $LN18@DoFirstCon
$LN17@DoFirstCon:

; 2151 : 			{
; 2152 : 				iGoldGift = /*30*/ GC.getMINOR_CIV_CONTACT_GOLD_OTHER();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7284
	mov	DWORD PTR _iGoldGift$222136[ebp], edx

; 2153 : 				if(GetTrait() == MINOR_CIV_TRAIT_RELIGIOUS)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait
	cmp	eax, 4
	jne	SHORT $LN18@DoFirstCon

; 2154 : 					iFaithGift = 0; // GJS - lowered from 4; //antonjs: todo: XML

	mov	DWORD PTR _iFaithGift$222137[ebp], 0
$LN18@DoFirstCon:

; 2155 : 			}
; 2156 : 		}
; 2157 : 
; 2158 : 		PlayerTypes ePlayer;
; 2159 : 		for(int iPlayerLoop = 0; iPlayerLoop < MAX_MAJOR_CIVS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$222145[ebp], 0
	jmp	SHORT $LN13@DoFirstCon
$LN12@DoFirstCon:
	mov	eax, DWORD PTR _iPlayerLoop$222145[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayerLoop$222145[ebp], eax
$LN13@DoFirstCon:
	cmp	DWORD PTR _iPlayerLoop$222145[ebp], 22	; 00000016H
	jge	$LN27@DoFirstCon

; 2160 : 		{
; 2161 : 			ePlayer = (PlayerTypes) iPlayerLoop;

	mov	ecx, DWORD PTR _iPlayerLoop$222145[ebp]
	mov	DWORD PTR _ePlayer$222144[ebp], ecx

; 2162 : 
; 2163 : 			if(GET_PLAYER(ePlayer).getTeam() == eTeam)

	mov	edx, DWORD PTR _ePlayer$222144[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T237475[ebp], edx
	mov	eax, DWORD PTR $T237475[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	cmp	eax, DWORD PTR _eTeam$[ebp]
	jne	$LN10@DoFirstCon

; 2164 : 			{
; 2165 : 				// Gold gift
; 2166 : 				GET_PLAYER(ePlayer).GetTreasury()->ChangeGold(iGoldGift);

	mov	edx, DWORD PTR _ePlayer$222144[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T237487[ebp], edx
	mov	eax, DWORD PTR _iGoldGift$222136[ebp]
	push	eax
	mov	ecx, DWORD PTR $T237487[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?ChangeGold@CvTreasury@@QAEXH@Z		; CvTreasury::ChangeGold

; 2167 : 
; 2168 : 				// Faith gift
; 2169 : 				if(iFaithGift > 0)

	cmp	DWORD PTR _iFaithGift$222137[ebp], 0
	jle	SHORT $LN9@DoFirstCon

; 2170 : 					GET_PLAYER(ePlayer).ChangeFaith(iFaithGift);

	mov	ecx, DWORD PTR _iFaithGift$222137[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ePlayer$222144[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?ChangeFaith@CvPlayer@@QAEXH@Z		; CvPlayer::ChangeFaith
$LN9@DoFirstCon:

; 2171 : 
; 2172 : 				// Need to seed quest counter?
; 2173 : 				if(GC.getGame().getElapsedGameTurns() > GetFirstPossibleTurnForPersonalQuests())

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T237494[ebp], edx
	mov	ecx, DWORD PTR $T237494[ebp]
	call	?getElapsedGameTurns@CvGame@@QBEHXZ	; CvGame::getElapsedGameTurns
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFirstPossibleTurnForPersonalQuests@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetFirstPossibleTurnForPersonalQuests
	cmp	esi, eax
	jle	SHORT $LN8@DoFirstCon

; 2174 : 				{
; 2175 : 					DoTestSeedQuestCountdownForPlayer(ePlayer);

	push	0
	mov	eax, DWORD PTR _ePlayer$222144[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoTestSeedQuestCountdownForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z ; CvMinorCivAI::DoTestSeedQuestCountdownForPlayer
$LN8@DoFirstCon:

; 2176 : 				}
; 2177 : 
; 2178 : 				// See if Threatening Barbarians event is active
; 2179 : 				if(GetTurnsSinceThreatenedAnnouncement() >= 0 && GetTurnsSinceThreatenedAnnouncement() < 10)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetTurnsSinceThreatenedAnnouncement
	test	eax, eax
	jl	SHORT $LN7@DoFirstCon
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetTurnsSinceThreatenedAnnouncement
	cmp	eax, 10					; 0000000aH
	jge	SHORT $LN7@DoFirstCon

; 2180 : 				{
; 2181 : 					DoTestThreatenedAnnouncementForPlayer(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$222144[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoTestThreatenedAnnouncementForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ; CvMinorCivAI::DoTestThreatenedAnnouncementForPlayer
$LN7@DoFirstCon:

; 2182 : 				}
; 2183 : 
; 2184 : 				// See if Proxy War event is active
; 2185 : 				DoTestProxyWarAnnouncementOnFirstContact(ePlayer);

	mov	edx, DWORD PTR _ePlayer$222144[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoTestProxyWarAnnouncementOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ; CvMinorCivAI::DoTestProxyWarAnnouncementOnFirstContact

; 2186 : 
; 2187 : 				// See if there are any quests you can join now
; 2188 : 				DoTestQuestsOnFirstContact(ePlayer);

	mov	eax, DWORD PTR _ePlayer$222144[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoTestQuestsOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ; CvMinorCivAI::DoTestQuestsOnFirstContact

; 2189 : 
; 2190 : 				// Greeting for active human player
; 2191 : 				if(ePlayer == GC.getGame().getActivePlayer() && !bSuppressMessages)

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T237498[ebp], ecx
	mov	ecx, DWORD PTR $T237498[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR _ePlayer$222144[ebp], eax
	jne	$LN10@DoFirstCon
	movzx	edx, BYTE PTR _bSuppressMessages$[ebp]
	test	edx, edx
	jne	$LN10@DoFirstCon

; 2192 : 				{
; 2193 : 					if(!GC.getGame().isNetworkMultiPlayer())	// KWG: Should this be !GC.getGame().isMPOption(MPOPTION_SIMULTANEOUS_TURNS)

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T237502[ebp], eax
	mov	ecx, DWORD PTR $T237502[ebp]
	call	?isNetworkMultiPlayer@CvGame@@QBE_NXZ	; CvGame::isNetworkMultiPlayer
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN5@DoFirstCon

; 2194 : 					{
; 2195 : 						CvPopupInfo kPopupInfo(BUTTONPOPUP_CITY_STATE_GREETING, GetPlayer()->GetID(), iGoldGift, iFaithGift, 0, bFirstMajorCiv);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T237511[ebp], eax
	mov	edx, DWORD PTR $T237511[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T237512[ebp], eax
	mov	ecx, DWORD PTR $T237512[ebp]
	mov	DWORD PTR _kPopupInfo$222156[ebp], ecx
	mov	edx, DWORD PTR _iGoldGift$222136[ebp]
	mov	DWORD PTR _kPopupInfo$222156[ebp+4], edx
	mov	eax, DWORD PTR _iFaithGift$222137[ebp]
	mov	DWORD PTR _kPopupInfo$222156[ebp+8], eax
	mov	DWORD PTR _kPopupInfo$222156[ebp+12], 0
	mov	cl, BYTE PTR _bFirstMajorCiv$222138[ebp]
	mov	BYTE PTR _kPopupInfo$222156[ebp+16], cl
	mov	BYTE PTR _kPopupInfo$222156[ebp+17], 0
	mov	DWORD PTR _kPopupInfo$222156[ebp+20], 61 ; 0000003dH
	mov	BYTE PTR _kPopupInfo$222156[ebp+24], 0

; 2196 : 						GC.GetEngineUserInterface()->AddPopup(kPopupInfo);

	mov	edx, DWORD PTR $T237519[ebp]
	mov	DWORD PTR tv247[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv247[ebp], eax
	lea	ecx, DWORD PTR _kPopupInfo$222156[ebp]
	push	ecx
	mov	edx, DWORD PTR tv247[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv247[ebp]
	mov	edx, DWORD PTR [eax+180]
	call	edx

; 2197 : 						// We are adding a popup that the player must make a choice in, make sure they are not in the end-turn phase.
; 2198 : 						CancelActivePlayerEndTurn();

	call	?CancelActivePlayerEndTurn@@YA_NXZ	; CancelActivePlayerEndTurn
$LN5@DoFirstCon:

; 2199 : 					}
; 2200 : 
; 2201 : 					// update the mouseover text for the city-state's city banners
; 2202 : 					int iLoop = 0;

	mov	DWORD PTR _iLoop$222157[ebp], 0

; 2203 : 					CvCity* pLoopCity = NULL;

	mov	DWORD PTR _pLoopCity$222158[ebp], 0

; 2204 : 					for(pLoopCity = m_pPlayer->firstCity(&iLoop); pLoopCity != NULL; pLoopCity = m_pPlayer->nextCity(&iLoop))

	push	0
	lea	eax, DWORD PTR _iLoop$222157[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$222158[ebp], eax
	jmp	SHORT $LN4@DoFirstCon
$LN3@DoFirstCon:
	push	0
	lea	edx, DWORD PTR _iLoop$222157[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$222158[ebp], eax
$LN4@DoFirstCon:
	cmp	DWORD PTR _pLoopCity$222158[ebp], 0
	je	$LN10@DoFirstCon

; 2205 : 					{
; 2206 : 						if(pLoopCity->plot()->isRevealed(eTeam))

	mov	ecx, DWORD PTR _pLoopCity$222158[ebp]
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	DWORD PTR $T237530[ebp], eax
	mov	ecx, DWORD PTR _eTeam$[ebp]
	shr	ecx, 5
	mov	DWORD PTR _uiOffset$237528[ebp], ecx
	mov	edx, DWORD PTR _uiOffset$237528[ebp]
	shl	edx, 5
	mov	ecx, DWORD PTR _eTeam$[ebp]
	sub	ecx, edx
	mov	eax, 1
	shl	eax, cl
	mov	ecx, DWORD PTR _uiOffset$237528[ebp]
	mov	edx, DWORD PTR $T237530[ebp]
	and	eax, DWORD PTR [edx+ecx*4+8]
	setne	al
	movzx	ecx, al
	test	ecx, ecx
	je	$LN1@DoFirstCon

; 2207 : 						{
; 2208 : 							auto_ptr<ICvCity1> pDllLoopCity = GC.WrapCityPointer(pLoopCity);

	mov	edx, DWORD PTR _pLoopCity$222158[ebp]
	push	edx
	lea	eax, DWORD PTR $T237415[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?WrapCityPointer@CvGlobals@@QAE?AV?$auto_ptr@VICvCity1@@@std@@PAVCvCity@@@Z ; CvGlobals::WrapCityPointer
	mov	DWORD PTR $T237541[ebp], eax
	mov	ecx, DWORD PTR $T237541[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Cvtptr$237536[ebp], edx
	mov	eax, DWORD PTR __Cvtptr$237536[ebp]
	mov	DWORD PTR __Ans$237537[ebp], eax
	mov	ecx, DWORD PTR $T237541[ebp]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR __Ans$237537[ebp]
	mov	DWORD PTR $T237416[ebp], edx
	mov	eax, DWORD PTR $T237416[ebp]
	mov	DWORD PTR $T237546[ebp], eax
	mov	ecx, DWORD PTR $T237546[ebp]
	mov	DWORD PTR __Ptr$237544[ebp], ecx
	mov	DWORD PTR $T237546[ebp], 0
	mov	edx, DWORD PTR __Ptr$237544[ebp]
	mov	DWORD PTR _pDllLoopCity$222210[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T237415[ebp]
	mov	DWORD PTR $T237556[ebp], eax
	cmp	DWORD PTR $T237556[ebp], 0
	je	SHORT $LN91@DoFirstCon
	mov	ecx, DWORD PTR $T237556[ebp]
	mov	DWORD PTR _inst$237559[ebp], ecx
	mov	edx, DWORD PTR _inst$237559[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _inst$237559[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+4]
	call	edx
$LN91@DoFirstCon:

; 2209 : 							GC.GetEngineUserInterface()->SetSpecificCityInfoDirty(pDllLoopCity.get(), CITY_UPDATE_TYPE_BANNER);

	mov	eax, DWORD PTR $T237564[ebp]
	mov	DWORD PTR tv287[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv287[ebp], ecx
	push	0
	mov	edx, DWORD PTR _pDllLoopCity$222210[ebp]
	push	edx
	mov	eax, DWORD PTR tv287[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv287[ebp]
	mov	eax, DWORD PTR [edx+440]
	call	eax

; 2210 : 						}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _pDllLoopCity$222210[ebp]
	mov	DWORD PTR $T237576[ebp], ecx
	cmp	DWORD PTR $T237576[ebp], 0
	je	SHORT $LN1@DoFirstCon
	mov	edx, DWORD PTR $T237576[ebp]
	mov	DWORD PTR _inst$237580[ebp], edx
	mov	eax, DWORD PTR _inst$237580[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$237580[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN1@DoFirstCon:

; 2211 : 					}

	jmp	$LN3@DoFirstCon
$LN10@DoFirstCon:

; 2212 : 				}
; 2213 : 			}

	jmp	$LN12@DoFirstCon
$LN27@DoFirstCon:

; 2214 : 		}
; 2215 : 	}
; 2216 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoFirstContactWithMajor@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z$1:
	lea	ecx, DWORD PTR _pDllLoopCity$222210[ebp]
	jmp	??1?$auto_ptr@VICvCity1@@@std@@QAE@XZ	; std::auto_ptr<ICvCity1>::~auto_ptr<ICvCity1>
__ehhandler$?DoFirstContactWithMajor@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-720]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoFirstContactWithMajor@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoFirstContactWithMajor@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z ENDP ; CvMinorCivAI::DoFirstContactWithMajor
PUBLIC	?IsPermanentWar@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z ; CvMinorCivAI::IsPermanentWar
PUBLIC	?DoTestEndWarsVSMinors@CvMinorCivAI@@QAEXW4PlayerTypes@@0@Z ; CvMinorCivAI::DoTestEndWarsVSMinors
EXTRN	?makePeace@CvTeam@@QAEXW4TeamTypes@@_N1@Z:PROC	; CvTeam::makePeace
EXTRN	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC	; CvTeam::isAtWar
EXTRN	?isMinorCiv@CvTeam@@QBE_NXZ:PROC		; CvTeam::isMinorCiv
; Function compile flags: /Odtp
;	COMDAT ?DoTestEndWarsVSMinors@CvMinorCivAI@@QAEXW4PlayerTypes@@0@Z
_TEXT	SEGMENT
_this$ = -116						; size = 4
$T237711 = -112						; size = 4
$T237710 = -108						; size = 4
$T237701 = -104						; size = 4
$T237697 = -100						; size = 4
$T237688 = -96						; size = 4
$T237684 = -92						; size = 4
$T237683 = -88						; size = 4
$T237674 = -84						; size = 4
$T237662 = -80						; size = 4
$T237658 = -76						; size = 4
$T237654 = -72						; size = 4
$T237645 = -68						; size = 4
$T237641 = -64						; size = 4
$T237637 = -60						; size = 4
$T237628 = -56						; size = 4
$T237624 = -52						; size = 4
$T237620 = -48						; size = 4
$T237619 = -44						; size = 4
$T237607 = -40						; size = 4
$T237603 = -36						; size = 4
$T237599 = -29						; size = 1
$T237598 = -28						; size = 4
_iTeamLoop$222242 = -24					; size = 4
_eOtherAlly$ = -20					; size = 4
_iOtherMinorLoop$ = -16					; size = 4
_eOtherMinor$ = -12					; size = 4
_eLoopTeam$ = -8					; size = 4
_bForcedWar$ = -1					; size = 1
_eOldAlly$ = 8						; size = 4
_eNewAlly$ = 12						; size = 4
?DoTestEndWarsVSMinors@CvMinorCivAI@@QAEXW4PlayerTypes@@0@Z PROC ; CvMinorCivAI::DoTestEndWarsVSMinors, COMDAT
; _this$ = ecx

; 2220 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 116				; 00000074H
	mov	DWORD PTR _this$[ebp], ecx

; 2221 : 	if(eOldAlly == NO_PLAYER)

	cmp	DWORD PTR _eOldAlly$[ebp], -1
	jne	SHORT $LN20@DoTestEndW

; 2222 : 		return;

	jmp	$LN21@DoTestEndW
$LN20@DoTestEndW:

; 2223 : 
; 2224 : 	if(!GetPlayer()->isAlive())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T237598[ebp], eax
	mov	eax, DWORD PTR $T237598[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T237599[ebp], cl
	movzx	edx, BYTE PTR $T237599[ebp]
	test	edx, edx
	jne	SHORT $LN19@DoTestEndW

; 2225 : 		return;

	jmp	$LN21@DoTestEndW
$LN19@DoTestEndW:

; 2226 : 
; 2227 : 	PlayerTypes eOtherMinor;
; 2228 : 	int iOtherMinorLoop;
; 2229 : 	PlayerTypes eOtherAlly;
; 2230 : 	bool bForcedWar;
; 2231 : 
; 2232 : 	TeamTypes eLoopTeam;
; 2233 : 	for(int iTeamLoop = 0; iTeamLoop < MAX_CIV_TEAMS; iTeamLoop++)

	mov	DWORD PTR _iTeamLoop$222242[ebp], 0
	jmp	SHORT $LN18@DoTestEndW
$LN17@DoTestEndW:
	mov	eax, DWORD PTR _iTeamLoop$222242[ebp]
	add	eax, 1
	mov	DWORD PTR _iTeamLoop$222242[ebp], eax
$LN18@DoTestEndW:
	cmp	DWORD PTR _iTeamLoop$222242[ebp], 63	; 0000003fH
	jge	$LN21@DoTestEndW

; 2234 : 	{
; 2235 : 		eLoopTeam = (TeamTypes) iTeamLoop;

	mov	ecx, DWORD PTR _iTeamLoop$222242[ebp]
	mov	DWORD PTR _eLoopTeam$[ebp], ecx

; 2236 : 
; 2237 : 		// Another Minor
; 2238 : 		if(!GET_TEAM(eLoopTeam).isMinorCiv())

	mov	edx, DWORD PTR _eLoopTeam$[ebp]
	imul	edx, 2984				; 00000ba8H
	add	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T237603[ebp], edx
	mov	ecx, DWORD PTR $T237603[ebp]
	call	?isMinorCiv@CvTeam@@QBE_NXZ		; CvTeam::isMinorCiv
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN15@DoTestEndW

; 2239 : 			continue;

	jmp	SHORT $LN17@DoTestEndW
$LN15@DoTestEndW:

; 2240 : 
; 2241 : 		// They not alive!
; 2242 : 		if(!GET_TEAM(eLoopTeam).isAlive())

	mov	ecx, DWORD PTR _eLoopTeam$[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T237607[ebp], ecx
	mov	edx, DWORD PTR $T237607[ebp]
	xor	eax, eax
	cmp	DWORD PTR [edx+12], 0
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN14@DoTestEndW

; 2243 : 			continue;

	jmp	SHORT $LN17@DoTestEndW
$LN14@DoTestEndW:

; 2244 : 
; 2245 : 		// At war with him
; 2246 : 		if(!GET_TEAM(GetPlayer()->getTeam()).isAtWar(eLoopTeam))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T237619[ebp], eax
	mov	edx, DWORD PTR $T237619[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T237620[ebp], eax
	mov	ecx, DWORD PTR $T237620[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T237624[ebp], ecx
	mov	edx, DWORD PTR _eLoopTeam$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T237624[ebp]
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN13@DoTestEndW

; 2247 : 			continue;

	jmp	$LN17@DoTestEndW
$LN13@DoTestEndW:

; 2248 : 
; 2249 : 		if(eOldAlly != NO_PLAYER)

	cmp	DWORD PTR _eOldAlly$[ebp], -1
	je	SHORT $LN12@DoTestEndW

; 2250 : 		{
; 2251 : 			// Old ally wasn't at war
; 2252 : 			if(!GET_TEAM(GET_PLAYER(eOldAlly).getTeam()).isAtWar(eLoopTeam))

	mov	ecx, DWORD PTR _eOldAlly$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T237628[ebp], ecx
	mov	edx, DWORD PTR $T237628[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T237637[ebp], eax
	mov	ecx, DWORD PTR $T237637[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T237641[ebp], ecx
	mov	edx, DWORD PTR _eLoopTeam$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T237641[ebp]
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN12@DoTestEndW

; 2253 : 				continue;

	jmp	$LN17@DoTestEndW
$LN12@DoTestEndW:

; 2254 : 		}
; 2255 : 
; 2256 : 		if(eNewAlly != NO_PLAYER)

	cmp	DWORD PTR _eNewAlly$[ebp], -1
	je	SHORT $LN10@DoTestEndW

; 2257 : 		{
; 2258 : 			// New ally IS at war
; 2259 : 			if(GET_TEAM(GET_PLAYER(eNewAlly).getTeam()).isAtWar(eLoopTeam))

	mov	ecx, DWORD PTR _eNewAlly$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T237645[ebp], ecx
	mov	edx, DWORD PTR $T237645[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T237654[ebp], eax
	mov	ecx, DWORD PTR $T237654[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T237658[ebp], ecx
	mov	edx, DWORD PTR _eLoopTeam$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T237658[ebp]
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@DoTestEndW

; 2260 : 				continue;

	jmp	$LN17@DoTestEndW
$LN10@DoTestEndW:

; 2261 : 		}
; 2262 : 
; 2263 : 		// Make sure this guy isn't allied with someone at war with us
; 2264 : 		bForcedWar = false;

	mov	BYTE PTR _bForcedWar$[ebp], 0

; 2265 : 
; 2266 : 		for(iOtherMinorLoop = 0; iOtherMinorLoop < MAX_CIV_TEAMS; iOtherMinorLoop++)

	mov	DWORD PTR _iOtherMinorLoop$[ebp], 0
	jmp	SHORT $LN8@DoTestEndW
$LN7@DoTestEndW:
	mov	ecx, DWORD PTR _iOtherMinorLoop$[ebp]
	add	ecx, 1
	mov	DWORD PTR _iOtherMinorLoop$[ebp], ecx
$LN8@DoTestEndW:
	cmp	DWORD PTR _iOtherMinorLoop$[ebp], 63	; 0000003fH
	jge	$LN6@DoTestEndW

; 2267 : 		{
; 2268 : 			eOtherMinor = (PlayerTypes) iOtherMinorLoop;

	mov	edx, DWORD PTR _iOtherMinorLoop$[ebp]
	mov	DWORD PTR _eOtherMinor$[ebp], edx

; 2269 : 
; 2270 : 			// Other minor is on this team
; 2271 : 			if(GET_PLAYER(eOtherMinor).getTeam() == eLoopTeam)

	mov	eax, DWORD PTR _eOtherMinor$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T237662[ebp], eax
	mov	ecx, DWORD PTR $T237662[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	cmp	eax, DWORD PTR _eLoopTeam$[ebp]
	jne	$LN5@DoTestEndW

; 2272 : 			{
; 2273 : 				eOtherAlly = GET_PLAYER(eOtherMinor).GetMinorCivAI()->GetAlly();

	mov	eax, DWORD PTR _eOtherMinor$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T237674[ebp], eax
	mov	ecx, DWORD PTR $T237674[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetAlly
	mov	DWORD PTR _eOtherAlly$[ebp], eax

; 2274 : 				if(eOtherAlly != NO_PLAYER)

	cmp	DWORD PTR _eOtherAlly$[ebp], -1
	je	SHORT $LN5@DoTestEndW

; 2275 : 				{
; 2276 : 					// This guy's ally at war with us?
; 2277 : 					if(GET_TEAM(GET_PLAYER(eOtherAlly).getTeam()).isAtWar(GetPlayer()->getTeam()))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T237683[ebp], eax
	mov	ecx, DWORD PTR $T237683[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T237684[ebp], eax
	mov	eax, DWORD PTR _eOtherAlly$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T237688[ebp], eax
	mov	ecx, DWORD PTR $T237688[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T237697[ebp], eax
	mov	eax, DWORD PTR $T237697[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T237701[ebp], eax
	mov	ecx, DWORD PTR $T237684[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T237701[ebp]
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@DoTestEndW

; 2278 : 					{
; 2279 : 						bForcedWar = true;

	mov	BYTE PTR _bForcedWar$[ebp], 1

; 2280 : 						break;

	jmp	SHORT $LN6@DoTestEndW
$LN5@DoTestEndW:

; 2281 : 					}
; 2282 : 				}
; 2283 : 			}
; 2284 : 
; 2285 : 		}

	jmp	$LN7@DoTestEndW
$LN6@DoTestEndW:

; 2286 : 
; 2287 : 		if(bForcedWar)

	movzx	eax, BYTE PTR _bForcedWar$[ebp]
	test	eax, eax
	je	SHORT $LN2@DoTestEndW

; 2288 : 			continue;

	jmp	$LN17@DoTestEndW
$LN2@DoTestEndW:

; 2289 : 
; 2290 : 		if(IsPermanentWar(eLoopTeam))

	mov	ecx, DWORD PTR _eLoopTeam$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsPermanentWar@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z ; CvMinorCivAI::IsPermanentWar
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@DoTestEndW

; 2291 : 			continue;

	jmp	$LN17@DoTestEndW
$LN1@DoTestEndW:

; 2292 : 
; 2293 : 		GET_TEAM(GetPlayer()->getTeam()).makePeace(eLoopTeam);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T237710[ebp], eax
	mov	eax, DWORD PTR $T237710[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T237711[ebp], eax
	push	0
	push	1
	mov	edx, DWORD PTR _eLoopTeam$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T237711[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	call	?makePeace@CvTeam@@QAEXW4TeamTypes@@_N1@Z ; CvTeam::makePeace
	jmp	$LN17@DoTestEndW
$LN21@DoTestEndW:

; 2294 : 	}
; 2295 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?DoTestEndWarsVSMinors@CvMinorCivAI@@QAEXW4PlayerTypes@@0@Z ENDP ; CvMinorCivAI::DoTestEndWarsVSMinors
_TEXT	ENDS
PUBLIC	?IsAtWarWithPlayersTeam@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAtWarWithPlayersTeam
EXTRN	?IsMinorCivWarmonger@CvTeam@@QBE_NXZ:PROC	; CvTeam::IsMinorCivWarmonger
EXTRN	?GetProximityToPlayer@CvPlayer@@QBE?AW4PlayerProximityTypes@@W4PlayerTypes@@@Z:PROC ; CvPlayer::GetProximityToPlayer
; Function compile flags: /Odtp
;	COMDAT ?DoTurnStatus@CvMinorCivAI@@QAEXXZ
_TEXT	SEGMENT
tv83 = -44						; size = 4
_this$ = -40						; size = 4
$T237741 = -36						; size = 4
$T237740 = -32						; size = 4
$T237728 = -28						; size = 4
_iPlayerLoop$222271 = -24				; size = 4
_ePlayer$ = -20						; size = 4
_eProximity$ = -16					; size = 4
_pTeam$ = -12						; size = 4
_iWeight$ = -8						; size = 4
_pPlayer$ = -4						; size = 4
?DoTurnStatus@CvMinorCivAI@@QAEXXZ PROC			; CvMinorCivAI::DoTurnStatus, COMDAT
; _this$ = ecx

; 2299 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 2300 : 	int iWeight = 0;

	mov	DWORD PTR _iWeight$[ebp], 0

; 2301 : 
; 2302 : 	PlayerProximityTypes eProximity;
; 2303 : 
; 2304 : 	CvPlayer* pPlayer;
; 2305 : 	CvTeam* pTeam;
; 2306 : 	PlayerTypes ePlayer;
; 2307 : 	for(int iPlayerLoop = 0; iPlayerLoop < MAX_MAJOR_CIVS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$222271[ebp], 0
	jmp	SHORT $LN18@DoTurnStat
$LN17@DoTurnStat:
	mov	eax, DWORD PTR _iPlayerLoop$222271[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayerLoop$222271[ebp], eax
$LN18@DoTurnStat:
	cmp	DWORD PTR _iPlayerLoop$222271[ebp], 22	; 00000016H
	jge	$LN16@DoTurnStat

; 2308 : 	{
; 2309 : 		ePlayer = (PlayerTypes) iPlayerLoop;

	mov	ecx, DWORD PTR _iPlayerLoop$222271[ebp]
	mov	DWORD PTR _ePlayer$[ebp], ecx

; 2310 : 		pPlayer = &GET_PLAYER(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pPlayer$[ebp], edx

; 2311 : 		pTeam = &GET_TEAM(pPlayer->getTeam());

	mov	eax, DWORD PTR _pPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T237728[ebp], eax
	mov	edx, DWORD PTR $T237728[ebp]
	imul	edx, 2984				; 00000ba8H
	add	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _pTeam$[ebp], edx

; 2312 : 
; 2313 : 		eProximity = pPlayer->GetProximityToPlayer(GetPlayer()->GetID());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T237740[ebp], eax
	mov	eax, DWORD PTR $T237740[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T237741[ebp], ecx
	mov	edx, DWORD PTR $T237741[ebp]
	push	edx
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?GetProximityToPlayer@CvPlayer@@QBE?AW4PlayerProximityTypes@@W4PlayerTypes@@@Z ; CvPlayer::GetProximityToPlayer
	mov	DWORD PTR _eProximity$[ebp], eax

; 2314 : 
; 2315 : 		// Check how close the player is
; 2316 : 		switch(eProximity)

	mov	eax, DWORD PTR _eProximity$[ebp]
	mov	DWORD PTR tv83[ebp], eax
	cmp	DWORD PTR tv83[ebp], 2
	je	SHORT $LN11@DoTurnStat
	cmp	DWORD PTR tv83[ebp], 3
	je	SHORT $LN8@DoTurnStat
	jmp	SHORT $LN14@DoTurnStat

; 2317 : 		{
; 2318 : 			// DISTANT: Elevated if we're at war
; 2319 : 		case PLAYER_PROXIMITY_DISTANT:
; 2320 : 			break;

	jmp	SHORT $LN14@DoTurnStat

; 2321 : // 			if (IsAtWarWithPlayersTeam(ePlayer))
; 2322 : // 			{
; 2323 : // 				iWeight += 10;
; 2324 : // 			}
; 2325 : 
; 2326 : 			// FAR: Elevated if they're an aggressor OR we're at war (note the ELSE IF)
; 2327 : 		case PLAYER_PROXIMITY_FAR:
; 2328 : 			break;

	jmp	SHORT $LN14@DoTurnStat
$LN11@DoTurnStat:

; 2329 : // 			if (pTeam->IsMinorCivAggressor())
; 2330 : // 			{
; 2331 : // 				iWeight += 10;
; 2332 : // 			}
; 2333 : // 			else if (IsAtWarWithPlayersTeam(ePlayer))
; 2334 : // 			{
; 2335 : // 				iWeight += 10;
; 2336 : // 			}
; 2337 : 
; 2338 : 			// CLOSE: Elevated if they're an aggressor, critical if we're at war
; 2339 : 		case PLAYER_PROXIMITY_CLOSE:
; 2340 : 			if(pTeam->IsMinorCivAggressor())

	mov	ecx, DWORD PTR _pTeam$[ebp]
	call	?IsMinorCivAggressor@CvTeam@@QBE_NXZ	; CvTeam::IsMinorCivAggressor
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@DoTurnStat

; 2341 : 			{
; 2342 : 				iWeight += 10;

	mov	edx, DWORD PTR _iWeight$[ebp]
	add	edx, 10					; 0000000aH
	mov	DWORD PTR _iWeight$[ebp], edx
$LN10@DoTurnStat:

; 2343 : 			}
; 2344 : 			if(pTeam->IsMinorCivWarmonger())

	mov	ecx, DWORD PTR _pTeam$[ebp]
	call	?IsMinorCivWarmonger@CvTeam@@QBE_NXZ	; CvTeam::IsMinorCivWarmonger
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@DoTurnStat

; 2345 : 			{
; 2346 : 				iWeight += 20;

	mov	ecx, DWORD PTR _iWeight$[ebp]
	add	ecx, 20					; 00000014H
	mov	DWORD PTR _iWeight$[ebp], ecx
$LN9@DoTurnStat:

; 2347 : 			}
; 2348 : 			break;

	jmp	SHORT $LN14@DoTurnStat
$LN8@DoTurnStat:

; 2349 : 
; 2350 : 			// NEIGHBORS: Pretty much anything makes the situation critical
; 2351 : 		case PLAYER_PROXIMITY_NEIGHBORS:
; 2352 : 			if(pTeam->IsMinorCivAggressor())

	mov	ecx, DWORD PTR _pTeam$[ebp]
	call	?IsMinorCivAggressor@CvTeam@@QBE_NXZ	; CvTeam::IsMinorCivAggressor
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN7@DoTurnStat

; 2353 : 			{
; 2354 : 				iWeight += 20;

	mov	eax, DWORD PTR _iWeight$[ebp]
	add	eax, 20					; 00000014H
	mov	DWORD PTR _iWeight$[ebp], eax
$LN7@DoTurnStat:

; 2355 : 			}
; 2356 : 			if(IsAtWarWithPlayersTeam(ePlayer))

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAtWarWithPlayersTeam@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAtWarWithPlayersTeam
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN14@DoTurnStat

; 2357 : 			{
; 2358 : 				iWeight += 20;

	mov	eax, DWORD PTR _iWeight$[ebp]
	add	eax, 20					; 00000014H
	mov	DWORD PTR _iWeight$[ebp], eax
$LN14@DoTurnStat:

; 2359 : 			}
; 2360 : 			break;
; 2361 : 		default:
; 2362 : 			break;
; 2363 : 		}
; 2364 : 	}

	jmp	$LN17@DoTurnStat
$LN16@DoTurnStat:

; 2365 : 
; 2366 : 	// Do the final math
; 2367 : 	if(iWeight >= 20)

	cmp	DWORD PTR _iWeight$[ebp], 20		; 00000014H
	jl	SHORT $LN4@DoTurnStat

; 2368 : 	{
; 2369 : 		m_eStatus = MINOR_CIV_STATUS_CRITICAL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 2
	jmp	SHORT $LN19@DoTurnStat
$LN4@DoTurnStat:

; 2370 : 	}
; 2371 : 	else if(iWeight >= 10)

	cmp	DWORD PTR _iWeight$[ebp], 10		; 0000000aH
	jl	SHORT $LN2@DoTurnStat

; 2372 : 	{
; 2373 : 		m_eStatus = MINOR_CIV_STATUS_ELEVATED;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 1

; 2374 : 	}
; 2375 : 	else

	jmp	SHORT $LN19@DoTurnStat
$LN2@DoTurnStat:

; 2376 : 	{
; 2377 : 		m_eStatus = MINOR_CIV_STATUS_NORMAL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
$LN19@DoTurnStat:

; 2378 : 	}
; 2379 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoTurnStatus@CvMinorCivAI@@QAEXXZ ENDP			; CvMinorCivAI::DoTurnStatus
_TEXT	ENDS
PUBLIC	?GetStatus@CvMinorCivAI@@QBE?AW4MinorCivStatusTypes@@XZ ; CvMinorCivAI::GetStatus
; Function compile flags: /Odtp
;	COMDAT ?GetStatus@CvMinorCivAI@@QBE?AW4MinorCivStatusTypes@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetStatus@CvMinorCivAI@@QBE?AW4MinorCivStatusTypes@@XZ PROC ; CvMinorCivAI::GetStatus, COMDAT
; _this$ = ecx

; 2383 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2384 : 	return m_eStatus;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]

; 2385 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetStatus@CvMinorCivAI@@QBE?AW4MinorCivStatusTypes@@XZ ENDP ; CvMinorCivAI::GetStatus
_TEXT	ENDS
PUBLIC	??1?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum ResourceTypes,64,1,297,0>::~FStaticVector<enum ResourceTypes,64,1,297,0>
PUBLIC	??_C@_0DB@IJCNGFHB@Rolling?5for?5Mercantile?5city?9stat@ ; `string'
PUBLIC	?push_back@?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAEIABW4ResourceTypes@@@Z ; FStaticVector<enum ResourceTypes,64,1,297,0>::push_back
PUBLIC	??0?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum ResourceTypes,64,1,297,0>::FStaticVector<enum ResourceTypes,64,1,297,0>
PUBLIC	__$ArrayPad$
PUBLIC	?DoAddStartingResources@CvMinorCivAI@@QAEXPAVCvPlot@@@Z ; CvMinorCivAI::DoAddStartingResources
EXTRN	?setResourceType@CvPlot@@QAEXW4ResourceTypes@@H_N@Z:PROC ; CvPlot::setResourceType
EXTRN	?getNumResourceInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumResourceInfos
EXTRN	?isOnlyMinorCivs@CvResourceInfo@@QBE_NXZ:PROC	; CvResourceInfo::isOnlyMinorCivs
EXTRN	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z:PROC ; CvPlot::getResourceType
EXTRN	?getNumCities@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getNumCities
;	COMDAT ??_C@_0DB@IJCNGFHB@Rolling?5for?5Mercantile?5city?9stat@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0DB@IJCNGFHB@Rolling?5for?5Mercantile?5city?9stat@ DB 'Rolling for '
	DB	'Mercantile city-state special luxury', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DoAddStartingResources@CvMinorCivAI@@QAEXPAVCvPlot@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoAddStartingResources@CvMinorCivAI@@QAEXPAVCvPlot@@@Z$0
__ehfuncinfo$?DoAddStartingResources@CvMinorCivAI@@QAEXPAVCvPlot@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DoAddStartingResources@CvMinorCivAI@@QAEXPAVCvPlot@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoAddStartingResources@CvMinorCivAI@@QAEXPAVCvPlot@@@Z
_TEXT	SEGMENT
_this$ = -372						; size = 4
$T237778 = -356						; size = 4
$T237774 = -352						; size = 4
$T237770 = -348						; size = 4
_iQuantity$222470 = -332				; size = 4
_iRoll$222468 = -328					; size = 4
_eSpecialLuxury$222471 = -324				; size = 4
_eResourceLoop$222462 = -320				; size = 4
_pkResourceInfo$222464 = -316				; size = 4
_iResourceLoop$222458 = -312				; size = 4
_veUniqueLuxuries$222457 = -308				; size = 272
__$ArrayPad$ = -32					; size = 4
_pkPlotResourceInfo$222307 = -28			; size = 4
_ePlotResource$222305 = -24				; size = 4
_bAddUniqueLuxury$222303 = -17				; size = 1
_eTrait$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pCityPlot$ = 8						; size = 4
?DoAddStartingResources@CvMinorCivAI@@QAEXPAVCvPlot@@@Z PROC ; CvMinorCivAI::DoAddStartingResources, COMDAT
; _this$ = ecx

; 2389 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoAddStartingResources@CvMinorCivAI@@QAEXPAVCvPlot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 360				; 00000168H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2390 : 	CvAssertMsg(pCityPlot != NULL, "City's plot should not be NULL. Please send Anton your save file and version.");
; 2391 : 	if (pCityPlot == NULL) return;

	cmp	DWORD PTR _pCityPlot$[ebp], 0
	jne	SHORT $LN12@DoAddStart
	jmp	$LN13@DoAddStart
$LN12@DoAddStart:

; 2392 : 
; 2393 : 	MinorCivTraitTypes eTrait = GetTrait();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait
	mov	DWORD PTR _eTrait$[ebp], eax

; 2394 : 
; 2395 : 	// Mercantile
; 2396 : 	if (eTrait == MINOR_CIV_TRAIT_MERCANTILE)

	cmp	DWORD PTR _eTrait$[ebp], 3
	jne	$LN13@DoAddStart

; 2397 : 	{
; 2398 : 		bool bAddUniqueLuxury = true;

	mov	BYTE PTR _bAddUniqueLuxury$222303[ebp], 1

; 2399 : 		
; 2400 : 		// Only for our first city
; 2401 : 		if (GetPlayer()->getNumCities() > 1)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNumCities@CvPlayer@@QBEHXZ		; CvPlayer::getNumCities
	cmp	eax, 1
	jle	SHORT $LN10@DoAddStart

; 2402 : 		{
; 2403 : 			bAddUniqueLuxury = false;

	mov	BYTE PTR _bAddUniqueLuxury$222303[ebp], 0
$LN10@DoAddStart:

; 2404 : 		}
; 2405 : 	
; 2406 : 		// Only if there isn't already a unique luxury on this plot
; 2407 : 		ResourceTypes ePlotResource = pCityPlot->getResourceType();

	push	-1
	mov	ecx, DWORD PTR _pCityPlot$[ebp]
	call	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z ; CvPlot::getResourceType
	mov	DWORD PTR _ePlotResource$222305[ebp], eax

; 2408 : 		if (ePlotResource != NO_RESOURCE)

	cmp	DWORD PTR _ePlotResource$222305[ebp], -1
	je	SHORT $LN9@DoAddStart

; 2409 : 		{
; 2410 : 			CvResourceInfo* pkPlotResourceInfo = GC.getResourceInfo(ePlotResource);

	mov	eax, DWORD PTR _ePlotResource$222305[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	DWORD PTR _pkPlotResourceInfo$222307[ebp], eax

; 2411 : 			if (pkPlotResourceInfo && pkPlotResourceInfo->isOnlyMinorCivs())

	cmp	DWORD PTR _pkPlotResourceInfo$222307[ebp], 0
	je	SHORT $LN9@DoAddStart
	mov	ecx, DWORD PTR _pkPlotResourceInfo$222307[ebp]
	call	?isOnlyMinorCivs@CvResourceInfo@@QBE_NXZ ; CvResourceInfo::isOnlyMinorCivs
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@DoAddStart

; 2412 : 			{
; 2413 : 				bAddUniqueLuxury = false;

	mov	BYTE PTR _bAddUniqueLuxury$222303[ebp], 0
$LN9@DoAddStart:

; 2414 : 			}
; 2415 : 		}
; 2416 : 
; 2417 : 		// Pick and add a unique luxury
; 2418 : 		if (bAddUniqueLuxury)

	movzx	edx, BYTE PTR _bAddUniqueLuxury$222303[ebp]
	test	edx, edx
	je	$LN13@DoAddStart

; 2419 : 		{
; 2420 : 			FStaticVector< ResourceTypes, 64, true, c_eCiv5GameplayDLL > veUniqueLuxuries;

	lea	ecx, DWORD PTR _veUniqueLuxuries$222457[ebp]
	call	??0?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum ResourceTypes,64,1,297,0>::FStaticVector<enum ResourceTypes,64,1,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2421 : #ifdef AUI_WARNING_FIXES
; 2422 : 			for (uint iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)
; 2423 : #else
; 2424 : 			for(int iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)

	mov	DWORD PTR _iResourceLoop$222458[ebp], 0
	jmp	SHORT $LN6@DoAddStart
$LN5@DoAddStart:
	mov	eax, DWORD PTR _iResourceLoop$222458[ebp]
	add	eax, 1
	mov	DWORD PTR _iResourceLoop$222458[ebp], eax
$LN6@DoAddStart:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	cmp	DWORD PTR _iResourceLoop$222458[ebp], eax
	jge	SHORT $LN4@DoAddStart

; 2425 : #endif
; 2426 : 			{
; 2427 : 				const ResourceTypes eResourceLoop = (ResourceTypes) iResourceLoop;

	mov	ecx, DWORD PTR _iResourceLoop$222458[ebp]
	mov	DWORD PTR _eResourceLoop$222462[ebp], ecx

; 2428 : 				CvResourceInfo* pkResourceInfo = GC.getResourceInfo(eResourceLoop);

	mov	edx, DWORD PTR _eResourceLoop$222462[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	DWORD PTR _pkResourceInfo$222464[ebp], eax

; 2429 : 				if(pkResourceInfo)

	cmp	DWORD PTR _pkResourceInfo$222464[ebp], 0
	je	SHORT $LN3@DoAddStart

; 2430 : 				{
; 2431 : 					if(pkResourceInfo->isOnlyMinorCivs())

	mov	ecx, DWORD PTR _pkResourceInfo$222464[ebp]
	call	?isOnlyMinorCivs@CvResourceInfo@@QBE_NXZ ; CvResourceInfo::isOnlyMinorCivs
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@DoAddStart

; 2432 : 					{
; 2433 : 						veUniqueLuxuries.push_back(eResourceLoop);

	lea	ecx, DWORD PTR _eResourceLoop$222462[ebp]
	push	ecx
	lea	ecx, DWORD PTR _veUniqueLuxuries$222457[ebp]
	call	?push_back@?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAEIABW4ResourceTypes@@@Z ; FStaticVector<enum ResourceTypes,64,1,297,0>::push_back
$LN3@DoAddStart:

; 2434 : 					}
; 2435 : 				}
; 2436 : 			}

	jmp	SHORT $LN5@DoAddStart
$LN4@DoAddStart:

; 2437 : 
; 2438 : 			pCityPlot->setResourceType(NO_RESOURCE, 0, true);

	push	1
	push	0
	push	-1
	mov	ecx, DWORD PTR _pCityPlot$[ebp]
	call	?setResourceType@CvPlot@@QAEXW4ResourceTypes@@H_N@Z ; CvPlot::setResourceType

; 2439 : 			if (veUniqueLuxuries.size() > 0)

	mov	edx, DWORD PTR _veUniqueLuxuries$222457[ebp+4]
	mov	DWORD PTR $T237770[ebp], edx
	cmp	DWORD PTR $T237770[ebp], 0
	jbe	SHORT $LN1@DoAddStart

; 2440 : 			{
; 2441 : 				int iRoll = GC.getGame().getJonRandNum(veUniqueLuxuries.size(), "Rolling for Mercantile city-state special luxury"); // range = [0, size - 1]

	mov	eax, DWORD PTR _veUniqueLuxuries$222457[ebp+4]
	mov	DWORD PTR $T237774[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T237778[ebp], ecx
	push	OFFSET ??_C@_0DB@IJCNGFHB@Rolling?5for?5Mercantile?5city?9stat@
	mov	edx, DWORD PTR $T237774[ebp]
	push	edx
	mov	ecx, DWORD PTR $T237778[ebp]
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	mov	DWORD PTR _iRoll$222468[ebp], eax

; 2442 : 				int iQuantity = GC.getMINOR_CIV_MERCANTILE_RESOURCES_QUANTITY();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3244
	mov	DWORD PTR _iQuantity$222470[ebp], eax

; 2443 : 				ResourceTypes eSpecialLuxury = veUniqueLuxuries[iRoll];

	mov	ecx, DWORD PTR _iRoll$222468[ebp]
	mov	edx, DWORD PTR _veUniqueLuxuries$222457[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _eSpecialLuxury$222471[ebp], eax

; 2444 : 
; 2445 : 				pCityPlot->setResourceType(eSpecialLuxury, iQuantity, true);

	push	1
	mov	ecx, DWORD PTR _iQuantity$222470[ebp]
	push	ecx
	mov	edx, DWORD PTR _eSpecialLuxury$222471[ebp]
	push	edx
	mov	ecx, DWORD PTR _pCityPlot$[ebp]
	call	?setResourceType@CvPlot@@QAEXW4ResourceTypes@@H_N@Z ; CvPlot::setResourceType
$LN1@DoAddStart:

; 2446 : 			}
; 2447 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _veUniqueLuxuries$222457[ebp]
	call	??1?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum ResourceTypes,64,1,297,0>::~FStaticVector<enum ResourceTypes,64,1,297,0>
$LN13@DoAddStart:

; 2448 : 	}
; 2449 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoAddStartingResources@CvMinorCivAI@@QAEXPAVCvPlot@@@Z$0:
	lea	ecx, DWORD PTR _veUniqueLuxuries$222457[ebp]
	jmp	??1?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum ResourceTypes,64,1,297,0>::~FStaticVector<enum ResourceTypes,64,1,297,0>
__ehhandler$?DoAddStartingResources@CvMinorCivAI@@QAEXPAVCvPlot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-364]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoAddStartingResources@CvMinorCivAI@@QAEXPAVCvPlot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoAddStartingResources@CvMinorCivAI@@QAEXPAVCvPlot@@@Z ENDP ; CvMinorCivAI::DoAddStartingResources
PUBLIC	?DoRemoveStartingResources@CvMinorCivAI@@QAEXPAVCvPlot@@@Z ; CvMinorCivAI::DoRemoveStartingResources
; Function compile flags: /Odtp
;	COMDAT ?DoRemoveStartingResources@CvMinorCivAI@@QAEXPAVCvPlot@@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T237823 = -20						; size = 4
_pkResourceInfo$222484 = -16				; size = 4
_eOldResource$222482 = -12				; size = 4
_bRemoveUniqueLuxury$222479 = -5			; size = 1
_eTrait$ = -4						; size = 4
_pCityPlot$ = 8						; size = 4
?DoRemoveStartingResources@CvMinorCivAI@@QAEXPAVCvPlot@@@Z PROC ; CvMinorCivAI::DoRemoveStartingResources, COMDAT
; _this$ = ecx

; 2453 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 2454 : 	CvAssertMsg(pCityPlot != NULL, "City's plot should not be NULL. Please send Anton your save file and version.");
; 2455 : 	if (pCityPlot == NULL) return;

	cmp	DWORD PTR _pCityPlot$[ebp], 0
	jne	SHORT $LN6@DoRemoveSt
	jmp	SHORT $LN7@DoRemoveSt
$LN6@DoRemoveSt:

; 2456 : 
; 2457 : 	MinorCivTraitTypes eTrait = GetTrait();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait
	mov	DWORD PTR _eTrait$[ebp], eax

; 2458 : 
; 2459 : 	// Mercantile
; 2460 : 	if(eTrait == MINOR_CIV_TRAIT_MERCANTILE)

	cmp	DWORD PTR _eTrait$[ebp], 3
	jne	SHORT $LN7@DoRemoveSt

; 2461 : 	{
; 2462 : 		bool bRemoveUniqueLuxury = false;

	mov	BYTE PTR _bRemoveUniqueLuxury$222479[ebp], 0

; 2463 : 
; 2464 : 		if (GC.getMINOR_CIV_MERCANTILE_RESOURCES_KEEP_ON_CAPTURE_DISABLED() == 1)

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3248
	mov	DWORD PTR $T237823[ebp], eax
	cmp	DWORD PTR $T237823[ebp], 1
	jne	SHORT $LN4@DoRemoveSt

; 2465 : 			bRemoveUniqueLuxury = true;

	mov	BYTE PTR _bRemoveUniqueLuxury$222479[ebp], 1
$LN4@DoRemoveSt:

; 2466 : 
; 2467 : 		if (bRemoveUniqueLuxury)

	movzx	ecx, BYTE PTR _bRemoveUniqueLuxury$222479[ebp]
	test	ecx, ecx
	je	SHORT $LN7@DoRemoveSt

; 2468 : 		{
; 2469 : 			ResourceTypes eOldResource = pCityPlot->getResourceType();

	push	-1
	mov	ecx, DWORD PTR _pCityPlot$[ebp]
	call	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z ; CvPlot::getResourceType
	mov	DWORD PTR _eOldResource$222482[ebp], eax

; 2470 : 			if (eOldResource != NO_RESOURCE)

	cmp	DWORD PTR _eOldResource$222482[ebp], -1
	je	SHORT $LN7@DoRemoveSt

; 2471 : 			{
; 2472 : 				CvResourceInfo* pkResourceInfo = GC.getResourceInfo(eOldResource);

	mov	edx, DWORD PTR _eOldResource$222482[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	DWORD PTR _pkResourceInfo$222484[ebp], eax

; 2473 : 				if (pkResourceInfo && pkResourceInfo->isOnlyMinorCivs())

	cmp	DWORD PTR _pkResourceInfo$222484[ebp], 0
	je	SHORT $LN7@DoRemoveSt
	mov	ecx, DWORD PTR _pkResourceInfo$222484[ebp]
	call	?isOnlyMinorCivs@CvResourceInfo@@QBE_NXZ ; CvResourceInfo::isOnlyMinorCivs
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@DoRemoveSt

; 2474 : 				{
; 2475 : 					pCityPlot->setResourceType(NO_RESOURCE, 0, true);

	push	1
	push	0
	push	-1
	mov	ecx, DWORD PTR _pCityPlot$[ebp]
	call	?setResourceType@CvPlot@@QAEXW4ResourceTypes@@H_N@Z ; CvPlot::setResourceType
$LN7@DoRemoveSt:

; 2476 : 				}
; 2477 : 			}
; 2478 : 		}
; 2479 : 	}
; 2480 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?DoRemoveStartingResources@CvMinorCivAI@@QAEXPAVCvPlot@@@Z ENDP ; CvMinorCivAI::DoRemoveStartingResources
_TEXT	ENDS
PUBLIC	?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z ; CvMinorCivAI::AddNotification
EXTRN	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z:PROC ; CvNotifications::Add
EXTRN	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ:PROC ; CvPlayer::GetNotifications
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z$1
__ehfuncinfo$?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z
_TEXT	SEGMENT
_this$ = -44						; size = 4
$T237862 = -40						; size = 4
$T237858 = -36						; size = 4
$T237857 = -32						; size = 4
$T237848 = -28						; size = 4
_capCity$222495 = -24					; size = 4
_pNotifications$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_sString$ = 8						; size = 28
_sSummaryString$ = 36					; size = 28
_ePlayer$ = 64						; size = 4
_iX$ = 68						; size = 4
_iY$ = 72						; size = 4
?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z PROC ; CvMinorCivAI::AddNotification, COMDAT
; _this$ = ecx

; 2484 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 2485 : 	if(iX == -1 && iY == -1)

	cmp	DWORD PTR _iX$[ebp], -1
	jne	SHORT $LN3@AddNotific
	cmp	DWORD PTR _iY$[ebp], -1
	jne	SHORT $LN3@AddNotific

; 2486 : 	{
; 2487 : 		CvCity* capCity = GetPlayer()->getCapitalCity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _capCity$222495[ebp], eax

; 2488 : 
; 2489 : 		if(capCity != NULL)

	cmp	DWORD PTR _capCity$222495[ebp], 0
	je	SHORT $LN3@AddNotific

; 2490 : 		{
; 2491 : 			iX = capCity->getX();

	mov	eax, DWORD PTR _capCity$222495[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR _iX$[ebp], ecx

; 2492 : 			iY = capCity->getY();

	mov	edx, DWORD PTR _capCity$222495[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR _iY$[ebp], eax
$LN3@AddNotific:

; 2493 : 		}
; 2494 : 	}
; 2495 : 
; 2496 : 	CvNotifications* pNotifications = GET_PLAYER(ePlayer).GetNotifications();

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T237848[ebp], ecx
	mov	ecx, DWORD PTR $T237848[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	DWORD PTR _pNotifications$[ebp], eax

; 2497 : 	if(pNotifications)

	cmp	DWORD PTR _pNotifications$[ebp], 0
	je	SHORT $LN1@AddNotific

; 2498 : 	{
; 2499 : 		pNotifications->Add(NOTIFICATION_MINOR, sString, sSummaryString, iX, iY, GetPlayer()->GetID());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T237857[ebp], eax
	mov	edx, DWORD PTR $T237857[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T237858[ebp], eax
	lea	ecx, DWORD PTR _sSummaryString$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T237862[ebp], eax
	push	-1
	mov	ecx, DWORD PTR $T237858[ebp]
	push	ecx
	mov	edx, DWORD PTR _iY$[ebp]
	push	edx
	mov	eax, DWORD PTR _iX$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T237862[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sString$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	-967190754				; c659d71eH
	mov	ecx, DWORD PTR _pNotifications$[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add
$LN1@AddNotific:

; 2500 : 	}
; 2501 : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sString$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sSummaryString$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	68					; 00000044H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z$0:
	lea	ecx, DWORD PTR _sSummaryString$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z$1:
	lea	ecx, DWORD PTR _sString$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z ENDP ; CvMinorCivAI::AddNotification
PUBLIC	??_C@_0CA@LNADNMBI@TXT_KEY_MINOR_QUEST_BLOCKING_TT?$AA@ ; `string'
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:PROC
;	COMDAT ??_C@_0CA@LNADNMBI@TXT_KEY_MINOR_QUEST_BLOCKING_TT?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0CA@LNADNMBI@TXT_KEY_MINOR_QUEST_BLOCKING_TT?$AA@ DB 'TXT_KEY_MINOR'
	DB	'_QUEST_BLOCKING_TT', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddQuestNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddQuestNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?AddQuestNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH_N@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?AddQuestNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH_N@Z$2
__ehfuncinfo$?AddQuestNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH_N@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?AddQuestNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?AddQuestNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH_N@Z
_TEXT	SEGMENT
tv163 = -140						; size = 4
tv165 = -136						; size = 4
_this$ = -132						; size = 4
$T237921 = -128						; size = 4
$T237917 = -124						; size = 4
$T237916 = -120						; size = 4
$T237904 = -116						; size = 4
$T237900 = -112						; size = 4
$T237899 = -108						; size = 4
$T237890 = -104						; size = 4
$T237883 = -100						; size = 80
_pNotifications$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_sString$ = 8						; size = 28
_sSummaryString$ = 36					; size = 28
_ePlayer$ = 64						; size = 4
_iX$ = 68						; size = 4
_iY$ = 72						; size = 4
_bNewQuest$ = 76					; size = 1
?AddQuestNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH_N@Z PROC ; CvMinorCivAI::AddQuestNotification, COMDAT
; _this$ = ecx

; 2505 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddQuestNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 128				; 00000080H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 2506 : 	CvNotifications* pNotifications = GET_PLAYER(ePlayer).GetNotifications();

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T237890[ebp], eax
	mov	ecx, DWORD PTR $T237890[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	DWORD PTR _pNotifications$[ebp], eax

; 2507 : 	if(pNotifications)

	cmp	DWORD PTR _pNotifications$[ebp], 0
	je	$LN3@AddQuestNo

; 2508 : 	{
; 2509 : 		sString += "[NEWLINE][NEWLINE]";

	push	OFFSET ??_C@_0BD@CNJPLLGH@?$FLNEWLINE?$FN?$FLNEWLINE?$FN?$AA@
	lea	ecx, DWORD PTR _sString$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 2510 : 		sString += Localization::Lookup("TXT_KEY_MINOR_QUEST_BLOCKING_TT").toUTF8();

	push	OFFSET ??_C@_0CA@LNADNMBI@TXT_KEY_MINOR_QUEST_BLOCKING_TT?$AA@
	lea	ecx, DWORD PTR $T237883[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv165[ebp], eax
	mov	edx, DWORD PTR tv165[ebp]
	mov	DWORD PTR tv163[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv163[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _sString$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T237883[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 2511 : 
; 2512 : 		if (bNewQuest)

	movzx	eax, BYTE PTR _bNewQuest$[ebp]
	test	eax, eax
	je	SHORT $LN2@AddQuestNo

; 2513 : 			pNotifications->Add(NOTIFICATION_MINOR_QUEST, sString, sSummaryString, iX, iY, GetPlayer()->GetID(), 1);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T237899[ebp], eax
	mov	ecx, DWORD PTR $T237899[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T237900[ebp], edx
	lea	ecx, DWORD PTR _sSummaryString$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T237904[ebp], eax
	push	1
	mov	eax, DWORD PTR $T237900[ebp]
	push	eax
	mov	ecx, DWORD PTR _iY$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iX$[ebp]
	push	edx
	mov	eax, DWORD PTR $T237904[ebp]
	push	eax
	lea	ecx, DWORD PTR _sString$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	-1365828128				; ae971de0H
	mov	ecx, DWORD PTR _pNotifications$[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 2514 : 		else

	jmp	SHORT $LN3@AddQuestNo
$LN2@AddQuestNo:

; 2515 : 			pNotifications->Add(NOTIFICATION_MINOR_QUEST, sString, sSummaryString, iX, iY, GetPlayer()->GetID());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T237916[ebp], eax
	mov	ecx, DWORD PTR $T237916[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T237917[ebp], edx
	lea	ecx, DWORD PTR _sSummaryString$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T237921[ebp], eax
	push	-1
	mov	eax, DWORD PTR $T237917[ebp]
	push	eax
	mov	ecx, DWORD PTR _iY$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iX$[ebp]
	push	edx
	mov	eax, DWORD PTR $T237921[ebp]
	push	eax
	lea	ecx, DWORD PTR _sString$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	-1365828128				; ae971de0H
	mov	ecx, DWORD PTR _pNotifications$[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add
$LN3@AddQuestNo:

; 2516 : 	}
; 2517 : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sString$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sSummaryString$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	72					; 00000048H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddQuestNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH_N@Z$0:
	lea	ecx, DWORD PTR _sSummaryString$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?AddQuestNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH_N@Z$1:
	lea	ecx, DWORD PTR _sString$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?AddQuestNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH_N@Z$2:
	lea	ecx, DWORD PTR $T237883[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?AddQuestNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddQuestNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddQuestNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH_N@Z ENDP ; CvMinorCivAI::AddQuestNotification
PUBLIC	?AddBuyoutNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z ; CvMinorCivAI::AddBuyoutNotification
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?AddBuyoutNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddBuyoutNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?AddBuyoutNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z$1
__ehfuncinfo$?AddBuyoutNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AddBuyoutNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?AddBuyoutNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z
_TEXT	SEGMENT
_this$ = -44						; size = 4
$T237977 = -40						; size = 4
$T237973 = -36						; size = 4
$T237972 = -32						; size = 4
$T237963 = -28						; size = 4
_capCity$222523 = -24					; size = 4
_pNotifications$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_sString$ = 8						; size = 28
_sSummaryString$ = 36					; size = 28
_ePlayer$ = 64						; size = 4
_iX$ = 68						; size = 4
_iY$ = 72						; size = 4
?AddBuyoutNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z PROC ; CvMinorCivAI::AddBuyoutNotification, COMDAT
; _this$ = ecx

; 2521 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddBuyoutNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 2522 : 	if(iX == -1 && iY == -1)

	cmp	DWORD PTR _iX$[ebp], -1
	jne	SHORT $LN3@AddBuyoutN
	cmp	DWORD PTR _iY$[ebp], -1
	jne	SHORT $LN3@AddBuyoutN

; 2523 : 	{
; 2524 : 		CvCity* capCity = GetPlayer()->getCapitalCity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _capCity$222523[ebp], eax

; 2525 : 
; 2526 : 		if(capCity != NULL)

	cmp	DWORD PTR _capCity$222523[ebp], 0
	je	SHORT $LN3@AddBuyoutN

; 2527 : 		{
; 2528 : 			iX = capCity->getX();

	mov	eax, DWORD PTR _capCity$222523[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR _iX$[ebp], ecx

; 2529 : 			iY = capCity->getY();

	mov	edx, DWORD PTR _capCity$222523[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR _iY$[ebp], eax
$LN3@AddBuyoutN:

; 2530 : 		}
; 2531 : 	}
; 2532 : 
; 2533 : 	CvNotifications* pNotifications = GET_PLAYER(ePlayer).GetNotifications();

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T237963[ebp], ecx
	mov	ecx, DWORD PTR $T237963[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	DWORD PTR _pNotifications$[ebp], eax

; 2534 : 	if(pNotifications)

	cmp	DWORD PTR _pNotifications$[ebp], 0
	je	SHORT $LN1@AddBuyoutN

; 2535 : 	{
; 2536 : 		pNotifications->Add(NOTIFICATION_MINOR_BUYOUT, sString, sSummaryString, iX, iY, GetPlayer()->GetID());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T237972[ebp], eax
	mov	edx, DWORD PTR $T237972[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T237973[ebp], eax
	lea	ecx, DWORD PTR _sSummaryString$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T237977[ebp], eax
	push	-1
	mov	ecx, DWORD PTR $T237973[ebp]
	push	ecx
	mov	edx, DWORD PTR _iY$[ebp]
	push	edx
	mov	eax, DWORD PTR _iX$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T237977[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sString$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	1594364879				; 5f0813cfH
	mov	ecx, DWORD PTR _pNotifications$[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add
$LN1@AddBuyoutN:

; 2537 : 	}
; 2538 : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sString$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sSummaryString$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	68					; 00000044H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddBuyoutNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z$0:
	lea	ecx, DWORD PTR _sSummaryString$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?AddBuyoutNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z$1:
	lea	ecx, DWORD PTR _sString$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?AddBuyoutNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddBuyoutNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddBuyoutNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z ENDP ; CvMinorCivAI::AddBuyoutNotification
PUBLIC	?GetNumThreateningBarbarians@CvMinorCivAI@@QAEHXZ ; CvMinorCivAI::GetNumThreateningBarbarians
PUBLIC	?IsHasMetPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsHasMetPlayer
PUBLIC	?IsThreateningBarbariansEventActiveForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsThreateningBarbariansEventActiveForPlayer
; Function compile flags: /Odtp
;	COMDAT ?IsThreateningBarbariansEventActiveForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T238006 = -5						; size = 1
$T238005 = -4						; size = 4
_ePlayer$ = 8						; size = 4
?IsThreateningBarbariansEventActiveForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::IsThreateningBarbariansEventActiveForPlayer, COMDAT
; _this$ = ecx

; 2547 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2548 : 	if (GetPlayer()->isAlive())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T238005[ebp], eax
	mov	eax, DWORD PTR $T238005[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T238006[ebp], cl
	movzx	edx, BYTE PTR $T238006[ebp]
	test	edx, edx
	je	SHORT $LN3@IsThreaten

; 2549 : 	{
; 2550 : 		if (IsHasMetPlayer(ePlayer) && !IsAtWarWithPlayersTeam(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsHasMetPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsHasMetPlayer
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@IsThreaten
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAtWarWithPlayersTeam@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAtWarWithPlayersTeam
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@IsThreaten

; 2551 : 		{
; 2552 : 			if (GetNumThreateningBarbarians() > 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumThreateningBarbarians@CvMinorCivAI@@QAEHXZ ; CvMinorCivAI::GetNumThreateningBarbarians
	test	eax, eax
	jle	SHORT $LN3@IsThreaten

; 2553 : 			{
; 2554 : 				return true;

	mov	al, 1
	jmp	SHORT $LN4@IsThreaten
$LN3@IsThreaten:

; 2555 : 			}
; 2556 : 		}
; 2557 : 	}
; 2558 : 	
; 2559 : 	return false;

	xor	al, al
$LN4@IsThreaten:

; 2560 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsThreateningBarbariansEventActiveForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::IsThreateningBarbariansEventActiveForPlayer
_TEXT	ENDS
EXTRN	?IsBarbarianUnitThreateningMinor@CvUnit@@QAE_NW4PlayerTypes@@@Z:PROC ; CvUnit::IsBarbarianUnitThreateningMinor
; Function compile flags: /Odtp
;	COMDAT ?GetNumThreateningBarbarians@CvMinorCivAI@@QAEHXZ
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T238026 = -28						; size = 4
$T238025 = -24						; size = 4
$T238016 = -20						; size = 4
$T238012 = -16						; size = 4
_pLoopUnit$222539 = -12					; size = 4
_iCount$ = -8						; size = 4
_iLoop$ = -4						; size = 4
?GetNumThreateningBarbarians@CvMinorCivAI@@QAEHXZ PROC	; CvMinorCivAI::GetNumThreateningBarbarians, COMDAT
; _this$ = ecx

; 2564 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 2565 : 	int iCount = 0;

	mov	DWORD PTR _iCount$[ebp], 0

; 2566 : 
; 2567 : 	int iLoop;
; 2568 : 	for(CvUnit* pLoopUnit = GET_PLAYER(BARBARIAN_PLAYER).firstUnit(&iLoop); NULL != pLoopUnit; pLoopUnit = GET_PLAYER(BARBARIAN_PLAYER).nextUnit(&iLoop))

	mov	eax, 63					; 0000003fH
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T238012[ebp], eax
	push	0
	lea	ecx, DWORD PTR _iLoop$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T238012[ebp]
	call	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::firstUnit
	mov	DWORD PTR _pLoopUnit$222539[ebp], eax
	jmp	SHORT $LN4@GetNumThre
$LN3@GetNumThre:
	mov	edx, 63					; 0000003fH
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T238016[ebp], edx
	push	0
	lea	eax, DWORD PTR _iLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T238016[ebp]
	call	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::nextUnit
	mov	DWORD PTR _pLoopUnit$222539[ebp], eax
$LN4@GetNumThre:
	cmp	DWORD PTR _pLoopUnit$222539[ebp], 0
	je	SHORT $LN2@GetNumThre

; 2569 : 	{
; 2570 : 		if(pLoopUnit->IsBarbarianUnitThreateningMinor(GetPlayer()->GetID()))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T238025[ebp], eax
	mov	ecx, DWORD PTR $T238025[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T238026[ebp], edx
	mov	eax, DWORD PTR $T238026[ebp]
	push	eax
	mov	ecx, DWORD PTR _pLoopUnit$222539[ebp]
	call	?IsBarbarianUnitThreateningMinor@CvUnit@@QAE_NW4PlayerTypes@@@Z ; CvUnit::IsBarbarianUnitThreateningMinor
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@GetNumThre

; 2571 : 			iCount++;

	mov	edx, DWORD PTR _iCount$[ebp]
	add	edx, 1
	mov	DWORD PTR _iCount$[ebp], edx
$LN1@GetNumThre:

; 2572 : 	}

	jmp	SHORT $LN3@GetNumThre
$LN2@GetNumThre:

; 2573 : 
; 2574 : 	return iCount;

	mov	eax, DWORD PTR _iCount$[ebp]

; 2575 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumThreateningBarbarians@CvMinorCivAI@@QAEHXZ ENDP	; CvMinorCivAI::GetNumThreateningBarbarians
_TEXT	ENDS
PUBLIC	?ChangeTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QAEXH@Z ; CvMinorCivAI::ChangeTurnsSinceThreatenedAnnouncement
; Function compile flags: /Odtp
;	COMDAT ?DoTestThreatenedAnnouncement@CvMinorCivAI@@QAEXXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T238032 = -8						; size = 4
_iPlayerLoop$222553 = -4				; size = 4
?DoTestThreatenedAnnouncement@CvMinorCivAI@@QAEXXZ PROC	; CvMinorCivAI::DoTestThreatenedAnnouncement, COMDAT
; _this$ = ecx

; 2579 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2580 : 	// Increment counter - this is only used when sending notifications to players
; 2581 : 	if(GetTurnsSinceThreatenedAnnouncement() >= 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetTurnsSinceThreatenedAnnouncement
	test	eax, eax
	jl	SHORT $LN7@DoTestThre

; 2582 : 	{
; 2583 : 		ChangeTurnsSinceThreatenedAnnouncement(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QAEXH@Z ; CvMinorCivAI::ChangeTurnsSinceThreatenedAnnouncement

; 2584 : 
; 2585 : 		// Long enough to have expired?
; 2586 : 		if(GetTurnsSinceThreatenedAnnouncement() >= 30)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetTurnsSinceThreatenedAnnouncement
	cmp	eax, 30					; 0000001eH
	jl	SHORT $LN7@DoTestThre

; 2587 : 			SetTurnsSinceThreatenedAnnouncement(-1);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QAEXH@Z ; CvMinorCivAI::SetTurnsSinceThreatenedAnnouncement
$LN7@DoTestThre:

; 2588 : 	}
; 2589 : 
; 2590 : 	// Not already threatened?
; 2591 : 	if(GetTurnsSinceThreatenedAnnouncement() == -1)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetTurnsSinceThreatenedAnnouncement
	cmp	eax, -1
	jne	SHORT $LN8@DoTestThre

; 2592 : 	{
; 2593 : 		if(GetNumThreateningBarbarians() >= GC.getMINOR_CIV_THREATENED_BY_BARBS_NOTIF_THRESHOLD())

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3240
	mov	DWORD PTR $T238032[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumThreateningBarbarians@CvMinorCivAI@@QAEHXZ ; CvMinorCivAI::GetNumThreateningBarbarians
	cmp	eax, DWORD PTR $T238032[ebp]
	jl	SHORT $LN8@DoTestThre

; 2594 : 		{
; 2595 : 			// Wasn't under attack before, but is now!
; 2596 : 			SetTurnsSinceThreatenedAnnouncement(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QAEXH@Z ; CvMinorCivAI::SetTurnsSinceThreatenedAnnouncement

; 2597 : 
; 2598 : 			for(int iPlayerLoop = 0; iPlayerLoop < MAX_MAJOR_CIVS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$222553[ebp], 0
	jmp	SHORT $LN3@DoTestThre
$LN2@DoTestThre:
	mov	ecx, DWORD PTR _iPlayerLoop$222553[ebp]
	add	ecx, 1
	mov	DWORD PTR _iPlayerLoop$222553[ebp], ecx
$LN3@DoTestThre:
	cmp	DWORD PTR _iPlayerLoop$222553[ebp], 22	; 00000016H
	jge	SHORT $LN8@DoTestThre

; 2599 : 			{
; 2600 : 				DoTestThreatenedAnnouncementForPlayer((PlayerTypes) iPlayerLoop);

	mov	edx, DWORD PTR _iPlayerLoop$222553[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoTestThreatenedAnnouncementForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ; CvMinorCivAI::DoTestThreatenedAnnouncementForPlayer

; 2601 : 			}

	jmp	SHORT $LN2@DoTestThre
$LN8@DoTestThre:

; 2602 : 		}
; 2603 : 	}
; 2604 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoTestThreatenedAnnouncement@CvMinorCivAI@@QAEXXZ ENDP	; CvMinorCivAI::DoTestThreatenedAnnouncement
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QBEHXZ PROC ; CvMinorCivAI::GetTurnsSinceThreatenedAnnouncement, COMDAT
; _this$ = ecx

; 2608 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2609 : 	return m_iTurnsSinceThreatenedByBarbarians;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]

; 2610 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QBEHXZ ENDP ; CvMinorCivAI::GetTurnsSinceThreatenedAnnouncement
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?SetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iValue$ = 8						; size = 4
?SetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QAEXH@Z PROC ; CvMinorCivAI::SetTurnsSinceThreatenedAnnouncement, COMDAT
; _this$ = ecx

; 2614 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2615 : 	if(GetTurnsSinceThreatenedAnnouncement() != iValue)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetTurnsSinceThreatenedAnnouncement
	cmp	eax, DWORD PTR _iValue$[ebp]
	je	SHORT $LN2@SetTurnsSi

; 2616 : 		m_iTurnsSinceThreatenedByBarbarians = iValue;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR [eax+20], ecx
$LN2@SetTurnsSi:

; 2617 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QAEXH@Z ENDP ; CvMinorCivAI::SetTurnsSinceThreatenedAnnouncement
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?ChangeTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iChange$ = 8						; size = 4
?ChangeTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QAEXH@Z PROC ; CvMinorCivAI::ChangeTurnsSinceThreatenedAnnouncement, COMDAT
; _this$ = ecx

; 2621 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2622 : 	SetTurnsSinceThreatenedAnnouncement(GetTurnsSinceThreatenedAnnouncement() + iChange);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetTurnsSinceThreatenedAnnouncement
	add	eax, DWORD PTR _iChange$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QAEXH@Z ; CvMinorCivAI::SetTurnsSinceThreatenedAnnouncement

; 2623 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ChangeTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QAEXH@Z ENDP ; CvMinorCivAI::ChangeTurnsSinceThreatenedAnnouncement
_TEXT	ENDS
PUBLIC	??_C@_0CP@PKFIGIBD@TXT_KEY_NOTIFICATION_SUMMARY_MIN@ ; `string'
PUBLIC	??_C@_0CH@JEGGHDDO@TXT_KEY_NOTIFICATION_MINOR_BARBS@ ; `string'
PUBLIC	?IsPlayerCloseEnoughForThreatenedAnnouncement@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsPlayerCloseEnoughForThreatenedAnnouncement
;	COMDAT ??_C@_0CP@PKFIGIBD@TXT_KEY_NOTIFICATION_SUMMARY_MIN@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0CP@PKFIGIBD@TXT_KEY_NOTIFICATION_SUMMARY_MIN@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_MINOR_BARBS_QUEST', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@JEGGHDDO@TXT_KEY_NOTIFICATION_MINOR_BARBS@
CONST	SEGMENT
??_C@_0CH@JEGGHDDO@TXT_KEY_NOTIFICATION_MINOR_BARBS@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_BARBS_QUEST', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DoTestThreatenedAnnouncementForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoTestThreatenedAnnouncementForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DoTestThreatenedAnnouncementForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?DoTestThreatenedAnnouncementForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$2
__ehfuncinfo$?DoTestThreatenedAnnouncementForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?DoTestThreatenedAnnouncementForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoTestThreatenedAnnouncementForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
_TEXT	SEGMENT
tv190 = -252						; size = 4
tv215 = -248						; size = 4
tv187 = -244						; size = 4
tv202 = -240						; size = 4
_this$ = -236						; size = 4
$T238098 = -232						; size = 4
$T238097 = -228						; size = 4
$T238088 = -224						; size = 4
$T238087 = -220						; size = 4
$T238078 = -216						; size = 4
$T238058 = -209						; size = 1
$T238057 = -208						; size = 4
$T238044 = -204						; size = 4
$T238043 = -200						; size = 4
$T238042 = -196						; size = 4
$T238041 = -192						; size = 4
_strMessage$222582 = -188				; size = 80
_strSummary$222586 = -108				; size = 80
_iX$222577 = -24					; size = 4
_iY$222578 = -20					; size = 4
_pCapital$222575 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
?DoTestThreatenedAnnouncementForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z PROC ; CvMinorCivAI::DoTestThreatenedAnnouncementForPlayer, COMDAT
; _this$ = ecx

; 2627 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoTestThreatenedAnnouncementForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2628 : 	if (GetPlayer()->isAlive())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T238057[ebp], eax
	mov	eax, DWORD PTR $T238057[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T238058[ebp], cl
	movzx	edx, BYTE PTR $T238058[ebp]
	test	edx, edx
	je	$LN6@DoTestThre@2

; 2629 : 	{
; 2630 : 		CvCity* pCapital = GetPlayer()->getCapitalCity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pCapital$222575[ebp], eax

; 2631 : 		if (pCapital)

	cmp	DWORD PTR _pCapital$222575[ebp], 0
	je	$LN6@DoTestThre@2

; 2632 : 		{
; 2633 : 			int iX = pCapital->getX();

	mov	eax, DWORD PTR _pCapital$222575[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR _iX$222577[ebp], ecx

; 2634 : 			int iY = pCapital->getY();

	mov	edx, DWORD PTR _pCapital$222575[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR _iY$222578[ebp], eax

; 2635 : 			if (IsThreateningBarbariansEventActiveForPlayer(ePlayer))

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsThreateningBarbariansEventActiveForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsThreateningBarbariansEventActiveForPlayer
	movzx	edx, al
	test	edx, edx
	je	$LN6@DoTestThre@2

; 2636 : 			{
; 2637 : 				// Is ePlayer is close to us?
; 2638 : 				if (IsPlayerCloseEnoughForThreatenedAnnouncement(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsPlayerCloseEnoughForThreatenedAnnouncement@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsPlayerCloseEnoughForThreatenedAnnouncement
	movzx	ecx, al
	test	ecx, ecx
	je	$LN6@DoTestThre@2

; 2639 : 				{
; 2640 : 					// Are there enough barbs to warrant sending a message about it?
; 2641 : 					if (GetNumThreateningBarbarians() >= GC.getMINOR_CIV_THREATENED_BY_BARBS_NOTIF_THRESHOLD())

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3240
	mov	DWORD PTR $T238078[ebp], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumThreateningBarbarians@CvMinorCivAI@@QAEHXZ ; CvMinorCivAI::GetNumThreateningBarbarians
	cmp	eax, DWORD PTR $T238078[ebp]
	jl	$LN6@DoTestThre@2

; 2642 : 					{
; 2643 : 						Localization::String strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_BARBS_QUEST");

	push	OFFSET ??_C@_0CH@JEGGHDDO@TXT_KEY_NOTIFICATION_MINOR_BARBS@
	lea	eax, DWORD PTR _strMessage$222582[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2644 : 						strMessage << GetPlayer()->getNameKey();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T238041[ebp], eax
	lea	ecx, DWORD PTR $T238041[ebp]
	push	ecx
	lea	edx, DWORD PTR _strMessage$222582[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 2645 : 						Localization::String strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_MINOR_BARBS_QUEST");

	push	OFFSET ??_C@_0CP@PKFIGIBD@TXT_KEY_NOTIFICATION_SUMMARY_MIN@
	lea	eax, DWORD PTR _strSummary$222586[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2646 : 						strSummary << GetPlayer()->getNameKey();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T238042[ebp], eax
	lea	ecx, DWORD PTR $T238042[ebp]
	push	ecx
	lea	edx, DWORD PTR _strSummary$222586[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 2647 : 						AddNotification(strMessage.toUTF8(), strSummary.toUTF8(), ePlayer, iX, iY);

	mov	eax, DWORD PTR _iY$222578[ebp]
	push	eax
	mov	ecx, DWORD PTR _iX$222577[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$222586[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T238088[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T238043[ebp], esp
	mov	DWORD PTR $T238087[ebp], eax
	cmp	DWORD PTR $T238088[ebp], 0
	je	SHORT $LN28@DoTestThre@2
	mov	ecx, DWORD PTR $T238088[ebp]
	mov	DWORD PTR tv202[ebp], ecx
	jmp	SHORT $LN29@DoTestThre@2
$LN28@DoTestThre@2:
	mov	DWORD PTR tv202[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN29@DoTestThre@2:
	mov	edx, DWORD PTR tv202[ebp]
	push	edx
	mov	ecx, DWORD PTR $T238087[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR $T238087[ebp]
	mov	DWORD PTR tv187[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _strMessage$222582[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T238098[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T238044[ebp], esp
	mov	DWORD PTR $T238097[ebp], ecx
	cmp	DWORD PTR $T238098[ebp], 0
	je	SHORT $LN33@DoTestThre@2
	mov	edx, DWORD PTR $T238098[ebp]
	mov	DWORD PTR tv215[ebp], edx
	jmp	SHORT $LN34@DoTestThre@2
$LN33@DoTestThre@2:
	mov	DWORD PTR tv215[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN34@DoTestThre@2:
	mov	eax, DWORD PTR tv215[ebp]
	push	eax
	mov	ecx, DWORD PTR $T238097[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	ecx, DWORD PTR $T238097[ebp]
	mov	DWORD PTR tv190[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z ; CvMinorCivAI::AddNotification

; 2648 : 					}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$222586[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strMessage$222582[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN6@DoTestThre@2:

; 2649 : 				}
; 2650 : 			}
; 2651 : 		}
; 2652 : 	}
; 2653 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoTestThreatenedAnnouncementForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$0:
	lea	ecx, DWORD PTR _strMessage$222582[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoTestThreatenedAnnouncementForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$1:
	lea	ecx, DWORD PTR _strSummary$222586[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoTestThreatenedAnnouncementForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$2:
	mov	ecx, DWORD PTR $T238043[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?DoTestThreatenedAnnouncementForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoTestThreatenedAnnouncementForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoTestThreatenedAnnouncementForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::DoTestThreatenedAnnouncementForPlayer
PUBLIC	?plotDistance@@YAHHHHH@Z			; plotDistance
EXTRN	?getArea@CvCity@@QBEHXZ:PROC			; CvCity::getArea
; Function compile flags: /Odtp
;	COMDAT ?IsPlayerCloseEnoughForThreatenedAnnouncement@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -120						; size = 4
$T238227 = -116						; size = 4
$T238146 = -36						; size = 4
$T238137 = -32						; size = 4
$T238128 = -28						; size = 4
$T238119 = -24						; size = 4
$T238110 = -20						; size = 4
_iDistance$222604 = -16					; size = 4
_pMajorsCapital$222600 = -12				; size = 4
_bCloseEnoughForQuest$222599 = -5			; size = 1
_pCapital$ = -4						; size = 4
_eMajor$ = 8						; size = 4
?IsPlayerCloseEnoughForThreatenedAnnouncement@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::IsPlayerCloseEnoughForThreatenedAnnouncement, COMDAT
; _this$ = ecx

; 2657 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 120				; 00000078H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 2658 : 	CvCity* pCapital = GetPlayer()->getCapitalCity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pCapital$[ebp], eax

; 2659 : 
; 2660 : 	// Minor must have Capital
; 2661 : 	if(pCapital == NULL)

	cmp	DWORD PTR _pCapital$[ebp], 0
	jne	SHORT $LN6@IsPlayerCl

; 2662 : 	{
; 2663 : 		return false;

	xor	al, al
	jmp	$LN7@IsPlayerCl
$LN6@IsPlayerCl:

; 2664 : 	}
; 2665 : 
; 2666 : 	// Has Minor met this player yet?
; 2667 : 	if(IsHasMetPlayer(eMajor))

	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsHasMetPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsHasMetPlayer
	movzx	ecx, al
	test	ecx, ecx
	je	$LN5@IsPlayerCl

; 2668 : 	{
; 2669 : 		bool bCloseEnoughForQuest = false;

	mov	BYTE PTR _bCloseEnoughForQuest$222599[ebp], 0

; 2670 : 
; 2671 : 		CvCity* pMajorsCapital = GET_PLAYER(eMajor).getCapitalCity();

	mov	edx, DWORD PTR _eMajor$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T238110[ebp], edx
	mov	ecx, DWORD PTR $T238110[ebp]
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pMajorsCapital$222600[ebp], eax

; 2672 : 
; 2673 : 		if(pMajorsCapital != NULL)

	cmp	DWORD PTR _pMajorsCapital$222600[ebp], 0
	je	SHORT $LN5@IsPlayerCl

; 2674 : 		{
; 2675 : 			if(pCapital->getArea() == pMajorsCapital->getArea())

	mov	ecx, DWORD PTR _pCapital$[ebp]
	call	?getArea@CvCity@@QBEHXZ			; CvCity::getArea
	mov	esi, eax
	mov	ecx, DWORD PTR _pMajorsCapital$222600[ebp]
	call	?getArea@CvCity@@QBEHXZ			; CvCity::getArea
	cmp	esi, eax
	jne	SHORT $LN3@IsPlayerCl

; 2676 : 			{
; 2677 : 				return true;

	mov	al, 1
	jmp	SHORT $LN7@IsPlayerCl
$LN3@IsPlayerCl:

; 2678 : 			}
; 2679 : 
; 2680 : 			if(!bCloseEnoughForQuest)

	movzx	eax, BYTE PTR _bCloseEnoughForQuest$222599[ebp]
	test	eax, eax
	jne	SHORT $LN5@IsPlayerCl

; 2681 : 			{
; 2682 : 				int iDistance = plotDistance(pCapital->getX(), pCapital->getY(), pMajorsCapital->getX(), pMajorsCapital->getY());

	mov	ecx, DWORD PTR _pMajorsCapital$222600[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR $T238119[ebp], edx
	mov	eax, DWORD PTR _pMajorsCapital$222600[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T238128[ebp], ecx
	mov	edx, DWORD PTR _pCapital$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR $T238137[ebp], eax
	mov	ecx, DWORD PTR _pCapital$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR $T238146[ebp], edx
	mov	eax, DWORD PTR $T238119[ebp]
	push	eax
	mov	ecx, DWORD PTR $T238128[ebp]
	push	ecx
	mov	edx, DWORD PTR $T238137[ebp]
	push	edx
	mov	eax, DWORD PTR $T238146[ebp]
	push	eax
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H
	mov	DWORD PTR _iDistance$222604[ebp], eax

; 2683 : 
; 2684 : 				if(iDistance <= /*50*/ GC.getMAX_DISTANCE_MINORS_BARB_QUEST())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3040
	mov	DWORD PTR $T238227[ebp], ecx
	mov	edx, DWORD PTR _iDistance$222604[ebp]
	cmp	edx, DWORD PTR $T238227[ebp]
	jg	SHORT $LN5@IsPlayerCl

; 2685 : 				{
; 2686 : 					return true;

	mov	al, 1
	jmp	SHORT $LN7@IsPlayerCl
$LN5@IsPlayerCl:

; 2687 : 				}
; 2688 : 			}
; 2689 : 		}
; 2690 : 	}
; 2691 : 
; 2692 : 	return false;

	xor	al, al
$LN7@IsPlayerCl:

; 2693 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?IsPlayerCloseEnoughForThreatenedAnnouncement@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::IsPlayerCloseEnoughForThreatenedAnnouncement
_TEXT	ENDS
PUBLIC	?dyWrap@@YAHH@Z					; dyWrap
PUBLIC	?dxWrap@@YAHH@Z					; dxWrap
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
;	COMDAT ?plotDistance@@YAHHHHH@Z
_TEXT	SEGMENT
tv157 = -92						; size = 4
tv138 = -88						; size = 4
tv135 = -84						; size = 4
$T238311 = -80						; size = 4
$T238284 = -60						; size = 4
_iDY$ = -24						; size = 4
_iDX$ = -20						; size = 4
_iWrappedDX$ = -16					; size = 4
_iHX1$ = -12						; size = 4
_iHX2$ = -8						; size = 4
_iWrappedDY$ = -4					; size = 4
_iX1$ = 8						; size = 4
_iY1$ = 12						; size = 4
_iX2$ = 16						; size = 4
_iY2$ = 20						; size = 4
?plotDistance@@YAHHHHH@Z PROC				; plotDistance, COMDAT

; 144  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH

; 145  : 	int iDX;
; 146  : 	int iWrappedDX = dxWrap(iX2 - iX1);

	mov	eax, DWORD PTR _iX2$[ebp]
	sub	eax, DWORD PTR _iX1$[ebp]
	push	eax
	call	?dxWrap@@YAHH@Z				; dxWrap
	add	esp, 4
	mov	DWORD PTR _iWrappedDX$[ebp], eax

; 147  : 	int iWrappedDY = dyWrap(iY2 - iY1);

	mov	ecx, DWORD PTR _iY2$[ebp]
	sub	ecx, DWORD PTR _iY1$[ebp]
	push	ecx
	call	?dyWrap@@YAHH@Z				; dyWrap
	add	esp, 4
	mov	DWORD PTR _iWrappedDY$[ebp], eax

; 148  : 	int iDY = abs(iWrappedDY);

	mov	eax, DWORD PTR _iWrappedDY$[ebp]
	cdq
	xor	eax, edx
	sub	eax, edx
	mov	DWORD PTR _iDY$[ebp], eax

; 149  : 
; 150  : 	// convert to hex-space coordinates - the coordinate system axes are E and NE (not orthogonal)
; 151  : 	int iHX1 = xToHexspaceX(iX1, iY1);

	cmp	DWORD PTR _iY1$[ebp], 0
	jl	SHORT $LN35@plotDistan
	mov	edx, DWORD PTR _iY1$[ebp]
	sar	edx, 1
	mov	DWORD PTR tv135[ebp], edx
	jmp	SHORT $LN33@plotDistan
$LN35@plotDistan:
	mov	eax, DWORD PTR _iY1$[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR tv135[ebp], eax
$LN33@plotDistan:
	mov	eax, DWORD PTR _iX1$[ebp]
	sub	eax, DWORD PTR tv135[ebp]
	mov	DWORD PTR _iHX1$[ebp], eax

; 152  : 	int iHX2 = xToHexspaceX(iX1 + iWrappedDX, iY1 + iWrappedDY);

	mov	ecx, DWORD PTR _iY1$[ebp]
	add	ecx, DWORD PTR _iWrappedDY$[ebp]
	mov	DWORD PTR $T238284[ebp], ecx
	js	SHORT $LN39@plotDistan
	mov	edx, DWORD PTR $T238284[ebp]
	sar	edx, 1
	mov	DWORD PTR tv138[ebp], edx
	jmp	SHORT $LN37@plotDistan
$LN39@plotDistan:
	mov	eax, DWORD PTR $T238284[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR tv138[ebp], eax
$LN37@plotDistan:
	mov	eax, DWORD PTR _iX1$[ebp]
	add	eax, DWORD PTR _iWrappedDX$[ebp]
	sub	eax, DWORD PTR tv138[ebp]
	mov	DWORD PTR _iHX2$[ebp], eax

; 153  : 
; 154  : 	iDX = abs(dxWrap(iHX2 - iHX1));

	mov	ecx, DWORD PTR _iHX2$[ebp]
	sub	ecx, DWORD PTR _iHX1$[ebp]
	push	ecx
	call	?dxWrap@@YAHH@Z				; dxWrap
	add	esp, 4
	cdq
	xor	eax, edx
	sub	eax, edx
	mov	DWORD PTR _iDX$[ebp], eax

; 155  : 
; 156  : #ifdef NQM_GAME_CORE_UTILS_OPTIMIZATIONS
; 157  : 	if (((iHX2 - iHX1) ^ (iWrappedDY)) >= 0)  // the signs match
; 158  : #else
; 159  : 	if((iHX2 - iHX1 >= 0) == (iWrappedDY >= 0))  // the signs match

	mov	edx, DWORD PTR _iHX2$[ebp]
	sub	edx, DWORD PTR _iHX1$[ebp]
	xor	eax, eax
	test	edx, edx
	setge	al
	xor	ecx, ecx
	cmp	DWORD PTR _iWrappedDY$[ebp], 0
	setge	cl
	cmp	eax, ecx
	jne	SHORT $LN2@plotDistan

; 160  : #endif
; 161  : 	{
; 162  : 		return iDX + iDY;

	mov	eax, DWORD PTR _iDX$[ebp]
	add	eax, DWORD PTR _iDY$[ebp]
	jmp	SHORT $LN3@plotDistan

; 163  : 	}
; 164  : 	else

	jmp	SHORT $LN3@plotDistan
$LN2@plotDistan:

; 165  : 	{
; 166  : #ifdef NQM_FAST_COMP
; 167  : 		return (MAX(iDX, iDY));
; 168  : #else
; 169  : 		return (std::max(iDX, iDY));

	mov	edx, DWORD PTR _iDX$[ebp]
	cmp	edx, DWORD PTR _iDY$[ebp]
	jge	SHORT $LN57@plotDistan
	lea	eax, DWORD PTR _iDY$[ebp]
	mov	DWORD PTR tv157[ebp], eax
	jmp	SHORT $LN58@plotDistan
$LN57@plotDistan:
	lea	ecx, DWORD PTR _iDX$[ebp]
	mov	DWORD PTR tv157[ebp], ecx
$LN58@plotDistan:
	mov	edx, DWORD PTR tv157[ebp]
	mov	DWORD PTR $T238311[ebp], edx
	mov	eax, DWORD PTR $T238311[ebp]
	mov	eax, DWORD PTR [eax]
$LN3@plotDistan:

; 170  : #endif
; 171  : 	}
; 172  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?plotDistance@@YAHHHHH@Z ENDP				; plotDistance
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?dxWrap@@YAHH@Z
_TEXT	SEGMENT
$T238334 = -16						; size = 4
$T238326 = -12						; size = 4
$T238322 = -5						; size = 1
_kMap$ = -4						; size = 4
_iDX$ = 8						; size = 4
?dxWrap@@YAHH@Z PROC					; dxWrap, COMDAT

; 73   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 74   : 	const CvMap& kMap = GC.getMap();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR _kMap$[ebp], eax

; 75   : 	return wrapCoordDifference(iDX, kMap.getGridWidth(), kMap.isWrapX());

	mov	ecx, DWORD PTR _kMap$[ebp]
	mov	dl, BYTE PTR [ecx+4056]
	mov	BYTE PTR $T238322[ebp], dl
	mov	eax, DWORD PTR _kMap$[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T238326[ebp], ecx
	movzx	edx, BYTE PTR $T238322[ebp]
	test	edx, edx
	je	SHORT $LN12@dxWrap
	mov	eax, DWORD PTR $T238326[ebp]
	shr	eax, 1
	cmp	DWORD PTR _iDX$[ebp], eax
	jle	SHORT $LN11@dxWrap
	mov	ecx, DWORD PTR _iDX$[ebp]
	sub	ecx, DWORD PTR $T238326[ebp]
	mov	DWORD PTR $T238334[ebp], ecx
	jmp	SHORT $LN13@dxWrap
	jmp	SHORT $LN12@dxWrap
$LN11@dxWrap:
	mov	edx, DWORD PTR $T238326[ebp]
	shr	edx, 1
	neg	edx
	cmp	DWORD PTR _iDX$[ebp], edx
	jge	SHORT $LN12@dxWrap
	mov	eax, DWORD PTR _iDX$[ebp]
	add	eax, DWORD PTR $T238326[ebp]
	mov	DWORD PTR $T238334[ebp], eax
	jmp	SHORT $LN13@dxWrap
$LN12@dxWrap:
	mov	ecx, DWORD PTR _iDX$[ebp]
	mov	DWORD PTR $T238334[ebp], ecx
$LN13@dxWrap:
	mov	eax, DWORD PTR $T238334[ebp]

; 76   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?dxWrap@@YAHH@Z ENDP					; dxWrap
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?dyWrap@@YAHH@Z
_TEXT	SEGMENT
$T238355 = -16						; size = 4
$T238347 = -12						; size = 4
$T238343 = -5						; size = 1
_kMap$ = -4						; size = 4
_iDY$ = 8						; size = 4
?dyWrap@@YAHH@Z PROC					; dyWrap, COMDAT

; 79   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 80   : 	const CvMap& kMap = GC.getMap();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR _kMap$[ebp], eax

; 81   : 	return wrapCoordDifference(iDY, kMap.getGridHeight(), kMap.isWrapY());

	mov	ecx, DWORD PTR _kMap$[ebp]
	mov	dl, BYTE PTR [ecx+4057]
	mov	BYTE PTR $T238343[ebp], dl
	mov	eax, DWORD PTR _kMap$[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T238347[ebp], ecx
	movzx	edx, BYTE PTR $T238343[ebp]
	test	edx, edx
	je	SHORT $LN12@dyWrap
	mov	eax, DWORD PTR $T238347[ebp]
	shr	eax, 1
	cmp	DWORD PTR _iDY$[ebp], eax
	jle	SHORT $LN11@dyWrap
	mov	ecx, DWORD PTR _iDY$[ebp]
	sub	ecx, DWORD PTR $T238347[ebp]
	mov	DWORD PTR $T238355[ebp], ecx
	jmp	SHORT $LN13@dyWrap
	jmp	SHORT $LN12@dyWrap
$LN11@dyWrap:
	mov	edx, DWORD PTR $T238347[ebp]
	shr	edx, 1
	neg	edx
	cmp	DWORD PTR _iDY$[ebp], edx
	jge	SHORT $LN12@dyWrap
	mov	eax, DWORD PTR _iDY$[ebp]
	add	eax, DWORD PTR $T238347[ebp]
	mov	DWORD PTR $T238355[ebp], eax
	jmp	SHORT $LN13@dyWrap
$LN12@dyWrap:
	mov	ecx, DWORD PTR _iDY$[ebp]
	mov	DWORD PTR $T238355[ebp], ecx
$LN13@dyWrap:
	mov	eax, DWORD PTR $T238355[ebp]

; 82   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?dyWrap@@YAHH@Z ENDP					; dyWrap
_TEXT	ENDS
PUBLIC	??_C@_0CK@EEGMBKKF@TXT_KEY_NOTIFICATION_SM_MINOR_BA@ ; `string'
PUBLIC	??_C@_0CH@PNEMCJLA@TXT_KEY_NOTIFICATION_MINOR_BARB_@ ; `string'
PUBLIC	?ChangeAngerFreeIntrusionCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::ChangeAngerFreeIntrusionCounter
PUBLIC	?DoThreateningBarbKilled@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z ; CvMinorCivAI::DoThreateningBarbKilled
;	COMDAT ??_C@_0CK@EEGMBKKF@TXT_KEY_NOTIFICATION_SM_MINOR_BA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0CK@EEGMBKKF@TXT_KEY_NOTIFICATION_SM_MINOR_BA@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SM_MINOR_BARB_KILLED', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@PNEMCJLA@TXT_KEY_NOTIFICATION_MINOR_BARB_@
CONST	SEGMENT
??_C@_0CH@PNEMCJLA@TXT_KEY_NOTIFICATION_MINOR_BARB_@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_BARB_KILLED', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DoThreateningBarbKilled@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoThreateningBarbKilled@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DoThreateningBarbKilled@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?DoThreateningBarbKilled@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z$2
__ehfuncinfo$?DoThreateningBarbKilled@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?DoThreateningBarbKilled@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoThreateningBarbKilled@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z
_TEXT	SEGMENT
tv174 = -228						; size = 4
tv195 = -224						; size = 4
tv171 = -220						; size = 4
tv182 = -216						; size = 4
_this$ = -212						; size = 4
$T238389 = -208						; size = 4
$T238388 = -204						; size = 4
$T238379 = -200						; size = 4
$T238378 = -196						; size = 4
$T238369 = -192						; size = 4
$T238361 = -188						; size = 4
$T238360 = -184						; size = 4
$T238359 = -180						; size = 4
$T238358 = -176						; size = 4
_strMessage$222613 = -172				; size = 80
_strSummary$222617 = -92				; size = 80
__$EHRec$ = -12						; size = 12
_eKillingPlayer$ = 8					; size = 4
_iX$ = 12						; size = 4
_iY$ = 16						; size = 4
?DoThreateningBarbKilled@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z PROC ; CvMinorCivAI::DoThreateningBarbKilled, COMDAT
; _this$ = ecx

; 2698 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoThreateningBarbKilled@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2699 : 	CvAssertMsg(eKillingPlayer >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 2700 : 	CvAssertMsg(eKillingPlayer < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 2701 : 
; 2702 : 	if (IsThreateningBarbariansEventActiveForPlayer(eKillingPlayer))

	mov	eax, DWORD PTR _eKillingPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsThreateningBarbariansEventActiveForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsThreateningBarbariansEventActiveForPlayer
	movzx	ecx, al
	test	ecx, ecx
	je	$LN2@DoThreaten

; 2703 : 	{
; 2704 : 		ChangeFriendshipWithMajor(eKillingPlayer, /*12*/ GC.getFRIENDSHIP_PER_BARB_KILLED());

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3164
	mov	DWORD PTR $T238369[ebp], edx
	push	0
	mov	eax, DWORD PTR $T238369[ebp]
	push	eax
	mov	ecx, DWORD PTR _eKillingPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::ChangeFriendshipWithMajor

; 2705 : 
; 2706 : 		ChangeAngerFreeIntrusionCounter(eKillingPlayer, 5);

	push	5
	mov	edx, DWORD PTR _eKillingPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeAngerFreeIntrusionCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::ChangeAngerFreeIntrusionCounter

; 2707 : 
; 2708 : 		Localization::String strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_BARB_KILLED");

	push	OFFSET ??_C@_0CH@PNEMCJLA@TXT_KEY_NOTIFICATION_MINOR_BARB_@
	lea	eax, DWORD PTR _strMessage$222613[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2709 : 		strMessage << GetPlayer()->getNameKey();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T238358[ebp], eax
	lea	ecx, DWORD PTR $T238358[ebp]
	push	ecx
	lea	edx, DWORD PTR _strMessage$222613[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 2710 : 		Localization::String strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SM_MINOR_BARB_KILLED");

	push	OFFSET ??_C@_0CK@EEGMBKKF@TXT_KEY_NOTIFICATION_SM_MINOR_BA@
	lea	eax, DWORD PTR _strSummary$222617[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2711 : 		strSummary << GetPlayer()->getNameKey();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T238359[ebp], eax
	lea	ecx, DWORD PTR $T238359[ebp]
	push	ecx
	lea	edx, DWORD PTR _strSummary$222617[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 2712 : 
; 2713 : 		AddNotification(strMessage.toUTF8(), strSummary.toUTF8(), eKillingPlayer, iX, iY);

	mov	eax, DWORD PTR _iY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iX$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eKillingPlayer$[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$222617[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T238379[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T238360[ebp], esp
	mov	DWORD PTR $T238378[ebp], eax
	cmp	DWORD PTR $T238379[ebp], 0
	je	SHORT $LN12@DoThreaten
	mov	ecx, DWORD PTR $T238379[ebp]
	mov	DWORD PTR tv182[ebp], ecx
	jmp	SHORT $LN13@DoThreaten
$LN12@DoThreaten:
	mov	DWORD PTR tv182[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN13@DoThreaten:
	mov	edx, DWORD PTR tv182[ebp]
	push	edx
	mov	ecx, DWORD PTR $T238378[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR $T238378[ebp]
	mov	DWORD PTR tv171[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _strMessage$222613[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T238389[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T238361[ebp], esp
	mov	DWORD PTR $T238388[ebp], ecx
	cmp	DWORD PTR $T238389[ebp], 0
	je	SHORT $LN17@DoThreaten
	mov	edx, DWORD PTR $T238389[ebp]
	mov	DWORD PTR tv195[ebp], edx
	jmp	SHORT $LN18@DoThreaten
$LN17@DoThreaten:
	mov	DWORD PTR tv195[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN18@DoThreaten:
	mov	eax, DWORD PTR tv195[ebp]
	push	eax
	mov	ecx, DWORD PTR $T238388[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	ecx, DWORD PTR $T238388[ebp]
	mov	DWORD PTR tv174[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z ; CvMinorCivAI::AddNotification

; 2714 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$222617[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strMessage$222613[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN2@DoThreaten:

; 2715 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoThreateningBarbKilled@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z$0:
	lea	ecx, DWORD PTR _strMessage$222613[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoThreateningBarbKilled@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z$1:
	lea	ecx, DWORD PTR _strSummary$222617[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoThreateningBarbKilled@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z$2:
	mov	ecx, DWORD PTR $T238360[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?DoThreateningBarbKilled@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoThreateningBarbKilled@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoThreateningBarbKilled@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z ENDP ; CvMinorCivAI::DoThreateningBarbKilled
PUBLIC	??_C@_0DB@IEJKBAFG@TXT_KEY_NOTIFICATION_SUMMARY_MIN@ ; `string'
PUBLIC	??_C@_0CJ@CONFONGL@TXT_KEY_NOTIFICATION_MINOR_WAR_U@ ; `string'
PUBLIC	?IsProxyWarActiveForMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@0@Z ; CvMinorCivAI::IsProxyWarActiveForMajor
EXTRN	?GetNumTurnsAtWar@CvTeam@@QBEHW4TeamTypes@@@Z:PROC ; CvTeam::GetNumTurnsAtWar
EXTRN	?getLeaderID@CvTeam@@QBE?AW4PlayerTypes@@XZ:PROC ; CvTeam::getLeaderID
EXTRN	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC	; CvTeam::isHasMet
;	COMDAT ??_C@_0DB@IEJKBAFG@TXT_KEY_NOTIFICATION_SUMMARY_MIN@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0DB@IEJKBAFG@TXT_KEY_NOTIFICATION_SUMMARY_MIN@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_MINOR_WAR_UNIT_HELP', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@CONFONGL@TXT_KEY_NOTIFICATION_MINOR_WAR_U@
CONST	SEGMENT
??_C@_0CJ@CONFONGL@TXT_KEY_NOTIFICATION_MINOR_WAR_U@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_WAR_UNIT_HELP', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DoTestProxyWarAnnouncement@CvMinorCivAI@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoTestProxyWarAnnouncement@CvMinorCivAI@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DoTestProxyWarAnnouncement@CvMinorCivAI@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?DoTestProxyWarAnnouncement@CvMinorCivAI@@QAEXXZ$2
__ehfuncinfo$?DoTestProxyWarAnnouncement@CvMinorCivAI@@QAEXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?DoTestProxyWarAnnouncement@CvMinorCivAI@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoTestProxyWarAnnouncement@CvMinorCivAI@@QAEXXZ
_TEXT	SEGMENT
tv226 = -296						; size = 4
tv271 = -292						; size = 4
tv223 = -288						; size = 4
tv258 = -284						; size = 4
_this$ = -280						; size = 4
$T238483 = -276						; size = 4
$T238482 = -272						; size = 4
$T238473 = -268						; size = 4
$T238472 = -264						; size = 4
$T238463 = -260						; size = 4
$T238459 = -256						; size = 4
$T238458 = -252						; size = 4
$T238446 = -248						; size = 4
$T238431 = -244						; size = 4
$T238430 = -240						; size = 4
$T238418 = -236						; size = 4
$T238402 = -232						; size = 4
$T238401 = -228						; size = 4
$T238400 = -224						; size = 4
$T238399 = -220						; size = 4
$T238398 = -216						; size = 4
_strMessage$222648 = -212				; size = 80
_strSummary$222653 = -132				; size = 80
_eEnemyTeam$222644 = -52				; size = 4
_eEnemyTeamLeader$222645 = -48				; size = 4
_pEnemyTeamLeader$222646 = -44				; size = 4
_pOtherMajor$222642 = -40				; size = 4
_eOtherMajor$222639 = -36				; size = 4
_i$222635 = -32						; size = 4
_eNotifyPlayer$222630 = -28				; size = 4
_pNotifyTeam$222633 = -24				; size = 4
_kCurNotifyPlayer$222632 = -20				; size = 4
_iNotifyLoop$222626 = -16				; size = 4
__$EHRec$ = -12						; size = 12
?DoTestProxyWarAnnouncement@CvMinorCivAI@@QAEXXZ PROC	; CvMinorCivAI::DoTestProxyWarAnnouncement, COMDAT
; _this$ = ecx

; 2724 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoTestProxyWarAnnouncement@CvMinorCivAI@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 284				; 0000011cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2725 : 	for(int iNotifyLoop = 0; iNotifyLoop < MAX_MAJOR_CIVS; ++iNotifyLoop){

	mov	DWORD PTR _iNotifyLoop$222626[ebp], 0
	jmp	SHORT $LN10@DoTestProx
$LN9@DoTestProx:
	mov	eax, DWORD PTR _iNotifyLoop$222626[ebp]
	add	eax, 1
	mov	DWORD PTR _iNotifyLoop$222626[ebp], eax
$LN10@DoTestProx:
	cmp	DWORD PTR _iNotifyLoop$222626[ebp], 22	; 00000016H
	jge	$LN11@DoTestProx

; 2726 : 		PlayerTypes eNotifyPlayer = (PlayerTypes) iNotifyLoop;

	mov	ecx, DWORD PTR _iNotifyLoop$222626[ebp]
	mov	DWORD PTR _eNotifyPlayer$222630[ebp], ecx

; 2727 : 		CvPlayerAI& kCurNotifyPlayer = GET_PLAYER(eNotifyPlayer);

	mov	edx, DWORD PTR _eNotifyPlayer$222630[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kCurNotifyPlayer$222632[ebp], edx

; 2728 : 		CvTeam* pNotifyTeam = &GET_TEAM(kCurNotifyPlayer.getTeam());

	mov	eax, DWORD PTR _kCurNotifyPlayer$222632[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T238418[ebp], eax
	mov	edx, DWORD PTR $T238418[ebp]
	imul	edx, 2984				; 00000ba8H
	add	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _pNotifyTeam$222633[ebp], edx

; 2729 : 		if (!pNotifyTeam->isHasMet(GetPlayer()->getTeam()))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T238430[ebp], eax
	mov	eax, DWORD PTR $T238430[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T238431[ebp], eax
	mov	edx, DWORD PTR $T238431[ebp]
	push	edx
	mov	ecx, DWORD PTR _pNotifyTeam$222633[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN7@DoTestProx

; 2730 : 		{
; 2731 : 			continue;

	jmp	$LN9@DoTestProx
$LN7@DoTestProx:

; 2732 : 		}
; 2733 : 
; 2734 : 		for (int i = 0; i < MAX_MAJOR_CIVS; i++)

	mov	DWORD PTR _i$222635[ebp], 0
	jmp	SHORT $LN6@DoTestProx
$LN5@DoTestProx:
	mov	ecx, DWORD PTR _i$222635[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$222635[ebp], ecx
$LN6@DoTestProx:
	cmp	DWORD PTR _i$222635[ebp], 22		; 00000016H
	jge	$LN4@DoTestProx

; 2735 : 		{
; 2736 : 			PlayerTypes eOtherMajor = (PlayerTypes) i;

	mov	edx, DWORD PTR _i$222635[ebp]
	mov	DWORD PTR _eOtherMajor$222639[ebp], edx

; 2737 : 			if (IsProxyWarActiveForMajor(eNotifyPlayer, eOtherMajor))

	mov	eax, DWORD PTR _eOtherMajor$222639[ebp]
	push	eax
	mov	ecx, DWORD PTR _eNotifyPlayer$222630[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsProxyWarActiveForMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@0@Z ; CvMinorCivAI::IsProxyWarActiveForMajor
	movzx	edx, al
	test	edx, edx
	je	$LN3@DoTestProx

; 2738 : 			{
; 2739 : 				CvPlayer* pOtherMajor = &GET_PLAYER(eOtherMajor);

	mov	eax, DWORD PTR _eOtherMajor$222639[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pOtherMajor$222642[ebp], eax

; 2740 : 				CvAssertMsg(pOtherMajor, "Error sending out proxy war notification from a city-state. Please send Anton your save file and version.");
; 2741 : 				if (pOtherMajor)

	je	$LN3@DoTestProx

; 2742 : 				{
; 2743 : 					TeamTypes eEnemyTeam = pOtherMajor->getTeam();

	mov	ecx, DWORD PTR _pOtherMajor$222642[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR _eEnemyTeam$222644[ebp], eax

; 2744 : 					PlayerTypes eEnemyTeamLeader = GET_TEAM(eEnemyTeam).getLeaderID();

	mov	eax, DWORD PTR _eEnemyTeam$222644[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T238446[ebp], eax
	mov	ecx, DWORD PTR $T238446[ebp]
	call	?getLeaderID@CvTeam@@QBE?AW4PlayerTypes@@XZ ; CvTeam::getLeaderID
	mov	DWORD PTR _eEnemyTeamLeader$222645[ebp], eax

; 2745 : 					CvPlayer* pEnemyTeamLeader = &GET_PLAYER(eEnemyTeamLeader);

	mov	ecx, DWORD PTR _eEnemyTeamLeader$222645[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pEnemyTeamLeader$222646[ebp], ecx

; 2746 : 					CvAssert(pEnemyTeamLeader);
; 2747 : 					if (pEnemyTeamLeader && GET_TEAM(GetPlayer()->getTeam()).GetNumTurnsAtWar(eEnemyTeam) == 1)

	je	$LN3@DoTestProx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T238458[ebp], eax
	mov	edx, DWORD PTR $T238458[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T238459[ebp], eax
	mov	ecx, DWORD PTR $T238459[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T238463[ebp], ecx
	mov	edx, DWORD PTR _eEnemyTeam$222644[ebp]
	push	edx
	mov	ecx, DWORD PTR $T238463[ebp]
	call	?GetNumTurnsAtWar@CvTeam@@QBEHW4TeamTypes@@@Z ; CvTeam::GetNumTurnsAtWar
	cmp	eax, 1
	jne	$LN3@DoTestProx

; 2748 : 					{
; 2749 : 						Localization::String strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_WAR_UNIT_HELP");

	push	OFFSET ??_C@_0CJ@CONFONGL@TXT_KEY_NOTIFICATION_MINOR_WAR_U@
	lea	eax, DWORD PTR _strMessage$222648[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2750 : 						strMessage << GetPlayer()->getCivilizationShortDescriptionKey() << pEnemyTeamLeader->getCivilizationShortDescriptionKey();

	mov	ecx, DWORD PTR _pEnemyTeamLeader$222646[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR $T238398[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR $T238399[ebp], eax
	lea	ecx, DWORD PTR $T238398[ebp]
	push	ecx
	lea	edx, DWORD PTR $T238399[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$222648[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 2751 : 						Localization::String strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_MINOR_WAR_UNIT_HELP");

	push	OFFSET ??_C@_0DB@IEJKBAFG@TXT_KEY_NOTIFICATION_SUMMARY_MIN@
	lea	ecx, DWORD PTR _strSummary$222653[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2752 : 						strSummary << GetPlayer()->getCivilizationShortDescriptionKey();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR $T238400[ebp], eax
	lea	edx, DWORD PTR $T238400[ebp]
	push	edx
	lea	eax, DWORD PTR _strSummary$222653[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 2753 : 
; 2754 : 						AddQuestNotification(strMessage.toUTF8(), strSummary.toUTF8(), eNotifyPlayer);

	push	0
	push	-1
	push	-1
	mov	ecx, DWORD PTR _eNotifyPlayer$222630[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$222653[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T238473[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T238401[ebp], esp
	mov	DWORD PTR $T238472[ebp], edx
	cmp	DWORD PTR $T238473[ebp], 0
	je	SHORT $LN47@DoTestProx
	mov	eax, DWORD PTR $T238473[ebp]
	mov	DWORD PTR tv258[ebp], eax
	jmp	SHORT $LN48@DoTestProx
$LN47@DoTestProx:
	mov	DWORD PTR tv258[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN48@DoTestProx:
	mov	ecx, DWORD PTR tv258[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T238472[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	edx, DWORD PTR $T238472[ebp]
	mov	DWORD PTR tv223[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _strMessage$222648[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T238483[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T238402[ebp], esp
	mov	DWORD PTR $T238482[ebp], eax
	cmp	DWORD PTR $T238483[ebp], 0
	je	SHORT $LN52@DoTestProx
	mov	ecx, DWORD PTR $T238483[ebp]
	mov	DWORD PTR tv271[ebp], ecx
	jmp	SHORT $LN53@DoTestProx
$LN52@DoTestProx:
	mov	DWORD PTR tv271[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN53@DoTestProx:
	mov	edx, DWORD PTR tv271[ebp]
	push	edx
	mov	ecx, DWORD PTR $T238482[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR $T238482[ebp]
	mov	DWORD PTR tv226[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddQuestNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH_N@Z ; CvMinorCivAI::AddQuestNotification

; 2755 : 
; 2756 : 						break;

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$222653[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strMessage$222648[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	SHORT $LN4@DoTestProx
$LN3@DoTestProx:

; 2757 : 					}
; 2758 : 				}
; 2759 : 			}
; 2760 : 		}

	jmp	$LN5@DoTestProx
$LN4@DoTestProx:

; 2761 : 	}

	jmp	$LN9@DoTestProx
$LN11@DoTestProx:

; 2762 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoTestProxyWarAnnouncement@CvMinorCivAI@@QAEXXZ$0:
	lea	ecx, DWORD PTR _strMessage$222648[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoTestProxyWarAnnouncement@CvMinorCivAI@@QAEXXZ$1:
	lea	ecx, DWORD PTR _strSummary$222653[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoTestProxyWarAnnouncement@CvMinorCivAI@@QAEXXZ$2:
	mov	ecx, DWORD PTR $T238401[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?DoTestProxyWarAnnouncement@CvMinorCivAI@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-288]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoTestProxyWarAnnouncement@CvMinorCivAI@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoTestProxyWarAnnouncement@CvMinorCivAI@@QAEXXZ ENDP	; CvMinorCivAI::DoTestProxyWarAnnouncement
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?DoTestProxyWarAnnouncementOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoTestProxyWarAnnouncementOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DoTestProxyWarAnnouncementOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?DoTestProxyWarAnnouncementOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$2
__ehfuncinfo$?DoTestProxyWarAnnouncementOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?DoTestProxyWarAnnouncementOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoTestProxyWarAnnouncementOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
_TEXT	SEGMENT
tv195 = -256						; size = 4
tv225 = -252						; size = 4
tv192 = -248						; size = 4
tv212 = -244						; size = 4
_this$ = -240						; size = 4
$T238538 = -236						; size = 4
$T238537 = -232						; size = 4
$T238528 = -228						; size = 4
$T238527 = -224						; size = 4
$T238515 = -220						; size = 4
$T238496 = -216						; size = 4
$T238495 = -212						; size = 4
$T238494 = -208						; size = 4
$T238493 = -204						; size = 4
$T238492 = -200						; size = 4
_strMessage$222676 = -196				; size = 80
_strSummary$222680 = -116				; size = 80
_eEnemyTeam$222672 = -36				; size = 4
_eEnemyTeamLeader$222673 = -32				; size = 4
_pEnemyTeamLeader$222674 = -28				; size = 4
_pOtherMajor$222670 = -24				; size = 4
_eOtherMajor$222667 = -20				; size = 4
_i$222663 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_eMajor$ = 8						; size = 4
?DoTestProxyWarAnnouncementOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z PROC ; CvMinorCivAI::DoTestProxyWarAnnouncementOnFirstContact, COMDAT
; _this$ = ecx

; 2765 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoTestProxyWarAnnouncementOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2766 : 	for (int i = 0; i < MAX_MAJOR_CIVS; i++)

	mov	DWORD PTR _i$222663[ebp], 0
	jmp	SHORT $LN6@DoTestProx@2
$LN5@DoTestProx@2:
	mov	eax, DWORD PTR _i$222663[ebp]
	add	eax, 1
	mov	DWORD PTR _i$222663[ebp], eax
$LN6@DoTestProx@2:
	cmp	DWORD PTR _i$222663[ebp], 22		; 00000016H
	jge	$LN7@DoTestProx@2

; 2767 : 	{
; 2768 : 		PlayerTypes eOtherMajor = (PlayerTypes) i;

	mov	ecx, DWORD PTR _i$222663[ebp]
	mov	DWORD PTR _eOtherMajor$222667[ebp], ecx

; 2769 : 		if (IsProxyWarActiveForMajor(eMajor, eOtherMajor))

	mov	edx, DWORD PTR _eOtherMajor$222667[ebp]
	push	edx
	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsProxyWarActiveForMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@0@Z ; CvMinorCivAI::IsProxyWarActiveForMajor
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@DoTestProx@2

; 2770 : 		{
; 2771 : 			CvPlayer* pOtherMajor = &GET_PLAYER(eOtherMajor);

	mov	edx, DWORD PTR _eOtherMajor$222667[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pOtherMajor$222670[ebp], edx

; 2772 : 			CvAssertMsg(pOtherMajor, "Error sending out proxy war notification from a city-state. Please send Anton your save file and version.");
; 2773 : 			if (pOtherMajor)

	je	$LN3@DoTestProx@2

; 2774 : 			{
; 2775 : 				TeamTypes eEnemyTeam = pOtherMajor->getTeam();

	mov	eax, DWORD PTR _pOtherMajor$222670[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR _eEnemyTeam$222672[ebp], eax

; 2776 : 				PlayerTypes eEnemyTeamLeader = GET_TEAM(eEnemyTeam).getLeaderID();

	mov	edx, DWORD PTR _eEnemyTeam$222672[ebp]
	imul	edx, 2984				; 00000ba8H
	add	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T238515[ebp], edx
	mov	ecx, DWORD PTR $T238515[ebp]
	call	?getLeaderID@CvTeam@@QBE?AW4PlayerTypes@@XZ ; CvTeam::getLeaderID
	mov	DWORD PTR _eEnemyTeamLeader$222673[ebp], eax

; 2777 : 				CvPlayer* pEnemyTeamLeader = &GET_PLAYER(eEnemyTeamLeader);

	mov	eax, DWORD PTR _eEnemyTeamLeader$222673[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pEnemyTeamLeader$222674[ebp], eax

; 2778 : 				CvAssert(pEnemyTeamLeader);
; 2779 : 				if (pEnemyTeamLeader)

	je	$LN3@DoTestProx@2

; 2780 : 				{
; 2781 : 					Localization::String strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_WAR_UNIT_HELP");

	push	OFFSET ??_C@_0CJ@CONFONGL@TXT_KEY_NOTIFICATION_MINOR_WAR_U@
	lea	ecx, DWORD PTR _strMessage$222676[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2782 : 					strMessage << GetPlayer()->getCivilizationShortDescriptionKey() << pEnemyTeamLeader->getCivilizationShortDescriptionKey();

	mov	ecx, DWORD PTR _pEnemyTeamLeader$222674[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR $T238492[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR $T238493[ebp], eax
	lea	edx, DWORD PTR $T238492[ebp]
	push	edx
	lea	eax, DWORD PTR $T238493[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$222676[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 2783 : 					Localization::String strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_MINOR_WAR_UNIT_HELP");

	push	OFFSET ??_C@_0DB@IEJKBAFG@TXT_KEY_NOTIFICATION_SUMMARY_MIN@
	lea	edx, DWORD PTR _strSummary$222680[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2784 : 					strSummary << GetPlayer()->getCivilizationShortDescriptionKey();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR $T238494[ebp], eax
	lea	eax, DWORD PTR $T238494[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$222680[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 2785 : 
; 2786 : 					AddQuestNotification(strMessage.toUTF8(), strSummary.toUTF8(), eMajor);

	push	0
	push	-1
	push	-1
	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$222680[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T238528[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T238495[ebp], esp
	mov	DWORD PTR $T238527[ebp], eax
	cmp	DWORD PTR $T238528[ebp], 0
	je	SHORT $LN25@DoTestProx@2
	mov	ecx, DWORD PTR $T238528[ebp]
	mov	DWORD PTR tv212[ebp], ecx
	jmp	SHORT $LN26@DoTestProx@2
$LN25@DoTestProx@2:
	mov	DWORD PTR tv212[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN26@DoTestProx@2:
	mov	edx, DWORD PTR tv212[ebp]
	push	edx
	mov	ecx, DWORD PTR $T238527[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR $T238527[ebp]
	mov	DWORD PTR tv192[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _strMessage$222676[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T238538[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T238496[ebp], esp
	mov	DWORD PTR $T238537[ebp], ecx
	cmp	DWORD PTR $T238538[ebp], 0
	je	SHORT $LN30@DoTestProx@2
	mov	edx, DWORD PTR $T238538[ebp]
	mov	DWORD PTR tv225[ebp], edx
	jmp	SHORT $LN31@DoTestProx@2
$LN30@DoTestProx@2:
	mov	DWORD PTR tv225[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN31@DoTestProx@2:
	mov	eax, DWORD PTR tv225[ebp]
	push	eax
	mov	ecx, DWORD PTR $T238537[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	ecx, DWORD PTR $T238537[ebp]
	mov	DWORD PTR tv195[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddQuestNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH_N@Z ; CvMinorCivAI::AddQuestNotification

; 2787 : 
; 2788 : 					break;

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$222680[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strMessage$222676[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	SHORT $LN7@DoTestProx@2
$LN3@DoTestProx@2:

; 2789 : 				}
; 2790 : 			}
; 2791 : 		}

	jmp	$LN5@DoTestProx@2
$LN7@DoTestProx@2:

; 2792 : 	}
; 2793 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoTestProxyWarAnnouncementOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$0:
	lea	ecx, DWORD PTR _strMessage$222676[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoTestProxyWarAnnouncementOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$1:
	lea	ecx, DWORD PTR _strSummary$222680[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoTestProxyWarAnnouncementOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$2:
	mov	ecx, DWORD PTR $T238495[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?DoTestProxyWarAnnouncementOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoTestProxyWarAnnouncementOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoTestProxyWarAnnouncementOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::DoTestProxyWarAnnouncementOnFirstContact
; Function compile flags: /Odtp
;	COMDAT ?IsProxyWarActiveForMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@0@Z
_TEXT	SEGMENT
_this$ = -56						; size = 4
$T238617 = -49						; size = 1
$T238605 = -48						; size = 4
$T238601 = -41						; size = 1
$T238592 = -40						; size = 4
$T238588 = -36						; size = 4
$T238584 = -32						; size = 4
$T238575 = -28						; size = 4
$T238571 = -21						; size = 1
$T238562 = -20						; size = 4
$T238550 = -16						; size = 4
_eOtherTeamLeader$222695 = -12				; size = 4
_pOtherTeamLeader$222696 = -8				; size = 4
_eOtherTeam$222691 = -4					; size = 4
_eMajor$ = 8						; size = 4
_eOtherMajor$ = 12					; size = 4
?IsProxyWarActiveForMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@0@Z PROC ; CvMinorCivAI::IsProxyWarActiveForMajor, COMDAT
; _this$ = ecx

; 2796 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	mov	DWORD PTR _this$[ebp], ecx

; 2797 : 	CvAssert(eMajor >= 0 && eMajor < MAX_MAJOR_CIVS);
; 2798 : 	CvAssert(eOtherMajor >= 0 && eOtherMajor < MAX_MAJOR_CIVS);
; 2799 : 	if (eMajor != eOtherMajor && eMajor >= 0 && eMajor < MAX_MAJOR_CIVS && eOtherMajor >= 0 && eOtherMajor < MAX_MAJOR_CIVS)

	mov	eax, DWORD PTR _eMajor$[ebp]
	cmp	eax, DWORD PTR _eOtherMajor$[ebp]
	je	$LN5@IsProxyWar
	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	$LN5@IsProxyWar
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jge	$LN5@IsProxyWar
	cmp	DWORD PTR _eOtherMajor$[ebp], 0
	jl	$LN5@IsProxyWar
	cmp	DWORD PTR _eOtherMajor$[ebp], 22	; 00000016H
	jge	$LN5@IsProxyWar

; 2800 : 	{
; 2801 : 		TeamTypes eOtherTeam = GET_PLAYER(eOtherMajor).getTeam();

	mov	ecx, DWORD PTR _eOtherMajor$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T238550[ebp], ecx
	mov	edx, DWORD PTR $T238550[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR _eOtherTeam$222691[ebp], eax

; 2802 : 		CvAssert(eOtherTeam != NO_TEAM);
; 2803 : 		if (eOtherTeam != NO_TEAM)

	cmp	DWORD PTR _eOtherTeam$222691[ebp], -1
	je	$LN5@IsProxyWar

; 2804 : 		{
; 2805 : 			// eMajor is at peace with us and eOtherMajor
; 2806 : 			if (GET_PLAYER(eMajor).isAlive() && !IsAtWarWithPlayersTeam(eMajor) && !GET_TEAM(eOtherTeam).isAtWar(GET_PLAYER(eMajor).getTeam()))

	mov	ecx, DWORD PTR _eMajor$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T238562[ebp], ecx
	mov	edx, DWORD PTR $T238562[ebp]
	mov	al, BYTE PTR [edx+2256]
	mov	BYTE PTR $T238571[ebp], al
	movzx	ecx, BYTE PTR $T238571[ebp]
	test	ecx, ecx
	je	$LN5@IsProxyWar
	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAtWarWithPlayersTeam@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAtWarWithPlayersTeam
	movzx	eax, al
	test	eax, eax
	jne	$LN5@IsProxyWar
	mov	ecx, DWORD PTR _eMajor$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T238575[ebp], ecx
	mov	edx, DWORD PTR $T238575[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T238584[ebp], eax
	mov	ecx, DWORD PTR _eOtherTeam$222691[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T238588[ebp], ecx
	mov	edx, DWORD PTR $T238584[ebp]
	push	edx
	mov	ecx, DWORD PTR $T238588[ebp]
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	movzx	eax, al
	test	eax, eax
	jne	$LN5@IsProxyWar

; 2807 : 			{
; 2808 : 				// eOtherMajor is at war with us
; 2809 : 				if (GET_PLAYER(eOtherMajor).isAlive() && IsAtWarWithPlayersTeam(eOtherMajor) && !IsPeaceBlocked(eOtherTeam))

	mov	ecx, DWORD PTR _eOtherMajor$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T238592[ebp], ecx
	mov	edx, DWORD PTR $T238592[ebp]
	mov	al, BYTE PTR [edx+2256]
	mov	BYTE PTR $T238601[ebp], al
	movzx	ecx, BYTE PTR $T238601[ebp]
	test	ecx, ecx
	je	SHORT $LN5@IsProxyWar
	mov	edx, DWORD PTR _eOtherMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAtWarWithPlayersTeam@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAtWarWithPlayersTeam
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@IsProxyWar
	mov	ecx, DWORD PTR _eOtherTeam$222691[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsPeaceBlocked@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z ; CvMinorCivAI::IsPeaceBlocked
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN5@IsProxyWar

; 2810 : 				{
; 2811 : 					// Do some additional checks to safeguard against weird scenario cases (ex. major and minor on same team, major is dead)
; 2812 : 					PlayerTypes eOtherTeamLeader = GET_TEAM(eOtherTeam).getLeaderID();

	mov	eax, DWORD PTR _eOtherTeam$222691[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T238605[ebp], eax
	mov	ecx, DWORD PTR $T238605[ebp]
	call	?getLeaderID@CvTeam@@QBE?AW4PlayerTypes@@XZ ; CvTeam::getLeaderID
	mov	DWORD PTR _eOtherTeamLeader$222695[ebp], eax

; 2813 : 					CvPlayer* pOtherTeamLeader = &GET_PLAYER(eOtherTeamLeader);

	mov	ecx, DWORD PTR _eOtherTeamLeader$222695[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pOtherTeamLeader$222696[ebp], ecx

; 2814 : 					if (pOtherTeamLeader && !pOtherTeamLeader->isMinorCiv() && pOtherTeamLeader->isAlive())

	je	SHORT $LN5@IsProxyWar
	mov	ecx, DWORD PTR _pOtherTeamLeader$222696[ebp]
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN5@IsProxyWar
	mov	eax, DWORD PTR _pOtherTeamLeader$222696[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T238617[ebp], cl
	movzx	edx, BYTE PTR $T238617[ebp]
	test	edx, edx
	je	SHORT $LN5@IsProxyWar

; 2815 : 					{
; 2816 : 						return true;

	mov	al, 1
	jmp	SHORT $LN6@IsProxyWar
$LN5@IsProxyWar:

; 2817 : 					}
; 2818 : 				}
; 2819 : 			}
; 2820 : 		}
; 2821 : 	}
; 2822 : 	return false;

	xor	al, al
$LN6@IsProxyWar:

; 2823 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?IsProxyWarActiveForMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@0@Z ENDP ; CvMinorCivAI::IsProxyWarActiveForMajor
_TEXT	ENDS
PUBLIC	?IsProxyWarActiveForMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsProxyWarActiveForMajor
; Function compile flags: /Odtp
;	COMDAT ?IsProxyWarActiveForMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$222702 = -4						; size = 4
_eMajor$ = 8						; size = 4
?IsProxyWarActiveForMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::IsProxyWarActiveForMajor, COMDAT
; _this$ = ecx

; 2826 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2827 : 	CvAssert(eMajor >= 0 && eMajor < MAX_MAJOR_CIVS);
; 2828 : 	for (int i = 0; i < MAX_MAJOR_CIVS; i++)

	mov	DWORD PTR _i$222702[ebp], 0
	jmp	SHORT $LN4@IsProxyWar@2
$LN3@IsProxyWar@2:
	mov	eax, DWORD PTR _i$222702[ebp]
	add	eax, 1
	mov	DWORD PTR _i$222702[ebp], eax
$LN4@IsProxyWar@2:
	cmp	DWORD PTR _i$222702[ebp], 22		; 00000016H
	jge	SHORT $LN2@IsProxyWar@2

; 2829 : 	{
; 2830 : 		if (IsProxyWarActiveForMajor(eMajor, (PlayerTypes)i))

	mov	ecx, DWORD PTR _i$222702[ebp]
	push	ecx
	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsProxyWarActiveForMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@0@Z ; CvMinorCivAI::IsProxyWarActiveForMajor
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@IsProxyWar@2

; 2831 : 		{
; 2832 : 			return true;

	mov	al, 1
	jmp	SHORT $LN5@IsProxyWar@2
$LN1@IsProxyWar@2:

; 2833 : 		}
; 2834 : 	}

	jmp	SHORT $LN3@IsProxyWar@2
$LN2@IsProxyWar@2:

; 2835 : 	return false;

	xor	al, al
$LN5@IsProxyWar@2:

; 2836 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsProxyWarActiveForMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::IsProxyWarActiveForMajor
_TEXT	ENDS
PUBLIC	?DoTestStartPersonalQuest@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ; CvMinorCivAI::DoTestStartPersonalQuest
PUBLIC	?ChangeQuestCountdownForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::ChangeQuestCountdownForPlayer
PUBLIC	?GetQuestCountdownForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetQuestCountdownForPlayer
PUBLIC	?DoTestStartGlobalQuest@CvMinorCivAI@@QAEXXZ	; CvMinorCivAI::DoTestStartGlobalQuest
PUBLIC	?DoTestSeedGlobalQuestCountdown@CvMinorCivAI@@QAEX_N@Z ; CvMinorCivAI::DoTestSeedGlobalQuestCountdown
PUBLIC	?ChangeGlobalQuestCountdown@CvMinorCivAI@@QAEXH@Z ; CvMinorCivAI::ChangeGlobalQuestCountdown
PUBLIC	?GetGlobalQuestCountdown@CvMinorCivAI@@QAEHXZ	; CvMinorCivAI::GetGlobalQuestCountdown
PUBLIC	?GetFirstPossibleTurnForGlobalQuests@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetFirstPossibleTurnForGlobalQuests
PUBLIC	?DoQuestsCleanup@CvMinorCivAI@@QAEXXZ		; CvMinorCivAI::DoQuestsCleanup
; Function compile flags: /Odtp
;	COMDAT ?DoTurnQuests@CvMinorCivAI@@QAEXXZ
_TEXT	SEGMENT
_this$ = -36						; size = 4
$T238637 = -32						; size = 4
$T238633 = -28						; size = 4
$T238629 = -24						; size = 4
$T238625 = -20						; size = 4
_iPlayerLoop$222718 = -16				; size = 4
_ePlayer$ = -12						; size = 4
_iFirstTurnForPersonalQuests$ = -8			; size = 4
_iFirstTurnForGlobalQuests$ = -4			; size = 4
?DoTurnQuests@CvMinorCivAI@@QAEXXZ PROC			; CvMinorCivAI::DoTurnQuests, COMDAT
; _this$ = ecx

; 2845 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 2846 : 	// ********************
; 2847 : 	// Check Current Quests
; 2848 : 	// ********************
; 2849 : 	DoTestActiveQuests(/*bTestComplete*/ true, /*bTestObsolete*/ true);

	push	1
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoTestActiveQuests@CvMinorCivAI@@QAEX_N0@Z ; CvMinorCivAI::DoTestActiveQuests

; 2850 : 	DoQuestsCleanup();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoQuestsCleanup@CvMinorCivAI@@QAEXXZ	; CvMinorCivAI::DoQuestsCleanup

; 2851 : 
; 2852 : 	// ********************
; 2853 : 	// Give Global Quests
; 2854 : 	// ********************
; 2855 : 	int iFirstTurnForGlobalQuests = GetFirstPossibleTurnForGlobalQuests();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFirstPossibleTurnForGlobalQuests@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetFirstPossibleTurnForGlobalQuests
	mov	DWORD PTR _iFirstTurnForGlobalQuests$[ebp], eax

; 2856 : 
; 2857 : 	// Increment turns since last quest
; 2858 : 	if(GetGlobalQuestCountdown() > 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetGlobalQuestCountdown@CvMinorCivAI@@QAEHXZ ; CvMinorCivAI::GetGlobalQuestCountdown
	test	eax, eax
	jle	SHORT $LN14@DoTurnQues

; 2859 : 	{
; 2860 : 		ChangeGlobalQuestCountdown(-1);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeGlobalQuestCountdown@CvMinorCivAI@@QAEXH@Z ; CvMinorCivAI::ChangeGlobalQuestCountdown
$LN14@DoTurnQues:

; 2861 : 	}
; 2862 : 
; 2863 : 	// Unlock turn - seed the counter
; 2864 : 	if(GC.getGame().getElapsedGameTurns() == iFirstTurnForGlobalQuests)

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T238625[ebp], eax
	mov	ecx, DWORD PTR $T238625[ebp]
	call	?getElapsedGameTurns@CvGame@@QBEHXZ	; CvGame::getElapsedGameTurns
	cmp	eax, DWORD PTR _iFirstTurnForGlobalQuests$[ebp]
	jne	SHORT $LN13@DoTurnQues

; 2865 : 	{
; 2866 : 		DoTestSeedGlobalQuestCountdown();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoTestSeedGlobalQuestCountdown@CvMinorCivAI@@QAEX_N@Z ; CvMinorCivAI::DoTestSeedGlobalQuestCountdown
$LN13@DoTurnQues:

; 2867 : 	}
; 2868 : 
; 2869 : 	if(GC.getGame().getElapsedGameTurns() > iFirstTurnForGlobalQuests || ENABLE_QUESTS_AT_START)

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T238629[ebp], ecx
	mov	ecx, DWORD PTR $T238629[ebp]
	call	?getElapsedGameTurns@CvGame@@QBEHXZ	; CvGame::getElapsedGameTurns
	cmp	eax, DWORD PTR _iFirstTurnForGlobalQuests$[ebp]
	jg	SHORT $LN11@DoTurnQues
	xor	edx, edx
	je	SHORT $LN12@DoTurnQues
$LN11@DoTurnQues:

; 2870 : 	{
; 2871 : 		DoTestStartGlobalQuest();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoTestStartGlobalQuest@CvMinorCivAI@@QAEXXZ ; CvMinorCivAI::DoTestStartGlobalQuest
$LN12@DoTurnQues:

; 2872 : 	}
; 2873 : 
; 2874 : 	// ********************
; 2875 : 	// Give Personal Quests
; 2876 : 	// ********************
; 2877 : 	int iFirstTurnForPersonalQuests = GetFirstPossibleTurnForPersonalQuests();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFirstPossibleTurnForPersonalQuests@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetFirstPossibleTurnForPersonalQuests
	mov	DWORD PTR _iFirstTurnForPersonalQuests$[ebp], eax

; 2878 : 
; 2879 : 	PlayerTypes ePlayer;
; 2880 : 	for(int iPlayerLoop = 0; iPlayerLoop < MAX_MAJOR_CIVS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$222718[ebp], 0
	jmp	SHORT $LN10@DoTurnQues
$LN9@DoTurnQues:
	mov	eax, DWORD PTR _iPlayerLoop$222718[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayerLoop$222718[ebp], eax
$LN10@DoTurnQues:
	cmp	DWORD PTR _iPlayerLoop$222718[ebp], 22	; 00000016H
	jge	$LN15@DoTurnQues

; 2881 : 	{
; 2882 : 		ePlayer = (PlayerTypes) iPlayerLoop;

	mov	ecx, DWORD PTR _iPlayerLoop$222718[ebp]
	mov	DWORD PTR _ePlayer$[ebp], ecx

; 2883 : 
; 2884 : 		if(IsHasMetPlayer(ePlayer))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsHasMetPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsHasMetPlayer
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@DoTurnQues

; 2885 : 		{
; 2886 : 			// Increment turns since last quest
; 2887 : 			if(GetQuestCountdownForPlayer(ePlayer) > 0)

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetQuestCountdownForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetQuestCountdownForPlayer
	test	eax, eax
	jle	SHORT $LN6@DoTurnQues

; 2888 : 			{
; 2889 : 				ChangeQuestCountdownForPlayer(ePlayer, -1);

	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeQuestCountdownForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::ChangeQuestCountdownForPlayer
$LN6@DoTurnQues:

; 2890 : 			}
; 2891 : 
; 2892 : 			// Unlock turn - seed the counter
; 2893 : 			if(GC.getGame().getElapsedGameTurns() == iFirstTurnForPersonalQuests)

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T238633[ebp], eax
	mov	ecx, DWORD PTR $T238633[ebp]
	call	?getElapsedGameTurns@CvGame@@QBEHXZ	; CvGame::getElapsedGameTurns
	cmp	eax, DWORD PTR _iFirstTurnForPersonalQuests$[ebp]
	jne	SHORT $LN5@DoTurnQues

; 2894 : 			{
; 2895 : 				DoTestSeedQuestCountdownForPlayer(ePlayer);

	push	0
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoTestSeedQuestCountdownForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z ; CvMinorCivAI::DoTestSeedQuestCountdownForPlayer
	jmp	SHORT $LN7@DoTurnQues
$LN5@DoTurnQues:

; 2896 : 			}
; 2897 : 			// Can't start a quest too early
; 2898 : 			else if(GC.getGame().getElapsedGameTurns() > iFirstTurnForPersonalQuests || ENABLE_QUESTS_AT_START)

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T238637[ebp], edx
	mov	ecx, DWORD PTR $T238637[ebp]
	call	?getElapsedGameTurns@CvGame@@QBEHXZ	; CvGame::getElapsedGameTurns
	cmp	eax, DWORD PTR _iFirstTurnForPersonalQuests$[ebp]
	jg	SHORT $LN2@DoTurnQues
	xor	eax, eax
	je	SHORT $LN7@DoTurnQues
$LN2@DoTurnQues:

; 2899 : 			{
; 2900 : 				if(!IsAtWarWithPlayersTeam(ePlayer))

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAtWarWithPlayersTeam@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAtWarWithPlayersTeam
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN7@DoTurnQues

; 2901 : 				{
; 2902 : 					DoTestStartPersonalQuest(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoTestStartPersonalQuest@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ; CvMinorCivAI::DoTestStartPersonalQuest
$LN7@DoTurnQues:

; 2903 : 				}
; 2904 : 			}
; 2905 : 		}

	jmp	$LN9@DoTurnQues
$LN15@DoTurnQues:

; 2906 : 	}
; 2907 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoTurnQuests@CvMinorCivAI@@QAEXXZ ENDP			; CvMinorCivAI::DoTurnQuests
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetFirstPossibleTurnForPersonalQuests@CvMinorCivAI@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T238643 = -4						; size = 4
?GetFirstPossibleTurnForPersonalQuests@CvMinorCivAI@@QBEHXZ PROC ; CvMinorCivAI::GetFirstPossibleTurnForPersonalQuests, COMDAT
; _this$ = ecx

; 2911 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2912 : 	return /*30*/ GC.getMINOR_CIV_PERSONAL_QUEST_FIRST_POSSIBLE_TURN();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3212
	mov	DWORD PTR $T238643[ebp], eax
	mov	eax, DWORD PTR $T238643[ebp]

; 2913 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetFirstPossibleTurnForPersonalQuests@CvMinorCivAI@@QBEHXZ ENDP ; CvMinorCivAI::GetFirstPossibleTurnForPersonalQuests
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetFirstPossibleTurnForGlobalQuests@CvMinorCivAI@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T238649 = -4						; size = 4
?GetFirstPossibleTurnForGlobalQuests@CvMinorCivAI@@QBEHXZ PROC ; CvMinorCivAI::GetFirstPossibleTurnForGlobalQuests, COMDAT
; _this$ = ecx

; 2917 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2918 : 	return /*30*/ GC.getMINOR_CIV_GLOBAL_QUEST_FIRST_POSSIBLE_TURN();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3192
	mov	DWORD PTR $T238649[ebp], eax
	mov	eax, DWORD PTR $T238649[ebp]

; 2919 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetFirstPossibleTurnForGlobalQuests@CvMinorCivAI@@QBEHXZ ENDP ; CvMinorCivAI::GetFirstPossibleTurnForGlobalQuests
_TEXT	ENDS
PUBLIC	?GetMaxActivePersonalQuestsForPlayer@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetMaxActivePersonalQuestsForPlayer
; Function compile flags: /Odtp
;	COMDAT ?GetMaxActivePersonalQuestsForPlayer@CvMinorCivAI@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMaxActivePersonalQuestsForPlayer@CvMinorCivAI@@QBEHXZ PROC ; CvMinorCivAI::GetMaxActivePersonalQuestsForPlayer, COMDAT
; _this$ = ecx

; 2923 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2924 : 	return 2; //antonjs: todo: constant/XML, link with size of typedef vectors in header file

	mov	eax, 2

; 2925 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetMaxActivePersonalQuestsForPlayer@CvMinorCivAI@@QBEHXZ ENDP ; CvMinorCivAI::GetMaxActivePersonalQuestsForPlayer
_TEXT	ENDS
PUBLIC	?GetMaxActiveGlobalQuests@CvMinorCivAI@@QBEHXZ	; CvMinorCivAI::GetMaxActiveGlobalQuests
; Function compile flags: /Odtp
;	COMDAT ?GetMaxActiveGlobalQuests@CvMinorCivAI@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMaxActiveGlobalQuests@CvMinorCivAI@@QBEHXZ PROC	; CvMinorCivAI::GetMaxActiveGlobalQuests, COMDAT
; _this$ = ecx

; 2929 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2930 : 	return 1; //antonjs: todo: constant/XML, link with size of typedef vectors in header file

	mov	eax, 1

; 2931 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetMaxActiveGlobalQuests@CvMinorCivAI@@QBEHXZ ENDP	; CvMinorCivAI::GetMaxActiveGlobalQuests
_TEXT	ENDS
PUBLIC	?AddQuestForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z ; CvMinorCivAI::AddQuestForPlayer
PUBLIC	??_C@_0DK@ODJDHGIA@Picking?5random?5global?5quest?5for?5@ ; `string'
PUBLIC	??1?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum MinorCivQuestTypes,18,1,297,0>::~FStaticVector<enum MinorCivQuestTypes,18,1,297,0>
PUBLIC	?push_back@?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAEIABW4MinorCivQuestTypes@@@Z ; FStaticVector<enum MinorCivQuestTypes,18,1,297,0>::push_back
PUBLIC	?GetPersonalityQuestBias@CvMinorCivAI@@QAEHW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::GetPersonalityQuestBias
PUBLIC	?GetMinPlayersNeededForQuest@CvMinorCivAI@@QBEHW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::GetMinPlayersNeededForQuest
PUBLIC	?IsValidQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsValidQuestForPlayer
PUBLIC	?IsEnabledQuest@CvMinorCivAI@@QAE_NW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsEnabledQuest
PUBLIC	??0?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum MinorCivQuestTypes,18,1,297,0>::FStaticVector<enum MinorCivQuestTypes,18,1,297,0>
PUBLIC	?GetNumActiveGlobalQuests@CvMinorCivAI@@QBEHXZ	; CvMinorCivAI::GetNumActiveGlobalQuests
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_0DK@ODJDHGIA@Picking?5random?5global?5quest?5for?5@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0DK@ODJDHGIA@Picking?5random?5global?5quest?5for?5@ DB 'Picking ran'
	DB	'dom global quest for Minor to give to players.', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DoTestStartGlobalQuest@CvMinorCivAI@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoTestStartGlobalQuest@CvMinorCivAI@@QAEXXZ$0
__ehfuncinfo$?DoTestStartGlobalQuest@CvMinorCivAI@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DoTestStartGlobalQuest@CvMinorCivAI@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoTestStartGlobalQuest@CvMinorCivAI@@QAEXXZ
_TEXT	SEGMENT
_this$ = -192						; size = 4
$T238707 = -176						; size = 4
$T238700 = -172						; size = 4
$T238696 = -168						; size = 4
$T238680 = -156						; size = 4
_iPlayerLoop$222920 = -140				; size = 4
_iCountLoop$222913 = -136				; size = 4
_iPlayerLoop$222905 = -132				; size = 4
_iCount$222912 = -128					; size = 4
_iNumValidPlayers$222904 = -124				; size = 4
_iQuestLoop$222897 = -120				; size = 4
_veValidQuests$ = -116					; size = 88
__$ArrayPad$ = -28					; size = 4
_ePlayer$ = -24						; size = 4
_iRandIndex$ = -20					; size = 4
_eQuest$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?DoTestStartGlobalQuest@CvMinorCivAI@@QAEXXZ PROC	; CvMinorCivAI::DoTestStartGlobalQuest, COMDAT
; _this$ = ecx

; 2935 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoTestStartGlobalQuest@CvMinorCivAI@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 180				; 000000b4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2936 : 	if(GetGlobalQuestCountdown() > 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetGlobalQuestCountdown@CvMinorCivAI@@QAEHXZ ; CvMinorCivAI::GetGlobalQuestCountdown
	test	eax, eax
	jle	SHORT $LN20@DoTestStar

; 2937 : 	{
; 2938 : 		return;

	jmp	$LN21@DoTestStar
$LN20@DoTestStar:

; 2939 : 	}
; 2940 : 
; 2941 : 	if(GetNumActiveGlobalQuests() >= GetMaxActiveGlobalQuests())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumActiveGlobalQuests@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetNumActiveGlobalQuests
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMaxActiveGlobalQuests@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetMaxActiveGlobalQuests
	cmp	esi, eax
	jl	SHORT $LN19@DoTestStar

; 2942 : 	{
; 2943 : 		return;

	jmp	$LN21@DoTestStar
$LN19@DoTestStar:

; 2944 : 	}
; 2945 : 
; 2946 : 	// Pick a valid quest
; 2947 : 	FStaticVector<MinorCivQuestTypes, NUM_MINOR_CIV_QUEST_TYPES, true, c_eCiv5GameplayDLL, 0> veValidQuests;

	lea	ecx, DWORD PTR _veValidQuests$[ebp]
	call	??0?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum MinorCivQuestTypes,18,1,297,0>::FStaticVector<enum MinorCivQuestTypes,18,1,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2948 : 	MinorCivQuestTypes eQuest;
; 2949 : 	PlayerTypes ePlayer;
; 2950 : 	for(int iQuestLoop = 0; iQuestLoop < NUM_MINOR_CIV_QUEST_TYPES; iQuestLoop++)

	mov	DWORD PTR _iQuestLoop$222897[ebp], 0
	jmp	SHORT $LN18@DoTestStar
$LN17@DoTestStar:
	mov	eax, DWORD PTR _iQuestLoop$222897[ebp]
	add	eax, 1
	mov	DWORD PTR _iQuestLoop$222897[ebp], eax
$LN18@DoTestStar:
	cmp	DWORD PTR _iQuestLoop$222897[ebp], 18	; 00000012H
	jge	$LN16@DoTestStar

; 2951 : 	{
; 2952 : 		eQuest = (MinorCivQuestTypes) iQuestLoop;

	mov	ecx, DWORD PTR _iQuestLoop$222897[ebp]
	mov	DWORD PTR _eQuest$[ebp], ecx

; 2953 : 		if(IsEnabledQuest(eQuest))

	mov	edx, DWORD PTR _eQuest$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsEnabledQuest@CvMinorCivAI@@QAE_NW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsEnabledQuest
	movzx	eax, al
	test	eax, eax
	je	$LN15@DoTestStar

; 2954 : 		{
; 2955 : 			if(IsGlobalQuest(eQuest))

	mov	ecx, DWORD PTR _eQuest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsGlobalQuest@CvMinorCivAI@@QBE_NW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsGlobalQuest
	movzx	edx, al
	test	edx, edx
	je	$LN15@DoTestStar

; 2956 : 			{
; 2957 : 				// Are there enough players for this quest to be given out?
; 2958 : 				int iNumValidPlayers = 0;

	mov	DWORD PTR _iNumValidPlayers$222904[ebp], 0

; 2959 : 				for(int iPlayerLoop = 0; iPlayerLoop < MAX_MAJOR_CIVS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$222905[ebp], 0
	jmp	SHORT $LN13@DoTestStar
$LN12@DoTestStar:
	mov	eax, DWORD PTR _iPlayerLoop$222905[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayerLoop$222905[ebp], eax
$LN13@DoTestStar:
	cmp	DWORD PTR _iPlayerLoop$222905[ebp], 22	; 00000016H
	jge	SHORT $LN11@DoTestStar

; 2960 : 				{
; 2961 : 					ePlayer = (PlayerTypes) iPlayerLoop;

	mov	ecx, DWORD PTR _iPlayerLoop$222905[ebp]
	mov	DWORD PTR _ePlayer$[ebp], ecx

; 2962 : 					if(IsValidQuestForPlayer(ePlayer, eQuest))

	mov	edx, DWORD PTR _eQuest$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsValidQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsValidQuestForPlayer
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@DoTestStar

; 2963 : 						iNumValidPlayers++;

	mov	edx, DWORD PTR _iNumValidPlayers$222904[ebp]
	add	edx, 1
	mov	DWORD PTR _iNumValidPlayers$222904[ebp], edx
$LN10@DoTestStar:

; 2964 : 				}

	jmp	SHORT $LN12@DoTestStar
$LN11@DoTestStar:

; 2965 : 				if(iNumValidPlayers < GetMinPlayersNeededForQuest(eQuest))

	mov	eax, DWORD PTR _eQuest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMinPlayersNeededForQuest@CvMinorCivAI@@QBEHW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::GetMinPlayersNeededForQuest
	cmp	DWORD PTR _iNumValidPlayers$222904[ebp], eax
	jge	SHORT $LN9@DoTestStar

; 2966 : 					continue;

	jmp	$LN17@DoTestStar
$LN9@DoTestStar:

; 2967 : 
; 2968 : 				// What is the bias for this minor favoring this particular quest? Queue up multiple copies (default is 10)
; 2969 : 				int iCount = GetPersonalityQuestBias(eQuest);

	mov	ecx, DWORD PTR _eQuest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPersonalityQuestBias@CvMinorCivAI@@QAEHW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::GetPersonalityQuestBias
	mov	DWORD PTR _iCount$222912[ebp], eax

; 2970 : 				for(int iCountLoop = 0; iCountLoop < iCount; iCountLoop++)

	mov	DWORD PTR _iCountLoop$222913[ebp], 0
	jmp	SHORT $LN8@DoTestStar
$LN7@DoTestStar:
	mov	edx, DWORD PTR _iCountLoop$222913[ebp]
	add	edx, 1
	mov	DWORD PTR _iCountLoop$222913[ebp], edx
$LN8@DoTestStar:
	mov	eax, DWORD PTR _iCountLoop$222913[ebp]
	cmp	eax, DWORD PTR _iCount$222912[ebp]
	jge	SHORT $LN15@DoTestStar

; 2971 : 				{
; 2972 : 					veValidQuests.push_back(eQuest);

	lea	ecx, DWORD PTR _eQuest$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _veValidQuests$[ebp]
	call	?push_back@?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAEIABW4MinorCivQuestTypes@@@Z ; FStaticVector<enum MinorCivQuestTypes,18,1,297,0>::push_back

; 2973 : 				}

	jmp	SHORT $LN7@DoTestStar
$LN15@DoTestStar:

; 2974 : 			}
; 2975 : 		}
; 2976 : 	}

	jmp	$LN17@DoTestStar
$LN16@DoTestStar:

; 2977 : 
; 2978 : 	// No valid quests
; 2979 : 	if(veValidQuests.size() == 0)

	mov	edx, DWORD PTR _veValidQuests$[ebp+4]
	mov	DWORD PTR $T238680[ebp], edx
	cmp	DWORD PTR $T238680[ebp], 0
	jne	SHORT $LN5@DoTestStar

; 2980 : 	{
; 2981 : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _veValidQuests$[ebp]
	call	??1?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum MinorCivQuestTypes,18,1,297,0>::~FStaticVector<enum MinorCivQuestTypes,18,1,297,0>
	jmp	$LN21@DoTestStar
$LN5@DoTestStar:

; 2982 : 	}
; 2983 : 
; 2984 : 	// There are valid quests, so pick one at random
; 2985 : 	int iRandIndex = GC.getGame().getJonRandNum(veValidQuests.size(), "Picking random global quest for Minor to give to players.");

	mov	eax, DWORD PTR _veValidQuests$[ebp+4]
	mov	DWORD PTR $T238696[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T238700[ebp], ecx
	push	OFFSET ??_C@_0DK@ODJDHGIA@Picking?5random?5global?5quest?5for?5@
	mov	edx, DWORD PTR $T238696[ebp]
	push	edx
	mov	ecx, DWORD PTR $T238700[ebp]
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	mov	DWORD PTR _iRandIndex$[ebp], eax

; 2986 : 	eQuest = veValidQuests[iRandIndex];

	mov	eax, DWORD PTR _iRandIndex$[ebp]
	mov	ecx, DWORD PTR _veValidQuests$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _eQuest$[ebp], edx

; 2987 : 
; 2988 : 	// Give out the quest
; 2989 : 	for(int iPlayerLoop = 0; iPlayerLoop < MAX_MAJOR_CIVS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$222920[ebp], 0
	jmp	SHORT $LN4@DoTestStar
$LN3@DoTestStar:
	mov	eax, DWORD PTR _iPlayerLoop$222920[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayerLoop$222920[ebp], eax
$LN4@DoTestStar:
	cmp	DWORD PTR _iPlayerLoop$222920[ebp], 22	; 00000016H
	jge	SHORT $LN2@DoTestStar

; 2990 : 	{
; 2991 : 		ePlayer = (PlayerTypes) iPlayerLoop;

	mov	ecx, DWORD PTR _iPlayerLoop$222920[ebp]
	mov	DWORD PTR _ePlayer$[ebp], ecx

; 2992 : 		if(IsValidQuestForPlayer(ePlayer, eQuest))

	mov	edx, DWORD PTR _eQuest$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsValidQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsValidQuestForPlayer
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@DoTestStar

; 2993 : 		{
; 2994 : 			// Since we are adding each instance of the quest separately, global quests should not rely on random choice of data
; 2995 : 			AddQuestForPlayer(ePlayer, eQuest, GC.getGame().getGameTurn());

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T238707[ebp], edx
	mov	ecx, DWORD PTR $T238707[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	push	eax
	mov	eax, DWORD PTR _eQuest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddQuestForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z ; CvMinorCivAI::AddQuestForPlayer
$LN1@DoTestStar:

; 2996 : 		}
; 2997 : 	}

	jmp	SHORT $LN3@DoTestStar
$LN2@DoTestStar:

; 2998 : 
; 2999 : 	// Check if we need to seed the countdown timer to allow for another quest
; 3000 : 	DoTestSeedGlobalQuestCountdown();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoTestSeedGlobalQuestCountdown@CvMinorCivAI@@QAEX_N@Z ; CvMinorCivAI::DoTestSeedGlobalQuestCountdown

; 3001 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _veValidQuests$[ebp]
	call	??1?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum MinorCivQuestTypes,18,1,297,0>::~FStaticVector<enum MinorCivQuestTypes,18,1,297,0>
$LN21@DoTestStar:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoTestStartGlobalQuest@CvMinorCivAI@@QAEXXZ$0:
	lea	ecx, DWORD PTR _veValidQuests$[ebp]
	jmp	??1?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum MinorCivQuestTypes,18,1,297,0>::~FStaticVector<enum MinorCivQuestTypes,18,1,297,0>
__ehhandler$?DoTestStartGlobalQuest@CvMinorCivAI@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-188]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoTestStartGlobalQuest@CvMinorCivAI@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoTestStartGlobalQuest@CvMinorCivAI@@QAEXXZ ENDP	; CvMinorCivAI::DoTestStartGlobalQuest
PUBLIC	??_C@_0DE@JDEOKLMK@Picking?5random?5quest?5for?5Minor?5t@ ; `string'
PUBLIC	?IsPersonalQuest@CvMinorCivAI@@QBE_NW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsPersonalQuest
PUBLIC	?GetNumActivePersonalQuestsForPlayer@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetNumActivePersonalQuestsForPlayer
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_0DE@JDEOKLMK@Picking?5random?5quest?5for?5Minor?5t@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0DE@JDEOKLMK@Picking?5random?5quest?5for?5Minor?5t@ DB 'Picking ran'
	DB	'dom quest for Minor to give to a player.', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DoTestStartPersonalQuest@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoTestStartPersonalQuest@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$0
__ehfuncinfo$?DoTestStartPersonalQuest@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DoTestStartPersonalQuest@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoTestStartPersonalQuest@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -180						; size = 4
$T238794 = -164						; size = 4
$T238787 = -160						; size = 4
$T238783 = -156						; size = 4
$T238767 = -144						; size = 4
_iQuestLoop$222937 = -128				; size = 4
_veValidQuests$ = -124					; size = 88
__$ArrayPad$ = -32					; size = 4
_iCount$ = -28						; size = 4
_iRandIndex$ = -24					; size = 4
_iCountLoop$ = -20					; size = 4
_eQuest$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
?DoTestStartPersonalQuest@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z PROC ; CvMinorCivAI::DoTestStartPersonalQuest, COMDAT
; _this$ = ecx

; 3005 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoTestStartPersonalQuest@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 168				; 000000a8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 3006 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 3007 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 3008 : 
; 3009 : 	// Can't start a new quest too quickly after an old one has ended
; 3010 : 	if(GetQuestCountdownForPlayer(ePlayer) > 0)

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetQuestCountdownForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetQuestCountdownForPlayer
	test	eax, eax
	jle	SHORT $LN10@DoTestStar@2

; 3011 : 	{
; 3012 : 		return;

	jmp	$LN11@DoTestStar@2
$LN10@DoTestStar@2:

; 3013 : 	}
; 3014 : 
; 3015 : 	// Can't start a new quest if we already have several active ones
; 3016 : 	if(GetNumActivePersonalQuestsForPlayer(ePlayer) >= GetMaxActivePersonalQuestsForPlayer())

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumActivePersonalQuestsForPlayer@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetNumActivePersonalQuestsForPlayer
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMaxActivePersonalQuestsForPlayer@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetMaxActivePersonalQuestsForPlayer
	cmp	esi, eax
	jl	SHORT $LN9@DoTestStar@2

; 3017 : 	{
; 3018 : 		return;

	jmp	$LN11@DoTestStar@2
$LN9@DoTestStar@2:

; 3019 : 	}
; 3020 : 
; 3021 : 	FStaticVector<MinorCivQuestTypes, NUM_MINOR_CIV_QUEST_TYPES, true, c_eCiv5GameplayDLL, 0> veValidQuests;

	lea	ecx, DWORD PTR _veValidQuests$[ebp]
	call	??0?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum MinorCivQuestTypes,18,1,297,0>::FStaticVector<enum MinorCivQuestTypes,18,1,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3022 : 
; 3023 : 	int iCount, iCountLoop;
; 3024 : 
; 3025 : 	MinorCivQuestTypes eQuest;
; 3026 : 	for(int iQuestLoop = 0; iQuestLoop < NUM_MINOR_CIV_QUEST_TYPES; iQuestLoop++)

	mov	DWORD PTR _iQuestLoop$222937[ebp], 0
	jmp	SHORT $LN8@DoTestStar@2
$LN7@DoTestStar@2:
	mov	edx, DWORD PTR _iQuestLoop$222937[ebp]
	add	edx, 1
	mov	DWORD PTR _iQuestLoop$222937[ebp], edx
$LN8@DoTestStar@2:
	cmp	DWORD PTR _iQuestLoop$222937[ebp], 18	; 00000012H
	jge	SHORT $LN6@DoTestStar@2

; 3027 : 	{
; 3028 : 		eQuest = (MinorCivQuestTypes) iQuestLoop;

	mov	eax, DWORD PTR _iQuestLoop$222937[ebp]
	mov	DWORD PTR _eQuest$[ebp], eax

; 3029 : 
; 3030 : 		if(IsValidQuestForPlayer(ePlayer, eQuest) && IsPersonalQuest(eQuest))

	mov	ecx, DWORD PTR _eQuest$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsValidQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsValidQuestForPlayer
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@DoTestStar@2
	mov	ecx, DWORD PTR _eQuest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsPersonalQuest@CvMinorCivAI@@QBE_NW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsPersonalQuest
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@DoTestStar@2

; 3031 : 		{
; 3032 : 			// What is the bias for this player wanting this particular quest? Queue up multiple copies (default is 10)
; 3033 : 			iCount = GetPersonalityQuestBias(eQuest);

	mov	eax, DWORD PTR _eQuest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPersonalityQuestBias@CvMinorCivAI@@QAEHW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::GetPersonalityQuestBias
	mov	DWORD PTR _iCount$[ebp], eax

; 3034 : 
; 3035 : 			for(iCountLoop = 0; iCountLoop < iCount; iCountLoop++)

	mov	DWORD PTR _iCountLoop$[ebp], 0
	jmp	SHORT $LN4@DoTestStar@2
$LN3@DoTestStar@2:
	mov	ecx, DWORD PTR _iCountLoop$[ebp]
	add	ecx, 1
	mov	DWORD PTR _iCountLoop$[ebp], ecx
$LN4@DoTestStar@2:
	mov	edx, DWORD PTR _iCountLoop$[ebp]
	cmp	edx, DWORD PTR _iCount$[ebp]
	jge	SHORT $LN5@DoTestStar@2

; 3036 : 			{
; 3037 : 				veValidQuests.push_back(eQuest);

	lea	eax, DWORD PTR _eQuest$[ebp]
	push	eax
	lea	ecx, DWORD PTR _veValidQuests$[ebp]
	call	?push_back@?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAEIABW4MinorCivQuestTypes@@@Z ; FStaticVector<enum MinorCivQuestTypes,18,1,297,0>::push_back

; 3038 : 			}

	jmp	SHORT $LN3@DoTestStar@2
$LN5@DoTestStar@2:

; 3039 : 		}
; 3040 : 	}

	jmp	$LN7@DoTestStar@2
$LN6@DoTestStar@2:

; 3041 : 
; 3042 : 	// No valid Quests
; 3043 : 	if(veValidQuests.size() == 0)

	mov	ecx, DWORD PTR _veValidQuests$[ebp+4]
	mov	DWORD PTR $T238767[ebp], ecx
	cmp	DWORD PTR $T238767[ebp], 0
	jne	SHORT $LN1@DoTestStar@2

; 3044 : 	{
; 3045 : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _veValidQuests$[ebp]
	call	??1?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum MinorCivQuestTypes,18,1,297,0>::~FStaticVector<enum MinorCivQuestTypes,18,1,297,0>
	jmp	$LN11@DoTestStar@2
$LN1@DoTestStar@2:

; 3046 : 	}
; 3047 : 
; 3048 : 	int iRandIndex = GC.getGame().getJonRandNum(veValidQuests.size(), "Picking random quest for Minor to give to a player.");

	mov	edx, DWORD PTR _veValidQuests$[ebp+4]
	mov	DWORD PTR $T238783[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T238787[ebp], eax
	push	OFFSET ??_C@_0DE@JDEOKLMK@Picking?5random?5quest?5for?5Minor?5t@
	mov	ecx, DWORD PTR $T238783[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T238787[ebp]
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	mov	DWORD PTR _iRandIndex$[ebp], eax

; 3049 : 	eQuest = veValidQuests[iRandIndex];

	mov	edx, DWORD PTR _iRandIndex$[ebp]
	mov	eax, DWORD PTR _veValidQuests$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR _eQuest$[ebp], ecx

; 3050 : 
; 3051 : 	AddQuestForPlayer(ePlayer, eQuest, GC.getGame().getGameTurn());

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T238794[ebp], edx
	mov	ecx, DWORD PTR $T238794[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	push	eax
	mov	eax, DWORD PTR _eQuest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddQuestForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z ; CvMinorCivAI::AddQuestForPlayer

; 3052 : 
; 3053 : 	// Check if we need to seed the countdown timer to allow for another quest
; 3054 : 	DoTestSeedQuestCountdownForPlayer(ePlayer);

	push	0
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoTestSeedQuestCountdownForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z ; CvMinorCivAI::DoTestSeedQuestCountdownForPlayer

; 3055 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _veValidQuests$[ebp]
	call	??1?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum MinorCivQuestTypes,18,1,297,0>::~FStaticVector<enum MinorCivQuestTypes,18,1,297,0>
$LN11@DoTestStar@2:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoTestStartPersonalQuest@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$0:
	lea	ecx, DWORD PTR _veValidQuests$[ebp]
	jmp	??1?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum MinorCivQuestTypes,18,1,297,0>::~FStaticVector<enum MinorCivQuestTypes,18,1,297,0>
__ehhandler$?DoTestStartPersonalQuest@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-176]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoTestStartPersonalQuest@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoTestStartPersonalQuest@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::DoTestStartPersonalQuest
PUBLIC	?GetEffectiveFriendshipWithMajorTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajorTimes100
EXTRN	?LogMinorCivQuestReceived@CvDiplomacyAI@@QAEXW4PlayerTypes@@HHW4MinorCivQuestTypes@@@Z:PROC ; CvDiplomacyAI::LogMinorCivQuestReceived
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvplayerai.h
xdata$x	SEGMENT
__unwindtable$?AddQuestForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddQuestForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z$0
__ehfuncinfo$?AddQuestForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddQuestForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?AddQuestForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z
_TEXT	SEGMENT
_this$ = -68						; size = 4
$T238864 = -64						; size = 4
$T238860 = -60						; size = 4
$T238859 = -56						; size = 4
$T238840 = -48						; size = 4
$T238839 = -44						; size = 4
_newQuest$ = -40					; size = 28
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
_eType$ = 12						; size = 4
_iStartTurn$ = 16					; size = 4
?AddQuestForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z PROC ; CvMinorCivAI::AddQuestForPlayer, COMDAT
; _this$ = ecx

; 3059 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddQuestForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 3060 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 3061 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 3062 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN4@AddQuestFo
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN5@AddQuestFo
$LN4@AddQuestFo:
	jmp	$LN6@AddQuestFo
$LN5@AddQuestFo:

; 3063 : 
; 3064 : 	CvAssertMsg(eType >= NO_MINOR_CIV_QUEST_TYPE, "eType is expected to be non-negative (invalid Index)");
; 3065 : 	CvAssertMsg(eType < NUM_MINOR_CIV_QUEST_TYPES, "eType is expected to be within maximum bounds (invalid Index)");
; 3066 : 	if(eType < NO_MINOR_CIV_QUEST_TYPE || eType >= NUM_MINOR_CIV_QUEST_TYPES) return;

	cmp	DWORD PTR _eType$[ebp], -1
	jl	SHORT $LN2@AddQuestFo
	cmp	DWORD PTR _eType$[ebp], 18		; 00000012H
	jl	SHORT $LN3@AddQuestFo
$LN2@AddQuestFo:
	jmp	$LN6@AddQuestFo
$LN3@AddQuestFo:

; 3067 : 
; 3068 : 	// ePlayer can only have at most one quest of each type
; 3069 : 	CvAssertMsg(!IsActiveQuestForPlayer(ePlayer, eType), "ePlayer already has a quest of this type!");
; 3070 : 	if(IsActiveQuestForPlayer(ePlayer, eType)) return;

	mov	eax, DWORD PTR _eType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsActiveQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsActiveQuestForPlayer
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@AddQuestFo
	jmp	$LN6@AddQuestFo
$LN1@AddQuestFo:

; 3071 : 
; 3072 : 	CvMinorCivQuest newQuest(GetPlayer()->GetID(), ePlayer, eType);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T238839[ebp], eax
	mov	eax, DWORD PTR $T238839[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T238840[ebp], ecx
	mov	edx, DWORD PTR _eType$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T238840[ebp]
	push	ecx
	lea	ecx, DWORD PTR _newQuest$[ebp]
	call	??0CvMinorCivQuest@@QAE@W4PlayerTypes@@0W4MinorCivQuestTypes@@@Z ; CvMinorCivQuest::CvMinorCivQuest
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3073 : 	newQuest.DoStartQuest(iStartTurn);

	mov	edx, DWORD PTR _iStartTurn$[ebp]
	push	edx
	lea	ecx, DWORD PTR _newQuest$[ebp]
	call	?DoStartQuest@CvMinorCivQuest@@QAEXH@Z	; CvMinorCivQuest::DoStartQuest

; 3074 : 	m_QuestsGiven[ePlayer].push_back(newQuest);

	lea	eax, DWORD PTR _newQuest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	call	?push_back@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAEIABVCvMinorCivQuest@@@Z ; FStaticVector<CvMinorCivQuest,5,0,297,0>::push_back

; 3075 : 
; 3076 : 	// Log quest received
; 3077 : 	GET_PLAYER(ePlayer).GetDiplomacyAI()->LogMinorCivQuestReceived(GetPlayer()->GetID(), GetEffectiveFriendshipWithMajorTimes100(ePlayer), GetEffectiveFriendshipWithMajorTimes100(ePlayer), eType);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T238859[ebp], eax
	mov	eax, DWORD PTR $T238859[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T238860[ebp], ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T238864[ebp], edx
	mov	eax, DWORD PTR _eType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajorTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajorTimes100
	push	eax
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajorTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajorTimes100
	push	eax
	mov	eax, DWORD PTR $T238860[ebp]
	push	eax
	mov	ecx, DWORD PTR $T238864[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?LogMinorCivQuestReceived@CvDiplomacyAI@@QAEXW4PlayerTypes@@HHW4MinorCivQuestTypes@@@Z ; CvDiplomacyAI::LogMinorCivQuestReceived

; 3078 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newQuest$[ebp]
	call	??1CvMinorCivQuest@@QAE@XZ		; CvMinorCivQuest::~CvMinorCivQuest
$LN6@AddQuestFo:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddQuestForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z$0:
	lea	ecx, DWORD PTR _newQuest$[ebp]
	jmp	??1CvMinorCivQuest@@QAE@XZ		; CvMinorCivQuest::~CvMinorCivQuest
__ehhandler$?AddQuestForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddQuestForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddQuestForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z ENDP ; CvMinorCivAI::AddQuestForPlayer
PUBLIC	?AddQuestCopyForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@PAVCvMinorCivQuest@@@Z ; CvMinorCivAI::AddQuestCopyForPlayer
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvplayerai.h
xdata$x	SEGMENT
__unwindtable$?AddQuestCopyForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@PAVCvMinorCivQuest@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddQuestCopyForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@PAVCvMinorCivQuest@@@Z$0
__ehfuncinfo$?AddQuestCopyForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@PAVCvMinorCivQuest@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddQuestCopyForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@PAVCvMinorCivQuest@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?AddQuestCopyForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@PAVCvMinorCivQuest@@@Z
_TEXT	SEGMENT
_this$ = -68						; size = 4
$T238907 = -64						; size = 4
$T238903 = -60						; size = 4
$T238902 = -56						; size = 4
$T238883 = -48						; size = 4
$T238882 = -44						; size = 4
_newQuest$ = -40					; size = 28
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
_pQuest$ = 12						; size = 4
?AddQuestCopyForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@PAVCvMinorCivQuest@@@Z PROC ; CvMinorCivAI::AddQuestCopyForPlayer, COMDAT
; _this$ = ecx

; 3082 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddQuestCopyForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@PAVCvMinorCivQuest@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 3083 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 3084 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 3085 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN3@AddQuestCo
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN4@AddQuestCo
$LN3@AddQuestCo:
	jmp	$LN5@AddQuestCo
$LN4@AddQuestCo:

; 3086 : 
; 3087 : 	CvAssertMsg(pQuest != NULL, "pQuest should not be NULL. Please send Anton your save file and version.");
; 3088 : 	if(pQuest == NULL) return;

	cmp	DWORD PTR _pQuest$[ebp], 0
	jne	SHORT $LN2@AddQuestCo
	jmp	$LN5@AddQuestCo
$LN2@AddQuestCo:

; 3089 : 
; 3090 : 	// ePlayer can only have at most one quest of each type
; 3091 : 	CvAssertMsg(!IsActiveQuestForPlayer(ePlayer, pQuest->GetType()), "ePlayer already has a quest of this type!");
; 3092 : 	if(IsActiveQuestForPlayer(ePlayer, pQuest->GetType())) return;

	mov	ecx, DWORD PTR _pQuest$[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	push	eax
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsActiveQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsActiveQuestForPlayer
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@AddQuestCo
	jmp	$LN5@AddQuestCo
$LN1@AddQuestCo:

; 3093 : 
; 3094 : 	CvMinorCivQuest newQuest(GetPlayer()->GetID(), ePlayer, pQuest->GetType());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T238882[ebp], eax
	mov	edx, DWORD PTR $T238882[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T238883[ebp], eax
	mov	ecx, DWORD PTR _pQuest$[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T238883[ebp]
	push	edx
	lea	ecx, DWORD PTR _newQuest$[ebp]
	call	??0CvMinorCivQuest@@QAE@W4PlayerTypes@@0W4MinorCivQuestTypes@@@Z ; CvMinorCivQuest::CvMinorCivQuest
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3095 : 	newQuest.DoStartQuestUsingExistingData(pQuest);

	mov	eax, DWORD PTR _pQuest$[ebp]
	push	eax
	lea	ecx, DWORD PTR _newQuest$[ebp]
	call	?DoStartQuestUsingExistingData@CvMinorCivQuest@@QAEXPAV1@@Z ; CvMinorCivQuest::DoStartQuestUsingExistingData

; 3096 : 	m_QuestsGiven[ePlayer].push_back(newQuest);

	lea	ecx, DWORD PTR _newQuest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	call	?push_back@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAEIABVCvMinorCivQuest@@@Z ; FStaticVector<CvMinorCivQuest,5,0,297,0>::push_back

; 3097 : 
; 3098 : 	// Log quest received
; 3099 : 	GET_PLAYER(ePlayer).GetDiplomacyAI()->LogMinorCivQuestReceived(GetPlayer()->GetID(), GetEffectiveFriendshipWithMajorTimes100(ePlayer), GetEffectiveFriendshipWithMajorTimes100(ePlayer), pQuest->GetType());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T238902[ebp], eax
	mov	eax, DWORD PTR $T238902[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T238903[ebp], ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T238907[ebp], edx
	mov	ecx, DWORD PTR _pQuest$[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	push	eax
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajorTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajorTimes100
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajorTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajorTimes100
	push	eax
	mov	edx, DWORD PTR $T238903[ebp]
	push	edx
	mov	ecx, DWORD PTR $T238907[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?LogMinorCivQuestReceived@CvDiplomacyAI@@QAEXW4PlayerTypes@@HHW4MinorCivQuestTypes@@@Z ; CvDiplomacyAI::LogMinorCivQuestReceived

; 3100 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newQuest$[ebp]
	call	??1CvMinorCivQuest@@QAE@XZ		; CvMinorCivQuest::~CvMinorCivQuest
$LN5@AddQuestCo:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddQuestCopyForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@PAVCvMinorCivQuest@@@Z$0:
	lea	ecx, DWORD PTR _newQuest$[ebp]
	jmp	??1CvMinorCivQuest@@QAE@XZ		; CvMinorCivQuest::~CvMinorCivQuest
__ehhandler$?AddQuestCopyForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@PAVCvMinorCivQuest@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddQuestCopyForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@PAVCvMinorCivQuest@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddQuestCopyForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@PAVCvMinorCivQuest@@@Z ENDP ; CvMinorCivAI::AddQuestCopyForPlayer
PUBLIC	??1?$_Tree_val@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::~_Tree_val<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >
PUBLIC	??1?$set@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@@std@@QAE@XZ ; std::set<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes> >::~set<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes> >
PUBLIC	?_Tidy@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Tidy
PUBLIC	?insert@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@_N@2@ABW4MinorCivQuestTypes@@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::insert
PUBLIC	?IsValidQuestCopyForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@PAVCvMinorCivQuest@@@Z ; CvMinorCivAI::IsValidQuestCopyForPlayer
PUBLIC	?find@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABW4MinorCivQuestTypes@@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::find
PUBLIC	??0?$set@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@@std@@QAE@XZ ; std::set<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes> >::set<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?DoTestQuestsOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoTestQuestsOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DoTestQuestsOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?DoTestQuestsOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$5
__ehfuncinfo$?DoTestQuestsOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?DoTestQuestsOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoTestQuestsOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -312						; size = 4
$T239055 = -152						; size = 4
$T238968 = -116						; size = 4
$T238955 = -112						; size = 4
$T238951 = -108						; size = 4
$T238947 = -104						; size = 4
$T238943 = -100						; size = 4
$T238918 = -84						; size = 8
$T238917 = -76						; size = 4
$T238916 = -72						; size = 4
_quest$223587 = -68					; size = 28
_pQuest$223588 = -40					; size = 4
_iQuestLoop$223583 = -36				; size = 4
_iPlayerLoop$223579 = -32				; size = 4
_setGlobalQuests$223577 = -28				; size = 12
_eQuestType$223578 = -16				; size = 4
__$EHRec$ = -12						; size = 12
_eMajor$ = 8						; size = 4
?DoTestQuestsOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z PROC ; CvMinorCivAI::DoTestQuestsOnFirstContact, COMDAT
; _this$ = ecx

; 3107 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoTestQuestsOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 300				; 0000012cH
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 3108 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 3109 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 3110 : 	if(eMajor < 0 || eMajor >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN12@DoTestQues
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN13@DoTestQues
$LN12@DoTestQues:
	jmp	$LN14@DoTestQues
$LN13@DoTestQues:

; 3111 : 
; 3112 : 	//antonjs: consider: make this less hacky
; 3113 : 	if(GetNumActiveGlobalQuests() > 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumActiveGlobalQuests@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetNumActiveGlobalQuests
	test	eax, eax
	jle	$LN14@DoTestQues

; 3114 : 	{
; 3115 : 		std::set<MinorCivQuestTypes> setGlobalQuests;

	lea	ecx, DWORD PTR _setGlobalQuests$223577[ebp]
	call	??0?$set@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@@std@@QAE@XZ ; std::set<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes> >::set<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3116 : 
; 3117 : 		MinorCivQuestTypes eQuestType;
; 3118 : 		for(uint iPlayerLoop = 0; iPlayerLoop < m_QuestsGiven.size(); iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$223579[ebp], 0
	jmp	SHORT $LN10@DoTestQues
$LN9@DoTestQues:
	mov	eax, DWORD PTR _iPlayerLoop$223579[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayerLoop$223579[ebp], eax
$LN10@DoTestQues:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+3332]
	mov	DWORD PTR $T238943[ebp], edx
	mov	eax, DWORD PTR _iPlayerLoop$223579[ebp]
	cmp	eax, DWORD PTR $T238943[ebp]
	jae	$LN8@DoTestQues

; 3119 : 		{
; 3120 : 			for(uint iQuestLoop = 0; iQuestLoop < m_QuestsGiven[iPlayerLoop].size(); iQuestLoop++)

	mov	DWORD PTR _iQuestLoop$223583[ebp], 0
	jmp	SHORT $LN7@DoTestQues
$LN6@DoTestQues:
	mov	ecx, DWORD PTR _iQuestLoop$223583[ebp]
	add	ecx, 1
	mov	DWORD PTR _iQuestLoop$223583[ebp], ecx
$LN7@DoTestQues:
	mov	edx, DWORD PTR _iPlayerLoop$223579[ebp]
	imul	edx, 156				; 0000009cH
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+3328]
	mov	DWORD PTR $T238947[ebp], edx
	mov	ecx, DWORD PTR $T238947[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T238951[ebp], edx
	mov	eax, DWORD PTR _iQuestLoop$223583[ebp]
	cmp	eax, DWORD PTR $T238951[ebp]
	jae	$LN5@DoTestQues

; 3121 : 			{
; 3122 : 				CvMinorCivQuest quest = m_QuestsGiven[iPlayerLoop][iQuestLoop];

	mov	ecx, DWORD PTR _iPlayerLoop$223579[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	mov	DWORD PTR $T238955[ebp], ecx
	mov	eax, DWORD PTR _iQuestLoop$223583[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR $T238955[ebp]
	mov	esi, DWORD PTR [ecx]
	add	esi, eax
	mov	ecx, 7
	lea	edi, DWORD PTR _quest$223587[ebp]
	rep movsd
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 3123 : 				CvMinorCivQuest* pQuest = &quest;

	lea	edx, DWORD PTR _quest$223587[ebp]
	mov	DWORD PTR _pQuest$223588[ebp], edx

; 3124 : 				if(!pQuest)

	cmp	DWORD PTR _pQuest$223588[ebp], 0
	jne	SHORT $LN4@DoTestQues

; 3125 : 				{
; 3126 : 					CvAssertMsg(false, "pQuest should not be NULL. Please send Anton your save file and version.");
; 3127 : 					continue;

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _quest$223587[ebp]
	call	??1CvMinorCivQuest@@QAE@XZ		; CvMinorCivQuest::~CvMinorCivQuest
	jmp	$LN6@DoTestQues
$LN4@DoTestQues:

; 3128 : 				}
; 3129 : 				eQuestType = pQuest->GetType();

	mov	ecx, DWORD PTR _pQuest$223588[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	mov	DWORD PTR _eQuestType$223578[ebp], eax

; 3130 : 				if(IsGlobalQuest(eQuestType))

	mov	eax, DWORD PTR _eQuestType$223578[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsGlobalQuest@CvMinorCivAI@@QBE_NW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsGlobalQuest
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@DoTestQues

; 3131 : 				{
; 3132 : 					// Haven't addressed this quest type yet?
; 3133 : 					if(setGlobalQuests.find(eQuestType) == setGlobalQuests.end())

	mov	edx, DWORD PTR _setGlobalQuests$223577[ebp+4]
	mov	DWORD PTR $T238968[ebp], edx
	mov	eax, DWORD PTR $T238968[ebp]
	mov	DWORD PTR $T238917[ebp], eax
	lea	ecx, DWORD PTR _eQuestType$223578[ebp]
	push	ecx
	lea	edx, DWORD PTR $T238916[ebp]
	push	edx
	lea	ecx, DWORD PTR _setGlobalQuests$223577[ebp]
	call	?find@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABW4MinorCivQuestTypes@@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::find
	mov	DWORD PTR $T239055[ebp], eax
	mov	eax, DWORD PTR $T239055[ebp]
	mov	ecx, DWORD PTR [eax]
	xor	edx, edx
	cmp	ecx, DWORD PTR $T238917[ebp]
	sete	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN3@DoTestQues

; 3134 : 					{
; 3135 : 						// Can we give a copy of this quest to this player?
; 3136 : 						if(IsValidQuestCopyForPlayer(eMajor, pQuest))

	mov	ecx, DWORD PTR _pQuest$223588[ebp]
	push	ecx
	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsValidQuestCopyForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@PAVCvMinorCivQuest@@@Z ; CvMinorCivAI::IsValidQuestCopyForPlayer
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@DoTestQues

; 3137 : 						{
; 3138 : 							AddQuestCopyForPlayer(eMajor, pQuest);

	mov	ecx, DWORD PTR _pQuest$223588[ebp]
	push	ecx
	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddQuestCopyForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@PAVCvMinorCivQuest@@@Z ; CvMinorCivAI::AddQuestCopyForPlayer

; 3139 : 							setGlobalQuests.insert(eQuestType);

	lea	eax, DWORD PTR _eQuestType$223578[ebp]
	push	eax
	lea	ecx, DWORD PTR $T238918[ebp]
	push	ecx
	lea	ecx, DWORD PTR _setGlobalQuests$223577[ebp]
	call	?insert@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@_N@2@ABW4MinorCivQuestTypes@@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::insert
$LN3@DoTestQues:

; 3140 : 						}
; 3141 : 					}
; 3142 : 				}
; 3143 : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _quest$223587[ebp]
	call	??1CvMinorCivQuest@@QAE@XZ		; CvMinorCivQuest::~CvMinorCivQuest
	jmp	$LN6@DoTestQues
$LN5@DoTestQues:

; 3144 : 		}

	jmp	$LN9@DoTestQues
$LN8@DoTestQues:

; 3145 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _setGlobalQuests$223577[ebp]
	call	?_Tidy@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1
$LN14@DoTestQues:

; 3146 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoTestQuestsOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$0:
	lea	ecx, DWORD PTR _setGlobalQuests$223577[ebp]
	jmp	??1?$set@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@@std@@QAE@XZ
__unwindfunclet$?DoTestQuestsOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$1:
	lea	ecx, DWORD PTR _quest$223587[ebp]
	jmp	??1CvMinorCivQuest@@QAE@XZ		; CvMinorCivQuest::~CvMinorCivQuest
__unwindfunclet$?DoTestQuestsOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$5:
	lea	ecx, DWORD PTR _setGlobalQuests$223577[ebp]
	jmp	??1?$_Tree_val@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE@XZ
__ehhandler$?DoTestQuestsOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-312]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoTestQuestsOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoTestQuestsOnFirstContact@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::DoTestQuestsOnFirstContact
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$set@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$set@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@@std@@QAE@XZ$1
__ehfuncinfo$??1?$set@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$set@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$set@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -100						; size = 4
__$EHRec$ = -12						; size = 12
??1?$set@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@@std@@QAE@XZ PROC ; std::set<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes> >::~set<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$set@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$set@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@@std@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_val@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE@XZ
__ehhandler$??1?$set@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$set@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$set@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@@std@@QAE@XZ ENDP ; std::set<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes> >::~set<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes> >
PUBLIC	?DoObsoleteQuests@CvMinorCivAI@@QAEXXZ		; CvMinorCivAI::DoObsoleteQuests
PUBLIC	?DoCompletedQuests@CvMinorCivAI@@QAEXXZ		; CvMinorCivAI::DoCompletedQuests
; Function compile flags: /Odtp
;	COMDAT ?DoTestActiveQuests@CvMinorCivAI@@QAEX_N0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bTestComplete$ = 8					; size = 1
_bTestObsolete$ = 12					; size = 1
?DoTestActiveQuests@CvMinorCivAI@@QAEX_N0@Z PROC	; CvMinorCivAI::DoTestActiveQuests, COMDAT
; _this$ = ecx

; 3150 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3151 : 	if (bTestComplete)

	movzx	eax, BYTE PTR _bTestComplete$[ebp]
	test	eax, eax
	je	SHORT $LN2@DoTestActi

; 3152 : 		DoCompletedQuests();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoCompletedQuests@CvMinorCivAI@@QAEXXZ	; CvMinorCivAI::DoCompletedQuests
$LN2@DoTestActi:

; 3153 : 	
; 3154 : 	if (bTestObsolete)

	movzx	ecx, BYTE PTR _bTestObsolete$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@DoTestActi

; 3155 : 		DoObsoleteQuests();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoObsoleteQuests@CvMinorCivAI@@QAEXXZ	; CvMinorCivAI::DoObsoleteQuests
$LN3@DoTestActi:

; 3156 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?DoTestActiveQuests@CvMinorCivAI@@QAEX_N0@Z ENDP	; CvMinorCivAI::DoTestActiveQuests
_TEXT	ENDS
PUBLIC	?DoObsoleteQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::DoObsoleteQuestsForPlayer
PUBLIC	?DoCompletedQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::DoCompletedQuestsForPlayer
PUBLIC	?DoTestActiveQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@_N1W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::DoTestActiveQuestsForPlayer
; Function compile flags: /Odtp
;	COMDAT ?DoTestActiveQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@_N1W4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
_bTestComplete$ = 12					; size = 1
_bTestObsolete$ = 16					; size = 1
_eQuest$ = 20						; size = 4
?DoTestActiveQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@_N1W4MinorCivQuestTypes@@@Z PROC ; CvMinorCivAI::DoTestActiveQuestsForPlayer, COMDAT
; _this$ = ecx

; 3161 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3162 : 	if (bTestComplete)

	movzx	eax, BYTE PTR _bTestComplete$[ebp]
	test	eax, eax
	je	SHORT $LN2@DoTestActi@2

; 3163 : 		DoCompletedQuestsForPlayer(ePlayer, eQuest);

	mov	ecx, DWORD PTR _eQuest$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoCompletedQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::DoCompletedQuestsForPlayer
$LN2@DoTestActi@2:

; 3164 : 	
; 3165 : 	if (bTestObsolete)

	movzx	eax, BYTE PTR _bTestObsolete$[ebp]
	test	eax, eax
	je	SHORT $LN3@DoTestActi@2

; 3166 : 		DoObsoleteQuestsForPlayer(ePlayer, eQuest);

	mov	ecx, DWORD PTR _eQuest$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoObsoleteQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::DoObsoleteQuestsForPlayer
$LN3@DoTestActi@2:

; 3167 : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?DoTestActiveQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@_N1W4MinorCivQuestTypes@@@Z ENDP ; CvMinorCivAI::DoTestActiveQuestsForPlayer
_TEXT	ENDS
PUBLIC	??1?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@QAE@XZ ; CvWeightedVector<enum PlayerTypes,64,1>::~CvWeightedVector<enum PlayerTypes,64,1>
PUBLIC	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>::~FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>
PUBLIC	?CalculateFriendshipFromQuests@CvMinorCivAI@@QAE?AV?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@XZ ; CvMinorCivAI::CalculateFriendshipFromQuests
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?DoCompletedQuests@CvMinorCivAI@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoCompletedQuests@CvMinorCivAI@@QAEXXZ$0
__ehfuncinfo$?DoCompletedQuests@CvMinorCivAI@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DoCompletedQuests@CvMinorCivAI@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoCompletedQuests@CvMinorCivAI@@QAEXXZ
_TEXT	SEGMENT
_this$ = -576						; size = 4
$T239754 = -560						; size = 4
_eMajor$223956 = -556					; size = 4
_iMajorIndex$223952 = -552				; size = 4
_vePlayers$ = -548					; size = 528
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?DoCompletedQuests@CvMinorCivAI@@QAEXXZ PROC		; CvMinorCivAI::DoCompletedQuests, COMDAT
; _this$ = ecx

; 3171 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoCompletedQuests@CvMinorCivAI@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 564				; 00000234H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 3172 : 	WeightedCivsList vePlayers = CalculateFriendshipFromQuests();

	lea	eax, DWORD PTR _vePlayers$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CalculateFriendshipFromQuests@CvMinorCivAI@@QAE?AV?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@XZ ; CvMinorCivAI::CalculateFriendshipFromQuests
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3173 : 
; 3174 : 	// Resolve quests starting with player that will end up with most influence, to avoid multiple ally swaps and awkward war declarations
; 3175 : 	for (int iMajorIndex = 0; iMajorIndex < vePlayers.size(); iMajorIndex++)

	mov	DWORD PTR _iMajorIndex$223952[ebp], 0
	jmp	SHORT $LN3@DoComplete
$LN2@DoComplete:
	mov	ecx, DWORD PTR _iMajorIndex$223952[ebp]
	add	ecx, 1
	mov	DWORD PTR _iMajorIndex$223952[ebp], ecx
$LN3@DoComplete:
	mov	edx, DWORD PTR _vePlayers$[ebp+4]
	mov	DWORD PTR $T239754[ebp], edx
	mov	eax, DWORD PTR _iMajorIndex$223952[ebp]
	cmp	eax, DWORD PTR $T239754[ebp]
	jge	SHORT $LN1@DoComplete

; 3176 : 	{
; 3177 : 		PlayerTypes eMajor = vePlayers.GetElement(iMajorIndex);

	mov	ecx, DWORD PTR _iMajorIndex$223952[ebp]
	mov	edx, DWORD PTR _vePlayers$[ebp]
	mov	eax, DWORD PTR [edx+ecx*8]
	mov	DWORD PTR _eMajor$223956[ebp], eax

; 3178 : 		DoCompletedQuestsForPlayer(eMajor);

	push	-1
	mov	ecx, DWORD PTR _eMajor$223956[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoCompletedQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::DoCompletedQuestsForPlayer

; 3179 : 	}

	jmp	SHORT $LN2@DoComplete
$LN1@DoComplete:

; 3180 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _vePlayers$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>::~FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoCompletedQuests@CvMinorCivAI@@QAEXXZ$0:
	lea	ecx, DWORD PTR _vePlayers$[ebp]
	jmp	??1?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@QAE@XZ ; CvWeightedVector<enum PlayerTypes,64,1>::~CvWeightedVector<enum PlayerTypes,64,1>
__ehhandler$?DoCompletedQuests@CvMinorCivAI@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-568]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoCompletedQuests@CvMinorCivAI@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoCompletedQuests@CvMinorCivAI@@QAEXXZ ENDP		; CvMinorCivAI::DoCompletedQuests
PUBLIC	??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@ABV0@@Z ; FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>::FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>
PUBLIC	?SortItems@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@QAEXXZ ; CvWeightedVector<enum PlayerTypes,64,1>::SortItems
PUBLIC	?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@Z ; FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>::push_back
PUBLIC	??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>::FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?CalculateFriendshipFromQuests@CvMinorCivAI@@QAE?AV?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CalculateFriendshipFromQuests@CvMinorCivAI@@QAE?AV?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?CalculateFriendshipFromQuests@CvMinorCivAI@@QAE?AV?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@XZ$0
__ehfuncinfo$?CalculateFriendshipFromQuests@CvMinorCivAI@@QAE?AV?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CalculateFriendshipFromQuests@CvMinorCivAI@@QAE?AV?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?CalculateFriendshipFromQuests@CvMinorCivAI@@QAE?AV?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@XZ
_TEXT	SEGMENT
_this$ = -644						; size = 4
_weightedElem$239855 = -592				; size = 8
$T239837 = -584						; size = 4
$T239830 = -580						; size = 4
$T239823 = -576						; size = 4
$T239809 = -572						; size = 4
_itr_quest$223970 = -568				; size = 4
_eMajorLoop$223966 = -564				; size = 4
_iWeight$223975 = -560					; size = 4
_iInfTimes100$223968 = -556				; size = 4
_iMajorLoop$223962 = -552				; size = 4
_vePlayerInfluences$ = -548				; size = 528
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?CalculateFriendshipFromQuests@CvMinorCivAI@@QAE?AV?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@XZ PROC ; CvMinorCivAI::CalculateFriendshipFromQuests, COMDAT
; _this$ = ecx

; 3185 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CalculateFriendshipFromQuests@CvMinorCivAI@@QAE?AV?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 632				; 00000278H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T239809[ebp], 0

; 3186 : 	WeightedCivsList vePlayerInfluences;

	lea	ecx, DWORD PTR _vePlayerInfluences$[ebp]
	call	??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>::FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 3187 : 	for (int iMajorLoop = 0; iMajorLoop < MAX_MAJOR_CIVS; iMajorLoop++)

	mov	DWORD PTR _iMajorLoop$223962[ebp], 0
	jmp	SHORT $LN8@CalculateF
$LN7@CalculateF:
	mov	eax, DWORD PTR _iMajorLoop$223962[ebp]
	add	eax, 1
	mov	DWORD PTR _iMajorLoop$223962[ebp], eax
$LN8@CalculateF:
	cmp	DWORD PTR _iMajorLoop$223962[ebp], 22	; 00000016H
	jge	$LN6@CalculateF

; 3188 : 	{
; 3189 : 		PlayerTypes eMajorLoop = (PlayerTypes) iMajorLoop;

	mov	ecx, DWORD PTR _iMajorLoop$223962[ebp]
	mov	DWORD PTR _eMajorLoop$223966[ebp], ecx

; 3190 : 		int iInfTimes100 = GetEffectiveFriendshipWithMajorTimes100(eMajorLoop);

	mov	edx, DWORD PTR _eMajorLoop$223966[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajorTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajorTimes100
	mov	DWORD PTR _iInfTimes100$223968[ebp], eax

; 3191 : 		if (IsHasMetPlayer(eMajorLoop) && !IsAtWarWithPlayersTeam(eMajorLoop))

	mov	eax, DWORD PTR _eMajorLoop$223966[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsHasMetPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsHasMetPlayer
	movzx	ecx, al
	test	ecx, ecx
	je	$LN5@CalculateF
	mov	edx, DWORD PTR _eMajorLoop$223966[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAtWarWithPlayersTeam@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAtWarWithPlayersTeam
	movzx	eax, al
	test	eax, eax
	jne	$LN5@CalculateF

; 3192 : 		{
; 3193 : 			QuestListForPlayer::iterator itr_quest;
; 3194 : 			for (itr_quest = m_QuestsGiven[eMajorLoop].begin(); itr_quest != m_QuestsGiven[eMajorLoop].end(); itr_quest++)

	mov	ecx, DWORD PTR _eMajorLoop$223966[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	mov	DWORD PTR $T239823[ebp], ecx
	mov	eax, DWORD PTR $T239823[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _itr_quest$223970[ebp], ecx
	jmp	SHORT $LN4@CalculateF
$LN3@CalculateF:
	mov	edx, DWORD PTR _itr_quest$223970[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR _itr_quest$223970[ebp], edx
$LN4@CalculateF:
	mov	eax, DWORD PTR _eMajorLoop$223966[ebp]
	imul	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+3328]
	mov	DWORD PTR $T239830[ebp], eax
	mov	edx, DWORD PTR $T239830[ebp]
	mov	eax, DWORD PTR [edx+4]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR $T239830[ebp]
	add	eax, DWORD PTR [ecx]
	cmp	DWORD PTR _itr_quest$223970[ebp], eax
	je	SHORT $LN5@CalculateF

; 3195 : 			{
; 3196 : 				if (itr_quest->IsComplete())

	mov	ecx, DWORD PTR _itr_quest$223970[ebp]
	call	?IsComplete@CvMinorCivQuest@@QAE_NXZ	; CvMinorCivQuest::IsComplete
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@CalculateF

; 3197 : 				{
; 3198 : 					iInfTimes100 += (itr_quest->GetInfluenceReward() * 100);

	mov	ecx, DWORD PTR _itr_quest$223970[ebp]
	call	?GetInfluenceReward@CvMinorCivQuest@@QBEHXZ ; CvMinorCivQuest::GetInfluenceReward
	imul	eax, 100				; 00000064H
	add	eax, DWORD PTR _iInfTimes100$223968[ebp]
	mov	DWORD PTR _iInfTimes100$223968[ebp], eax
$LN1@CalculateF:

; 3199 : 				}
; 3200 : 			}

	jmp	SHORT $LN3@CalculateF
$LN5@CalculateF:

; 3201 : 		}
; 3202 : 		int iWeight = iInfTimes100 + abs(GC.getMINOR_FRIENDSHIP_AT_WAR() * 100); // Weights cannot be negative, so shift all values up by minimum influence amount

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2768
	mov	DWORD PTR $T239837[ebp], eax
	mov	eax, DWORD PTR $T239837[ebp]
	imul	eax, 100				; 00000064H
	cdq
	xor	eax, edx
	sub	eax, edx
	add	eax, DWORD PTR _iInfTimes100$223968[ebp]
	mov	DWORD PTR _iWeight$223975[ebp], eax

; 3203 : 		vePlayerInfluences.push_back(eMajorLoop, iWeight);

	mov	DWORD PTR _weightedElem$239855[ebp], 0
	mov	DWORD PTR _weightedElem$239855[ebp+4], 0
	mov	ecx, DWORD PTR _eMajorLoop$223966[ebp]
	mov	DWORD PTR _weightedElem$239855[ebp], ecx
	mov	edx, DWORD PTR _iWeight$223975[ebp]
	mov	DWORD PTR _weightedElem$239855[ebp+4], edx
	lea	eax, DWORD PTR _weightedElem$239855[ebp]
	push	eax
	lea	ecx, DWORD PTR _vePlayerInfluences$[ebp]
	call	?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@Z ; FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>::push_back

; 3204 : 	}

	jmp	$LN7@CalculateF
$LN6@CalculateF:

; 3205 : 
; 3206 : 	vePlayerInfluences.SortItems();

	lea	ecx, DWORD PTR _vePlayerInfluences$[ebp]
	call	?SortItems@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@QAEXXZ ; CvWeightedVector<enum PlayerTypes,64,1>::SortItems

; 3207 : 	return vePlayerInfluences;

	lea	ecx, DWORD PTR _vePlayerInfluences$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@ABV0@@Z ; FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>::FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>
	mov	edx, DWORD PTR $T239809[ebp]
	or	edx, 1
	mov	DWORD PTR $T239809[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _vePlayerInfluences$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>::~FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 3208 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CalculateFriendshipFromQuests@CvMinorCivAI@@QAE?AV?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@XZ$0:
	lea	ecx, DWORD PTR _vePlayerInfluences$[ebp]
	jmp	??1?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@QAE@XZ ; CvWeightedVector<enum PlayerTypes,64,1>::~CvWeightedVector<enum PlayerTypes,64,1>
__unwindfunclet$?CalculateFriendshipFromQuests@CvMinorCivAI@@QAE?AV?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@XZ$1:
	mov	eax, DWORD PTR $T239809[ebp]
	and	eax, 1
	je	$LN13@CalculateF
	and	DWORD PTR $T239809[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@QAE@XZ ; CvWeightedVector<enum PlayerTypes,64,1>::~CvWeightedVector<enum PlayerTypes,64,1>
$LN13@CalculateF:
	ret	0
__ehhandler$?CalculateFriendshipFromQuests@CvMinorCivAI@@QAE?AV?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-636]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CalculateFriendshipFromQuests@CvMinorCivAI@@QAE?AV?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?CalculateFriendshipFromQuests@CvMinorCivAI@@QAE?AV?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@XZ ENDP ; CvMinorCivAI::CalculateFriendshipFromQuests
EXTRN	?LogMinorCivQuestFinished@CvDiplomacyAI@@QAEXW4PlayerTypes@@HHW4MinorCivQuestTypes@@@Z:PROC ; CvDiplomacyAI::LogMinorCivQuestFinished
; Function compile flags: /Odtp
;	COMDAT ?DoCompletedQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
_this$ = -40						; size = 4
$T239965 = -36						; size = 4
$T239961 = -32						; size = 4
$T239960 = -28						; size = 4
$T239948 = -24						; size = 4
$T239941 = -20						; size = 4
_iNewFriendshipTimes100$223997 = -16			; size = 4
_iOldFriendshipTimes100$223995 = -12			; size = 4
_bCompleted$223996 = -6					; size = 1
_bCheckAllQuests$ = -5					; size = 1
_itr_quest$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
_eSpecifyQuestType$ = 12				; size = 4
?DoCompletedQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z PROC ; CvMinorCivAI::DoCompletedQuestsForPlayer, COMDAT
; _this$ = ecx

; 3213 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	DWORD PTR _this$[ebp], ecx

; 3214 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 3215 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 3216 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN9@DoComplete@2
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN10@DoComplete@2
$LN9@DoComplete@2:
	jmp	$LN11@DoComplete@2
$LN10@DoComplete@2:

; 3217 : 
; 3218 : 	bool bCheckAllQuests = true;

	mov	BYTE PTR _bCheckAllQuests$[ebp], 1

; 3219 : 	if (eSpecifyQuestType > NO_MINOR_CIV_QUEST_TYPE && eSpecifyQuestType < NUM_MINOR_CIV_QUEST_TYPES)

	cmp	DWORD PTR _eSpecifyQuestType$[ebp], -1
	jle	SHORT $LN8@DoComplete@2
	cmp	DWORD PTR _eSpecifyQuestType$[ebp], 18	; 00000012H
	jge	SHORT $LN8@DoComplete@2

; 3220 : 		bCheckAllQuests = false;

	mov	BYTE PTR _bCheckAllQuests$[ebp], 0
$LN8@DoComplete@2:

; 3221 : 
; 3222 : 	QuestListForPlayer::iterator itr_quest;
; 3223 : 	for (itr_quest = m_QuestsGiven[ePlayer].begin(); itr_quest != m_QuestsGiven[ePlayer].end(); itr_quest++)

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+3328]
	mov	DWORD PTR $T239941[ebp], eax
	mov	edx, DWORD PTR $T239941[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _itr_quest$[ebp], eax
	jmp	SHORT $LN7@DoComplete@2
$LN6@DoComplete@2:
	mov	ecx, DWORD PTR _itr_quest$[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR _itr_quest$[ebp], ecx
$LN7@DoComplete@2:
	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 156				; 0000009cH
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+3328]
	mov	DWORD PTR $T239948[ebp], edx
	mov	ecx, DWORD PTR $T239948[ebp]
	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR $T239948[ebp]
	add	edx, DWORD PTR [eax]
	cmp	DWORD PTR _itr_quest$[ebp], edx
	je	$LN11@DoComplete@2

; 3224 : 	{
; 3225 : 		if (bCheckAllQuests || itr_quest->GetType() == eSpecifyQuestType)

	movzx	ecx, BYTE PTR _bCheckAllQuests$[ebp]
	test	ecx, ecx
	jne	SHORT $LN3@DoComplete@2
	mov	ecx, DWORD PTR _itr_quest$[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	cmp	eax, DWORD PTR _eSpecifyQuestType$[ebp]
	jne	$LN4@DoComplete@2
$LN3@DoComplete@2:

; 3226 : 		{
; 3227 : 			if (itr_quest->IsComplete())

	mov	ecx, DWORD PTR _itr_quest$[ebp]
	call	?IsComplete@CvMinorCivQuest@@QAE_NXZ	; CvMinorCivQuest::IsComplete
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@DoComplete@2

; 3228 : 			{
; 3229 : 				int iOldFriendshipTimes100 = GetEffectiveFriendshipWithMajorTimes100(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajorTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajorTimes100
	mov	DWORD PTR _iOldFriendshipTimes100$223995[ebp], eax

; 3230 : 				bool bCompleted = itr_quest->DoFinishQuest();

	mov	ecx, DWORD PTR _itr_quest$[ebp]
	call	?DoFinishQuest@CvMinorCivQuest@@QAE_NXZ	; CvMinorCivQuest::DoFinishQuest
	mov	BYTE PTR _bCompleted$223996[ebp], al

; 3231 : 				int iNewFriendshipTimes100 = GetEffectiveFriendshipWithMajorTimes100(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajorTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajorTimes100
	mov	DWORD PTR _iNewFriendshipTimes100$223997[ebp], eax

; 3232 : 				
; 3233 : 				if (bCompleted)

	movzx	edx, BYTE PTR _bCompleted$223996[ebp]
	test	edx, edx
	je	SHORT $LN4@DoComplete@2

; 3234 : 				{
; 3235 : 					GET_PLAYER(ePlayer).GetDiplomacyAI()->LogMinorCivQuestFinished(GetPlayer()->GetID(), iOldFriendshipTimes100, iNewFriendshipTimes100, itr_quest->GetType());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T239960[ebp], eax
	mov	eax, DWORD PTR $T239960[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T239961[ebp], ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T239965[ebp], edx
	mov	ecx, DWORD PTR _itr_quest$[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	push	eax
	mov	eax, DWORD PTR _iNewFriendshipTimes100$223997[ebp]
	push	eax
	mov	ecx, DWORD PTR _iOldFriendshipTimes100$223995[ebp]
	push	ecx
	mov	edx, DWORD PTR $T239961[ebp]
	push	edx
	mov	ecx, DWORD PTR $T239965[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?LogMinorCivQuestFinished@CvDiplomacyAI@@QAEXW4PlayerTypes@@HHW4MinorCivQuestTypes@@@Z ; CvDiplomacyAI::LogMinorCivQuestFinished
$LN4@DoComplete@2:

; 3236 : 				}
; 3237 : 			}
; 3238 : 		}

	jmp	$LN6@DoComplete@2
$LN11@DoComplete@2:

; 3239 : 	}
; 3240 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?DoCompletedQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ENDP ; CvMinorCivAI::DoCompletedQuestsForPlayer
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?DoObsoleteQuests@CvMinorCivAI@@QAEXXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_eMajorLoop$224006 = -8					; size = 4
_iMajorLoop$224002 = -4					; size = 4
?DoObsoleteQuests@CvMinorCivAI@@QAEXXZ PROC		; CvMinorCivAI::DoObsoleteQuests, COMDAT
; _this$ = ecx

; 3244 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 3245 : 	for (int iMajorLoop = 0; iMajorLoop < MAX_MAJOR_CIVS; iMajorLoop++)

	mov	DWORD PTR _iMajorLoop$224002[ebp], 0
	jmp	SHORT $LN3@DoObsolete
$LN2@DoObsolete:
	mov	eax, DWORD PTR _iMajorLoop$224002[ebp]
	add	eax, 1
	mov	DWORD PTR _iMajorLoop$224002[ebp], eax
$LN3@DoObsolete:
	cmp	DWORD PTR _iMajorLoop$224002[ebp], 22	; 00000016H
	jge	SHORT $LN4@DoObsolete

; 3246 : 	{
; 3247 : 		PlayerTypes eMajorLoop = (PlayerTypes) iMajorLoop;

	mov	ecx, DWORD PTR _iMajorLoop$224002[ebp]
	mov	DWORD PTR _eMajorLoop$224006[ebp], ecx

; 3248 : 		DoObsoleteQuestsForPlayer(eMajorLoop);

	push	-1
	mov	edx, DWORD PTR _eMajorLoop$224006[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoObsoleteQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::DoObsoleteQuestsForPlayer
	jmp	SHORT $LN2@DoObsolete
$LN4@DoObsolete:

; 3249 : 	}
; 3250 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoObsoleteQuests@CvMinorCivAI@@QAEXXZ ENDP		; CvMinorCivAI::DoObsoleteQuests
_TEXT	ENDS
PUBLIC	??_C@_0DB@KABOKPCG@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ ; `string'
PUBLIC	??_C@_0CJ@KFBFCBL@TXT_KEY_NOTIFICATION_QUEST_ENDED@ ; `string'
EXTRN	?LogMinorCivQuestCancelled@CvDiplomacyAI@@QAEXW4PlayerTypes@@HHW4MinorCivQuestTypes@@@Z:PROC ; CvDiplomacyAI::LogMinorCivQuestCancelled
;	COMDAT ??_C@_0DB@KABOKPCG@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0DB@KABOKPCG@TXT_KEY_NOTIFICATION_SUMMARY_QUE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_QUEST_ENDED_REVOKED', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@KFBFCBL@TXT_KEY_NOTIFICATION_QUEST_ENDED@
CONST	SEGMENT
??_C@_0CJ@KFBFCBL@TXT_KEY_NOTIFICATION_QUEST_ENDED@ DB 'TXT_KEY_NOTIFICAT'
	DB	'ION_QUEST_ENDED_REVOKED', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DoObsoleteQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoObsoleteQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DoObsoleteQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?DoObsoleteQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z$2
__ehfuncinfo$?DoObsoleteQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?DoObsoleteQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoObsoleteQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
tv240 = -268						; size = 4
tv264 = -264						; size = 4
tv237 = -260						; size = 4
tv251 = -256						; size = 4
_this$ = -252						; size = 4
$T240025 = -248						; size = 4
$T240024 = -244						; size = 4
$T240015 = -240						; size = 4
$T240014 = -236						; size = 4
$T240005 = -232						; size = 4
$T240001 = -228						; size = 4
$T240000 = -224						; size = 4
$T239988 = -220						; size = 4
$T239981 = -216						; size = 4
$T239973 = -212						; size = 4
$T239972 = -208						; size = 4
$T239971 = -204						; size = 4
$T239970 = -200						; size = 4
_strMessage$224031 = -196				; size = 80
_strSummary$224034 = -116				; size = 80
_iNewFriendshipTimes100$224027 = -36			; size = 4
_bCancelled$224026 = -29				; size = 1
_iOldFriendshipTimes100$224025 = -28			; size = 4
_bCheckAllQuests$ = -21					; size = 1
_itr_quest$ = -20					; size = 4
_bQuestRevokedFromBullying$ = -13			; size = 1
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
_eSpecifyQuestType$ = 12				; size = 4
?DoObsoleteQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z PROC ; CvMinorCivAI::DoObsoleteQuestsForPlayer, COMDAT
; _this$ = ecx

; 3255 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoObsoleteQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 3256 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 3257 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 3258 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN11@DoObsolete@2
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN12@DoObsolete@2
$LN11@DoObsolete@2:
	jmp	$LN13@DoObsolete@2
$LN12@DoObsolete@2:

; 3259 : 
; 3260 : 	bool bCheckAllQuests = true;

	mov	BYTE PTR _bCheckAllQuests$[ebp], 1

; 3261 : 	if (eSpecifyQuestType > NO_MINOR_CIV_QUEST_TYPE && eSpecifyQuestType < NUM_MINOR_CIV_QUEST_TYPES)

	cmp	DWORD PTR _eSpecifyQuestType$[ebp], -1
	jle	SHORT $LN10@DoObsolete@2
	cmp	DWORD PTR _eSpecifyQuestType$[ebp], 18	; 00000012H
	jge	SHORT $LN10@DoObsolete@2

; 3262 : 		bCheckAllQuests = false;

	mov	BYTE PTR _bCheckAllQuests$[ebp], 0
$LN10@DoObsolete@2:

; 3263 : 
; 3264 : 	bool bQuestRevokedFromBullying = false;

	mov	BYTE PTR _bQuestRevokedFromBullying$[ebp], 0

; 3265 : 
; 3266 : 	QuestListForPlayer::iterator itr_quest;
; 3267 : 	for(itr_quest = m_QuestsGiven[ePlayer].begin(); itr_quest != m_QuestsGiven[ePlayer].end(); itr_quest++)

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+3328]
	mov	DWORD PTR $T239981[ebp], eax
	mov	edx, DWORD PTR $T239981[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _itr_quest$[ebp], eax
	jmp	SHORT $LN9@DoObsolete@2
$LN8@DoObsolete@2:
	mov	ecx, DWORD PTR _itr_quest$[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR _itr_quest$[ebp], ecx
$LN9@DoObsolete@2:
	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 156				; 0000009cH
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+3328]
	mov	DWORD PTR $T239988[ebp], edx
	mov	ecx, DWORD PTR $T239988[ebp]
	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR $T239988[ebp]
	add	edx, DWORD PTR [eax]
	cmp	DWORD PTR _itr_quest$[ebp], edx
	je	$LN7@DoObsolete@2

; 3268 : 	{
; 3269 : 		if(bCheckAllQuests || itr_quest->GetType() == eSpecifyQuestType)

	movzx	ecx, BYTE PTR _bCheckAllQuests$[ebp]
	test	ecx, ecx
	jne	SHORT $LN5@DoObsolete@2
	mov	ecx, DWORD PTR _itr_quest$[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	cmp	eax, DWORD PTR _eSpecifyQuestType$[ebp]
	jne	$LN6@DoObsolete@2
$LN5@DoObsolete@2:

; 3270 : 		{
; 3271 : 			if(itr_quest->IsObsolete())

	mov	ecx, DWORD PTR _itr_quest$[ebp]
	call	?IsObsolete@CvMinorCivQuest@@QAE_NXZ	; CvMinorCivQuest::IsObsolete
	movzx	edx, al
	test	edx, edx
	je	$LN6@DoObsolete@2

; 3272 : 			{
; 3273 : 				int iOldFriendshipTimes100 = GetEffectiveFriendshipWithMajorTimes100(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajorTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajorTimes100
	mov	DWORD PTR _iOldFriendshipTimes100$224025[ebp], eax

; 3274 : 				bool bCancelled = itr_quest->DoCancelQuest();

	mov	ecx, DWORD PTR _itr_quest$[ebp]
	call	?DoCancelQuest@CvMinorCivQuest@@QAE_NXZ	; CvMinorCivQuest::DoCancelQuest
	mov	BYTE PTR _bCancelled$224026[ebp], al

; 3275 : 				int iNewFriendshipTimes100 = GetEffectiveFriendshipWithMajorTimes100(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajorTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajorTimes100
	mov	DWORD PTR _iNewFriendshipTimes100$224027[ebp], eax

; 3276 : 				
; 3277 : 				if (bCancelled)

	movzx	edx, BYTE PTR _bCancelled$224026[ebp]
	test	edx, edx
	je	SHORT $LN6@DoObsolete@2

; 3278 : 				{
; 3279 : 					if(itr_quest->IsRevoked())

	mov	ecx, DWORD PTR _itr_quest$[ebp]
	call	?IsRevoked@CvMinorCivQuest@@QAE_NXZ	; CvMinorCivQuest::IsRevoked
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@DoObsolete@2

; 3280 : 						bQuestRevokedFromBullying = true;

	mov	BYTE PTR _bQuestRevokedFromBullying$[ebp], 1
$LN2@DoObsolete@2:

; 3281 : 
; 3282 : 					GET_PLAYER(ePlayer).GetDiplomacyAI()->LogMinorCivQuestCancelled(GetPlayer()->GetID(), iOldFriendshipTimes100, iNewFriendshipTimes100, itr_quest->GetType());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T240000[ebp], eax
	mov	ecx, DWORD PTR $T240000[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T240001[ebp], edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T240005[ebp], eax
	mov	ecx, DWORD PTR _itr_quest$[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	push	eax
	mov	ecx, DWORD PTR _iNewFriendshipTimes100$224027[ebp]
	push	ecx
	mov	edx, DWORD PTR _iOldFriendshipTimes100$224025[ebp]
	push	edx
	mov	eax, DWORD PTR $T240001[ebp]
	push	eax
	mov	ecx, DWORD PTR $T240005[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?LogMinorCivQuestCancelled@CvDiplomacyAI@@QAEXW4PlayerTypes@@HHW4MinorCivQuestTypes@@@Z ; CvDiplomacyAI::LogMinorCivQuestCancelled
$LN6@DoObsolete@2:

; 3283 : 				}
; 3284 : 			}
; 3285 : 		}
; 3286 : 	}

	jmp	$LN8@DoObsolete@2
$LN7@DoObsolete@2:

; 3287 : 
; 3288 : 	// If quest(s) were revoked because of bullying, send out a notification
; 3289 : 	if(bQuestRevokedFromBullying)

	movzx	ecx, BYTE PTR _bQuestRevokedFromBullying$[ebp]
	test	ecx, ecx
	je	$LN13@DoObsolete@2

; 3290 : 	{
; 3291 : 		Localization::String strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_QUEST_ENDED_REVOKED");

	push	OFFSET ??_C@_0CJ@KFBFCBL@TXT_KEY_NOTIFICATION_QUEST_ENDED@
	lea	edx, DWORD PTR _strMessage$224031[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3292 : 		Localization::String strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_QUEST_ENDED_REVOKED");

	push	OFFSET ??_C@_0DB@KABOKPCG@TXT_KEY_NOTIFICATION_SUMMARY_QUE@
	lea	eax, DWORD PTR _strSummary$224034[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 3293 : 		strMessage << GetPlayer()->getNameKey();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T239970[ebp], eax
	lea	ecx, DWORD PTR $T239970[ebp]
	push	ecx
	lea	edx, DWORD PTR _strMessage$224031[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 3294 : 		strSummary << GetPlayer()->getNameKey();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T239971[ebp], eax
	lea	eax, DWORD PTR $T239971[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$224034[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 3295 : 		AddQuestNotification(strMessage.toUTF8(), strSummary.toUTF8(), ePlayer);

	push	0
	push	-1
	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$224034[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T240015[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T239972[ebp], esp
	mov	DWORD PTR $T240014[ebp], eax
	cmp	DWORD PTR $T240015[ebp], 0
	je	SHORT $LN35@DoObsolete@2
	mov	ecx, DWORD PTR $T240015[ebp]
	mov	DWORD PTR tv251[ebp], ecx
	jmp	SHORT $LN36@DoObsolete@2
$LN35@DoObsolete@2:
	mov	DWORD PTR tv251[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN36@DoObsolete@2:
	mov	edx, DWORD PTR tv251[ebp]
	push	edx
	mov	ecx, DWORD PTR $T240014[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR $T240014[ebp]
	mov	DWORD PTR tv237[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _strMessage$224031[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T240025[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T239973[ebp], esp
	mov	DWORD PTR $T240024[ebp], ecx
	cmp	DWORD PTR $T240025[ebp], 0
	je	SHORT $LN40@DoObsolete@2
	mov	edx, DWORD PTR $T240025[ebp]
	mov	DWORD PTR tv264[ebp], edx
	jmp	SHORT $LN41@DoObsolete@2
$LN40@DoObsolete@2:
	mov	DWORD PTR tv264[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN41@DoObsolete@2:
	mov	eax, DWORD PTR tv264[ebp]
	push	eax
	mov	ecx, DWORD PTR $T240024[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	ecx, DWORD PTR $T240024[ebp]
	mov	DWORD PTR tv240[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddQuestNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH_N@Z ; CvMinorCivAI::AddQuestNotification

; 3296 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$224034[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strMessage$224031[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN13@DoObsolete@2:

; 3297 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoObsoleteQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z$0:
	lea	ecx, DWORD PTR _strMessage$224031[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoObsoleteQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z$1:
	lea	ecx, DWORD PTR _strSummary$224034[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoObsoleteQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z$2:
	mov	ecx, DWORD PTR $T239972[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?DoObsoleteQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoObsoleteQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoObsoleteQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ENDP ; CvMinorCivAI::DoObsoleteQuestsForPlayer
PUBLIC	?DoQuestsCleanupForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ; CvMinorCivAI::DoQuestsCleanupForPlayer
; Function compile flags: /Odtp
;	COMDAT ?DoQuestsCleanup@CvMinorCivAI@@QAEXXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_eMajorLoop$224048 = -8					; size = 4
_iMajorLoop$224044 = -4					; size = 4
?DoQuestsCleanup@CvMinorCivAI@@QAEXXZ PROC		; CvMinorCivAI::DoQuestsCleanup, COMDAT
; _this$ = ecx

; 3300 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 3301 : 	for (int iMajorLoop = 0; iMajorLoop < MAX_MAJOR_CIVS; iMajorLoop++)

	mov	DWORD PTR _iMajorLoop$224044[ebp], 0
	jmp	SHORT $LN3@DoQuestsCl
$LN2@DoQuestsCl:
	mov	eax, DWORD PTR _iMajorLoop$224044[ebp]
	add	eax, 1
	mov	DWORD PTR _iMajorLoop$224044[ebp], eax
$LN3@DoQuestsCl:
	cmp	DWORD PTR _iMajorLoop$224044[ebp], 22	; 00000016H
	jge	SHORT $LN4@DoQuestsCl

; 3302 : 	{
; 3303 : 		PlayerTypes eMajorLoop = (PlayerTypes) iMajorLoop;

	mov	ecx, DWORD PTR _iMajorLoop$224044[ebp]
	mov	DWORD PTR _eMajorLoop$224048[ebp], ecx

; 3304 : 		DoQuestsCleanupForPlayer(eMajorLoop);

	mov	edx, DWORD PTR _eMajorLoop$224048[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoQuestsCleanupForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ; CvMinorCivAI::DoQuestsCleanupForPlayer
	jmp	SHORT $LN2@DoQuestsCl
$LN4@DoQuestsCl:

; 3305 : 	}
; 3306 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoQuestsCleanup@CvMinorCivAI@@QAEXXZ ENDP		; CvMinorCivAI::DoQuestsCleanup
_TEXT	ENDS
PUBLIC	?erase@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAEXPAVCvMinorCivQuest@@@Z ; FStaticVector<CvMinorCivQuest,5,0,297,0>::erase
; Function compile flags: /Odtp
;	COMDAT ?DoQuestsCleanupForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T240046 = -20						; size = 4
$T240039 = -16						; size = 4
_eQuestType$224063 = -12				; size = 4
_bGlobalQuestDone$ = -6					; size = 1
_bPersonalQuestDone$ = -5				; size = 1
_itr_quest$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
?DoQuestsCleanupForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z PROC ; CvMinorCivAI::DoQuestsCleanupForPlayer, COMDAT
; _this$ = ecx

; 3310 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 3311 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 3312 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 3313 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN9@DoQuestsCl@2
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN10@DoQuestsCl@2
$LN9@DoQuestsCl@2:
	jmp	$LN11@DoQuestsCl@2
$LN10@DoQuestsCl@2:

; 3314 : 
; 3315 : 	bool bPersonalQuestDone = false;

	mov	BYTE PTR _bPersonalQuestDone$[ebp], 0

; 3316 : 	bool bGlobalQuestDone = false;

	mov	BYTE PTR _bGlobalQuestDone$[ebp], 0

; 3317 : 
; 3318 : 	QuestListForPlayer::iterator itr_quest;
; 3319 : 	for (itr_quest = m_QuestsGiven[ePlayer].begin(); itr_quest != m_QuestsGiven[ePlayer].end(); itr_quest++)

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+3328]
	mov	DWORD PTR $T240039[ebp], eax
	mov	edx, DWORD PTR $T240039[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _itr_quest$[ebp], eax
	jmp	SHORT $LN8@DoQuestsCl@2
$LN7@DoQuestsCl@2:
	mov	ecx, DWORD PTR _itr_quest$[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR _itr_quest$[ebp], ecx
$LN8@DoQuestsCl@2:
	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 156				; 0000009cH
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+3328]
	mov	DWORD PTR $T240046[ebp], edx
	mov	ecx, DWORD PTR $T240046[ebp]
	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR $T240046[ebp]
	add	edx, DWORD PTR [eax]
	cmp	DWORD PTR _itr_quest$[ebp], edx
	je	SHORT $LN6@DoQuestsCl@2

; 3320 : 	{
; 3321 : 		if (itr_quest->IsHandled())

	mov	ecx, DWORD PTR _itr_quest$[ebp]
	call	?IsHandled@CvMinorCivQuest@@QAE_NXZ	; CvMinorCivQuest::IsHandled
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@DoQuestsCl@2

; 3322 : 		{
; 3323 : 			MinorCivQuestTypes eQuestType = itr_quest->GetType();

	mov	ecx, DWORD PTR _itr_quest$[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	mov	DWORD PTR _eQuestType$224063[ebp], eax

; 3324 : 			if (IsPersonalQuest(eQuestType))

	mov	edx, DWORD PTR _eQuestType$224063[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsPersonalQuest@CvMinorCivAI@@QBE_NW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsPersonalQuest
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@DoQuestsCl@2

; 3325 : 				bPersonalQuestDone = true;

	mov	BYTE PTR _bPersonalQuestDone$[ebp], 1
$LN4@DoQuestsCl@2:

; 3326 : 			if (IsGlobalQuest(eQuestType))

	mov	ecx, DWORD PTR _eQuestType$224063[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsGlobalQuest@CvMinorCivAI@@QBE_NW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsGlobalQuest
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN21@DoQuestsCl@2

; 3327 : 				bGlobalQuestDone = true;

	mov	BYTE PTR _bGlobalQuestDone$[ebp], 1

; 3328 : 
; 3329 : 			m_QuestsGiven[ePlayer].erase(itr_quest);

$LN21@DoQuestsCl@2:
	mov	eax, DWORD PTR _itr_quest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	call	?erase@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAEXPAVCvMinorCivQuest@@@Z ; FStaticVector<CvMinorCivQuest,5,0,297,0>::erase

; 3330 : 			itr_quest--;

	mov	eax, DWORD PTR _itr_quest$[ebp]
	sub	eax, 28					; 0000001cH
	mov	DWORD PTR _itr_quest$[ebp], eax
$LN5@DoQuestsCl@2:

; 3331 : 		}
; 3332 : 	}

	jmp	$LN7@DoQuestsCl@2
$LN6@DoQuestsCl@2:

; 3333 : 
; 3334 : 	// Check if we need to seed the countdown timers
; 3335 : 	if (bPersonalQuestDone)

	movzx	ecx, BYTE PTR _bPersonalQuestDone$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@DoQuestsCl@2

; 3336 : 		DoTestSeedQuestCountdownForPlayer(ePlayer);

	push	0
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoTestSeedQuestCountdownForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z ; CvMinorCivAI::DoTestSeedQuestCountdownForPlayer
$LN2@DoQuestsCl@2:

; 3337 : 	if (bGlobalQuestDone)

	movzx	eax, BYTE PTR _bGlobalQuestDone$[ebp]
	test	eax, eax
	je	SHORT $LN11@DoQuestsCl@2

; 3338 : 		DoTestSeedGlobalQuestCountdown();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoTestSeedGlobalQuestCountdown@CvMinorCivAI@@QAEX_N@Z ; CvMinorCivAI::DoTestSeedGlobalQuestCountdown
$LN11@DoQuestsCl@2:

; 3339 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?DoQuestsCleanupForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::DoQuestsCleanupForPlayer
_TEXT	ENDS
EXTRN	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z:PROC ; CvGame::isOption
; Function compile flags: /Odtp
;	COMDAT ?IsEnabledQuest@CvMinorCivAI@@QAE_NW4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
_this$ = -92						; size = 4
$T240143 = -88						; size = 4
$T240139 = -84						; size = 4
$T240135 = -80						; size = 4
$T240131 = -76						; size = 4
$T240127 = -72						; size = 4
$T240123 = -68						; size = 4
$T240119 = -64						; size = 4
$T240115 = -60						; size = 4
$T240111 = -56						; size = 4
$T240107 = -52						; size = 4
$T240103 = -48						; size = 4
$T240099 = -44						; size = 4
$T240095 = -40						; size = 4
$T240091 = -36						; size = 4
$T240087 = -32						; size = 4
$T240083 = -28						; size = 4
$T240079 = -24						; size = 4
$T240075 = -20						; size = 4
$T240071 = -16						; size = 4
$T240067 = -12						; size = 4
$T240063 = -8						; size = 4
$T240059 = -4						; size = 4
_eQuest$ = 8						; size = 4
?IsEnabledQuest@CvMinorCivAI@@QAE_NW4MinorCivQuestTypes@@@Z PROC ; CvMinorCivAI::IsEnabledQuest, COMDAT
; _this$ = ecx

; 3343 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	mov	DWORD PTR _this$[ebp], ecx

; 3344 : 	// BUILD A ROUTE
; 3345 : 	if(eQuest == MINOR_CIV_QUEST_ROUTE)

	cmp	DWORD PTR _eQuest$[ebp], 0
	jne	SHORT $LN57@IsEnabledQ

; 3346 : 	{
; 3347 : 		if(GC.getQUEST_DISABLED_ROUTE() == 1)

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3252
	mov	DWORD PTR $T240059[ebp], eax
	cmp	DWORD PTR $T240059[ebp], 1
	jne	SHORT $LN56@IsEnabledQ

; 3348 : 			return false;

	xor	al, al
	jmp	$LN58@IsEnabledQ
$LN56@IsEnabledQ:

; 3349 : 	}

	jmp	$LN55@IsEnabledQ
$LN57@IsEnabledQ:

; 3350 : 	// KILL A CAMP
; 3351 : 	else if(eQuest == MINOR_CIV_QUEST_KILL_CAMP)

	cmp	DWORD PTR _eQuest$[ebp], 1
	jne	SHORT $LN54@IsEnabledQ

; 3352 : 	{
; 3353 : 		if(GC.getQUEST_DISABLED_KILL_CAMP() == 1)

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3256
	mov	DWORD PTR $T240063[ebp], ecx
	cmp	DWORD PTR $T240063[ebp], 1
	jne	SHORT $LN53@IsEnabledQ

; 3354 : 			return false;

	xor	al, al
	jmp	$LN58@IsEnabledQ
$LN53@IsEnabledQ:

; 3355 : 	}

	jmp	$LN55@IsEnabledQ
$LN54@IsEnabledQ:

; 3356 : 	// CONNECT A RESOURCE
; 3357 : 	else if(eQuest == MINOR_CIV_QUEST_CONNECT_RESOURCE)

	cmp	DWORD PTR _eQuest$[ebp], 2
	jne	SHORT $LN51@IsEnabledQ

; 3358 : 	{
; 3359 : 		if(GC.getQUEST_DISABLED_CONNECT_RESOURCE() == 1)

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3260
	mov	DWORD PTR $T240067[ebp], edx
	cmp	DWORD PTR $T240067[ebp], 1
	jne	SHORT $LN50@IsEnabledQ

; 3360 : 			return false;

	xor	al, al
	jmp	$LN58@IsEnabledQ
$LN50@IsEnabledQ:

; 3361 : 	}

	jmp	$LN55@IsEnabledQ
$LN51@IsEnabledQ:

; 3362 : 	// CONSTRUCT A WONDER
; 3363 : 	else if(eQuest == MINOR_CIV_QUEST_CONSTRUCT_WONDER)

	cmp	DWORD PTR _eQuest$[ebp], 3
	jne	SHORT $LN48@IsEnabledQ

; 3364 : 	{
; 3365 : 		if(GC.getQUEST_DISABLED_CONSTRUCT_WONDER() == 1)

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3264
	mov	DWORD PTR $T240071[ebp], eax
	cmp	DWORD PTR $T240071[ebp], 1
	jne	SHORT $LN47@IsEnabledQ

; 3366 : 			return false;

	xor	al, al
	jmp	$LN58@IsEnabledQ
$LN47@IsEnabledQ:

; 3367 : 	}

	jmp	$LN55@IsEnabledQ
$LN48@IsEnabledQ:

; 3368 : 	// GREAT PERSON
; 3369 : 	else if(eQuest == MINOR_CIV_QUEST_GREAT_PERSON)

	cmp	DWORD PTR _eQuest$[ebp], 4
	jne	SHORT $LN45@IsEnabledQ

; 3370 : 	{
; 3371 : 		if(GC.getQUEST_DISABLED_GREAT_PERSON() == 1)

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3268
	mov	DWORD PTR $T240075[ebp], ecx
	cmp	DWORD PTR $T240075[ebp], 1
	jne	SHORT $LN44@IsEnabledQ

; 3372 : 			return false;

	xor	al, al
	jmp	$LN58@IsEnabledQ
$LN44@IsEnabledQ:

; 3373 : 	}

	jmp	$LN55@IsEnabledQ
$LN45@IsEnabledQ:

; 3374 : 	// KILL ANOTHER CITY STATE
; 3375 : 	else if(eQuest == MINOR_CIV_QUEST_KILL_CITY_STATE)

	cmp	DWORD PTR _eQuest$[ebp], 5
	jne	SHORT $LN42@IsEnabledQ

; 3376 : 	{
; 3377 : 		if(GC.getQUEST_DISABLED_KILL_CITY_STATE() == 1)

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3272
	mov	DWORD PTR $T240079[ebp], edx
	cmp	DWORD PTR $T240079[ebp], 1
	jne	SHORT $LN41@IsEnabledQ

; 3378 : 			return false;

	xor	al, al
	jmp	$LN58@IsEnabledQ
$LN41@IsEnabledQ:

; 3379 : 	}

	jmp	$LN55@IsEnabledQ
$LN42@IsEnabledQ:

; 3380 : 	// FIND ANOTHER PLAYER
; 3381 : 	else if(eQuest == MINOR_CIV_QUEST_FIND_PLAYER)

	cmp	DWORD PTR _eQuest$[ebp], 6
	jne	SHORT $LN39@IsEnabledQ

; 3382 : 	{
; 3383 : 		if(GC.getQUEST_DISABLED_FIND_PLAYER() == 1)

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3276
	mov	DWORD PTR $T240083[ebp], eax
	cmp	DWORD PTR $T240083[ebp], 1
	jne	SHORT $LN38@IsEnabledQ

; 3384 : 			return false;

	xor	al, al
	jmp	$LN58@IsEnabledQ
$LN38@IsEnabledQ:

; 3385 : 	}

	jmp	$LN55@IsEnabledQ
$LN39@IsEnabledQ:

; 3386 : 	// FIND NATURAL WONDER
; 3387 : 	else if(eQuest == MINOR_CIV_QUEST_FIND_NATURAL_WONDER)

	cmp	DWORD PTR _eQuest$[ebp], 7
	jne	SHORT $LN36@IsEnabledQ

; 3388 : 	{
; 3389 : 		if(GC.getQUEST_DISABLED_NATURAL_WONDER() == 1)

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3280
	mov	DWORD PTR $T240087[ebp], ecx
	cmp	DWORD PTR $T240087[ebp], 1
	jne	SHORT $LN35@IsEnabledQ

; 3390 : 			return false;

	xor	al, al
	jmp	$LN58@IsEnabledQ
$LN35@IsEnabledQ:

; 3391 : 	}

	jmp	$LN55@IsEnabledQ
$LN36@IsEnabledQ:

; 3392 : 	// GOLD GIFT
; 3393 : 	else if(eQuest == MINOR_CIV_QUEST_GIVE_GOLD)

	cmp	DWORD PTR _eQuest$[ebp], 8
	jne	SHORT $LN33@IsEnabledQ

; 3394 : 	{
; 3395 : 		if(GC.getQUEST_DISABLED_GIVE_GOLD() == 1)

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3284
	mov	DWORD PTR $T240091[ebp], edx
	cmp	DWORD PTR $T240091[ebp], 1
	jne	SHORT $LN32@IsEnabledQ

; 3396 : 			return false;

	xor	al, al
	jmp	$LN58@IsEnabledQ
$LN32@IsEnabledQ:

; 3397 : 	}

	jmp	$LN55@IsEnabledQ
$LN33@IsEnabledQ:

; 3398 : 	// PLEDGE TO PROTECT
; 3399 : 	else if(eQuest == MINOR_CIV_QUEST_PLEDGE_TO_PROTECT)

	cmp	DWORD PTR _eQuest$[ebp], 9
	jne	SHORT $LN30@IsEnabledQ

; 3400 : 	{
; 3401 : 		if(GC.getQUEST_DISABLED_PLEDGE_TO_PROTECT() == 1)

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3288
	mov	DWORD PTR $T240095[ebp], eax
	cmp	DWORD PTR $T240095[ebp], 1
	jne	SHORT $LN29@IsEnabledQ

; 3402 : 			return false;

	xor	al, al
	jmp	$LN58@IsEnabledQ
$LN29@IsEnabledQ:

; 3403 : 	}

	jmp	$LN55@IsEnabledQ
$LN30@IsEnabledQ:

; 3404 : 	// CONTEST CULTURE
; 3405 : 	else if(eQuest == MINOR_CIV_QUEST_CONTEST_CULTURE)

	cmp	DWORD PTR _eQuest$[ebp], 10		; 0000000aH
	jne	SHORT $LN27@IsEnabledQ

; 3406 : 	{
; 3407 : 		if(GC.getGame().isOption(GAMEOPTION_NO_POLICIES))

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T240099[ebp], ecx
	push	18					; 00000012H
	mov	ecx, DWORD PTR $T240099[ebp]
	call	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z ; CvGame::isOption
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN26@IsEnabledQ

; 3408 : 			return false;

	xor	al, al
	jmp	$LN58@IsEnabledQ
$LN26@IsEnabledQ:

; 3409 : 
; 3410 : 		if(GC.getQUEST_DISABLED_CONTEST_CULTURE() == 1)

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3292
	mov	DWORD PTR $T240103[ebp], eax
	cmp	DWORD PTR $T240103[ebp], 1
	jne	SHORT $LN25@IsEnabledQ

; 3411 : 			return false;

	xor	al, al
	jmp	$LN58@IsEnabledQ
$LN25@IsEnabledQ:

; 3412 : 	}

	jmp	$LN55@IsEnabledQ
$LN27@IsEnabledQ:

; 3413 : 	// CONTEST FAITH
; 3414 : 	else if(eQuest == MINOR_CIV_QUEST_CONTEST_FAITH)

	cmp	DWORD PTR _eQuest$[ebp], 11		; 0000000bH
	jne	SHORT $LN23@IsEnabledQ

; 3415 : 	{
; 3416 : 		if(GC.getGame().isOption(GAMEOPTION_NO_RELIGION))

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T240107[ebp], ecx
	push	21					; 00000015H
	mov	ecx, DWORD PTR $T240107[ebp]
	call	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z ; CvGame::isOption
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN22@IsEnabledQ

; 3417 : 			return false;

	xor	al, al
	jmp	$LN58@IsEnabledQ
$LN22@IsEnabledQ:

; 3418 : 
; 3419 : 		if(GC.getQUEST_DISABLED_CONTEST_FAITH() == 1)

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3296
	mov	DWORD PTR $T240111[ebp], eax
	cmp	DWORD PTR $T240111[ebp], 1
	jne	SHORT $LN21@IsEnabledQ

; 3420 : 			return false;

	xor	al, al
	jmp	$LN58@IsEnabledQ
$LN21@IsEnabledQ:

; 3421 : 	}

	jmp	$LN55@IsEnabledQ
$LN23@IsEnabledQ:

; 3422 : 	// CONTEST TECHS
; 3423 : 	else if(eQuest == MINOR_CIV_QUEST_CONTEST_TECHS)

	cmp	DWORD PTR _eQuest$[ebp], 12		; 0000000cH
	jne	SHORT $LN19@IsEnabledQ

; 3424 : 	{
; 3425 : 		if(GC.getGame().isOption(GAMEOPTION_NO_SCIENCE))

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T240115[ebp], ecx
	push	17					; 00000011H
	mov	ecx, DWORD PTR $T240115[ebp]
	call	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z ; CvGame::isOption
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN18@IsEnabledQ

; 3426 : 			return false;

	xor	al, al
	jmp	$LN58@IsEnabledQ
$LN18@IsEnabledQ:

; 3427 : 
; 3428 : 		if(GC.getQUEST_DISABLED_CONTEST_TECHS() == 1)

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3300
	mov	DWORD PTR $T240119[ebp], eax
	cmp	DWORD PTR $T240119[ebp], 1
	jne	SHORT $LN17@IsEnabledQ

; 3429 : 			return false;

	xor	al, al
	jmp	$LN58@IsEnabledQ
$LN17@IsEnabledQ:

; 3430 : 	}

	jmp	$LN55@IsEnabledQ
$LN19@IsEnabledQ:

; 3431 : 	// Invest
; 3432 : 	else if(eQuest == MINOR_CIV_QUEST_INVEST)

	cmp	DWORD PTR _eQuest$[ebp], 13		; 0000000dH
	jne	SHORT $LN15@IsEnabledQ

; 3433 : 	{
; 3434 : 		if(GC.getQUEST_DISABLED_INVEST() == 1)

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3304
	mov	DWORD PTR $T240123[ebp], ecx
	cmp	DWORD PTR $T240123[ebp], 1
	jne	SHORT $LN14@IsEnabledQ

; 3435 : 			return false;

	xor	al, al
	jmp	$LN58@IsEnabledQ
$LN14@IsEnabledQ:

; 3436 : 	}

	jmp	$LN55@IsEnabledQ
$LN15@IsEnabledQ:

; 3437 : 	// Bully target City-State
; 3438 : 	else if(eQuest == MINOR_CIV_QUEST_BULLY_CITY_STATE)

	cmp	DWORD PTR _eQuest$[ebp], 14		; 0000000eH
	jne	SHORT $LN12@IsEnabledQ

; 3439 : 	{
; 3440 : 		if(GC.getQUEST_DISABLED_BULLY_CITY_STATE() == 1)

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3308
	mov	DWORD PTR $T240127[ebp], edx
	cmp	DWORD PTR $T240127[ebp], 1
	jne	SHORT $LN11@IsEnabledQ

; 3441 : 			return false;

	xor	al, al
	jmp	SHORT $LN58@IsEnabledQ
$LN11@IsEnabledQ:

; 3442 : 	}

	jmp	SHORT $LN55@IsEnabledQ
$LN12@IsEnabledQ:

; 3443 : 	// Denounce target Major
; 3444 : 	else if(eQuest == MINOR_CIV_QUEST_DENOUNCE_MAJOR)

	cmp	DWORD PTR _eQuest$[ebp], 15		; 0000000fH
	jne	SHORT $LN9@IsEnabledQ

; 3445 : 	{
; 3446 : 		if(GC.getQUEST_DISABLED_DENOUNCE_MAJOR() == 1)

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3312
	mov	DWORD PTR $T240131[ebp], eax
	cmp	DWORD PTR $T240131[ebp], 1
	jne	SHORT $LN8@IsEnabledQ

; 3447 : 			return false;

	xor	al, al
	jmp	SHORT $LN58@IsEnabledQ
$LN8@IsEnabledQ:

; 3448 : 	}

	jmp	SHORT $LN55@IsEnabledQ
$LN9@IsEnabledQ:

; 3449 : 	// Spread your religion to us
; 3450 : 	else if(eQuest == MINOR_CIV_QUEST_SPREAD_RELIGION)

	cmp	DWORD PTR _eQuest$[ebp], 16		; 00000010H
	jne	SHORT $LN6@IsEnabledQ

; 3451 : 	{
; 3452 : 		if(GC.getGame().isOption(GAMEOPTION_NO_RELIGION))

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T240135[ebp], ecx
	push	21					; 00000015H
	mov	ecx, DWORD PTR $T240135[ebp]
	call	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z ; CvGame::isOption
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@IsEnabledQ

; 3453 : 			return false;

	xor	al, al
	jmp	SHORT $LN58@IsEnabledQ
$LN5@IsEnabledQ:

; 3454 : 
; 3455 : 		if(GC.getQUEST_DISABLED_SPREAD_RELIGION() == 1)

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3316
	mov	DWORD PTR $T240139[ebp], eax
	cmp	DWORD PTR $T240139[ebp], 1
	jne	SHORT $LN4@IsEnabledQ

; 3456 : 			return false;

	xor	al, al
	jmp	SHORT $LN58@IsEnabledQ
$LN4@IsEnabledQ:

; 3457 : 	}

	jmp	SHORT $LN55@IsEnabledQ
$LN6@IsEnabledQ:

; 3458 : 	// Trade Route
; 3459 : 	else if(eQuest == MINOR_CIV_QUEST_TRADE_ROUTE)

	cmp	DWORD PTR _eQuest$[ebp], 17		; 00000011H
	jne	SHORT $LN55@IsEnabledQ

; 3460 : 	{
; 3461 : 		if(GC.getQUEST_DISABLED_TRADE_ROUTE() == 1)

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3320
	mov	DWORD PTR $T240143[ebp], ecx
	cmp	DWORD PTR $T240143[ebp], 1
	jne	SHORT $LN55@IsEnabledQ

; 3462 : 			return false;

	xor	al, al
	jmp	SHORT $LN58@IsEnabledQ
$LN55@IsEnabledQ:

; 3463 : 	}
; 3464 : 
; 3465 : 	return true;

	mov	al, 1
$LN58@IsEnabledQ:

; 3466 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsEnabledQuest@CvMinorCivAI@@QAE_NW4MinorCivQuestTypes@@@Z ENDP ; CvMinorCivAI::IsEnabledQuest
_TEXT	ENDS
PUBLIC	?IsSameReligionAsMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsSameReligionAsMajor
PUBLIC	?IsGoodTimeForDenounceMajorQuest@CvMinorCivAI@@QAE_NXZ ; CvMinorCivAI::IsGoodTimeForDenounceMajorQuest
PUBLIC	?IsGoodTimeForPledgeToProtectQuest@CvMinorCivAI@@QAE_NXZ ; CvMinorCivAI::IsGoodTimeForPledgeToProtectQuest
PUBLIC	?CanMajorStartProtection@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorStartProtection
PUBLIC	?IsGoodTimeForGiveGoldQuest@CvMinorCivAI@@QAE_NXZ ; CvMinorCivAI::IsGoodTimeForGiveGoldQuest
PUBLIC	?IsEverBulliedByAnyMajor@CvMinorCivAI@@QBE_NXZ	; CvMinorCivAI::IsEverBulliedByAnyMajor
PUBLIC	?IsGoodTimeForNaturalWonderQuest@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsGoodTimeForNaturalWonderQuest
PUBLIC	?IsRouteConnectionEstablished@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsRouteConnectionEstablished
PUBLIC	?IsEverFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsEverFriends
EXTRN	?CanCreateTradeRoute@CvGameTrade@@QAE_NW4PlayerTypes@@0W4DomainTypes@@@Z:PROC ; CvGameTrade::CanCreateTradeRoute
EXTRN	?HasCreatedReligion@CvGameReligions@@QBE_NW4PlayerTypes@@@Z:PROC ; CvGameReligions::HasCreatedReligion
; Function compile flags: /Odtp
;	COMDAT ?IsValidQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
_this$ = -288						; size = 4
$T240420 = -284						; size = 4
$T240416 = -280						; size = 4
$T240415 = -276						; size = 4
$T240406 = -272						; size = 4
$T240402 = -268						; size = 4
$T240401 = -264						; size = 4
$T240392 = -260						; size = 4
$T240388 = -256						; size = 4
$T240387 = -252						; size = 4
$T240378 = -248						; size = 4
$T240374 = -244						; size = 4
$T240370 = -240						; size = 4
$T240366 = -236						; size = 4
$T240362 = -232						; size = 4
$T240358 = -228						; size = 4
$T240349 = -224						; size = 4
$T240345 = -220						; size = 4
$T240336 = -216						; size = 4
$T240332 = -212						; size = 4
$T240328 = -208						; size = 4
$T240319 = -204						; size = 4
$T240315 = -200						; size = 4
$T240306 = -196						; size = 4
$T240294 = -192						; size = 4
$T240290 = -188						; size = 4
$T240281 = -184						; size = 4
$T240277 = -180						; size = 4
$T240224 = -120						; size = 4
$T240220 = -116						; size = 4
$T240216 = -112						; size = 4
$T240207 = -108						; size = 4
$T240198 = -104						; size = 4
$T240194 = -100						; size = 4
$T240190 = -96						; size = 4
$T240186 = -92						; size = 4
$T240182 = -88						; size = 4
$T240181 = -84						; size = 4
$T240172 = -80						; size = 4
$T240168 = -73						; size = 1
$T240167 = -72						; size = 4
$T240158 = -65						; size = 1
$T240149 = -64						; size = 4
_eMostRecentBully$224227 = -60				; size = 4
_eTargetCityState$224219 = -56				; size = 4
_eTarget$224188 = -52					; size = 4
_eTargetCityState$224183 = -48				; size = 4
_eUnit$224178 = -44					; size = 4
_eWonder$224173 = -40					; size = 4
_eResource$224168 = -36					; size = 4
_iDistance$224159 = -32					; size = 4
_pMinorsPlot$224150 = -28				; size = 4
_iMaxRouteDistance$224149 = -24				; size = 4
_pLoopCity$224153 = -20					; size = 4
_bInRange$224154 = -13					; size = 1
_iLoop$224152 = -12					; size = 4
_pMajorsCapital$ = -8					; size = 4
_pMinorsCapital$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
_eQuest$ = 12						; size = 4
?IsValidQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z PROC ; CvMinorCivAI::IsValidQuestForPlayer, COMDAT
; _this$ = ecx

; 3470 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	mov	DWORD PTR _this$[ebp], ecx

; 3471 : 	// The quest type must be enabled
; 3472 : 	if(!IsEnabledQuest(eQuest))

	mov	eax, DWORD PTR _eQuest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsEnabledQuest@CvMinorCivAI@@QAE_NW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsEnabledQuest
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN96@IsValidQue

; 3473 : 		return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN96@IsValidQue:

; 3474 : 
; 3475 : 	// Somebody's dead, that's no good
; 3476 : 	if(!GET_PLAYER(ePlayer).isAlive() || !GetPlayer()->isAlive())

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T240149[ebp], edx
	mov	eax, DWORD PTR $T240149[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T240158[ebp], cl
	movzx	edx, BYTE PTR $T240158[ebp]
	test	edx, edx
	je	SHORT $LN94@IsValidQue
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T240167[ebp], eax
	mov	eax, DWORD PTR $T240167[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T240168[ebp], cl
	movzx	edx, BYTE PTR $T240168[ebp]
	test	edx, edx
	jne	SHORT $LN95@IsValidQue
$LN94@IsValidQue:

; 3477 : 		return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN95@IsValidQue:

; 3478 : 
; 3479 : 	// No quests are valid if we are at war
; 3480 : 	if(IsAtWarWithPlayersTeam(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAtWarWithPlayersTeam@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAtWarWithPlayersTeam
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN93@IsValidQue

; 3481 : 		return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN93@IsValidQue:

; 3482 : 
; 3483 : 	// No quests are valid if we don't know you yet
; 3484 : 	if(!IsHasMetPlayer(ePlayer))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsHasMetPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsHasMetPlayer
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN92@IsValidQue

; 3485 : 		return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN92@IsValidQue:

; 3486 : 
; 3487 : 	// This player cannot already have an active quest of the same type
; 3488 : 	if(IsActiveQuestForPlayer(ePlayer, eQuest))

	mov	ecx, DWORD PTR _eQuest$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsActiveQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsActiveQuestForPlayer
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN91@IsValidQue

; 3489 : 		return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN91@IsValidQue:

; 3490 : 
; 3491 : 	// Both players must have a capital
; 3492 : 	CvCity* pMinorsCapital = GetPlayer()->getCapitalCity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pMinorsCapital$[ebp], eax

; 3493 : 	CvCity* pMajorsCapital = GET_PLAYER(ePlayer).getCapitalCity();

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T240172[ebp], ecx
	mov	ecx, DWORD PTR $T240172[ebp]
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pMajorsCapital$[ebp], eax

; 3494 : 	if(pMinorsCapital == NULL || pMajorsCapital == NULL)

	cmp	DWORD PTR _pMinorsCapital$[ebp], 0
	je	SHORT $LN89@IsValidQue
	cmp	DWORD PTR _pMajorsCapital$[ebp], 0
	jne	SHORT $LN90@IsValidQue
$LN89@IsValidQue:

; 3495 : 		return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN90@IsValidQue:

; 3496 : 
; 3497 : 	// BUILD A ROUTE
; 3498 : 	if(eQuest == MINOR_CIV_QUEST_ROUTE)

	cmp	DWORD PTR _eQuest$[ebp], 0
	jne	$LN88@IsValidQue

; 3499 : 	{
; 3500 : 		// This player must not have bullied us recently
; 3501 : 		if(IsRecentlyBulliedByMajor(ePlayer))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsRecentlyBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsRecentlyBulliedByMajor
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN87@IsValidQue

; 3502 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN87@IsValidQue:

; 3503 : 
; 3504 : 		// Must have been friends at some point
; 3505 : 		if(!IsEverFriends(ePlayer))

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsEverFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsEverFriends
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN86@IsValidQue

; 3506 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN86@IsValidQue:

; 3507 : 
; 3508 : 		// Cannot already have a route
; 3509 : 		if (GET_PLAYER(ePlayer).IsCapitalConnectedToPlayer(GetPlayer()->GetID()))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T240181[ebp], eax
	mov	eax, DWORD PTR $T240181[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T240182[ebp], ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T240186[ebp], edx
	push	-1
	mov	eax, DWORD PTR $T240182[ebp]
	push	eax
	mov	ecx, DWORD PTR $T240186[ebp]
	call	?IsCapitalConnectedToPlayer@CvPlayer@@QAE_NW4PlayerTypes@@W4RouteTypes@@@Z ; CvPlayer::IsCapitalConnectedToPlayer
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN85@IsValidQue

; 3510 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN85@IsValidQue:

; 3511 : 
; 3512 : 		// Can't have completed this Quest already
; 3513 : 		if(IsRouteConnectionEstablished(ePlayer))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsRouteConnectionEstablished@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsRouteConnectionEstablished
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN84@IsValidQue

; 3514 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN84@IsValidQue:

; 3515 : 
; 3516 : 		// Must have a city close to the minor in the same Area
; 3517 : 		const int iMaxRouteDistance = 8; //antonjs: todo: xml

	mov	DWORD PTR _iMaxRouteDistance$224149[ebp], 8

; 3518 : 		CvPlot* pMinorsPlot = pMinorsCapital->plot();

	mov	ecx, DWORD PTR _pMinorsCapital$[ebp]
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	DWORD PTR _pMinorsPlot$224150[ebp], eax

; 3519 : 		if(pMinorsPlot == NULL)

	cmp	DWORD PTR _pMinorsPlot$224150[ebp], 0
	jne	SHORT $LN83@IsValidQue

; 3520 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN83@IsValidQue:

; 3521 : 
; 3522 : 		int iLoop;
; 3523 : 		CvCity* pLoopCity;
; 3524 : 		bool bInRange = false;

	mov	BYTE PTR _bInRange$224154[ebp], 0

; 3525 : 		for(pLoopCity = GET_PLAYER(ePlayer).firstCity(&iLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER(ePlayer).nextCity(&iLoop))

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T240190[ebp], ecx
	push	0
	lea	edx, DWORD PTR _iLoop$224152[ebp]
	push	edx
	mov	ecx, DWORD PTR $T240190[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$224153[ebp], eax
	jmp	SHORT $LN82@IsValidQue
$LN81@IsValidQue:
	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T240194[ebp], eax
	push	0
	lea	ecx, DWORD PTR _iLoop$224152[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T240194[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$224153[ebp], eax
$LN82@IsValidQue:
	cmp	DWORD PTR _pLoopCity$224153[ebp], 0
	je	SHORT $LN80@IsValidQue

; 3526 : 		{
; 3527 : 			if(pMinorsPlot->getArea() != pLoopCity->getArea())

	mov	edx, DWORD PTR _pMinorsPlot$224150[ebp]
	mov	eax, DWORD PTR [edx+356]
	mov	DWORD PTR $T240198[ebp], eax
	mov	ecx, DWORD PTR _pLoopCity$224153[ebp]
	call	?getArea@CvCity@@QBEHXZ			; CvCity::getArea
	cmp	DWORD PTR $T240198[ebp], eax
	je	SHORT $LN125@IsValidQue

; 3528 : 				continue;

	jmp	SHORT $LN81@IsValidQue

; 3529 : 			int iDistance = plotDistance(pMinorsPlot->getX(), pMinorsPlot->getY(), pLoopCity->getX(), pLoopCity->getY());

$LN125@IsValidQue:
	mov	ecx, DWORD PTR _pLoopCity$224153[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR $T240207[ebp], edx
	mov	eax, DWORD PTR _pLoopCity$224153[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T240216[ebp], ecx
	mov	edx, DWORD PTR _pMinorsPlot$224150[ebp]
	movsx	eax, WORD PTR [edx+2]
	mov	DWORD PTR $T240220[ebp], eax
	mov	ecx, DWORD PTR _pMinorsPlot$224150[ebp]
	movsx	edx, WORD PTR [ecx]
	mov	DWORD PTR $T240224[ebp], edx
	mov	eax, DWORD PTR $T240207[ebp]
	push	eax
	mov	ecx, DWORD PTR $T240216[ebp]
	push	ecx
	mov	edx, DWORD PTR $T240220[ebp]
	push	edx
	mov	eax, DWORD PTR $T240224[ebp]
	push	eax
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H
	mov	DWORD PTR _iDistance$224159[ebp], eax

; 3530 : 			if(iDistance < iMaxRouteDistance)

	cmp	DWORD PTR _iDistance$224159[ebp], 8
	jge	SHORT $LN78@IsValidQue

; 3531 : 				bInRange = true;

	mov	BYTE PTR _bInRange$224154[ebp], 1
$LN78@IsValidQue:

; 3532 : 		}

	jmp	$LN81@IsValidQue
$LN80@IsValidQue:

; 3533 : 
; 3534 : 		if(!bInRange)

	movzx	ecx, BYTE PTR _bInRange$224154[ebp]
	test	ecx, ecx
	jne	SHORT $LN77@IsValidQue

; 3535 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN77@IsValidQue:

; 3536 : 	}

	jmp	$LN76@IsValidQue
$LN88@IsValidQue:

; 3537 : 	// KILL A CAMP
; 3538 : 	else if(eQuest == MINOR_CIV_QUEST_KILL_CAMP)

	cmp	DWORD PTR _eQuest$[ebp], 1
	jne	SHORT $LN75@IsValidQue

; 3539 : 	{
; 3540 : 		// Any nearby camps?
; 3541 : 		if(GetBestNearbyCampToKill() == NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBestNearbyCampToKill@CvMinorCivAI@@QAEPAVCvPlot@@XZ ; CvMinorCivAI::GetBestNearbyCampToKill
	test	eax, eax
	jne	SHORT $LN74@IsValidQue

; 3542 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN74@IsValidQue:

; 3543 : 	}

	jmp	$LN76@IsValidQue
$LN75@IsValidQue:

; 3544 : 	// CONNECT A RESOURCE
; 3545 : 	else if(eQuest == MINOR_CIV_QUEST_CONNECT_RESOURCE)

	cmp	DWORD PTR _eQuest$[ebp], 2
	jne	SHORT $LN72@IsValidQue

; 3546 : 	{
; 3547 : 		// This player must not have bullied us recently
; 3548 : 		if(IsRecentlyBulliedByMajor(ePlayer))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsRecentlyBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsRecentlyBulliedByMajor
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN71@IsValidQue

; 3549 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN71@IsValidQue:

; 3550 : 
; 3551 : 		ResourceTypes eResource = GetNearbyResourceForQuest(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNearbyResourceForQuest@CvMinorCivAI@@QAE?AW4ResourceTypes@@W4PlayerTypes@@@Z ; CvMinorCivAI::GetNearbyResourceForQuest
	mov	DWORD PTR _eResource$224168[ebp], eax

; 3552 : 
; 3553 : 		if(eResource == NO_RESOURCE)

	cmp	DWORD PTR _eResource$224168[ebp], -1
	jne	SHORT $LN70@IsValidQue

; 3554 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN70@IsValidQue:

; 3555 : 	}

	jmp	$LN76@IsValidQue
$LN72@IsValidQue:

; 3556 : 	// CONSTRUCT A WONDER
; 3557 : 	else if(eQuest == MINOR_CIV_QUEST_CONSTRUCT_WONDER)

	cmp	DWORD PTR _eQuest$[ebp], 3
	jne	SHORT $LN68@IsValidQue

; 3558 : 	{
; 3559 : 		// This player must not have bullied us recently
; 3560 : 		if(IsRecentlyBulliedByMajor(ePlayer))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsRecentlyBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsRecentlyBulliedByMajor
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN67@IsValidQue

; 3561 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN67@IsValidQue:

; 3562 : 
; 3563 : 		BuildingTypes eWonder = GetBestWonderForQuest(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBestWonderForQuest@CvMinorCivAI@@QAE?AW4BuildingTypes@@W4PlayerTypes@@@Z ; CvMinorCivAI::GetBestWonderForQuest
	mov	DWORD PTR _eWonder$224173[ebp], eax

; 3564 : 
; 3565 : 		if(eWonder == NO_BUILDING)

	cmp	DWORD PTR _eWonder$224173[ebp], -1
	jne	SHORT $LN66@IsValidQue

; 3566 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN66@IsValidQue:

; 3567 : 	}

	jmp	$LN76@IsValidQue
$LN68@IsValidQue:

; 3568 : 	// GREAT PERSON
; 3569 : 	else if(eQuest == MINOR_CIV_QUEST_GREAT_PERSON)

	cmp	DWORD PTR _eQuest$[ebp], 4
	jne	SHORT $LN64@IsValidQue

; 3570 : 	{
; 3571 : 		// This player must not have bullied us recently
; 3572 : 		if(IsRecentlyBulliedByMajor(ePlayer))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsRecentlyBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsRecentlyBulliedByMajor
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN63@IsValidQue

; 3573 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN63@IsValidQue:

; 3574 : 
; 3575 : 		UnitTypes eUnit = GetBestGreatPersonForQuest(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBestGreatPersonForQuest@CvMinorCivAI@@QAE?AW4UnitTypes@@W4PlayerTypes@@@Z ; CvMinorCivAI::GetBestGreatPersonForQuest
	mov	DWORD PTR _eUnit$224178[ebp], eax

; 3576 : 
; 3577 : 		if(eUnit == NO_UNIT)

	cmp	DWORD PTR _eUnit$224178[ebp], -1
	jne	SHORT $LN62@IsValidQue

; 3578 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN62@IsValidQue:

; 3579 : 	}

	jmp	$LN76@IsValidQue
$LN64@IsValidQue:

; 3580 : 	// KILL ANOTHER CITY STATE
; 3581 : 	else if(eQuest == MINOR_CIV_QUEST_KILL_CITY_STATE)

	cmp	DWORD PTR _eQuest$[ebp], 5
	jne	SHORT $LN60@IsValidQue

; 3582 : 	{
; 3583 : 		// Friendly City States don't give out this quest
; 3584 : 		if(GetPersonality() == MINOR_CIV_PERSONALITY_FRIENDLY)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPersonality@CvMinorCivAI@@QBE?AW4MinorCivPersonalityTypes@@XZ ; CvMinorCivAI::GetPersonality
	test	eax, eax
	jne	SHORT $LN59@IsValidQue

; 3585 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN59@IsValidQue:

; 3586 : 
; 3587 : 		PlayerTypes eTargetCityState = GetBestCityStateTarget(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBestCityStateTarget@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z ; CvMinorCivAI::GetBestCityStateTarget
	mov	DWORD PTR _eTargetCityState$224183[ebp], eax

; 3588 : 
; 3589 : 		if(eTargetCityState == NO_PLAYER)

	cmp	DWORD PTR _eTargetCityState$224183[ebp], -1
	jne	SHORT $LN58@IsValidQue

; 3590 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN58@IsValidQue:

; 3591 : 	}

	jmp	$LN76@IsValidQue
$LN60@IsValidQue:

; 3592 : 	// FIND ANOTHER PLAYER
; 3593 : 	else if(eQuest == MINOR_CIV_QUEST_FIND_PLAYER)

	cmp	DWORD PTR _eQuest$[ebp], 6
	jne	SHORT $LN56@IsValidQue

; 3594 : 	{
; 3595 : 		// This player must not have bullied us recently
; 3596 : 		if(IsRecentlyBulliedByMajor(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsRecentlyBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsRecentlyBulliedByMajor
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN55@IsValidQue

; 3597 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN55@IsValidQue:

; 3598 : 
; 3599 : 		PlayerTypes eTarget = GetBestPlayerToFind(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBestPlayerToFind@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z ; CvMinorCivAI::GetBestPlayerToFind
	mov	DWORD PTR _eTarget$224188[ebp], eax

; 3600 : 
; 3601 : 		if(eTarget == NO_PLAYER)

	cmp	DWORD PTR _eTarget$224188[ebp], -1
	jne	SHORT $LN54@IsValidQue

; 3602 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN54@IsValidQue:

; 3603 : 	}

	jmp	$LN76@IsValidQue
$LN56@IsValidQue:

; 3604 : 	// FIND NATURAL WONDER
; 3605 : 	else if(eQuest == MINOR_CIV_QUEST_FIND_NATURAL_WONDER)

	cmp	DWORD PTR _eQuest$[ebp], 7
	jne	SHORT $LN52@IsValidQue

; 3606 : 	{
; 3607 : 		// This player must not have bullied us recently
; 3608 : 		if(IsRecentlyBulliedByMajor(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsRecentlyBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsRecentlyBulliedByMajor
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN51@IsValidQue

; 3609 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN51@IsValidQue:

; 3610 : 
; 3611 : 		if(!IsGoodTimeForNaturalWonderQuest(ePlayer))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsGoodTimeForNaturalWonderQuest@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsGoodTimeForNaturalWonderQuest
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN50@IsValidQue

; 3612 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN50@IsValidQue:

; 3613 : 	}

	jmp	$LN76@IsValidQue
$LN52@IsValidQue:

; 3614 : 	// GOLD GIFT
; 3615 : 	else if(eQuest == MINOR_CIV_QUEST_GIVE_GOLD)

	cmp	DWORD PTR _eQuest$[ebp], 8
	jne	SHORT $LN48@IsValidQue

; 3616 : 	{
; 3617 : 		// We don't need help if we've never been bullied
; 3618 : 		if(!IsEverBulliedByAnyMajor())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsEverBulliedByAnyMajor@CvMinorCivAI@@QBE_NXZ ; CvMinorCivAI::IsEverBulliedByAnyMajor
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN47@IsValidQue

; 3619 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN47@IsValidQue:

; 3620 : 
; 3621 : 		// This player must not have bullied us recently
; 3622 : 		if(IsRecentlyBulliedByMajor(ePlayer))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsRecentlyBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsRecentlyBulliedByMajor
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN46@IsValidQue

; 3623 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN46@IsValidQue:

; 3624 : 
; 3625 : 		// This player must not be the most recent bully
; 3626 : 		if(GetMostRecentBullyForQuest() == ePlayer)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMostRecentBullyForQuest@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetMostRecentBullyForQuest
	cmp	eax, DWORD PTR _ePlayer$[ebp]
	jne	SHORT $LN45@IsValidQue

; 3627 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN45@IsValidQue:

; 3628 : 
; 3629 : 		if(!IsGoodTimeForGiveGoldQuest())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsGoodTimeForGiveGoldQuest@CvMinorCivAI@@QAE_NXZ ; CvMinorCivAI::IsGoodTimeForGiveGoldQuest
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN44@IsValidQue

; 3630 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN44@IsValidQue:

; 3631 : 	}

	jmp	$LN76@IsValidQue
$LN48@IsValidQue:

; 3632 : 	// PLEDGE TO PROTECT
; 3633 : 	else if(eQuest == MINOR_CIV_QUEST_PLEDGE_TO_PROTECT)

	cmp	DWORD PTR _eQuest$[ebp], 9
	jne	$LN42@IsValidQue

; 3634 : 	{
; 3635 : 		// We don't need help if we've never been bullied
; 3636 : 		if(!IsEverBulliedByAnyMajor())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsEverBulliedByAnyMajor@CvMinorCivAI@@QBE_NXZ ; CvMinorCivAI::IsEverBulliedByAnyMajor
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN41@IsValidQue

; 3637 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN41@IsValidQue:

; 3638 : 
; 3639 : 		// This player must not have bullied us recently
; 3640 : 		if(IsRecentlyBulliedByMajor(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsRecentlyBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsRecentlyBulliedByMajor
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN40@IsValidQue

; 3641 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN40@IsValidQue:

; 3642 : 
; 3643 : 		// This player must not be the most recent bully
; 3644 : 		if(GetMostRecentBullyForQuest() == ePlayer)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMostRecentBullyForQuest@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetMostRecentBullyForQuest
	cmp	eax, DWORD PTR _ePlayer$[ebp]
	jne	SHORT $LN39@IsValidQue

; 3645 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN39@IsValidQue:

; 3646 : 
; 3647 : 		// Only if we aren't already protected by this major, and the major is allowed to start
; 3648 : 		if(!CanMajorStartProtection(ePlayer))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CanMajorStartProtection@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorStartProtection
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN38@IsValidQue

; 3649 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN38@IsValidQue:

; 3650 : 
; 3651 : 		if(!IsGoodTimeForPledgeToProtectQuest())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsGoodTimeForPledgeToProtectQuest@CvMinorCivAI@@QAE_NXZ ; CvMinorCivAI::IsGoodTimeForPledgeToProtectQuest
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN37@IsValidQue

; 3652 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN37@IsValidQue:

; 3653 : 	}

	jmp	$LN76@IsValidQue
$LN42@IsValidQue:

; 3654 : 	// CONTEST CULTURE
; 3655 : 	else if(eQuest == MINOR_CIV_QUEST_CONTEST_CULTURE)

	cmp	DWORD PTR _eQuest$[ebp], 10		; 0000000aH
	jne	SHORT $LN35@IsValidQue
	jmp	$LN76@IsValidQue
$LN35@IsValidQue:

; 3656 : 	{
; 3657 : 	}
; 3658 : 	// CONTEST FAITH
; 3659 : 	else if(eQuest == MINOR_CIV_QUEST_CONTEST_FAITH)

	cmp	DWORD PTR _eQuest$[ebp], 11		; 0000000bH
	jne	SHORT $LN33@IsValidQue
	jmp	$LN76@IsValidQue
$LN33@IsValidQue:

; 3660 : 	{
; 3661 : 	}
; 3662 : 	// CONTEST TECHS
; 3663 : 	else if(eQuest == MINOR_CIV_QUEST_CONTEST_TECHS)

	cmp	DWORD PTR _eQuest$[ebp], 12		; 0000000cH
	jne	SHORT $LN31@IsValidQue
	jmp	$LN76@IsValidQue
$LN31@IsValidQue:

; 3664 : 	{
; 3665 : 	}
; 3666 : 	// Invest
; 3667 : 	else if(eQuest == MINOR_CIV_QUEST_INVEST)

	cmp	DWORD PTR _eQuest$[ebp], 13		; 0000000dH
	jne	SHORT $LN29@IsValidQue

; 3668 : 	{
; 3669 : 		// This player must not have bullied us recently
; 3670 : 		if(IsRecentlyBulliedByMajor(ePlayer))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsRecentlyBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsRecentlyBulliedByMajor
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN28@IsValidQue

; 3671 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN28@IsValidQue:

; 3672 : 	}

	jmp	$LN76@IsValidQue
$LN29@IsValidQue:

; 3673 : 	// Bully target City-State
; 3674 : 	else if(eQuest == MINOR_CIV_QUEST_BULLY_CITY_STATE)

	cmp	DWORD PTR _eQuest$[ebp], 14		; 0000000eH
	jne	SHORT $LN26@IsValidQue

; 3675 : 	{
; 3676 : 		// This player must not have bullied us recently
; 3677 : 		if(IsRecentlyBulliedByMajor(ePlayer))

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsRecentlyBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsRecentlyBulliedByMajor
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN25@IsValidQue

; 3678 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN25@IsValidQue:

; 3679 : 
; 3680 : 		PlayerTypes eTargetCityState = GetBestCityStateTarget(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBestCityStateTarget@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z ; CvMinorCivAI::GetBestCityStateTarget
	mov	DWORD PTR _eTargetCityState$224219[ebp], eax

; 3681 : 
; 3682 : 		if(eTargetCityState == NO_PLAYER)

	cmp	DWORD PTR _eTargetCityState$224219[ebp], -1
	jne	SHORT $LN24@IsValidQue

; 3683 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN24@IsValidQue:

; 3684 : 	}

	jmp	$LN76@IsValidQue
$LN26@IsValidQue:

; 3685 : 	// Denounce target Major
; 3686 : 	else if(eQuest == MINOR_CIV_QUEST_DENOUNCE_MAJOR)

	cmp	DWORD PTR _eQuest$[ebp], 15		; 0000000fH
	jne	$LN22@IsValidQue

; 3687 : 	{
; 3688 : 		// We don't need help if we've never been bullied
; 3689 : 		if(!IsEverBulliedByAnyMajor())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsEverBulliedByAnyMajor@CvMinorCivAI@@QBE_NXZ ; CvMinorCivAI::IsEverBulliedByAnyMajor
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN21@IsValidQue

; 3690 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN21@IsValidQue:

; 3691 : 
; 3692 : 		// This player must not have bullied us recently
; 3693 : 		if(IsRecentlyBulliedByMajor(ePlayer))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsRecentlyBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsRecentlyBulliedByMajor
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@IsValidQue

; 3694 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN20@IsValidQue:

; 3695 : 
; 3696 : 		// Is there a recent bully?
; 3697 : 		if(!IsGoodTimeForDenounceMajorQuest())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsGoodTimeForDenounceMajorQuest@CvMinorCivAI@@QAE_NXZ ; CvMinorCivAI::IsGoodTimeForDenounceMajorQuest
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN19@IsValidQue

; 3698 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN19@IsValidQue:

; 3699 : 
; 3700 : 		// Don't ask in always war games
; 3701 : 		if(GC.getGame().isOption(GAMEOPTION_ALWAYS_WAR))

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T240277[ebp], edx
	push	3
	mov	ecx, DWORD PTR $T240277[ebp]
	call	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z ; CvGame::isOption
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@IsValidQue

; 3702 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN18@IsValidQue:

; 3703 : 		
; 3704 : 		PlayerTypes eMostRecentBully = GetMostRecentBullyForQuest();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMostRecentBullyForQuest@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetMostRecentBullyForQuest
	mov	DWORD PTR _eMostRecentBully$224227[ebp], eax

; 3705 : 
; 3706 : 		if(eMostRecentBully == NO_PLAYER)

	cmp	DWORD PTR _eMostRecentBully$224227[ebp], -1
	jne	SHORT $LN17@IsValidQue

; 3707 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN17@IsValidQue:

; 3708 : 
; 3709 : 		// This player must not be the most recent bully
; 3710 : 		if(eMostRecentBully == ePlayer)

	mov	ecx, DWORD PTR _eMostRecentBully$224227[ebp]
	cmp	ecx, DWORD PTR _ePlayer$[ebp]
	jne	SHORT $LN16@IsValidQue

; 3711 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN16@IsValidQue:

; 3712 : 
; 3713 : 		// This player must not be teammates with the most recent bully (cannot denounce)
; 3714 : 		if(GET_PLAYER(ePlayer).getTeam() == GET_PLAYER(eMostRecentBully).getTeam())

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T240281[ebp], edx
	mov	eax, DWORD PTR $T240281[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T240290[ebp], eax
	mov	edx, DWORD PTR _eMostRecentBully$224227[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T240294[ebp], edx
	mov	eax, DWORD PTR $T240294[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	cmp	DWORD PTR $T240290[ebp], eax
	jne	SHORT $LN15@IsValidQue

; 3715 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN15@IsValidQue:

; 3716 : 
; 3717 : 		// This player must have met the most recent bully
; 3718 : 		if(!GET_TEAM(GET_PLAYER(ePlayer).getTeam()).isHasMet(GET_PLAYER(eMostRecentBully).getTeam()))

	mov	edx, DWORD PTR _eMostRecentBully$224227[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T240306[ebp], edx
	mov	eax, DWORD PTR $T240306[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T240315[ebp], eax
	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T240319[ebp], edx
	mov	eax, DWORD PTR $T240319[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T240328[ebp], eax
	mov	edx, DWORD PTR $T240328[ebp]
	imul	edx, 2984				; 00000ba8H
	add	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T240332[ebp], edx
	mov	eax, DWORD PTR $T240315[ebp]
	push	eax
	mov	ecx, DWORD PTR $T240332[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN14@IsValidQue

; 3719 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN14@IsValidQue:

; 3720 : 
; 3721 : 		// This player must not be at war with the most recent bully (cannot denounce)
; 3722 : 		if(GET_TEAM(GET_PLAYER(ePlayer).getTeam()).isAtWar(GET_PLAYER(eMostRecentBully).getTeam()))

	mov	edx, DWORD PTR _eMostRecentBully$224227[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T240336[ebp], edx
	mov	eax, DWORD PTR $T240336[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T240345[ebp], eax
	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T240349[ebp], edx
	mov	eax, DWORD PTR $T240349[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T240358[ebp], eax
	mov	edx, DWORD PTR $T240358[ebp]
	imul	edx, 2984				; 00000ba8H
	add	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T240362[ebp], edx
	mov	eax, DWORD PTR $T240345[ebp]
	push	eax
	mov	ecx, DWORD PTR $T240362[ebp]
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN13@IsValidQue

; 3723 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN13@IsValidQue:

; 3724 : 
; 3725 : 		// Humans are unable to denounce each other
; 3726 : 		if(GET_PLAYER(ePlayer).isHuman() && GET_PLAYER(eMostRecentBully).isHuman())

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T240366[ebp], edx
	mov	ecx, DWORD PTR $T240366[ebp]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@IsValidQue
	mov	ecx, DWORD PTR _eMostRecentBully$224227[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T240370[ebp], ecx
	mov	ecx, DWORD PTR $T240370[ebp]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN12@IsValidQue

; 3727 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN12@IsValidQue:

; 3728 : 
; 3729 : 		// This player must not have already denounced the most recent bully
; 3730 : 		if(GET_PLAYER(ePlayer).GetDiplomacyAI()->IsDenouncedPlayer(GetMostRecentBullyForQuest()))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T240374[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMostRecentBullyForQuest@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetMostRecentBullyForQuest
	push	eax
	mov	ecx, DWORD PTR $T240374[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsDenouncedPlayer@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsDenouncedPlayer
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN11@IsValidQue

; 3731 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN11@IsValidQue:

; 3732 : 	}

	jmp	$LN76@IsValidQue
$LN22@IsValidQue:

; 3733 : 	// Spread your religion to us
; 3734 : 	else if(eQuest == MINOR_CIV_QUEST_SPREAD_RELIGION)

	cmp	DWORD PTR _eQuest$[ebp], 16		; 00000010H
	jne	SHORT $LN9@IsValidQue

; 3735 : 	{
; 3736 : 		// This player must not have bullied us recently
; 3737 : 		if(IsRecentlyBulliedByMajor(ePlayer))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsRecentlyBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsRecentlyBulliedByMajor
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@IsValidQue

; 3738 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN8@IsValidQue:

; 3739 : 
; 3740 : 		// Player must have founded a religion
; 3741 : 		if(!GC.getGame().GetGameReligions()->HasCreatedReligion(ePlayer))

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T240378[ebp], ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T240378[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?HasCreatedReligion@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ; CvGameReligions::HasCreatedReligion
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN7@IsValidQue

; 3742 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN7@IsValidQue:

; 3743 : 
; 3744 : 		// Minor must not already share player's religion
; 3745 : 		if(IsSameReligionAsMajor(ePlayer))

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsSameReligionAsMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsSameReligionAsMajor
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN6@IsValidQue

; 3746 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN6@IsValidQue:

; 3747 : 	}

	jmp	$LN76@IsValidQue
$LN9@IsValidQue:

; 3748 : 	// Trade route
; 3749 : 	else if(eQuest == MINOR_CIV_QUEST_TRADE_ROUTE)

	cmp	DWORD PTR _eQuest$[ebp], 17		; 00000011H
	jne	$LN76@IsValidQue

; 3750 : 	{
; 3751 : 		// This player must not have bullied us recently
; 3752 : 		if(IsRecentlyBulliedByMajor(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsRecentlyBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsRecentlyBulliedByMajor
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@IsValidQue

; 3753 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN3@IsValidQue:

; 3754 : 
; 3755 : 		// This player must not already be connected
; 3756 : 		if(GC.getGame().GetGameTrade()->IsPlayerConnectedToPlayer(ePlayer, GetPlayer()->GetID()))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T240387[ebp], eax
	mov	edx, DWORD PTR $T240387[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T240388[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T240392[ebp], ecx
	mov	edx, DWORD PTR $T240388[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T240392[ebp]
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	ecx, eax
	call	?IsPlayerConnectedToPlayer@CvGameTrade@@QAE_NW4PlayerTypes@@0@Z ; CvGameTrade::IsPlayerConnectedToPlayer
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@IsValidQue

; 3757 : 			return false;

	xor	al, al
	jmp	$LN97@IsValidQue
$LN2@IsValidQue:

; 3758 : 
; 3759 : 		// This player must be able to build a trade route either by land or sea
; 3760 : 		if(!GC.getGame().GetGameTrade()->CanCreateTradeRoute(ePlayer,GetPlayer()->GetID(), DOMAIN_LAND) &&
; 3761 : 			!GC.getGame().GetGameTrade()->CanCreateTradeRoute(ePlayer,GetPlayer()->GetID(), DOMAIN_SEA))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T240401[ebp], eax
	mov	edx, DWORD PTR $T240401[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T240402[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T240406[ebp], ecx
	push	2
	mov	edx, DWORD PTR $T240402[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T240406[ebp]
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	ecx, eax
	call	?CanCreateTradeRoute@CvGameTrade@@QAE_NW4PlayerTypes@@0W4DomainTypes@@@Z ; CvGameTrade::CanCreateTradeRoute
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN76@IsValidQue
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T240415[ebp], eax
	mov	edx, DWORD PTR $T240415[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T240416[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T240420[ebp], ecx
	push	0
	mov	edx, DWORD PTR $T240416[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T240420[ebp]
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	ecx, eax
	call	?CanCreateTradeRoute@CvGameTrade@@QAE_NW4PlayerTypes@@0W4DomainTypes@@@Z ; CvGameTrade::CanCreateTradeRoute
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN76@IsValidQue

; 3762 : 			return false;

	xor	al, al
	jmp	SHORT $LN97@IsValidQue
$LN76@IsValidQue:

; 3763 : 	}
; 3764 : 	return true;

	mov	al, 1
$LN97@IsValidQue:

; 3765 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?IsValidQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ENDP ; CvMinorCivAI::IsValidQuestForPlayer
_TEXT	ENDS
EXTRN	?GetID@CvTeam@@QBE?AW4TeamTypes@@XZ:PROC	; CvTeam::GetID
; Function compile flags: /Odtp
;	COMDAT ?IsValidQuestCopyForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@PAVCvMinorCivQuest@@@Z
_TEXT	SEGMENT
tv250 = -124						; size = 4
tv265 = -120						; size = 4
_this$ = -116						; size = 4
$T240589 = -112						; size = 4
$T240541 = -108						; size = 4
$T240528 = -104						; size = 4
$T240524 = -100						; size = 4
$T240510 = -96						; size = 4
$T240506 = -89						; size = 1
$T240495 = -88						; size = 4
$T240491 = -81						; size = 1
_iMapY$240550 = -80					; size = 4
_iMapX$240549 = -76					; size = 4
$T240484 = -72						; size = 4
$T240480 = -68						; size = 4
$T240476 = -64						; size = 4
$T240472 = -60						; size = 4
$T240463 = -56						; size = 4
$T240459 = -52						; size = 4
$T240455 = -48						; size = 4
$T240454 = -44						; size = 4
$T240445 = -37						; size = 1
$T240444 = -36						; size = 4
$T240435 = -29						; size = 1
$T240426 = -28						; size = 4
_pPlot$224265 = -24					; size = 4
_iCampX$224263 = -20					; size = 4
_iCampY$224264 = -16					; size = 4
_eQuestType$ = -12					; size = 4
_pMajorsCapital$ = -8					; size = 4
_pMinorsCapital$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
_pQuest$ = 12						; size = 4
?IsValidQuestCopyForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@PAVCvMinorCivQuest@@@Z PROC ; CvMinorCivAI::IsValidQuestCopyForPlayer, COMDAT
; _this$ = ecx

; 3769 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 124				; 0000007cH
	mov	DWORD PTR _this$[ebp], ecx

; 3770 : 	if(!pQuest)

	cmp	DWORD PTR _pQuest$[ebp], 0
	jne	SHORT $LN22@IsValidQue@2

; 3771 : 	{
; 3772 : 		CvAssertMsg(false, "Checking validity of copying an existing quest, but pQuest is NULL. Please send Anton your save file and version.");
; 3773 : 		return false;

	xor	al, al
	jmp	$LN23@IsValidQue@2
$LN22@IsValidQue@2:

; 3774 : 	}
; 3775 : 
; 3776 : 	MinorCivQuestTypes eQuestType = pQuest->GetType();

	mov	ecx, DWORD PTR _pQuest$[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	mov	DWORD PTR _eQuestType$[ebp], eax

; 3777 : 
; 3778 : 	// The quest type must be enabled
; 3779 : 	if(!IsEnabledQuest(eQuestType))

	mov	eax, DWORD PTR _eQuestType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsEnabledQuest@CvMinorCivAI@@QAE_NW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsEnabledQuest
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN21@IsValidQue@2

; 3780 : 		return false;

	xor	al, al
	jmp	$LN23@IsValidQue@2
$LN21@IsValidQue@2:

; 3781 : 
; 3782 : 	// Somebody's dead, that's no good
; 3783 : 	if(!GET_PLAYER(ePlayer).isAlive() || !GetPlayer()->isAlive())

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T240426[ebp], edx
	mov	eax, DWORD PTR $T240426[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T240435[ebp], cl
	movzx	edx, BYTE PTR $T240435[ebp]
	test	edx, edx
	je	SHORT $LN19@IsValidQue@2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T240444[ebp], eax
	mov	eax, DWORD PTR $T240444[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T240445[ebp], cl
	movzx	edx, BYTE PTR $T240445[ebp]
	test	edx, edx
	jne	SHORT $LN20@IsValidQue@2
$LN19@IsValidQue@2:

; 3784 : 		return false;

	xor	al, al
	jmp	$LN23@IsValidQue@2
$LN20@IsValidQue@2:

; 3785 : 
; 3786 : 	// No quests are valid if we are at war
; 3787 : 	if(IsAtWarWithPlayersTeam(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAtWarWithPlayersTeam@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAtWarWithPlayersTeam
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN18@IsValidQue@2

; 3788 : 		return false;

	xor	al, al
	jmp	$LN23@IsValidQue@2
$LN18@IsValidQue@2:

; 3789 : 
; 3790 : 	// antonjs: todo: dehackify
; 3791 : 	if(!IsHasMetPlayer(ePlayer) && !GET_TEAM(GET_PLAYER(ePlayer).getTeam()).isHasMet(GET_TEAM(GetPlayer()->getTeam()).GetID()))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsHasMetPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsHasMetPlayer
	movzx	eax, al
	test	eax, eax
	jne	$LN17@IsValidQue@2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T240454[ebp], eax
	mov	ecx, DWORD PTR $T240454[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T240455[ebp], eax
	mov	eax, DWORD PTR $T240455[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T240459[ebp], eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T240463[ebp], ecx
	mov	edx, DWORD PTR $T240463[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T240472[ebp], eax
	mov	ecx, DWORD PTR $T240472[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T240476[ebp], ecx
	mov	ecx, DWORD PTR $T240459[ebp]
	call	?GetID@CvTeam@@QBE?AW4TeamTypes@@XZ	; CvTeam::GetID
	push	eax
	mov	ecx, DWORD PTR $T240476[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN17@IsValidQue@2

; 3792 : 		return false;

	xor	al, al
	jmp	$LN23@IsValidQue@2
$LN17@IsValidQue@2:

; 3793 : 
; 3794 : 	// This player cannot already have an active quest of the same type
; 3795 : 	if(IsActiveQuestForPlayer(ePlayer, eQuestType))

	mov	eax, DWORD PTR _eQuestType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsActiveQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsActiveQuestForPlayer
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN16@IsValidQue@2

; 3796 : 		return false;

	xor	al, al
	jmp	$LN23@IsValidQue@2
$LN16@IsValidQue@2:

; 3797 : 
; 3798 : 	// Both players must have a capital
; 3799 : 	CvCity* pMinorsCapital = GetPlayer()->getCapitalCity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pMinorsCapital$[ebp], eax

; 3800 : 	CvCity* pMajorsCapital = GET_PLAYER(ePlayer).getCapitalCity();

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T240480[ebp], eax
	mov	ecx, DWORD PTR $T240480[ebp]
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pMajorsCapital$[ebp], eax

; 3801 : 	if(pMinorsCapital == NULL || pMajorsCapital == NULL)

	cmp	DWORD PTR _pMinorsCapital$[ebp], 0
	je	SHORT $LN14@IsValidQue@2
	cmp	DWORD PTR _pMajorsCapital$[ebp], 0
	jne	SHORT $LN15@IsValidQue@2
$LN14@IsValidQue@2:

; 3802 : 		return false;

	xor	al, al
	jmp	$LN23@IsValidQue@2
$LN15@IsValidQue@2:

; 3803 : 
; 3804 : 	// KILL A CAMP - Is the camp in the existing quest still around?
; 3805 : 	if(eQuestType == MINOR_CIV_QUEST_KILL_CAMP)

	cmp	DWORD PTR _eQuestType$[ebp], 1
	jne	$LN13@IsValidQue@2

; 3806 : 	{
; 3807 : 		int iCampX = pQuest->GetPrimaryData();

	mov	ecx, DWORD PTR _pQuest$[ebp]
	call	?GetPrimaryData@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetPrimaryData
	mov	DWORD PTR _iCampX$224263[ebp], eax

; 3808 : 		int iCampY = pQuest->GetSecondaryData();

	mov	ecx, DWORD PTR _pQuest$[ebp]
	call	?GetSecondaryData@CvMinorCivQuest@@QBEHXZ ; CvMinorCivQuest::GetSecondaryData
	mov	DWORD PTR _iCampY$224264[ebp], eax

; 3809 : 		CvPlot* pPlot = GC.getMap().plot(iCampX, iCampY);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T240484[ebp], ecx
	cmp	DWORD PTR _iCampX$224263[ebp], -2147483647 ; 80000001H
	je	SHORT $LN53@IsValidQue@2
	cmp	DWORD PTR _iCampY$224264[ebp], -2147483647 ; 80000001H
	jne	SHORT $LN54@IsValidQue@2
$LN53@IsValidQue@2:
	mov	DWORD PTR _pPlot$224265[ebp], 0
	jmp	$LN55@IsValidQue@2
$LN54@IsValidQue@2:
	mov	edx, DWORD PTR $T240484[ebp]
	mov	al, BYTE PTR [edx+4056]
	mov	BYTE PTR $T240491[ebp], al
	mov	ecx, DWORD PTR $T240484[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T240495[ebp], edx
	movzx	eax, BYTE PTR $T240491[ebp]
	test	eax, eax
	je	SHORT $LN66@IsValidQue@2
	cmp	DWORD PTR _iCampX$224263[ebp], 0
	jge	SHORT $LN65@IsValidQue@2
	mov	eax, DWORD PTR _iCampX$224263[ebp]
	cdq
	idiv	DWORD PTR $T240495[ebp]
	add	edx, DWORD PTR $T240495[ebp]
	mov	DWORD PTR _iMapX$240549[ebp], edx
	jmp	SHORT $LN67@IsValidQue@2
	jmp	SHORT $LN66@IsValidQue@2
$LN65@IsValidQue@2:
	mov	ecx, DWORD PTR _iCampX$224263[ebp]
	cmp	ecx, DWORD PTR $T240495[ebp]
	jl	SHORT $LN66@IsValidQue@2
	mov	eax, DWORD PTR _iCampX$224263[ebp]
	cdq
	idiv	DWORD PTR $T240495[ebp]
	mov	DWORD PTR _iMapX$240549[ebp], edx
	jmp	SHORT $LN67@IsValidQue@2
$LN66@IsValidQue@2:
	mov	edx, DWORD PTR _iCampX$224263[ebp]
	mov	DWORD PTR _iMapX$240549[ebp], edx
$LN67@IsValidQue@2:
	mov	eax, DWORD PTR $T240484[ebp]
	mov	cl, BYTE PTR [eax+4057]
	mov	BYTE PTR $T240506[ebp], cl
	mov	edx, DWORD PTR $T240484[ebp]
	mov	eax, DWORD PTR [edx+4024]
	mov	DWORD PTR $T240510[ebp], eax
	movzx	ecx, BYTE PTR $T240506[ebp]
	test	ecx, ecx
	je	SHORT $LN76@IsValidQue@2
	cmp	DWORD PTR _iCampY$224264[ebp], 0
	jge	SHORT $LN75@IsValidQue@2
	mov	eax, DWORD PTR _iCampY$224264[ebp]
	cdq
	idiv	DWORD PTR $T240510[ebp]
	add	edx, DWORD PTR $T240510[ebp]
	mov	DWORD PTR _iMapY$240550[ebp], edx
	jmp	SHORT $LN77@IsValidQue@2
	jmp	SHORT $LN76@IsValidQue@2
$LN75@IsValidQue@2:
	mov	edx, DWORD PTR _iCampY$224264[ebp]
	cmp	edx, DWORD PTR $T240510[ebp]
	jl	SHORT $LN76@IsValidQue@2
	mov	eax, DWORD PTR _iCampY$224264[ebp]
	cdq
	idiv	DWORD PTR $T240510[ebp]
	mov	DWORD PTR _iMapY$240550[ebp], edx
	jmp	SHORT $LN77@IsValidQue@2
$LN76@IsValidQue@2:
	mov	eax, DWORD PTR _iCampY$224264[ebp]
	mov	DWORD PTR _iMapY$240550[ebp], eax
$LN77@IsValidQue@2:
	cmp	DWORD PTR _iMapX$240549[ebp], 0
	jl	SHORT $LN81@IsValidQue@2
	mov	ecx, DWORD PTR $T240484[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T240524[ebp], edx
	mov	eax, DWORD PTR _iMapX$240549[ebp]
	cmp	eax, DWORD PTR $T240524[ebp]
	jge	SHORT $LN81@IsValidQue@2
	cmp	DWORD PTR _iMapY$240550[ebp], 0
	jl	SHORT $LN81@IsValidQue@2
	mov	ecx, DWORD PTR $T240484[ebp]
	mov	edx, DWORD PTR [ecx+4024]
	mov	DWORD PTR $T240528[ebp], edx
	mov	eax, DWORD PTR _iMapY$240550[ebp]
	cmp	eax, DWORD PTR $T240528[ebp]
	jge	SHORT $LN81@IsValidQue@2
	mov	DWORD PTR tv265[ebp], 1
	jmp	SHORT $LN79@IsValidQue@2
$LN81@IsValidQue@2:
	mov	DWORD PTR tv265[ebp], 0
$LN79@IsValidQue@2:
	cmp	DWORD PTR tv265[ebp], 0
	je	SHORT $LN57@IsValidQue@2
	mov	ecx, DWORD PTR $T240484[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T240541[ebp], edx
	mov	eax, DWORD PTR _iMapY$240550[ebp]
	imul	eax, DWORD PTR $T240541[ebp]
	add	eax, DWORD PTR _iMapX$240549[ebp]
	imul	eax, 484				; 000001e4H
	mov	ecx, DWORD PTR $T240484[ebp]
	add	eax, DWORD PTR [ecx+4068]
	mov	DWORD PTR tv250[ebp], eax
	jmp	SHORT $LN58@IsValidQue@2
$LN57@IsValidQue@2:
	mov	DWORD PTR tv250[ebp], 0
$LN58@IsValidQue@2:
	mov	edx, DWORD PTR tv250[ebp]
	mov	DWORD PTR _pPlot$224265[ebp], edx
$LN55@IsValidQue@2:

; 3810 : 		if(!pPlot)

	cmp	DWORD PTR _pPlot$224265[ebp], 0
	jne	SHORT $LN12@IsValidQue@2

; 3811 : 			return false;

	xor	al, al
	jmp	SHORT $LN23@IsValidQue@2
$LN12@IsValidQue@2:

; 3812 : 		if(pPlot->getImprovementType() != GC.getBARBARIAN_CAMP_IMPROVEMENT())

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8548
	mov	DWORD PTR $T240589[ebp], eax
	mov	ecx, DWORD PTR _pPlot$224265[ebp]
	call	?getImprovementType@CvPlot@@QBE?AW4ImprovementTypes@@XZ ; CvPlot::getImprovementType
	cmp	eax, DWORD PTR $T240589[ebp]
	je	SHORT $LN11@IsValidQue@2

; 3813 : 			return false;

	xor	al, al
	jmp	SHORT $LN23@IsValidQue@2
$LN11@IsValidQue@2:

; 3814 : 	}

	jmp	SHORT $LN10@IsValidQue@2
$LN13@IsValidQue@2:

; 3815 : 	// CONTEST CULTURE
; 3816 : 	else if(eQuestType == MINOR_CIV_QUEST_CONTEST_CULTURE)

	cmp	DWORD PTR _eQuestType$[ebp], 10		; 0000000aH
	jne	SHORT $LN9@IsValidQue@2
	jmp	SHORT $LN10@IsValidQue@2
$LN9@IsValidQue@2:

; 3817 : 	{
; 3818 : 	}
; 3819 : 	// CONTEST FAITH
; 3820 : 	else if(eQuestType == MINOR_CIV_QUEST_CONTEST_FAITH)

	cmp	DWORD PTR _eQuestType$[ebp], 11		; 0000000bH
	jne	SHORT $LN7@IsValidQue@2
	jmp	SHORT $LN10@IsValidQue@2
$LN7@IsValidQue@2:

; 3821 : 	{
; 3822 : 	}
; 3823 : 	// CONTEST TECHS
; 3824 : 	else if(eQuestType == MINOR_CIV_QUEST_CONTEST_TECHS)

	cmp	DWORD PTR _eQuestType$[ebp], 12		; 0000000cH
	jne	SHORT $LN5@IsValidQue@2
	jmp	SHORT $LN10@IsValidQue@2
$LN5@IsValidQue@2:

; 3825 : 	{
; 3826 : 	}
; 3827 : 	// Invest
; 3828 : 	else if(eQuestType == MINOR_CIV_QUEST_INVEST)

	cmp	DWORD PTR _eQuestType$[ebp], 13		; 0000000dH
	jne	SHORT $LN3@IsValidQue@2

; 3829 : 	{
; 3830 : 		// This player must not have bullied us recently
; 3831 : 		if(IsRecentlyBulliedByMajor(ePlayer))

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsRecentlyBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsRecentlyBulliedByMajor
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@IsValidQue@2

; 3832 : 			return false;

	xor	al, al
	jmp	SHORT $LN23@IsValidQue@2
$LN2@IsValidQue@2:

; 3833 : 	}
; 3834 : 	// Personal quests - This should not be done, just create a new quest from scratch!!
; 3835 : 	else

	jmp	SHORT $LN10@IsValidQue@2
$LN3@IsValidQue@2:

; 3836 : 	{
; 3837 : 		CvAssertMsg(false, "Checking validity of copying a personal quest using existing quest data.  This should not be done.  Please send Anton your save file and version.");
; 3838 : 		return IsValidQuestForPlayer(ePlayer, eQuestType);

	mov	eax, DWORD PTR _eQuestType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsValidQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsValidQuestForPlayer
	jmp	SHORT $LN23@IsValidQue@2
$LN10@IsValidQue@2:

; 3839 : 	}
; 3840 : 
; 3841 : 	return true;

	mov	al, 1
$LN23@IsValidQue@2:

; 3842 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?IsValidQuestCopyForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@PAVCvMinorCivQuest@@@Z ENDP ; CvMinorCivAI::IsValidQuestCopyForPlayer
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsGlobalQuest@CvMinorCivAI@@QBE_NW4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eQuest$ = 8						; size = 4
?IsGlobalQuest@CvMinorCivAI@@QBE_NW4MinorCivQuestTypes@@@Z PROC ; CvMinorCivAI::IsGlobalQuest, COMDAT
; _this$ = ecx

; 3846 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3847 : 	if(eQuest == MINOR_CIV_QUEST_KILL_CAMP)

	cmp	DWORD PTR _eQuest$[ebp], 1
	jne	SHORT $LN5@IsGlobalQu

; 3848 : 		return true;

	mov	al, 1
	jmp	SHORT $LN6@IsGlobalQu
$LN5@IsGlobalQu:

; 3849 : 
; 3850 : 	if(eQuest == MINOR_CIV_QUEST_CONTEST_CULTURE)

	cmp	DWORD PTR _eQuest$[ebp], 10		; 0000000aH
	jne	SHORT $LN4@IsGlobalQu

; 3851 : 		return true;

	mov	al, 1
	jmp	SHORT $LN6@IsGlobalQu
$LN4@IsGlobalQu:

; 3852 : 
; 3853 : 	if(eQuest == MINOR_CIV_QUEST_CONTEST_FAITH)

	cmp	DWORD PTR _eQuest$[ebp], 11		; 0000000bH
	jne	SHORT $LN3@IsGlobalQu

; 3854 : 		return true;

	mov	al, 1
	jmp	SHORT $LN6@IsGlobalQu
$LN3@IsGlobalQu:

; 3855 : 
; 3856 : 	if(eQuest == MINOR_CIV_QUEST_CONTEST_TECHS)

	cmp	DWORD PTR _eQuest$[ebp], 12		; 0000000cH
	jne	SHORT $LN2@IsGlobalQu

; 3857 : 		return true;

	mov	al, 1
	jmp	SHORT $LN6@IsGlobalQu
$LN2@IsGlobalQu:

; 3858 : 
; 3859 : 	if(eQuest == MINOR_CIV_QUEST_INVEST)

	cmp	DWORD PTR _eQuest$[ebp], 13		; 0000000dH
	jne	SHORT $LN1@IsGlobalQu

; 3860 : 		return true;

	mov	al, 1
	jmp	SHORT $LN6@IsGlobalQu
$LN1@IsGlobalQu:

; 3861 : 
; 3862 : 	return false;

	xor	al, al
$LN6@IsGlobalQu:

; 3863 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsGlobalQuest@CvMinorCivAI@@QBE_NW4MinorCivQuestTypes@@@Z ENDP ; CvMinorCivAI::IsGlobalQuest
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsPersonalQuest@CvMinorCivAI@@QBE_NW4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eQuest$ = 8						; size = 4
?IsPersonalQuest@CvMinorCivAI@@QBE_NW4MinorCivQuestTypes@@@Z PROC ; CvMinorCivAI::IsPersonalQuest, COMDAT
; _this$ = ecx

; 3866 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3867 : 	return (!IsGlobalQuest(eQuest));

	mov	eax, DWORD PTR _eQuest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsGlobalQuest@CvMinorCivAI@@QBE_NW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsGlobalQuest
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1

; 3868 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsPersonalQuest@CvMinorCivAI@@QBE_NW4MinorCivQuestTypes@@@Z ENDP ; CvMinorCivAI::IsPersonalQuest
_TEXT	ENDS
EXTRN	?countMajorCivsEverAlive@CvGame@@QBEHXZ:PROC	; CvGame::countMajorCivsEverAlive
; Function compile flags: /Odtp
;	COMDAT ?GetMinPlayersNeededForQuest@CvMinorCivAI@@QBEHW4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
tv76 = -24						; size = 4
_this$ = -20						; size = 4
$T240606 = -16						; size = 4
$T240599 = -12						; size = 4
_iPlayersNeeded$ = -8					; size = 4
_iMajorsEverAlive$ = -4					; size = 4
_eQuest$ = 8						; size = 4
?GetMinPlayersNeededForQuest@CvMinorCivAI@@QBEHW4MinorCivQuestTypes@@@Z PROC ; CvMinorCivAI::GetMinPlayersNeededForQuest, COMDAT
; _this$ = ecx

; 3871 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 3872 : 	int iPlayersNeeded = 1;

	mov	DWORD PTR _iPlayersNeeded$[ebp], 1

; 3873 : 
; 3874 : 	if(eQuest == MINOR_CIV_QUEST_CONTEST_CULTURE)

	cmp	DWORD PTR _eQuest$[ebp], 10		; 0000000aH
	jne	SHORT $LN7@GetMinPlay

; 3875 : 	{
; 3876 : 		iPlayersNeeded = 3; //antonjs: todo: XML

	mov	DWORD PTR _iPlayersNeeded$[ebp], 3
	jmp	SHORT $LN6@GetMinPlay
$LN7@GetMinPlay:

; 3877 : 	}
; 3878 : 
; 3879 : 	else if(eQuest == MINOR_CIV_QUEST_CONTEST_FAITH)

	cmp	DWORD PTR _eQuest$[ebp], 11		; 0000000bH
	jne	SHORT $LN5@GetMinPlay

; 3880 : 	{
; 3881 : 		iPlayersNeeded = 3; //antonjs: todo: XML

	mov	DWORD PTR _iPlayersNeeded$[ebp], 3
	jmp	SHORT $LN6@GetMinPlay
$LN5@GetMinPlay:

; 3882 : 	}
; 3883 : 
; 3884 : 	else if(eQuest == MINOR_CIV_QUEST_CONTEST_TECHS)

	cmp	DWORD PTR _eQuest$[ebp], 12		; 0000000cH
	jne	SHORT $LN3@GetMinPlay

; 3885 : 	{
; 3886 : 		iPlayersNeeded = 3; //antonjs: todo: XML

	mov	DWORD PTR _iPlayersNeeded$[ebp], 3
	jmp	SHORT $LN6@GetMinPlay
$LN3@GetMinPlay:

; 3887 : 	}
; 3888 : 
; 3889 : 	else if(eQuest == MINOR_CIV_QUEST_INVEST)

	cmp	DWORD PTR _eQuest$[ebp], 13		; 0000000dH
	jne	SHORT $LN6@GetMinPlay

; 3890 : 	{
; 3891 : 		iPlayersNeeded = 2; //antonjs: todo: XML

	mov	DWORD PTR _iPlayersNeeded$[ebp], 2
$LN6@GetMinPlay:

; 3892 : 	}
; 3893 : 
; 3894 : 	int iMajorsEverAlive = GC.getGame().countMajorCivsEverAlive();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T240599[ebp], eax
	mov	ecx, DWORD PTR $T240599[ebp]
	call	?countMajorCivsEverAlive@CvGame@@QBEHXZ	; CvGame::countMajorCivsEverAlive
	mov	DWORD PTR _iMajorsEverAlive$[ebp], eax

; 3895 : 	iPlayersNeeded = min(iPlayersNeeded, iMajorsEverAlive);

	mov	ecx, DWORD PTR _iMajorsEverAlive$[ebp]
	cmp	ecx, DWORD PTR _iPlayersNeeded$[ebp]
	jge	SHORT $LN14@GetMinPlay
	lea	edx, DWORD PTR _iMajorsEverAlive$[ebp]
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN15@GetMinPlay
$LN14@GetMinPlay:
	lea	eax, DWORD PTR _iPlayersNeeded$[ebp]
	mov	DWORD PTR tv76[ebp], eax
$LN15@GetMinPlay:
	mov	ecx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T240606[ebp], ecx
	mov	edx, DWORD PTR $T240606[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _iPlayersNeeded$[ebp], eax

; 3896 : 
; 3897 : 	return iPlayersNeeded;

	mov	eax, DWORD PTR _iPlayersNeeded$[ebp]

; 3898 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetMinPlayersNeededForQuest@CvMinorCivAI@@QBEHW4MinorCivQuestTypes@@@Z ENDP ; CvMinorCivAI::GetMinPlayersNeededForQuest
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetPersonalityQuestBias@CvMinorCivAI@@QAEHW4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
_this$ = -108						; size = 4
$T240702 = -104						; size = 4
$T240698 = -100						; size = 4
$T240694 = -96						; size = 4
$T240690 = -92						; size = 4
$T240686 = -88						; size = 4
$T240682 = -84						; size = 4
$T240678 = -80						; size = 4
$T240674 = -76						; size = 4
$T240670 = -72						; size = 4
$T240666 = -68						; size = 4
$T240662 = -64						; size = 4
$T240658 = -60						; size = 4
$T240654 = -56						; size = 4
$T240650 = -52						; size = 4
$T240646 = -48						; size = 4
$T240642 = -44						; size = 4
$T240638 = -40						; size = 4
$T240634 = -36						; size = 4
$T240630 = -32						; size = 4
$T240626 = -28						; size = 4
$T240622 = -24						; size = 4
$T240618 = -20						; size = 4
$T240614 = -16						; size = 4
_iCount$ = -12						; size = 4
_eTrait$ = -8						; size = 4
_ePersonality$ = -4					; size = 4
_eQuest$ = 8						; size = 4
?GetPersonalityQuestBias@CvMinorCivAI@@QAEHW4MinorCivQuestTypes@@@Z PROC ; CvMinorCivAI::GetPersonalityQuestBias, COMDAT
; _this$ = ecx

; 3902 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH
	mov	DWORD PTR _this$[ebp], ecx

; 3903 : 	// Multiply by 10 to give us some more fidelity. We'll remove it at the bottom
; 3904 : 	int iCount = 10 * /*10*/ GC.getMINOR_CIV_QUEST_WEIGHT_DEFAULT();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3324
	mov	DWORD PTR $T240614[ebp], eax
	mov	ecx, DWORD PTR $T240614[ebp]
	imul	ecx, 10					; 0000000aH
	mov	DWORD PTR _iCount$[ebp], ecx

; 3905 : 
; 3906 : 	MinorCivPersonalityTypes ePersonality = GetPersonality();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPersonality@CvMinorCivAI@@QBE?AW4MinorCivPersonalityTypes@@XZ ; CvMinorCivAI::GetPersonality
	mov	DWORD PTR _ePersonality$[ebp], eax

; 3907 : 	MinorCivTraitTypes eTrait = GetTrait();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait
	mov	DWORD PTR _eTrait$[ebp], eax

; 3908 : 
; 3909 : 	// ******************
; 3910 : 	// Personal Quests
; 3911 : 	// ******************
; 3912 : 
; 3913 : 	// ROUTE
; 3914 : 	if(eQuest == MINOR_CIV_QUEST_ROUTE)

	cmp	DWORD PTR _eQuest$[ebp], 0
	jne	$LN77@GetPersona

; 3915 : 	{
; 3916 : 		if(ePersonality == MINOR_CIV_PERSONALITY_FRIENDLY)		// Friendly

	cmp	DWORD PTR _ePersonality$[ebp], 0
	jne	SHORT $LN76@GetPersona

; 3917 : 		{
; 3918 : 			iCount *= /*200*/ GC.getMINOR_CIV_QUEST_WEIGHT_MULTIPLIER_FRIENDLY_ROUTE();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3328
	mov	DWORD PTR $T240618[ebp], edx
	mov	eax, DWORD PTR _iCount$[ebp]
	imul	eax, DWORD PTR $T240618[ebp]
	mov	DWORD PTR _iCount$[ebp], eax

; 3919 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN76@GetPersona:

; 3920 : 		}
; 3921 : 		if(ePersonality == MINOR_CIV_PERSONALITY_HOSTILE)		// Hostile

	cmp	DWORD PTR _ePersonality$[ebp], 2
	jne	SHORT $LN75@GetPersona

; 3922 : 		{
; 3923 : 			iCount *= /*20*/ GC.getMINOR_CIV_QUEST_WEIGHT_MULTIPLIER_HOSTILE_ROUTE();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3332
	mov	DWORD PTR $T240622[ebp], edx
	mov	eax, DWORD PTR _iCount$[ebp]
	imul	eax, DWORD PTR $T240622[ebp]
	mov	DWORD PTR _iCount$[ebp], eax

; 3924 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN75@GetPersona:

; 3925 : 		}
; 3926 : 		if(eTrait == MINOR_CIV_TRAIT_MARITIME)						// Maritime

	cmp	DWORD PTR _eTrait$[ebp], 2
	jne	SHORT $LN74@GetPersona

; 3927 : 		{
; 3928 : 			iCount *= /*120*/ GC.getMINOR_CIV_QUEST_WEIGHT_MULTIPLIER_MARITIME_ROUTE();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3336
	mov	DWORD PTR $T240626[ebp], edx
	mov	eax, DWORD PTR _iCount$[ebp]
	imul	eax, DWORD PTR $T240626[ebp]
	mov	DWORD PTR _iCount$[ebp], eax

; 3929 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN74@GetPersona:

; 3930 : 		}
; 3931 : 		if(eTrait == MINOR_CIV_TRAIT_MERCANTILE)

	cmp	DWORD PTR _eTrait$[ebp], 3
	jne	SHORT $LN73@GetPersona

; 3932 : 		{
; 3933 : 			iCount *= /*150*/ GC.getMINOR_CIV_QUEST_WEIGHT_MULTIPLIER_MERCANTILE_ROUTE();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3340
	mov	DWORD PTR $T240630[ebp], edx
	mov	eax, DWORD PTR _iCount$[ebp]
	imul	eax, DWORD PTR $T240630[ebp]
	mov	DWORD PTR _iCount$[ebp], eax

; 3934 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN73@GetPersona:

; 3935 : 		}
; 3936 : 	}

	jmp	$LN72@GetPersona
$LN77@GetPersona:

; 3937 : 
; 3938 : 	// CONNECT A RESOURCE
; 3939 : 	else if(eQuest == MINOR_CIV_QUEST_CONNECT_RESOURCE)

	cmp	DWORD PTR _eQuest$[ebp], 2
	jne	SHORT $LN71@GetPersona

; 3940 : 	{
; 3941 : 		if(eTrait == MINOR_CIV_TRAIT_MARITIME)						// Maritime

	cmp	DWORD PTR _eTrait$[ebp], 2
	jne	SHORT $LN70@GetPersona

; 3942 : 		{
; 3943 : 			iCount *= /*200*/ GC.getMINOR_CIV_QUEST_WEIGHT_MULTIPLIER_MARITIME_CONNECT_RESOURCE();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3348
	mov	DWORD PTR $T240634[ebp], edx
	mov	eax, DWORD PTR _iCount$[ebp]
	imul	eax, DWORD PTR $T240634[ebp]
	mov	DWORD PTR _iCount$[ebp], eax

; 3944 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN70@GetPersona:

; 3945 : 		}
; 3946 : 		if(eTrait == MINOR_CIV_TRAIT_MERCANTILE)

	cmp	DWORD PTR _eTrait$[ebp], 3
	jne	SHORT $LN69@GetPersona

; 3947 : 		{
; 3948 : 			iCount *= /*300*/ GC.getMINOR_CIV_QUEST_WEIGHT_MULTIPLIER_MERCANTILE_CONNECT_RESOURCE();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3352
	mov	DWORD PTR $T240638[ebp], edx
	mov	eax, DWORD PTR _iCount$[ebp]
	imul	eax, DWORD PTR $T240638[ebp]
	mov	DWORD PTR _iCount$[ebp], eax

; 3949 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN69@GetPersona:

; 3950 : 		}
; 3951 : 	}

	jmp	$LN72@GetPersona
$LN71@GetPersona:

; 3952 : 
; 3953 : 	// CONSTRUCT A WONDER
; 3954 : 	else if(eQuest == MINOR_CIV_QUEST_CONSTRUCT_WONDER)

	cmp	DWORD PTR _eQuest$[ebp], 3
	jne	SHORT $LN67@GetPersona

; 3955 : 	{
; 3956 : 		if(eTrait == MINOR_CIV_TRAIT_CULTURED)						// Cultured

	cmp	DWORD PTR _eTrait$[ebp], 0
	jne	SHORT $LN66@GetPersona

; 3957 : 		{
; 3958 : 			iCount *= /*300*/ GC.getMINOR_CIV_QUEST_WEIGHT_MULTIPLIER_CULTURED_CONSTRUCT_WONDER();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3356
	mov	DWORD PTR $T240642[ebp], edx
	mov	eax, DWORD PTR _iCount$[ebp]
	imul	eax, DWORD PTR $T240642[ebp]
	mov	DWORD PTR _iCount$[ebp], eax

; 3959 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN66@GetPersona:

; 3960 : 		}
; 3961 : 	}

	jmp	$LN72@GetPersona
$LN67@GetPersona:

; 3962 : 
; 3963 : 	// GREAT PERSON
; 3964 : 	else if(eQuest == MINOR_CIV_QUEST_GREAT_PERSON)

	cmp	DWORD PTR _eQuest$[ebp], 4
	jne	SHORT $LN64@GetPersona

; 3965 : 	{
; 3966 : 		if(eTrait == MINOR_CIV_TRAIT_CULTURED)						// Cultured

	cmp	DWORD PTR _eTrait$[ebp], 0
	jne	SHORT $LN63@GetPersona

; 3967 : 		{
; 3968 : 			iCount *= /*300*/ GC.getMINOR_CIV_QUEST_WEIGHT_MULTIPLIER_CULTURED_GREAT_PERSON();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3360
	mov	DWORD PTR $T240646[ebp], edx
	mov	eax, DWORD PTR _iCount$[ebp]
	imul	eax, DWORD PTR $T240646[ebp]
	mov	DWORD PTR _iCount$[ebp], eax

; 3969 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN63@GetPersona:

; 3970 : 		}
; 3971 : 	}

	jmp	$LN72@GetPersona
$LN64@GetPersona:

; 3972 : 
; 3973 : 	// KILL ANOTHER CITY STATE
; 3974 : 	else if(eQuest == MINOR_CIV_QUEST_KILL_CITY_STATE)

	cmp	DWORD PTR _eQuest$[ebp], 5
	jne	SHORT $LN61@GetPersona

; 3975 : 	{
; 3976 : 		if(eTrait == MINOR_CIV_TRAIT_MILITARISTIC)					// Militaristic

	cmp	DWORD PTR _eTrait$[ebp], 1
	jne	SHORT $LN60@GetPersona

; 3977 : 		{
; 3978 : 			iCount *= /*200*/ GC.getMINOR_CIV_QUEST_WEIGHT_MULTIPLIER_MILITARISTIC_KILL_CITY_STATE();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3364
	mov	DWORD PTR $T240650[ebp], edx
	mov	eax, DWORD PTR _iCount$[ebp]
	imul	eax, DWORD PTR $T240650[ebp]
	mov	DWORD PTR _iCount$[ebp], eax

; 3979 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN60@GetPersona:

; 3980 : 		}
; 3981 : 		if(ePersonality == MINOR_CIV_PERSONALITY_HOSTILE)		// Hostile

	cmp	DWORD PTR _ePersonality$[ebp], 2
	jne	SHORT $LN59@GetPersona

; 3982 : 		{
; 3983 : 			iCount *= /*200*/ GC.getMINOR_CIV_QUEST_WEIGHT_MULTIPLIER_HOSTILE_KILL_CITY_STATE();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3368
	mov	DWORD PTR $T240654[ebp], edx
	mov	eax, DWORD PTR _iCount$[ebp]
	imul	eax, DWORD PTR $T240654[ebp]
	mov	DWORD PTR _iCount$[ebp], eax

; 3984 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN59@GetPersona:

; 3985 : 		}
; 3986 : 		if(ePersonality == MINOR_CIV_PERSONALITY_NEUTRAL)		// Neutral

	cmp	DWORD PTR _ePersonality$[ebp], 1
	jne	SHORT $LN58@GetPersona

; 3987 : 		{
; 3988 : 			iCount *= /*40*/ GC.getMINOR_CIV_QUEST_WEIGHT_MULTIPLIER_NEUTRAL_KILL_CITY_STATE();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3372
	mov	DWORD PTR $T240658[ebp], edx
	mov	eax, DWORD PTR _iCount$[ebp]
	imul	eax, DWORD PTR $T240658[ebp]
	mov	DWORD PTR _iCount$[ebp], eax

; 3989 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN58@GetPersona:

; 3990 : 		}
; 3991 : 	}

	jmp	$LN72@GetPersona
$LN61@GetPersona:

; 3992 : 
; 3993 : 	// FIND ANOTHER PLAYER
; 3994 : 	else if(eQuest == MINOR_CIV_QUEST_FIND_PLAYER)

	cmp	DWORD PTR _eQuest$[ebp], 6
	jne	SHORT $LN56@GetPersona

; 3995 : 	{
; 3996 : 		if(eTrait == MINOR_CIV_TRAIT_MARITIME)						// Maritime

	cmp	DWORD PTR _eTrait$[ebp], 2
	jne	SHORT $LN55@GetPersona

; 3997 : 		{
; 3998 : 			iCount *= /*300*/ GC.getMINOR_CIV_QUEST_WEIGHT_MULTIPLIER_MARITIME_FIND_PLAYER();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3376
	mov	DWORD PTR $T240662[ebp], edx
	mov	eax, DWORD PTR _iCount$[ebp]
	imul	eax, DWORD PTR $T240662[ebp]
	mov	DWORD PTR _iCount$[ebp], eax

; 3999 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN55@GetPersona:

; 4000 : 		}
; 4001 : 		if(eTrait == MINOR_CIV_TRAIT_MERCANTILE)

	cmp	DWORD PTR _eTrait$[ebp], 3
	jne	SHORT $LN54@GetPersona

; 4002 : 		{
; 4003 : 			iCount *= /*200*/ GC.getMINOR_CIV_QUEST_WEIGHT_MULTIPLIER_MERCANTILE_FIND_PLAYER();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3380
	mov	DWORD PTR $T240666[ebp], edx
	mov	eax, DWORD PTR _iCount$[ebp]
	imul	eax, DWORD PTR $T240666[ebp]
	mov	DWORD PTR _iCount$[ebp], eax

; 4004 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN54@GetPersona:

; 4005 : 		}
; 4006 : 	}

	jmp	$LN72@GetPersona
$LN56@GetPersona:

; 4007 : 
; 4008 : 	// FIND NATURAL WONDER
; 4009 : 	else if(eQuest == MINOR_CIV_QUEST_FIND_NATURAL_WONDER)

	cmp	DWORD PTR _eQuest$[ebp], 7
	jne	SHORT $LN52@GetPersona

; 4010 : 	{
; 4011 : 		if(eTrait == MINOR_CIV_TRAIT_MILITARISTIC)					// Militaristic

	cmp	DWORD PTR _eTrait$[ebp], 1
	jne	SHORT $LN51@GetPersona

; 4012 : 		{
; 4013 : 			iCount *= /*50*/ GC.getMINOR_CIV_QUEST_WEIGHT_MULTIPLIER_MILITARISTIC_FIND_NATURAL_WONDER();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3384
	mov	DWORD PTR $T240670[ebp], edx
	mov	eax, DWORD PTR _iCount$[ebp]
	imul	eax, DWORD PTR $T240670[ebp]
	mov	DWORD PTR _iCount$[ebp], eax

; 4014 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN51@GetPersona:

; 4015 : 		}
; 4016 : 		if(ePersonality == MINOR_CIV_PERSONALITY_HOSTILE)		// Hostile

	cmp	DWORD PTR _ePersonality$[ebp], 2
	jne	SHORT $LN50@GetPersona

; 4017 : 		{
; 4018 : 			iCount *= /*30*/ GC.getMINOR_CIV_QUEST_WEIGHT_MULTIPLIER_HOSTILE_FIND_NATURAL_WONDER();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3388
	mov	DWORD PTR $T240674[ebp], edx
	mov	eax, DWORD PTR _iCount$[ebp]
	imul	eax, DWORD PTR $T240674[ebp]
	mov	DWORD PTR _iCount$[ebp], eax

; 4019 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN50@GetPersona:

; 4020 : 		}
; 4021 : 	}

	jmp	$LN72@GetPersona
$LN52@GetPersona:

; 4022 : 
; 4023 : 	// GOLD GIFT
; 4024 : 	else if(eQuest == MINOR_CIV_QUEST_GIVE_GOLD)

	cmp	DWORD PTR _eQuest$[ebp], 8
	jne	SHORT $LN48@GetPersona

; 4025 : 	{
; 4026 : 		//antonjs: consider: split quest bias into two categories, so that we can guarantee a support quest when a CS is bullied recently
; 4027 : 
; 4028 : 		if(eTrait == MINOR_CIV_TRAIT_MILITARISTIC)  // We are tough, we don't need your charity

	cmp	DWORD PTR _eTrait$[ebp], 1
	jne	SHORT $LN47@GetPersona

; 4029 : 		{
; 4030 : 			iCount *= /*200*/ GC.getMINOR_CIV_QUEST_WEIGHT_MULTIPLIER_MILITARISTIC_GIVE_GOLD();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3392
	mov	DWORD PTR $T240678[ebp], edx
	mov	eax, DWORD PTR _iCount$[ebp]
	imul	eax, DWORD PTR $T240678[ebp]
	mov	DWORD PTR _iCount$[ebp], eax

; 4031 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
	jmp	SHORT $LN46@GetPersona
$LN47@GetPersona:

; 4032 : 		}
; 4033 : 		else if(eTrait == MINOR_CIV_TRAIT_MERCANTILE)  // Money is the answer to everything!

	cmp	DWORD PTR _eTrait$[ebp], 3
	jne	SHORT $LN45@GetPersona

; 4034 : 		{
; 4035 : 			iCount *= /*350*/ GC.getMINOR_CIV_QUEST_WEIGHT_MULTIPLIER_MERCANTILE_GIVE_GOLD();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3396
	mov	DWORD PTR $T240682[ebp], edx
	mov	eax, DWORD PTR _iCount$[ebp]
	imul	eax, DWORD PTR $T240682[ebp]
	mov	DWORD PTR _iCount$[ebp], eax

; 4036 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax

; 4037 : 		}
; 4038 : 		else

	jmp	SHORT $LN46@GetPersona
$LN45@GetPersona:

; 4039 : 		{
; 4040 : 			iCount *= /*300*/ GC.getMINOR_CIV_QUEST_WEIGHT_MULTIPLIER_OTHER_GIVE_GOLD();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3400
	mov	DWORD PTR $T240686[ebp], edx
	mov	eax, DWORD PTR _iCount$[ebp]
	imul	eax, DWORD PTR $T240686[ebp]
	mov	DWORD PTR _iCount$[ebp], eax

; 4041 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN46@GetPersona:

; 4042 : 		}

	jmp	$LN72@GetPersona
$LN48@GetPersona:

; 4043 : 	}
; 4044 : 
; 4045 : 	// PLEDGE TO PROTECT
; 4046 : 	else if(eQuest == MINOR_CIV_QUEST_PLEDGE_TO_PROTECT)

	cmp	DWORD PTR _eQuest$[ebp], 9
	jne	SHORT $LN42@GetPersona

; 4047 : 	{
; 4048 : 		if(eTrait == MINOR_CIV_TRAIT_MILITARISTIC)  // We are tough, we don't need your charity

	cmp	DWORD PTR _eTrait$[ebp], 1
	jne	SHORT $LN41@GetPersona

; 4049 : 		{
; 4050 : 			iCount *= /*200*/ GC.getMINOR_CIV_QUEST_WEIGHT_MULTIPLIER_MILITARISTIC_PLEDGE_TO_PROTECT();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3404
	mov	DWORD PTR $T240690[ebp], edx
	mov	eax, DWORD PTR _iCount$[ebp]
	imul	eax, DWORD PTR $T240690[ebp]
	mov	DWORD PTR _iCount$[ebp], eax

; 4051 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
	jmp	SHORT $LN40@GetPersona
$LN41@GetPersona:

; 4052 : 		}
; 4053 : 		else if(eTrait == MINOR_CIV_TRAIT_CULTURED)  // Military?  We don't have one of those!

	cmp	DWORD PTR _eTrait$[ebp], 0
	jne	SHORT $LN39@GetPersona

; 4054 : 		{
; 4055 : 			iCount *= /*350*/ GC.getMINOR_CIV_QUEST_WEIGHT_MULTIPLIER_CULTURED_PLEDGE_TO_PROTECT();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3408
	mov	DWORD PTR $T240694[ebp], edx
	mov	eax, DWORD PTR _iCount$[ebp]
	imul	eax, DWORD PTR $T240694[ebp]
	mov	DWORD PTR _iCount$[ebp], eax

; 4056 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax

; 4057 : 		}
; 4058 : 		else

	jmp	SHORT $LN40@GetPersona
$LN39@GetPersona:

; 4059 : 		{
; 4060 : 			iCount *= /*300*/ GC.getMINOR_CIV_QUEST_WEIGHT_MULTIPLIER_OTHER_PLEDGE_TO_PROTECT();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3412
	mov	DWORD PTR $T240698[ebp], edx
	mov	eax, DWORD PTR _iCount$[ebp]
	imul	eax, DWORD PTR $T240698[ebp]
	mov	DWORD PTR _iCount$[ebp], eax

; 4061 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN40@GetPersona:

; 4062 : 		}

	jmp	$LN72@GetPersona
$LN42@GetPersona:

; 4063 : 	}
; 4064 : 
; 4065 : 	// Bully target City-State
; 4066 : 	else if(eQuest == MINOR_CIV_QUEST_BULLY_CITY_STATE)

	cmp	DWORD PTR _eQuest$[ebp], 14		; 0000000eH
	jne	SHORT $LN36@GetPersona

; 4067 : 	{
; 4068 : 		if(ePersonality == MINOR_CIV_PERSONALITY_HOSTILE)

	cmp	DWORD PTR _ePersonality$[ebp], 2
	jne	SHORT $LN35@GetPersona

; 4069 : 		{
; 4070 : 			iCount *= 200; //antonjs: todo: XML

	mov	edx, DWORD PTR _iCount$[ebp]
	imul	edx, 200				; 000000c8H
	mov	DWORD PTR _iCount$[ebp], edx

; 4071 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
	jmp	SHORT $LN34@GetPersona
$LN35@GetPersona:

; 4072 : 		}
; 4073 : 		else if(ePersonality == MINOR_CIV_PERSONALITY_IRRATIONAL)

	cmp	DWORD PTR _ePersonality$[ebp], 3
	jne	SHORT $LN33@GetPersona

; 4074 : 		{
; 4075 : 			iCount *= 150; //antonjs: todo: xml

	mov	edx, DWORD PTR _iCount$[ebp]
	imul	edx, 150				; 00000096H
	mov	DWORD PTR _iCount$[ebp], edx

; 4076 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
	jmp	SHORT $LN34@GetPersona
$LN33@GetPersona:

; 4077 : 		}
; 4078 : 		else if(ePersonality == MINOR_CIV_PERSONALITY_FRIENDLY)

	cmp	DWORD PTR _ePersonality$[ebp], 0
	jne	SHORT $LN34@GetPersona

; 4079 : 		{
; 4080 : 			iCount *= 30; //antonjs: todo: xml

	mov	edx, DWORD PTR _iCount$[ebp]
	imul	edx, 30					; 0000001eH
	mov	DWORD PTR _iCount$[ebp], edx

; 4081 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN34@GetPersona:

; 4082 : 		}
; 4083 : 	}

	jmp	$LN72@GetPersona
$LN36@GetPersona:

; 4084 : 
; 4085 : 	// Denounce target Major
; 4086 : 	else if(eQuest == MINOR_CIV_QUEST_DENOUNCE_MAJOR)

	cmp	DWORD PTR _eQuest$[ebp], 15		; 0000000fH
	jne	SHORT $LN29@GetPersona

; 4087 : 	{
; 4088 : 		if(eTrait == MINOR_CIV_TRAIT_RELIGIOUS)

	cmp	DWORD PTR _eTrait$[ebp], 4
	jne	SHORT $LN28@GetPersona

; 4089 : 		{
; 4090 : 			iCount *= 250; //antonjs: todo: xml

	mov	edx, DWORD PTR _iCount$[ebp]
	imul	edx, 250				; 000000faH
	mov	DWORD PTR _iCount$[ebp], edx

; 4091 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
	jmp	SHORT $LN27@GetPersona
$LN28@GetPersona:

; 4092 : 		}
; 4093 : 		else if(eTrait == MINOR_CIV_TRAIT_MARITIME)

	cmp	DWORD PTR _eTrait$[ebp], 2
	jne	SHORT $LN26@GetPersona

; 4094 : 		{
; 4095 : 			iCount *= 200; //antonjs: todo: xml

	mov	edx, DWORD PTR _iCount$[ebp]
	imul	edx, 200				; 000000c8H
	mov	DWORD PTR _iCount$[ebp], edx

; 4096 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax

; 4097 : 		}
; 4098 : 		else

	jmp	SHORT $LN27@GetPersona
$LN26@GetPersona:

; 4099 : 		{
; 4100 : 			iCount *= 150; //antonjs: todo: xml

	mov	edx, DWORD PTR _iCount$[ebp]
	imul	edx, 150				; 00000096H
	mov	DWORD PTR _iCount$[ebp], edx

; 4101 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN27@GetPersona:

; 4102 : 		}

	jmp	$LN72@GetPersona
$LN29@GetPersona:

; 4103 : 	}
; 4104 : 
; 4105 : 	// Spread your religion to us
; 4106 : 	else if(eQuest == MINOR_CIV_QUEST_SPREAD_RELIGION)

	cmp	DWORD PTR _eQuest$[ebp], 16		; 00000010H
	jne	SHORT $LN23@GetPersona

; 4107 : 	{
; 4108 : 		if(eTrait == MINOR_CIV_TRAIT_RELIGIOUS)

	cmp	DWORD PTR _eTrait$[ebp], 4
	jne	SHORT $LN22@GetPersona

; 4109 : 		{
; 4110 : 			iCount *= 300; //antonjs: todo: xml

	mov	edx, DWORD PTR _iCount$[ebp]
	imul	edx, 300				; 0000012cH
	mov	DWORD PTR _iCount$[ebp], edx

; 4111 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN22@GetPersona:

; 4112 : 		}
; 4113 : 	}

	jmp	$LN72@GetPersona
$LN23@GetPersona:

; 4114 : 
; 4115 : 	// Trade Route
; 4116 : 	else if(eQuest == MINOR_CIV_QUEST_TRADE_ROUTE)

	cmp	DWORD PTR _eQuest$[ebp], 17		; 00000011H
	jne	SHORT $LN20@GetPersona

; 4117 : 	{
; 4118 : 		if(eTrait == MINOR_CIV_TRAIT_MARITIME)

	cmp	DWORD PTR _eTrait$[ebp], 2
	jne	SHORT $LN19@GetPersona

; 4119 : 		{
; 4120 : 			iCount *= 200; //xml

	mov	edx, DWORD PTR _iCount$[ebp]
	imul	edx, 200				; 000000c8H
	mov	DWORD PTR _iCount$[ebp], edx

; 4121 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
	jmp	SHORT $LN18@GetPersona
$LN19@GetPersona:

; 4122 : 		}
; 4123 : 		else if(eTrait == MINOR_CIV_TRAIT_MERCANTILE)

	cmp	DWORD PTR _eTrait$[ebp], 3
	jne	SHORT $LN18@GetPersona

; 4124 : 		{
; 4125 : 			iCount *= 200; //xml

	mov	edx, DWORD PTR _iCount$[ebp]
	imul	edx, 200				; 000000c8H
	mov	DWORD PTR _iCount$[ebp], edx

; 4126 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN18@GetPersona:

; 4127 : 		}
; 4128 : 	}

	jmp	$LN72@GetPersona
$LN20@GetPersona:

; 4129 : 
; 4130 : 	// ******************
; 4131 : 	// Global Quests
; 4132 : 	// ******************
; 4133 : 
; 4134 : 	// CONTEST CULTURE
; 4135 : 	else if(eQuest == MINOR_CIV_QUEST_CONTEST_CULTURE)

	cmp	DWORD PTR _eQuest$[ebp], 10		; 0000000aH
	jne	SHORT $LN15@GetPersona

; 4136 : 	{
; 4137 : 		if(eTrait == MINOR_CIV_TRAIT_CULTURED)

	cmp	DWORD PTR _eTrait$[ebp], 0
	jne	SHORT $LN14@GetPersona

; 4138 : 		{
; 4139 : 			iCount *= 200; //antonjs: todo: XML

	mov	edx, DWORD PTR _iCount$[ebp]
	imul	edx, 200				; 000000c8H
	mov	DWORD PTR _iCount$[ebp], edx

; 4140 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN14@GetPersona:

; 4141 : 		}
; 4142 : 	}

	jmp	$LN72@GetPersona
$LN15@GetPersona:

; 4143 : 	// CONTEST FAITH
; 4144 : 	else if(eQuest == MINOR_CIV_QUEST_CONTEST_FAITH)

	cmp	DWORD PTR _eQuest$[ebp], 11		; 0000000bH
	jne	SHORT $LN12@GetPersona

; 4145 : 	{
; 4146 : 		if(eTrait == MINOR_CIV_TRAIT_RELIGIOUS)

	cmp	DWORD PTR _eTrait$[ebp], 4
	jne	SHORT $LN11@GetPersona

; 4147 : 		{
; 4148 : 			iCount *= 200; //antonjs: todo: XML

	mov	edx, DWORD PTR _iCount$[ebp]
	imul	edx, 200				; 000000c8H
	mov	DWORD PTR _iCount$[ebp], edx

; 4149 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax

; 4150 : 		}
; 4151 : 		else

	jmp	SHORT $LN10@GetPersona
$LN11@GetPersona:

; 4152 : 		{
; 4153 : 			iCount *= 50; //antonjs: todo: XML

	mov	edx, DWORD PTR _iCount$[ebp]
	imul	edx, 50					; 00000032H
	mov	DWORD PTR _iCount$[ebp], edx

; 4154 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN10@GetPersona:

; 4155 : 		}

	jmp	$LN72@GetPersona
$LN12@GetPersona:

; 4156 : 	}
; 4157 : 	// CONTEST TECHS
; 4158 : 	else if(eQuest == MINOR_CIV_QUEST_CONTEST_TECHS)

	cmp	DWORD PTR _eQuest$[ebp], 12		; 0000000cH
	jne	SHORT $LN8@GetPersona

; 4159 : 	{
; 4160 : 		if(eTrait == MINOR_CIV_TRAIT_RELIGIOUS)

	cmp	DWORD PTR _eTrait$[ebp], 4
	jne	SHORT $LN7@GetPersona

; 4161 : 		{
; 4162 : 			iCount += 50; //antonjs: todo: XML

	mov	edx, DWORD PTR _iCount$[ebp]
	add	edx, 50					; 00000032H
	mov	DWORD PTR _iCount$[ebp], edx

; 4163 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN7@GetPersona:

; 4164 : 		}
; 4165 : 	}

	jmp	SHORT $LN72@GetPersona
$LN8@GetPersona:

; 4166 : 
; 4167 : 	// KILL A CAMP
; 4168 : 	else if(eQuest == MINOR_CIV_QUEST_KILL_CAMP)

	cmp	DWORD PTR _eQuest$[ebp], 1
	jne	SHORT $LN5@GetPersona

; 4169 : 	{
; 4170 : 		iCount *= 300;

	mov	edx, DWORD PTR _iCount$[ebp]
	imul	edx, 300				; 0000012cH
	mov	DWORD PTR _iCount$[ebp], edx

; 4171 : 		iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax

; 4172 : 
; 4173 : 		if(eTrait == MINOR_CIV_TRAIT_MILITARISTIC)					// Militaristic

	cmp	DWORD PTR _eTrait$[ebp], 1
	jne	SHORT $LN4@GetPersona

; 4174 : 		{
; 4175 : 			iCount *= /*300*/ GC.getMINOR_CIV_QUEST_WEIGHT_MULTIPLIER_MILITARISTIC_KILL_CAMP();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3344
	mov	DWORD PTR $T240702[ebp], edx
	mov	eax, DWORD PTR _iCount$[ebp]
	imul	eax, DWORD PTR $T240702[ebp]
	mov	DWORD PTR _iCount$[ebp], eax

; 4176 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN4@GetPersona:

; 4177 : 		}
; 4178 : 	}

	jmp	SHORT $LN72@GetPersona
$LN5@GetPersona:

; 4179 : 
; 4180 : 	// Invest
; 4181 : 	else if(eQuest == MINOR_CIV_QUEST_INVEST)

	cmp	DWORD PTR _eQuest$[ebp], 13		; 0000000dH
	jne	SHORT $LN72@GetPersona

; 4182 : 	{
; 4183 : 		if(eTrait == MINOR_CIV_TRAIT_MERCANTILE)

	cmp	DWORD PTR _eTrait$[ebp], 3
	jne	SHORT $LN72@GetPersona

; 4184 : 		{
; 4185 : 			iCount *= 150; //antonjs: todo: XML

	mov	edx, DWORD PTR _iCount$[ebp]
	imul	edx, 150				; 00000096H
	mov	DWORD PTR _iCount$[ebp], edx

; 4186 : 			iCount /= 100;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCount$[ebp], eax
$LN72@GetPersona:

; 4187 : 		}
; 4188 : 	}
; 4189 : 
; 4190 : 	return iCount / 10;

	mov	eax, DWORD PTR _iCount$[ebp]
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx

; 4191 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetPersonalityQuestBias@CvMinorCivAI@@QAEHW4MinorCivQuestTypes@@@Z ENDP ; CvMinorCivAI::GetPersonalityQuestBias
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?GetNumActiveGlobalQuests@CvMinorCivAI@@QBEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetNumActiveGlobalQuests@CvMinorCivAI@@QBEHXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetNumActiveGlobalQuests@CvMinorCivAI@@QBEHXZ$4
__ehfuncinfo$?GetNumActiveGlobalQuests@CvMinorCivAI@@QBEHXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetNumActiveGlobalQuests@CvMinorCivAI@@QBEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?GetNumActiveGlobalQuests@CvMinorCivAI@@QBEHXZ
_TEXT	SEGMENT
_this$ = -252						; size = 4
$T240892 = -164						; size = 4
$T240755 = -88						; size = 4
$T240751 = -84						; size = 4
$T240747 = -80						; size = 4
$T240743 = -76						; size = 4
$T240739 = -72						; size = 4
$T240735 = -68						; size = 4
$T240731 = -64						; size = 4
$T240707 = -48						; size = 4
$T240706 = -44						; size = 8
$T240705 = -36						; size = 4
_iQuestLoop$224409 = -32				; size = 4
_iPlayerLoop$224405 = -28				; size = 4
_setGlobalQuests$ = -24					; size = 12
__$EHRec$ = -12						; size = 12
?GetNumActiveGlobalQuests@CvMinorCivAI@@QBEHXZ PROC	; CvMinorCivAI::GetNumActiveGlobalQuests, COMDAT
; _this$ = ecx

; 4195 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetNumActiveGlobalQuests@CvMinorCivAI@@QBEHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 4196 : 	//antonjs: todo: reevaluate this for efficiency and for use of std::set
; 4197 : 
; 4198 : 	std::set<MinorCivQuestTypes> setGlobalQuests;

	lea	ecx, DWORD PTR _setGlobalQuests$[ebp]
	call	??0?$set@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@@std@@QAE@XZ ; std::set<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes> >::set<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 4199 : 
; 4200 : 	for(uint iPlayerLoop = 0; iPlayerLoop < m_QuestsGiven.size(); iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$224405[ebp], 0
	jmp	SHORT $LN7@GetNumActi
$LN6@GetNumActi:
	mov	eax, DWORD PTR _iPlayerLoop$224405[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayerLoop$224405[ebp], eax
$LN7@GetNumActi:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+3332]
	mov	DWORD PTR $T240731[ebp], edx
	mov	eax, DWORD PTR _iPlayerLoop$224405[ebp]
	cmp	eax, DWORD PTR $T240731[ebp]
	jae	$LN5@GetNumActi

; 4201 : 	{
; 4202 : 		for(uint iQuestLoop = 0; iQuestLoop < m_QuestsGiven[iPlayerLoop].size(); iQuestLoop++)

	mov	DWORD PTR _iQuestLoop$224409[ebp], 0
	jmp	SHORT $LN4@GetNumActi
$LN3@GetNumActi:
	mov	ecx, DWORD PTR _iQuestLoop$224409[ebp]
	add	ecx, 1
	mov	DWORD PTR _iQuestLoop$224409[ebp], ecx
$LN4@GetNumActi:
	mov	edx, DWORD PTR _iPlayerLoop$224405[ebp]
	imul	edx, 156				; 0000009cH
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+3328]
	mov	DWORD PTR $T240735[ebp], edx
	mov	ecx, DWORD PTR $T240735[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T240739[ebp], edx
	mov	eax, DWORD PTR _iQuestLoop$224409[ebp]
	cmp	eax, DWORD PTR $T240739[ebp]
	jae	$LN2@GetNumActi

; 4203 : 		{
; 4204 : 			if(IsGlobalQuest(m_QuestsGiven[iPlayerLoop][iQuestLoop].GetType()))

	mov	ecx, DWORD PTR _iPlayerLoop$224405[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	mov	DWORD PTR $T240743[ebp], ecx
	mov	eax, DWORD PTR _iQuestLoop$224409[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR $T240743[ebp]
	add	eax, DWORD PTR [ecx]
	mov	DWORD PTR $T240747[ebp], eax
	mov	ecx, DWORD PTR $T240747[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsGlobalQuest@CvMinorCivAI@@QBE_NW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsGlobalQuest
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetNumActi

; 4205 : 			{
; 4206 : 				setGlobalQuests.insert(m_QuestsGiven[iPlayerLoop][iQuestLoop].GetType());

	mov	eax, DWORD PTR _iPlayerLoop$224405[ebp]
	imul	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+3328]
	mov	DWORD PTR $T240751[ebp], eax
	mov	edx, DWORD PTR _iQuestLoop$224409[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR $T240751[ebp]
	add	edx, DWORD PTR [eax]
	mov	DWORD PTR $T240755[ebp], edx
	mov	ecx, DWORD PTR $T240755[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	mov	DWORD PTR $T240705[ebp], eax
	lea	ecx, DWORD PTR $T240705[ebp]
	push	ecx
	lea	edx, DWORD PTR $T240706[ebp]
	push	edx
	lea	ecx, DWORD PTR _setGlobalQuests$[ebp]
	call	?insert@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@_N@2@ABW4MinorCivQuestTypes@@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::insert
$LN1@GetNumActi:

; 4207 : 			}
; 4208 : 		}

	jmp	$LN3@GetNumActi
$LN2@GetNumActi:

; 4209 : 	}

	jmp	$LN6@GetNumActi
$LN5@GetNumActi:

; 4210 : 
; 4211 : 	return setGlobalQuests.size();

	mov	eax, DWORD PTR _setGlobalQuests$[ebp+8]
	mov	DWORD PTR $T240892[ebp], eax
	mov	ecx, DWORD PTR $T240892[ebp]
	mov	DWORD PTR $T240707[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _setGlobalQuests$[ebp]
	call	?_Tidy@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T240707[ebp]

; 4212 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetNumActiveGlobalQuests@CvMinorCivAI@@QBEHXZ$0:
	lea	ecx, DWORD PTR _setGlobalQuests$[ebp]
	jmp	??1?$set@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@@std@@QAE@XZ
__unwindfunclet$?GetNumActiveGlobalQuests@CvMinorCivAI@@QBEHXZ$4:
	lea	ecx, DWORD PTR _setGlobalQuests$[ebp]
	jmp	??1?$_Tree_val@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE@XZ
__ehhandler$?GetNumActiveGlobalQuests@CvMinorCivAI@@QBEHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetNumActiveGlobalQuests@CvMinorCivAI@@QBEHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetNumActiveGlobalQuests@CvMinorCivAI@@QBEHXZ ENDP	; CvMinorCivAI::GetNumActiveGlobalQuests
PUBLIC	?GetNumActiveQuestsForPlayer@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetNumActiveQuestsForPlayer
; Function compile flags: /Odtp
;	COMDAT ?GetNumActiveQuestsForPlayer@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T241185 = -8						; size = 4
$T241181 = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetNumActiveQuestsForPlayer@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetNumActiveQuestsForPlayer, COMDAT
; _this$ = ecx

; 4215 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 4216 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 4217 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 4218 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return 0;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@GetNumActi@2
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN2@GetNumActi@2
$LN1@GetNumActi@2:
	xor	eax, eax
	jmp	SHORT $LN3@GetNumActi@2
$LN2@GetNumActi@2:

; 4219 : 
; 4220 : 	return m_QuestsGiven[ePlayer].size();

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+3328]
	mov	DWORD PTR $T241181[ebp], eax
	mov	edx, DWORD PTR $T241181[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T241185[ebp], eax
	mov	eax, DWORD PTR $T241185[ebp]
$LN3@GetNumActi@2:

; 4221 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetNumActiveQuestsForPlayer@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetNumActiveQuestsForPlayer
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetNumActivePersonalQuestsForPlayer@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T241203 = -24						; size = 4
$T241199 = -20						; size = 4
$T241195 = -16						; size = 4
$T241191 = -12						; size = 4
_iQuestLoop$224430 = -8					; size = 4
_iCount$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetNumActivePersonalQuestsForPlayer@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetNumActivePersonalQuestsForPlayer, COMDAT
; _this$ = ecx

; 4224 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 4225 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 4226 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 4227 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return 0;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN5@GetNumActi@3
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN6@GetNumActi@3
$LN5@GetNumActi@3:
	xor	eax, eax
	jmp	$LN7@GetNumActi@3
$LN6@GetNumActi@3:

; 4228 : 
; 4229 : 	int iCount = 0;

	mov	DWORD PTR _iCount$[ebp], 0

; 4230 : 	for(uint iQuestLoop = 0; iQuestLoop < m_QuestsGiven[ePlayer].size(); iQuestLoop++)

	mov	DWORD PTR _iQuestLoop$224430[ebp], 0
	jmp	SHORT $LN4@GetNumActi@3
$LN3@GetNumActi@3:
	mov	eax, DWORD PTR _iQuestLoop$224430[ebp]
	add	eax, 1
	mov	DWORD PTR _iQuestLoop$224430[ebp], eax
$LN4@GetNumActi@3:
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	mov	DWORD PTR $T241191[ebp], ecx
	mov	eax, DWORD PTR $T241191[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T241195[ebp], ecx
	mov	edx, DWORD PTR _iQuestLoop$224430[ebp]
	cmp	edx, DWORD PTR $T241195[ebp]
	jae	SHORT $LN2@GetNumActi@3

; 4231 : 	{
; 4232 : 		if(IsPersonalQuest(m_QuestsGiven[ePlayer][iQuestLoop].GetType()))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+3328]
	mov	DWORD PTR $T241199[ebp], eax
	mov	edx, DWORD PTR _iQuestLoop$224430[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR $T241199[ebp]
	add	edx, DWORD PTR [eax]
	mov	DWORD PTR $T241203[ebp], edx
	mov	ecx, DWORD PTR $T241203[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsPersonalQuest@CvMinorCivAI@@QBE_NW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsPersonalQuest
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@GetNumActi@3

; 4233 : 		{
; 4234 : 			iCount++;

	mov	edx, DWORD PTR _iCount$[ebp]
	add	edx, 1
	mov	DWORD PTR _iCount$[ebp], edx
$LN1@GetNumActi@3:

; 4235 : 		}
; 4236 : 	}

	jmp	SHORT $LN3@GetNumActi@3
$LN2@GetNumActi@3:

; 4237 : 
; 4238 : 	return iCount;

	mov	eax, DWORD PTR _iCount$[ebp]
$LN7@GetNumActi@3:

; 4239 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetNumActivePersonalQuestsForPlayer@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetNumActivePersonalQuestsForPlayer
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsActiveQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T241221 = -20						; size = 4
$T241217 = -16						; size = 4
$T241213 = -12						; size = 4
$T241209 = -8						; size = 4
_iQuestLoop$224444 = -4					; size = 4
_ePlayer$ = 8						; size = 4
_eType$ = 12						; size = 4
?IsActiveQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z PROC ; CvMinorCivAI::IsActiveQuestForPlayer, COMDAT
; _this$ = ecx

; 4242 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 4243 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 4244 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 4245 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return false;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN7@IsActiveQu
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN8@IsActiveQu
$LN7@IsActiveQu:
	xor	al, al
	jmp	$LN9@IsActiveQu
$LN8@IsActiveQu:

; 4246 : 
; 4247 : 	CvAssertMsg(eType >= NO_MINOR_CIV_QUEST_TYPE, "eType is expected to be non-negative (invalid Index)");
; 4248 : 	CvAssertMsg(eType < NUM_MINOR_CIV_QUEST_TYPES, "eType is expected to be within maximum bounds (invalid Index)");
; 4249 : 	if(eType < NO_MINOR_CIV_QUEST_TYPE || eType >= NUM_MINOR_CIV_QUEST_TYPES) return false;

	cmp	DWORD PTR _eType$[ebp], -1
	jl	SHORT $LN5@IsActiveQu
	cmp	DWORD PTR _eType$[ebp], 18		; 00000012H
	jl	SHORT $LN6@IsActiveQu
$LN5@IsActiveQu:
	xor	al, al
	jmp	SHORT $LN9@IsActiveQu
$LN6@IsActiveQu:

; 4250 : 
; 4251 : 	for(uint iQuestLoop = 0; iQuestLoop < m_QuestsGiven[ePlayer].size(); iQuestLoop++)

	mov	DWORD PTR _iQuestLoop$224444[ebp], 0
	jmp	SHORT $LN4@IsActiveQu
$LN3@IsActiveQu:
	mov	eax, DWORD PTR _iQuestLoop$224444[ebp]
	add	eax, 1
	mov	DWORD PTR _iQuestLoop$224444[ebp], eax
$LN4@IsActiveQu:
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	mov	DWORD PTR $T241209[ebp], ecx
	mov	eax, DWORD PTR $T241209[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T241213[ebp], ecx
	mov	edx, DWORD PTR _iQuestLoop$224444[ebp]
	cmp	edx, DWORD PTR $T241213[ebp]
	jae	SHORT $LN2@IsActiveQu

; 4252 : 	{
; 4253 : 		if(m_QuestsGiven[ePlayer][iQuestLoop].GetType() == eType)

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+3328]
	mov	DWORD PTR $T241217[ebp], eax
	mov	edx, DWORD PTR _iQuestLoop$224444[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR $T241217[ebp]
	add	edx, DWORD PTR [eax]
	mov	DWORD PTR $T241221[ebp], edx
	mov	ecx, DWORD PTR $T241221[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	cmp	eax, DWORD PTR _eType$[ebp]
	jne	SHORT $LN1@IsActiveQu

; 4254 : 		{
; 4255 : 			return true;

	mov	al, 1
	jmp	SHORT $LN9@IsActiveQu
$LN1@IsActiveQu:

; 4256 : 		}
; 4257 : 	}

	jmp	SHORT $LN3@IsActiveQu
$LN2@IsActiveQu:

; 4258 : 
; 4259 : 	return false;

	xor	al, al
$LN9@IsActiveQu:

; 4260 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?IsActiveQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ENDP ; CvMinorCivAI::IsActiveQuestForPlayer
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?EndAllActiveQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
_ePlayer$ = 8						; size = 4
?EndAllActiveQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z PROC ; CvMinorCivAI::EndAllActiveQuestsForPlayer, COMDAT
; _this$ = ecx

; 4264 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 4265 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 4266 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 4267 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN2@EndAllActi
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN3@EndAllActi
$LN2@EndAllActi:
	jmp	SHORT $LN4@EndAllActi
$LN3@EndAllActi:

; 4268 : 
; 4269 : 	//antonjs: todo: instead, call for cancel quest (with flag for no notif)
; 4270 : 	if(GetNumActiveQuestsForPlayer(ePlayer) > 0)

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumActiveQuestsForPlayer@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetNumActiveQuestsForPlayer
	test	eax, eax
	jle	SHORT $LN4@EndAllActi

; 4271 : 		m_QuestsGiven[ePlayer].clear();

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	call	?clear@?$BaseVector@VCvMinorCivQuest@@$0A@@@QAEXXZ ; BaseVector<CvMinorCivQuest,0>::clear
$LN4@EndAllActi:

; 4272 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?EndAllActiveQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::EndAllActiveQuestsForPlayer
_TEXT	ENDS
PUBLIC	?GetNumDisplayedQuestsForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetNumDisplayedQuestsForPlayer
; Function compile flags: /Odtp
;	COMDAT ?GetNumDisplayedQuestsForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T241263 = -24						; size = 4
$T241259 = -20						; size = 4
$T241255 = -16						; size = 4
$T241251 = -12						; size = 4
_iQuestLoop$224463 = -8					; size = 4
_iValue$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetNumDisplayedQuestsForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetNumDisplayedQuestsForPlayer, COMDAT
; _this$ = ecx

; 4275 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 4276 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 4277 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 4278 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return 0;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN5@GetNumDisp
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN6@GetNumDisp
$LN5@GetNumDisp:
	xor	eax, eax
	jmp	SHORT $LN7@GetNumDisp
$LN6@GetNumDisp:

; 4279 : 
; 4280 : 	int iValue = 0;

	mov	DWORD PTR _iValue$[ebp], 0

; 4281 : 	
; 4282 : 	for (uint iQuestLoop = 0; iQuestLoop < m_QuestsGiven[ePlayer].size(); iQuestLoop++)

	mov	DWORD PTR _iQuestLoop$224463[ebp], 0
	jmp	SHORT $LN4@GetNumDisp
$LN3@GetNumDisp:
	mov	eax, DWORD PTR _iQuestLoop$224463[ebp]
	add	eax, 1
	mov	DWORD PTR _iQuestLoop$224463[ebp], eax
$LN4@GetNumDisp:
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	mov	DWORD PTR $T241251[ebp], ecx
	mov	eax, DWORD PTR $T241251[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T241255[ebp], ecx
	mov	edx, DWORD PTR _iQuestLoop$224463[ebp]
	cmp	edx, DWORD PTR $T241255[ebp]
	jae	SHORT $LN2@GetNumDisp

; 4283 : 	{
; 4284 : 		if(!m_QuestsGiven[ePlayer][iQuestLoop].IsHandled())

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+3328]
	mov	DWORD PTR $T241259[ebp], eax
	mov	edx, DWORD PTR _iQuestLoop$224463[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR $T241259[ebp]
	add	edx, DWORD PTR [eax]
	mov	DWORD PTR $T241263[ebp], edx
	mov	ecx, DWORD PTR $T241263[ebp]
	call	?IsHandled@CvMinorCivQuest@@QAE_NXZ	; CvMinorCivQuest::IsHandled
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@GetNumDisp

; 4285 : 		{
; 4286 : 			iValue++;

	mov	edx, DWORD PTR _iValue$[ebp]
	add	edx, 1
	mov	DWORD PTR _iValue$[ebp], edx
$LN1@GetNumDisp:

; 4287 : 		}
; 4288 : 	}

	jmp	SHORT $LN3@GetNumDisp
$LN2@GetNumDisp:

; 4289 : 
; 4290 : 	return iValue;

	mov	eax, DWORD PTR _iValue$[ebp]
$LN7@GetNumDisp:

; 4291 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetNumDisplayedQuestsForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetNumDisplayedQuestsForPlayer
_TEXT	ENDS
PUBLIC	?IsDisplayedQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsDisplayedQuestForPlayer
; Function compile flags: /Odtp
;	COMDAT ?IsDisplayedQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T241289 = -28						; size = 4
$T241285 = -24						; size = 4
$T241281 = -20						; size = 4
$T241277 = -16						; size = 4
$T241273 = -12						; size = 4
$T241269 = -8						; size = 4
_iQuestLoop$224477 = -4					; size = 4
_ePlayer$ = 8						; size = 4
_eType$ = 12						; size = 4
?IsDisplayedQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z PROC ; CvMinorCivAI::IsDisplayedQuestForPlayer, COMDAT
; _this$ = ecx

; 4294 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 4295 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 4296 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 4297 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return false;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN8@IsDisplaye
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN9@IsDisplaye
$LN8@IsDisplaye:
	xor	al, al
	jmp	$LN10@IsDisplaye
$LN9@IsDisplaye:

; 4298 : 
; 4299 : 	CvAssertMsg(eType >= NO_MINOR_CIV_QUEST_TYPE, "eType is expected to be non-negative (invalid Index)");
; 4300 : 	CvAssertMsg(eType < NUM_MINOR_CIV_QUEST_TYPES, "eType is expected to be within maximum bounds (invalid Index)");
; 4301 : 	if(eType < NO_MINOR_CIV_QUEST_TYPE || eType >= NUM_MINOR_CIV_QUEST_TYPES) return false;

	cmp	DWORD PTR _eType$[ebp], -1
	jl	SHORT $LN6@IsDisplaye
	cmp	DWORD PTR _eType$[ebp], 18		; 00000012H
	jl	SHORT $LN7@IsDisplaye
$LN6@IsDisplaye:
	xor	al, al
	jmp	$LN10@IsDisplaye
$LN7@IsDisplaye:

; 4302 : 
; 4303 : 	for(uint iQuestLoop = 0; iQuestLoop < m_QuestsGiven[ePlayer].size(); iQuestLoop++)

	mov	DWORD PTR _iQuestLoop$224477[ebp], 0
	jmp	SHORT $LN5@IsDisplaye
$LN4@IsDisplaye:
	mov	eax, DWORD PTR _iQuestLoop$224477[ebp]
	add	eax, 1
	mov	DWORD PTR _iQuestLoop$224477[ebp], eax
$LN5@IsDisplaye:
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	mov	DWORD PTR $T241269[ebp], ecx
	mov	eax, DWORD PTR $T241269[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T241273[ebp], ecx
	mov	edx, DWORD PTR _iQuestLoop$224477[ebp]
	cmp	edx, DWORD PTR $T241273[ebp]
	jae	SHORT $LN3@IsDisplaye

; 4304 : 	{
; 4305 : 		if(m_QuestsGiven[ePlayer][iQuestLoop].GetType() == eType)

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+3328]
	mov	DWORD PTR $T241277[ebp], eax
	mov	edx, DWORD PTR _iQuestLoop$224477[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR $T241277[ebp]
	add	edx, DWORD PTR [eax]
	mov	DWORD PTR $T241281[ebp], edx
	mov	ecx, DWORD PTR $T241281[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	cmp	eax, DWORD PTR _eType$[ebp]
	jne	SHORT $LN2@IsDisplaye

; 4306 : 		{
; 4307 : 			if(!m_QuestsGiven[ePlayer][iQuestLoop].IsHandled())

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	mov	DWORD PTR $T241285[ebp], ecx
	mov	eax, DWORD PTR _iQuestLoop$224477[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR $T241285[ebp]
	add	eax, DWORD PTR [ecx]
	mov	DWORD PTR $T241289[ebp], eax
	mov	ecx, DWORD PTR $T241289[ebp]
	call	?IsHandled@CvMinorCivQuest@@QAE_NXZ	; CvMinorCivQuest::IsHandled
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@IsDisplaye

; 4308 : 			{
; 4309 : 				return true;

	mov	al, 1
	jmp	SHORT $LN10@IsDisplaye
$LN2@IsDisplaye:

; 4310 : 			}
; 4311 : 		}
; 4312 : 	}

	jmp	$LN4@IsDisplaye
$LN3@IsDisplaye:

; 4313 : 
; 4314 : 	return false;

	xor	al, al
$LN10@IsDisplaye:

; 4315 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?IsDisplayedQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ENDP ; CvMinorCivAI::IsDisplayedQuestForPlayer
_TEXT	ENDS
PUBLIC	?SetGlobalQuestCountdown@CvMinorCivAI@@QAEXH@Z	; CvMinorCivAI::SetGlobalQuestCountdown
PUBLIC	??_C@_0DG@KEENLDFJ@Random?5?$CD?5of?5turns?5for?5Minor?5Civ?5@ ; `string'
PUBLIC	??_C@_0ED@KMJGALAJ@Random?5?$CD?5of?5turns?5for?5Minor?5Civ?5@ ; `string'
;	COMDAT ??_C@_0DG@KEENLDFJ@Random?5?$CD?5of?5turns?5for?5Minor?5Civ?5@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
CONST	SEGMENT
??_C@_0DG@KEENLDFJ@Random?5?$CD?5of?5turns?5for?5Minor?5Civ?5@ DB 'Random'
	DB	' # of turns for Minor Civ global quest counter.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@KMJGALAJ@Random?5?$CD?5of?5turns?5for?5Minor?5Civ?5@
CONST	SEGMENT
??_C@_0ED@KMJGALAJ@Random?5?$CD?5of?5turns?5for?5Minor?5Civ?5@ DB 'Random'
	DB	' # of turns for Minor Civ global quest counter - first time.', 00H ; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
CONST	ENDS
;	COMDAT ?DoTestSeedGlobalQuestCountdown@CvMinorCivAI@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -40						; size = 4
$T241321 = -36						; size = 4
$T241317 = -32						; size = 4
$T241313 = -28						; size = 4
$T241306 = -24						; size = 4
$T241302 = -20						; size = 4
$T241295 = -16						; size = 4
_iRand$224495 = -12					; size = 4
_iRand$224492 = -8					; size = 4
_iNumTurns$ = -4					; size = 4
_bForceSeed$ = 8					; size = 1
?DoTestSeedGlobalQuestCountdown@CvMinorCivAI@@QAEX_N@Z PROC ; CvMinorCivAI::DoTestSeedGlobalQuestCountdown, COMDAT
; _this$ = ecx

; 4318 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 4319 : 	if(!bForceSeed)

	movzx	eax, BYTE PTR _bForceSeed$[ebp]
	test	eax, eax
	jne	SHORT $LN6@DoTestSeed

; 4320 : 	{
; 4321 : 		// Only seed if there is a potential spot for a global quest
; 4322 : 		if(GetNumActiveGlobalQuests() >= GetMaxActiveGlobalQuests())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumActiveGlobalQuests@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetNumActiveGlobalQuests
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMaxActiveGlobalQuests@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetMaxActiveGlobalQuests
	cmp	esi, eax
	jl	SHORT $LN5@DoTestSeed

; 4323 : 		{
; 4324 : 			return;

	jmp	$LN7@DoTestSeed
$LN5@DoTestSeed:

; 4325 : 		}
; 4326 : 
; 4327 : 		// Only seed if the countdown is not already active
; 4328 : 		if(GetGlobalQuestCountdown() > 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetGlobalQuestCountdown@CvMinorCivAI@@QAEHXZ ; CvMinorCivAI::GetGlobalQuestCountdown
	test	eax, eax
	jle	SHORT $LN6@DoTestSeed

; 4329 : 		{
; 4330 : 			return;

	jmp	$LN7@DoTestSeed
$LN6@DoTestSeed:

; 4331 : 		}
; 4332 : 	}
; 4333 : 
; 4334 : 	int iNumTurns = 0;

	mov	DWORD PTR _iNumTurns$[ebp], 0

; 4335 : 
; 4336 : 	// Quests are now available for the first time?
; 4337 : 	if(GC.getGame().getElapsedGameTurns() == GetFirstPossibleTurnForGlobalQuests())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T241295[ebp], ecx
	mov	ecx, DWORD PTR $T241295[ebp]
	call	?getElapsedGameTurns@CvGame@@QBEHXZ	; CvGame::getElapsedGameTurns
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFirstPossibleTurnForGlobalQuests@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetFirstPossibleTurnForGlobalQuests
	cmp	esi, eax
	jne	SHORT $LN3@DoTestSeed

; 4338 : 	{
; 4339 : 		int iRand = /*20*/ GC.getMINOR_CIV_GLOBAL_QUEST_FIRST_POSSIBLE_TURN_RAND();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3196
	mov	DWORD PTR _iRand$224492[ebp], edx

; 4340 : 		iNumTurns += GC.getGame().getJonRandNum(iRand, "Random # of turns for Minor Civ global quest counter - first time.");

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T241302[ebp], eax
	push	OFFSET ??_C@_0ED@KMJGALAJ@Random?5?$CD?5of?5turns?5for?5Minor?5Civ?5@
	mov	ecx, DWORD PTR _iRand$224492[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T241302[ebp]
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	add	eax, DWORD PTR _iNumTurns$[ebp]
	mov	DWORD PTR _iNumTurns$[ebp], eax

; 4341 : 	}
; 4342 : 	else

	jmp	SHORT $LN2@DoTestSeed
$LN3@DoTestSeed:

; 4343 : 	{
; 4344 : 		iNumTurns += /*40*/ GC.getMINOR_CIV_GLOBAL_QUEST_MIN_TURNS_BETWEEN();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3200
	mov	DWORD PTR $T241306[ebp], edx
	mov	eax, DWORD PTR _iNumTurns$[ebp]
	add	eax, DWORD PTR $T241306[ebp]
	mov	DWORD PTR _iNumTurns$[ebp], eax

; 4345 : 
; 4346 : 		int iRand = /*25*/ GC.getMINOR_CIV_GLOBAL_QUEST_RAND_TURNS_BETWEEN();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3204
	mov	DWORD PTR _iRand$224495[ebp], ecx

; 4347 : 		if(GetPersonality() == MINOR_CIV_PERSONALITY_HOSTILE)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPersonality@CvMinorCivAI@@QBE?AW4MinorCivPersonalityTypes@@XZ ; CvMinorCivAI::GetPersonality
	cmp	eax, 2
	jne	SHORT $LN1@DoTestSeed

; 4348 : 		{
; 4349 : 			iRand *= /*200*/ GC.getMINOR_CIV_GLOBAL_QUEST_RAND_TURNS_BETWEEN_HOSTILE_MULTIPLIER();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3208
	mov	DWORD PTR $T241313[ebp], edx
	mov	eax, DWORD PTR _iRand$224495[ebp]
	imul	eax, DWORD PTR $T241313[ebp]
	mov	DWORD PTR _iRand$224495[ebp], eax

; 4350 : 			iRand /= 100;

	mov	eax, DWORD PTR _iRand$224495[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iRand$224495[ebp], eax
$LN1@DoTestSeed:

; 4351 : 		}
; 4352 : 		iNumTurns += GC.getGame().getJonRandNum(iRand, "Random # of turns for Minor Civ global quest counter.");

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T241317[ebp], edx
	push	OFFSET ??_C@_0DG@KEENLDFJ@Random?5?$CD?5of?5turns?5for?5Minor?5Civ?5@
	mov	eax, DWORD PTR _iRand$224495[ebp]
	push	eax
	mov	ecx, DWORD PTR $T241317[ebp]
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	add	eax, DWORD PTR _iNumTurns$[ebp]
	mov	DWORD PTR _iNumTurns$[ebp], eax
$LN2@DoTestSeed:

; 4353 : 	}
; 4354 : 
; 4355 : 	// Modify for Game Speed
; 4356 : 	iNumTurns *= GC.getGame().getGameSpeedInfo().getGreatPeoplePercent();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T241321[ebp], ecx
	mov	ecx, DWORD PTR $T241321[ebp]
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getGreatPeoplePercent@CvGameSpeedInfo@@QBEHXZ ; CvGameSpeedInfo::getGreatPeoplePercent
	imul	eax, DWORD PTR _iNumTurns$[ebp]
	mov	DWORD PTR _iNumTurns$[ebp], eax

; 4357 : 	iNumTurns /= 100;

	mov	eax, DWORD PTR _iNumTurns$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iNumTurns$[ebp], eax

; 4358 : 
; 4359 : 	SetGlobalQuestCountdown(iNumTurns);

	mov	edx, DWORD PTR _iNumTurns$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetGlobalQuestCountdown@CvMinorCivAI@@QAEXH@Z ; CvMinorCivAI::SetGlobalQuestCountdown
$LN7@DoTestSeed:

; 4360 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?DoTestSeedGlobalQuestCountdown@CvMinorCivAI@@QAEX_N@Z ENDP ; CvMinorCivAI::DoTestSeedGlobalQuestCountdown
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetGlobalQuestCountdown@CvMinorCivAI@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGlobalQuestCountdown@CvMinorCivAI@@QAEHXZ PROC	; CvMinorCivAI::GetGlobalQuestCountdown, COMDAT
; _this$ = ecx

; 4363 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 4364 : 	return m_iGlobalQuestCountdown;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]

; 4365 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetGlobalQuestCountdown@CvMinorCivAI@@QAEHXZ ENDP	; CvMinorCivAI::GetGlobalQuestCountdown
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?SetGlobalQuestCountdown@CvMinorCivAI@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iValue$ = 8						; size = 4
?SetGlobalQuestCountdown@CvMinorCivAI@@QAEXH@Z PROC	; CvMinorCivAI::SetGlobalQuestCountdown, COMDAT
; _this$ = ecx

; 4368 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 4369 : 	m_iGlobalQuestCountdown = iValue;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR [eax+24], ecx

; 4370 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetGlobalQuestCountdown@CvMinorCivAI@@QAEXH@Z ENDP	; CvMinorCivAI::SetGlobalQuestCountdown
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?ChangeGlobalQuestCountdown@CvMinorCivAI@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iChange$ = 8						; size = 4
?ChangeGlobalQuestCountdown@CvMinorCivAI@@QAEXH@Z PROC	; CvMinorCivAI::ChangeGlobalQuestCountdown, COMDAT
; _this$ = ecx

; 4373 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 4374 : 	SetGlobalQuestCountdown(GetGlobalQuestCountdown() + iChange);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetGlobalQuestCountdown@CvMinorCivAI@@QAEHXZ ; CvMinorCivAI::GetGlobalQuestCountdown
	add	eax, DWORD PTR _iChange$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetGlobalQuestCountdown@CvMinorCivAI@@QAEXH@Z ; CvMinorCivAI::SetGlobalQuestCountdown

; 4375 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ChangeGlobalQuestCountdown@CvMinorCivAI@@QAEXH@Z ENDP	; CvMinorCivAI::ChangeGlobalQuestCountdown
_TEXT	ENDS
PUBLIC	?SetQuestCountdownForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::SetQuestCountdownForPlayer
PUBLIC	??_C@_0DI@FAOEHLOH@Random?5?$CD?5of?5turns?5for?5Minor?5Civ?5@ ; `string'
PUBLIC	??_C@_0EF@DEFMMJEB@Random?5?$CD?5of?5turns?5for?5Minor?5Civ?5@ ; `string'
;	COMDAT ??_C@_0DI@FAOEHLOH@Random?5?$CD?5of?5turns?5for?5Minor?5Civ?5@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
CONST	SEGMENT
??_C@_0DI@FAOEHLOH@Random?5?$CD?5of?5turns?5for?5Minor?5Civ?5@ DB 'Random'
	DB	' # of turns for Minor Civ personal quest counter.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@DEFMMJEB@Random?5?$CD?5of?5turns?5for?5Minor?5Civ?5@
CONST	SEGMENT
??_C@_0EF@DEFMMJEB@Random?5?$CD?5of?5turns?5for?5Minor?5Civ?5@ DB 'Random'
	DB	' # of turns for Minor Civ personal quest counter - first time'
	DB	'.', 00H					; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
CONST	ENDS
;	COMDAT ?DoTestSeedQuestCountdownForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z
_TEXT	SEGMENT
_this$ = -40						; size = 4
$T241359 = -36						; size = 4
$T241355 = -32						; size = 4
$T241351 = -28						; size = 4
$T241344 = -24						; size = 4
$T241340 = -20						; size = 4
$T241333 = -16						; size = 4
_iRand$224522 = -12					; size = 4
_iRand$224519 = -8					; size = 4
_iNumTurns$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
_bForceSeed$ = 12					; size = 1
?DoTestSeedQuestCountdownForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z PROC ; CvMinorCivAI::DoTestSeedQuestCountdownForPlayer, COMDAT
; _this$ = ecx

; 4379 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 4380 : 	if(!bForceSeed)

	movzx	eax, BYTE PTR _bForceSeed$[ebp]
	test	eax, eax
	jne	SHORT $LN6@DoTestSeed@2

; 4381 : 	{
; 4382 : 		// Only seed if there is a potential spot for a personal quest for this player
; 4383 : 		if(GetNumActivePersonalQuestsForPlayer(ePlayer) >= GetMaxActivePersonalQuestsForPlayer())

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumActivePersonalQuestsForPlayer@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetNumActivePersonalQuestsForPlayer
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMaxActivePersonalQuestsForPlayer@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetMaxActivePersonalQuestsForPlayer
	cmp	esi, eax
	jl	SHORT $LN5@DoTestSeed@2

; 4384 : 		{
; 4385 : 			return;

	jmp	$LN7@DoTestSeed@2
$LN5@DoTestSeed@2:

; 4386 : 		}
; 4387 : 
; 4388 : 		// Only seed if the countdown for this player is not already active
; 4389 : 		if(GetQuestCountdownForPlayer(ePlayer) > 0)

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetQuestCountdownForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetQuestCountdownForPlayer
	test	eax, eax
	jle	SHORT $LN6@DoTestSeed@2

; 4390 : 		{
; 4391 : 			return;

	jmp	$LN7@DoTestSeed@2
$LN6@DoTestSeed@2:

; 4392 : 		}
; 4393 : 	}
; 4394 : 
; 4395 : 	int iNumTurns = 0;

	mov	DWORD PTR _iNumTurns$[ebp], 0

; 4396 : 
; 4397 : 	// Quests are now available for the first time?
; 4398 : 	if(GC.getGame().getElapsedGameTurns() == GetFirstPossibleTurnForPersonalQuests())

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T241333[ebp], eax
	mov	ecx, DWORD PTR $T241333[ebp]
	call	?getElapsedGameTurns@CvGame@@QBEHXZ	; CvGame::getElapsedGameTurns
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFirstPossibleTurnForPersonalQuests@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetFirstPossibleTurnForPersonalQuests
	cmp	esi, eax
	jne	SHORT $LN3@DoTestSeed@2

; 4399 : 	{
; 4400 : 		int iRand = /*20*/ GC.getMINOR_CIV_PERSONAL_QUEST_FIRST_POSSIBLE_TURN_RAND();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3216
	mov	DWORD PTR _iRand$224519[ebp], ecx

; 4401 : 		iNumTurns += GC.getGame().getJonRandNum(iRand, "Random # of turns for Minor Civ personal quest counter - first time.");

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T241340[ebp], edx
	push	OFFSET ??_C@_0EF@DEFMMJEB@Random?5?$CD?5of?5turns?5for?5Minor?5Civ?5@
	mov	eax, DWORD PTR _iRand$224519[ebp]
	push	eax
	mov	ecx, DWORD PTR $T241340[ebp]
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	add	eax, DWORD PTR _iNumTurns$[ebp]
	mov	DWORD PTR _iNumTurns$[ebp], eax

; 4402 : 	}
; 4403 : 	else

	jmp	SHORT $LN2@DoTestSeed@2
$LN3@DoTestSeed@2:

; 4404 : 	{
; 4405 : 		iNumTurns += /*20*/ GC.getMINOR_CIV_PERSONAL_QUEST_MIN_TURNS_BETWEEN();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3220
	mov	DWORD PTR $T241344[ebp], ecx
	mov	edx, DWORD PTR _iNumTurns$[ebp]
	add	edx, DWORD PTR $T241344[ebp]
	mov	DWORD PTR _iNumTurns$[ebp], edx

; 4406 : 
; 4407 : 		int iRand = /*25*/ GC.getMINOR_CIV_PERSONAL_QUEST_RAND_TURNS_BETWEEN();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3224
	mov	DWORD PTR _iRand$224522[ebp], eax

; 4408 : 		if(GetPersonality() == MINOR_CIV_PERSONALITY_HOSTILE)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPersonality@CvMinorCivAI@@QBE?AW4MinorCivPersonalityTypes@@XZ ; CvMinorCivAI::GetPersonality
	cmp	eax, 2
	jne	SHORT $LN1@DoTestSeed@2

; 4409 : 		{
; 4410 : 			iRand *= /*200*/ GC.getMINOR_CIV_PERSONAL_QUEST_RAND_TURNS_BETWEEN_HOSTILE_MULTIPLIER();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3228
	mov	DWORD PTR $T241351[ebp], ecx
	mov	edx, DWORD PTR _iRand$224522[ebp]
	imul	edx, DWORD PTR $T241351[ebp]
	mov	DWORD PTR _iRand$224522[ebp], edx

; 4411 : 			iRand /= 100;

	mov	eax, DWORD PTR _iRand$224522[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iRand$224522[ebp], eax
$LN1@DoTestSeed@2:

; 4412 : 		}
; 4413 : 		iNumTurns += GC.getGame().getJonRandNum(iRand, "Random # of turns for Minor Civ personal quest counter.");

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T241355[ebp], edx
	push	OFFSET ??_C@_0DI@FAOEHLOH@Random?5?$CD?5of?5turns?5for?5Minor?5Civ?5@
	mov	eax, DWORD PTR _iRand$224522[ebp]
	push	eax
	mov	ecx, DWORD PTR $T241355[ebp]
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	add	eax, DWORD PTR _iNumTurns$[ebp]
	mov	DWORD PTR _iNumTurns$[ebp], eax
$LN2@DoTestSeed@2:

; 4414 : 	}
; 4415 : 
; 4416 : 	// Modify for Game Speed
; 4417 : 	iNumTurns *= GC.getGame().getGameSpeedInfo().getGreatPeoplePercent();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T241359[ebp], ecx
	mov	ecx, DWORD PTR $T241359[ebp]
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getGreatPeoplePercent@CvGameSpeedInfo@@QBEHXZ ; CvGameSpeedInfo::getGreatPeoplePercent
	imul	eax, DWORD PTR _iNumTurns$[ebp]
	mov	DWORD PTR _iNumTurns$[ebp], eax

; 4418 : 	iNumTurns /= 100;

	mov	eax, DWORD PTR _iNumTurns$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iNumTurns$[ebp], eax

; 4419 : 
; 4420 : 	SetQuestCountdownForPlayer(ePlayer, iNumTurns);

	mov	edx, DWORD PTR _iNumTurns$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetQuestCountdownForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::SetQuestCountdownForPlayer
$LN7@DoTestSeed@2:

; 4421 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?DoTestSeedQuestCountdownForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z ENDP ; CvMinorCivAI::DoTestSeedQuestCountdownForPlayer
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetQuestCountdownForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetQuestCountdownForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetQuestCountdownForPlayer, COMDAT
; _this$ = ecx

; 4425 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 4426 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 4427 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 4428 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return -1; // as set during Reset()

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@GetQuestCo
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN2@GetQuestCo
$LN1@GetQuestCo:
	or	eax, -1
	jmp	SHORT $LN3@GetQuestCo
$LN2@GetQuestCo:

; 4429 : 
; 4430 : 	return m_aiQuestCountdown[ePlayer];

	mov	eax, DWORD PTR _ePlayer$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+2464]
$LN3@GetQuestCo:

; 4431 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetQuestCountdownForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetQuestCountdownForPlayer
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?SetQuestCountdownForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
_iValue$ = 12						; size = 4
?SetQuestCountdownForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z PROC ; CvMinorCivAI::SetQuestCountdownForPlayer, COMDAT
; _this$ = ecx

; 4435 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 4436 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 4437 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 4438 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@SetQuestCo
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN2@SetQuestCo
$LN1@SetQuestCo:
	jmp	SHORT $LN3@SetQuestCo
$LN2@SetQuestCo:

; 4439 : 
; 4440 : 	m_aiQuestCountdown[ePlayer] = iValue;

	mov	eax, DWORD PTR _ePlayer$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR [ecx+eax*4+2464], edx
$LN3@SetQuestCo:

; 4441 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetQuestCountdownForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ENDP ; CvMinorCivAI::SetQuestCountdownForPlayer
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?ChangeQuestCountdownForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
_iChange$ = 12						; size = 4
?ChangeQuestCountdownForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z PROC ; CvMinorCivAI::ChangeQuestCountdownForPlayer, COMDAT
; _this$ = ecx

; 4445 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 4446 : 	SetQuestCountdownForPlayer(ePlayer, GetQuestCountdownForPlayer(ePlayer) + iChange);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetQuestCountdownForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetQuestCountdownForPlayer
	add	eax, DWORD PTR _iChange$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetQuestCountdownForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::SetQuestCountdownForPlayer

; 4447 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?ChangeQuestCountdownForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ENDP ; CvMinorCivAI::ChangeQuestCountdownForPlayer
_TEXT	ENDS
PUBLIC	?AddQuestIfAble@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::AddQuestIfAble
; Function compile flags: /Odtp
;	COMDAT ?AddQuestIfAble@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T241375 = -28						; size = 4
$T241371 = -24						; size = 4
_ePlayerLoop$224574 = -20				; size = 4
_iPlayerLoop$224570 = -16				; size = 4
_ePlayerLoop$224566 = -12				; size = 4
_iPlayerLoop$224562 = -8				; size = 4
_iNumValidPlayers$224561 = -4				; size = 4
_eMajor$ = 8						; size = 4
_eQuest$ = 12						; size = 4
?AddQuestIfAble@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z PROC ; CvMinorCivAI::AddQuestIfAble, COMDAT
; _this$ = ecx

; 4451 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 4452 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 4453 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 4454 : 	if(eMajor < 0 || eMajor >= MAX_MAJOR_CIVS) return false;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN21@AddQuestIf
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN22@AddQuestIf
$LN21@AddQuestIf:
	xor	al, al
	jmp	$LN23@AddQuestIf
$LN22@AddQuestIf:

; 4455 : 
; 4456 : 	CvAssertMsg(eQuest >= NO_MINOR_CIV_QUEST_TYPE, "eQuest is expected to be non-negative (invalid Index)");
; 4457 : 	CvAssertMsg(eQuest < NUM_MINOR_CIV_QUEST_TYPES, "eQuest is expected to be within maximum bounds (invalid Index)");
; 4458 : 	if(eQuest < NO_MINOR_CIV_QUEST_TYPE || eQuest >= NUM_MINOR_CIV_QUEST_TYPES) return false;

	cmp	DWORD PTR _eQuest$[ebp], -1
	jl	SHORT $LN19@AddQuestIf
	cmp	DWORD PTR _eQuest$[ebp], 18		; 00000012H
	jl	SHORT $LN20@AddQuestIf
$LN19@AddQuestIf:
	xor	al, al
	jmp	$LN23@AddQuestIf
$LN20@AddQuestIf:

; 4459 : 
; 4460 : 	if(!IsHasMetPlayer(eMajor))

	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsHasMetPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsHasMetPlayer
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN18@AddQuestIf

; 4461 : 		return false;

	xor	al, al
	jmp	$LN23@AddQuestIf
$LN18@AddQuestIf:

; 4462 : 
; 4463 : 	if(IsAtWarWithPlayersTeam(eMajor))

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAtWarWithPlayersTeam@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAtWarWithPlayersTeam
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN17@AddQuestIf

; 4464 : 		return false;

	xor	al, al
	jmp	$LN23@AddQuestIf
$LN17@AddQuestIf:

; 4465 : 
; 4466 : 	if (!IsValidQuestForPlayer(eMajor, eQuest))

	mov	ecx, DWORD PTR _eQuest$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsValidQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsValidQuestForPlayer
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN16@AddQuestIf

; 4467 : 		return false;

	xor	al, al
	jmp	$LN23@AddQuestIf
$LN16@AddQuestIf:

; 4468 : 
; 4469 : 	if (IsActiveQuestForPlayer(eMajor, eQuest))

	mov	ecx, DWORD PTR _eQuest$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsActiveQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsActiveQuestForPlayer
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@AddQuestIf

; 4470 : 		return false;

	xor	al, al
	jmp	$LN23@AddQuestIf
$LN15@AddQuestIf:

; 4471 : 
; 4472 : 	CvAssert(IsPersonalQuest(eQuest) || IsGlobalQuest(eQuest));
; 4473 : 	if (IsPersonalQuest(eQuest))

	mov	ecx, DWORD PTR _eQuest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsPersonalQuest@CvMinorCivAI@@QBE_NW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsPersonalQuest
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN14@AddQuestIf

; 4474 : 	{
; 4475 : 		if(GetNumActivePersonalQuestsForPlayer(eMajor) >= GetMaxActivePersonalQuestsForPlayer())

	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumActivePersonalQuestsForPlayer@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetNumActivePersonalQuestsForPlayer
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMaxActivePersonalQuestsForPlayer@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetMaxActivePersonalQuestsForPlayer
	cmp	esi, eax
	jl	SHORT $LN13@AddQuestIf

; 4476 : 		{
; 4477 : 			return false;

	xor	al, al
	jmp	$LN23@AddQuestIf
$LN13@AddQuestIf:

; 4478 : 		}
; 4479 : 
; 4480 : 		AddQuestForPlayer(eMajor, eQuest, GC.getGame().getGameTurn());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T241371[ebp], ecx
	mov	ecx, DWORD PTR $T241371[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	push	eax
	mov	edx, DWORD PTR _eQuest$[ebp]
	push	edx
	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddQuestForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z ; CvMinorCivAI::AddQuestForPlayer

; 4481 : 		return true;

	mov	al, 1
	jmp	$LN23@AddQuestIf
	jmp	$LN12@AddQuestIf
$LN14@AddQuestIf:

; 4482 : 	}
; 4483 : 	else if (IsGlobalQuest(eQuest))

	mov	ecx, DWORD PTR _eQuest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsGlobalQuest@CvMinorCivAI@@QBE_NW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsGlobalQuest
	movzx	edx, al
	test	edx, edx
	je	$LN12@AddQuestIf

; 4484 : 	{
; 4485 : 		if(GetNumActiveGlobalQuests() >= GetMaxActiveGlobalQuests())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumActiveGlobalQuests@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetNumActiveGlobalQuests
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMaxActiveGlobalQuests@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetMaxActiveGlobalQuests
	cmp	esi, eax
	jl	SHORT $LN10@AddQuestIf

; 4486 : 		{
; 4487 : 			return false;

	xor	al, al
	jmp	$LN23@AddQuestIf
$LN10@AddQuestIf:

; 4488 : 		}
; 4489 : 
; 4490 : 		int iNumValidPlayers = 0;

	mov	DWORD PTR _iNumValidPlayers$224561[ebp], 0

; 4491 : 		for(int iPlayerLoop = 0; iPlayerLoop < MAX_MAJOR_CIVS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$224562[ebp], 0
	jmp	SHORT $LN9@AddQuestIf
$LN8@AddQuestIf:
	mov	eax, DWORD PTR _iPlayerLoop$224562[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayerLoop$224562[ebp], eax
$LN9@AddQuestIf:
	cmp	DWORD PTR _iPlayerLoop$224562[ebp], 22	; 00000016H
	jge	SHORT $LN7@AddQuestIf

; 4492 : 		{
; 4493 : 			PlayerTypes ePlayerLoop = (PlayerTypes) iPlayerLoop;

	mov	ecx, DWORD PTR _iPlayerLoop$224562[ebp]
	mov	DWORD PTR _ePlayerLoop$224566[ebp], ecx

; 4494 : 			if(IsValidQuestForPlayer(ePlayerLoop, eQuest))

	mov	edx, DWORD PTR _eQuest$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayerLoop$224566[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsValidQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsValidQuestForPlayer
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@AddQuestIf

; 4495 : 				iNumValidPlayers++;

	mov	edx, DWORD PTR _iNumValidPlayers$224561[ebp]
	add	edx, 1
	mov	DWORD PTR _iNumValidPlayers$224561[ebp], edx
$LN6@AddQuestIf:

; 4496 : 		}

	jmp	SHORT $LN8@AddQuestIf
$LN7@AddQuestIf:

; 4497 : 		if(iNumValidPlayers < GetMinPlayersNeededForQuest(eQuest))

	mov	eax, DWORD PTR _eQuest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMinPlayersNeededForQuest@CvMinorCivAI@@QBEHW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::GetMinPlayersNeededForQuest
	cmp	DWORD PTR _iNumValidPlayers$224561[ebp], eax
	jge	SHORT $LN5@AddQuestIf

; 4498 : 			return false;

	xor	al, al
	jmp	SHORT $LN23@AddQuestIf
$LN5@AddQuestIf:

; 4499 : 
; 4500 : 		for(int iPlayerLoop = 0; iPlayerLoop < MAX_MAJOR_CIVS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$224570[ebp], 0
	jmp	SHORT $LN4@AddQuestIf
$LN3@AddQuestIf:
	mov	ecx, DWORD PTR _iPlayerLoop$224570[ebp]
	add	ecx, 1
	mov	DWORD PTR _iPlayerLoop$224570[ebp], ecx
$LN4@AddQuestIf:
	cmp	DWORD PTR _iPlayerLoop$224570[ebp], 22	; 00000016H
	jge	SHORT $LN2@AddQuestIf

; 4501 : 		{
; 4502 : 			PlayerTypes ePlayerLoop = (PlayerTypes) iPlayerLoop;

	mov	edx, DWORD PTR _iPlayerLoop$224570[ebp]
	mov	DWORD PTR _ePlayerLoop$224574[ebp], edx

; 4503 : 			if(IsValidQuestForPlayer(ePlayerLoop, eQuest))

	mov	eax, DWORD PTR _eQuest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayerLoop$224574[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsValidQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsValidQuestForPlayer
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@AddQuestIf

; 4504 : 				AddQuestForPlayer(ePlayerLoop, eQuest, GC.getGame().getGameTurn());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T241375[ebp], eax
	mov	ecx, DWORD PTR $T241375[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	push	eax
	mov	ecx, DWORD PTR _eQuest$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayerLoop$224574[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddQuestForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z ; CvMinorCivAI::AddQuestForPlayer
$LN1@AddQuestIf:

; 4505 : 		}

	jmp	SHORT $LN3@AddQuestIf
$LN2@AddQuestIf:

; 4506 : 		return true;

	mov	al, 1
	jmp	SHORT $LN23@AddQuestIf
$LN12@AddQuestIf:

; 4507 : 	}
; 4508 : 
; 4509 : 	return false;

	xor	al, al
$LN23@AddQuestIf:

; 4510 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?AddQuestIfAble@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ENDP ; CvMinorCivAI::AddQuestIfAble
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetQuestData1@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T241401 = -28						; size = 4
$T241397 = -24						; size = 4
$T241393 = -20						; size = 4
$T241389 = -16						; size = 4
$T241385 = -12						; size = 4
$T241381 = -8						; size = 4
_iQuestLoop$224584 = -4					; size = 4
_ePlayer$ = 8						; size = 4
_eType$ = 12						; size = 4
?GetQuestData1@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z PROC ; CvMinorCivAI::GetQuestData1, COMDAT
; _this$ = ecx

; 4514 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 4515 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 4516 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 4517 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) CvMinorCivQuest::NO_QUEST_DATA;
; 4518 : 
; 4519 : 	for(uint iQuestLoop = 0; iQuestLoop < m_QuestsGiven[ePlayer].size(); iQuestLoop++)

	mov	DWORD PTR _iQuestLoop$224584[ebp], 0
	jmp	SHORT $LN4@GetQuestDa
$LN3@GetQuestDa:
	mov	eax, DWORD PTR _iQuestLoop$224584[ebp]
	add	eax, 1
	mov	DWORD PTR _iQuestLoop$224584[ebp], eax
$LN4@GetQuestDa:
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	mov	DWORD PTR $T241381[ebp], ecx
	mov	eax, DWORD PTR $T241381[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T241385[ebp], ecx
	mov	edx, DWORD PTR _iQuestLoop$224584[ebp]
	cmp	edx, DWORD PTR $T241385[ebp]
	jae	SHORT $LN2@GetQuestDa

; 4520 : 	{
; 4521 : 		if(m_QuestsGiven[ePlayer][iQuestLoop].GetType() == eType)

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+3328]
	mov	DWORD PTR $T241389[ebp], eax
	mov	edx, DWORD PTR _iQuestLoop$224584[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR $T241389[ebp]
	add	edx, DWORD PTR [eax]
	mov	DWORD PTR $T241393[ebp], edx
	mov	ecx, DWORD PTR $T241393[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	cmp	eax, DWORD PTR _eType$[ebp]
	jne	SHORT $LN1@GetQuestDa

; 4522 : 		{
; 4523 : 			return m_QuestsGiven[ePlayer][iQuestLoop].GetPrimaryData();

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	mov	DWORD PTR $T241397[ebp], ecx
	mov	eax, DWORD PTR _iQuestLoop$224584[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR $T241397[ebp]
	add	eax, DWORD PTR [ecx]
	mov	DWORD PTR $T241401[ebp], eax
	mov	ecx, DWORD PTR $T241401[ebp]
	call	?GetPrimaryData@CvMinorCivQuest@@QBEHXZ	; CvMinorCivQuest::GetPrimaryData
	jmp	SHORT $LN7@GetQuestDa
$LN1@GetQuestDa:

; 4524 : 		}
; 4525 : 	}

	jmp	$LN3@GetQuestDa
$LN2@GetQuestDa:

; 4526 : 
; 4527 : 	return CvMinorCivQuest::NO_QUEST_DATA;

	or	eax, -1
$LN7@GetQuestDa:

; 4528 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetQuestData1@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ENDP ; CvMinorCivAI::GetQuestData1
_TEXT	ENDS
PUBLIC	?GetQuestData2@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::GetQuestData2
; Function compile flags: /Odtp
;	COMDAT ?GetQuestData2@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T241427 = -28						; size = 4
$T241423 = -24						; size = 4
$T241419 = -20						; size = 4
$T241415 = -16						; size = 4
$T241411 = -12						; size = 4
$T241407 = -8						; size = 4
_iQuestLoop$224596 = -4					; size = 4
_ePlayer$ = 8						; size = 4
_eType$ = 12						; size = 4
?GetQuestData2@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z PROC ; CvMinorCivAI::GetQuestData2, COMDAT
; _this$ = ecx

; 4532 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 4533 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 4534 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 4535 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return CvMinorCivQuest::NO_QUEST_DATA;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN5@GetQuestDa@2
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN6@GetQuestDa@2
$LN5@GetQuestDa@2:
	or	eax, -1
	jmp	$LN7@GetQuestDa@2
$LN6@GetQuestDa@2:

; 4536 : 
; 4537 : 	for(uint iQuestLoop = 0; iQuestLoop < m_QuestsGiven[ePlayer].size(); iQuestLoop++)

	mov	DWORD PTR _iQuestLoop$224596[ebp], 0
	jmp	SHORT $LN4@GetQuestDa@2
$LN3@GetQuestDa@2:
	mov	eax, DWORD PTR _iQuestLoop$224596[ebp]
	add	eax, 1
	mov	DWORD PTR _iQuestLoop$224596[ebp], eax
$LN4@GetQuestDa@2:
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	mov	DWORD PTR $T241407[ebp], ecx
	mov	eax, DWORD PTR $T241407[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T241411[ebp], ecx
	mov	edx, DWORD PTR _iQuestLoop$224596[ebp]
	cmp	edx, DWORD PTR $T241411[ebp]
	jae	SHORT $LN2@GetQuestDa@2

; 4538 : 	{
; 4539 : 		if(m_QuestsGiven[ePlayer][iQuestLoop].GetType() == eType)

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+3328]
	mov	DWORD PTR $T241415[ebp], eax
	mov	edx, DWORD PTR _iQuestLoop$224596[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR $T241415[ebp]
	add	edx, DWORD PTR [eax]
	mov	DWORD PTR $T241419[ebp], edx
	mov	ecx, DWORD PTR $T241419[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	cmp	eax, DWORD PTR _eType$[ebp]
	jne	SHORT $LN1@GetQuestDa@2

; 4540 : 		{
; 4541 : 			return m_QuestsGiven[ePlayer][iQuestLoop].GetSecondaryData();

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	mov	DWORD PTR $T241423[ebp], ecx
	mov	eax, DWORD PTR _iQuestLoop$224596[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR $T241423[ebp]
	add	eax, DWORD PTR [ecx]
	mov	DWORD PTR $T241427[ebp], eax
	mov	ecx, DWORD PTR $T241427[ebp]
	call	?GetSecondaryData@CvMinorCivQuest@@QBEHXZ ; CvMinorCivQuest::GetSecondaryData
	jmp	SHORT $LN7@GetQuestDa@2
$LN1@GetQuestDa@2:

; 4542 : 		}
; 4543 : 	}

	jmp	$LN3@GetQuestDa@2
$LN2@GetQuestDa@2:

; 4544 : 
; 4545 : 	return CvMinorCivQuest::NO_QUEST_DATA;

	or	eax, -1
$LN7@GetQuestDa@2:

; 4546 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetQuestData2@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ENDP ; CvMinorCivAI::GetQuestData2
_TEXT	ENDS
PUBLIC	?GetQuestTurnsRemaining@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z ; CvMinorCivAI::GetQuestTurnsRemaining
; Function compile flags: /Odtp
;	COMDAT ?GetQuestTurnsRemaining@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T241453 = -28						; size = 4
$T241449 = -24						; size = 4
$T241445 = -20						; size = 4
$T241441 = -16						; size = 4
$T241437 = -12						; size = 4
$T241433 = -8						; size = 4
_iQuestLoop$224609 = -4					; size = 4
_ePlayer$ = 8						; size = 4
_eType$ = 12						; size = 4
_iGameTurn$ = 16					; size = 4
?GetQuestTurnsRemaining@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z PROC ; CvMinorCivAI::GetQuestTurnsRemaining, COMDAT
; _this$ = ecx

; 4549 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 4550 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 4551 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 4552 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return CvMinorCivQuest::NO_TURN;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN5@GetQuestTu
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN6@GetQuestTu
$LN5@GetQuestTu:
	or	eax, -1
	jmp	$LN7@GetQuestTu
$LN6@GetQuestTu:

; 4553 : 
; 4554 : 	for(uint iQuestLoop = 0; iQuestLoop < m_QuestsGiven[ePlayer].size(); iQuestLoop++)

	mov	DWORD PTR _iQuestLoop$224609[ebp], 0
	jmp	SHORT $LN4@GetQuestTu
$LN3@GetQuestTu:
	mov	eax, DWORD PTR _iQuestLoop$224609[ebp]
	add	eax, 1
	mov	DWORD PTR _iQuestLoop$224609[ebp], eax
$LN4@GetQuestTu:
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	mov	DWORD PTR $T241433[ebp], ecx
	mov	eax, DWORD PTR $T241433[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T241437[ebp], ecx
	mov	edx, DWORD PTR _iQuestLoop$224609[ebp]
	cmp	edx, DWORD PTR $T241437[ebp]
	jae	SHORT $LN2@GetQuestTu

; 4555 : 	{
; 4556 : 		if(m_QuestsGiven[ePlayer][iQuestLoop].GetType() == eType)

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+3328]
	mov	DWORD PTR $T241441[ebp], eax
	mov	edx, DWORD PTR _iQuestLoop$224609[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR $T241441[ebp]
	add	edx, DWORD PTR [eax]
	mov	DWORD PTR $T241445[ebp], edx
	mov	ecx, DWORD PTR $T241445[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	cmp	eax, DWORD PTR _eType$[ebp]
	jne	SHORT $LN1@GetQuestTu

; 4557 : 		{
; 4558 : 			return m_QuestsGiven[ePlayer][iQuestLoop].GetTurnsRemaining(iGameTurn);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	mov	DWORD PTR $T241449[ebp], ecx
	mov	eax, DWORD PTR _iQuestLoop$224609[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR $T241449[ebp]
	add	eax, DWORD PTR [ecx]
	mov	DWORD PTR $T241453[ebp], eax
	mov	edx, DWORD PTR _iGameTurn$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T241453[ebp]
	call	?GetTurnsRemaining@CvMinorCivQuest@@QBEHH@Z ; CvMinorCivQuest::GetTurnsRemaining
	jmp	SHORT $LN7@GetQuestTu
$LN1@GetQuestTu:

; 4559 : 		}
; 4560 : 	}

	jmp	$LN3@GetQuestTu
$LN2@GetQuestTu:

; 4561 : 
; 4562 : 	return CvMinorCivQuest::NO_TURN;

	or	eax, -1
$LN7@GetQuestTu:

; 4563 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetQuestTurnsRemaining@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z ENDP ; CvMinorCivAI::GetQuestTurnsRemaining
_TEXT	ENDS
PUBLIC	?IsContestLeader@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsContestLeader
; Function compile flags: /Odtp
;	COMDAT ?IsContestLeader@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T241479 = -28						; size = 4
$T241475 = -24						; size = 4
$T241471 = -20						; size = 4
$T241467 = -16						; size = 4
$T241463 = -12						; size = 4
$T241459 = -8						; size = 4
_iQuestLoop$224621 = -4					; size = 4
_ePlayer$ = 8						; size = 4
_eType$ = 12						; size = 4
?IsContestLeader@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z PROC ; CvMinorCivAI::IsContestLeader, COMDAT
; _this$ = ecx

; 4566 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 4567 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 4568 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 4569 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return false;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN5@IsContestL@2
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN6@IsContestL@2
$LN5@IsContestL@2:
	xor	al, al
	jmp	$LN7@IsContestL@2
$LN6@IsContestL@2:

; 4570 : 
; 4571 : 	for (uint iQuestLoop = 0; iQuestLoop < m_QuestsGiven[ePlayer].size(); iQuestLoop++)

	mov	DWORD PTR _iQuestLoop$224621[ebp], 0
	jmp	SHORT $LN4@IsContestL@2
$LN3@IsContestL@2:
	mov	eax, DWORD PTR _iQuestLoop$224621[ebp]
	add	eax, 1
	mov	DWORD PTR _iQuestLoop$224621[ebp], eax
$LN4@IsContestL@2:
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	mov	DWORD PTR $T241459[ebp], ecx
	mov	eax, DWORD PTR $T241459[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T241463[ebp], ecx
	mov	edx, DWORD PTR _iQuestLoop$224621[ebp]
	cmp	edx, DWORD PTR $T241463[ebp]
	jae	SHORT $LN2@IsContestL@2

; 4572 : 	{
; 4573 : 		if (m_QuestsGiven[ePlayer][iQuestLoop].GetType() == eType)

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+3328]
	mov	DWORD PTR $T241467[ebp], eax
	mov	edx, DWORD PTR _iQuestLoop$224621[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR $T241467[ebp]
	add	edx, DWORD PTR [eax]
	mov	DWORD PTR $T241471[ebp], edx
	mov	ecx, DWORD PTR $T241471[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	cmp	eax, DWORD PTR _eType$[ebp]
	jne	SHORT $LN1@IsContestL@2

; 4574 : 		{
; 4575 : 			return m_QuestsGiven[ePlayer][iQuestLoop].IsContestLeader(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	mov	DWORD PTR $T241475[ebp], ecx
	mov	eax, DWORD PTR _iQuestLoop$224621[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR $T241475[ebp]
	add	eax, DWORD PTR [ecx]
	mov	DWORD PTR $T241479[ebp], eax
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T241479[ebp]
	call	?IsContestLeader@CvMinorCivQuest@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivQuest::IsContestLeader
	jmp	SHORT $LN7@IsContestL@2
$LN1@IsContestL@2:

; 4576 : 		}
; 4577 : 	}

	jmp	$LN3@IsContestL@2
$LN2@IsContestL@2:

; 4578 : 
; 4579 : 	return false;

	xor	al, al
$LN7@IsContestL@2:

; 4580 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?IsContestLeader@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ENDP ; CvMinorCivAI::IsContestLeader
_TEXT	ENDS
PUBLIC	?GetContestValueForLeader@CvMinorCivAI@@QAEHW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::GetContestValueForLeader
; Function compile flags: /Odtp
;	COMDAT ?GetContestValueForLeader@CvMinorCivAI@@QAEHW4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
_this$ = -40						; size = 4
$T241505 = -36						; size = 4
$T241501 = -32						; size = 4
$T241497 = -28						; size = 4
$T241493 = -24						; size = 4
$T241489 = -20						; size = 4
$T241485 = -16						; size = 4
_iQuestLoop$224636 = -12				; size = 4
_iMajor$224631 = -8					; size = 4
_eParticipant$ = -4					; size = 4
_eType$ = 8						; size = 4
?GetContestValueForLeader@CvMinorCivAI@@QAEHW4MinorCivQuestTypes@@@Z PROC ; CvMinorCivAI::GetContestValueForLeader, COMDAT
; _this$ = ecx

; 4583 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	DWORD PTR _this$[ebp], ecx

; 4584 : 	PlayerTypes eParticipant;
; 4585 : 	for (int iMajor = 0; iMajor < MAX_MAJOR_CIVS; iMajor++)

	mov	DWORD PTR _iMajor$224631[ebp], 0
	jmp	SHORT $LN7@GetContest@4
$LN6@GetContest@4:
	mov	eax, DWORD PTR _iMajor$224631[ebp]
	add	eax, 1
	mov	DWORD PTR _iMajor$224631[ebp], eax
$LN7@GetContest@4:
	cmp	DWORD PTR _iMajor$224631[ebp], 22	; 00000016H
	jge	$LN5@GetContest@4

; 4586 : 	{
; 4587 : 		eParticipant = (PlayerTypes) iMajor;

	mov	ecx, DWORD PTR _iMajor$224631[ebp]
	mov	DWORD PTR _eParticipant$[ebp], ecx

; 4588 : 		for (uint iQuestLoop = 0; iQuestLoop < m_QuestsGiven[eParticipant].size(); iQuestLoop++)

	mov	DWORD PTR _iQuestLoop$224636[ebp], 0
	jmp	SHORT $LN4@GetContest@4
$LN3@GetContest@4:
	mov	edx, DWORD PTR _iQuestLoop$224636[ebp]
	add	edx, 1
	mov	DWORD PTR _iQuestLoop$224636[ebp], edx
$LN4@GetContest@4:
	mov	eax, DWORD PTR _eParticipant$[ebp]
	imul	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+3328]
	mov	DWORD PTR $T241485[ebp], eax
	mov	edx, DWORD PTR $T241485[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T241489[ebp], eax
	mov	ecx, DWORD PTR _iQuestLoop$224636[ebp]
	cmp	ecx, DWORD PTR $T241489[ebp]
	jae	SHORT $LN2@GetContest@4

; 4589 : 		{
; 4590 : 			if (m_QuestsGiven[eParticipant][iQuestLoop].GetType() == eType)

	mov	edx, DWORD PTR _eParticipant$[ebp]
	imul	edx, 156				; 0000009cH
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+3328]
	mov	DWORD PTR $T241493[ebp], edx
	mov	ecx, DWORD PTR _iQuestLoop$224636[ebp]
	imul	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR $T241493[ebp]
	add	ecx, DWORD PTR [edx]
	mov	DWORD PTR $T241497[ebp], ecx
	mov	ecx, DWORD PTR $T241497[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	cmp	eax, DWORD PTR _eType$[ebp]
	jne	SHORT $LN1@GetContest@4

; 4591 : 			{
; 4592 : 				return m_QuestsGiven[eParticipant][iQuestLoop].GetContestValueForLeader();

	mov	eax, DWORD PTR _eParticipant$[ebp]
	imul	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+3328]
	mov	DWORD PTR $T241501[ebp], eax
	mov	edx, DWORD PTR _iQuestLoop$224636[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR $T241501[ebp]
	add	edx, DWORD PTR [eax]
	mov	DWORD PTR $T241505[ebp], edx
	mov	ecx, DWORD PTR $T241505[ebp]
	call	?GetContestValueForLeader@CvMinorCivQuest@@QAEHXZ ; CvMinorCivQuest::GetContestValueForLeader
	jmp	SHORT $LN8@GetContest@4
$LN1@GetContest@4:

; 4593 : 			}
; 4594 : 		}

	jmp	$LN3@GetContest@4
$LN2@GetContest@4:

; 4595 : 	}

	jmp	$LN6@GetContest@4
$LN5@GetContest@4:

; 4596 : 
; 4597 : 	return -1;

	or	eax, -1
$LN8@GetContest@4:

; 4598 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetContestValueForLeader@CvMinorCivAI@@QAEHW4MinorCivQuestTypes@@@Z ENDP ; CvMinorCivAI::GetContestValueForLeader
_TEXT	ENDS
PUBLIC	?GetContestValueForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::GetContestValueForPlayer
; Function compile flags: /Odtp
;	COMDAT ?GetContestValueForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T241531 = -28						; size = 4
$T241527 = -24						; size = 4
$T241523 = -20						; size = 4
$T241519 = -16						; size = 4
$T241515 = -12						; size = 4
$T241511 = -8						; size = 4
_iQuestLoop$224648 = -4					; size = 4
_ePlayer$ = 8						; size = 4
_eType$ = 12						; size = 4
?GetContestValueForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z PROC ; CvMinorCivAI::GetContestValueForPlayer, COMDAT
; _this$ = ecx

; 4601 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 4602 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 4603 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 4604 : #ifdef AUI_WARNING_FIXES
; 4605 : 	if (ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return -1;
; 4606 : #else
; 4607 : 	if (ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return false;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN5@GetContest@5
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN6@GetContest@5
$LN5@GetContest@5:
	xor	eax, eax
	jmp	$LN7@GetContest@5
$LN6@GetContest@5:

; 4608 : #endif
; 4609 : 
; 4610 : 	for (uint iQuestLoop = 0; iQuestLoop < m_QuestsGiven[ePlayer].size(); iQuestLoop++)

	mov	DWORD PTR _iQuestLoop$224648[ebp], 0
	jmp	SHORT $LN4@GetContest@5
$LN3@GetContest@5:
	mov	eax, DWORD PTR _iQuestLoop$224648[ebp]
	add	eax, 1
	mov	DWORD PTR _iQuestLoop$224648[ebp], eax
$LN4@GetContest@5:
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	mov	DWORD PTR $T241511[ebp], ecx
	mov	eax, DWORD PTR $T241511[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T241515[ebp], ecx
	mov	edx, DWORD PTR _iQuestLoop$224648[ebp]
	cmp	edx, DWORD PTR $T241515[ebp]
	jae	SHORT $LN2@GetContest@5

; 4611 : 	{
; 4612 : 		if (m_QuestsGiven[ePlayer][iQuestLoop].GetType() == eType)

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+3328]
	mov	DWORD PTR $T241519[ebp], eax
	mov	edx, DWORD PTR _iQuestLoop$224648[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR $T241519[ebp]
	add	edx, DWORD PTR [eax]
	mov	DWORD PTR $T241523[ebp], edx
	mov	ecx, DWORD PTR $T241523[ebp]
	call	?GetType@CvMinorCivQuest@@QBE?AW4MinorCivQuestTypes@@XZ ; CvMinorCivQuest::GetType
	cmp	eax, DWORD PTR _eType$[ebp]
	jne	SHORT $LN1@GetContest@5

; 4613 : 		{
; 4614 : 			return m_QuestsGiven[ePlayer][iQuestLoop].GetContestValueForPlayer(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+3328]
	mov	DWORD PTR $T241527[ebp], ecx
	mov	eax, DWORD PTR _iQuestLoop$224648[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR $T241527[ebp]
	add	eax, DWORD PTR [ecx]
	mov	DWORD PTR $T241531[ebp], eax
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T241531[ebp]
	call	?GetContestValueForPlayer@CvMinorCivQuest@@QAEHW4PlayerTypes@@@Z ; CvMinorCivQuest::GetContestValueForPlayer
	jmp	SHORT $LN7@GetContest@5
$LN1@GetContest@5:

; 4615 : 		}
; 4616 : 	}

	jmp	$LN3@GetContest@5
$LN2@GetContest@5:

; 4617 : 
; 4618 : 	return -1;

	or	eax, -1
$LN7@GetContest@5:

; 4619 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetContestValueForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ENDP ; CvMinorCivAI::GetContestValueForPlayer
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsRouteConnectionEstablished@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eMajor$ = 8						; size = 4
?IsRouteConnectionEstablished@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::IsRouteConnectionEstablished, COMDAT
; _this$ = ecx

; 4623 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 4624 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 4625 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 4626 : 	if(eMajor < 0 || eMajor >= MAX_MAJOR_CIVS) return false;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN1@IsRouteCon
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN2@IsRouteCon
$LN1@IsRouteCon:
	xor	al, al
	jmp	SHORT $LN3@IsRouteCon
$LN2@IsRouteCon:

; 4627 : 
; 4628 : 	return m_abRouteConnectionEstablished[eMajor];

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _eMajor$[ebp]
	mov	al, BYTE PTR [eax+1988]
$LN3@IsRouteCon:

; 4629 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsRouteConnectionEstablished@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::IsRouteConnectionEstablished
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?SetRouteConnectionEstablished@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eMajor$ = 8						; size = 4
_bValue$ = 12						; size = 1
?SetRouteConnectionEstablished@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z PROC ; CvMinorCivAI::SetRouteConnectionEstablished, COMDAT
; _this$ = ecx

; 4633 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 4634 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 4635 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 4636 : 	if(eMajor < 0 || eMajor >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN2@SetRouteCo
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN3@SetRouteCo
$LN2@SetRouteCo:
	jmp	SHORT $LN4@SetRouteCo
$LN3@SetRouteCo:

; 4637 : 
; 4638 : 	if(m_abRouteConnectionEstablished[eMajor] != bValue)

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _eMajor$[ebp]
	movzx	ecx, BYTE PTR [eax+1988]
	movzx	edx, BYTE PTR _bValue$[ebp]
	cmp	ecx, edx
	je	SHORT $LN4@SetRouteCo

; 4639 : 	{
; 4640 : 		m_abRouteConnectionEstablished[eMajor] = bValue;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _eMajor$[ebp]
	mov	cl, BYTE PTR _bValue$[ebp]
	mov	BYTE PTR [eax+1988], cl
$LN4@SetRouteCo:

; 4641 : 	}
; 4642 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetRouteConnectionEstablished@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z ENDP ; CvMinorCivAI::SetRouteConnectionEstablished
_TEXT	ENDS
PUBLIC	??1?$CvWeightedVector@H$0EA@$00@@QAE@XZ		; CvWeightedVector<int,64,1>::~CvWeightedVector<int,64,1>
PUBLIC	?SortItems@?$CvWeightedVector@H$0EA@$00@@QAEXXZ	; CvWeightedVector<int,64,1>::SortItems
PUBLIC	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>::~FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>
PUBLIC	?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@Z ; FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>::push_back
PUBLIC	?plotXY@@YAPAVCvPlot@@HHHH@Z			; plotXY
PUBLIC	??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>::FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>
PUBLIC	__$ArrayPad$
EXTRN	?GetPlotIndex@CvPlot@@QBEHXZ:PROC		; CvPlot::GetPlotIndex
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?GetBestNearbyCampToKill@CvMinorCivAI@@QAEPAVCvPlot@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetBestNearbyCampToKill@CvMinorCivAI@@QAEPAVCvPlot@@XZ$0
__ehfuncinfo$?GetBestNearbyCampToKill@CvMinorCivAI@@QAEPAVCvPlot@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetBestNearbyCampToKill@CvMinorCivAI@@QAEPAVCvPlot@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?GetBestNearbyCampToKill@CvMinorCivAI@@QAEPAVCvPlot@@XZ
_TEXT	SEGMENT
tv247 = -788						; size = 4
_this$ = -784						; size = 4
$T241809 = -768						; size = 4
$T241802 = -764						; size = 4
$T241795 = -760						; size = 4
$T241791 = -756						; size = 4
$T241750 = -736						; size = 4
_weightedElem$241745 = -732				; size = 8
$T241736 = -724						; size = 4
$T241692 = -676						; size = 4
$T241683 = -672						; size = 4
$T241674 = -668						; size = 4
$T241670 = -664						; size = 4
$T241666 = -660						; size = 4
$T241567 = -600						; size = 4
$T241558 = -596						; size = 4
$T241541 = -592						; size = 4
$T241540 = -588						; size = 4
$T241539 = -584						; size = 4
_iWeight$224904 = -580					; size = 4
_iDistance$224900 = -576				; size = 4
_pCapital$ = -572					; size = 4
_iDY$ = -568						; size = 4
_iDX$ = -564						; size = 4
_iRange$ = -560						; size = 4
_viPlotIndexes$ = -556					; size = 528
__$ArrayPad$ = -24					; size = 4
_pBestPlot$ = -20					; size = 4
_pLoopPlot$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?GetBestNearbyCampToKill@CvMinorCivAI@@QAEPAVCvPlot@@XZ PROC ; CvMinorCivAI::GetBestNearbyCampToKill, COMDAT
; _this$ = ecx

; 4647 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetBestNearbyCampToKill@CvMinorCivAI@@QAEPAVCvPlot@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 776				; 00000308H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 4648 : 	CvCity* pCapital = GetPlayer()->getCapitalCity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pCapital$[ebp], eax

; 4649 : 
; 4650 : 	// Minor must have Capital
; 4651 : 	if(pCapital == NULL)

	cmp	DWORD PTR _pCapital$[ebp], 0
	jne	SHORT $LN13@GetBestNea

; 4652 : 	{
; 4653 : 		return NULL;

	xor	eax, eax
	jmp	$LN14@GetBestNea
$LN13@GetBestNea:

; 4654 : 	}
; 4655 : 
; 4656 : 	CvWeightedVector<int, 64, true> viPlotIndexes; // 64 camps in 12 hex radius should be enough

	lea	ecx, DWORD PTR _viPlotIndexes$[ebp]
	call	??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>::FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 4657 : 
; 4658 : 	int iRange = /*12*/ GC.getMINOR_CIV_QUEST_KILL_CAMP_RANGE();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3232
	mov	DWORD PTR _iRange$[ebp], eax

; 4659 : 
; 4660 : 	CvPlot* pLoopPlot;
; 4661 : 
; 4662 : 	// Loop in all plots in range
; 4663 : 	int iDX, iDY;
; 4664 : #ifdef AUI_HEXSPACE_DX_LOOPS
; 4665 : 	int iMaxDX;
; 4666 : 	for (iDY = -iRange; iDY <= iRange; iDY++)
; 4667 : 	{
; 4668 : 		iMaxDX = iRange - MAX(0, iDY);
; 4669 : 		for (iDX = -iRange - MIN(0, iDY); iDX <= iMaxDX; iDX++) // MIN() and MAX() stuff is to reduce loops (hexspace!)
; 4670 : #else
; 4671 : 	for(iDX = -(iRange); iDX <= iRange; iDX++)

	mov	ecx, DWORD PTR _iRange$[ebp]
	neg	ecx
	mov	DWORD PTR _iDX$[ebp], ecx
	jmp	SHORT $LN12@GetBestNea
$LN11@GetBestNea:
	mov	edx, DWORD PTR _iDX$[ebp]
	add	edx, 1
	mov	DWORD PTR _iDX$[ebp], edx
$LN12@GetBestNea:
	mov	eax, DWORD PTR _iDX$[ebp]
	cmp	eax, DWORD PTR _iRange$[ebp]
	jg	$LN10@GetBestNea

; 4672 : 	{
; 4673 : 		for(iDY = -(iRange); iDY <= iRange; iDY++)

	mov	ecx, DWORD PTR _iRange$[ebp]
	neg	ecx
	mov	DWORD PTR _iDY$[ebp], ecx
	jmp	SHORT $LN9@GetBestNea
$LN8@GetBestNea:
	mov	edx, DWORD PTR _iDY$[ebp]
	add	edx, 1
	mov	DWORD PTR _iDY$[ebp], edx
$LN9@GetBestNea:
	mov	eax, DWORD PTR _iDY$[ebp]
	cmp	eax, DWORD PTR _iRange$[ebp]
	jg	$LN7@GetBestNea

; 4674 : #endif
; 4675 : 		{
; 4676 : 			pLoopPlot = plotXY(pCapital->getX(), pCapital->getY(), iDX, iDY);

	mov	ecx, DWORD PTR _pCapital$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR $T241558[ebp], edx
	mov	eax, DWORD PTR _pCapital$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T241567[ebp], ecx
	mov	edx, DWORD PTR _iDY$[ebp]
	push	edx
	mov	eax, DWORD PTR _iDX$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T241558[ebp]
	push	ecx
	mov	edx, DWORD PTR $T241567[ebp]
	push	edx
	call	?plotXY@@YAPAVCvPlot@@HHHH@Z		; plotXY
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pLoopPlot$[ebp], eax

; 4677 : 
; 4678 : 			if(pLoopPlot != NULL)

	cmp	DWORD PTR _pLoopPlot$[ebp], 0
	je	$LN6@GetBestNea

; 4679 : 			{
; 4680 : 				// Camp must be in the same Area as us
; 4681 : 				if(pLoopPlot->getArea() != pCapital->getArea())

	mov	eax, DWORD PTR _pLoopPlot$[ebp]
	mov	ecx, DWORD PTR [eax+356]
	mov	DWORD PTR $T241666[ebp], ecx
	mov	ecx, DWORD PTR _pCapital$[ebp]
	call	?getArea@CvCity@@QBEHXZ			; CvCity::getArea
	cmp	DWORD PTR $T241666[ebp], eax
	je	SHORT $LN5@GetBestNea

; 4682 : 				{
; 4683 : 					continue;

	jmp	$LN8@GetBestNea
$LN5@GetBestNea:

; 4684 : 				}
; 4685 : 
; 4686 : #ifndef AUI_HEXSPACE_DX_LOOPS
; 4687 : 				int iDistance = plotDistance(pCapital->getX(), pCapital->getY(), pLoopPlot->getX(), pLoopPlot->getY());

	mov	edx, DWORD PTR _pLoopPlot$[ebp]
	movsx	eax, WORD PTR [edx+2]
	mov	DWORD PTR $T241670[ebp], eax
	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	movsx	edx, WORD PTR [ecx]
	mov	DWORD PTR $T241674[ebp], edx
	mov	eax, DWORD PTR _pCapital$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T241683[ebp], ecx
	mov	edx, DWORD PTR _pCapital$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T241692[ebp], eax
	mov	ecx, DWORD PTR $T241670[ebp]
	push	ecx
	mov	edx, DWORD PTR $T241674[ebp]
	push	edx
	mov	eax, DWORD PTR $T241683[ebp]
	push	eax
	mov	ecx, DWORD PTR $T241692[ebp]
	push	ecx
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H
	mov	DWORD PTR _iDistance$224900[ebp], eax

; 4688 : 
; 4689 : 				if(iDistance <= iRange)

	mov	edx, DWORD PTR _iDistance$224900[ebp]
	cmp	edx, DWORD PTR _iRange$[ebp]
	jg	$LN6@GetBestNea

; 4690 : #endif
; 4691 : 				{
; 4692 : 					// Can't be owned by anyone
; 4693 : 					if(pLoopPlot->getOwner() == NO_PLAYER)

	mov	eax, DWORD PTR _pLoopPlot$[ebp]
	movsx	ecx, BYTE PTR [eax+4]
	cmp	ecx, -1
	jne	SHORT $LN6@GetBestNea

; 4694 : 					{
; 4695 : 						// Camp here?
; 4696 : 						if(pLoopPlot->getImprovementType() == GC.getBARBARIAN_CAMP_IMPROVEMENT())

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8548
	mov	DWORD PTR $T241736[ebp], edx
	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	call	?getImprovementType@CvPlot@@QBE?AW4ImprovementTypes@@XZ ; CvPlot::getImprovementType
	cmp	eax, DWORD PTR $T241736[ebp]
	jne	SHORT $LN6@GetBestNea

; 4697 : 						{
; 4698 : #ifdef AUI_HEXSPACE_DX_LOOPS
; 4699 : 							int iWeight = 1 + (iRange - hexDistance(iDX, iDY)); // Closer camps have higher weight
; 4700 : #else
; 4701 : 							int iWeight = 1 + (iRange - iDistance); // Closer camps have higher weight

	mov	eax, DWORD PTR _iRange$[ebp]
	sub	eax, DWORD PTR _iDistance$224900[ebp]
	add	eax, 1
	mov	DWORD PTR _iWeight$224904[ebp], eax

; 4702 : #endif
; 4703 : 							viPlotIndexes.push_back(pLoopPlot->GetPlotIndex(), iWeight);

	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	call	?GetPlotIndex@CvPlot@@QBEHXZ		; CvPlot::GetPlotIndex
	mov	DWORD PTR $T241539[ebp], eax
	mov	DWORD PTR _weightedElem$241745[ebp], 0
	mov	DWORD PTR _weightedElem$241745[ebp+4], 0
	mov	ecx, DWORD PTR $T241539[ebp]
	mov	DWORD PTR _weightedElem$241745[ebp], ecx
	mov	edx, DWORD PTR _iWeight$224904[ebp]
	mov	DWORD PTR _weightedElem$241745[ebp+4], edx
	lea	eax, DWORD PTR _weightedElem$241745[ebp]
	push	eax
	lea	ecx, DWORD PTR _viPlotIndexes$[ebp]
	call	?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@Z ; FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>::push_back
$LN6@GetBestNea:

; 4704 : 						}
; 4705 : 					}
; 4706 : 				}
; 4707 : 			}
; 4708 : 		}

	jmp	$LN8@GetBestNea
$LN7@GetBestNea:

; 4709 : 	}

	jmp	$LN11@GetBestNea
$LN10@GetBestNea:

; 4710 : 
; 4711 : 	// Didn't find any nearby
; 4712 : 	if(viPlotIndexes.size() == 0)

	mov	ecx, DWORD PTR _viPlotIndexes$[ebp+4]
	mov	DWORD PTR $T241750[ebp], ecx
	cmp	DWORD PTR $T241750[ebp], 0
	jne	SHORT $LN1@GetBestNea

; 4713 : 	{
; 4714 : 		return NULL;

	mov	DWORD PTR $T241540[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _viPlotIndexes$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>::~FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>
	mov	eax, DWORD PTR $T241540[ebp]
	jmp	$LN14@GetBestNea
$LN1@GetBestNea:

; 4715 : 	}
; 4716 : 
; 4717 : 	// Choose the best plot
; 4718 : 	viPlotIndexes.SortItems();

	lea	ecx, DWORD PTR _viPlotIndexes$[ebp]
	call	?SortItems@?$CvWeightedVector@H$0EA@$00@@QAEXXZ ; CvWeightedVector<int,64,1>::SortItems

; 4719 : 	CvPlot* pBestPlot = GC.getMap().plotByIndex(viPlotIndexes.GetElement(0));

	xor	edx, edx
	shl	edx, 3
	add	edx, DWORD PTR _viPlotIndexes$[ebp]
	mov	DWORD PTR $T241791[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T241795[ebp], eax
	mov	ecx, DWORD PTR $T241791[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T241809[ebp], edx
	cmp	DWORD PTR $T241809[ebp], 0
	jl	SHORT $LN146@GetBestNea
	mov	eax, DWORD PTR $T241795[ebp]
	mov	ecx, DWORD PTR [eax+4028]
	mov	DWORD PTR $T241802[ebp], ecx
	mov	edx, DWORD PTR $T241809[ebp]
	cmp	edx, DWORD PTR $T241802[ebp]
	jge	SHORT $LN146@GetBestNea
	mov	eax, DWORD PTR $T241809[ebp]
	imul	eax, 484				; 000001e4H
	mov	ecx, DWORD PTR $T241795[ebp]
	add	eax, DWORD PTR [ecx+4068]
	mov	DWORD PTR tv247[ebp], eax
	jmp	SHORT $LN144@GetBestNea
$LN146@GetBestNea:
	mov	DWORD PTR tv247[ebp], 0
$LN144@GetBestNea:
	mov	edx, DWORD PTR tv247[ebp]
	mov	DWORD PTR _pBestPlot$[ebp], edx

; 4720 : 
; 4721 : 	return pBestPlot;

	mov	eax, DWORD PTR _pBestPlot$[ebp]
	mov	DWORD PTR $T241541[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _viPlotIndexes$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>::~FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>
	mov	eax, DWORD PTR $T241541[ebp]
$LN14@GetBestNea:

; 4722 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetBestNearbyCampToKill@CvMinorCivAI@@QAEPAVCvPlot@@XZ$0:
	lea	ecx, DWORD PTR _viPlotIndexes$[ebp]
	jmp	??1?$CvWeightedVector@H$0EA@$00@@QAE@XZ	; CvWeightedVector<int,64,1>::~CvWeightedVector<int,64,1>
__ehhandler$?GetBestNearbyCampToKill@CvMinorCivAI@@QAEPAVCvPlot@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-780]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetBestNearbyCampToKill@CvMinorCivAI@@QAEPAVCvPlot@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetBestNearbyCampToKill@CvMinorCivAI@@QAEPAVCvPlot@@XZ ENDP ; CvMinorCivAI::GetBestNearbyCampToKill
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
;	COMDAT ?plotXY@@YAPAVCvPlot@@HHHH@Z
_TEXT	SEGMENT
tv148 = -72						; size = 4
tv163 = -68						; size = 4
tv86 = -64						; size = 4
tv82 = -60						; size = 4
$T241968 = -56						; size = 4
$T241923 = -52						; size = 4
$T241910 = -48						; size = 4
$T241906 = -44						; size = 4
$T241892 = -40						; size = 4
$T241888 = -33						; size = 1
$T241877 = -32						; size = 4
$T241873 = -25						; size = 1
_iMapY$241967 = -24					; size = 4
_iMapX$241966 = -20					; size = 4
$T241866 = -16						; size = 4
_iPlotHexX$ = -12					; size = 4
_iPlotY$ = -8						; size = 4
_iStartHexX$ = -4					; size = 4
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
_iDX$ = 16						; size = 4
_iDY$ = 20						; size = 4
?plotXY@@YAPAVCvPlot@@HHHH@Z PROC			; plotXY, COMDAT

; 213  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H

; 214  : 	// convert the start coord to hex-space coordinates
; 215  : 	int iStartHexX = xToHexspaceX(iX, iY);

	cmp	DWORD PTR _iY$[ebp], 0
	jl	SHORT $LN5@plotXY
	mov	eax, DWORD PTR _iY$[ebp]
	sar	eax, 1
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN3@plotXY
$LN5@plotXY:
	mov	eax, DWORD PTR _iY$[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR tv82[ebp], eax
$LN3@plotXY:
	mov	ecx, DWORD PTR _iX$[ebp]
	sub	ecx, DWORD PTR tv82[ebp]
	mov	DWORD PTR _iStartHexX$[ebp], ecx

; 216  : 
; 217  : 	int iPlotHexX = iStartHexX + iDX;

	mov	edx, DWORD PTR _iStartHexX$[ebp]
	add	edx, DWORD PTR _iDX$[ebp]
	mov	DWORD PTR _iPlotHexX$[ebp], edx

; 218  : 	int iPlotY = iY + iDY; // Y is the same in both coordinate systems

	mov	eax, DWORD PTR _iY$[ebp]
	add	eax, DWORD PTR _iDY$[ebp]
	mov	DWORD PTR _iPlotY$[ebp], eax

; 219  : 
; 220  : 	// convert from hex-space coordinates to the storage array
; 221  : 	iPlotHexX = hexspaceXToX(iPlotHexX, iPlotY);

	js	SHORT $LN9@plotXY
	mov	ecx, DWORD PTR _iPlotY$[ebp]
	sar	ecx, 1
	mov	DWORD PTR tv86[ebp], ecx
	jmp	SHORT $LN7@plotXY
$LN9@plotXY:
	mov	eax, DWORD PTR _iPlotY$[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR tv86[ebp], eax
$LN7@plotXY:
	mov	edx, DWORD PTR _iPlotHexX$[ebp]
	add	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR _iPlotHexX$[ebp], edx

; 222  : 
; 223  : 	return GC.getMap().plot(iPlotHexX , iPlotY);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T241866[ebp], eax
	cmp	DWORD PTR _iPlotHexX$[ebp], -2147483647	; 80000001H
	je	SHORT $LN13@plotXY
	cmp	DWORD PTR _iPlotY$[ebp], -2147483647	; 80000001H
	jne	SHORT $LN14@plotXY
$LN13@plotXY:
	mov	DWORD PTR $T241968[ebp], 0
	jmp	$LN15@plotXY
$LN14@plotXY:
	mov	ecx, DWORD PTR $T241866[ebp]
	mov	dl, BYTE PTR [ecx+4056]
	mov	BYTE PTR $T241873[ebp], dl
	mov	eax, DWORD PTR $T241866[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T241877[ebp], ecx
	movzx	edx, BYTE PTR $T241873[ebp]
	test	edx, edx
	je	SHORT $LN26@plotXY
	cmp	DWORD PTR _iPlotHexX$[ebp], 0
	jge	SHORT $LN25@plotXY
	mov	eax, DWORD PTR _iPlotHexX$[ebp]
	cdq
	idiv	DWORD PTR $T241877[ebp]
	add	edx, DWORD PTR $T241877[ebp]
	mov	DWORD PTR _iMapX$241966[ebp], edx
	jmp	SHORT $LN27@plotXY
	jmp	SHORT $LN26@plotXY
$LN25@plotXY:
	mov	eax, DWORD PTR _iPlotHexX$[ebp]
	cmp	eax, DWORD PTR $T241877[ebp]
	jl	SHORT $LN26@plotXY
	mov	eax, DWORD PTR _iPlotHexX$[ebp]
	cdq
	idiv	DWORD PTR $T241877[ebp]
	mov	DWORD PTR _iMapX$241966[ebp], edx
	jmp	SHORT $LN27@plotXY
$LN26@plotXY:
	mov	ecx, DWORD PTR _iPlotHexX$[ebp]
	mov	DWORD PTR _iMapX$241966[ebp], ecx
$LN27@plotXY:
	mov	edx, DWORD PTR $T241866[ebp]
	mov	al, BYTE PTR [edx+4057]
	mov	BYTE PTR $T241888[ebp], al
	mov	ecx, DWORD PTR $T241866[ebp]
	mov	edx, DWORD PTR [ecx+4024]
	mov	DWORD PTR $T241892[ebp], edx
	movzx	eax, BYTE PTR $T241888[ebp]
	test	eax, eax
	je	SHORT $LN36@plotXY
	cmp	DWORD PTR _iPlotY$[ebp], 0
	jge	SHORT $LN35@plotXY
	mov	eax, DWORD PTR _iPlotY$[ebp]
	cdq
	idiv	DWORD PTR $T241892[ebp]
	add	edx, DWORD PTR $T241892[ebp]
	mov	DWORD PTR _iMapY$241967[ebp], edx
	jmp	SHORT $LN37@plotXY
	jmp	SHORT $LN36@plotXY
$LN35@plotXY:
	mov	ecx, DWORD PTR _iPlotY$[ebp]
	cmp	ecx, DWORD PTR $T241892[ebp]
	jl	SHORT $LN36@plotXY
	mov	eax, DWORD PTR _iPlotY$[ebp]
	cdq
	idiv	DWORD PTR $T241892[ebp]
	mov	DWORD PTR _iMapY$241967[ebp], edx
	jmp	SHORT $LN37@plotXY
$LN36@plotXY:
	mov	edx, DWORD PTR _iPlotY$[ebp]
	mov	DWORD PTR _iMapY$241967[ebp], edx
$LN37@plotXY:
	cmp	DWORD PTR _iMapX$241966[ebp], 0
	jl	SHORT $LN41@plotXY
	mov	eax, DWORD PTR $T241866[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T241906[ebp], ecx
	mov	edx, DWORD PTR _iMapX$241966[ebp]
	cmp	edx, DWORD PTR $T241906[ebp]
	jge	SHORT $LN41@plotXY
	cmp	DWORD PTR _iMapY$241967[ebp], 0
	jl	SHORT $LN41@plotXY
	mov	eax, DWORD PTR $T241866[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T241910[ebp], ecx
	mov	edx, DWORD PTR _iMapY$241967[ebp]
	cmp	edx, DWORD PTR $T241910[ebp]
	jge	SHORT $LN41@plotXY
	mov	DWORD PTR tv163[ebp], 1
	jmp	SHORT $LN39@plotXY
$LN41@plotXY:
	mov	DWORD PTR tv163[ebp], 0
$LN39@plotXY:
	cmp	DWORD PTR tv163[ebp], 0
	je	SHORT $LN17@plotXY
	mov	eax, DWORD PTR $T241866[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T241923[ebp], ecx
	mov	edx, DWORD PTR _iMapY$241967[ebp]
	imul	edx, DWORD PTR $T241923[ebp]
	add	edx, DWORD PTR _iMapX$241966[ebp]
	imul	edx, 484				; 000001e4H
	mov	eax, DWORD PTR $T241866[ebp]
	add	edx, DWORD PTR [eax+4068]
	mov	DWORD PTR tv148[ebp], edx
	jmp	SHORT $LN18@plotXY
$LN17@plotXY:
	mov	DWORD PTR tv148[ebp], 0
$LN18@plotXY:
	mov	ecx, DWORD PTR tv148[ebp]
	mov	DWORD PTR $T241968[ebp], ecx
$LN15@plotXY:
	mov	eax, DWORD PTR $T241968[ebp]

; 224  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?plotXY@@YAPAVCvPlot@@HHHH@Z ENDP			; plotXY
_TEXT	ENDS
PUBLIC	??_C@_0EC@MJAAPIEL@Finding?5random?5Resource?5for?5Mino@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	?getNumResources@CvArea@@QBEHW4ResourceTypes@@@Z:PROC ; CvArea::getNumResources
EXTRN	?GetRequiredCivilization@CvResourceInfo@@QBE?AW4CivilizationTypes@@XZ:PROC ; CvResourceInfo::GetRequiredCivilization
EXTRN	?getTechCityTrade@CvResourceInfo@@QBEHXZ:PROC	; CvResourceInfo::getTechCityTrade
EXTRN	?HasPolicy@CvPlayerPolicies@@QBE_NW4PolicyTypes@@@Z:PROC ; CvPlayerPolicies::HasPolicy
EXTRN	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ:PROC ; CvPlayer::GetPlayerPolicies
EXTRN	?getPolicyReveal@CvResourceInfo@@QBEHXZ:PROC	; CvResourceInfo::getPolicyReveal
EXTRN	?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z:PROC	; CvTeamTechs::HasTech
EXTRN	?getTechReveal@CvResourceInfo@@QBEHXZ:PROC	; CvResourceInfo::getTechReveal
EXTRN	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ:PROC ; CvResourceInfo::getResourceUsage
EXTRN	?getArea@CvMap@@QAEPAVCvArea@@H@Z:PROC		; CvMap::getArea
EXTRN	?getStartingPlot@CvPlayer@@QBEPAVCvPlot@@XZ:PROC ; CvPlayer::getStartingPlot
;	COMDAT ??_C@_0EC@MJAAPIEL@Finding?5random?5Resource?5for?5Mino@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0EC@MJAAPIEL@Finding?5random?5Resource?5for?5Mino@ DB 'Finding rand'
	DB	'om Resource for Minor to give out a quest to connect.', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetNearbyResourceForQuest@CvMinorCivAI@@QAE?AW4ResourceTypes@@W4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetNearbyResourceForQuest@CvMinorCivAI@@QAE?AW4ResourceTypes@@W4PlayerTypes@@@Z$0
__ehfuncinfo$?GetNearbyResourceForQuest@CvMinorCivAI@@QAE?AW4ResourceTypes@@W4PlayerTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetNearbyResourceForQuest@CvMinorCivAI@@QAE?AW4ResourceTypes@@W4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?GetNearbyResourceForQuest@CvMinorCivAI@@QAE?AW4ResourceTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -412						; size = 4
$T242054 = -396						; size = 4
$T242050 = -392						; size = 4
$T242034 = -380						; size = 4
$T242023 = -372						; size = 4
$T242019 = -368						; size = 4
$T242015 = -364						; size = 4
$T242011 = -360						; size = 4
$T242002 = -356						; size = 4
$T241998 = -352						; size = 4
$T241997 = -348						; size = 4
$T241993 = -344						; size = 4
$T241989 = -340						; size = 4
$T241977 = -336						; size = 4
$T241972 = -332						; size = 4
_iRevealPolicy$224935 = -328				; size = 4
_pkResourceInfo$224928 = -324				; size = 4
_iResourceLoop$224923 = -320				; size = 4
_veValidResources$224919 = -316				; size = 272
__$ArrayPad$ = -44					; size = 4
_iRandIndex$224944 = -40				; size = 4
_pPlayerArea$224917 = -36				; size = 4
_eConnectTech$224921 = -32				; size = 4
_eRevealTech$224920 = -28				; size = 4
_eResource$224922 = -24					; size = 4
_eBestResource$ = -20					; size = 4
_eTeam$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
?GetNearbyResourceForQuest@CvMinorCivAI@@QAE?AW4ResourceTypes@@W4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetNearbyResourceForQuest, COMDAT
; _this$ = ecx

; 4726 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetNearbyResourceForQuest@CvMinorCivAI@@QAE?AW4ResourceTypes@@W4PlayerTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 400				; 00000190H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 4727 : 	ResourceTypes eBestResource = NO_RESOURCE;

	mov	DWORD PTR _eBestResource$[ebp], -1

; 4728 : 
; 4729 : 	TeamTypes eTeam = GET_PLAYER(ePlayer).getTeam();

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T241977[ebp], eax
	mov	ecx, DWORD PTR $T241977[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR _eTeam$[ebp], eax

; 4730 : 
; 4731 : 	if(GET_PLAYER(ePlayer).getStartingPlot() != NULL)

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T241989[ebp], eax
	mov	ecx, DWORD PTR $T241989[ebp]
	call	?getStartingPlot@CvPlayer@@QBEPAVCvPlot@@XZ ; CvPlayer::getStartingPlot
	test	eax, eax
	je	$LN14@GetNearbyR

; 4732 : 	{
; 4733 : 		CvArea* pPlayerArea = GC.getMap().getArea(GET_PLAYER(ePlayer).getStartingPlot()->getArea());

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T241993[ebp], ecx
	mov	ecx, DWORD PTR $T241993[ebp]
	call	?getStartingPlot@CvPlayer@@QBEPAVCvPlot@@XZ ; CvPlayer::getStartingPlot
	mov	DWORD PTR $T241997[ebp], eax
	mov	edx, DWORD PTR $T241997[ebp]
	mov	eax, DWORD PTR [edx+356]
	mov	DWORD PTR $T241998[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T242002[ebp], ecx
	mov	edx, DWORD PTR $T241998[ebp]
	push	edx
	mov	ecx, DWORD PTR $T242002[ebp]
	call	?getArea@CvMap@@QAEPAVCvArea@@H@Z	; CvMap::getArea
	mov	DWORD PTR _pPlayerArea$224917[ebp], eax

; 4734 : 
; 4735 : 		FStaticVector<ResourceTypes, 64, true, c_eCiv5GameplayDLL, 0> veValidResources; // 64 resources should be way more than enough

	lea	ecx, DWORD PTR _veValidResources$224919[ebp]
	call	??0?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum ResourceTypes,64,1,297,0>::FStaticVector<enum ResourceTypes,64,1,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 4736 : 		TechTypes eRevealTech;
; 4737 : 		TechTypes eConnectTech;
; 4738 : 
; 4739 : 		// Loop through all Resources and see if they're useful
; 4740 : 		ResourceTypes eResource;
; 4741 : #ifdef AUI_WARNING_FIXES
; 4742 : 		for (uint iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)
; 4743 : #else
; 4744 : 		for(int iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)

	mov	DWORD PTR _iResourceLoop$224923[ebp], 0
	jmp	SHORT $LN13@GetNearbyR
$LN12@GetNearbyR:
	mov	eax, DWORD PTR _iResourceLoop$224923[ebp]
	add	eax, 1
	mov	DWORD PTR _iResourceLoop$224923[ebp], eax
$LN13@GetNearbyR:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	cmp	DWORD PTR _iResourceLoop$224923[ebp], eax
	jge	$LN11@GetNearbyR

; 4745 : #endif
; 4746 : 		{
; 4747 : 			eResource = (ResourceTypes) iResourceLoop;

	mov	ecx, DWORD PTR _iResourceLoop$224923[ebp]
	mov	DWORD PTR _eResource$224922[ebp], ecx

; 4748 : 
; 4749 : 			const CvResourceInfo* pkResourceInfo = GC.getResourceInfo(eResource);

	mov	edx, DWORD PTR _eResource$224922[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	DWORD PTR _pkResourceInfo$224928[ebp], eax

; 4750 : 			// Must not be a plain ol' bonus resource
; 4751 : 			if(pkResourceInfo == NULL || pkResourceInfo->getResourceUsage() == RESOURCEUSAGE_BONUS)

	cmp	DWORD PTR _pkResourceInfo$224928[ebp], 0
	je	SHORT $LN9@GetNearbyR
	mov	ecx, DWORD PTR _pkResourceInfo$224928[ebp]
	call	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ ; CvResourceInfo::getResourceUsage
	test	eax, eax
	jne	SHORT $LN10@GetNearbyR
$LN9@GetNearbyR:

; 4752 : 			{
; 4753 : 				continue;

	jmp	SHORT $LN12@GetNearbyR
$LN10@GetNearbyR:

; 4754 : 			}
; 4755 : 
; 4756 : 			// Minor can't already have this Resource
; 4757 : 			if(GetPlayer()->getNumResourceTotal(eResource, /*bIncludeImport*/ true) > 0)

	push	1
	mov	eax, DWORD PTR _eResource$224922[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNumResourceTotal@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceTotal
	test	eax, eax
	jle	SHORT $LN8@GetNearbyR

; 4758 : 			{
; 4759 : 				continue;

	jmp	SHORT $LN12@GetNearbyR
$LN8@GetNearbyR:

; 4760 : 			}
; 4761 : 
; 4762 : 			// Player can't already have this Resource
; 4763 : 			if(GET_PLAYER(ePlayer).getNumResourceTotal(eResource, /*bIncludeImport*/ true) > 0)

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242011[ebp], ecx
	push	1
	mov	edx, DWORD PTR _eResource$224922[ebp]
	push	edx
	mov	ecx, DWORD PTR $T242011[ebp]
	call	?getNumResourceTotal@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceTotal
	test	eax, eax
	jle	SHORT $LN7@GetNearbyR

; 4764 : 			{
; 4765 : 				continue;

	jmp	$LN12@GetNearbyR
$LN7@GetNearbyR:

; 4766 : 			}
; 4767 : 
; 4768 : 			// Player has to be able to see it
; 4769 : 			eRevealTech = (TechTypes) pkResourceInfo->getTechReveal();

	mov	ecx, DWORD PTR _pkResourceInfo$224928[ebp]
	call	?getTechReveal@CvResourceInfo@@QBEHXZ	; CvResourceInfo::getTechReveal
	mov	DWORD PTR _eRevealTech$224920[ebp], eax

; 4770 : 			if(!GET_TEAM(eTeam).GetTeamTechs()->HasTech(eRevealTech))

	mov	eax, DWORD PTR _eTeam$[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T242015[ebp], eax
	mov	ecx, DWORD PTR _eRevealTech$224920[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T242015[ebp]
	call	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ ; CvTeam::GetTeamTechs
	mov	ecx, eax
	call	?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z ; CvTeamTechs::HasTech
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN6@GetNearbyR

; 4771 : 			{
; 4772 : 				continue;

	jmp	$LN12@GetNearbyR
$LN6@GetNearbyR:

; 4773 : 			}
; 4774 : 			int iRevealPolicy = pkResourceInfo->getPolicyReveal();

	mov	ecx, DWORD PTR _pkResourceInfo$224928[ebp]
	call	?getPolicyReveal@CvResourceInfo@@QBEHXZ	; CvResourceInfo::getPolicyReveal
	mov	DWORD PTR _iRevealPolicy$224935[ebp], eax

; 4775 : 			if (iRevealPolicy != NO_POLICY && !(GET_PLAYER(ePlayer).GetPlayerPolicies()->HasPolicy((PolicyTypes)iRevealPolicy)))

	cmp	DWORD PTR _iRevealPolicy$224935[ebp], -1
	je	SHORT $LN5@GetNearbyR
	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242019[ebp], eax
	mov	ecx, DWORD PTR _iRevealPolicy$224935[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T242019[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?HasPolicy@CvPlayerPolicies@@QBE_NW4PolicyTypes@@@Z ; CvPlayerPolicies::HasPolicy
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN5@GetNearbyR

; 4776 : 			{
; 4777 : 				continue;

	jmp	$LN12@GetNearbyR
$LN5@GetNearbyR:

; 4778 : 			}
; 4779 : 
; 4780 : 			// Player has to be able to use it
; 4781 : 			eConnectTech = (TechTypes) pkResourceInfo->getTechCityTrade();

	mov	ecx, DWORD PTR _pkResourceInfo$224928[ebp]
	call	?getTechCityTrade@CvResourceInfo@@QBEHXZ ; CvResourceInfo::getTechCityTrade
	mov	DWORD PTR _eConnectTech$224921[ebp], eax

; 4782 : 			if(!GET_TEAM(eTeam).GetTeamTechs()->HasTech(eConnectTech))

	mov	eax, DWORD PTR _eTeam$[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T242023[ebp], eax
	mov	ecx, DWORD PTR _eConnectTech$224921[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T242023[ebp]
	call	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ ; CvTeam::GetTeamTechs
	mov	ecx, eax
	call	?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z ; CvTeamTechs::HasTech
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@GetNearbyR

; 4783 : 			{
; 4784 : 				continue;

	jmp	$LN12@GetNearbyR
$LN4@GetNearbyR:

; 4785 : 			}
; 4786 : 
; 4787 : #ifdef NQ_NO_UNIQUE_LUX_REQUESTS
; 4788 : 			// cannot be a resource unique to a civilization (i.e. Indonesian uniques)
; 4789 : 			if(pkResourceInfo->GetRequiredCivilization() != NULL && pkResourceInfo->GetRequiredCivilization() != NO_CIVILIZATION)

	mov	ecx, DWORD PTR _pkResourceInfo$224928[ebp]
	call	?GetRequiredCivilization@CvResourceInfo@@QBE?AW4CivilizationTypes@@XZ ; CvResourceInfo::GetRequiredCivilization
	test	eax, eax
	je	SHORT $LN3@GetNearbyR
	mov	ecx, DWORD PTR _pkResourceInfo$224928[ebp]
	call	?GetRequiredCivilization@CvResourceInfo@@QBE?AW4CivilizationTypes@@XZ ; CvResourceInfo::GetRequiredCivilization
	cmp	eax, -1
	je	SHORT $LN3@GetNearbyR

; 4790 : 			{
; 4791 : 				continue;

	jmp	$LN12@GetNearbyR
$LN3@GetNearbyR:

; 4792 : 			}
; 4793 : #endif
; 4794 : 			// Must be this Resource on the player's area
; 4795 : 			if(pPlayerArea->getNumResources(eResource) == 0)

	mov	eax, DWORD PTR _eResource$224922[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayerArea$224917[ebp]
	call	?getNumResources@CvArea@@QBEHW4ResourceTypes@@@Z ; CvArea::getNumResources
	test	eax, eax
	jne	SHORT $LN2@GetNearbyR

; 4796 : 			{
; 4797 : 				continue;

	jmp	$LN12@GetNearbyR
$LN2@GetNearbyR:

; 4798 : 			}
; 4799 : 
; 4800 : 			veValidResources.push_back(eResource);

	lea	ecx, DWORD PTR _eResource$224922[ebp]
	push	ecx
	lea	ecx, DWORD PTR _veValidResources$224919[ebp]
	call	?push_back@?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAEIABW4ResourceTypes@@@Z ; FStaticVector<enum ResourceTypes,64,1,297,0>::push_back

; 4801 : 		}

	jmp	$LN12@GetNearbyR
$LN11@GetNearbyR:

; 4802 : 
; 4803 : 		// Didn't find any valid Resources
; 4804 : 		if(veValidResources.size() == 0)

	mov	edx, DWORD PTR _veValidResources$224919[ebp+4]
	mov	DWORD PTR $T242034[ebp], edx
	cmp	DWORD PTR $T242034[ebp], 0
	jne	SHORT $LN1@GetNearbyR

; 4805 : 		{
; 4806 : 			return NO_RESOURCE;

	mov	DWORD PTR $T241972[ebp], -1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _veValidResources$224919[ebp]
	call	??1?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum ResourceTypes,64,1,297,0>::~FStaticVector<enum ResourceTypes,64,1,297,0>
	mov	eax, DWORD PTR $T241972[ebp]
	jmp	SHORT $LN15@GetNearbyR
$LN1@GetNearbyR:

; 4807 : 		}
; 4808 : 
; 4809 : 		int iRandIndex = GC.getGame().getJonRandNum(veValidResources.size(), "Finding random Resource for Minor to give out a quest to connect.");

	mov	eax, DWORD PTR _veValidResources$224919[ebp+4]
	mov	DWORD PTR $T242050[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242054[ebp], ecx
	push	OFFSET ??_C@_0EC@MJAAPIEL@Finding?5random?5Resource?5for?5Mino@
	mov	edx, DWORD PTR $T242050[ebp]
	push	edx
	mov	ecx, DWORD PTR $T242054[ebp]
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	mov	DWORD PTR _iRandIndex$224944[ebp], eax

; 4810 : 		eBestResource = veValidResources[iRandIndex];

	mov	eax, DWORD PTR _iRandIndex$224944[ebp]
	mov	ecx, DWORD PTR _veValidResources$224919[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _eBestResource$[ebp], edx

; 4811 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _veValidResources$224919[ebp]
	call	??1?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum ResourceTypes,64,1,297,0>::~FStaticVector<enum ResourceTypes,64,1,297,0>
$LN14@GetNearbyR:

; 4812 : 
; 4813 : 	return eBestResource;

	mov	eax, DWORD PTR _eBestResource$[ebp]
$LN15@GetNearbyR:

; 4814 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetNearbyResourceForQuest@CvMinorCivAI@@QAE?AW4ResourceTypes@@W4PlayerTypes@@@Z$0:
	lea	ecx, DWORD PTR _veValidResources$224919[ebp]
	jmp	??1?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum ResourceTypes,64,1,297,0>::~FStaticVector<enum ResourceTypes,64,1,297,0>
__ehhandler$?GetNearbyResourceForQuest@CvMinorCivAI@@QAE?AW4ResourceTypes@@W4PlayerTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-404]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetNearbyResourceForQuest@CvMinorCivAI@@QAE?AW4ResourceTypes@@W4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetNearbyResourceForQuest@CvMinorCivAI@@QAE?AW4ResourceTypes@@W4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetNearbyResourceForQuest
PUBLIC	??_C@_0EC@OMDFKMMK@Finding?5random?5Wonder?5for?5Minor?5@ ; `string'
PUBLIC	??1?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum BuildingTypes,50,1,297,0>::~FStaticVector<enum BuildingTypes,50,1,297,0>
PUBLIC	?push_back@?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAEIABW4BuildingTypes@@@Z ; FStaticVector<enum BuildingTypes,50,1,297,0>::push_back
PUBLIC	??0?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum BuildingTypes,50,1,297,0>::FStaticVector<enum BuildingTypes,50,1,297,0>
PUBLIC	__$ArrayPad$
EXTRN	?getProductionNeeded@CvCity@@QBEHW4BuildingTypes@@@Z:PROC ; CvCity::getProductionNeeded
EXTRN	?GetBuildingProduction@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetBuildingProduction
EXTRN	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ:PROC ; CvCity::GetCityBuildings
EXTRN	?canConstruct@CvPlayer@@QBE_NW4BuildingTypes@@_N11PAVCvString@@@Z:PROC ; CvPlayer::canConstruct
EXTRN	?isWorldWonderClass@@YA_NABVCvBuildingClassInfo@@@Z:PROC ; isWorldWonderClass
EXTRN	?GetBuildingClassInfo@CvBuildingEntry@@QBEABVCvBuildingClassInfo@@XZ:PROC ; CvBuildingEntry::GetBuildingClassInfo
EXTRN	?getNumBuildingInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumBuildingInfos
;	COMDAT ??_C@_0EC@OMDFKMMK@Finding?5random?5Wonder?5for?5Minor?5@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0EC@OMDFKMMK@Finding?5random?5Wonder?5for?5Minor?5@ DB 'Finding ran'
	DB	'dom Wonder for Minor to give out a quest to construct.', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetBestWonderForQuest@CvMinorCivAI@@QAE?AW4BuildingTypes@@W4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetBestWonderForQuest@CvMinorCivAI@@QAE?AW4BuildingTypes@@W4PlayerTypes@@@Z$0
__ehfuncinfo$?GetBestWonderForQuest@CvMinorCivAI@@QAE?AW4BuildingTypes@@W4PlayerTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetBestWonderForQuest@CvMinorCivAI@@QAE?AW4BuildingTypes@@W4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?GetBestWonderForQuest@CvMinorCivAI@@QAE?AW4BuildingTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -344						; size = 4
$T242147 = -328						; size = 4
$T242143 = -324						; size = 4
$T242127 = -312						; size = 4
$T242116 = -304						; size = 4
$T242112 = -300						; size = 4
$T242108 = -296						; size = 4
$T242095 = -292						; size = 4
$T242094 = -288						; size = 4
_eBuilding$225033 = -284				; size = 4
_pkBuildingInfo$225035 = -280				; size = 4
_iBuildingLoop$225029 = -276				; size = 4
_eWorldPlayer$ = -272					; size = 4
_iWorldPlayerLoop$ = -268				; size = 4
_iRandIndex$ = -264					; size = 4
_veValidBuildings$ = -260				; size = 216
__$ArrayPad$ = -40					; size = 4
_iCityLoop$ = -36					; size = 4
_iWonderProgress$ = -32					; size = 4
_bFoundWonderTooFarAlong$ = -25				; size = 1
_eBestWonder$ = -24					; size = 4
_pLoopCity$ = -20					; size = 4
_iCompletionThreshold$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
?GetBestWonderForQuest@CvMinorCivAI@@QAE?AW4BuildingTypes@@W4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetBestWonderForQuest, COMDAT
; _this$ = ecx

; 4818 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetBestWonderForQuest@CvMinorCivAI@@QAE?AW4BuildingTypes@@W4PlayerTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 332				; 0000014cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 4819 : 	BuildingTypes eBestWonder;
; 4820 : 
; 4821 : 	FStaticVector<BuildingTypes, 50, true, c_eCiv5GameplayDLL, 0> veValidBuildings; // 50 wonders should be overkill

	lea	ecx, DWORD PTR _veValidBuildings$[ebp]
	call	??0?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum BuildingTypes,50,1,297,0>::FStaticVector<enum BuildingTypes,50,1,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 4822 : 
; 4823 : 	int iWorldPlayerLoop;
; 4824 : 	PlayerTypes eWorldPlayer;
; 4825 : 	CvCity* pLoopCity;
; 4826 : 	int iCityLoop;
; 4827 : 	int iWonderProgress;
; 4828 : 	int iCompletionThreshold = /*25*/ GC.getMINOR_CIV_QUEST_WONDER_COMPLETION_THRESHOLD();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3236
	mov	DWORD PTR _iCompletionThreshold$[ebp], eax

; 4829 : 	bool bFoundWonderTooFarAlong;
; 4830 : 
; 4831 : 	// Loop through all Buildings and see if they're useful
; 4832 : #ifdef AUI_WARNING_FIXES
; 4833 : 	for (uint iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)
; 4834 : #else
; 4835 : 	for(int iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)

	mov	DWORD PTR _iBuildingLoop$225029[ebp], 0
	jmp	SHORT $LN16@GetBestWon
$LN15@GetBestWon:
	mov	ecx, DWORD PTR _iBuildingLoop$225029[ebp]
	add	ecx, 1
	mov	DWORD PTR _iBuildingLoop$225029[ebp], ecx
$LN16@GetBestWon:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	cmp	DWORD PTR _iBuildingLoop$225029[ebp], eax
	jge	$LN14@GetBestWon

; 4836 : #endif
; 4837 : 	{
; 4838 : 		const BuildingTypes eBuilding = static_cast<BuildingTypes>(iBuildingLoop);

	mov	edx, DWORD PTR _iBuildingLoop$225029[ebp]
	mov	DWORD PTR _eBuilding$225033[ebp], edx

; 4839 : 		CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);

	mov	eax, DWORD PTR _eBuilding$225033[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingInfo$225035[ebp], eax

; 4840 : 
; 4841 : 		//Skip if NULL
; 4842 : 		if(pkBuildingInfo == NULL)

	cmp	DWORD PTR _pkBuildingInfo$225035[ebp], 0
	jne	SHORT $LN13@GetBestWon

; 4843 : 			continue;

	jmp	SHORT $LN15@GetBestWon
$LN13@GetBestWon:

; 4844 : 
; 4845 : 		bFoundWonderTooFarAlong = false;

	mov	BYTE PTR _bFoundWonderTooFarAlong$[ebp], 0

; 4846 : 
; 4847 : 		// Must be a wonder
; 4848 : 		if(!isWorldWonderClass(pkBuildingInfo->GetBuildingClassInfo()))

	mov	ecx, DWORD PTR _pkBuildingInfo$225035[ebp]
	call	?GetBuildingClassInfo@CvBuildingEntry@@QBEABVCvBuildingClassInfo@@XZ ; CvBuildingEntry::GetBuildingClassInfo
	push	eax
	call	?isWorldWonderClass@@YA_NABVCvBuildingClassInfo@@@Z ; isWorldWonderClass
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN12@GetBestWon

; 4849 : 		{
; 4850 : 			continue;

	jmp	SHORT $LN15@GetBestWon
$LN12@GetBestWon:

; 4851 : 		}
; 4852 : 
; 4853 : 		// Must be able to build it
; 4854 : 		if(!GET_PLAYER(ePlayer).canConstruct(eBuilding))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242108[ebp], edx
	push	0
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _eBuilding$225033[ebp]
	push	eax
	mov	ecx, DWORD PTR $T242108[ebp]
	call	?canConstruct@CvPlayer@@QBE_NW4BuildingTypes@@_N11PAVCvString@@@Z ; CvPlayer::canConstruct
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN11@GetBestWon

; 4855 : 		{
; 4856 : 			continue;

	jmp	$LN15@GetBestWon
$LN11@GetBestWon:

; 4857 : 		}
; 4858 : 
; 4859 : 		// Someone CAN be building this wonder right now, but they can't be more than a certain % of the way done (25% by default)
; 4860 : 		for(iWorldPlayerLoop = 0; iWorldPlayerLoop < MAX_MAJOR_CIVS; iWorldPlayerLoop++)

	mov	DWORD PTR _iWorldPlayerLoop$[ebp], 0
	jmp	SHORT $LN10@GetBestWon
$LN9@GetBestWon:
	mov	edx, DWORD PTR _iWorldPlayerLoop$[ebp]
	add	edx, 1
	mov	DWORD PTR _iWorldPlayerLoop$[ebp], edx
$LN10@GetBestWon:
	cmp	DWORD PTR _iWorldPlayerLoop$[ebp], 22	; 00000016H
	jge	$LN8@GetBestWon

; 4861 : 		{
; 4862 : 			eWorldPlayer = (PlayerTypes) iWorldPlayerLoop;

	mov	eax, DWORD PTR _iWorldPlayerLoop$[ebp]
	mov	DWORD PTR _eWorldPlayer$[ebp], eax

; 4863 : 
; 4864 : 			for(pLoopCity = GET_PLAYER(eWorldPlayer).firstCity(&iCityLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER(eWorldPlayer).nextCity(&iCityLoop))

	mov	ecx, DWORD PTR _eWorldPlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242112[ebp], ecx
	push	0
	lea	edx, DWORD PTR _iCityLoop$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T242112[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
	jmp	SHORT $LN7@GetBestWon
$LN6@GetBestWon:
	mov	eax, DWORD PTR _eWorldPlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242116[ebp], eax
	push	0
	lea	ecx, DWORD PTR _iCityLoop$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T242116[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
$LN7@GetBestWon:
	cmp	DWORD PTR _pLoopCity$[ebp], 0
	je	SHORT $LN5@GetBestWon

; 4865 : 			{
; 4866 : 				iWonderProgress = pLoopCity->GetCityBuildings()->GetBuildingProduction(eBuilding);

	mov	edx, DWORD PTR _eBuilding$225033[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetBuildingProduction@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetBuildingProduction
	mov	DWORD PTR _iWonderProgress$[ebp], eax

; 4867 : 
; 4868 : 				if(iWonderProgress * 100 / pLoopCity->getProductionNeeded(eBuilding) >= iCompletionThreshold)

	mov	esi, DWORD PTR _iWonderProgress$[ebp]
	imul	esi, 100				; 00000064H
	mov	eax, DWORD PTR _eBuilding$225033[ebp]
	push	eax
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?getProductionNeeded@CvCity@@QBEHW4BuildingTypes@@@Z ; CvCity::getProductionNeeded
	mov	ecx, eax
	mov	eax, esi
	cdq
	idiv	ecx
	cmp	eax, DWORD PTR _iCompletionThreshold$[ebp]
	jl	SHORT $LN4@GetBestWon

; 4869 : 				{
; 4870 : 					bFoundWonderTooFarAlong = true;

	mov	BYTE PTR _bFoundWonderTooFarAlong$[ebp], 1

; 4871 : 					break;

	jmp	SHORT $LN5@GetBestWon
$LN4@GetBestWon:

; 4872 : 				}
; 4873 : 			}

	jmp	SHORT $LN6@GetBestWon
$LN5@GetBestWon:

; 4874 : 			if(bFoundWonderTooFarAlong)

	movzx	edx, BYTE PTR _bFoundWonderTooFarAlong$[ebp]
	test	edx, edx
	je	SHORT $LN3@GetBestWon

; 4875 : 			{
; 4876 : 				break;

	jmp	SHORT $LN8@GetBestWon
$LN3@GetBestWon:

; 4877 : 			}
; 4878 : 		}

	jmp	$LN9@GetBestWon
$LN8@GetBestWon:

; 4879 : 		if(bFoundWonderTooFarAlong)

	movzx	eax, BYTE PTR _bFoundWonderTooFarAlong$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetBestWon

; 4880 : 		{
; 4881 : 			continue;

	jmp	$LN15@GetBestWon
$LN2@GetBestWon:

; 4882 : 		}
; 4883 : 
; 4884 : 		veValidBuildings.push_back(eBuilding);

	lea	ecx, DWORD PTR _eBuilding$225033[ebp]
	push	ecx
	lea	ecx, DWORD PTR _veValidBuildings$[ebp]
	call	?push_back@?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAEIABW4BuildingTypes@@@Z ; FStaticVector<enum BuildingTypes,50,1,297,0>::push_back

; 4885 : 	}

	jmp	$LN15@GetBestWon
$LN14@GetBestWon:

; 4886 : 
; 4887 : 	// Didn't find any valid Wonders
; 4888 : 	if(veValidBuildings.size() == 0)

	mov	edx, DWORD PTR _veValidBuildings$[ebp+4]
	mov	DWORD PTR $T242127[ebp], edx
	cmp	DWORD PTR $T242127[ebp], 0
	jne	SHORT $LN1@GetBestWon

; 4889 : 	{
; 4890 : 		return NO_BUILDING;

	mov	DWORD PTR $T242094[ebp], -1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _veValidBuildings$[ebp]
	call	??1?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum BuildingTypes,50,1,297,0>::~FStaticVector<enum BuildingTypes,50,1,297,0>
	mov	eax, DWORD PTR $T242094[ebp]
	jmp	SHORT $LN17@GetBestWon
$LN1@GetBestWon:

; 4891 : 	}
; 4892 : 
; 4893 : 	int iRandIndex = GC.getGame().getJonRandNum(veValidBuildings.size(), "Finding random Wonder for Minor to give out a quest to construct.");

	mov	eax, DWORD PTR _veValidBuildings$[ebp+4]
	mov	DWORD PTR $T242143[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242147[ebp], ecx
	push	OFFSET ??_C@_0EC@OMDFKMMK@Finding?5random?5Wonder?5for?5Minor?5@
	mov	edx, DWORD PTR $T242143[ebp]
	push	edx
	mov	ecx, DWORD PTR $T242147[ebp]
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	mov	DWORD PTR _iRandIndex$[ebp], eax

; 4894 : 	eBestWonder = veValidBuildings[iRandIndex];

	mov	eax, DWORD PTR _iRandIndex$[ebp]
	mov	ecx, DWORD PTR _veValidBuildings$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _eBestWonder$[ebp], edx

; 4895 : 
; 4896 : 	return eBestWonder;

	mov	eax, DWORD PTR _eBestWonder$[ebp]
	mov	DWORD PTR $T242095[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _veValidBuildings$[ebp]
	call	??1?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum BuildingTypes,50,1,297,0>::~FStaticVector<enum BuildingTypes,50,1,297,0>
	mov	eax, DWORD PTR $T242095[ebp]
$LN17@GetBestWon:

; 4897 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetBestWonderForQuest@CvMinorCivAI@@QAE?AW4BuildingTypes@@W4PlayerTypes@@@Z$0:
	lea	ecx, DWORD PTR _veValidBuildings$[ebp]
	jmp	??1?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum BuildingTypes,50,1,297,0>::~FStaticVector<enum BuildingTypes,50,1,297,0>
__ehhandler$?GetBestWonderForQuest@CvMinorCivAI@@QAE?AW4BuildingTypes@@W4PlayerTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-340]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetBestWonderForQuest@CvMinorCivAI@@QAE?AW4BuildingTypes@@W4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetBestWonderForQuest@CvMinorCivAI@@QAE?AW4BuildingTypes@@W4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetBestWonderForQuest
PUBLIC	??_C@_0EE@DOFODEIK@Finding?5random?5Great?5Person?5for?5@ ; `string'
PUBLIC	??1?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum UnitTypes,8,1,297,0>::~FStaticVector<enum UnitTypes,8,1,297,0>
PUBLIC	?push_back@?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAEIABW4UnitTypes@@@Z ; FStaticVector<enum UnitTypes,8,1,297,0>::push_back
PUBLIC	??0?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum UnitTypes,8,1,297,0>::FStaticVector<enum UnitTypes,8,1,297,0>
PUBLIC	??_C@_0BD@NNACGNOP@SPECIALUNIT_PEOPLE?$AA@	; `string'
PUBLIC	__$ArrayPad$
EXTRN	?GetBaseBeakersTurnsToCount@CvUnitEntry@@QBEHXZ:PROC ; CvUnitEntry::GetBaseBeakersTurnsToCount
EXTRN	?IsFoundReligion@CvUnitEntry@@QBE_NXZ:PROC	; CvUnitEntry::IsFoundReligion
EXTRN	?canTrain@CvPlayer@@QBE_NW4UnitTypes@@_N111PAVCvString@@@Z:PROC ; CvPlayer::canTrain
EXTRN	?GetSpecialUnitType@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetSpecialUnitType
EXTRN	?GetProductionCost@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetProductionCost
EXTRN	?getNumUnitInfos@CvGlobals@@QAEHXZ:PROC		; CvGlobals::getNumUnitInfos
EXTRN	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z:PROC ; CvGlobals::getInfoTypeForString
;	COMDAT ??_C@_0EE@DOFODEIK@Finding?5random?5Great?5Person?5for?5@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0EE@DOFODEIK@Finding?5random?5Great?5Person?5for?5@ DB 'Finding ran'
	DB	'dom Great Person for Minor to give out a quest to spawn.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NNACGNOP@SPECIALUNIT_PEOPLE?$AA@
CONST	SEGMENT
??_C@_0BD@NNACGNOP@SPECIALUNIT_PEOPLE?$AA@ DB 'SPECIALUNIT_PEOPLE', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetBestGreatPersonForQuest@CvMinorCivAI@@QAE?AW4UnitTypes@@W4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetBestGreatPersonForQuest@CvMinorCivAI@@QAE?AW4UnitTypes@@W4PlayerTypes@@@Z$0
__ehfuncinfo$?GetBestGreatPersonForQuest@CvMinorCivAI@@QAE?AW4UnitTypes@@W4PlayerTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetBestGreatPersonForQuest@CvMinorCivAI@@QAE?AW4UnitTypes@@W4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?GetBestGreatPersonForQuest@CvMinorCivAI@@QAE?AW4UnitTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -168						; size = 4
$T242245 = -152						; size = 4
$T242241 = -148						; size = 4
$T242225 = -136						; size = 4
$T242214 = -128						; size = 4
$T242210 = -124						; size = 4
$T242206 = -120						; size = 4
$T242202 = -116						; size = 4
$T242198 = -112						; size = 4
$T242188 = -108						; size = 4
$T242187 = -104						; size = 4
_pLoopUnit$225227 = -100				; size = 4
_eUnit$225214 = -96					; size = 4
_bAlreadyHasUnit$225225 = -89				; size = 1
_pkUnitInfo$225216 = -88				; size = 4
_iLoop$225226 = -84					; size = 4
_iUnitLoop$225210 = -80					; size = 4
_eSpecialUnitGreatPerson$ = -76				; size = 4
_iRandIndex$ = -72					; size = 4
_eBestUnit$ = -68					; size = 4
_veValidUnits$ = -64					; size = 48
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
?GetBestGreatPersonForQuest@CvMinorCivAI@@QAE?AW4UnitTypes@@W4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetBestGreatPersonForQuest, COMDAT
; _this$ = ecx

; 4902 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetBestGreatPersonForQuest@CvMinorCivAI@@QAE?AW4UnitTypes@@W4PlayerTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 156				; 0000009cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 4903 : 	UnitTypes eBestUnit = NO_UNIT;

	mov	DWORD PTR _eBestUnit$[ebp], -1

; 4904 : 
; 4905 : 	SpecialUnitTypes eSpecialUnitGreatPerson = (SpecialUnitTypes) GC.getInfoTypeForString("SPECIALUNIT_PEOPLE");

	push	0
	push	OFFSET ??_C@_0BD@NNACGNOP@SPECIALUNIT_PEOPLE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eSpecialUnitGreatPerson$[ebp], eax

; 4906 : 
; 4907 : 	FStaticVector<UnitTypes, 8, true, c_eCiv5GameplayDLL, 0> veValidUnits;

	lea	ecx, DWORD PTR _veValidUnits$[ebp]
	call	??0?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum UnitTypes,8,1,297,0>::FStaticVector<enum UnitTypes,8,1,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 4908 : 
; 4909 : 	// Loop through all Units and see if they're useful
; 4910 : #ifdef AUI_WARNING_FIXES
; 4911 : 	for (uint iUnitLoop = 0; iUnitLoop < GC.getNumUnitInfos(); iUnitLoop++)
; 4912 : #else
; 4913 : 	for(int iUnitLoop = 0; iUnitLoop < GC.getNumUnitInfos(); iUnitLoop++)

	mov	DWORD PTR _iUnitLoop$225210[ebp], 0
	jmp	SHORT $LN17@GetBestGre
$LN16@GetBestGre:
	mov	eax, DWORD PTR _iUnitLoop$225210[ebp]
	add	eax, 1
	mov	DWORD PTR _iUnitLoop$225210[ebp], eax
$LN17@GetBestGre:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumUnitInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitInfos
	cmp	DWORD PTR _iUnitLoop$225210[ebp], eax
	jge	$LN15@GetBestGre

; 4914 : #endif
; 4915 : 	{
; 4916 : 		const UnitTypes eUnit = static_cast<UnitTypes>(iUnitLoop);

	mov	ecx, DWORD PTR _iUnitLoop$225210[ebp]
	mov	DWORD PTR _eUnit$225214[ebp], ecx

; 4917 : 		CvUnitEntry* pkUnitInfo = GC.getUnitInfo(eUnit);

	mov	edx, DWORD PTR _eUnit$225214[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	DWORD PTR _pkUnitInfo$225216[ebp], eax

; 4918 : 
; 4919 : 		if(pkUnitInfo == NULL)

	cmp	DWORD PTR _pkUnitInfo$225216[ebp], 0
	jne	SHORT $LN14@GetBestGre

; 4920 : 			continue;

	jmp	SHORT $LN16@GetBestGre
$LN14@GetBestGre:

; 4921 : 
; 4922 : 		// Can't be able to train it
; 4923 : 		if(pkUnitInfo->GetProductionCost() != -1)

	mov	ecx, DWORD PTR _pkUnitInfo$225216[ebp]
	call	?GetProductionCost@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetProductionCost
	cmp	eax, -1
	je	SHORT $LN13@GetBestGre

; 4924 : 		{
; 4925 : 			continue;

	jmp	SHORT $LN16@GetBestGre
$LN13@GetBestGre:

; 4926 : 		}
; 4927 : 
; 4928 : 		// Must be a Great Person (defined in SpecialUnitType in Unit XML)
; 4929 : 		if(pkUnitInfo->GetSpecialUnitType() != eSpecialUnitGreatPerson)

	mov	ecx, DWORD PTR _pkUnitInfo$225216[ebp]
	call	?GetSpecialUnitType@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetSpecialUnitType
	cmp	eax, DWORD PTR _eSpecialUnitGreatPerson$[ebp]
	je	SHORT $LN12@GetBestGre

; 4930 : 		{
; 4931 : 			continue;

	jmp	SHORT $LN16@GetBestGre
$LN12@GetBestGre:

; 4932 : 		}
; 4933 : 
; 4934 : 		// Must be a Great Person for this player's civ
; 4935 : 		if(!GET_PLAYER(ePlayer).canTrain(eUnit, false /*bContinue*/, false /*bTestVisible*/, true /*bIgnoreCost*/))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242198[ebp], eax
	push	0
	push	0
	push	1
	push	0
	push	0
	mov	ecx, DWORD PTR _eUnit$225214[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T242198[ebp]
	call	?canTrain@CvPlayer@@QBE_NW4UnitTypes@@_N111PAVCvString@@@Z ; CvPlayer::canTrain
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN11@GetBestGre

; 4936 : 		{
; 4937 : 			continue;

	jmp	$LN16@GetBestGre
$LN11@GetBestGre:

; 4938 : 		}
; 4939 : 
; 4940 : 		// Must be a Great Person that can be spawned in the current game
; 4941 : 		if(GC.getGame().isOption(GAMEOPTION_NO_RELIGION))

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242202[ebp], eax
	push	21					; 00000015H
	mov	ecx, DWORD PTR $T242202[ebp]
	call	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z ; CvGame::isOption
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@GetBestGre

; 4942 : 		{
; 4943 : 			if(pkUnitInfo->IsFoundReligion())

	mov	ecx, DWORD PTR _pkUnitInfo$225216[ebp]
	call	?IsFoundReligion@CvUnitEntry@@QBE_NXZ	; CvUnitEntry::IsFoundReligion
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN10@GetBestGre

; 4944 : 			{
; 4945 : 				continue;

	jmp	$LN16@GetBestGre
$LN10@GetBestGre:

; 4946 : 			}
; 4947 : 		}
; 4948 : 		if(GC.getGame().isOption(GAMEOPTION_NO_SCIENCE))

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242206[ebp], eax
	push	17					; 00000011H
	mov	ecx, DWORD PTR $T242206[ebp]
	call	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z ; CvGame::isOption
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN8@GetBestGre

; 4949 : 		{
; 4950 : 			if(pkUnitInfo->GetBaseBeakersTurnsToCount() > 0)

	mov	ecx, DWORD PTR _pkUnitInfo$225216[ebp]
	call	?GetBaseBeakersTurnsToCount@CvUnitEntry@@QBEHXZ ; CvUnitEntry::GetBaseBeakersTurnsToCount
	test	eax, eax
	jle	SHORT $LN8@GetBestGre

; 4951 : 			{
; 4952 : 				continue;

	jmp	$LN16@GetBestGre
$LN8@GetBestGre:

; 4953 : 			}
; 4954 : 		}
; 4955 : 
; 4956 : 		bool bAlreadyHasUnit = false;

	mov	BYTE PTR _bAlreadyHasUnit$225225[ebp], 0

; 4957 : 
; 4958 : 		// Player can't already have this Unit
; 4959 : 		int iLoop;
; 4960 : 		for(CvUnit* pLoopUnit = GET_PLAYER(ePlayer).firstUnit(&iLoop); NULL != pLoopUnit; pLoopUnit = GET_PLAYER(ePlayer).nextUnit(&iLoop))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242210[ebp], edx
	push	0
	lea	eax, DWORD PTR _iLoop$225226[ebp]
	push	eax
	mov	ecx, DWORD PTR $T242210[ebp]
	call	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::firstUnit
	mov	DWORD PTR _pLoopUnit$225227[ebp], eax
	jmp	SHORT $LN6@GetBestGre
$LN5@GetBestGre:
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242214[ebp], ecx
	push	0
	lea	edx, DWORD PTR _iLoop$225226[ebp]
	push	edx
	mov	ecx, DWORD PTR $T242214[ebp]
	call	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::nextUnit
	mov	DWORD PTR _pLoopUnit$225227[ebp], eax
$LN6@GetBestGre:
	cmp	DWORD PTR _pLoopUnit$225227[ebp], 0
	je	SHORT $LN4@GetBestGre

; 4961 : 		{
; 4962 : 			if(pLoopUnit->getUnitType() == eUnit)

	mov	ecx, DWORD PTR _pLoopUnit$225227[ebp]
	call	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ ; CvUnit::getUnitType
	cmp	eax, DWORD PTR _eUnit$225214[ebp]
	jne	SHORT $LN3@GetBestGre

; 4963 : 			{
; 4964 : 				bAlreadyHasUnit = true;

	mov	BYTE PTR _bAlreadyHasUnit$225225[ebp], 1

; 4965 : 				break;

	jmp	SHORT $LN4@GetBestGre
$LN3@GetBestGre:

; 4966 : 			}
; 4967 : 		}

	jmp	SHORT $LN5@GetBestGre
$LN4@GetBestGre:

; 4968 : 		if(bAlreadyHasUnit)

	movzx	eax, BYTE PTR _bAlreadyHasUnit$225225[ebp]
	test	eax, eax
	je	SHORT $LN2@GetBestGre

; 4969 : 		{
; 4970 : 			continue;

	jmp	$LN16@GetBestGre
$LN2@GetBestGre:

; 4971 : 		}
; 4972 : 
; 4973 : 		veValidUnits.push_back(eUnit);

	lea	ecx, DWORD PTR _eUnit$225214[ebp]
	push	ecx
	lea	ecx, DWORD PTR _veValidUnits$[ebp]
	call	?push_back@?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAEIABW4UnitTypes@@@Z ; FStaticVector<enum UnitTypes,8,1,297,0>::push_back

; 4974 : 	}

	jmp	$LN16@GetBestGre
$LN15@GetBestGre:

; 4975 : 
; 4976 : 	// Didn't find any valid Units
; 4977 : 	if(veValidUnits.size() == 0)

	mov	edx, DWORD PTR _veValidUnits$[ebp+4]
	mov	DWORD PTR $T242225[ebp], edx
	cmp	DWORD PTR $T242225[ebp], 0
	jne	SHORT $LN1@GetBestGre

; 4978 : 	{
; 4979 : 		return NO_UNIT;

	mov	DWORD PTR $T242187[ebp], -1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _veValidUnits$[ebp]
	call	??1?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum UnitTypes,8,1,297,0>::~FStaticVector<enum UnitTypes,8,1,297,0>
	mov	eax, DWORD PTR $T242187[ebp]
	jmp	SHORT $LN18@GetBestGre
$LN1@GetBestGre:

; 4980 : 	}
; 4981 : 
; 4982 : 	int iRandIndex = GC.getGame().getJonRandNum(veValidUnits.size(), "Finding random Great Person for Minor to give out a quest to spawn.");

	mov	eax, DWORD PTR _veValidUnits$[ebp+4]
	mov	DWORD PTR $T242241[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242245[ebp], ecx
	push	OFFSET ??_C@_0EE@DOFODEIK@Finding?5random?5Great?5Person?5for?5@
	mov	edx, DWORD PTR $T242241[ebp]
	push	edx
	mov	ecx, DWORD PTR $T242245[ebp]
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	mov	DWORD PTR _iRandIndex$[ebp], eax

; 4983 : 	eBestUnit = veValidUnits[iRandIndex];

	mov	eax, DWORD PTR _iRandIndex$[ebp]
	mov	ecx, DWORD PTR _veValidUnits$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _eBestUnit$[ebp], edx

; 4984 : 
; 4985 : 	return eBestUnit;

	mov	eax, DWORD PTR _eBestUnit$[ebp]
	mov	DWORD PTR $T242188[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _veValidUnits$[ebp]
	call	??1?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum UnitTypes,8,1,297,0>::~FStaticVector<enum UnitTypes,8,1,297,0>
	mov	eax, DWORD PTR $T242188[ebp]
$LN18@GetBestGre:

; 4986 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetBestGreatPersonForQuest@CvMinorCivAI@@QAE?AW4UnitTypes@@W4PlayerTypes@@@Z$0:
	lea	ecx, DWORD PTR _veValidUnits$[ebp]
	jmp	??1?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum UnitTypes,8,1,297,0>::~FStaticVector<enum UnitTypes,8,1,297,0>
__ehhandler$?GetBestGreatPersonForQuest@CvMinorCivAI@@QAE?AW4UnitTypes@@W4PlayerTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-160]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetBestGreatPersonForQuest@CvMinorCivAI@@QAE?AW4UnitTypes@@W4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetBestGreatPersonForQuest@CvMinorCivAI@@QAE?AW4UnitTypes@@W4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetBestGreatPersonForQuest
PUBLIC	??_C@_0EI@KNGKJCOC@Finding?5random?5City?5State?5Target@ ; `string'
PUBLIC	??1?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,63,1,297,0>::~FStaticVector<enum PlayerTypes,63,1,297,0>
PUBLIC	?push_back@?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAEIABW4PlayerTypes@@@Z ; FStaticVector<enum PlayerTypes,63,1,297,0>::push_back
PUBLIC	??0?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,63,1,297,0>::FStaticVector<enum PlayerTypes,63,1,297,0>
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_0EI@KNGKJCOC@Finding?5random?5City?5State?5Target@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0EI@KNGKJCOC@Finding?5random?5City?5State?5Target@ DB 'Finding rand'
	DB	'om City State Target for Minor to give out a quest to kill.', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetBestCityStateTarget@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetBestCityStateTarget@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z$0
__ehfuncinfo$?GetBestCityStateTarget@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetBestCityStateTarget@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?GetBestCityStateTarget@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z
_TEXT	SEGMENT
_this$ = -420						; size = 4
$T242423 = -404						; size = 4
$T242419 = -400						; size = 4
$T242403 = -388						; size = 4
$T242392 = -380						; size = 4
$T242388 = -376						; size = 4
$T242379 = -372						; size = 4
$T242375 = -368						; size = 4
$T242366 = -364						; size = 4
$T242354 = -360						; size = 4
$T242350 = -356						; size = 4
$T242349 = -352						; size = 4
$T242340 = -345						; size = 1
$T242331 = -344						; size = 4
$T242314 = -340						; size = 4
$T242310 = -336						; size = 4
$T242309 = -332						; size = 4
$T242300 = -325						; size = 1
$T242291 = -324						; size = 4
$T242286 = -320						; size = 4
$T242285 = -316						; size = 4
_iRandIndex$ = -312					; size = 4
_eTarget$ = -308					; size = 4
_iTargetLoop$ = -304					; size = 4
_eBestCityStateTarget$ = -300				; size = 4
_eClosestProximity$ = -296				; size = 4
_veValidTargets$ = -292					; size = 268
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_eForPlayer$ = 8					; size = 4
?GetBestCityStateTarget@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z PROC ; CvMinorCivAI::GetBestCityStateTarget, COMDAT
; _this$ = ecx

; 4992 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetBestCityStateTarget@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 408				; 00000198H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 4993 : 	CvAssertMsg(eForPlayer >= 0, "eForPlayer is expected to be non-negative (invalid Index)");
; 4994 : 	CvAssertMsg(eForPlayer < MAX_MAJOR_CIVS, "eForPlayer is expected to be within maximum bounds (invalid Index)");
; 4995 : 
; 4996 : 	PlayerTypes eBestCityStateTarget = NO_PLAYER;

	mov	DWORD PTR _eBestCityStateTarget$[ebp], -1

; 4997 : 
; 4998 : 	PlayerProximityTypes eClosestProximity = PLAYER_PROXIMITY_DISTANT;

	mov	DWORD PTR _eClosestProximity$[ebp], 0

; 4999 : 
; 5000 : 	// First, loop through the Minors in the game to what the closest proximity is to any of the players
; 5001 : 	int iTargetLoop;
; 5002 : 	PlayerTypes eTarget;
; 5003 : 	for(iTargetLoop = MAX_MAJOR_CIVS; iTargetLoop < MAX_CIV_PLAYERS; iTargetLoop++)

	mov	DWORD PTR _iTargetLoop$[ebp], 22	; 00000016H
	jmp	SHORT $LN15@GetBestCit
$LN14@GetBestCit:
	mov	eax, DWORD PTR _iTargetLoop$[ebp]
	add	eax, 1
	mov	DWORD PTR _iTargetLoop$[ebp], eax
$LN15@GetBestCit:
	cmp	DWORD PTR _iTargetLoop$[ebp], 63	; 0000003fH
	jge	$LN13@GetBestCit

; 5004 : 	{
; 5005 : 		eTarget = (PlayerTypes) iTargetLoop;

	mov	ecx, DWORD PTR _iTargetLoop$[ebp]
	mov	DWORD PTR _eTarget$[ebp], ecx

; 5006 : 
; 5007 : 		if(!GET_PLAYER(eTarget).isAlive())

	mov	edx, DWORD PTR _eTarget$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242291[ebp], edx
	mov	eax, DWORD PTR $T242291[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T242300[ebp], cl
	movzx	edx, BYTE PTR $T242300[ebp]
	test	edx, edx
	jne	SHORT $LN12@GetBestCit

; 5008 : 			continue;

	jmp	SHORT $LN14@GetBestCit
$LN12@GetBestCit:

; 5009 : 
; 5010 : 		if(GetPlayer()->getTeam() == GET_PLAYER(eTarget).getTeam())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T242309[ebp], eax
	mov	eax, DWORD PTR $T242309[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T242310[ebp], eax
	mov	edx, DWORD PTR _eTarget$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242314[ebp], edx
	mov	eax, DWORD PTR $T242314[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	cmp	DWORD PTR $T242310[ebp], eax
	jne	SHORT $LN11@GetBestCit

; 5011 : 			continue;

	jmp	$LN14@GetBestCit
$LN11@GetBestCit:

; 5012 : 
; 5013 : 		if(GetPlayer()->GetProximityToPlayer(eTarget) > eClosestProximity)

	mov	edx, DWORD PTR _eTarget$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?GetProximityToPlayer@CvPlayer@@QBE?AW4PlayerProximityTypes@@W4PlayerTypes@@@Z ; CvPlayer::GetProximityToPlayer
	cmp	eax, DWORD PTR _eClosestProximity$[ebp]
	jle	SHORT $LN10@GetBestCit

; 5014 : 		{
; 5015 : 			eClosestProximity = GetPlayer()->GetProximityToPlayer(eTarget);

	mov	eax, DWORD PTR _eTarget$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?GetProximityToPlayer@CvPlayer@@QBE?AW4PlayerProximityTypes@@W4PlayerTypes@@@Z ; CvPlayer::GetProximityToPlayer
	mov	DWORD PTR _eClosestProximity$[ebp], eax
$LN10@GetBestCit:

; 5016 : 		}
; 5017 : 	}

	jmp	$LN14@GetBestCit
$LN13@GetBestCit:

; 5018 : 
; 5019 : 	// Found nobody, or only people far away
; 5020 : 	if(eClosestProximity == PLAYER_PROXIMITY_DISTANT)

	cmp	DWORD PTR _eClosestProximity$[ebp], 0
	jne	SHORT $LN9@GetBestCit

; 5021 : 	{
; 5022 : 		return NO_PLAYER;

	or	eax, -1
	jmp	$LN16@GetBestCit
$LN9@GetBestCit:

; 5023 : 	}
; 5024 : 
; 5025 : 	FStaticVector<PlayerTypes, MAX_CIV_PLAYERS, true, c_eCiv5GameplayDLL, 0> veValidTargets;

	lea	ecx, DWORD PTR _veValidTargets$[ebp]
	call	??0?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,63,1,297,0>::FStaticVector<enum PlayerTypes,63,1,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 5026 : 
; 5027 : 	// Now loop through and come up with a list of valid players based on the proximity we found out earlier
; 5028 : 	for(iTargetLoop = MAX_MAJOR_CIVS; iTargetLoop < MAX_CIV_PLAYERS; iTargetLoop++)

	mov	DWORD PTR _iTargetLoop$[ebp], 22	; 00000016H
	jmp	SHORT $LN8@GetBestCit
$LN7@GetBestCit:
	mov	ecx, DWORD PTR _iTargetLoop$[ebp]
	add	ecx, 1
	mov	DWORD PTR _iTargetLoop$[ebp], ecx
$LN8@GetBestCit:
	cmp	DWORD PTR _iTargetLoop$[ebp], 63	; 0000003fH
	jge	$LN6@GetBestCit

; 5029 : 	{
; 5030 : 		eTarget = (PlayerTypes) iTargetLoop;

	mov	edx, DWORD PTR _iTargetLoop$[ebp]
	mov	DWORD PTR _eTarget$[ebp], edx

; 5031 : 
; 5032 : 		if(!GET_PLAYER(eTarget).isAlive())

	mov	eax, DWORD PTR _eTarget$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242331[ebp], eax
	mov	ecx, DWORD PTR $T242331[ebp]
	mov	dl, BYTE PTR [ecx+2256]
	mov	BYTE PTR $T242340[ebp], dl
	movzx	eax, BYTE PTR $T242340[ebp]
	test	eax, eax
	jne	SHORT $LN5@GetBestCit

; 5033 : 			continue;

	jmp	SHORT $LN7@GetBestCit
$LN5@GetBestCit:

; 5034 : 
; 5035 : 		if(GetPlayer()->getTeam() == GET_PLAYER(eTarget).getTeam())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T242349[ebp], eax
	mov	ecx, DWORD PTR $T242349[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T242350[ebp], eax
	mov	eax, DWORD PTR _eTarget$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242354[ebp], eax
	mov	ecx, DWORD PTR $T242354[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	cmp	DWORD PTR $T242350[ebp], eax
	jne	SHORT $LN4@GetBestCit

; 5036 : 			continue;

	jmp	$LN7@GetBestCit
$LN4@GetBestCit:

; 5037 : 
; 5038 : 		if(!GET_TEAM(GET_PLAYER(eForPlayer).getTeam()).isHasMet(GET_PLAYER(eTarget).getTeam()))

	mov	eax, DWORD PTR _eTarget$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242366[ebp], eax
	mov	ecx, DWORD PTR $T242366[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T242375[ebp], eax
	mov	eax, DWORD PTR _eForPlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242379[ebp], eax
	mov	ecx, DWORD PTR $T242379[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T242388[ebp], eax
	mov	eax, DWORD PTR $T242388[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T242392[ebp], eax
	mov	ecx, DWORD PTR $T242375[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T242392[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@GetBestCit

; 5039 : 			continue;

	jmp	$LN7@GetBestCit
$LN3@GetBestCit:

; 5040 : 
; 5041 : 		if(GetPlayer()->GetProximityToPlayer(eTarget) == eClosestProximity)

	mov	eax, DWORD PTR _eTarget$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?GetProximityToPlayer@CvPlayer@@QBE?AW4PlayerProximityTypes@@W4PlayerTypes@@@Z ; CvPlayer::GetProximityToPlayer
	cmp	eax, DWORD PTR _eClosestProximity$[ebp]
	jne	SHORT $LN2@GetBestCit

; 5042 : 		{
; 5043 : 			veValidTargets.push_back(eTarget);

	lea	ecx, DWORD PTR _eTarget$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _veValidTargets$[ebp]
	call	?push_back@?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAEIABW4PlayerTypes@@@Z ; FStaticVector<enum PlayerTypes,63,1,297,0>::push_back
$LN2@GetBestCit:

; 5044 : 		}
; 5045 : 	}

	jmp	$LN7@GetBestCit
$LN6@GetBestCit:

; 5046 : 
; 5047 : 	// Didn't find any valid Target players
; 5048 : 	if(veValidTargets.size() == 0)

	mov	edx, DWORD PTR _veValidTargets$[ebp+4]
	mov	DWORD PTR $T242403[ebp], edx
	cmp	DWORD PTR $T242403[ebp], 0
	jne	SHORT $LN1@GetBestCit

; 5049 : 		return NO_PLAYER;

	mov	DWORD PTR $T242285[ebp], -1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _veValidTargets$[ebp]
	call	??1?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,63,1,297,0>::~FStaticVector<enum PlayerTypes,63,1,297,0>
	mov	eax, DWORD PTR $T242285[ebp]
	jmp	SHORT $LN16@GetBestCit
$LN1@GetBestCit:

; 5050 : 
; 5051 : 	int iRandIndex = GC.getGame().getJonRandNum(veValidTargets.size(), "Finding random City State Target for Minor to give out a quest to kill.");

	mov	eax, DWORD PTR _veValidTargets$[ebp+4]
	mov	DWORD PTR $T242419[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242423[ebp], ecx
	push	OFFSET ??_C@_0EI@KNGKJCOC@Finding?5random?5City?5State?5Target@
	mov	edx, DWORD PTR $T242419[ebp]
	push	edx
	mov	ecx, DWORD PTR $T242423[ebp]
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	mov	DWORD PTR _iRandIndex$[ebp], eax

; 5052 : 	eBestCityStateTarget = veValidTargets[iRandIndex];

	mov	eax, DWORD PTR _iRandIndex$[ebp]
	mov	ecx, DWORD PTR _veValidTargets$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _eBestCityStateTarget$[ebp], edx

; 5053 : 
; 5054 : 	return eBestCityStateTarget;

	mov	eax, DWORD PTR _eBestCityStateTarget$[ebp]
	mov	DWORD PTR $T242286[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _veValidTargets$[ebp]
	call	??1?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,63,1,297,0>::~FStaticVector<enum PlayerTypes,63,1,297,0>
	mov	eax, DWORD PTR $T242286[ebp]
$LN16@GetBestCit:

; 5055 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetBestCityStateTarget@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z$0:
	lea	ecx, DWORD PTR _veValidTargets$[ebp]
	jmp	??1?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,63,1,297,0>::~FStaticVector<enum PlayerTypes,63,1,297,0>
__ehhandler$?GetBestCityStateTarget@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-412]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetBestCityStateTarget@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetBestCityStateTarget@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z ENDP ; CvMinorCivAI::GetBestCityStateTarget
; Function compile flags: /Odtp
;	COMDAT ?GetMostRecentBullyForQuest@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T242474 = -17						; size = 1
$T242465 = -16						; size = 4
_iPlayerLoop$225342 = -12				; size = 4
_iTurn$ = -8						; size = 4
_eBully$ = -4						; size = 4
?GetMostRecentBullyForQuest@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ PROC ; CvMinorCivAI::GetMostRecentBullyForQuest, COMDAT
; _this$ = ecx

; 5059 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 5060 : 	PlayerTypes eBully = NO_PLAYER;

	mov	DWORD PTR _eBully$[ebp], -1

; 5061 : 	int iTurn = -1;

	mov	DWORD PTR _iTurn$[ebp], -1

; 5062 : 	for(int iPlayerLoop = 0; iPlayerLoop < MAX_MAJOR_CIVS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$225342[ebp], 0
	jmp	SHORT $LN5@GetMostRec
$LN4@GetMostRec:
	mov	eax, DWORD PTR _iPlayerLoop$225342[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayerLoop$225342[ebp], eax
$LN5@GetMostRec:
	cmp	DWORD PTR _iPlayerLoop$225342[ebp], 22	; 00000016H
	jge	SHORT $LN3@GetMostRec

; 5063 : 	{
; 5064 : 		// Bully must still be alive
; 5065 : 		if(!GET_PLAYER((PlayerTypes)iPlayerLoop).isAlive())

	mov	ecx, DWORD PTR _iPlayerLoop$225342[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242465[ebp], ecx
	mov	edx, DWORD PTR $T242465[ebp]
	mov	al, BYTE PTR [edx+2256]
	mov	BYTE PTR $T242474[ebp], al
	movzx	ecx, BYTE PTR $T242474[ebp]
	test	ecx, ecx
	jne	SHORT $LN2@GetMostRec

; 5066 : 			continue;

	jmp	SHORT $LN4@GetMostRec
$LN2@GetMostRec:

; 5067 : 
; 5068 : 		if(m_aiTurnLastBullied[iPlayerLoop] > iTurn)

	mov	edx, DWORD PTR _iPlayerLoop$225342[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+2816]
	cmp	ecx, DWORD PTR _iTurn$[ebp]
	jle	SHORT $LN1@GetMostRec

; 5069 : 		{
; 5070 : 			iTurn = m_aiTurnLastBullied[iPlayerLoop];

	mov	edx, DWORD PTR _iPlayerLoop$225342[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+2816]
	mov	DWORD PTR _iTurn$[ebp], ecx

; 5071 : 			eBully = (PlayerTypes)iPlayerLoop;

	mov	edx, DWORD PTR _iPlayerLoop$225342[ebp]
	mov	DWORD PTR _eBully$[ebp], edx
$LN1@GetMostRec:

; 5072 : 		}
; 5073 : 	}

	jmp	SHORT $LN4@GetMostRec
$LN3@GetMostRec:

; 5074 : 
; 5075 : 	return eBully;

	mov	eax, DWORD PTR _eBully$[ebp]

; 5076 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetMostRecentBullyForQuest@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ENDP ; CvMinorCivAI::GetMostRecentBullyForQuest
_TEXT	ENDS
PUBLIC	?IsWantsMinorDead@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsWantsMinorDead
; Function compile flags: /Odtp
;	COMDAT ?IsWantsMinorDead@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T242489 = -13						; size = 1
$T242480 = -12						; size = 4
_iMajorLoop$225355 = -8					; size = 4
_eMajor$ = -4						; size = 4
_eMinor$ = 8						; size = 4
?IsWantsMinorDead@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::IsWantsMinorDead, COMDAT
; _this$ = ecx

; 5080 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 5081 : 	PlayerTypes eMajor;
; 5082 : 	for(int iMajorLoop = 0; iMajorLoop < MAX_MAJOR_CIVS; iMajorLoop++)

	mov	DWORD PTR _iMajorLoop$225355[ebp], 0
	jmp	SHORT $LN6@IsWantsMin
$LN5@IsWantsMin:
	mov	eax, DWORD PTR _iMajorLoop$225355[ebp]
	add	eax, 1
	mov	DWORD PTR _iMajorLoop$225355[ebp], eax
$LN6@IsWantsMin:
	cmp	DWORD PTR _iMajorLoop$225355[ebp], 22	; 00000016H
	jge	SHORT $LN4@IsWantsMin

; 5083 : 	{
; 5084 : 		eMajor = (PlayerTypes) iMajorLoop;

	mov	ecx, DWORD PTR _iMajorLoop$225355[ebp]
	mov	DWORD PTR _eMajor$[ebp], ecx

; 5085 : 
; 5086 : 		// Major must be alive
; 5087 : 		if(!GET_PLAYER(eMajor).isAlive())

	mov	edx, DWORD PTR _eMajor$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242480[ebp], edx
	mov	eax, DWORD PTR $T242480[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T242489[ebp], cl
	movzx	edx, BYTE PTR $T242489[ebp]
	test	edx, edx
	jne	SHORT $LN3@IsWantsMin

; 5088 : 			continue;

	jmp	SHORT $LN5@IsWantsMin
$LN3@IsWantsMin:

; 5089 : 
; 5090 : 		// Has the quest?
; 5091 : 		if(!IsActiveQuestForPlayer(eMajor, MINOR_CIV_QUEST_KILL_CITY_STATE))

	push	5
	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsActiveQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsActiveQuestForPlayer
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@IsWantsMin

; 5092 : 			continue;

	jmp	SHORT $LN5@IsWantsMin
$LN2@IsWantsMin:

; 5093 : 
; 5094 : 		// Right minor?
; 5095 : 		if(GetQuestData1(eMajor, MINOR_CIV_QUEST_KILL_CITY_STATE) != eMinor)

	push	5
	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetQuestData1@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::GetQuestData1
	cmp	eax, DWORD PTR _eMinor$[ebp]
	je	SHORT $LN1@IsWantsMin

; 5096 : 			continue;

	jmp	SHORT $LN5@IsWantsMin
$LN1@IsWantsMin:

; 5097 : 
; 5098 : 		return true;

	mov	al, 1
	jmp	SHORT $LN7@IsWantsMin

; 5099 : 	}

	jmp	SHORT $LN5@IsWantsMin
$LN4@IsWantsMin:

; 5100 : 
; 5101 : 	return false;

	xor	al, al
$LN7@IsWantsMin:

; 5102 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsWantsMinorDead@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::IsWantsMinorDead
_TEXT	ENDS
PUBLIC	??_C@_0EK@EDIEIMOL@Finding?5random?5Major?5player?5Targ@ ; `string'
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_0EK@EDIEIMOL@Finding?5random?5Major?5player?5Targ@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0EK@EDIEIMOL@Finding?5random?5Major?5player?5Targ@ DB 'Finding rand'
	DB	'om Major player Target for Minor to give out a quest to find.'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetBestPlayerToFind@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetBestPlayerToFind@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z$0
__ehfuncinfo$?GetBestPlayerToFind@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetBestPlayerToFind@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?GetBestPlayerToFind@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z
_TEXT	SEGMENT
_this$ = -384						; size = 4
$T242571 = -368						; size = 4
$T242567 = -364						; size = 4
$T242551 = -352						; size = 4
$T242540 = -341						; size = 1
$T242531 = -340						; size = 4
$T242519 = -336						; size = 4
$T242499 = -332						; size = 4
$T242494 = -328						; size = 4
$T242493 = -324						; size = 4
_iTargetMajorLoop$225374 = -320				; size = 4
_iRandIndex$ = -316					; size = 4
_eBestTargetPlayer$ = -312				; size = 4
_pTeam$ = -308						; size = 4
_eTargetTeam$ = -304					; size = 4
_eTargetMajor$ = -300					; size = 4
_eTeam$ = -296						; size = 4
_veValidTargets$ = -292					; size = 268
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
?GetBestPlayerToFind@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z PROC ; CvMinorCivAI::GetBestPlayerToFind, COMDAT
; _this$ = ecx

; 5106 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetBestPlayerToFind@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 372				; 00000174H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 5107 : 	PlayerTypes eBestTargetPlayer = NO_PLAYER;

	mov	DWORD PTR _eBestTargetPlayer$[ebp], -1

; 5108 : 
; 5109 : 	TeamTypes eTeam = GET_PLAYER(ePlayer).getTeam();

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242499[ebp], eax
	mov	ecx, DWORD PTR $T242499[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR _eTeam$[ebp], eax

; 5110 : 	CvTeam* pTeam = &GET_TEAM(eTeam);

	mov	eax, DWORD PTR _eTeam$[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _pTeam$[ebp], eax

; 5111 : 
; 5112 : 	FStaticVector<PlayerTypes, MAX_CIV_PLAYERS, true, c_eCiv5GameplayDLL, 0> veValidTargets;

	lea	ecx, DWORD PTR _veValidTargets$[ebp]
	call	??0?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,63,1,297,0>::FStaticVector<enum PlayerTypes,63,1,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 5113 : 
; 5114 : 	// First, loop through majors and see if the player has met them
; 5115 : 	PlayerTypes eTargetMajor;
; 5116 : 	TeamTypes eTargetTeam;
; 5117 : 	for(int iTargetMajorLoop = 0; iTargetMajorLoop < MAX_MAJOR_CIVS; iTargetMajorLoop++)

	mov	DWORD PTR _iTargetMajorLoop$225374[ebp], 0
	jmp	SHORT $LN8@GetBestPla
$LN7@GetBestPla:
	mov	ecx, DWORD PTR _iTargetMajorLoop$225374[ebp]
	add	ecx, 1
	mov	DWORD PTR _iTargetMajorLoop$225374[ebp], ecx
$LN8@GetBestPla:
	cmp	DWORD PTR _iTargetMajorLoop$225374[ebp], 22 ; 00000016H
	jge	$LN6@GetBestPla

; 5118 : 	{
; 5119 : 		eTargetMajor = (PlayerTypes) iTargetMajorLoop;

	mov	edx, DWORD PTR _iTargetMajorLoop$225374[ebp]
	mov	DWORD PTR _eTargetMajor$[ebp], edx

; 5120 : 		eTargetTeam = GET_PLAYER(eTargetMajor).getTeam();

	mov	eax, DWORD PTR _eTargetMajor$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242519[ebp], eax
	mov	ecx, DWORD PTR $T242519[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR _eTargetTeam$[ebp], eax

; 5121 : 
; 5122 : 		// Target needs to be alive
; 5123 : 		if(!GET_PLAYER(eTargetMajor).isAlive())

	mov	eax, DWORD PTR _eTargetMajor$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242531[ebp], eax
	mov	ecx, DWORD PTR $T242531[ebp]
	mov	dl, BYTE PTR [ecx+2256]
	mov	BYTE PTR $T242540[ebp], dl
	movzx	eax, BYTE PTR $T242540[ebp]
	test	eax, eax
	jne	SHORT $LN5@GetBestPla

; 5124 : 		{
; 5125 : 			continue;

	jmp	$LN7@GetBestPla
$LN5@GetBestPla:

; 5126 : 		}
; 5127 : 
; 5128 : 		// Don't have the player find anyone on his team...
; 5129 : 		if(eTargetTeam == eTeam)

	mov	ecx, DWORD PTR _eTargetTeam$[ebp]
	cmp	ecx, DWORD PTR _eTeam$[ebp]
	jne	SHORT $LN4@GetBestPla

; 5130 : 		{
; 5131 : 			continue;

	jmp	$LN7@GetBestPla
$LN4@GetBestPla:

; 5132 : 		}
; 5133 : 
; 5134 : 		// Player must already know the target
; 5135 : 		if(!pTeam->isHasMet(eTargetTeam))

	mov	edx, DWORD PTR _eTargetTeam$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pTeam$[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@GetBestPla

; 5136 : 		{
; 5137 : 			continue;

	jmp	$LN7@GetBestPla
$LN3@GetBestPla:

; 5138 : 		}
; 5139 : 
; 5140 : 		// Player can't have seen this guy's territory before
; 5141 : 		if(pTeam->IsHasFoundPlayersTerritory(eTargetMajor))

	mov	ecx, DWORD PTR _eTargetMajor$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pTeam$[ebp]
	call	?IsHasFoundPlayersTerritory@CvTeam@@QBE_NW4PlayerTypes@@@Z ; CvTeam::IsHasFoundPlayersTerritory
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@GetBestPla

; 5142 : 		{
; 5143 : 			continue;

	jmp	$LN7@GetBestPla
$LN2@GetBestPla:

; 5144 : 		}
; 5145 : 
; 5146 : 		veValidTargets.push_back(eTargetMajor);

	lea	eax, DWORD PTR _eTargetMajor$[ebp]
	push	eax
	lea	ecx, DWORD PTR _veValidTargets$[ebp]
	call	?push_back@?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAEIABW4PlayerTypes@@@Z ; FStaticVector<enum PlayerTypes,63,1,297,0>::push_back

; 5147 : 	}

	jmp	$LN7@GetBestPla
$LN6@GetBestPla:

; 5148 : 
; 5149 : 	// Didn't find any valid Target players
; 5150 : 	if(veValidTargets.size() == 0)

	mov	ecx, DWORD PTR _veValidTargets$[ebp+4]
	mov	DWORD PTR $T242551[ebp], ecx
	cmp	DWORD PTR $T242551[ebp], 0
	jne	SHORT $LN1@GetBestPla

; 5151 : 	{
; 5152 : 		return NO_PLAYER;

	mov	DWORD PTR $T242493[ebp], -1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _veValidTargets$[ebp]
	call	??1?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,63,1,297,0>::~FStaticVector<enum PlayerTypes,63,1,297,0>
	mov	eax, DWORD PTR $T242493[ebp]
	jmp	SHORT $LN9@GetBestPla
$LN1@GetBestPla:

; 5153 : 	}
; 5154 : 
; 5155 : 	int iRandIndex = GC.getGame().getJonRandNum(veValidTargets.size(), "Finding random Major player Target for Minor to give out a quest to find.");

	mov	edx, DWORD PTR _veValidTargets$[ebp+4]
	mov	DWORD PTR $T242567[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242571[ebp], eax
	push	OFFSET ??_C@_0EK@EDIEIMOL@Finding?5random?5Major?5player?5Targ@
	mov	ecx, DWORD PTR $T242567[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T242571[ebp]
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	mov	DWORD PTR _iRandIndex$[ebp], eax

; 5156 : 	eBestTargetPlayer = veValidTargets[iRandIndex];

	mov	edx, DWORD PTR _iRandIndex$[ebp]
	mov	eax, DWORD PTR _veValidTargets$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR _eBestTargetPlayer$[ebp], ecx

; 5157 : 
; 5158 : 	return eBestTargetPlayer;

	mov	edx, DWORD PTR _eBestTargetPlayer$[ebp]
	mov	DWORD PTR $T242494[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _veValidTargets$[ebp]
	call	??1?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,63,1,297,0>::~FStaticVector<enum PlayerTypes,63,1,297,0>
	mov	eax, DWORD PTR $T242494[ebp]
$LN9@GetBestPla:

; 5159 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetBestPlayerToFind@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z$0:
	lea	ecx, DWORD PTR _veValidTargets$[ebp]
	jmp	??1?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,63,1,297,0>::~FStaticVector<enum PlayerTypes,63,1,297,0>
__ehhandler$?GetBestPlayerToFind@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-376]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetBestPlayerToFind@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetBestPlayerToFind@CvMinorCivAI@@QAE?AW4PlayerTypes@@W42@@Z ENDP ; CvMinorCivAI::GetBestPlayerToFind
EXTRN	?GetNumNaturalWondersDiscoveredInArea@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetNumNaturalWondersDiscoveredInArea
EXTRN	?GetNumNaturalWonders@CvArea@@QBEHXZ:PROC	; CvArea::GetNumNaturalWonders
EXTRN	?GetNumNaturalWonders@CvMap@@QBEHXZ:PROC	; CvMap::GetNumNaturalWonders
; Function compile flags: /Odtp
;	COMDAT ?IsGoodTimeForNaturalWonderQuest@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -36						; size = 4
$T242637 = -32						; size = 4
$T242633 = -28						; size = 4
$T242632 = -24						; size = 4
$T242628 = -20						; size = 4
$T242621 = -16						; size = 4
_iNumNaturalWondersInStartingArea$ = -12		; size = 4
_pTeam$ = -8						; size = 4
_pPlayer$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?IsGoodTimeForNaturalWonderQuest@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::IsGoodTimeForNaturalWonderQuest, COMDAT
; _this$ = ecx

; 5163 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 5164 : 	CvPlayer* pPlayer = &GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pPlayer$[ebp], eax

; 5165 : 	CvTeam* pTeam = &GET_TEAM(pPlayer->getTeam());

	mov	ecx, DWORD PTR _pPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T242621[ebp], eax
	mov	eax, DWORD PTR $T242621[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _pTeam$[ebp], eax

; 5166 : 
; 5167 : 	// No starting plot?
; 5168 : 	if(pPlayer->getStartingPlot() == NULL)

	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?getStartingPlot@CvPlayer@@QBEPAVCvPlot@@XZ ; CvPlayer::getStartingPlot
	test	eax, eax
	jne	SHORT $LN3@IsGoodTime

; 5169 : 	{
; 5170 : 		return false;

	xor	al, al
	jmp	SHORT $LN4@IsGoodTime
$LN3@IsGoodTime:

; 5171 : 	}
; 5172 : 
; 5173 : 	// Player's already found them all
; 5174 : 	if(pTeam->GetNumNaturalWondersDiscovered() == GC.getMap().GetNumNaturalWonders())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T242628[ebp], ecx
	mov	ecx, DWORD PTR _pTeam$[ebp]
	call	?GetNumNaturalWondersDiscovered@CvTeam@@QBEHXZ ; CvTeam::GetNumNaturalWondersDiscovered
	mov	esi, eax
	mov	ecx, DWORD PTR $T242628[ebp]
	call	?GetNumNaturalWonders@CvMap@@QBEHXZ	; CvMap::GetNumNaturalWonders
	cmp	esi, eax
	jne	SHORT $LN2@IsGoodTime

; 5175 : 	{
; 5176 : 		return false;

	xor	al, al
	jmp	SHORT $LN4@IsGoodTime
$LN2@IsGoodTime:

; 5177 : 	}
; 5178 : 
; 5179 : 	// Player hasn't yet found all the NWs in his area
; 5180 : 	int iNumNaturalWondersInStartingArea = GC.getMap().getArea(pPlayer->getStartingPlot()->getArea())->GetNumNaturalWonders();

	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?getStartingPlot@CvPlayer@@QBEPAVCvPlot@@XZ ; CvPlayer::getStartingPlot
	mov	DWORD PTR $T242632[ebp], eax
	mov	edx, DWORD PTR $T242632[ebp]
	mov	eax, DWORD PTR [edx+356]
	mov	DWORD PTR $T242633[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T242637[ebp], ecx
	mov	edx, DWORD PTR $T242633[ebp]
	push	edx
	mov	ecx, DWORD PTR $T242637[ebp]
	call	?getArea@CvMap@@QAEPAVCvArea@@H@Z	; CvMap::getArea
	mov	ecx, eax
	call	?GetNumNaturalWonders@CvArea@@QBEHXZ	; CvArea::GetNumNaturalWonders
	mov	DWORD PTR _iNumNaturalWondersInStartingArea$[ebp], eax

; 5181 : 	if(pPlayer->GetNumNaturalWondersDiscoveredInArea() < iNumNaturalWondersInStartingArea)

	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?GetNumNaturalWondersDiscoveredInArea@CvPlayer@@QBEHXZ ; CvPlayer::GetNumNaturalWondersDiscoveredInArea
	cmp	eax, DWORD PTR _iNumNaturalWondersInStartingArea$[ebp]
	jge	SHORT $LN1@IsGoodTime

; 5182 : 	{
; 5183 : 		return false;

	xor	al, al
	jmp	SHORT $LN4@IsGoodTime
$LN1@IsGoodTime:

; 5184 : 	}
; 5185 : 
; 5186 : 	return true;

	mov	al, 1
$LN4@IsGoodTime:

; 5187 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?IsGoodTimeForNaturalWonderQuest@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::IsGoodTimeForNaturalWonderQuest
_TEXT	ENDS
PUBLIC	?IsRecentlyBulliedByAnyMajor@CvMinorCivAI@@QBE_NXZ ; CvMinorCivAI::IsRecentlyBulliedByAnyMajor
; Function compile flags: /Odtp
;	COMDAT ?IsGoodTimeForGiveGoldQuest@CvMinorCivAI@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsGoodTimeForGiveGoldQuest@CvMinorCivAI@@QAE_NXZ PROC	; CvMinorCivAI::IsGoodTimeForGiveGoldQuest, COMDAT
; _this$ = ecx

; 5191 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 5192 : 	if(IsRecentlyBulliedByAnyMajor())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsRecentlyBulliedByAnyMajor@CvMinorCivAI@@QBE_NXZ ; CvMinorCivAI::IsRecentlyBulliedByAnyMajor
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@IsGoodTime@2

; 5193 : 	{
; 5194 : 		return true;

	mov	al, 1
	jmp	SHORT $LN2@IsGoodTime@2
$LN1@IsGoodTime@2:

; 5195 : 	}
; 5196 : 
; 5197 : 	return false;

	xor	al, al
$LN2@IsGoodTime@2:

; 5198 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsGoodTimeForGiveGoldQuest@CvMinorCivAI@@QAE_NXZ ENDP	; CvMinorCivAI::IsGoodTimeForGiveGoldQuest
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsGoodTimeForPledgeToProtectQuest@CvMinorCivAI@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsGoodTimeForPledgeToProtectQuest@CvMinorCivAI@@QAE_NXZ PROC ; CvMinorCivAI::IsGoodTimeForPledgeToProtectQuest, COMDAT
; _this$ = ecx

; 5202 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 5203 : 	if(IsRecentlyBulliedByAnyMajor())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsRecentlyBulliedByAnyMajor@CvMinorCivAI@@QBE_NXZ ; CvMinorCivAI::IsRecentlyBulliedByAnyMajor
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@IsGoodTime@3

; 5204 : 	{
; 5205 : 		return true;

	mov	al, 1
	jmp	SHORT $LN2@IsGoodTime@3
$LN1@IsGoodTime@3:

; 5206 : 	}
; 5207 : 
; 5208 : 	return false;

	xor	al, al
$LN2@IsGoodTime@3:

; 5209 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsGoodTimeForPledgeToProtectQuest@CvMinorCivAI@@QAE_NXZ ENDP ; CvMinorCivAI::IsGoodTimeForPledgeToProtectQuest
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsGoodTimeForDenounceMajorQuest@CvMinorCivAI@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsGoodTimeForDenounceMajorQuest@CvMinorCivAI@@QAE_NXZ PROC ; CvMinorCivAI::IsGoodTimeForDenounceMajorQuest, COMDAT
; _this$ = ecx

; 5213 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 5214 : 	if(IsRecentlyBulliedByAnyMajor())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsRecentlyBulliedByAnyMajor@CvMinorCivAI@@QBE_NXZ ; CvMinorCivAI::IsRecentlyBulliedByAnyMajor
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@IsGoodTime@4

; 5215 : 	{
; 5216 : 		return true;

	mov	al, 1
	jmp	SHORT $LN2@IsGoodTime@4
$LN1@IsGoodTime@4:

; 5217 : 	}
; 5218 : 
; 5219 : 	return false;

	xor	al, al
$LN2@IsGoodTime@4:

; 5220 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsGoodTimeForDenounceMajorQuest@CvMinorCivAI@@QAE_NXZ ENDP ; CvMinorCivAI::IsGoodTimeForDenounceMajorQuest
_TEXT	ENDS
PUBLIC	??_C@_0CL@DLGLKHHG@TXT_KEY_NTFN_CITY_STATE_ALMOST_N@ ; `string'
PUBLIC	??_C@_0CC@ILGNFKCF@TXT_KEY_NTFN_CITY_STATE_ALMOST_S@ ; `string'
PUBLIC	??_C@_0CK@IAHOLILE@TXT_KEY_NTFN_CITY_STATE_ALMOST_N@ ; `string'
PUBLIC	?GetFriendsThreshold@CvMinorCivAI@@QBEHXZ	; CvMinorCivAI::GetFriendsThreshold
PUBLIC	?GetAlliesThreshold@CvMinorCivAI@@QBEHXZ	; CvMinorCivAI::GetAlliesThreshold
PUBLIC	?ChangeFriendshipWithMajorTimes100@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::ChangeFriendshipWithMajorTimes100
PUBLIC	?GetFriendshipAnchorWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetFriendshipAnchorWithMajor
PUBLIC	?GetFriendshipChangePerTurnTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetFriendshipChangePerTurnTimes100
EXTRN	?isGameMultiPlayer@CvGame@@QBE_NXZ:PROC		; CvGame::isGameMultiPlayer
;	COMDAT ??_C@_0CL@DLGLKHHG@TXT_KEY_NTFN_CITY_STATE_ALMOST_N@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0CL@DLGLKHHG@TXT_KEY_NTFN_CITY_STATE_ALMOST_N@ DB 'TXT_KEY_NTFN_CIT'
	DB	'Y_STATE_ALMOST_NOT_FRIENDS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@ILGNFKCF@TXT_KEY_NTFN_CITY_STATE_ALMOST_S@
CONST	SEGMENT
??_C@_0CC@ILGNFKCF@TXT_KEY_NTFN_CITY_STATE_ALMOST_S@ DB 'TXT_KEY_NTFN_CIT'
	DB	'Y_STATE_ALMOST_SM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@IAHOLILE@TXT_KEY_NTFN_CITY_STATE_ALMOST_N@
CONST	SEGMENT
??_C@_0CK@IAHOLILE@TXT_KEY_NTFN_CITY_STATE_ALMOST_N@ DB 'TXT_KEY_NTFN_CIT'
	DB	'Y_STATE_ALMOST_NOT_ALLIES', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?DoFriendship@CvMinorCivAI@@QAEXXZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?DoFriendship@CvMinorCivAI@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?DoFriendship@CvMinorCivAI@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoFriendship@CvMinorCivAI@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DoFriendship@CvMinorCivAI@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?DoFriendship@CvMinorCivAI@@QAEXXZ$2
	DD	01H
	DD	FLAT:__unwindfunclet$?DoFriendship@CvMinorCivAI@@QAEXXZ$3
	DD	01H
	DD	FLAT:__unwindfunclet$?DoFriendship@CvMinorCivAI@@QAEXXZ$4
	DD	01H
	DD	FLAT:__unwindfunclet$?DoFriendship@CvMinorCivAI@@QAEXXZ$6
	DD	01H
	DD	FLAT:__unwindfunclet$?DoFriendship@CvMinorCivAI@@QAEXXZ$7
	DD	01H
	DD	FLAT:__unwindfunclet$?DoFriendship@CvMinorCivAI@@QAEXXZ$8
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoFriendship@CvMinorCivAI@@QAEXXZ
_TEXT	SEGMENT
tv344 = -684						; size = 4
tv428 = -680						; size = 4
tv341 = -676						; size = 4
tv383 = -672						; size = 4
tv336 = -668						; size = 4
tv368 = -664						; size = 4
tv334 = -660						; size = 4
tv381 = -656						; size = 4
tv252 = -652						; size = 4
tv332 = -648						; size = 4
tv370 = -644						; size = 4
tv329 = -640						; size = 4
tv357 = -636						; size = 4
tv324 = -632						; size = 4
tv65 = -628						; size = 4
tv322 = -624						; size = 4
tv68 = -620						; size = 4
_this$ = -616						; size = 4
$T242738 = -612						; size = 4
$T242737 = -608						; size = 4
$T242728 = -604						; size = 4
$T242727 = -600						; size = 4
$T242718 = -596						; size = 4
$T242714 = -592						; size = 4
$T242710 = -588						; size = 4
$T242706 = -584						; size = 4
$T242705 = -580						; size = 4
$T242696 = -576						; size = 4
$T242695 = -572						; size = 4
$T242686 = -565						; size = 1
$T242685 = -564						; size = 4
$T242676 = -557						; size = 1
$T242667 = -556						; size = 4
$T242653 = -552						; size = 4
$T242652 = -548						; size = 4
$T242651 = -544						; size = 80
$T242650 = -464						; size = 80
$T242649 = -384						; size = 4
$T242648 = -380						; size = 4
$T242647 = -376						; size = 80
$T242646 = -296						; size = 80
_iFriendsThreshold$225434 = -216			; size = 4
_iAlliesThreshold$225433 = -212				; size = 4
_iEffectiveFriendship$225435 = -208			; size = 4
_iTurnsWarning$225432 = -204				; size = 4
_iNewFriendship$225426 = -200				; size = 4
_iOldFriendship$225423 = -196				; size = 4
_iFriendshipAnchor$225425 = -192			; size = 4
_iChangeThisTurn$225424 = -188				; size = 4
_iPlayerLoop$225417 = -184				; size = 4
_ePlayer$ = -180					; size = 4
_strMinorsNameKey$ = -176				; size = 4
_strMessage$ = -172					; size = 80
_strSummary$ = -92					; size = 80
__$EHRec$ = -12						; size = 12
?DoFriendship@CvMinorCivAI@@QAEXXZ PROC			; CvMinorCivAI::DoFriendship, COMDAT
; _this$ = ecx

; 5231 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoFriendship@CvMinorCivAI@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 672				; 000002a0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 5232 : 	Localization::String strMessage;

	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 5233 : 	Localization::String strSummary;

	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 5234 : 	const char* strMinorsNameKey = GetPlayer()->getNameKey();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR _strMinorsNameKey$[ebp], eax

; 5235 : 
; 5236 : 	PlayerTypes ePlayer;
; 5237 : 	for(int iPlayerLoop = 0; iPlayerLoop < MAX_MAJOR_CIVS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$225417[ebp], 0
	jmp	SHORT $LN15@DoFriendsh
$LN14@DoFriendsh:
	mov	eax, DWORD PTR _iPlayerLoop$225417[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayerLoop$225417[ebp], eax
$LN15@DoFriendsh:
	cmp	DWORD PTR _iPlayerLoop$225417[ebp], 22	; 00000016H
	jge	$LN13@DoFriendsh

; 5238 : 	{
; 5239 : 		ePlayer = (PlayerTypes) iPlayerLoop;

	mov	ecx, DWORD PTR _iPlayerLoop$225417[ebp]
	mov	DWORD PTR _ePlayer$[ebp], ecx

; 5240 : 
; 5241 : 		if(GET_PLAYER(ePlayer).isAlive())

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242667[ebp], edx
	mov	eax, DWORD PTR $T242667[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T242676[ebp], cl
	movzx	edx, BYTE PTR $T242676[ebp]
	test	edx, edx
	je	$LN12@DoFriendsh

; 5242 : 		{
; 5243 : 			// Update friendship even if the player hasn't met us yet, since we may have heard things through the grapevine (Wary Of, SP, etc.)
; 5244 : 
; 5245 : 			// Look at the base friendship (not counting war status etc.) and change it
; 5246 : 			int iOldFriendship = GetBaseFriendshipWithMajor(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBaseFriendshipWithMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBaseFriendshipWithMajor
	mov	DWORD PTR _iOldFriendship$225423[ebp], eax

; 5247 : 			int iChangeThisTurn = GetFriendshipChangePerTurnTimes100(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFriendshipChangePerTurnTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetFriendshipChangePerTurnTimes100
	mov	DWORD PTR _iChangeThisTurn$225424[ebp], eax

; 5248 : 			int iFriendshipAnchor = GetFriendshipAnchorWithMajor(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFriendshipAnchorWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetFriendshipAnchorWithMajor
	mov	DWORD PTR _iFriendshipAnchor$225425[ebp], eax

; 5249 : 			int iNewFriendship = iOldFriendship + (iChangeThisTurn / 100);

	mov	eax, DWORD PTR _iChangeThisTurn$225424[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	add	eax, DWORD PTR _iOldFriendship$225423[ebp]
	mov	DWORD PTR _iNewFriendship$225426[ebp], eax

; 5250 : 			if(iOldFriendship >= iFriendshipAnchor && iNewFriendship < iFriendshipAnchor)

	mov	edx, DWORD PTR _iOldFriendship$225423[ebp]
	cmp	edx, DWORD PTR _iFriendshipAnchor$225425[ebp]
	jl	SHORT $LN11@DoFriendsh
	mov	eax, DWORD PTR _iNewFriendship$225426[ebp]
	cmp	eax, DWORD PTR _iFriendshipAnchor$225425[ebp]
	jge	SHORT $LN11@DoFriendsh

; 5251 : 			{
; 5252 : 				// If we are at or above anchor, don't let the decay dip us below it
; 5253 : 				SetFriendshipWithMajor(ePlayer, iFriendshipAnchor);

	push	0
	mov	ecx, DWORD PTR _iFriendshipAnchor$225425[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::SetFriendshipWithMajor
	jmp	SHORT $LN10@DoFriendsh
$LN11@DoFriendsh:

; 5254 : 			}
; 5255 : 			else if (iChangeThisTurn != 0)

	cmp	DWORD PTR _iChangeThisTurn$225424[ebp], 0
	je	SHORT $LN9@DoFriendsh

; 5256 : 			{
; 5257 : 				ChangeFriendshipWithMajorTimes100(ePlayer, iChangeThisTurn);

	push	0
	mov	eax, DWORD PTR _iChangeThisTurn$225424[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeFriendshipWithMajorTimes100@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::ChangeFriendshipWithMajorTimes100

; 5258 : 			}
; 5259 : 			else

	jmp	SHORT $LN10@DoFriendsh
$LN9@DoFriendsh:

; 5260 : 			{
; 5261 : 				// Friendship amount doesn't change, but ally state could have (ex. current ally decays below our level)
; 5262 : 				DoFriendshipChangeEffects(ePlayer, iOldFriendship, iNewFriendship);

	push	0
	push	0
	mov	edx, DWORD PTR _iNewFriendship$225426[ebp]
	push	edx
	mov	eax, DWORD PTR _iOldFriendship$225423[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z ; CvMinorCivAI::DoFriendshipChangeEffects
$LN10@DoFriendsh:

; 5263 : 			}
; 5264 : 
; 5265 : 			// Notification for status changes
; 5266 : 			if(GetPlayer()->isAlive() && IsHasMetPlayer(ePlayer))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T242685[ebp], eax
	mov	edx, DWORD PTR $T242685[ebp]
	mov	al, BYTE PTR [edx+2256]
	mov	BYTE PTR $T242686[ebp], al
	movzx	ecx, BYTE PTR $T242686[ebp]
	test	ecx, ecx
	je	$LN12@DoFriendsh
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsHasMetPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsHasMetPlayer
	movzx	eax, al
	test	eax, eax
	je	$LN12@DoFriendsh

; 5267 : 			{
; 5268 : 				const int iTurnsWarning = 2;

	mov	DWORD PTR _iTurnsWarning$225432[ebp], 2

; 5269 : 				const int iAlliesThreshold = GetAlliesThreshold() * 100;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlliesThreshold@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetAlliesThreshold
	imul	eax, 100				; 00000064H
	mov	DWORD PTR _iAlliesThreshold$225433[ebp], eax

; 5270 : 				const int iFriendsThreshold = GetFriendsThreshold() * 100;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFriendsThreshold@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetFriendsThreshold
	imul	eax, 100				; 00000064H
	mov	DWORD PTR _iFriendsThreshold$225434[ebp], eax

; 5271 : 				int iEffectiveFriendship = GetEffectiveFriendshipWithMajorTimes100(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajorTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajorTimes100
	mov	DWORD PTR _iEffectiveFriendship$225435[ebp], eax

; 5272 : 				if(IsAllies(ePlayer))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAllies
	movzx	eax, al
	test	eax, eax
	je	$LN6@DoFriendsh

; 5273 : 				{
; 5274 : 					if(iEffectiveFriendship + (iTurnsWarning * iChangeThisTurn) < iAlliesThreshold &&
; 5275 : 						iEffectiveFriendship + ((iTurnsWarning-1) * iChangeThisTurn) >= iAlliesThreshold)

	mov	ecx, DWORD PTR _iChangeThisTurn$225424[ebp]
	mov	edx, DWORD PTR _iEffectiveFriendship$225435[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	cmp	eax, DWORD PTR _iAlliesThreshold$225433[ebp]
	jge	$LN5@DoFriendsh
	mov	ecx, DWORD PTR _iEffectiveFriendship$225435[ebp]
	add	ecx, DWORD PTR _iChangeThisTurn$225424[ebp]
	cmp	ecx, DWORD PTR _iAlliesThreshold$225433[ebp]
	jl	$LN5@DoFriendsh

; 5276 : 					{
; 5277 : 						strMessage = Localization::Lookup("TXT_KEY_NTFN_CITY_STATE_ALMOST_NOT_ALLIES");

	push	OFFSET ??_C@_0CK@IAHOLILE@TXT_KEY_NTFN_CITY_STATE_ALMOST_N@
	lea	edx, DWORD PTR $T242646[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv68[ebp], eax
	mov	eax, DWORD PTR tv68[ebp]
	mov	DWORD PTR tv322[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv322[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T242646[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 5278 : 						strMessage << strMinorsNameKey;

	lea	edx, DWORD PTR _strMinorsNameKey$[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 5279 : 						strSummary = Localization::Lookup("TXT_KEY_NTFN_CITY_STATE_ALMOST_SM");

	push	OFFSET ??_C@_0CC@ILGNFKCF@TXT_KEY_NTFN_CITY_STATE_ALMOST_S@
	lea	ecx, DWORD PTR $T242647[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv65[ebp], eax
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv324[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv324[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T242647[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 5280 : 						strSummary << strMinorsNameKey;

	lea	ecx, DWORD PTR _strMinorsNameKey$[ebp]
	push	ecx
	lea	edx, DWORD PTR _strSummary$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 5281 : 
; 5282 : 						AddNotification(strMessage.toUTF8(), strSummary.toUTF8(), ePlayer);

	push	-1
	push	-1
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T242696[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T242648[ebp], esp
	mov	DWORD PTR $T242695[ebp], ecx
	cmp	DWORD PTR $T242696[ebp], 0
	je	SHORT $LN40@DoFriendsh
	mov	edx, DWORD PTR $T242696[ebp]
	mov	DWORD PTR tv357[ebp], edx
	jmp	SHORT $LN41@DoFriendsh
$LN40@DoFriendsh:
	mov	DWORD PTR tv357[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN41@DoFriendsh:
	mov	eax, DWORD PTR tv357[ebp]
	push	eax
	mov	ecx, DWORD PTR $T242695[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	ecx, DWORD PTR $T242695[ebp]
	mov	DWORD PTR tv329[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T242706[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T242649[ebp], esp
	mov	DWORD PTR $T242705[ebp], edx
	cmp	DWORD PTR $T242706[ebp], 0
	je	SHORT $LN45@DoFriendsh
	mov	eax, DWORD PTR $T242706[ebp]
	mov	DWORD PTR tv370[ebp], eax
	jmp	SHORT $LN46@DoFriendsh
$LN45@DoFriendsh:
	mov	DWORD PTR tv370[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN46@DoFriendsh:
	mov	ecx, DWORD PTR tv370[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T242705[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	edx, DWORD PTR $T242705[ebp]
	mov	DWORD PTR tv332[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z ; CvMinorCivAI::AddNotification
$LN5@DoFriendsh:

; 5283 : 					}
; 5284 : 					if(!GC.getGame().isGameMultiPlayer() && GET_PLAYER(ePlayer).isHuman())

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242710[ebp], eax
	mov	ecx, DWORD PTR $T242710[ebp]
	call	?isGameMultiPlayer@CvGame@@QBE_NXZ	; CvGame::isGameMultiPlayer
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@DoFriendsh
	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242714[ebp], edx
	mov	ecx, DWORD PTR $T242714[ebp]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@DoFriendsh

; 5285 : 					{
; 5286 : 						gDLL->UnlockAchievement(ACHIEVEMENT_CITYSTATE_ALLY);

	mov	ecx, DWORD PTR $T242718[ebp]
	mov	DWORD PTR tv252[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv252[ebp], edx
	push	42					; 0000002aH
	mov	eax, DWORD PTR tv252[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv252[ebp]
	mov	eax, DWORD PTR [edx+828]
	call	eax
$LN4@DoFriendsh:

; 5287 : 					}
; 5288 : 
; 5289 : 				}

	jmp	$LN12@DoFriendsh
$LN6@DoFriendsh:

; 5290 : 				else if(IsFriends(ePlayer))

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	movzx	edx, al
	test	edx, edx
	je	$LN12@DoFriendsh

; 5291 : 				{
; 5292 : 					if(iEffectiveFriendship + (iTurnsWarning * iChangeThisTurn) < iFriendsThreshold &&
; 5293 : 						iEffectiveFriendship + ((iTurnsWarning-1) * iChangeThisTurn) >= iFriendsThreshold)

	mov	eax, DWORD PTR _iChangeThisTurn$225424[ebp]
	mov	ecx, DWORD PTR _iEffectiveFriendship$225435[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	cmp	edx, DWORD PTR _iFriendsThreshold$225434[ebp]
	jge	$LN12@DoFriendsh
	mov	eax, DWORD PTR _iEffectiveFriendship$225435[ebp]
	add	eax, DWORD PTR _iChangeThisTurn$225424[ebp]
	cmp	eax, DWORD PTR _iFriendsThreshold$225434[ebp]
	jl	$LN12@DoFriendsh

; 5294 : 					{
; 5295 : 						strMessage = Localization::Lookup("TXT_KEY_NTFN_CITY_STATE_ALMOST_NOT_FRIENDS");

	push	OFFSET ??_C@_0CL@DLGLKHHG@TXT_KEY_NTFN_CITY_STATE_ALMOST_N@
	lea	ecx, DWORD PTR $T242650[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv381[ebp], eax
	mov	edx, DWORD PTR tv381[ebp]
	mov	DWORD PTR tv334[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR tv334[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T242650[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 5296 : 						strMessage << strMinorsNameKey;

	lea	ecx, DWORD PTR _strMinorsNameKey$[ebp]
	push	ecx
	lea	edx, DWORD PTR _strMessage$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 5297 : 						strSummary = Localization::Lookup("TXT_KEY_NTFN_CITY_STATE_ALMOST_SM");

	push	OFFSET ??_C@_0CC@ILGNFKCF@TXT_KEY_NTFN_CITY_STATE_ALMOST_S@
	lea	eax, DWORD PTR $T242651[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv368[ebp], eax
	mov	ecx, DWORD PTR tv368[ebp]
	mov	DWORD PTR tv336[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR tv336[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T242651[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 5298 : 						strSummary << strMinorsNameKey;

	lea	eax, DWORD PTR _strMinorsNameKey$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 5299 : 
; 5300 : 						AddNotification(strMessage.toUTF8(), strSummary.toUTF8(), ePlayer);

	push	-1
	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T242728[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T242652[ebp], esp
	mov	DWORD PTR $T242727[ebp], eax
	cmp	DWORD PTR $T242728[ebp], 0
	je	SHORT $LN56@DoFriendsh
	mov	ecx, DWORD PTR $T242728[ebp]
	mov	DWORD PTR tv383[ebp], ecx
	jmp	SHORT $LN57@DoFriendsh
$LN56@DoFriendsh:
	mov	DWORD PTR tv383[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN57@DoFriendsh:
	mov	edx, DWORD PTR tv383[ebp]
	push	edx
	mov	ecx, DWORD PTR $T242727[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR $T242727[ebp]
	mov	DWORD PTR tv341[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T242738[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T242653[ebp], esp
	mov	DWORD PTR $T242737[ebp], ecx
	cmp	DWORD PTR $T242738[ebp], 0
	je	SHORT $LN61@DoFriendsh
	mov	edx, DWORD PTR $T242738[ebp]
	mov	DWORD PTR tv428[ebp], edx
	jmp	SHORT $LN62@DoFriendsh
$LN61@DoFriendsh:
	mov	DWORD PTR tv428[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN62@DoFriendsh:
	mov	eax, DWORD PTR tv428[ebp]
	push	eax
	mov	ecx, DWORD PTR $T242737[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	ecx, DWORD PTR $T242737[ebp]
	mov	DWORD PTR tv344[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z ; CvMinorCivAI::AddNotification
$LN12@DoFriendsh:

; 5301 : 					}
; 5302 : 				}
; 5303 : 			}
; 5304 : 		}
; 5305 : 	}

	jmp	$LN14@DoFriendsh
$LN13@DoFriendsh:

; 5306 : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoFriendship@CvMinorCivAI@@QAEXXZ$0:
	lea	ecx, DWORD PTR _strMessage$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFriendship@CvMinorCivAI@@QAEXXZ$1:
	lea	ecx, DWORD PTR _strSummary$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFriendship@CvMinorCivAI@@QAEXXZ$2:
	lea	ecx, DWORD PTR $T242646[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFriendship@CvMinorCivAI@@QAEXXZ$3:
	lea	ecx, DWORD PTR $T242647[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFriendship@CvMinorCivAI@@QAEXXZ$4:
	mov	ecx, DWORD PTR $T242648[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoFriendship@CvMinorCivAI@@QAEXXZ$6:
	lea	ecx, DWORD PTR $T242650[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFriendship@CvMinorCivAI@@QAEXXZ$7:
	lea	ecx, DWORD PTR $T242651[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFriendship@CvMinorCivAI@@QAEXXZ$8:
	mov	ecx, DWORD PTR $T242652[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?DoFriendship@CvMinorCivAI@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-676]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoFriendship@CvMinorCivAI@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoFriendship@CvMinorCivAI@@QAEXXZ ENDP			; CvMinorCivAI::DoFriendship
PUBLIC	?CanMajorBullyGold@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorBullyGold
EXTRN	?getGoldGiftMod@CvGameSpeedInfo@@QBEHXZ:PROC	; CvGameSpeedInfo::getGoldGiftMod
EXTRN	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z:PROC ; CvPlayerPolicies::GetNumericModifier
EXTRN	?GetMinorFriendshipDecayMod@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetMinorFriendshipDecayMod
EXTRN	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ:PROC ; CvPlayer::GetPlayerTraits
; Function compile flags: /Odtp
;	COMDAT ?GetFriendshipChangePerTurnTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -116						; size = 4
$T242836 = -112						; size = 4
$T242832 = -108						; size = 4
$T242831 = -104						; size = 4
$T242827 = -100						; size = 4
$T242823 = -96						; size = 4
$T242822 = -92						; size = 4
$T242813 = -88						; size = 4
$T242809 = -84						; size = 4
$T242800 = -80						; size = 4
$T242799 = -76						; size = 4
$T242790 = -72						; size = 4
$T242786 = -68						; size = 4
$T242782 = -64						; size = 4
$T242778 = -60						; size = 4
$T242774 = -56						; size = 4
$T242770 = -52						; size = 4
$T242761 = -48						; size = 4
$T242757 = -44						; size = 4
$T242753 = -40						; size = 4
_iShift$225477 = -36					; size = 4
_iRecoveryMod$225474 = -32				; size = 4
_iDecayMod$225471 = -28					; size = 4
_iReligionMod$ = -24					; size = 4
_iTraitMod$ = -20					; size = 4
_iBaseFriendship$ = -16					; size = 4
_iFriendshipAnchor$ = -12				; size = 4
_iChangeThisTurn$ = -8					; size = 4
_kPlayer$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetFriendshipChangePerTurnTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetFriendshipChangePerTurnTimes100, COMDAT
; _this$ = ecx

; 5312 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 116				; 00000074H
	mov	DWORD PTR _this$[ebp], ecx

; 5313 : 	CvPlayer& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 5314 : 	int iChangeThisTurn = 0;

	mov	DWORD PTR _iChangeThisTurn$[ebp], 0

; 5315 : 
; 5316 : 	// Modifier to rate based on traits and religion
; 5317 : 	int iTraitMod = kPlayer.GetPlayerTraits()->GetCityStateFriendshipModifier();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T242753[ebp], eax
	mov	ecx, DWORD PTR $T242753[ebp]
	mov	edx, DWORD PTR [ecx+92]
	mov	DWORD PTR _iTraitMod$[ebp], edx

; 5318 : 	int iReligionMod = 0;

	mov	DWORD PTR _iReligionMod$[ebp], 0

; 5319 : 	if (IsSameReligionAsMajor(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsSameReligionAsMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsSameReligionAsMajor
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN16@GetFriends

; 5320 : 		iReligionMod += /*50*/ GC.getMINOR_FRIENDSHIP_RATE_MOD_SHARED_RELIGION();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2728
	mov	DWORD PTR $T242757[ebp], edx
	mov	eax, DWORD PTR _iReligionMod$[ebp]
	add	eax, DWORD PTR $T242757[ebp]
	mov	DWORD PTR _iReligionMod$[ebp], eax
$LN16@GetFriends:

; 5321 : 
; 5322 : 	// Relation to anchor point?
; 5323 : 	int iBaseFriendship = GetBaseFriendshipWithMajor(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBaseFriendshipWithMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBaseFriendshipWithMajor
	mov	DWORD PTR _iBaseFriendship$[ebp], eax

; 5324 : 	int iFriendshipAnchor = GetFriendshipAnchorWithMajor(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFriendshipAnchorWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetFriendshipAnchorWithMajor
	mov	DWORD PTR _iFriendshipAnchor$[ebp], eax

; 5325 : 	if (iBaseFriendship == iFriendshipAnchor)

	mov	eax, DWORD PTR _iBaseFriendship$[ebp]
	cmp	eax, DWORD PTR _iFriendshipAnchor$[ebp]
	jne	SHORT $LN15@GetFriends
	jmp	$LN14@GetFriends
$LN15@GetFriends:

; 5326 : 	{
; 5327 : 		// Change rate is 0
; 5328 : 	}
; 5329 : 	else if (iBaseFriendship > iFriendshipAnchor)

	mov	ecx, DWORD PTR _iBaseFriendship$[ebp]
	cmp	ecx, DWORD PTR _iFriendshipAnchor$[ebp]
	jle	$LN13@GetFriends

; 5330 : 	{
; 5331 : 		// Hostile Minors have Friendship decay quicker
; 5332 : 		if(GetPersonality() == MINOR_CIV_PERSONALITY_HOSTILE)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPersonality@CvMinorCivAI@@QBE?AW4MinorCivPersonalityTypes@@XZ ; CvMinorCivAI::GetPersonality
	cmp	eax, 2
	jne	SHORT $LN29@GetFriends

; 5333 : 			iChangeThisTurn += /*-150*/ GC.getMINOR_FRIENDSHIP_DROP_PER_TURN_HOSTILE();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2736
	mov	DWORD PTR $T242761[ebp], edx
	mov	eax, DWORD PTR _iChangeThisTurn$[ebp]
	add	eax, DWORD PTR $T242761[ebp]
	mov	DWORD PTR _iChangeThisTurn$[ebp], eax
	jmp	SHORT $LN11@GetFriends

; 5334 : 		// Aggressor!
; 5335 : 		else if(GET_TEAM(kPlayer.getTeam()).IsMinorCivAggressor())

$LN29@GetFriends:
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T242770[ebp], eax
	mov	eax, DWORD PTR $T242770[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T242774[ebp], eax
	mov	ecx, DWORD PTR $T242774[ebp]
	call	?IsMinorCivAggressor@CvTeam@@QBE_NXZ	; CvTeam::IsMinorCivAggressor
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@GetFriends

; 5336 : 			iChangeThisTurn += /*-200*/ GC.getMINOR_FRIENDSHIP_DROP_PER_TURN_AGGRESSOR();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2740
	mov	DWORD PTR $T242778[ebp], edx
	mov	eax, DWORD PTR _iChangeThisTurn$[ebp]
	add	eax, DWORD PTR $T242778[ebp]
	mov	DWORD PTR _iChangeThisTurn$[ebp], eax

; 5337 : 		// Normal decay
; 5338 : 		else

	jmp	SHORT $LN11@GetFriends
$LN10@GetFriends:

; 5339 : 			iChangeThisTurn += /*-100*/ GC.getMINOR_FRIENDSHIP_DROP_PER_TURN();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2732
	mov	DWORD PTR $T242782[ebp], ecx
	mov	edx, DWORD PTR _iChangeThisTurn$[ebp]
	add	edx, DWORD PTR $T242782[ebp]
	mov	DWORD PTR _iChangeThisTurn$[ebp], edx
$LN11@GetFriends:

; 5340 : 
; 5341 : 		// Decay modified (Trait, policies, shared religion, etc.)
; 5342 : 		int iDecayMod = 100;

	mov	DWORD PTR _iDecayMod$225471[ebp], 100	; 00000064H

; 5343 : 		iDecayMod += GET_PLAYER(ePlayer).GetMinorFriendshipDecayMod();

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242786[ebp], eax
	mov	ecx, DWORD PTR $T242786[ebp]
	call	?GetMinorFriendshipDecayMod@CvPlayer@@QBEHXZ ; CvPlayer::GetMinorFriendshipDecayMod
	add	eax, DWORD PTR _iDecayMod$225471[ebp]
	mov	DWORD PTR _iDecayMod$225471[ebp], eax

; 5344 : 		iDecayMod += (-1) * (iTraitMod / 2);

	mov	eax, DWORD PTR _iTraitMod$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	imul	eax, -1
	add	eax, DWORD PTR _iDecayMod$225471[ebp]
	mov	DWORD PTR _iDecayMod$225471[ebp], eax

; 5345 : 		iDecayMod += (-1) * (iReligionMod / 2);

	mov	eax, DWORD PTR _iReligionMod$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	imul	eax, -1
	add	eax, DWORD PTR _iDecayMod$225471[ebp]
	mov	DWORD PTR _iDecayMod$225471[ebp], eax

; 5346 : 		
; 5347 : 		if (iDecayMod < 0)

	jns	SHORT $LN8@GetFriends

; 5348 : 			iDecayMod = 0;

	mov	DWORD PTR _iDecayMod$225471[ebp], 0
$LN8@GetFriends:

; 5349 : 
; 5350 : 		iChangeThisTurn *= iDecayMod;

	mov	ecx, DWORD PTR _iChangeThisTurn$[ebp]
	imul	ecx, DWORD PTR _iDecayMod$225471[ebp]
	mov	DWORD PTR _iChangeThisTurn$[ebp], ecx

; 5351 : 		iChangeThisTurn /= 100;

	mov	eax, DWORD PTR _iChangeThisTurn$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iChangeThisTurn$[ebp], eax

; 5352 : 	}
; 5353 : 	else

	jmp	SHORT $LN14@GetFriends
$LN13@GetFriends:

; 5354 : 	{
; 5355 : 		iChangeThisTurn += /*100*/ GC.getMINOR_FRIENDSHIP_NEGATIVE_INCREASE_PER_TURN();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2764
	mov	DWORD PTR $T242790[ebp], edx
	mov	eax, DWORD PTR _iChangeThisTurn$[ebp]
	add	eax, DWORD PTR $T242790[ebp]
	mov	DWORD PTR _iChangeThisTurn$[ebp], eax

; 5356 : 
; 5357 : 		// Recovery modified (Trait, policies, shared religion, etc.)
; 5358 : 		int iRecoveryMod = 100;

	mov	DWORD PTR _iRecoveryMod$225474[ebp], 100 ; 00000064H

; 5359 : 		iRecoveryMod += iTraitMod;

	mov	ecx, DWORD PTR _iRecoveryMod$225474[ebp]
	add	ecx, DWORD PTR _iTraitMod$[ebp]
	mov	DWORD PTR _iRecoveryMod$225474[ebp], ecx

; 5360 : 		iRecoveryMod += iReligionMod;

	mov	edx, DWORD PTR _iRecoveryMod$225474[ebp]
	add	edx, DWORD PTR _iReligionMod$[ebp]
	mov	DWORD PTR _iRecoveryMod$225474[ebp], edx

; 5361 : 		
; 5362 : 		if (iRecoveryMod < 0)

	jns	SHORT $LN6@GetFriends

; 5363 : 			iRecoveryMod = 0;

	mov	DWORD PTR _iRecoveryMod$225474[ebp], 0
$LN6@GetFriends:

; 5364 : 
; 5365 : 		iChangeThisTurn *= iRecoveryMod;

	mov	eax, DWORD PTR _iChangeThisTurn$[ebp]
	imul	eax, DWORD PTR _iRecoveryMod$225474[ebp]
	mov	DWORD PTR _iChangeThisTurn$[ebp], eax

; 5366 : 		iChangeThisTurn /= 100;

	mov	eax, DWORD PTR _iChangeThisTurn$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iChangeThisTurn$[ebp], eax
$LN14@GetFriends:

; 5367 : 	}
; 5368 : 
; 5369 : 	// Shift on top of base rate
; 5370 : 	if (GET_TEAM(kPlayer.getTeam()).isHasMet(GetPlayer()->getTeam()))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T242799[ebp], eax
	mov	edx, DWORD PTR $T242799[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T242800[ebp], eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T242809[ebp], eax
	mov	eax, DWORD PTR $T242809[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T242813[ebp], eax
	mov	ecx, DWORD PTR $T242800[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T242813[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	movzx	edx, al
	test	edx, edx
	je	$LN5@GetFriends

; 5371 : 	{
; 5372 : 		int iShift = 0;

	mov	DWORD PTR _iShift$225477[ebp], 0

; 5373 : 
; 5374 : 		if (kPlayer.GetPlayerPolicies()->GetNumericModifier(POLICYMOD_PROTECTED_MINOR_INFLUENCE) != 0)

	push	37					; 00000025H
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	test	eax, eax
	je	SHORT $LN4@GetFriends

; 5375 : 		{
; 5376 : 			if (GC.getGame().GetGameTrade()->IsPlayerConnectedToPlayer(ePlayer, GetPlayer()->GetID()))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T242822[ebp], eax
	mov	eax, DWORD PTR $T242822[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T242823[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242827[ebp], edx
	mov	eax, DWORD PTR $T242823[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T242827[ebp]
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	ecx, eax
	call	?IsPlayerConnectedToPlayer@CvGameTrade@@QAE_NW4PlayerTypes@@0@Z ; CvGameTrade::IsPlayerConnectedToPlayer
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@GetFriends

; 5377 : 			{
; 5378 : 				iShift += kPlayer.GetPlayerPolicies()->GetNumericModifier(POLICYMOD_PROTECTED_MINOR_INFLUENCE);

	push	37					; 00000025H
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	add	eax, DWORD PTR _iShift$225477[ebp]
	mov	DWORD PTR _iShift$225477[ebp], eax
$LN4@GetFriends:

; 5379 : 			}
; 5380 : 		}
; 5381 : 
; 5382 : 		if (CanMajorBullyGold(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CanMajorBullyGold@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorBullyGold
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@GetFriends

; 5383 : 		{
; 5384 : 			iShift += kPlayer.GetPlayerPolicies()->GetNumericModifier(POLICYMOD_AFRAID_INFLUENCE);

	push	38					; 00000026H
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	add	eax, DWORD PTR _iShift$225477[ebp]
	mov	DWORD PTR _iShift$225477[ebp], eax

; 5385 : 			iShift += kPlayer.GetPlayerTraits()->GetAfraidMinorPerTurnInfluence();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T242831[ebp], eax
	mov	edx, DWORD PTR $T242831[ebp]
	mov	eax, DWORD PTR [edx+316]
	mov	DWORD PTR $T242832[ebp], eax
	mov	ecx, DWORD PTR _iShift$225477[ebp]
	add	ecx, DWORD PTR $T242832[ebp]
	mov	DWORD PTR _iShift$225477[ebp], ecx
$LN2@GetFriends:

; 5386 : 		}
; 5387 : 		
; 5388 : 		if (iShift != 0)

	cmp	DWORD PTR _iShift$225477[ebp], 0
	je	SHORT $LN5@GetFriends

; 5389 : 		{
; 5390 : 			iChangeThisTurn += iShift;

	mov	edx, DWORD PTR _iChangeThisTurn$[ebp]
	add	edx, DWORD PTR _iShift$225477[ebp]
	mov	DWORD PTR _iChangeThisTurn$[ebp], edx
$LN5@GetFriends:

; 5391 : 		}
; 5392 : 	}
; 5393 : 
; 5394 : 	// Mod everything by game speed
; 5395 : 	iChangeThisTurn *= GC.getGame().getGameSpeedInfo().getGoldGiftMod();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242836[ebp], eax
	mov	ecx, DWORD PTR $T242836[ebp]
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getGoldGiftMod@CvGameSpeedInfo@@QBEHXZ	; CvGameSpeedInfo::getGoldGiftMod
	imul	eax, DWORD PTR _iChangeThisTurn$[ebp]
	mov	DWORD PTR _iChangeThisTurn$[ebp], eax

; 5396 : 	iChangeThisTurn /= 100;

	mov	eax, DWORD PTR _iChangeThisTurn$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iChangeThisTurn$[ebp], eax

; 5397 : 
; 5398 : 	return iChangeThisTurn;

	mov	eax, DWORD PTR _iChangeThisTurn$[ebp]

; 5399 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetFriendshipChangePerTurnTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetFriendshipChangePerTurnTimes100
_TEXT	ENDS
PUBLIC	?GetBaseFriendshipWithMajorTimes100@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBaseFriendshipWithMajorTimes100
; Function compile flags: /Odtp
;	COMDAT ?GetEffectiveFriendshipWithMajorTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T242842 = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetEffectiveFriendshipWithMajorTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetEffectiveFriendshipWithMajorTimes100, COMDAT
; _this$ = ecx

; 5405 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 5406 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 5407 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 5408 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return 0; // as defined during Reset()

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN2@GetEffecti
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN3@GetEffecti
$LN2@GetEffecti:
	xor	eax, eax
	jmp	SHORT $LN4@GetEffecti
$LN3@GetEffecti:

; 5409 : 
; 5410 : 	// Are we at war?
; 5411 : 	if(IsAtWarWithPlayersTeam(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAtWarWithPlayersTeam@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAtWarWithPlayersTeam
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@GetEffecti

; 5412 : 		return (100 * /*-60*/GC.getMINOR_FRIENDSHIP_AT_WAR());

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2768
	mov	DWORD PTR $T242842[ebp], edx
	mov	eax, DWORD PTR $T242842[ebp]
	imul	eax, 100				; 00000064H
	jmp	SHORT $LN4@GetEffecti
$LN1@GetEffecti:

; 5413 : 
; 5414 : 	return GetBaseFriendshipWithMajorTimes100(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBaseFriendshipWithMajorTimes100@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBaseFriendshipWithMajorTimes100
$LN4@GetEffecti:

; 5415 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetEffectiveFriendshipWithMajorTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetEffectiveFriendshipWithMajorTimes100
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetBaseFriendshipWithMajorTimes100@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetBaseFriendshipWithMajorTimes100@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetBaseFriendshipWithMajorTimes100, COMDAT
; _this$ = ecx

; 5419 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 5420 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 5421 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 5422 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return 0; // as defined during Reset()

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@GetBaseFri
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN2@GetBaseFri
$LN1@GetBaseFri:
	xor	eax, eax
	jmp	SHORT $LN3@GetBaseFri
$LN2@GetBaseFri:

; 5423 : 
; 5424 : 	return m_aiFriendshipWithMajorTimes100[ePlayer];

	mov	eax, DWORD PTR _ePlayer$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+2024]
$LN3@GetBaseFri:

; 5425 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetBaseFriendshipWithMajorTimes100@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetBaseFriendshipWithMajorTimes100
_TEXT	ENDS
PUBLIC	?SetFriendshipWithMajorTimes100@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::SetFriendshipWithMajorTimes100
; Function compile flags: /Odtp
;	COMDAT ?SetFriendshipWithMajorTimes100@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z
_TEXT	SEGMENT
tv150 = -36						; size = 4
tv138 = -32						; size = 4
_this$ = -28						; size = 4
$T242861 = -24						; size = 4
$T242857 = -20						; size = 4
$T242853 = -16						; size = 4
_iOldEffectiveFriendship$ = -12				; size = 4
_iMinimumFriendship$ = -8				; size = 4
_iNewEffectiveFriendship$ = -4				; size = 4
_ePlayer$ = 8						; size = 4
_iNum$ = 12						; size = 4
_bFromQuest$ = 16					; size = 1
?SetFriendshipWithMajorTimes100@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z PROC ; CvMinorCivAI::SetFriendshipWithMajorTimes100, COMDAT
; _this$ = ecx

; 5429 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 5430 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 5431 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 5432 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN4@SetFriends
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN5@SetFriends
$LN4@SetFriends:
	jmp	$LN6@SetFriends
$LN5@SetFriends:

; 5433 : 
; 5434 : 	int iOldEffectiveFriendship = GetEffectiveFriendshipWithMajorTimes100(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajorTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajorTimes100
	mov	DWORD PTR _iOldEffectiveFriendship$[ebp], eax

; 5435 : 
; 5436 : 	m_aiFriendshipWithMajorTimes100[ePlayer] = iNum;

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _iNum$[ebp]
	mov	DWORD PTR [edx+ecx*4+2024], eax

; 5437 : 
; 5438 : 	int iMinimumFriendship = GC.getMINOR_FRIENDSHIP_AT_WAR();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2768
	mov	DWORD PTR _iMinimumFriendship$[ebp], ecx

; 5439 : 	if(GetBaseFriendshipWithMajor(ePlayer) < iMinimumFriendship)

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBaseFriendshipWithMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBaseFriendshipWithMajor
	cmp	eax, DWORD PTR _iMinimumFriendship$[ebp]
	jge	SHORT $LN3@SetFriends

; 5440 : 		m_aiFriendshipWithMajorTimes100[ePlayer] = iMinimumFriendship * 100;

	mov	eax, DWORD PTR _iMinimumFriendship$[ebp]
	imul	eax, 100				; 00000064H
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*4+2024], eax
$LN3@SetFriends:

; 5441 : 
; 5442 : 	int iNewEffectiveFriendship = GetEffectiveFriendshipWithMajorTimes100(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajorTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajorTimes100
	mov	DWORD PTR _iNewEffectiveFriendship$[ebp], eax

; 5443 : 
; 5444 : 	// Has the friendship in effect changed?
; 5445 : 	if(iOldEffectiveFriendship != iNewEffectiveFriendship)

	mov	ecx, DWORD PTR _iOldEffectiveFriendship$[ebp]
	cmp	ecx, DWORD PTR _iNewEffectiveFriendship$[ebp]
	je	SHORT $LN2@SetFriends

; 5446 : 	{
; 5447 : 		DoFriendshipChangeEffects(ePlayer, iOldEffectiveFriendship/100, iNewEffectiveFriendship/100, bFromQuest);

	push	0
	movzx	edx, BYTE PTR _bFromQuest$[ebp]
	push	edx
	mov	eax, DWORD PTR _iNewEffectiveFriendship$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	mov	eax, DWORD PTR _iOldEffectiveFriendship$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z ; CvMinorCivAI::DoFriendshipChangeEffects
$LN2@SetFriends:

; 5448 : 	}
; 5449 : 
; 5450 : 	// Update City banners and game info if this is the active player
; 5451 : 	if(ePlayer == GC.getGame().getActivePlayer())

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242853[ebp], eax
	mov	ecx, DWORD PTR $T242853[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR _ePlayer$[ebp], eax
	jne	SHORT $LN6@SetFriends

; 5452 : 	{
; 5453 : 		GC.GetEngineUserInterface()->setDirty(GameData_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T242857[ebp]
	mov	DWORD PTR tv138[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv138[ebp], edx
	push	1
	push	11					; 0000000bH
	mov	eax, DWORD PTR tv138[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv138[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 5454 : 		GC.GetEngineUserInterface()->setDirty(CityInfo_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T242861[ebp]
	mov	DWORD PTR tv150[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv150[ebp], edx
	push	1
	push	18					; 00000012H
	mov	eax, DWORD PTR tv150[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv150[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax
$LN6@SetFriends:

; 5455 : 	}
; 5456 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetFriendshipWithMajorTimes100@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ENDP ; CvMinorCivAI::SetFriendshipWithMajorTimes100
_TEXT	ENDS
EXTRN	?getMinorQuestFriendshipMod@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getMinorQuestFriendshipMod
; Function compile flags: /Odtp
;	COMDAT ?ChangeFriendshipWithMajorTimes100@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T242871 = -8						; size = 4
$T242867 = -4						; size = 4
_ePlayer$ = 8						; size = 4
_iChange$ = 12						; size = 4
_bFromQuest$ = 16					; size = 1
?ChangeFriendshipWithMajorTimes100@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z PROC ; CvMinorCivAI::ChangeFriendshipWithMajorTimes100, COMDAT
; _this$ = ecx

; 5460 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 5461 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 5462 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 5463 : 
; 5464 : 	if(iChange != 0)

	cmp	DWORD PTR _iChange$[ebp], 0
	je	SHORT $LN4@ChangeFrie@3

; 5465 : 	{
; 5466 : 		// If this friendship was earned from a Quest, then we might apply a modifier to it
; 5467 : 		if(bFromQuest && iChange > 0)

	movzx	eax, BYTE PTR _bFromQuest$[ebp]
	test	eax, eax
	je	SHORT $LN2@ChangeFrie@3
	cmp	DWORD PTR _iChange$[ebp], 0
	jle	SHORT $LN2@ChangeFrie@3

; 5468 : 		{
; 5469 : 			if(GET_PLAYER(ePlayer).getMinorQuestFriendshipMod() != 0)

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242867[ebp], ecx
	mov	ecx, DWORD PTR $T242867[ebp]
	call	?getMinorQuestFriendshipMod@CvPlayer@@QBEHXZ ; CvPlayer::getMinorQuestFriendshipMod
	test	eax, eax
	je	SHORT $LN2@ChangeFrie@3

; 5470 : 			{
; 5471 : 				iChange *= (100 + GET_PLAYER(ePlayer).getMinorQuestFriendshipMod());

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242871[ebp], edx
	mov	ecx, DWORD PTR $T242871[ebp]
	call	?getMinorQuestFriendshipMod@CvPlayer@@QBEHXZ ; CvPlayer::getMinorQuestFriendshipMod
	add	eax, 100				; 00000064H
	imul	eax, DWORD PTR _iChange$[ebp]
	mov	DWORD PTR _iChange$[ebp], eax

; 5472 : 				iChange /= 100;

	mov	eax, DWORD PTR _iChange$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iChange$[ebp], eax
$LN2@ChangeFrie@3:

; 5473 : 			}
; 5474 : 		}
; 5475 : 
; 5476 : 		SetFriendshipWithMajorTimes100(ePlayer, GetBaseFriendshipWithMajorTimes100(ePlayer) + iChange, bFromQuest);

	movzx	edx, BYTE PTR _bFromQuest$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBaseFriendshipWithMajorTimes100@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBaseFriendshipWithMajorTimes100
	add	eax, DWORD PTR _iChange$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFriendshipWithMajorTimes100@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::SetFriendshipWithMajorTimes100
$LN4@ChangeFrie@3:

; 5477 : 	}
; 5478 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ChangeFriendshipWithMajorTimes100@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ENDP ; CvMinorCivAI::ChangeFriendshipWithMajorTimes100
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetEffectiveFriendshipWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetEffectiveFriendshipWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetEffectiveFriendshipWithMajor, COMDAT
; _this$ = ecx

; 5484 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 5485 : 	return GetEffectiveFriendshipWithMajorTimes100(ePlayer) / 100;

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajorTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajorTimes100
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx

; 5486 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetEffectiveFriendshipWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetEffectiveFriendshipWithMajor
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetBaseFriendshipWithMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetBaseFriendshipWithMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetBaseFriendshipWithMajor, COMDAT
; _this$ = ecx

; 5490 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 5491 : 	return GetBaseFriendshipWithMajorTimes100(ePlayer) / 100;

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBaseFriendshipWithMajorTimes100@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBaseFriendshipWithMajorTimes100
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx

; 5492 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetBaseFriendshipWithMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetBaseFriendshipWithMajor
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?SetFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
_iNum$ = 12						; size = 4
_bFromQuest$ = 16					; size = 1
?SetFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z PROC ; CvMinorCivAI::SetFriendshipWithMajor, COMDAT
; _this$ = ecx

; 5496 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 5497 : 	SetFriendshipWithMajorTimes100(ePlayer, iNum * 100, bFromQuest);

	movzx	eax, BYTE PTR _bFromQuest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iNum$[ebp]
	imul	ecx, 100				; 00000064H
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFriendshipWithMajorTimes100@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::SetFriendshipWithMajorTimes100

; 5498 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ENDP ; CvMinorCivAI::SetFriendshipWithMajor
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?ChangeFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
_iChange$ = 12						; size = 4
_bFromQuest$ = 16					; size = 1
?ChangeFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z PROC ; CvMinorCivAI::ChangeFriendshipWithMajor, COMDAT
; _this$ = ecx

; 5502 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 5503 : 	ChangeFriendshipWithMajorTimes100(ePlayer, iChange * 100, bFromQuest);

	movzx	eax, BYTE PTR _bFromQuest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iChange$[ebp]
	imul	ecx, 100				; 00000064H
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeFriendshipWithMajorTimes100@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::ChangeFriendshipWithMajorTimes100

; 5504 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ChangeFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ENDP ; CvMinorCivAI::ChangeFriendshipWithMajor
_TEXT	ENDS
PUBLIC	?IsWaryOfTeam@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z ; CvMinorCivAI::IsWaryOfTeam
EXTRN	?GetCityStateMinimumInfluence@CvPlayerReligions@@QBEHW4ReligionTypes@@@Z:PROC ; CvPlayerReligions::GetCityStateMinimumInfluence
EXTRN	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ:PROC ; CvPlayer::GetReligions
EXTRN	?GetMinorFriendshipAnchorMod@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetMinorFriendshipAnchorMod
; Function compile flags: /Odtp
;	COMDAT ?GetFriendshipAnchorWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -36						; size = 4
$T242904 = -32						; size = 4
$T242900 = -28						; size = 4
$T242891 = -24						; size = 4
_pMajor$ = -20						; size = 4
_pMinorCapitalReligions$ = -16				; size = 4
_iAnchor$ = -12						; size = 4
_pMajorReligions$ = -8					; size = 4
_pMinorCapital$ = -4					; size = 4
_eMajor$ = 8						; size = 4
?GetFriendshipAnchorWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetFriendshipAnchorWithMajor, COMDAT
; _this$ = ecx

; 5508 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 5509 : 	int iAnchor = GC.getMINOR_FRIENDSHIP_ANCHOR_DEFAULT();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7340
	mov	DWORD PTR _iAnchor$[ebp], eax

; 5510 : 
; 5511 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 5512 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 5513 : 	if (eMajor < 0 || eMajor >= MAX_MAJOR_CIVS) return iAnchor;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN7@GetFriends@2
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN13@GetFriends@2
$LN7@GetFriends@2:
	mov	eax, DWORD PTR _iAnchor$[ebp]
	jmp	$LN9@GetFriends@2

; 5514 : 
; 5515 : 	CvPlayer* pMajor = &GET_PLAYER(eMajor);

$LN13@GetFriends@2:
	mov	ecx, DWORD PTR _eMajor$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pMajor$[ebp], ecx

; 5516 : 	CvAssertMsg(pMajor, "MINOR CIV AI: pMajor not expected to be NULL.  Please send Anton your save file and version.");
; 5517 : 	if (!pMajor) return iAnchor;

	jne	SHORT $LN6@GetFriends@2
	mov	eax, DWORD PTR _iAnchor$[ebp]
	jmp	$LN9@GetFriends@2
$LN6@GetFriends@2:

; 5518 : 
; 5519 : 	// Pledge to Protect
; 5520 : 	if (IsProtectedByMajor(eMajor))

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsProtectedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsProtectedByMajor
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN19@GetFriends@2

; 5521 : 	{
; 5522 : 		iAnchor += GC.getMINOR_FRIENDSHIP_ANCHOR_MOD_PROTECTED();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7344
	mov	DWORD PTR $T242891[ebp], ecx
	mov	edx, DWORD PTR _iAnchor$[ebp]
	add	edx, DWORD PTR $T242891[ebp]
	mov	DWORD PTR _iAnchor$[ebp], edx

; 5523 : 	}
; 5524 : 
; 5525 : 	// Wary Of?
; 5526 : 	if (IsWaryOfTeam(pMajor->getTeam()))

$LN19@GetFriends@2:
	mov	eax, DWORD PTR _pMajor$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T242900[ebp], eax
	mov	edx, DWORD PTR $T242900[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsWaryOfTeam@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z ; CvMinorCivAI::IsWaryOfTeam
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@GetFriends@2

; 5527 : 	{
; 5528 : 		iAnchor += GC.getMINOR_FRIENDSHIP_ANCHOR_MOD_WARY_OF();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7348
	mov	DWORD PTR $T242904[ebp], ecx
	mov	edx, DWORD PTR _iAnchor$[ebp]
	add	edx, DWORD PTR $T242904[ebp]
	mov	DWORD PTR _iAnchor$[ebp], edx
$LN4@GetFriends@2:

; 5529 : 	}
; 5530 : 
; 5531 : 	// Social Policies
; 5532 : 	iAnchor += pMajor->GetMinorFriendshipAnchorMod();

	mov	ecx, DWORD PTR _pMajor$[ebp]
	call	?GetMinorFriendshipAnchorMod@CvPlayer@@QBEHXZ ; CvPlayer::GetMinorFriendshipAnchorMod
	add	eax, DWORD PTR _iAnchor$[ebp]
	mov	DWORD PTR _iAnchor$[ebp], eax

; 5533 : 
; 5534 : 	// Religion
; 5535 : 	CvPlayerReligions* pMajorReligions = pMajor->GetReligions();

	mov	ecx, DWORD PTR _pMajor$[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	DWORD PTR _pMajorReligions$[ebp], eax

; 5536 : 	CvAssertMsg(pMajorReligions, "MINOR CIV AI: pMajorReligions not expected to be NULL.  Please send Anton your save file and version.");
; 5537 : 	if (!pMajorReligions) return iAnchor;

	cmp	DWORD PTR _pMajorReligions$[ebp], 0
	jne	SHORT $LN3@GetFriends@2
	mov	eax, DWORD PTR _iAnchor$[ebp]
	jmp	SHORT $LN9@GetFriends@2
$LN3@GetFriends@2:

; 5538 : 	CvCity* pMinorCapital = GetPlayer()->getCapitalCity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pMinorCapital$[ebp], eax

; 5539 : 	if (!pMinorCapital) return iAnchor; // Happens when city was just captured, after buyout, etc., so just return the anchor value we have

	cmp	DWORD PTR _pMinorCapital$[ebp], 0
	jne	SHORT $LN2@GetFriends@2
	mov	eax, DWORD PTR _iAnchor$[ebp]
	jmp	SHORT $LN9@GetFriends@2
$LN2@GetFriends@2:

; 5540 : 	CvCityReligions* pMinorCapitalReligions = pMinorCapital->GetCityReligions();

	mov	ecx, DWORD PTR _pMinorCapital$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	DWORD PTR _pMinorCapitalReligions$[ebp], eax

; 5541 : 	CvAssertMsg(pMinorCapitalReligions, "MINOR CIV AI: pMinorCapitalReligions not expected to be NULL.  Please send Anton your save file and version.");
; 5542 : 	if (!pMinorCapitalReligions) return iAnchor;

	cmp	DWORD PTR _pMinorCapitalReligions$[ebp], 0
	jne	SHORT $LN1@GetFriends@2
	mov	eax, DWORD PTR _iAnchor$[ebp]
	jmp	SHORT $LN9@GetFriends@2
$LN1@GetFriends@2:

; 5543 : 	iAnchor += pMajorReligions->GetCityStateMinimumInfluence(pMinorCapitalReligions->GetReligiousMajority());

	mov	ecx, DWORD PTR _pMinorCapitalReligions$[ebp]
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	push	eax
	mov	ecx, DWORD PTR _pMajorReligions$[ebp]
	call	?GetCityStateMinimumInfluence@CvPlayerReligions@@QBEHW4ReligionTypes@@@Z ; CvPlayerReligions::GetCityStateMinimumInfluence
	add	eax, DWORD PTR _iAnchor$[ebp]
	mov	DWORD PTR _iAnchor$[ebp], eax

; 5544 : 
; 5545 : 	return iAnchor;

	mov	eax, DWORD PTR _iAnchor$[ebp]
$LN9@GetFriends@2:

; 5546 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetFriendshipAnchorWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetFriendshipAnchorWithMajor
_TEXT	ENDS
PUBLIC	?ResetFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ; CvMinorCivAI::ResetFriendshipWithMajor
; Function compile flags: /Odtp
;	COMDAT ?ResetFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T242916 = -13						; size = 1
$T242915 = -12						; size = 4
_iResetFriendship$ = -8					; size = 4
_iOldFriendship$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
?ResetFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z PROC ; CvMinorCivAI::ResetFriendshipWithMajor, COMDAT
; _this$ = ecx

; 5550 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 5551 : 	// If ePlayer isn't a major civ then there is no influence value to reset, so just return
; 5552 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return; // as defined during Reset()

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN3@ResetFrien
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN4@ResetFrien
$LN3@ResetFrien:
	jmp	SHORT $LN5@ResetFrien
$LN4@ResetFrien:

; 5553 : 
; 5554 : 	int iOldFriendship = GetEffectiveFriendshipWithMajor(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajor
	mov	DWORD PTR _iOldFriendship$[ebp], eax

; 5555 : 	const int iResetFriendship = 0;

	mov	DWORD PTR _iResetFriendship$[ebp], 0

; 5556 : 	if(GetPlayer()->isAlive())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T242915[ebp], eax
	mov	ecx, DWORD PTR $T242915[ebp]
	mov	dl, BYTE PTR [ecx+2256]
	mov	BYTE PTR $T242916[ebp], dl
	movzx	eax, BYTE PTR $T242916[ebp]
	test	eax, eax
	je	SHORT $LN2@ResetFrien

; 5557 : 	{
; 5558 : 		SetFriendshipWithMajor(ePlayer, iResetFriendship);

	push	0
	push	0
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::SetFriendshipWithMajor

; 5559 : 	}
; 5560 : 	else

	jmp	SHORT $LN5@ResetFrien
$LN2@ResetFrien:

; 5561 : 	{
; 5562 : 		// special workaround to allow status changes despite minor already being dead
; 5563 : 		DoFriendshipChangeEffects(ePlayer, iOldFriendship, iResetFriendship, /*bFromQuest*/false, /*bIgnoreMinorDeath*/true);

	push	1
	push	0
	push	0
	mov	edx, DWORD PTR _iOldFriendship$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z ; CvMinorCivAI::DoFriendshipChangeEffects

; 5564 : 		SetFriendshipWithMajor(ePlayer, iResetFriendship);

	push	0
	push	0
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::SetFriendshipWithMajor
$LN5@ResetFrien:

; 5565 : 	}
; 5566 : 
; 5567 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ResetFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::ResetFriendshipWithMajor
_TEXT	ENDS
PUBLIC	?GetAngerFreeIntrusionCounter@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetAngerFreeIntrusionCounter
; Function compile flags: /Odtp
;	COMDAT ?GetAngerFreeIntrusionCounter@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetAngerFreeIntrusionCounter@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetAngerFreeIntrusionCounter, COMDAT
; _this$ = ecx

; 5571 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 5572 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 5573 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 5574 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return 0; // as defined during Reset()

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@GetAngerFr
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN2@GetAngerFr
$LN1@GetAngerFr:
	xor	eax, eax
	jmp	SHORT $LN3@GetAngerFr
$LN2@GetAngerFr:

; 5575 : 
; 5576 : 	return m_aiAngerFreeIntrusionCounter[ePlayer];

	mov	eax, DWORD PTR _ePlayer$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+2112]
$LN3@GetAngerFr:

; 5577 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetAngerFreeIntrusionCounter@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetAngerFreeIntrusionCounter
_TEXT	ENDS
PUBLIC	?SetAngerFreeIntrusionCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::SetAngerFreeIntrusionCounter
; Function compile flags: /Odtp
;	COMDAT ?SetAngerFreeIntrusionCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
_iNum$ = 12						; size = 4
?SetAngerFreeIntrusionCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z PROC ; CvMinorCivAI::SetAngerFreeIntrusionCounter, COMDAT
; _this$ = ecx

; 5581 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 5582 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 5583 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 5584 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@SetAngerFr
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN2@SetAngerFr
$LN1@SetAngerFr:
	jmp	SHORT $LN3@SetAngerFr
$LN2@SetAngerFr:

; 5585 : 
; 5586 : 	m_aiAngerFreeIntrusionCounter[ePlayer] = iNum;

	mov	eax, DWORD PTR _ePlayer$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _iNum$[ebp]
	mov	DWORD PTR [ecx+eax*4+2112], edx
$LN3@SetAngerFr:

; 5587 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetAngerFreeIntrusionCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ENDP ; CvMinorCivAI::SetAngerFreeIntrusionCounter
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?ChangeAngerFreeIntrusionCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
_iChange$ = 12						; size = 4
?ChangeAngerFreeIntrusionCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z PROC ; CvMinorCivAI::ChangeAngerFreeIntrusionCounter, COMDAT
; _this$ = ecx

; 5591 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 5592 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 5593 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 5594 : 
; 5595 : 	SetAngerFreeIntrusionCounter(ePlayer, GetAngerFreeIntrusionCounter(ePlayer) + iChange);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAngerFreeIntrusionCounter@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetAngerFreeIntrusionCounter
	add	eax, DWORD PTR _iChange$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetAngerFreeIntrusionCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::SetAngerFreeIntrusionCounter

; 5596 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?ChangeAngerFreeIntrusionCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ENDP ; CvMinorCivAI::ChangeAngerFreeIntrusionCounter
_TEXT	ENDS
PUBLIC	?DoUpdateAlliesResourceBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@0@Z ; CvMinorCivAI::DoUpdateAlliesResourceBonus
EXTRN	?changeResourceExport@CvPlayer@@QAEXW4ResourceTypes@@H@Z:PROC ; CvPlayer::changeResourceExport
EXTRN	?changeResourceFromMinors@CvPlayer@@QAEXW4ResourceTypes@@H@Z:PROC ; CvPlayer::changeResourceFromMinors
EXTRN	?getResourceExport@CvPlayer@@QBEHW4ResourceTypes@@@Z:PROC ; CvPlayer::getResourceExport
; Function compile flags: /Odtp
;	COMDAT ?DoUpdateAlliesResourceBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@0@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
_pkResourceInfo$225596 = -20				; size = 4
_iResourceLoop$225591 = -16				; size = 4
_iResourceQuantity$ = -12				; size = 4
_eUsage$ = -8						; size = 4
_eResource$ = -4					; size = 4
_eNewAlly$ = 8						; size = 4
_eOldAlly$ = 12						; size = 4
?DoUpdateAlliesResourceBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@0@Z PROC ; CvMinorCivAI::DoUpdateAlliesResourceBonus, COMDAT
; _this$ = ecx

; 5600 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 5601 : 	FAssertMsg(eNewAlly != NO_PLAYER || eOldAlly != NO_PLAYER, "MINOR CIV AI: Updating Allied resource bonus and both players are not defined!");
; 5602 : 
; 5603 : 	// Change gifted Resources
; 5604 : 	ResourceTypes eResource;
; 5605 : 	ResourceUsageTypes eUsage;
; 5606 : 	int iResourceQuantity;
; 5607 : #ifdef AUI_WARNING_FIXES
; 5608 : 	for (uint iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)
; 5609 : #else
; 5610 : 	for(int iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)

	mov	DWORD PTR _iResourceLoop$225591[ebp], 0
	jmp	SHORT $LN10@DoUpdateAl
$LN9@DoUpdateAl:
	mov	eax, DWORD PTR _iResourceLoop$225591[ebp]
	add	eax, 1
	mov	DWORD PTR _iResourceLoop$225591[ebp], eax
$LN10@DoUpdateAl:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	cmp	DWORD PTR _iResourceLoop$225591[ebp], eax
	jge	$LN11@DoUpdateAl

; 5611 : #endif
; 5612 : 	{
; 5613 : 		eResource = (ResourceTypes) iResourceLoop;

	mov	ecx, DWORD PTR _iResourceLoop$225591[ebp]
	mov	DWORD PTR _eResource$[ebp], ecx

; 5614 : 
; 5615 : 		const CvResourceInfo* pkResourceInfo = GC.getResourceInfo(eResource);

	mov	edx, DWORD PTR _eResource$[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	DWORD PTR _pkResourceInfo$225596[ebp], eax

; 5616 : 		if (pkResourceInfo == NULL)

	cmp	DWORD PTR _pkResourceInfo$225596[ebp], 0
	jne	SHORT $LN7@DoUpdateAl

; 5617 : 			continue;

	jmp	SHORT $LN9@DoUpdateAl
$LN7@DoUpdateAl:

; 5618 : 
; 5619 : 		eUsage = pkResourceInfo->getResourceUsage();

	mov	ecx, DWORD PTR _pkResourceInfo$225596[ebp]
	call	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ ; CvResourceInfo::getResourceUsage
	mov	DWORD PTR _eUsage$[ebp], eax

; 5620 : 
; 5621 : 		if(eUsage == RESOURCEUSAGE_STRATEGIC || eUsage == RESOURCEUSAGE_LUXURY)

	cmp	DWORD PTR _eUsage$[ebp], 1
	je	SHORT $LN5@DoUpdateAl
	cmp	DWORD PTR _eUsage$[ebp], 2
	jne	$LN6@DoUpdateAl
$LN5@DoUpdateAl:

; 5622 : 		{
; 5623 : 			// Someone is losing the bonus :(
; 5624 : 			if(eOldAlly != NO_PLAYER)

	cmp	DWORD PTR _eOldAlly$[ebp], -1
	je	SHORT $LN4@DoUpdateAl

; 5625 : 			{
; 5626 : 				iResourceQuantity = GetPlayer()->getResourceExport(eResource);

	mov	eax, DWORD PTR _eResource$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getResourceExport@CvPlayer@@QBEHW4ResourceTypes@@@Z ; CvPlayer::getResourceExport
	mov	DWORD PTR _iResourceQuantity$[ebp], eax

; 5627 : 
; 5628 : 				if(iResourceQuantity > 0)

	cmp	DWORD PTR _iResourceQuantity$[ebp], 0
	jle	SHORT $LN4@DoUpdateAl

; 5629 : 				{
; 5630 : 					GET_PLAYER(eOldAlly).changeResourceFromMinors(eResource, -iResourceQuantity);

	mov	ecx, DWORD PTR _iResourceQuantity$[ebp]
	neg	ecx
	push	ecx
	mov	edx, DWORD PTR _eResource$[ebp]
	push	edx
	mov	ecx, DWORD PTR _eOldAlly$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?changeResourceFromMinors@CvPlayer@@QAEXW4ResourceTypes@@H@Z ; CvPlayer::changeResourceFromMinors

; 5631 : 					GetPlayer()->changeResourceExport(eResource, -iResourceQuantity);

	mov	eax, DWORD PTR _iResourceQuantity$[ebp]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _eResource$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?changeResourceExport@CvPlayer@@QAEXW4ResourceTypes@@H@Z ; CvPlayer::changeResourceExport
$LN4@DoUpdateAl:

; 5632 : 				}
; 5633 : 			}
; 5634 : 
; 5635 : 			// Someone new is getting the bonus :D
; 5636 : 			if(eNewAlly != NO_PLAYER)

	cmp	DWORD PTR _eNewAlly$[ebp], -1
	je	SHORT $LN6@DoUpdateAl

; 5637 : 			{
; 5638 : 				iResourceQuantity = GetPlayer()->getNumResourceTotal(eResource);

	push	1
	mov	edx, DWORD PTR _eResource$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNumResourceTotal@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceTotal
	mov	DWORD PTR _iResourceQuantity$[ebp], eax

; 5639 : 
; 5640 : 				if(iResourceQuantity > 0)

	cmp	DWORD PTR _iResourceQuantity$[ebp], 0
	jle	SHORT $LN6@DoUpdateAl

; 5641 : 				{
; 5642 : 					GET_PLAYER(eNewAlly).changeResourceFromMinors(eResource, iResourceQuantity);

	mov	eax, DWORD PTR _iResourceQuantity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eResource$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _eNewAlly$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?changeResourceFromMinors@CvPlayer@@QAEXW4ResourceTypes@@H@Z ; CvPlayer::changeResourceFromMinors

; 5643 : 					GetPlayer()->changeResourceExport(eResource, iResourceQuantity);

	mov	edx, DWORD PTR _iResourceQuantity$[ebp]
	push	edx
	mov	eax, DWORD PTR _eResource$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?changeResourceExport@CvPlayer@@QAEXW4ResourceTypes@@H@Z ; CvPlayer::changeResourceExport
$LN6@DoUpdateAl:

; 5644 : 				}
; 5645 : 			}
; 5646 : 		}

	jmp	$LN9@DoUpdateAl
$LN11@DoUpdateAl:

; 5647 : 	}
; 5648 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?DoUpdateAlliesResourceBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@0@Z ENDP ; CvMinorCivAI::DoUpdateAlliesResourceBonus
_TEXT	ENDS
PUBLIC	?GetMostFriendshipWithAnyMajor@CvMinorCivAI@@QAEHAAW4PlayerTypes@@@Z ; CvMinorCivAI::GetMostFriendshipWithAnyMajor
; Function compile flags: /Odtp
;	COMDAT ?GetMostFriendshipWithAnyMajor@CvMinorCivAI@@QAEHAAW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
_iMajorLoop$225611 = -16				; size = 4
_eMajor$ = -12						; size = 4
_iFriendship$ = -8					; size = 4
_iMostFriendship$ = -4					; size = 4
_eBestPlayer$ = 8					; size = 4
?GetMostFriendshipWithAnyMajor@CvMinorCivAI@@QAEHAAW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetMostFriendshipWithAnyMajor, COMDAT
; _this$ = ecx

; 5652 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 5653 : 	int iMostFriendship = 0;

	mov	DWORD PTR _iMostFriendship$[ebp], 0

; 5654 : 	PlayerTypes eMajor;
; 5655 : 
; 5656 : 	int iFriendship;
; 5657 : 
; 5658 : 	for(int iMajorLoop = 0; iMajorLoop < MAX_MAJOR_CIVS; iMajorLoop++)

	mov	DWORD PTR _iMajorLoop$225611[ebp], 0
	jmp	SHORT $LN5@GetMostFri
$LN4@GetMostFri:
	mov	eax, DWORD PTR _iMajorLoop$225611[ebp]
	add	eax, 1
	mov	DWORD PTR _iMajorLoop$225611[ebp], eax
$LN5@GetMostFri:
	cmp	DWORD PTR _iMajorLoop$225611[ebp], 22	; 00000016H
	jge	SHORT $LN3@GetMostFri

; 5659 : 	{
; 5660 : 		eMajor = (PlayerTypes) iMajorLoop;

	mov	ecx, DWORD PTR _iMajorLoop$225611[ebp]
	mov	DWORD PTR _eMajor$[ebp], ecx

; 5661 : 
; 5662 : 		if(IsHasMetPlayer(eMajor))

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsHasMetPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsHasMetPlayer
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@GetMostFri

; 5663 : 		{
; 5664 : 			iFriendship = GetEffectiveFriendshipWithMajor(eMajor);

	mov	ecx, DWORD PTR _eMajor$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajor
	mov	DWORD PTR _iFriendship$[ebp], eax

; 5665 : 
; 5666 : 			if(iFriendship > iMostFriendship)

	mov	edx, DWORD PTR _iFriendship$[ebp]
	cmp	edx, DWORD PTR _iMostFriendship$[ebp]
	jle	SHORT $LN2@GetMostFri

; 5667 : 			{
; 5668 : 				eBestPlayer = eMajor;

	mov	eax, DWORD PTR _eBestPlayer$[ebp]
	mov	ecx, DWORD PTR _eMajor$[ebp]
	mov	DWORD PTR [eax], ecx

; 5669 : 				iMostFriendship = iFriendship;

	mov	edx, DWORD PTR _iFriendship$[ebp]
	mov	DWORD PTR _iMostFriendship$[ebp], edx
$LN2@GetMostFri:

; 5670 : 			}
; 5671 : 		}
; 5672 : 	}

	jmp	SHORT $LN4@GetMostFri
$LN3@GetMostFri:

; 5673 : 
; 5674 : 	return iMostFriendship;

	mov	eax, DWORD PTR _iMostFriendship$[ebp]

; 5675 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetMostFriendshipWithAnyMajor@CvMinorCivAI@@QAEHAAW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetMostFriendshipWithAnyMajor
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ PROC	; CvMinorCivAI::GetAlly, COMDAT
; _this$ = ecx

; 5679 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 5680 : 	return m_eAlly;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+2012]

; 5681 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ENDP	; CvMinorCivAI::GetAlly
_TEXT	ENDS
PUBLIC	??_C@_07KDBKDBJP@SetAlly?$AA@			; `string'
EXTRN	??1CvLuaArgsHandle@@QAE@XZ:PROC			; CvLuaArgsHandle::~CvLuaArgsHandle
EXTRN	?CallHook@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z:PROC ; LuaSupport::CallHook
EXTRN	??0CvLuaArgsHandle@@QAE@XZ:PROC			; CvLuaArgsHandle::CvLuaArgsHandle
EXTRN	?AlliedWithCityState@CvPlayerAchievements@@QAEXW4PlayerTypes@@@Z:PROC ; CvPlayerAchievements::AlliedWithCityState
EXTRN	?DoApplyNewAllyGPBonus@CvPlayer@@QAEXXZ:PROC	; CvPlayer::DoApplyNewAllyGPBonus
EXTRN	?DoSeedGreatPeopleSpawnCounter@CvPlayer@@QAEXXZ:PROC ; CvPlayer::DoSeedGreatPeopleSpawnCounter
EXTRN	?GetGreatPeopleSpawnCounter@CvPlayer@@QAEHXZ:PROC ; CvPlayer::GetGreatPeopleSpawnCounter
EXTRN	?IsMinorGreatPeopleAllies@CvPolicyEntry@@QBE_NXZ:PROC ; CvPolicyEntry::IsMinorGreatPeopleAllies
EXTRN	?IsPolicyBlocked@CvPlayerPolicies@@QBE_NW4PolicyTypes@@@Z:PROC ; CvPlayerPolicies::IsPolicyBlocked
EXTRN	?getPolicyInfo@CvGlobals@@QAEPAVCvPolicyEntry@@W4PolicyTypes@@@Z:PROC ; CvGlobals::getPolicyInfo
EXTRN	?getNumPolicyInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumPolicyInfos
EXTRN	?updateDeferredFog@CvMap@@QAEXXZ:PROC		; CvMap::updateDeferredFog
EXTRN	?changeAdjacentSight@CvPlot@@QAEXW4TeamTypes@@H_NW4InvisibleTypes@@W4DirectionTypes@@1@Z:PROC ; CvPlot::changeAdjacentSight
;	COMDAT ??_C@_07KDBKDBJP@SetAlly?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaargshandle.h
CONST	SEGMENT
??_C@_07KDBKDBJP@SetAlly?$AA@ DB 'SetAlly', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetAlly@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetAlly@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$0
__ehfuncinfo$?SetAlly@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetAlly@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?SetAlly@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
_TEXT	SEGMENT
tv306 = -176						; size = 4
tv299 = -172						; size = 4
tv290 = -168						; size = 4
tv279 = -164						; size = 4
_this$ = -160						; size = 4
$T243077 = -156						; size = 4
$T243065 = -152						; size = 4
$T243058 = -148						; size = 4
$T243051 = -144						; size = 4
$T243050 = -140						; size = 4
$T243038 = -136						; size = 4
$T243023 = -132						; size = 4
$T243022 = -128						; size = 4
$T243005 = -124						; size = 4
$T242996 = -120						; size = 4
$T242986 = -116						; size = 4
$T242982 = -112						; size = 4
$T242970 = -108						; size = 4
$T242966 = -104						; size = 4
$T242957 = -100						; size = 4
$T242944 = -96						; size = 4
_bResult$225672 = -89					; size = 1
_args$225671 = -88					; size = 4
_iTeamLoop$225662 = -84					; size = 4
_kNewAllyTeam$225659 = -80				; size = 4
_kOurTeam$225660 = -76					; size = 4
_kNewAlly$225658 = -72					; size = 4
_eLoopTeam$225661 = -68					; size = 4
_eLoopPolicy$225649 = -64				; size = 4
_pkPolicyInfo$225651 = -60				; size = 4
_iPolicyLoop$225645 = -56				; size = 4
_pPlot$225643 = -52					; size = 4
_iI$225639 = -48					; size = 4
_kNewAlly$225638 = -44					; size = 4
_pPlot$225634 = -40					; size = 4
_iI$225630 = -36					; size = 4
_iPlotVisRange$ = -32					; size = 4
_theMap$ = -28						; size = 4
_iNumPlots$ = -24					; size = 4
_eOldAlly$ = -20					; size = 4
_pkScriptSystem$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_eNewAlly$ = 8						; size = 4
?SetAlly@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z PROC	; CvMinorCivAI::SetAlly, COMDAT
; _this$ = ecx

; 5685 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetAlly@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 164				; 000000a4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 5686 : 	CvAssertMsg(eNewAlly >= NO_PLAYER, "ePlayer is expected to be non-negative (invalid Index)");
; 5687 : 	CvAssertMsg(eNewAlly < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 5688 : 
; 5689 : 	CvMap& theMap = GC.getMap();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR _theMap$[ebp], eax

; 5690 : #ifdef AUI_WARNING_FIXES
; 5691 : 	uint iNumPlots = GC.getMap().numPlots();
; 5692 : #else
; 5693 : 	int iNumPlots = GC.getMap().numPlots();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T242944[ebp], ecx
	mov	edx, DWORD PTR $T242944[ebp]
	mov	eax, DWORD PTR [edx+4028]
	mov	DWORD PTR _iNumPlots$[ebp], eax

; 5694 : #endif
; 5695 : 
; 5696 : 	PlayerTypes eOldAlly = GetAlly();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetAlly
	mov	DWORD PTR _eOldAlly$[ebp], eax

; 5697 : 
; 5698 : 	int iPlotVisRange = GC.getPLOT_VISIBILITY_RANGE();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+6196
	mov	DWORD PTR _iPlotVisRange$[ebp], ecx

; 5699 : 
; 5700 : 	if(eOldAlly != NO_PLAYER)

	cmp	DWORD PTR _eOldAlly$[ebp], -1
	je	$LN26@SetAlly

; 5701 : 	{
; 5702 : #ifdef AUI_WARNING_FIXES
; 5703 : 		for (uint iI = 0; iI < iNumPlots; iI++)
; 5704 : #else
; 5705 : 		for(int iI = 0; iI < iNumPlots; iI++)

	mov	DWORD PTR _iI$225630[ebp], 0
	jmp	SHORT $LN25@SetAlly
$LN24@SetAlly:
	mov	edx, DWORD PTR _iI$225630[ebp]
	add	edx, 1
	mov	DWORD PTR _iI$225630[ebp], edx
$LN25@SetAlly:
	mov	eax, DWORD PTR _iI$225630[ebp]
	cmp	eax, DWORD PTR _iNumPlots$[ebp]
	jge	SHORT $LN23@SetAlly

; 5706 : #endif
; 5707 : 		{
; 5708 : 			CvPlot* pPlot = theMap.plotByIndexUnchecked(iI);

	mov	ecx, DWORD PTR _iI$225630[ebp]
	imul	ecx, 484				; 000001e4H
	mov	edx, DWORD PTR _theMap$[ebp]
	add	ecx, DWORD PTR [edx+4068]
	mov	DWORD PTR _pPlot$225634[ebp], ecx

; 5709 : 			if(pPlot->getOwner() == m_pPlayer->GetID())

	mov	eax, DWORD PTR _pPlot$225634[ebp]
	movsx	ecx, BYTE PTR [eax+4]
	mov	DWORD PTR $T242957[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T242966[ebp], ecx
	mov	edx, DWORD PTR $T242957[ebp]
	cmp	edx, DWORD PTR $T242966[ebp]
	jne	SHORT $LN22@SetAlly

; 5710 : 			{
; 5711 : 				pPlot->changeAdjacentSight(GET_PLAYER(eOldAlly).getTeam(), iPlotVisRange, false, NO_INVISIBLE, NO_DIRECTION, false);

	mov	eax, DWORD PTR _eOldAlly$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242970[ebp], eax
	push	0
	push	-1
	push	-1
	push	0
	mov	ecx, DWORD PTR _iPlotVisRange$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T242970[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _pPlot$225634[ebp]
	call	?changeAdjacentSight@CvPlot@@QAEXW4TeamTypes@@H_NW4InvisibleTypes@@W4DirectionTypes@@1@Z ; CvPlot::changeAdjacentSight
$LN22@SetAlly:

; 5712 : 			}
; 5713 : 		}

	jmp	SHORT $LN24@SetAlly
$LN23@SetAlly:

; 5714 : 		if(eOldAlly == GC.getGame().getActivePlayer())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242982[ebp], ecx
	mov	ecx, DWORD PTR $T242982[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR _eOldAlly$[ebp], eax
	jne	SHORT $LN26@SetAlly

; 5715 : 		{
; 5716 : 			theMap.updateDeferredFog();

	mov	ecx, DWORD PTR _theMap$[ebp]
	call	?updateDeferredFog@CvMap@@QAEXXZ	; CvMap::updateDeferredFog
$LN26@SetAlly:

; 5717 : 		}
; 5718 : 	}
; 5719 : 
; 5720 : 	m_eAlly = eNewAlly;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _eNewAlly$[ebp]
	mov	DWORD PTR [edx+2012], eax

; 5721 : 	m_iTurnAllied = GC.getGame().getGameTurn();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242986[ebp], ecx
	mov	ecx, DWORD PTR $T242986[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+2016], eax

; 5722 : 
; 5723 : 	// Seed the GP counter?
; 5724 : 	if(eNewAlly != NO_PLAYER)

	cmp	DWORD PTR _eNewAlly$[ebp], -1
	je	$LN20@SetAlly

; 5725 : 	{
; 5726 : 		CvPlayerAI& kNewAlly = GET_PLAYER(eNewAlly);

	mov	eax, DWORD PTR _eNewAlly$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kNewAlly$225638[ebp], eax

; 5727 : 
; 5728 : 		// share the visibility with my ally (and his team-mates)
; 5729 : #ifdef AUI_WARNING_FIXES
; 5730 : 		for (uint iI = 0; iI < iNumPlots; iI++)
; 5731 : #else
; 5732 : 		for(int iI = 0; iI < iNumPlots; iI++)

	mov	DWORD PTR _iI$225639[ebp], 0
	jmp	SHORT $LN19@SetAlly
$LN18@SetAlly:
	mov	ecx, DWORD PTR _iI$225639[ebp]
	add	ecx, 1
	mov	DWORD PTR _iI$225639[ebp], ecx
$LN19@SetAlly:
	mov	edx, DWORD PTR _iI$225639[ebp]
	cmp	edx, DWORD PTR _iNumPlots$[ebp]
	jge	SHORT $LN17@SetAlly

; 5733 : #endif
; 5734 : 		{
; 5735 : 			CvPlot* pPlot = theMap.plotByIndexUnchecked(iI);

	mov	eax, DWORD PTR _iI$225639[ebp]
	imul	eax, 484				; 000001e4H
	mov	ecx, DWORD PTR _theMap$[ebp]
	add	eax, DWORD PTR [ecx+4068]
	mov	DWORD PTR _pPlot$225643[ebp], eax

; 5736 : 			if(pPlot->getOwner() == m_pPlayer->GetID())

	mov	edx, DWORD PTR _pPlot$225643[ebp]
	movsx	eax, BYTE PTR [edx+4]
	mov	DWORD PTR $T242996[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T243005[ebp], eax
	mov	ecx, DWORD PTR $T242996[ebp]
	cmp	ecx, DWORD PTR $T243005[ebp]
	jne	SHORT $LN16@SetAlly

; 5737 : 			{
; 5738 : 				pPlot->changeAdjacentSight(kNewAlly.getTeam(), iPlotVisRange, true, NO_INVISIBLE, NO_DIRECTION, false);

	push	0
	push	-1
	push	-1
	push	1
	mov	edx, DWORD PTR _iPlotVisRange$[ebp]
	push	edx
	mov	eax, DWORD PTR _kNewAlly$225638[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _pPlot$225643[ebp]
	call	?changeAdjacentSight@CvPlot@@QAEXW4TeamTypes@@H_NW4InvisibleTypes@@W4DirectionTypes@@1@Z ; CvPlot::changeAdjacentSight
$LN16@SetAlly:

; 5739 : 			}
; 5740 : 		}

	jmp	SHORT $LN18@SetAlly
$LN17@SetAlly:

; 5741 : 
; 5742 : #ifdef AUI_WARNING_FIXES
; 5743 : 		for (uint iPolicyLoop = 0; iPolicyLoop < GC.getNumPolicyInfos(); iPolicyLoop++)
; 5744 : #else
; 5745 : 		for(int iPolicyLoop = 0; iPolicyLoop < GC.getNumPolicyInfos(); iPolicyLoop++)

	mov	DWORD PTR _iPolicyLoop$225645[ebp], 0
	jmp	SHORT $LN15@SetAlly
$LN14@SetAlly:
	mov	edx, DWORD PTR _iPolicyLoop$225645[ebp]
	add	edx, 1
	mov	DWORD PTR _iPolicyLoop$225645[ebp], edx
$LN15@SetAlly:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumPolicyInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumPolicyInfos
	cmp	DWORD PTR _iPolicyLoop$225645[ebp], eax
	jge	$LN13@SetAlly

; 5746 : #endif
; 5747 : 		{
; 5748 : 			const PolicyTypes eLoopPolicy = static_cast<PolicyTypes>(iPolicyLoop);

	mov	eax, DWORD PTR _iPolicyLoop$225645[ebp]
	mov	DWORD PTR _eLoopPolicy$225649[ebp], eax

; 5749 : 			CvPolicyEntry* pkPolicyInfo = GC.getPolicyInfo(eLoopPolicy);

	mov	ecx, DWORD PTR _eLoopPolicy$225649[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getPolicyInfo@CvGlobals@@QAEPAVCvPolicyEntry@@W4PolicyTypes@@@Z ; CvGlobals::getPolicyInfo
	mov	DWORD PTR _pkPolicyInfo$225651[ebp], eax

; 5750 : 			if(pkPolicyInfo)

	cmp	DWORD PTR _pkPolicyInfo$225651[ebp], 0
	je	SHORT $LN12@SetAlly

; 5751 : 			{
; 5752 : 				if(kNewAlly.GetPlayerPolicies()->HasPolicy(eLoopPolicy) && !kNewAlly.GetPlayerPolicies()->IsPolicyBlocked(eLoopPolicy))

	mov	edx, DWORD PTR _eLoopPolicy$225649[ebp]
	push	edx
	mov	ecx, DWORD PTR _kNewAlly$225638[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?HasPolicy@CvPlayerPolicies@@QBE_NW4PolicyTypes@@@Z ; CvPlayerPolicies::HasPolicy
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@SetAlly
	mov	ecx, DWORD PTR _eLoopPolicy$225649[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kNewAlly$225638[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBlocked@CvPlayerPolicies@@QBE_NW4PolicyTypes@@@Z ; CvPlayerPolicies::IsPolicyBlocked
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN12@SetAlly

; 5753 : 				{
; 5754 : 					// This is the policy we want!
; 5755 : 					if(pkPolicyInfo->IsMinorGreatPeopleAllies()) // NQMP GJS - Patronage Finisher reference

	mov	ecx, DWORD PTR _pkPolicyInfo$225651[ebp]
	call	?IsMinorGreatPeopleAllies@CvPolicyEntry@@QBE_NXZ ; CvPolicyEntry::IsMinorGreatPeopleAllies
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@SetAlly

; 5756 : 					{
; 5757 : 						if(kNewAlly.GetGreatPeopleSpawnCounter() <= 0)

	mov	ecx, DWORD PTR _kNewAlly$225638[ebp]
	call	?GetGreatPeopleSpawnCounter@CvPlayer@@QAEHXZ ; CvPlayer::GetGreatPeopleSpawnCounter
	test	eax, eax
	jg	SHORT $LN9@SetAlly

; 5758 : 							kNewAlly.DoSeedGreatPeopleSpawnCounter();

	mov	ecx, DWORD PTR _kNewAlly$225638[ebp]
	call	?DoSeedGreatPeopleSpawnCounter@CvPlayer@@QAEXXZ ; CvPlayer::DoSeedGreatPeopleSpawnCounter

; 5759 : 						else

	jmp	SHORT $LN12@SetAlly
$LN9@SetAlly:

; 5760 : 							kNewAlly.DoApplyNewAllyGPBonus();

	mov	ecx, DWORD PTR _kNewAlly$225638[ebp]
	call	?DoApplyNewAllyGPBonus@CvPlayer@@QAEXXZ	; CvPlayer::DoApplyNewAllyGPBonus
$LN12@SetAlly:

; 5761 : 					}
; 5762 : 				}
; 5763 : 			}
; 5764 : 		}

	jmp	$LN14@SetAlly
$LN13@SetAlly:

; 5765 : 
; 5766 : 		//Achievement Test
; 5767 : 		kNewAlly.GetPlayerAchievements().AlliedWithCityState(GetPlayer()->GetID());;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T243022[ebp], eax
	mov	ecx, DWORD PTR $T243022[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T243023[ebp], edx
	mov	eax, DWORD PTR $T243023[ebp]
	push	eax
	mov	ecx, DWORD PTR _kNewAlly$225638[ebp]
	add	ecx, 63156				; 0000f6b4H
	call	?AlliedWithCityState@CvPlayerAchievements@@QAEXW4PlayerTypes@@@Z ; CvPlayerAchievements::AlliedWithCityState
$LN20@SetAlly:

; 5768 : 	}
; 5769 : 
; 5770 : 	// Alter who gets this guy's resources
; 5771 : 	DoUpdateAlliesResourceBonus(eNewAlly, eOldAlly);

	mov	ecx, DWORD PTR _eOldAlly$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eNewAlly$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoUpdateAlliesResourceBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@0@Z ; CvMinorCivAI::DoUpdateAlliesResourceBonus

; 5772 : 
; 5773 : 	// Declare war on Ally's enemies
; 5774 : 	if(eNewAlly != NO_PLAYER)

	cmp	DWORD PTR _eNewAlly$[ebp], -1
	je	$LN7@SetAlly

; 5775 : 	{
; 5776 : 		CvPlayerAI& kNewAlly = GET_PLAYER(eNewAlly);

	mov	eax, DWORD PTR _eNewAlly$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kNewAlly$225658[ebp], eax

; 5777 : 		CvTeam& kNewAllyTeam = GET_TEAM(kNewAlly.getTeam());

	mov	ecx, DWORD PTR _kNewAlly$225658[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T243038[ebp], eax
	mov	eax, DWORD PTR $T243038[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _kNewAllyTeam$225659[ebp], eax

; 5778 : 		CvTeam& kOurTeam = GET_TEAM(GetPlayer()->getTeam());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T243050[ebp], eax
	mov	ecx, DWORD PTR $T243050[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T243051[ebp], eax
	mov	eax, DWORD PTR $T243051[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _kOurTeam$225660[ebp], eax

; 5779 : 
; 5780 : 		TeamTypes eLoopTeam;
; 5781 : 		for(int iTeamLoop = 0; iTeamLoop < MAX_CIV_TEAMS; iTeamLoop++)

	mov	DWORD PTR _iTeamLoop$225662[ebp], 0
	jmp	SHORT $LN6@SetAlly
$LN5@SetAlly:
	mov	ecx, DWORD PTR _iTeamLoop$225662[ebp]
	add	ecx, 1
	mov	DWORD PTR _iTeamLoop$225662[ebp], ecx
$LN6@SetAlly:
	cmp	DWORD PTR _iTeamLoop$225662[ebp], 63	; 0000003fH
	jge	SHORT $LN7@SetAlly

; 5782 : 		{
; 5783 : 			eLoopTeam = (TeamTypes) iTeamLoop;

	mov	edx, DWORD PTR _iTeamLoop$225662[ebp]
	mov	DWORD PTR _eLoopTeam$225661[ebp], edx

; 5784 : 
; 5785 : 			if(!GET_TEAM(eLoopTeam).isAlive())

	mov	eax, DWORD PTR _eLoopTeam$225661[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T243058[ebp], eax
	mov	ecx, DWORD PTR $T243058[ebp]
	xor	edx, edx
	cmp	DWORD PTR [ecx+12], 0
	setg	dl
	movzx	eax, dl
	test	eax, eax
	jne	SHORT $LN3@SetAlly

; 5786 : 				continue;

	jmp	SHORT $LN5@SetAlly
$LN3@SetAlly:

; 5787 : 
; 5788 : 			if(kNewAllyTeam.isAtWar(eLoopTeam))

	mov	ecx, DWORD PTR _eLoopTeam$225661[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kNewAllyTeam$225659[ebp]
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@SetAlly

; 5789 : 				kOurTeam.declareWar(eLoopTeam);

	push	0
	mov	eax, DWORD PTR _eLoopTeam$225661[ebp]
	push	eax
	mov	ecx, DWORD PTR _kOurTeam$225660[ebp]
	call	?declareWar@CvTeam@@QAEXW4TeamTypes@@_N@Z ; CvTeam::declareWar
$LN2@SetAlly:

; 5790 : 		}

	jmp	SHORT $LN5@SetAlly
$LN7@SetAlly:

; 5791 : 	}
; 5792 : 
; 5793 : 	DoTestEndWarsVSMinors(eOldAlly, eNewAlly);

	mov	ecx, DWORD PTR _eNewAlly$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eOldAlly$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoTestEndWarsVSMinors@CvMinorCivAI@@QAEXW4PlayerTypes@@0@Z ; CvMinorCivAI::DoTestEndWarsVSMinors

; 5794 : 
; 5795 : 	ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	eax, DWORD PTR $T243065[ebp]
	mov	DWORD PTR tv279[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv279[ebp], ecx
	mov	edx, DWORD PTR tv279[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv279[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	DWORD PTR _pkScriptSystem$[ebp], eax

; 5796 : 	if(pkScriptSystem)

	cmp	DWORD PTR _pkScriptSystem$[ebp], 0
	je	$LN27@SetAlly

; 5797 : 	{
; 5798 : 		CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$225671[ebp]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 5799 : 		args->Push(m_pPlayer->GetID());

	mov	eax, DWORD PTR _args$225671[ebp]
	mov	DWORD PTR tv290[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T243077[ebp], eax
	mov	ecx, DWORD PTR $T243077[ebp]
	push	ecx
	mov	edx, DWORD PTR tv290[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv290[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 5800 : 		args->Push(eOldAlly);

	mov	eax, DWORD PTR _args$225671[ebp]
	mov	DWORD PTR tv299[ebp], eax
	mov	ecx, DWORD PTR _eOldAlly$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv299[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv299[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 5801 : 		args->Push(eNewAlly);

	mov	eax, DWORD PTR _args$225671[ebp]
	mov	DWORD PTR tv306[ebp], eax
	mov	ecx, DWORD PTR _eNewAlly$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv306[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv306[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 5802 : 
; 5803 : 		bool bResult;
; 5804 : 		LuaSupport::CallHook(pkScriptSystem, "SetAlly", args.get(), bResult);

	lea	eax, DWORD PTR _bResult$225672[ebp]
	push	eax
	mov	ecx, DWORD PTR _args$225671[ebp]
	push	ecx
	push	OFFSET ??_C@_07KDBKDBJP@SetAlly?$AA@
	mov	edx, DWORD PTR _pkScriptSystem$[ebp]
	push	edx
	call	?CallHook@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z ; LuaSupport::CallHook
	add	esp, 16					; 00000010H

; 5805 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _args$225671[ebp]
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN27@SetAlly:

; 5806 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetAlly@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$0:
	lea	ecx, DWORD PTR _args$225671[ebp]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__ehhandler$?SetAlly@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-168]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetAlly@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetAlly@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ENDP	; CvMinorCivAI::SetAlly
PUBLIC	?GetAlliedTurns@CvMinorCivAI@@QBEHXZ		; CvMinorCivAI::GetAlliedTurns
; Function compile flags: /Odtp
;	COMDAT ?GetAlliedTurns@CvMinorCivAI@@QBEHXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T243098 = -8						; size = 4
_iRtnValue$ = -4					; size = 4
?GetAlliedTurns@CvMinorCivAI@@QBEHXZ PROC		; CvMinorCivAI::GetAlliedTurns, COMDAT
; _this$ = ecx

; 5810 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 5811 : 	int iRtnValue = -1;

	mov	DWORD PTR _iRtnValue$[ebp], -1

; 5812 : 
; 5813 : 	if (m_eAlly != NO_PLAYER)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+2012], -1
	je	SHORT $LN1@GetAlliedT

; 5814 : 	{
; 5815 : 		iRtnValue = GC.getGame().getGameTurn() - m_iTurnAllied;

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T243098[ebp], ecx
	mov	ecx, DWORD PTR $T243098[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	mov	edx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [edx+2016]
	mov	DWORD PTR _iRtnValue$[ebp], eax
$LN1@GetAlliedT:

; 5816 : 	}
; 5817 : 
; 5818 : 	return iRtnValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]

; 5819 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetAlliedTurns@CvMinorCivAI@@QBEHXZ ENDP		; CvMinorCivAI::GetAlliedTurns
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z PROC	; CvMinorCivAI::IsAllies, COMDAT
; _this$ = ecx

; 5823 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 5824 : 	return m_eAlly == ePlayer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+2012]
	xor	eax, eax
	cmp	ecx, DWORD PTR _ePlayer$[ebp]
	sete	al

; 5825 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ENDP	; CvMinorCivAI::IsAllies
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z PROC	; CvMinorCivAI::IsFriends, COMDAT
; _this$ = ecx

; 5829 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 5830 : 	return IsFriendshipAboveFriendsThreshold(GetEffectiveFriendshipWithMajor(ePlayer));

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajor
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriendshipAboveFriendsThreshold@CvMinorCivAI@@QBE_NH@Z ; CvMinorCivAI::IsFriendshipAboveFriendsThreshold

; 5831 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ENDP	; CvMinorCivAI::IsFriends
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsEverFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?IsEverFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::IsEverFriends, COMDAT
; _this$ = ecx

; 5835 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 5836 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 5837 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 5838 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return false;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@IsEverFrie
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN2@IsEverFrie
$LN1@IsEverFrie:
	xor	al, al
	jmp	SHORT $LN3@IsEverFrie
$LN2@IsEverFrie:

; 5839 : 
; 5840 : 	return m_abEverFriends[ePlayer];

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _ePlayer$[ebp]
	mov	al, BYTE PTR [eax+3124]
$LN3@IsEverFrie:

; 5841 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsEverFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::IsEverFriends
_TEXT	ENDS
PUBLIC	?SetEverFriends@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z ; CvMinorCivAI::SetEverFriends
; Function compile flags: /Odtp
;	COMDAT ?SetEverFriends@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
_bValue$ = 12						; size = 1
?SetEverFriends@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z PROC ; CvMinorCivAI::SetEverFriends, COMDAT
; _this$ = ecx

; 5845 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 5846 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 5847 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 5848 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@SetEverFri
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN2@SetEverFri
$LN1@SetEverFri:
	jmp	SHORT $LN3@SetEverFri
$LN2@SetEverFri:

; 5849 : 
; 5850 : 	m_abEverFriends[ePlayer] = bValue;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _ePlayer$[ebp]
	mov	cl, BYTE PTR _bValue$[ebp]
	mov	BYTE PTR [eax+3124], cl
$LN3@SetEverFri:

; 5851 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetEverFriends@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z ENDP ; CvMinorCivAI::SetEverFriends
_TEXT	ENDS
PUBLIC	?IsCloseToNotBeingAllies@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsCloseToNotBeingAllies
; Function compile flags: /Odtp
;	COMDAT ?IsCloseToNotBeingAllies@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T243112 = -8						; size = 4
_iBuffer$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?IsCloseToNotBeingAllies@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::IsCloseToNotBeingAllies, COMDAT
; _this$ = ecx

; 5856 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 5857 : 	int iBuffer = GetEffectiveFriendshipWithMajor(ePlayer) - GetAlliesThreshold();

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajor
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlliesThreshold@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetAlliesThreshold
	sub	esi, eax
	mov	DWORD PTR _iBuffer$[ebp], esi

; 5858 : 
; 5859 : 	if(iBuffer >= 0 && iBuffer < /*8*/ GC.getMINOR_FRIENDSHIP_CLOSE_AMOUNT())

	js	SHORT $LN1@IsCloseToN
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2856
	mov	DWORD PTR $T243112[ebp], ecx
	mov	edx, DWORD PTR _iBuffer$[ebp]
	cmp	edx, DWORD PTR $T243112[ebp]
	jge	SHORT $LN1@IsCloseToN

; 5860 : 		return true;

	mov	al, 1
	jmp	SHORT $LN2@IsCloseToN
$LN1@IsCloseToN:

; 5861 : 
; 5862 : 	return false;

	xor	al, al
$LN2@IsCloseToN:

; 5863 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?IsCloseToNotBeingAllies@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::IsCloseToNotBeingAllies
_TEXT	ENDS
PUBLIC	?IsCloseToNotBeingFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsCloseToNotBeingFriends
; Function compile flags: /Odtp
;	COMDAT ?IsCloseToNotBeingFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T243118 = -8						; size = 4
_iBuffer$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?IsCloseToNotBeingFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::IsCloseToNotBeingFriends, COMDAT
; _this$ = ecx

; 5867 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 5868 : 	int iBuffer = GetEffectiveFriendshipWithMajor(ePlayer) - GetFriendsThreshold();

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajor
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFriendsThreshold@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetFriendsThreshold
	sub	esi, eax
	mov	DWORD PTR _iBuffer$[ebp], esi

; 5869 : 
; 5870 : 	if(iBuffer >= 0 && iBuffer < /*8*/ GC.getMINOR_FRIENDSHIP_CLOSE_AMOUNT())

	js	SHORT $LN1@IsCloseToN@2
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2856
	mov	DWORD PTR $T243118[ebp], ecx
	mov	edx, DWORD PTR _iBuffer$[ebp]
	cmp	edx, DWORD PTR $T243118[ebp]
	jge	SHORT $LN1@IsCloseToN@2

; 5871 : 		return true;

	mov	al, 1
	jmp	SHORT $LN2@IsCloseToN@2
$LN1@IsCloseToN@2:

; 5872 : 
; 5873 : 	return false;

	xor	al, al
$LN2@IsCloseToN@2:

; 5874 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?IsCloseToNotBeingFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::IsCloseToNotBeingFriends
_TEXT	ENDS
PUBLIC	?GetFriendshipLevelWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetFriendshipLevelWithMajor
; Function compile flags: /Odtp
;	COMDAT ?GetFriendshipLevelWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetFriendshipLevelWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetFriendshipLevelWithMajor, COMDAT
; _this$ = ecx

; 5878 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 5879 : 	if(IsAllies(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAllies
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@GetFriends@3

; 5880 : 	{
; 5881 : 		return 2;

	mov	eax, 2
	jmp	SHORT $LN4@GetFriends@3
	jmp	SHORT $LN2@GetFriends@3
$LN3@GetFriends@3:

; 5882 : 	}
; 5883 : 	else if(IsFriends(ePlayer))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@GetFriends@3

; 5884 : 	{
; 5885 : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN4@GetFriends@3
$LN2@GetFriends@3:

; 5886 : 	}
; 5887 : 
; 5888 : 	return 0;

	xor	eax, eax
$LN4@GetFriends@3:

; 5889 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetFriendshipLevelWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetFriendshipLevelWithMajor
_TEXT	ENDS
PUBLIC	?GetFriendshipNeededForNextLevel@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetFriendshipNeededForNextLevel
; Function compile flags: /Odtp
;	COMDAT ?GetFriendshipNeededForNextLevel@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetFriendshipNeededForNextLevel@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetFriendshipNeededForNextLevel, COMDAT
; _this$ = ecx

; 5894 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 5895 : 	if(!IsFriends(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@GetFriends@4

; 5896 : 	{
; 5897 : 		return GetFriendsThreshold();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFriendsThreshold@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetFriendsThreshold
	jmp	SHORT $LN4@GetFriends@4
	jmp	SHORT $LN2@GetFriends@4
$LN3@GetFriends@4:

; 5898 : 	}
; 5899 : 	else if(!IsAllies(ePlayer))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAllies
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@GetFriends@4

; 5900 : 	{
; 5901 : 		return GetAlliesThreshold();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlliesThreshold@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetAlliesThreshold
	jmp	SHORT $LN4@GetFriends@4
$LN2@GetFriends@4:

; 5902 : 	}
; 5903 : 
; 5904 : 	return 0;

	xor	eax, eax
$LN4@GetFriends@4:

; 5905 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetFriendshipNeededForNextLevel@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetFriendshipNeededForNextLevel
_TEXT	ENDS
PUBLIC	??_C@_0BD@MIOPMCJN@MinorAlliesChanged?$AA@	; `string'
PUBLIC	??_C@_0BF@FAPEFALO@GAMEOPTION_AI_TWEAKS?$AA@	; `string'
PUBLIC	??_C@_0BE@PIBKCDA@MinorFriendsChanged?$AA@	; `string'
EXTRN	?isOption@CvGame@@QBE_NPBD@Z:PROC		; CvGame::isOption
;	COMDAT ??_C@_0BD@MIOPMCJN@MinorAlliesChanged?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaargshandle.h
CONST	SEGMENT
??_C@_0BD@MIOPMCJN@MinorAlliesChanged?$AA@ DB 'MinorAlliesChanged', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FAPEFALO@GAMEOPTION_AI_TWEAKS?$AA@
CONST	SEGMENT
??_C@_0BF@FAPEFALO@GAMEOPTION_AI_TWEAKS?$AA@ DB 'GAMEOPTION_AI_TWEAKS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PIBKCDA@MinorFriendsChanged?$AA@
CONST	SEGMENT
??_C@_0BE@PIBKCDA@MinorFriendsChanged?$AA@ DB 'MinorFriendsChanged', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z$6
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z
_TEXT	SEGMENT
tv524 = -468						; size = 4
tv517 = -464						; size = 4
tv510 = -460						; size = 4
tv503 = -456						; size = 4
tv494 = -452						; size = 4
tv483 = -448						; size = 4
tv429 = -444						; size = 4
tv422 = -440						; size = 4
tv415 = -436						; size = 4
tv408 = -432						; size = 4
tv399 = -428						; size = 4
tv388 = -424						; size = 4
tv366 = -420						; size = 4
tv359 = -416						; size = 4
tv352 = -412						; size = 4
tv345 = -408						; size = 4
tv336 = -404						; size = 4
tv325 = -400						; size = 4
tv272 = -396						; size = 4
tv265 = -392						; size = 4
tv258 = -388						; size = 4
tv251 = -384						; size = 4
tv242 = -380						; size = 4
tv231 = -376						; size = 4
tv173 = -372						; size = 4
tv166 = -368						; size = 4
tv159 = -364						; size = 4
tv152 = -360						; size = 4
tv143 = -356						; size = 4
tv132 = -352						; size = 4
_this$ = -348						; size = 4
$T243330 = -344						; size = 4
$T243318 = -340						; size = 4
$T243299 = -336						; size = 4
$T243287 = -332						; size = 4
$T243268 = -328						; size = 4
$T243256 = -324						; size = 4
$T243252 = -320						; size = 4
$T243248 = -316						; size = 4
$T243229 = -312						; size = 4
$T243217 = -308						; size = 4
$T243210 = -304						; size = 4
$T243206 = -300						; size = 4
$T243189 = -296						; size = 4
$T243188 = -292						; size = 4
$T243176 = -288						; size = 4
$T243157 = -284						; size = 4
$T243145 = -280						; size = 4
$T243141 = -273						; size = 1
$T243140 = -272						; size = 4
_bResult$225785 = -265					; size = 1
_args$225784 = -264					; size = 4
_pkScriptSystem$225782 = -260				; size = 4
_bResult$225779 = -253					; size = 1
_args$225778 = -252					; size = 4
_pkScriptSystem$225776 = -248				; size = 4
_bResult$225772 = -241					; size = 1
_args$225771 = -240					; size = 4
_pkScriptSystem$225769 = -236				; size = 4
_bResult$225759 = -229					; size = 1
_args$225758 = -228					; size = 4
_eOurTeam$225754 = -224					; size = 4
_eAllyTeam$225753 = -220				; size = 4
_ePlayerTeam$225752 = -216				; size = 4
_pkScriptSystem$225756 = -212				; size = 4
_bResult$225747 = -205					; size = 1
_args$225746 = -204					; size = 4
_pkScriptSystem$225744 = -200				; size = 4
_bWasAboveFriendsThreshold$ = -193			; size = 1
_bNowAboveFriendsThreshold$ = -192			; size = 1
_bAllies$ = -191					; size = 1
_bNowAboveAlliesThreshold$ = -190			; size = 1
_bFriends$ = -189					; size = 1
_strMessage$ = -188					; size = 80
_bWasAboveAlliesThreshold$ = -101			; size = 1
_strSummary$ = -100					; size = 80
_bAdd$ = -17						; size = 1
_eOldAlly$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
_iOldFriendship$ = 12					; size = 4
_iNewFriendship$ = 16					; size = 4
_bFromQuest$ = 20					; size = 1
_bIgnoreMinorDeath$ = 24				; size = 1
?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z PROC ; CvMinorCivAI::DoFriendshipChangeEffects, COMDAT
; _this$ = ecx

; 5909 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 456				; 000001c8H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 5910 : 	// Can't give out bonuses if we're dead!
; 5911 : 	if(!bIgnoreMinorDeath && !GetPlayer()->isAlive())

	movzx	eax, BYTE PTR _bIgnoreMinorDeath$[ebp]
	test	eax, eax
	jne	SHORT $LN26@DoFriendsh@2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T243140[ebp], eax
	mov	ecx, DWORD PTR $T243140[ebp]
	mov	dl, BYTE PTR [ecx+2256]
	mov	BYTE PTR $T243141[ebp], dl
	movzx	eax, BYTE PTR $T243141[ebp]
	test	eax, eax
	jne	SHORT $LN26@DoFriendsh@2

; 5912 : 		return;

	jmp	$LN27@DoFriendsh@2
$LN26@DoFriendsh@2:

; 5913 : 
; 5914 : 	Localization::String strMessage;

	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 5915 : 	Localization::String strSummary;

	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 5916 : 
; 5917 : 	bool bAdd = false;

	mov	BYTE PTR _bAdd$[ebp], 0

; 5918 : 	bool bFriends = false;

	mov	BYTE PTR _bFriends$[ebp], 0

; 5919 : 	bool bAllies = false;

	mov	BYTE PTR _bAllies$[ebp], 0

; 5920 : 
; 5921 : 	bool bWasAboveFriendsThreshold = IsFriendshipAboveFriendsThreshold(iOldFriendship);

	mov	ecx, DWORD PTR _iOldFriendship$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriendshipAboveFriendsThreshold@CvMinorCivAI@@QBE_NH@Z ; CvMinorCivAI::IsFriendshipAboveFriendsThreshold
	mov	BYTE PTR _bWasAboveFriendsThreshold$[ebp], al

; 5922 : 	bool bNowAboveFriendsThreshold = IsFriendshipAboveFriendsThreshold(iNewFriendship);

	mov	edx, DWORD PTR _iNewFriendship$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriendshipAboveFriendsThreshold@CvMinorCivAI@@QBE_NH@Z ; CvMinorCivAI::IsFriendshipAboveFriendsThreshold
	mov	BYTE PTR _bNowAboveFriendsThreshold$[ebp], al

; 5923 : 
; 5924 : 	// If we are Friends now, mark that we've been Friends at least once this game
; 5925 : 	if(bNowAboveFriendsThreshold)

	movzx	eax, BYTE PTR _bNowAboveFriendsThreshold$[ebp]
	test	eax, eax
	je	SHORT $LN25@DoFriendsh@2

; 5926 : 		SetEverFriends(ePlayer, true);

	push	1
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEverFriends@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z ; CvMinorCivAI::SetEverFriends
$LN25@DoFriendsh@2:

; 5927 : 
; 5928 : 	// Add Friends Bonus
; 5929 : 	if(!bWasAboveFriendsThreshold && bNowAboveFriendsThreshold)

	movzx	edx, BYTE PTR _bWasAboveFriendsThreshold$[ebp]
	test	edx, edx
	jne	$LN24@DoFriendsh@2
	movzx	eax, BYTE PTR _bNowAboveFriendsThreshold$[ebp]
	test	eax, eax
	je	$LN24@DoFriendsh@2

; 5930 : 	{
; 5931 : 		bAdd = true;

	mov	BYTE PTR _bAdd$[ebp], 1

; 5932 : 		bFriends = true;

	mov	BYTE PTR _bFriends$[ebp], 1

; 5933 : 
; 5934 : 		ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	ecx, DWORD PTR $T243145[ebp]
	mov	DWORD PTR tv132[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv132[ebp], edx
	mov	eax, DWORD PTR tv132[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv132[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR _pkScriptSystem$225744[ebp], eax

; 5935 : 		if (pkScriptSystem) 

	cmp	DWORD PTR _pkScriptSystem$225744[ebp], 0
	je	$LN23@DoFriendsh@2

; 5936 : 		{
; 5937 : 			CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$225746[ebp]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 5938 : 			args->Push(m_pPlayer->GetID());

	mov	ecx, DWORD PTR _args$225746[ebp]
	mov	DWORD PTR tv143[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T243157[ebp], ecx
	mov	edx, DWORD PTR $T243157[ebp]
	push	edx
	mov	eax, DWORD PTR tv143[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv143[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 5939 : 			args->Push(ePlayer);

	mov	ecx, DWORD PTR _args$225746[ebp]
	mov	DWORD PTR tv152[ebp], ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	eax, DWORD PTR tv152[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv152[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 5940 : 			args->Push(true);

	mov	ecx, DWORD PTR _args$225746[ebp]
	mov	DWORD PTR tv159[ebp], ecx
	push	1
	mov	edx, DWORD PTR tv159[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv159[ebp]
	mov	edx, DWORD PTR [eax+16]
	call	edx

; 5941 : 			args->Push(iOldFriendship);

	mov	eax, DWORD PTR _args$225746[ebp]
	mov	DWORD PTR tv166[ebp], eax
	mov	ecx, DWORD PTR _iOldFriendship$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv166[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv166[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 5942 : 			args->Push(iNewFriendship);

	mov	eax, DWORD PTR _args$225746[ebp]
	mov	DWORD PTR tv173[ebp], eax
	mov	ecx, DWORD PTR _iNewFriendship$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv173[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv173[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 5943 : 
; 5944 : 			bool bResult;
; 5945 : 			LuaSupport::CallHook(pkScriptSystem, "MinorFriendsChanged", args.get(), bResult);

	lea	eax, DWORD PTR _bResult$225747[ebp]
	push	eax
	mov	ecx, DWORD PTR _args$225746[ebp]
	push	ecx
	push	OFFSET ??_C@_0BE@PIBKCDA@MinorFriendsChanged?$AA@
	mov	edx, DWORD PTR _pkScriptSystem$225744[ebp]
	push	edx
	call	?CallHook@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z ; LuaSupport::CallHook
	add	esp, 16					; 00000010H

; 5946 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _args$225746[ebp]
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN23@DoFriendsh@2:

; 5947 : 	}

	jmp	$LN22@DoFriendsh@2
$LN24@DoFriendsh@2:

; 5948 : 	// Remove Friends bonus
; 5949 : 	else if(bWasAboveFriendsThreshold && !bNowAboveFriendsThreshold)

	movzx	eax, BYTE PTR _bWasAboveFriendsThreshold$[ebp]
	test	eax, eax
	je	$LN22@DoFriendsh@2
	movzx	ecx, BYTE PTR _bNowAboveFriendsThreshold$[ebp]
	test	ecx, ecx
	jne	$LN22@DoFriendsh@2

; 5950 : 	{
; 5951 : 		bAdd = false;

	mov	BYTE PTR _bAdd$[ebp], 0

; 5952 : 		bFriends = true;

	mov	BYTE PTR _bFriends$[ebp], 1

; 5953 : 
; 5954 : #ifdef NQ_POLICY_TOGGLE_NO_MINOR_DOW_IF_FRIENDS
; 5955 : 		// if we are at war with a city state's ally but it didn't declare on us because we were friends and had a special policy 
; 5956 : 		// preventing that declaration, declare war here
; 5957 : 
; 5958 : 		if (GetAlly() != NO_PLAYER)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetAlly
	cmp	eax, -1
	je	$LN20@DoFriendsh@2

; 5959 : 		{
; 5960 : 			TeamTypes ePlayerTeam = GET_PLAYER(ePlayer).getTeam();

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T243176[ebp], edx
	mov	eax, DWORD PTR $T243176[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR _ePlayerTeam$225752[ebp], eax

; 5961 : 			TeamTypes eAllyTeam = GET_PLAYER(GetAlly()).getTeam();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetAlly
	mov	DWORD PTR $T243188[ebp], eax
	mov	edx, DWORD PTR $T243188[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T243189[ebp], edx
	mov	eax, DWORD PTR $T243189[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR _eAllyTeam$225753[ebp], eax

; 5962 : 			TeamTypes eOurTeam = GetPlayer()->getTeam();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T243206[ebp], eax
	mov	edx, DWORD PTR $T243206[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR _eOurTeam$225754[ebp], eax

; 5963 : 			if (GET_TEAM(ePlayerTeam).isAtWar(eAllyTeam))

	mov	ecx, DWORD PTR _ePlayerTeam$225752[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T243210[ebp], ecx
	mov	edx, DWORD PTR _eAllyTeam$225753[ebp]
	push	edx
	mov	ecx, DWORD PTR $T243210[ebp]
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@DoFriendsh@2

; 5964 : 			{
; 5965 : 				GET_TEAM(eOurTeam).declareWar(ePlayerTeam);

	push	0
	mov	ecx, DWORD PTR _ePlayerTeam$225752[ebp]
	push	ecx
	mov	ecx, DWORD PTR _eOurTeam$225754[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	call	?declareWar@CvTeam@@QAEXW4TeamTypes@@_N@Z ; CvTeam::declareWar
$LN20@DoFriendsh@2:

; 5966 : 			}
; 5967 : 		}
; 5968 : #endif
; 5969 : 
; 5970 : 		ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	edx, DWORD PTR $T243217[ebp]
	mov	DWORD PTR tv231[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv231[ebp], eax
	mov	ecx, DWORD PTR tv231[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv231[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR _pkScriptSystem$225756[ebp], eax

; 5971 : 		if (pkScriptSystem) 

	cmp	DWORD PTR _pkScriptSystem$225756[ebp], 0
	je	$LN22@DoFriendsh@2

; 5972 : 		{
; 5973 : 			CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$225758[ebp]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 5974 : 			args->Push(m_pPlayer->GetID());

	mov	ecx, DWORD PTR _args$225758[ebp]
	mov	DWORD PTR tv242[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T243229[ebp], ecx
	mov	edx, DWORD PTR $T243229[ebp]
	push	edx
	mov	eax, DWORD PTR tv242[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv242[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 5975 : 			args->Push(ePlayer);

	mov	ecx, DWORD PTR _args$225758[ebp]
	mov	DWORD PTR tv251[ebp], ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	eax, DWORD PTR tv251[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv251[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 5976 : 			args->Push(false);

	mov	ecx, DWORD PTR _args$225758[ebp]
	mov	DWORD PTR tv258[ebp], ecx
	push	0
	mov	edx, DWORD PTR tv258[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv258[ebp]
	mov	edx, DWORD PTR [eax+16]
	call	edx

; 5977 : 			args->Push(iOldFriendship);

	mov	eax, DWORD PTR _args$225758[ebp]
	mov	DWORD PTR tv265[ebp], eax
	mov	ecx, DWORD PTR _iOldFriendship$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv265[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv265[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 5978 : 			args->Push(iNewFriendship);

	mov	eax, DWORD PTR _args$225758[ebp]
	mov	DWORD PTR tv272[ebp], eax
	mov	ecx, DWORD PTR _iNewFriendship$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv272[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv272[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 5979 : 
; 5980 : 			bool bResult;
; 5981 : 			LuaSupport::CallHook(pkScriptSystem, "MinorFriendsChanged", args.get(), bResult);

	lea	eax, DWORD PTR _bResult$225759[ebp]
	push	eax
	mov	ecx, DWORD PTR _args$225758[ebp]
	push	ecx
	push	OFFSET ??_C@_0BE@PIBKCDA@MinorFriendsChanged?$AA@
	mov	edx, DWORD PTR _pkScriptSystem$225756[ebp]
	push	edx
	call	?CallHook@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z ; LuaSupport::CallHook
	add	esp, 16					; 00000010H

; 5982 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _args$225758[ebp]
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN22@DoFriendsh@2:

; 5983 : 	}
; 5984 : 
; 5985 : 	// Resolve Allies status
; 5986 : 	bool bWasAboveAlliesThreshold = IsFriendshipAboveAlliesThreshold(iOldFriendship);

	mov	eax, DWORD PTR _iOldFriendship$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriendshipAboveAlliesThreshold@CvMinorCivAI@@QBE_NH@Z ; CvMinorCivAI::IsFriendshipAboveAlliesThreshold
	mov	BYTE PTR _bWasAboveAlliesThreshold$[ebp], al

; 5987 : 	bool bNowAboveAlliesThreshold = IsFriendshipAboveAlliesThreshold(iNewFriendship);

	mov	ecx, DWORD PTR _iNewFriendship$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriendshipAboveAlliesThreshold@CvMinorCivAI@@QBE_NH@Z ; CvMinorCivAI::IsFriendshipAboveAlliesThreshold
	mov	BYTE PTR _bNowAboveAlliesThreshold$[ebp], al

; 5988 : 
; 5989 : 	PlayerTypes eOldAlly = GetAlly();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetAlly
	mov	DWORD PTR _eOldAlly$[ebp], eax

; 5990 : #ifdef NO_AI_ALLYING_CS
; 5991 : 	if (GET_PLAYER(ePlayer).isHuman() || !GC.getGame().isOption("GAMEOPTION_AI_TWEAKS"))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T243248[ebp], edx
	mov	ecx, DWORD PTR $T243248[ebp]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN16@DoFriendsh@2
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T243252[ebp], ecx
	push	OFFSET ??_C@_0BF@FAPEFALO@GAMEOPTION_AI_TWEAKS?$AA@
	mov	ecx, DWORD PTR $T243252[ebp]
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	movzx	edx, al
	test	edx, edx
	jne	$LN17@DoFriendsh@2
$LN16@DoFriendsh@2:

; 5992 : 	{
; 5993 : #endif
; 5994 : 
; 5995 : 	// No old ally and our friendship is now above the threshold, OR our friendship is now higher than a previous ally
; 5996 : 	if((eOldAlly == NO_PLAYER && bNowAboveAlliesThreshold)
; 5997 : 	        || (eOldAlly != NO_PLAYER && GetEffectiveFriendshipWithMajor(ePlayer) > GetEffectiveFriendshipWithMajor(eOldAlly)))

	cmp	DWORD PTR _eOldAlly$[ebp], -1
	jne	SHORT $LN13@DoFriendsh@2
	movzx	eax, BYTE PTR _bNowAboveAlliesThreshold$[ebp]
	test	eax, eax
	jne	SHORT $LN14@DoFriendsh@2
$LN13@DoFriendsh@2:
	cmp	DWORD PTR _eOldAlly$[ebp], -1
	je	$LN15@DoFriendsh@2
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajor
	mov	esi, eax
	mov	edx, DWORD PTR _eOldAlly$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajor
	cmp	esi, eax
	jle	$LN15@DoFriendsh@2
$LN14@DoFriendsh@2:

; 5998 : 	{
; 5999 : 		bAdd = true;

	mov	BYTE PTR _bAdd$[ebp], 1

; 6000 : 		bAllies = true;

	mov	BYTE PTR _bAllies$[ebp], 1

; 6001 : 
; 6002 : 		ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	eax, DWORD PTR $T243256[ebp]
	mov	DWORD PTR tv325[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv325[ebp], ecx
	mov	edx, DWORD PTR tv325[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv325[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	DWORD PTR _pkScriptSystem$225769[ebp], eax

; 6003 : 		if (pkScriptSystem) 

	cmp	DWORD PTR _pkScriptSystem$225769[ebp], 0
	je	$LN12@DoFriendsh@2

; 6004 : 		{
; 6005 : 			CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$225771[ebp]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 6006 : 			args->Push(m_pPlayer->GetID());

	mov	eax, DWORD PTR _args$225771[ebp]
	mov	DWORD PTR tv336[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T243268[ebp], eax
	mov	ecx, DWORD PTR $T243268[ebp]
	push	ecx
	mov	edx, DWORD PTR tv336[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv336[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 6007 : 			args->Push(ePlayer);

	mov	eax, DWORD PTR _args$225771[ebp]
	mov	DWORD PTR tv345[ebp], eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv345[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv345[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 6008 : 			args->Push(true);

	mov	eax, DWORD PTR _args$225771[ebp]
	mov	DWORD PTR tv352[ebp], eax
	push	1
	mov	ecx, DWORD PTR tv352[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv352[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax

; 6009 : 			args->Push(iOldFriendship);

	mov	ecx, DWORD PTR _args$225771[ebp]
	mov	DWORD PTR tv359[ebp], ecx
	mov	edx, DWORD PTR _iOldFriendship$[ebp]
	push	edx
	mov	eax, DWORD PTR tv359[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv359[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 6010 : 			args->Push(iNewFriendship);

	mov	ecx, DWORD PTR _args$225771[ebp]
	mov	DWORD PTR tv366[ebp], ecx
	mov	edx, DWORD PTR _iNewFriendship$[ebp]
	push	edx
	mov	eax, DWORD PTR tv366[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv366[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 6011 : 
; 6012 : 			bool bResult;
; 6013 : 			LuaSupport::CallHook(pkScriptSystem, "MinorAlliesChanged", args.get(), bResult);

	lea	ecx, DWORD PTR _bResult$225772[ebp]
	push	ecx
	mov	edx, DWORD PTR _args$225771[ebp]
	push	edx
	push	OFFSET ??_C@_0BD@MIOPMCJN@MinorAlliesChanged?$AA@
	mov	eax, DWORD PTR _pkScriptSystem$225769[ebp]
	push	eax
	call	?CallHook@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z ; LuaSupport::CallHook
	add	esp, 16					; 00000010H

; 6014 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _args$225771[ebp]
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN12@DoFriendsh@2:

; 6015 : 	}

	jmp	$LN11@DoFriendsh@2
$LN15@DoFriendsh@2:

; 6016 : 	// Remove Allies bonus
; 6017 : 	else if(eOldAlly == ePlayer && bWasAboveAlliesThreshold && !bNowAboveAlliesThreshold)

	mov	ecx, DWORD PTR _eOldAlly$[ebp]
	cmp	ecx, DWORD PTR _ePlayer$[ebp]
	jne	$LN11@DoFriendsh@2
	movzx	edx, BYTE PTR _bWasAboveAlliesThreshold$[ebp]
	test	edx, edx
	je	$LN11@DoFriendsh@2
	movzx	eax, BYTE PTR _bNowAboveAlliesThreshold$[ebp]
	test	eax, eax
	jne	$LN11@DoFriendsh@2

; 6018 : 	{
; 6019 : 		bAdd = false;

	mov	BYTE PTR _bAdd$[ebp], 0

; 6020 : 		bAllies = true;

	mov	BYTE PTR _bAllies$[ebp], 1

; 6021 : 
; 6022 : 		ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	ecx, DWORD PTR $T243287[ebp]
	mov	DWORD PTR tv388[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv388[ebp], edx
	mov	eax, DWORD PTR tv388[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv388[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR _pkScriptSystem$225776[ebp], eax

; 6023 : 		if (pkScriptSystem)

	cmp	DWORD PTR _pkScriptSystem$225776[ebp], 0
	je	$LN11@DoFriendsh@2

; 6024 : 		{
; 6025 : 			CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$225778[ebp]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle
	mov	BYTE PTR __$EHRec$[ebp+8], 5

; 6026 : 			args->Push(m_pPlayer->GetID());

	mov	ecx, DWORD PTR _args$225778[ebp]
	mov	DWORD PTR tv399[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T243299[ebp], ecx
	mov	edx, DWORD PTR $T243299[ebp]
	push	edx
	mov	eax, DWORD PTR tv399[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv399[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 6027 : 			args->Push(ePlayer);

	mov	ecx, DWORD PTR _args$225778[ebp]
	mov	DWORD PTR tv408[ebp], ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	eax, DWORD PTR tv408[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv408[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 6028 : 			args->Push(false);

	mov	ecx, DWORD PTR _args$225778[ebp]
	mov	DWORD PTR tv415[ebp], ecx
	push	0
	mov	edx, DWORD PTR tv415[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv415[ebp]
	mov	edx, DWORD PTR [eax+16]
	call	edx

; 6029 : 			args->Push(iOldFriendship);

	mov	eax, DWORD PTR _args$225778[ebp]
	mov	DWORD PTR tv422[ebp], eax
	mov	ecx, DWORD PTR _iOldFriendship$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv422[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv422[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 6030 : 			args->Push(iNewFriendship);

	mov	eax, DWORD PTR _args$225778[ebp]
	mov	DWORD PTR tv429[ebp], eax
	mov	ecx, DWORD PTR _iNewFriendship$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv429[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv429[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 6031 : 
; 6032 : 			bool bResult;
; 6033 : 			LuaSupport::CallHook(pkScriptSystem, "MinorAlliesChanged", args.get(), bResult);

	lea	eax, DWORD PTR _bResult$225779[ebp]
	push	eax
	mov	ecx, DWORD PTR _args$225778[ebp]
	push	ecx
	push	OFFSET ??_C@_0BD@MIOPMCJN@MinorAlliesChanged?$AA@
	mov	edx, DWORD PTR _pkScriptSystem$225776[ebp]
	push	edx
	call	?CallHook@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z ; LuaSupport::CallHook
	add	esp, 16					; 00000010H

; 6034 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _args$225778[ebp]
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN11@DoFriendsh@2:

; 6035 : 
; 6036 : 	}
; 6037 : #ifdef NO_AI_ALLYING_CS
; 6038 : 	}
; 6039 : 	else

	jmp	$LN8@DoFriendsh@2
$LN17@DoFriendsh@2:

; 6040 : 	{
; 6041 : 	if(eOldAlly == ePlayer && bWasAboveAlliesThreshold && !bNowAboveAlliesThreshold)

	mov	eax, DWORD PTR _eOldAlly$[ebp]
	cmp	eax, DWORD PTR _ePlayer$[ebp]
	jne	$LN8@DoFriendsh@2
	movzx	ecx, BYTE PTR _bWasAboveAlliesThreshold$[ebp]
	test	ecx, ecx
	je	$LN8@DoFriendsh@2
	movzx	edx, BYTE PTR _bNowAboveAlliesThreshold$[ebp]
	test	edx, edx
	jne	$LN8@DoFriendsh@2

; 6042 : 	{
; 6043 : 		bAdd = false;

	mov	BYTE PTR _bAdd$[ebp], 0

; 6044 : 		bAllies = true;

	mov	BYTE PTR _bAllies$[ebp], 1

; 6045 : 
; 6046 : 		ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	eax, DWORD PTR $T243318[ebp]
	mov	DWORD PTR tv483[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv483[ebp], ecx
	mov	edx, DWORD PTR tv483[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv483[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	DWORD PTR _pkScriptSystem$225782[ebp], eax

; 6047 : 		if (pkScriptSystem)

	cmp	DWORD PTR _pkScriptSystem$225782[ebp], 0
	je	$LN8@DoFriendsh@2

; 6048 : 		{
; 6049 : 			CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$225784[ebp]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle
	mov	BYTE PTR __$EHRec$[ebp+8], 6

; 6050 : 			args->Push(m_pPlayer->GetID());

	mov	eax, DWORD PTR _args$225784[ebp]
	mov	DWORD PTR tv494[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T243330[ebp], eax
	mov	ecx, DWORD PTR $T243330[ebp]
	push	ecx
	mov	edx, DWORD PTR tv494[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv494[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 6051 : 			args->Push(ePlayer);

	mov	eax, DWORD PTR _args$225784[ebp]
	mov	DWORD PTR tv503[ebp], eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv503[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv503[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 6052 : 			args->Push(false);

	mov	eax, DWORD PTR _args$225784[ebp]
	mov	DWORD PTR tv510[ebp], eax
	push	0
	mov	ecx, DWORD PTR tv510[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv510[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax

; 6053 : 			args->Push(iOldFriendship);

	mov	ecx, DWORD PTR _args$225784[ebp]
	mov	DWORD PTR tv517[ebp], ecx
	mov	edx, DWORD PTR _iOldFriendship$[ebp]
	push	edx
	mov	eax, DWORD PTR tv517[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv517[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 6054 : 			args->Push(iNewFriendship);

	mov	ecx, DWORD PTR _args$225784[ebp]
	mov	DWORD PTR tv524[ebp], ecx
	mov	edx, DWORD PTR _iNewFriendship$[ebp]
	push	edx
	mov	eax, DWORD PTR tv524[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv524[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 6055 : 
; 6056 : 			bool bResult;
; 6057 : 			LuaSupport::CallHook(pkScriptSystem, "MinorAlliesChanged", args.get(), bResult);

	lea	ecx, DWORD PTR _bResult$225785[ebp]
	push	ecx
	mov	edx, DWORD PTR _args$225784[ebp]
	push	edx
	push	OFFSET ??_C@_0BD@MIOPMCJN@MinorAlliesChanged?$AA@
	mov	eax, DWORD PTR _pkScriptSystem$225782[ebp]
	push	eax
	call	?CallHook@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z ; LuaSupport::CallHook
	add	esp, 16					; 00000010H

; 6058 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _args$225784[ebp]
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN8@DoFriendsh@2:

; 6059 : 	}
; 6060 : 	}
; 6061 : #endif
; 6062 : 
; 6063 : 	// Make changes to bonuses here. Only send notifications if this change is not related to quests (otherwise it is rolled into quest notification)
; 6064 : 	if(bFriends || bAllies)

	movzx	ecx, BYTE PTR _bFriends$[ebp]
	test	ecx, ecx
	jne	SHORT $LN4@DoFriendsh@2
	movzx	edx, BYTE PTR _bAllies$[ebp]
	test	edx, edx
	je	SHORT $LN5@DoFriendsh@2
$LN4@DoFriendsh@2:

; 6065 : 		DoSetBonus(ePlayer, bAdd, bFriends, bAllies, /*bSuppressNotifications*/ bFromQuest);

	push	-1
	push	0
	movzx	eax, BYTE PTR _bFromQuest$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bAllies$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bFriends$[ebp]
	push	edx
	movzx	eax, BYTE PTR _bAdd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z ; CvMinorCivAI::DoSetBonus
$LN5@DoFriendsh@2:

; 6066 : 
; 6067 : 	// Now actually changed Allied status, since we needed the old player in effect to create the notifications in the function above us
; 6068 : 	if(bAllies)

	movzx	edx, BYTE PTR _bAllies$[ebp]
	test	edx, edx
	je	SHORT $LN3@DoFriendsh@2

; 6069 : 	{
; 6070 : 		if(bAdd)

	movzx	eax, BYTE PTR _bAdd$[ebp]
	test	eax, eax
	je	SHORT $LN2@DoFriendsh@2

; 6071 : 			SetAlly(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetAlly@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ; CvMinorCivAI::SetAlly

; 6072 : 		else

	jmp	SHORT $LN3@DoFriendsh@2
$LN2@DoFriendsh@2:

; 6073 : 			SetAlly(NO_PLAYER);	// We KNOW no one else can be higher, so set the Ally to NO_PLAYER

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetAlly@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ; CvMinorCivAI::SetAlly
$LN3@DoFriendsh@2:

; 6074 : 	}
; 6075 : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN27@DoFriendsh@2:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z$0:
	lea	ecx, DWORD PTR _strMessage$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z$1:
	lea	ecx, DWORD PTR _strSummary$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z$2:
	lea	ecx, DWORD PTR _args$225746[ebp]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__unwindfunclet$?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z$3:
	lea	ecx, DWORD PTR _args$225758[ebp]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__unwindfunclet$?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z$4:
	lea	ecx, DWORD PTR _args$225771[ebp]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__unwindfunclet$?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z$5:
	lea	ecx, DWORD PTR _args$225778[ebp]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__unwindfunclet$?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z$6:
	lea	ecx, DWORD PTR _args$225784[ebp]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__ehhandler$?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-464]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z ENDP ; CvMinorCivAI::DoFriendshipChangeEffects
; Function compile flags: /Odtp
;	COMDAT ?IsFriendshipAboveFriendsThreshold@CvMinorCivAI@@QBE_NH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iFriendshipThresholdFriends$ = -4			; size = 4
_iFriendship$ = 8					; size = 4
?IsFriendshipAboveFriendsThreshold@CvMinorCivAI@@QBE_NH@Z PROC ; CvMinorCivAI::IsFriendshipAboveFriendsThreshold, COMDAT
; _this$ = ecx

; 6080 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 6081 : 	int iFriendshipThresholdFriends = GetFriendsThreshold();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFriendsThreshold@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetFriendsThreshold
	mov	DWORD PTR _iFriendshipThresholdFriends$[ebp], eax

; 6082 : 
; 6083 : 	if(iFriendship >= iFriendshipThresholdFriends)

	mov	eax, DWORD PTR _iFriendship$[ebp]
	cmp	eax, DWORD PTR _iFriendshipThresholdFriends$[ebp]
	jl	SHORT $LN1@IsFriendsh

; 6084 : 	{
; 6085 : 		return true;

	mov	al, 1
	jmp	SHORT $LN2@IsFriendsh
$LN1@IsFriendsh:

; 6086 : 	}
; 6087 : 
; 6088 : 	return false;

	xor	al, al
$LN2@IsFriendsh:

; 6089 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsFriendshipAboveFriendsThreshold@CvMinorCivAI@@QBE_NH@Z ENDP ; CvMinorCivAI::IsFriendshipAboveFriendsThreshold
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetFriendsThreshold@CvMinorCivAI@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T243359 = -4						; size = 4
?GetFriendsThreshold@CvMinorCivAI@@QBEHXZ PROC		; CvMinorCivAI::GetFriendsThreshold, COMDAT
; _this$ = ecx

; 6094 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 6095 : 	return /*30*/ GC.getFRIENDSHIP_THRESHOLD_FRIENDS();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2832
	mov	DWORD PTR $T243359[ebp], eax
	mov	eax, DWORD PTR $T243359[ebp]

; 6096 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetFriendsThreshold@CvMinorCivAI@@QBEHXZ ENDP		; CvMinorCivAI::GetFriendsThreshold
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsFriendshipAboveAlliesThreshold@CvMinorCivAI@@QBE_NH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iFriendshipThresholdAllies$ = -4			; size = 4
_iFriendship$ = 8					; size = 4
?IsFriendshipAboveAlliesThreshold@CvMinorCivAI@@QBE_NH@Z PROC ; CvMinorCivAI::IsFriendshipAboveAlliesThreshold, COMDAT
; _this$ = ecx

; 6100 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 6101 : 	int iFriendshipThresholdAllies = GetAlliesThreshold();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlliesThreshold@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetAlliesThreshold
	mov	DWORD PTR _iFriendshipThresholdAllies$[ebp], eax

; 6102 : 
; 6103 : 	if(iFriendship >= iFriendshipThresholdAllies)

	mov	eax, DWORD PTR _iFriendship$[ebp]
	cmp	eax, DWORD PTR _iFriendshipThresholdAllies$[ebp]
	jl	SHORT $LN1@IsFriendsh@2

; 6104 : 	{
; 6105 : 		return true;

	mov	al, 1
	jmp	SHORT $LN2@IsFriendsh@2
$LN1@IsFriendsh@2:

; 6106 : 	}
; 6107 : 
; 6108 : 	return false;

	xor	al, al
$LN2@IsFriendsh@2:

; 6109 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsFriendshipAboveAlliesThreshold@CvMinorCivAI@@QBE_NH@Z ENDP ; CvMinorCivAI::IsFriendshipAboveAlliesThreshold
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetAlliesThreshold@CvMinorCivAI@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T243367 = -4						; size = 4
?GetAlliesThreshold@CvMinorCivAI@@QBEHXZ PROC		; CvMinorCivAI::GetAlliesThreshold, COMDAT
; _this$ = ecx

; 6113 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 6114 : 	return /*60*/ GC.getFRIENDSHIP_THRESHOLD_ALLIES();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2840
	mov	DWORD PTR $T243367[ebp], eax
	mov	eax, DWORD PTR $T243367[ebp]

; 6115 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetAlliesThreshold@CvMinorCivAI@@QBEHXZ ENDP		; CvMinorCivAI::GetAlliesThreshold
_TEXT	ENDS
PUBLIC	??_C@_0DB@HBBAGAHE@TXT_KEY_NTFN_SMMRY_MINOR_BEST_RE@ ; `string'
PUBLIC	??_C@_0CL@CDCEEODF@TXT_KEY_NTFN_MINOR_BEST_RELATION@ ; `string'
PUBLIC	??_C@_0CI@IEBPLMNK@TXT_KEY_NTFN_SMMRY_MINOR_NOW_ALL@ ; `string'
PUBLIC	??_C@_0CK@OLEJKCN@TXT_KEY_NTFN_MINOR_NOW_BEST_RELA@ ; `string'
PUBLIC	??_C@_0CM@CDFOKOCA@TXT_KEY_NTFN_SMMRY_MINOR_BEST_RE@ ; `string'
PUBLIC	??_C@_0CK@JJKHHFKN@TXT_KEY_NTFN_MINOR_NEW_BEST_RELA@ ; `string'
PUBLIC	??_C@_0BF@MGALNDKL@TXT_KEY_UNMET_PLAYER?$AA@	; `string'
PUBLIC	?IsDisableNotifications@CvMinorCivAI@@QBE_NXZ	; CvMinorCivAI::IsDisableNotifications
PUBLIC	?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z ; CvMinorCivAI::GetStatusChangeDetails
PUBLIC	?GetAlliesOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetAlliesOtherCityFoodBonus
PUBLIC	?GetAlliesCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetAlliesCapitalFoodBonus
PUBLIC	?GetFriendsOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetFriendsOtherCityFoodBonus
PUBLIC	?GetFriendsCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetFriendsCapitalFoodBonus
PUBLIC	?DoSeedUnitSpawnCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z ; CvMinorCivAI::DoSeedUnitSpawnCounter
PUBLIC	?GetUnitSpawnCounter@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetUnitSpawnCounter
PUBLIC	__$ArrayPad$
EXTRN	?DoUpdateHappiness@CvPlayer@@QAEXXZ:PROC	; CvPlayer::DoUpdateHappiness
EXTRN	?ChangeCityYieldChange@CvPlayer@@QAEXW4YieldTypes@@H@Z:PROC ; CvPlayer::ChangeCityYieldChange
EXTRN	?ChangeCapitalYieldChange@CvPlayer@@QAEXW4YieldTypes@@H@Z:PROC ; CvPlayer::ChangeCapitalYieldChange
;	COMDAT ??_C@_0DB@HBBAGAHE@TXT_KEY_NTFN_SMMRY_MINOR_BEST_RE@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0DB@HBBAGAHE@TXT_KEY_NTFN_SMMRY_MINOR_BEST_RE@ DB 'TXT_KEY_NTFN_SMM'
	DB	'RY_MINOR_BEST_RELATIONS_LOST_ALL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@CDCEEODF@TXT_KEY_NTFN_MINOR_BEST_RELATION@
CONST	SEGMENT
??_C@_0CL@CDCEEODF@TXT_KEY_NTFN_MINOR_BEST_RELATION@ DB 'TXT_KEY_NTFN_MIN'
	DB	'OR_BEST_RELATIONS_LOST_ALL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@IEBPLMNK@TXT_KEY_NTFN_SMMRY_MINOR_NOW_ALL@
CONST	SEGMENT
??_C@_0CI@IEBPLMNK@TXT_KEY_NTFN_SMMRY_MINOR_NOW_ALL@ DB 'TXT_KEY_NTFN_SMM'
	DB	'RY_MINOR_NOW_ALLIES_ALL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@OLEJKCN@TXT_KEY_NTFN_MINOR_NOW_BEST_RELA@
CONST	SEGMENT
??_C@_0CK@OLEJKCN@TXT_KEY_NTFN_MINOR_NOW_BEST_RELA@ DB 'TXT_KEY_NTFN_MINO'
	DB	'R_NOW_BEST_RELATIONS_ALL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@CDFOKOCA@TXT_KEY_NTFN_SMMRY_MINOR_BEST_RE@
CONST	SEGMENT
??_C@_0CM@CDFOKOCA@TXT_KEY_NTFN_SMMRY_MINOR_BEST_RE@ DB 'TXT_KEY_NTFN_SMM'
	DB	'RY_MINOR_BEST_RELATIONS_ALL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@JJKHHFKN@TXT_KEY_NTFN_MINOR_NEW_BEST_RELA@
CONST	SEGMENT
??_C@_0CK@JJKHHFKN@TXT_KEY_NTFN_MINOR_NEW_BEST_RELA@ DB 'TXT_KEY_NTFN_MIN'
	DB	'OR_NEW_BEST_RELATIONS_ALL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MGALNDKL@TXT_KEY_UNMET_PLAYER?$AA@
CONST	SEGMENT
??_C@_0BF@MGALNDKL@TXT_KEY_UNMET_PLAYER?$AA@ DB 'TXT_KEY_UNMET_PLAYER', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z DD 019930522H
	DD	0eH
	DD	FLAT:__unwindtable$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$19
	DD	00H
	DD	FLAT:__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$6
	DD	05H
	DD	FLAT:__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$7
	DD	05H
	DD	FLAT:__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$8
	DD	05H
	DD	FLAT:__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$9
	DD	05H
	DD	FLAT:__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$10
	DD	05H
	DD	FLAT:__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$12
	DD	05H
	DD	FLAT:__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$13
	DD	05H
	DD	FLAT:__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$14
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z
_TEXT	SEGMENT
tv579 = -1016						; size = 4
tv701 = -1012						; size = 4
tv576 = -1008						; size = 4
tv688 = -1004						; size = 4
tv571 = -1000						; size = 4
tv659 = -996						; size = 4
tv569 = -992						; size = 4
tv672 = -988						; size = 4
tv567 = -984						; size = 4
tv674 = -980						; size = 4
tv564 = -976						; size = 4
tv661 = -972						; size = 4
tv559 = -968						; size = 4
tv699 = -964						; size = 4
tv557 = -960						; size = 4
tv181 = -956						; size = 4
tv555 = -952						; size = 4
tv267 = -948						; size = 4
tv553 = -944						; size = 4
tv270 = -940						; size = 4
tv549 = -936						; size = 4
tv546 = -932						; size = 4
tv226 = -928						; size = 4
tv199 = -924						; size = 4
tv175 = -920						; size = 4
_this$ = -916						; size = 4
$T243551 = -912						; size = 4
$T243550 = -908						; size = 4
$T243541 = -904						; size = 4
$T243540 = -900						; size = 4
$T243531 = -896						; size = 4
$T243527 = -892						; size = 4
$T243526 = -888						; size = 4
$T243517 = -884						; size = 4
$T243516 = -880						; size = 4
$T243507 = -876						; size = 4
$T243498 = -872						; size = 4
$T243494 = -868						; size = 4
$T243482 = -864						; size = 4
$T243475 = -860						; size = 4
$T243453 = -856						; size = 4
$T243445 = -852						; size = 4
$T243440 = -848						; size = 4
$T243423 = -844						; size = 4
$T243419 = -840						; size = 4
$T243415 = -836						; size = 4
$T243386 = -832						; size = 4
$T243385 = -828						; size = 4
$T243384 = -824						; size = 80
$T243383 = -744						; size = 80
$T243382 = -664						; size = 4
$T243381 = -660						; size = 4
$T243380 = -656						; size = 80
$T243379 = -576						; size = 80
$T243378 = -496						; size = 80
$T243377 = -416						; size = 80
$T243376 = -336						; size = 4
$T243375 = -332						; size = 4
_strOldAllyNameKey$225894 = -328			; size = 4
_strOldBestPlayersNameKey$225866 = -324			; size = 4
_eNotifyPlayer$225857 = -320				; size = 4
_strMinorsNameKey$225870 = -316				; size = 4
_strNewBestPlayersNameKey$225862 = -312			; size = 4
_eMinorTeam$225871 = -308				; size = 4
_eNewAllyTeam$225861 = -304				; size = 4
_pNotifyTeam$225860 = -300				; size = 4
_kCurNotifyPlayer$225859 = -296				; size = 4
_iNotifyLoop$225853 = -292				; size = 4
_notifStrings$225846 = -288				; size = 56
_iCapitalFoodTimes100$225827 = -232			; size = 4
_iOtherCitiesFoodTimes100$225828 = -228			; size = 4
_eTrait$ = -224						; size = 4
_strSummaryOthers$ = -220				; size = 80
_strDetailedInfo$ = -136				; size = 28
__$ArrayPad$ = -108					; size = 4
_eOldAllyTeam$ = -104					; size = 4
_strMessageOthers$ = -100				; size = 80
_eOldAlly$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
_bAdd$ = 12						; size = 1
_bFriends$ = 16						; size = 1
_bAllies$ = 20						; size = 1
_bSuppressNotifications$ = 24				; size = 1
_bPassedBySomeone$ = 28					; size = 1
_eNewAlly$ = 32						; size = 4
?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z PROC ; CvMinorCivAI::DoSetBonus, COMDAT
; _this$ = ecx

; 6119 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1004				; 000003ecH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 6120 : 	MinorCivTraitTypes eTrait = GetTrait();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait
	mov	DWORD PTR _eTrait$[ebp], eax

; 6121 : 
; 6122 : 	// Cultured
; 6123 : 	if(eTrait == MINOR_CIV_TRAIT_CULTURED)

	cmp	DWORD PTR _eTrait$[ebp], 0
	jne	SHORT $LN41@DoSetBonus
	jmp	$LN29@DoSetBonus
$LN41@DoSetBonus:

; 6124 : 	{
; 6125 : 	}
; 6126 : 	// Militaristic
; 6127 : 	else if(eTrait == MINOR_CIV_TRAIT_MILITARISTIC)

	cmp	DWORD PTR _eTrait$[ebp], 1
	jne	SHORT $LN39@DoSetBonus

; 6128 : 	{
; 6129 : 		if(bAdd)

	movzx	eax, BYTE PTR _bAdd$[ebp]
	test	eax, eax
	je	SHORT $LN38@DoSetBonus

; 6130 : 		{
; 6131 : 			// Seed Counter if it hasn't been done yet in this game. We don't have to undo this at any point because the counter is not processed if we are no longer Friends
; 6132 : 			if(GetUnitSpawnCounter(ePlayer) == -1)

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetUnitSpawnCounter@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetUnitSpawnCounter
	cmp	eax, -1
	jne	SHORT $LN38@DoSetBonus

; 6133 : 				DoSeedUnitSpawnCounter(ePlayer, /*bBias*/ true);

	push	1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoSeedUnitSpawnCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z ; CvMinorCivAI::DoSeedUnitSpawnCounter
$LN38@DoSetBonus:

; 6134 : 		}
; 6135 : 	}

	jmp	$LN29@DoSetBonus
$LN39@DoSetBonus:

; 6136 : 	// Maritime
; 6137 : 	else if(eTrait == MINOR_CIV_TRAIT_MARITIME)

	cmp	DWORD PTR _eTrait$[ebp], 2
	jne	$LN35@DoSetBonus

; 6138 : 	{
; 6139 : 		int iCapitalFoodTimes100 = 0;

	mov	DWORD PTR _iCapitalFoodTimes100$225827[ebp], 0

; 6140 : 		int iOtherCitiesFoodTimes100 = 0;

	mov	DWORD PTR _iOtherCitiesFoodTimes100$225828[ebp], 0

; 6141 : 
; 6142 : 		if(bFriends)	// Friends bonus

	movzx	eax, BYTE PTR _bFriends$[ebp]
	test	eax, eax
	je	SHORT $LN34@DoSetBonus

; 6143 : 		{
; 6144 : 			iCapitalFoodTimes100 += GetFriendsCapitalFoodBonus(ePlayer);

	push	-1
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFriendsCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetFriendsCapitalFoodBonus
	add	eax, DWORD PTR _iCapitalFoodTimes100$225827[ebp]
	mov	DWORD PTR _iCapitalFoodTimes100$225827[ebp], eax

; 6145 : 			iOtherCitiesFoodTimes100 += GetFriendsOtherCityFoodBonus(ePlayer);

	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFriendsOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetFriendsOtherCityFoodBonus
	add	eax, DWORD PTR _iOtherCitiesFoodTimes100$225828[ebp]
	mov	DWORD PTR _iOtherCitiesFoodTimes100$225828[ebp], eax
$LN34@DoSetBonus:

; 6146 : 		}
; 6147 : 		if(bAllies)		// Allies bonus

	movzx	eax, BYTE PTR _bAllies$[ebp]
	test	eax, eax
	je	SHORT $LN33@DoSetBonus

; 6148 : 		{
; 6149 : 			iCapitalFoodTimes100 += GetAlliesCapitalFoodBonus(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlliesCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetAlliesCapitalFoodBonus
	add	eax, DWORD PTR _iCapitalFoodTimes100$225827[ebp]
	mov	DWORD PTR _iCapitalFoodTimes100$225827[ebp], eax

; 6150 : 			iOtherCitiesFoodTimes100 += GetAlliesOtherCityFoodBonus(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlliesOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetAlliesOtherCityFoodBonus
	add	eax, DWORD PTR _iOtherCitiesFoodTimes100$225828[ebp]
	mov	DWORD PTR _iOtherCitiesFoodTimes100$225828[ebp], eax
$LN33@DoSetBonus:

; 6151 : 		}
; 6152 : 
; 6153 : 		if(!bAdd)		// Flip amount of we're taking bonuses away

	movzx	eax, BYTE PTR _bAdd$[ebp]
	test	eax, eax
	jne	SHORT $LN64@DoSetBonus

; 6154 : 		{
; 6155 : 			iCapitalFoodTimes100 = -iCapitalFoodTimes100;

	mov	ecx, DWORD PTR _iCapitalFoodTimes100$225827[ebp]
	neg	ecx
	mov	DWORD PTR _iCapitalFoodTimes100$225827[ebp], ecx

; 6156 : 			iOtherCitiesFoodTimes100 = -iOtherCitiesFoodTimes100;

	mov	edx, DWORD PTR _iOtherCitiesFoodTimes100$225828[ebp]
	neg	edx
	mov	DWORD PTR _iOtherCitiesFoodTimes100$225828[ebp], edx

; 6157 : 		}
; 6158 : 
; 6159 : 		GET_PLAYER(ePlayer).ChangeCapitalYieldChange(YIELD_FOOD, iCapitalFoodTimes100);

$LN64@DoSetBonus:
	mov	eax, DWORD PTR _iCapitalFoodTimes100$225827[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?ChangeCapitalYieldChange@CvPlayer@@QAEXW4YieldTypes@@H@Z ; CvPlayer::ChangeCapitalYieldChange

; 6160 : 		GET_PLAYER(ePlayer).ChangeCityYieldChange(YIELD_FOOD, iOtherCitiesFoodTimes100);

	mov	ecx, DWORD PTR _iOtherCitiesFoodTimes100$225828[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?ChangeCityYieldChange@CvPlayer@@QAEXW4YieldTypes@@H@Z ; CvPlayer::ChangeCityYieldChange
	jmp	SHORT $LN29@DoSetBonus
$LN35@DoSetBonus:

; 6161 : 	}
; 6162 : 	// Mercantile
; 6163 : 	else if(eTrait == MINOR_CIV_TRAIT_MERCANTILE)

	cmp	DWORD PTR _eTrait$[ebp], 3
	jne	SHORT $LN29@DoSetBonus

; 6164 : 	{
; 6165 : 		GET_PLAYER(ePlayer).DoUpdateHappiness();

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?DoUpdateHappiness@CvPlayer@@QAEXXZ	; CvPlayer::DoUpdateHappiness
$LN29@DoSetBonus:

; 6166 : 	}
; 6167 : 	// Religious
; 6168 : 	if(eTrait == MINOR_CIV_TRAIT_RELIGIOUS)
; 6169 : 	{
; 6170 : 	}
; 6171 : 
; 6172 : 	if(ePlayer == GC.getGame().getActivePlayer())

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T243415[ebp], edx
	mov	ecx, DWORD PTR $T243415[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR _ePlayer$[ebp], eax
	jne	SHORT $LN28@DoSetBonus

; 6173 : 	{
; 6174 : 		GC.GetEngineUserInterface()->setDirty(GameData_DIRTY_BIT, true);

	mov	eax, DWORD PTR $T243419[ebp]
	mov	DWORD PTR tv175[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv175[ebp], ecx
	push	1
	push	11					; 0000000bH
	mov	edx, DWORD PTR tv175[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv175[ebp]
	mov	edx, DWORD PTR [eax+260]
	call	edx
$LN28@DoSetBonus:

; 6175 : 	}
; 6176 : 
; 6177 : 	CvString strDetailedInfo = GetStatusChangeDetails(ePlayer, bAdd, bFriends, bAllies);

	movzx	eax, BYTE PTR _bAllies$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bFriends$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bAdd$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z ; CvMinorCivAI::GetStatusChangeDetails
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 6178 : 
; 6179 : 	PlayerTypes eOldAlly = GetAlly();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetAlly
	mov	DWORD PTR _eOldAlly$[ebp], eax

; 6180 : 	TeamTypes eOldAllyTeam = eOldAlly != NO_PLAYER ? GET_PLAYER(eOldAlly).getTeam() : NO_TEAM;

	cmp	DWORD PTR _eOldAlly$[ebp], -1
	je	SHORT $LN44@DoSetBonus
	mov	edx, DWORD PTR _eOldAlly$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T243423[ebp], edx
	mov	eax, DWORD PTR $T243423[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR tv199[ebp], eax
	jmp	SHORT $LN45@DoSetBonus
$LN44@DoSetBonus:
	mov	DWORD PTR tv199[ebp], -1
$LN45@DoSetBonus:
	mov	edx, DWORD PTR tv199[ebp]
	mov	DWORD PTR _eOldAllyTeam$[ebp], edx

; 6181 : 
; 6182 : 	// Should we remove the Ally bonus from another player?
; 6183 : 	if(bAdd && bAllies)

	movzx	eax, BYTE PTR _bAdd$[ebp]
	test	eax, eax
	je	SHORT $LN27@DoSetBonus
	movzx	ecx, BYTE PTR _bAllies$[ebp]
	test	ecx, ecx
	je	SHORT $LN27@DoSetBonus

; 6184 : 	{
; 6185 : 		if(eOldAlly != NO_PLAYER && ePlayer != eOldAlly)

	cmp	DWORD PTR _eOldAlly$[ebp], -1
	je	SHORT $LN27@DoSetBonus
	mov	edx, DWORD PTR _ePlayer$[ebp]
	cmp	edx, DWORD PTR _eOldAlly$[ebp]
	je	SHORT $LN27@DoSetBonus

; 6186 : 		{
; 6187 : 			DoSetBonus(eOldAlly, /*bAdd*/ false, /*bFriends*/ false, /*bAllies*/ true, /*bSuppressNotifications*/ false, /*bPassedBySomeone*/ true, ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	push	1
	push	0
	push	1
	push	0
	push	0
	mov	ecx, DWORD PTR _eOldAlly$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z ; CvMinorCivAI::DoSetBonus
$LN27@DoSetBonus:

; 6188 : 		}
; 6189 : 	}
; 6190 : 
; 6191 : 	// *******************************************
; 6192 : 	// NOTIFICATIONS FOR THIS PLAYER
; 6193 : 	// *******************************************
; 6194 : 	// We're not displaying notifications at all
; 6195 : 	if (IsDisableNotifications())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsDisableNotifications@CvMinorCivAI@@QBE_NXZ ; CvMinorCivAI::IsDisableNotifications
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN25@DoSetBonus

; 6196 : 	{
; 6197 : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	$LN42@DoSetBonus
$LN25@DoSetBonus:

; 6198 : 	}
; 6199 : 
; 6200 : 	if (!bSuppressNotifications)

	movzx	eax, BYTE PTR _bSuppressNotifications$[ebp]
	test	eax, eax
	jne	$LN24@DoSetBonus

; 6201 : 	{
; 6202 : 		pair<CvString, CvString> notifStrings = GetStatusChangeNotificationStrings(ePlayer, bAdd, bFriends, bAllies, eOldAlly, (bAdd && bAllies) ? ePlayer : eNewAlly);

	movzx	ecx, BYTE PTR _bAdd$[ebp]
	test	ecx, ecx
	je	SHORT $LN46@DoSetBonus
	movzx	edx, BYTE PTR _bAllies$[ebp]
	test	edx, edx
	je	SHORT $LN46@DoSetBonus
	mov	eax, DWORD PTR _ePlayer$[ebp]
	mov	DWORD PTR tv226[ebp], eax
	jmp	SHORT $LN47@DoSetBonus
$LN46@DoSetBonus:
	mov	ecx, DWORD PTR _eNewAlly$[ebp]
	mov	DWORD PTR tv226[ebp], ecx
$LN47@DoSetBonus:
	mov	edx, DWORD PTR tv226[ebp]
	push	edx
	mov	eax, DWORD PTR _eOldAlly$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bAllies$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bFriends$[ebp]
	push	edx
	movzx	eax, BYTE PTR _bAdd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	lea	edx, DWORD PTR _notifStrings$225846[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z ; CvMinorCivAI::GetStatusChangeNotificationStrings
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 6203 : 		AddNotification(notifStrings.first, notifStrings.second, ePlayer);

	push	-1
	push	-1
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T243375[ebp], esp
	mov	DWORD PTR $T243440[ebp], ecx
	lea	edx, DWORD PTR _notifStrings$225846[ebp+28]
	push	edx
	mov	ecx, DWORD PTR $T243440[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T243440[ebp]
	mov	DWORD PTR tv546[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T243376[ebp], esp
	mov	DWORD PTR $T243445[ebp], ecx
	lea	edx, DWORD PTR _notifStrings$225846[ebp]
	push	edx
	mov	ecx, DWORD PTR $T243445[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T243445[ebp]
	mov	DWORD PTR tv549[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z ; CvMinorCivAI::AddNotification

; 6204 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _notifStrings$225846[ebp+28]
	mov	DWORD PTR $T243453[ebp], ecx
	mov	ecx, DWORD PTR $T243453[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _notifStrings$225846[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN24@DoSetBonus:

; 6205 : 
; 6206 : #ifdef AUI_CITIZENS_MID_TURN_ASSIGN_RUNS_SELF_CONSISTENCY
; 6207 : 	GET_PLAYER(ePlayer).doSelfConsistencyCheckAllCities();
; 6208 : #endif
; 6209 : 
; 6210 : 	// *******************************************
; 6211 : 	// NOTIFICATIONS FOR OTHER PLAYERS IN THE GAME
; 6212 : 	// *******************************************
; 6213 : 	Localization::String strMessageOthers;

	lea	ecx, DWORD PTR _strMessageOthers$[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 6214 : 	Localization::String strSummaryOthers;

	lea	ecx, DWORD PTR _strSummaryOthers$[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5

; 6215 : 
; 6216 : 	// We need to do this because this function is recursive, and if we're UNDOING someone else, we don't yet know who the new guy is because it hasn't been set yet
; 6217 : 	if(bPassedBySomeone)

	movzx	edx, BYTE PTR _bPassedBySomeone$[ebp]
	test	edx, edx
	je	SHORT $LN23@DoSetBonus

; 6218 : 		ePlayer = eNewAlly;

	mov	eax, DWORD PTR _eNewAlly$[ebp]
	mov	DWORD PTR _ePlayer$[ebp], eax
$LN23@DoSetBonus:

; 6219 : 
; 6220 : 	for(int iNotifyLoop = 0; iNotifyLoop < MAX_MAJOR_CIVS; ++iNotifyLoop){

	mov	DWORD PTR _iNotifyLoop$225853[ebp], 0
	jmp	SHORT $LN22@DoSetBonus
$LN21@DoSetBonus:
	mov	ecx, DWORD PTR _iNotifyLoop$225853[ebp]
	add	ecx, 1
	mov	DWORD PTR _iNotifyLoop$225853[ebp], ecx
$LN22@DoSetBonus:
	cmp	DWORD PTR _iNotifyLoop$225853[ebp], 22	; 00000016H
	jge	$LN20@DoSetBonus

; 6221 : 		PlayerTypes eNotifyPlayer = (PlayerTypes) iNotifyLoop;

	mov	edx, DWORD PTR _iNotifyLoop$225853[ebp]
	mov	DWORD PTR _eNotifyPlayer$225857[ebp], edx

; 6222 : 		CvPlayerAI& kCurNotifyPlayer = GET_PLAYER(eNotifyPlayer);

	mov	eax, DWORD PTR _eNotifyPlayer$225857[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kCurNotifyPlayer$225859[ebp], eax

; 6223 : 		CvTeam* pNotifyTeam = &GET_TEAM(kCurNotifyPlayer.getTeam());

	mov	ecx, DWORD PTR _kCurNotifyPlayer$225859[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T243475[ebp], eax
	mov	eax, DWORD PTR $T243475[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _pNotifyTeam$225860[ebp], eax

; 6224 : 		TeamTypes eNewAllyTeam = GET_PLAYER(ePlayer).getTeam();

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T243482[ebp], ecx
	mov	edx, DWORD PTR $T243482[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR _eNewAllyTeam$225861[ebp], eax

; 6225 : 		const char* strNewBestPlayersNameKey;
; 6226 : 
; 6227 : 		// Notify player has met the new Ally
; 6228 : 		if(pNotifyTeam->isHasMet(eNewAllyTeam))

	mov	ecx, DWORD PTR _eNewAllyTeam$225861[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pNotifyTeam$225860[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN19@DoSetBonus

; 6229 : 			strNewBestPlayersNameKey = GET_PLAYER(ePlayer).getCivilizationShortDescriptionKey();

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T243494[ebp], eax
	mov	ecx, DWORD PTR $T243494[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR _strNewBestPlayersNameKey$225862[ebp], eax

; 6230 : 		// Notify player has NOT met the new Ally
; 6231 : 		else

	jmp	SHORT $LN18@DoSetBonus
$LN19@DoSetBonus:

; 6232 : 			strNewBestPlayersNameKey = "TXT_KEY_UNMET_PLAYER";

	mov	DWORD PTR _strNewBestPlayersNameKey$225862[ebp], OFFSET ??_C@_0BF@MGALNDKL@TXT_KEY_UNMET_PLAYER?$AA@
$LN18@DoSetBonus:

; 6233 : 
; 6234 : 		const char* strOldBestPlayersNameKey = "";

	mov	DWORD PTR _strOldBestPlayersNameKey$225866[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@

; 6235 : 
; 6236 : 		// Someone got passed up
; 6237 : 		if(eOldAlly != NO_PLAYER)

	cmp	DWORD PTR _eOldAlly$[ebp], -1
	je	SHORT $LN17@DoSetBonus

; 6238 : 		{
; 6239 : 			// Notify player has met the old Ally
; 6240 : 			if(pNotifyTeam->isHasMet(eOldAllyTeam))

	mov	ecx, DWORD PTR _eOldAllyTeam$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pNotifyTeam$225860[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN16@DoSetBonus

; 6241 : 				strOldBestPlayersNameKey = GET_PLAYER(eOldAlly).getCivilizationShortDescriptionKey();

	mov	eax, DWORD PTR _eOldAlly$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T243498[ebp], eax
	mov	ecx, DWORD PTR $T243498[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR _strOldBestPlayersNameKey$225866[ebp], eax

; 6242 : 			// Notify player has NOT met the old Ally
; 6243 : 			else

	jmp	SHORT $LN17@DoSetBonus
$LN16@DoSetBonus:

; 6244 : 				strOldBestPlayersNameKey = "TXT_KEY_UNMET_PLAYER";

	mov	DWORD PTR _strOldBestPlayersNameKey$225866[ebp], OFFSET ??_C@_0BF@MGALNDKL@TXT_KEY_UNMET_PLAYER?$AA@
$LN17@DoSetBonus:

; 6245 : 		}
; 6246 : 
; 6247 : 		const char* strMinorsNameKey = GetPlayer()->getNameKey();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR _strMinorsNameKey$225870[ebp], eax

; 6248 : 		TeamTypes eMinorTeam = GetPlayer()->getTeam();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T243507[ebp], eax
	mov	ecx, DWORD PTR $T243507[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR _eMinorTeam$225871[ebp], eax

; 6249 : 
; 6250 : 		// Adding/Increasing bonus
; 6251 : 		if(bAdd)

	movzx	eax, BYTE PTR _bAdd$[ebp]
	test	eax, eax
	je	$LN14@DoSetBonus

; 6252 : 		{
; 6253 : 			// Jumped up to Allies (either from Neutral or from Friends, or passing another player)
; 6254 : 			if(bAllies)

	movzx	ecx, BYTE PTR _bAllies$[ebp]
	test	ecx, ecx
	je	$LN13@DoSetBonus

; 6255 : 			{
; 6256 : 				if(ePlayer != eNotifyPlayer)

	mov	edx, DWORD PTR _ePlayer$[ebp]
	cmp	edx, DWORD PTR _eNotifyPlayer$225857[ebp]
	je	$LN13@DoSetBonus

; 6257 : 				{
; 6258 : 					// Has the notify player met this minor
; 6259 : 					if(pNotifyTeam->isHasMet(eMinorTeam))

	mov	eax, DWORD PTR _eMinorTeam$225871[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNotifyTeam$225860[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	movzx	ecx, al
	test	ecx, ecx
	je	$LN13@DoSetBonus

; 6260 : 					{
; 6261 : 						// Someone got passed up
; 6262 : 						if(eOldAlly != NO_PLAYER && eOldAlly != ePlayer)

	cmp	DWORD PTR _eOldAlly$[ebp], -1
	je	$LN10@DoSetBonus
	mov	edx, DWORD PTR _eOldAlly$[ebp]
	cmp	edx, DWORD PTR _ePlayer$[ebp]
	je	$LN10@DoSetBonus

; 6263 : 						{
; 6264 : 							strMessageOthers = Localization::Lookup("TXT_KEY_NTFN_MINOR_NEW_BEST_RELATIONS_ALL");

	push	OFFSET ??_C@_0CK@JJKHHFKN@TXT_KEY_NTFN_MINOR_NEW_BEST_RELA@
	lea	eax, DWORD PTR $T243377[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv270[ebp], eax
	mov	ecx, DWORD PTR tv270[ebp]
	mov	DWORD PTR tv553[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR tv553[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessageOthers$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T243377[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 6265 : 							strMessageOthers << strNewBestPlayersNameKey << strOldBestPlayersNameKey << strMinorsNameKey;

	lea	eax, DWORD PTR _strMinorsNameKey$225870[ebp]
	push	eax
	lea	ecx, DWORD PTR _strOldBestPlayersNameKey$225866[ebp]
	push	ecx
	lea	edx, DWORD PTR _strNewBestPlayersNameKey$225862[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessageOthers$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 6266 : 							strSummaryOthers = Localization::Lookup("TXT_KEY_NTFN_SMMRY_MINOR_BEST_RELATIONS_ALL");

	push	OFFSET ??_C@_0CM@CDFOKOCA@TXT_KEY_NTFN_SMMRY_MINOR_BEST_RE@
	lea	ecx, DWORD PTR $T243378[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv267[ebp], eax
	mov	edx, DWORD PTR tv267[ebp]
	mov	DWORD PTR tv555[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR tv555[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummaryOthers$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T243378[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 6267 : 							strSummaryOthers << strMinorsNameKey;

	lea	ecx, DWORD PTR _strMinorsNameKey$225870[ebp]
	push	ecx
	lea	edx, DWORD PTR _strSummaryOthers$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 6268 : 						}
; 6269 : 						// No one previously had the bonus
; 6270 : 						else

	jmp	$LN9@DoSetBonus
$LN10@DoSetBonus:

; 6271 : 						{
; 6272 : 							strMessageOthers = Localization::Lookup("TXT_KEY_NTFN_MINOR_NOW_BEST_RELATIONS_ALL");

	push	OFFSET ??_C@_0CK@OLEJKCN@TXT_KEY_NTFN_MINOR_NOW_BEST_RELA@
	lea	eax, DWORD PTR $T243379[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv181[ebp], eax
	mov	ecx, DWORD PTR tv181[ebp]
	mov	DWORD PTR tv557[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	edx, DWORD PTR tv557[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessageOthers$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T243379[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 6273 : 							strMessageOthers << strNewBestPlayersNameKey << strMinorsNameKey;

	lea	eax, DWORD PTR _strMinorsNameKey$225870[ebp]
	push	eax
	lea	ecx, DWORD PTR _strNewBestPlayersNameKey$225862[ebp]
	push	ecx
	lea	edx, DWORD PTR _strMessageOthers$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 6274 : 							strSummaryOthers = Localization::Lookup("TXT_KEY_NTFN_SMMRY_MINOR_NOW_ALLIES_ALL");

	push	OFFSET ??_C@_0CI@IEBPLMNK@TXT_KEY_NTFN_SMMRY_MINOR_NOW_ALL@
	lea	eax, DWORD PTR $T243380[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv699[ebp], eax
	mov	ecx, DWORD PTR tv699[ebp]
	mov	DWORD PTR tv559[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	edx, DWORD PTR tv559[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummaryOthers$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T243380[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 6275 : 							strSummaryOthers << strMinorsNameKey << strNewBestPlayersNameKey;

	lea	eax, DWORD PTR _strNewBestPlayersNameKey$225862[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMinorsNameKey$225870[ebp]
	push	ecx
	lea	edx, DWORD PTR _strSummaryOthers$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
$LN9@DoSetBonus:

; 6276 : 						}
; 6277 : 
; 6278 : 						// If we're being passed by someone, then don't display this message... we'll roll it into a later one
; 6279 : 						if(eOldAlly != eNotifyPlayer)

	mov	eax, DWORD PTR _eOldAlly$[ebp]
	cmp	eax, DWORD PTR _eNotifyPlayer$225857[ebp]
	je	$LN13@DoSetBonus

; 6280 : 							AddNotification(strMessageOthers.toUTF8(), strSummaryOthers.toUTF8(), eNotifyPlayer);

	push	-1
	push	-1
	mov	ecx, DWORD PTR _eNotifyPlayer$225857[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummaryOthers$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T243517[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T243381[ebp], esp
	mov	DWORD PTR $T243516[ebp], edx
	cmp	DWORD PTR $T243517[ebp], 0
	je	SHORT $LN123@DoSetBonus
	mov	eax, DWORD PTR $T243517[ebp]
	mov	DWORD PTR tv661[ebp], eax
	jmp	SHORT $LN124@DoSetBonus
$LN123@DoSetBonus:
	mov	DWORD PTR tv661[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN124@DoSetBonus:
	mov	ecx, DWORD PTR tv661[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T243516[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	edx, DWORD PTR $T243516[ebp]
	mov	DWORD PTR tv564[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR _strMessageOthers$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T243527[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T243382[ebp], esp
	mov	DWORD PTR $T243526[ebp], eax
	cmp	DWORD PTR $T243527[ebp], 0
	je	SHORT $LN128@DoSetBonus
	mov	ecx, DWORD PTR $T243527[ebp]
	mov	DWORD PTR tv674[ebp], ecx
	jmp	SHORT $LN129@DoSetBonus
$LN128@DoSetBonus:
	mov	DWORD PTR tv674[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN129@DoSetBonus:
	mov	edx, DWORD PTR tv674[ebp]
	push	edx
	mov	ecx, DWORD PTR $T243526[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR $T243526[ebp]
	mov	DWORD PTR tv567[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z ; CvMinorCivAI::AddNotification
$LN13@DoSetBonus:

; 6281 : 					}
; 6282 : 				}
; 6283 : 			}
; 6284 : 		}
; 6285 : 		// Removing/Reducing bonus
; 6286 : 		else

	jmp	$LN7@DoSetBonus
$LN14@DoSetBonus:

; 6287 : 		{
; 6288 : 			// Dropped from Allies
; 6289 : 			if(bAllies)

	movzx	ecx, BYTE PTR _bAllies$[ebp]
	test	ecx, ecx
	je	$LN7@DoSetBonus

; 6290 : 			{
; 6291 : 				if(ePlayer != eNotifyPlayer)

	mov	edx, DWORD PTR _ePlayer$[ebp]
	cmp	edx, DWORD PTR _eNotifyPlayer$225857[ebp]
	je	$LN7@DoSetBonus

; 6292 : 				{
; 6293 : 					if(pNotifyTeam->isHasMet(eMinorTeam))

	mov	eax, DWORD PTR _eMinorTeam$225871[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNotifyTeam$225860[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	movzx	ecx, al
	test	ecx, ecx
	je	$LN7@DoSetBonus

; 6294 : 					{
; 6295 : 						// Only show this message for normal friendship decay
; 6296 : 						if(!bPassedBySomeone)

	movzx	edx, BYTE PTR _bPassedBySomeone$[ebp]
	test	edx, edx
	jne	$LN7@DoSetBonus

; 6297 : 						{
; 6298 : 							const char* strOldAllyNameKey;
; 6299 : 
; 6300 : 							// Notify player has met the old Ally
; 6301 : 							if(pNotifyTeam->isHasMet(eOldAllyTeam))

	mov	eax, DWORD PTR _eOldAllyTeam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNotifyTeam$225860[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@DoSetBonus

; 6302 : 								strOldAllyNameKey = GET_PLAYER(eOldAlly).getCivilizationShortDescriptionKey();

	mov	edx, DWORD PTR _eOldAlly$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T243531[ebp], edx
	mov	ecx, DWORD PTR $T243531[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR _strOldAllyNameKey$225894[ebp], eax

; 6303 : 							// Notify player has NOT met the old Ally
; 6304 : 							else

	jmp	SHORT $LN1@DoSetBonus
$LN2@DoSetBonus:

; 6305 : 								strOldAllyNameKey = "TXT_KEY_UNMET_PLAYER";

	mov	DWORD PTR _strOldAllyNameKey$225894[ebp], OFFSET ??_C@_0BF@MGALNDKL@TXT_KEY_UNMET_PLAYER?$AA@
$LN1@DoSetBonus:

; 6306 : 
; 6307 : 							strMessageOthers = Localization::Lookup("TXT_KEY_NTFN_MINOR_BEST_RELATIONS_LOST_ALL");

	push	OFFSET ??_C@_0CL@CDCEEODF@TXT_KEY_NTFN_MINOR_BEST_RELATION@
	lea	eax, DWORD PTR $T243383[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv672[ebp], eax
	mov	ecx, DWORD PTR tv672[ebp]
	mov	DWORD PTR tv569[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	edx, DWORD PTR tv569[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessageOthers$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T243383[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 6308 : 							strMessageOthers << strOldAllyNameKey << strMinorsNameKey;

	lea	eax, DWORD PTR _strMinorsNameKey$225870[ebp]
	push	eax
	lea	ecx, DWORD PTR _strOldAllyNameKey$225894[ebp]
	push	ecx
	lea	edx, DWORD PTR _strMessageOthers$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 6309 : 							strSummaryOthers = Localization::Lookup("TXT_KEY_NTFN_SMMRY_MINOR_BEST_RELATIONS_LOST_ALL");

	push	OFFSET ??_C@_0DB@HBBAGAHE@TXT_KEY_NTFN_SMMRY_MINOR_BEST_RE@
	lea	eax, DWORD PTR $T243384[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv659[ebp], eax
	mov	ecx, DWORD PTR tv659[ebp]
	mov	DWORD PTR tv571[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	edx, DWORD PTR tv571[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummaryOthers$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T243384[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 6310 : 							strSummaryOthers << strMinorsNameKey << strOldAllyNameKey;

	lea	eax, DWORD PTR _strOldAllyNameKey$225894[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMinorsNameKey$225870[ebp]
	push	ecx
	lea	edx, DWORD PTR _strSummaryOthers$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 6311 : 
; 6312 : 							AddNotification(strMessageOthers.toUTF8(), strSummaryOthers.toUTF8(), eNotifyPlayer);

	push	-1
	push	-1
	mov	eax, DWORD PTR _eNotifyPlayer$225857[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummaryOthers$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T243541[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T243385[ebp], esp
	mov	DWORD PTR $T243540[ebp], ecx
	cmp	DWORD PTR $T243541[ebp], 0
	je	SHORT $LN135@DoSetBonus
	mov	edx, DWORD PTR $T243541[ebp]
	mov	DWORD PTR tv688[ebp], edx
	jmp	SHORT $LN136@DoSetBonus
$LN135@DoSetBonus:
	mov	DWORD PTR tv688[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN136@DoSetBonus:
	mov	eax, DWORD PTR tv688[ebp]
	push	eax
	mov	ecx, DWORD PTR $T243540[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	ecx, DWORD PTR $T243540[ebp]
	mov	DWORD PTR tv576[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	lea	ecx, DWORD PTR _strMessageOthers$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T243551[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T243386[ebp], esp
	mov	DWORD PTR $T243550[ebp], edx
	cmp	DWORD PTR $T243551[ebp], 0
	je	SHORT $LN140@DoSetBonus
	mov	eax, DWORD PTR $T243551[ebp]
	mov	DWORD PTR tv701[ebp], eax
	jmp	SHORT $LN141@DoSetBonus
$LN140@DoSetBonus:
	mov	DWORD PTR tv701[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN141@DoSetBonus:
	mov	ecx, DWORD PTR tv701[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T243550[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	edx, DWORD PTR $T243550[ebp]
	mov	DWORD PTR tv579[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z ; CvMinorCivAI::AddNotification
$LN7@DoSetBonus:

; 6313 : 						}
; 6314 : 					}
; 6315 : 				}
; 6316 : 			}
; 6317 : 		}
; 6318 : 	}

	jmp	$LN21@DoSetBonus
$LN20@DoSetBonus:

; 6319 : }

	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _strSummaryOthers$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strMessageOthers$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN42@DoSetBonus:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$0:
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$1:
	lea	ecx, DWORD PTR _notifStrings$225846[ebp]
	jmp	??1?$pair@VCvString@@V1@@std@@QAE@XZ
__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$2:
	mov	ecx, DWORD PTR $T243375[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$19:
	lea	ecx, DWORD PTR _notifStrings$225846[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$4:
	lea	ecx, DWORD PTR _strMessageOthers$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$5:
	lea	ecx, DWORD PTR _strSummaryOthers$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$6:
	lea	ecx, DWORD PTR $T243377[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$7:
	lea	ecx, DWORD PTR $T243378[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$8:
	lea	ecx, DWORD PTR $T243379[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$9:
	lea	ecx, DWORD PTR $T243380[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$10:
	mov	ecx, DWORD PTR $T243381[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$12:
	lea	ecx, DWORD PTR $T243383[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$13:
	lea	ecx, DWORD PTR $T243384[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z$14:
	mov	ecx, DWORD PTR $T243385[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1008]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoSetBonus@CvMinorCivAI@@QAEXW4PlayerTypes@@_N11110@Z ENDP ; CvMinorCivAI::DoSetBonus
PUBLIC	??_C@_0CN@DNAOBEAA@TXT_KEY_NOTIFICATION_SUMMARY_MIN@ ; `string'
PUBLIC	??_C@_0CF@CFOCKMLH@TXT_KEY_NOTIFICATION_MINOR_INTRU@ ; `string'
PUBLIC	?GetMajorScratchPad@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetMajorScratchPad
PUBLIC	?IsPlayerHasOpenBorders@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsPlayerHasOpenBorders
PUBLIC	?SetMajorScratchPad@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::SetMajorScratchPad
EXTRN	?GetLengthMissionQueue@CvUnit@@QBEHXZ:PROC	; CvUnit::GetLengthMissionQueue
EXTRN	?IsAutomated@CvUnit@@QBE_NXZ:PROC		; CvUnit::IsAutomated
EXTRN	?IsAngerFreeUnit@CvUnit@@QBE_NXZ:PROC		; CvUnit::IsAngerFreeUnit
EXTRN	?nextUnitNode@CvPlot@@QBEPBUIDInfo@@PBU2@@Z:PROC ; CvPlot::nextUnitNode
EXTRN	?getUnit@@YAPAVCvUnit@@ABUIDInfo@@@Z:PROC	; getUnit
EXTRN	?headUnitNode@CvPlot@@QAEPAUIDInfo@@XZ:PROC	; CvPlot::headUnitNode
;	COMDAT ??_C@_0CN@DNAOBEAA@TXT_KEY_NOTIFICATION_SUMMARY_MIN@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0CN@DNAOBEAA@TXT_KEY_NOTIFICATION_SUMMARY_MIN@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_MINOR_INTRUSION', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@CFOCKMLH@TXT_KEY_NOTIFICATION_MINOR_INTRU@
CONST	SEGMENT
??_C@_0CF@CFOCKMLH@TXT_KEY_NOTIFICATION_MINOR_INTRU@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_INTRUSION', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?DoIntrusion@CvMinorCivAI@@QAEXXZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?DoIntrusion@CvMinorCivAI@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?DoIntrusion@CvMinorCivAI@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoIntrusion@CvMinorCivAI@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DoIntrusion@CvMinorCivAI@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?DoIntrusion@CvMinorCivAI@@QAEXXZ$2
	DD	01H
	DD	FLAT:__unwindfunclet$?DoIntrusion@CvMinorCivAI@@QAEXXZ$3
	DD	01H
	DD	FLAT:__unwindfunclet$?DoIntrusion@CvMinorCivAI@@QAEXXZ$4
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoIntrusion@CvMinorCivAI@@QAEXXZ
_TEXT	SEGMENT
tv288 = -492						; size = 4
tv360 = -488						; size = 4
tv285 = -484						; size = 4
tv315 = -480						; size = 4
tv280 = -476						; size = 4
tv203 = -472						; size = 4
tv278 = -468						; size = 4
tv206 = -464						; size = 4
_this$ = -460						; size = 4
$T243700 = -456						; size = 4
$T243699 = -452						; size = 4
$T243690 = -448						; size = 4
$T243689 = -444						; size = 4
$T243680 = -440						; size = 4
$T243671 = -436						; size = 4
$T243662 = -432						; size = 4
$T243658 = -425						; size = 1
$T243657 = -424						; size = 4
$T243653 = -420						; size = 4
$T243649 = -416						; size = 4
$T243640 = -412						; size = 4
$T243631 = -408						; size = 4
$T243622 = -404						; size = 4
$T243613 = -400						; size = 4
$T243604 = -396						; size = 4
$T243603 = -392						; size = 4
$T243594 = -388						; size = 4
$T243587 = -384						; size = 4
$T243583 = -380						; size = 4
$T243579 = -376						; size = 4
$T243569 = -372						; size = 4
$T243568 = -368						; size = 4
$T243567 = -364						; size = 4
$T243566 = -360						; size = 80
$T243565 = -280						; size = 4
$T243564 = -276						; size = 80
_iPlotLoop$225921 = -196				; size = 4
_eMajor$ = -192						; size = 4
_iMajorLoop$ = -188					; size = 4
_pUnitNode$ = -184					; size = 4
_strMessage$ = -180					; size = 80
_strSummary$ = -100					; size = 80
_pLoopUnit$ = -20					; size = 4
_pLoopPlot$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?DoIntrusion@CvMinorCivAI@@QAEXXZ PROC			; CvMinorCivAI::DoIntrusion, COMDAT
; _this$ = ecx

; 6324 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoIntrusion@CvMinorCivAI@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 480				; 000001e0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 6325 : 	PlayerTypes eMajor;
; 6326 : 	int iMajorLoop;
; 6327 : 	for(iMajorLoop = 0; iMajorLoop < MAX_MAJOR_CIVS; iMajorLoop++)

	mov	DWORD PTR _iMajorLoop$[ebp], 0
	jmp	SHORT $LN24@DoIntrusio
$LN23@DoIntrusio:
	mov	eax, DWORD PTR _iMajorLoop$[ebp]
	add	eax, 1
	mov	DWORD PTR _iMajorLoop$[ebp], eax
$LN24@DoIntrusio:
	cmp	DWORD PTR _iMajorLoop$[ebp], 22		; 00000016H
	jge	SHORT $LN22@DoIntrusio

; 6328 : 	{
; 6329 : 		eMajor = (PlayerTypes) iMajorLoop;

	mov	ecx, DWORD PTR _iMajorLoop$[ebp]
	mov	DWORD PTR _eMajor$[ebp], ecx

; 6330 : 
; 6331 : 		if(GetAngerFreeIntrusionCounter(eMajor) > 0)

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAngerFreeIntrusionCounter@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetAngerFreeIntrusionCounter
	test	eax, eax
	jle	SHORT $LN21@DoIntrusio

; 6332 : 		{
; 6333 : 			ChangeAngerFreeIntrusionCounter(eMajor, -1);

	push	-1
	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeAngerFreeIntrusionCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::ChangeAngerFreeIntrusionCounter
$LN21@DoIntrusio:

; 6334 : 		}
; 6335 : 	}

	jmp	SHORT $LN23@DoIntrusio
$LN22@DoIntrusio:

; 6336 : 
; 6337 : 	// If there are barbs nearby then don't worry about other players
; 6338 : 	if(GetNumThreateningBarbarians() > 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumThreateningBarbarians@CvMinorCivAI@@QAEHXZ ; CvMinorCivAI::GetNumThreateningBarbarians
	test	eax, eax
	jle	SHORT $LN20@DoIntrusio

; 6339 : 		return;

	jmp	$LN25@DoIntrusio
$LN20@DoIntrusio:

; 6340 : 
; 6341 : 	CvPlot* pLoopPlot;
; 6342 : 	const IDInfo* pUnitNode;
; 6343 : 	const CvUnit* pLoopUnit;
; 6344 : 
; 6345 : 	// Set up scratch pad so that we can use it to send out Notifications
; 6346 : 	for(iMajorLoop = 0; iMajorLoop < MAX_MAJOR_CIVS; iMajorLoop++)

	mov	DWORD PTR _iMajorLoop$[ebp], 0
	jmp	SHORT $LN19@DoIntrusio
$LN18@DoIntrusio:
	mov	ecx, DWORD PTR _iMajorLoop$[ebp]
	add	ecx, 1
	mov	DWORD PTR _iMajorLoop$[ebp], ecx
$LN19@DoIntrusio:
	cmp	DWORD PTR _iMajorLoop$[ebp], 22		; 00000016H
	jge	SHORT $LN17@DoIntrusio

; 6347 : 	{
; 6348 : 		eMajor = (PlayerTypes) iMajorLoop;

	mov	edx, DWORD PTR _iMajorLoop$[ebp]
	mov	DWORD PTR _eMajor$[ebp], edx

; 6349 : 		SetMajorScratchPad(eMajor, 0);

	push	0
	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetMajorScratchPad@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::SetMajorScratchPad

; 6350 : 	}

	jmp	SHORT $LN18@DoIntrusio
$LN17@DoIntrusio:

; 6351 : 
; 6352 : 	// Look at how many Units each Major Civ has in the Minor's Territory
; 6353 : #ifdef AUI_WARNING_FIXES
; 6354 : 	for (uint iPlotLoop = 0; iPlotLoop < GC.getMap().numPlots(); iPlotLoop++)
; 6355 : #else
; 6356 : 	for(int iPlotLoop = 0; iPlotLoop < GC.getMap().numPlots(); iPlotLoop++)

	mov	DWORD PTR _iPlotLoop$225921[ebp], 0
	jmp	SHORT $LN16@DoIntrusio
$LN15@DoIntrusio:
	mov	ecx, DWORD PTR _iPlotLoop$225921[ebp]
	add	ecx, 1
	mov	DWORD PTR _iPlotLoop$225921[ebp], ecx
$LN16@DoIntrusio:
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T243579[ebp], edx
	mov	eax, DWORD PTR $T243579[ebp]
	mov	ecx, DWORD PTR [eax+4028]
	mov	DWORD PTR $T243583[ebp], ecx
	mov	edx, DWORD PTR _iPlotLoop$225921[ebp]
	cmp	edx, DWORD PTR $T243583[ebp]
	jge	$LN14@DoIntrusio

; 6357 : #endif
; 6358 : 	{
; 6359 : 		pLoopPlot = GC.getMap().plotByIndexUnchecked(iPlotLoop);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T243587[ebp], eax
	mov	ecx, DWORD PTR _iPlotLoop$225921[ebp]
	imul	ecx, 484				; 000001e4H
	mov	edx, DWORD PTR $T243587[ebp]
	add	ecx, DWORD PTR [edx+4068]
	mov	DWORD PTR _pLoopPlot$[ebp], ecx

; 6360 : 
; 6361 : 		// Plot owned by this Minor?
; 6362 : 		if(pLoopPlot->getOwner() == GetPlayer()->GetID())

	mov	eax, DWORD PTR _pLoopPlot$[ebp]
	movsx	ecx, BYTE PTR [eax+4]
	mov	DWORD PTR $T243594[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T243603[ebp], eax
	mov	edx, DWORD PTR $T243603[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T243604[ebp], eax
	mov	ecx, DWORD PTR $T243594[ebp]
	cmp	ecx, DWORD PTR $T243604[ebp]
	jne	$LN13@DoIntrusio

; 6363 : 		{
; 6364 : 			pUnitNode = pLoopPlot->headUnitNode();

	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	call	?headUnitNode@CvPlot@@QAEPAUIDInfo@@XZ	; CvPlot::headUnitNode
	mov	DWORD PTR _pUnitNode$[ebp], eax
$LN12@DoIntrusio:

; 6365 : 
; 6366 : 			while(pUnitNode != NULL)

	cmp	DWORD PTR _pUnitNode$[ebp], 0
	je	$LN13@DoIntrusio

; 6367 : 			{
; 6368 : 				pLoopUnit = ::getUnit(*pUnitNode);

	mov	edx, DWORD PTR _pUnitNode$[ebp]
	push	edx
	call	?getUnit@@YAPAVCvUnit@@ABUIDInfo@@@Z	; getUnit
	add	esp, 4
	mov	DWORD PTR _pLoopUnit$[ebp], eax

; 6369 : 				pUnitNode = pLoopPlot->nextUnitNode(pUnitNode);

	mov	eax, DWORD PTR _pUnitNode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	call	?nextUnitNode@CvPlot@@QBEPBUIDInfo@@PBU2@@Z ; CvPlot::nextUnitNode
	mov	DWORD PTR _pUnitNode$[ebp], eax

; 6370 : 
; 6371 : 				// Does this unit not cause anger?
; 6372 : 				if(pLoopUnit && pLoopUnit->IsAngerFreeUnit())

	cmp	DWORD PTR _pLoopUnit$[ebp], 0
	je	SHORT $LN10@DoIntrusio
	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	call	?IsAngerFreeUnit@CvUnit@@QBE_NXZ	; CvUnit::IsAngerFreeUnit
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@DoIntrusio

; 6373 : 					continue;

	jmp	SHORT $LN12@DoIntrusio
$LN10@DoIntrusio:

; 6374 : 
; 6375 : 				//// Don't look at Unit's this Minor wants for a Quest!
; 6376 : 				//if (!IsPeaceQuestCompletedByMajor((PlayerTypes) pLoopUnit->getOwner()))
; 6377 : 				//{
; 6378 : 				//	if (GetPeaceQuestWidget() == MINORCIVQUESTWIDGET_UNITCLASS || GetWarQuestWidget() == MINORCIVQUESTWIDGET_UNITCLASS)
; 6379 : 				//	{
; 6380 : 				//		if (GetPeaceQuestWidgetID() == pLoopUnit->getUnitClassType() || GetWarQuestWidgetID() == pLoopUnit->getUnitClassType())
; 6381 : 				//		{
; 6382 : 				//			continue;
; 6383 : 				//		}
; 6384 : 				//	}
; 6385 : 				//}
; 6386 : 
; 6387 : 				// Does this Unit belong to a Major?
; 6388 : 				if(pLoopUnit && pLoopUnit->getOwner() < MAX_MAJOR_CIVS)

	cmp	DWORD PTR _pLoopUnit$[ebp], 0
	je	$LN9@DoIntrusio
	mov	edx, DWORD PTR _pLoopUnit$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR $T243613[ebp], eax
	cmp	DWORD PTR $T243613[ebp], 22		; 00000016H
	jge	$LN9@DoIntrusio

; 6389 : 				{
; 6390 : 					// If player has been granted Open Borders or has a friendship with minors bonus, then the Minor doesn't care about intrusion
; 6391 : 					if(!IsPlayerHasOpenBorders(pLoopUnit->getOwner()) && GetAngerFreeIntrusionCounter(pLoopUnit->getOwner()) == 0)

	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR $T243622[ebp], edx
	mov	eax, DWORD PTR $T243622[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsPlayerHasOpenBorders@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsPlayerHasOpenBorders
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN9@DoIntrusio
	mov	edx, DWORD PTR _pLoopUnit$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR $T243631[ebp], eax
	mov	ecx, DWORD PTR $T243631[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAngerFreeIntrusionCounter@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetAngerFreeIntrusionCounter
	test	eax, eax
	jne	$LN9@DoIntrusio

; 6392 : 					{
; 6393 : 						// If the player is at war with the Minor then don't bother
; 6394 : 						if(!IsAtWarWithPlayersTeam(pLoopUnit->getOwner()))

	mov	edx, DWORD PTR _pLoopUnit$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR $T243640[ebp], eax
	mov	ecx, DWORD PTR $T243640[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAtWarWithPlayersTeam@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAtWarWithPlayersTeam
	movzx	edx, al
	test	edx, edx
	jne	$LN9@DoIntrusio

; 6395 : 						{
; 6396 : 							// Ignore if the player trait allows us to intrude without angering
; 6397 : 							if(!GET_PLAYER(pLoopUnit->getOwner()).GetPlayerTraits()->IsAngerFreeIntrusionOfCityStates())

	mov	eax, DWORD PTR _pLoopUnit$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR $T243649[ebp], ecx
	mov	edx, DWORD PTR $T243649[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T243653[ebp], edx
	mov	ecx, DWORD PTR $T243653[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T243657[ebp], eax
	mov	eax, DWORD PTR $T243657[ebp]
	mov	cl, BYTE PTR [eax+355]
	mov	BYTE PTR $T243658[ebp], cl
	movzx	edx, BYTE PTR $T243658[ebp]
	test	edx, edx
	jne	SHORT $LN9@DoIntrusio

; 6398 : 							{
; 6399 : 								ChangeFriendshipWithMajor(pLoopUnit->getOwner(), /*-6*/ GC.getFRIENDSHIP_PER_UNIT_INTRUDING());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3160
	mov	DWORD PTR $T243662[ebp], eax
	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR $T243671[ebp], edx
	push	0
	mov	eax, DWORD PTR $T243662[ebp]
	push	eax
	mov	ecx, DWORD PTR $T243671[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::ChangeFriendshipWithMajor

; 6400 : 
; 6401 : 								// only modify if the unit isn't automated nor having a pending order
; 6402 : 								if(!pLoopUnit->IsAutomated() && pLoopUnit->GetLengthMissionQueue() == 0)

	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	call	?IsAutomated@CvUnit@@QBE_NXZ		; CvUnit::IsAutomated
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN9@DoIntrusio
	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	call	?GetLengthMissionQueue@CvUnit@@QBEHXZ	; CvUnit::GetLengthMissionQueue
	test	eax, eax
	jne	SHORT $LN9@DoIntrusio

; 6403 : 								{
; 6404 : 									SetMajorScratchPad(pLoopUnit->getOwner(), 1);

	mov	eax, DWORD PTR _pLoopUnit$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR $T243680[ebp], ecx
	push	1
	mov	edx, DWORD PTR $T243680[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetMajorScratchPad@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::SetMajorScratchPad
$LN9@DoIntrusio:

; 6405 : 								}
; 6406 : 
; 6407 : 								//if (!IsMajorIntruding((PlayerTypes) pLoopUnit->getOwner()))
; 6408 : 								//{
; 6409 : 								//	SetMajorIntruding((PlayerTypes) pLoopUnit->getOwner(), true);
; 6410 : 								//	ChangeNumTurnsMajorHasIntruded((PlayerTypes) pLoopUnit->getOwner(), 1);
; 6411 : 								//}
; 6412 : 							}
; 6413 : 						}
; 6414 : 					}
; 6415 : 				}
; 6416 : 			}

	jmp	$LN12@DoIntrusio
$LN13@DoIntrusio:

; 6417 : 		}
; 6418 : 	}

	jmp	$LN15@DoIntrusio
$LN14@DoIntrusio:

; 6419 : 
; 6420 : 	// Now send out Notifications (if necessary)
; 6421 : 	Localization::String strMessage;

	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 6422 : 	Localization::String strSummary;

	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 6423 : 
; 6424 : 	for(iMajorLoop = 0; iMajorLoop < MAX_MAJOR_CIVS; iMajorLoop++)

	mov	DWORD PTR _iMajorLoop$[ebp], 0
	jmp	SHORT $LN4@DoIntrusio
$LN3@DoIntrusio:
	mov	eax, DWORD PTR _iMajorLoop$[ebp]
	add	eax, 1
	mov	DWORD PTR _iMajorLoop$[ebp], eax
$LN4@DoIntrusio:
	cmp	DWORD PTR _iMajorLoop$[ebp], 22		; 00000016H
	jge	$LN2@DoIntrusio

; 6425 : 	{
; 6426 : 		eMajor = (PlayerTypes) iMajorLoop;

	mov	ecx, DWORD PTR _iMajorLoop$[ebp]
	mov	DWORD PTR _eMajor$[ebp], ecx

; 6427 : 
; 6428 : 		if(GetMajorScratchPad(eMajor) > 0)

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMajorScratchPad@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetMajorScratchPad
	test	eax, eax
	jle	$LN1@DoIntrusio

; 6429 : 		{
; 6430 : 			strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_INTRUSION");

	push	OFFSET ??_C@_0CF@CFOCKMLH@TXT_KEY_NOTIFICATION_MINOR_INTRU@
	lea	eax, DWORD PTR $T243564[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv206[ebp], eax
	mov	ecx, DWORD PTR tv206[ebp]
	mov	DWORD PTR tv278[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv278[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T243564[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 6431 : 			strMessage << GetPlayer()->getNameKey();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T243565[ebp], eax
	lea	eax, DWORD PTR $T243565[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 6432 : 			strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_MINOR_INTRUSION");

	push	OFFSET ??_C@_0CN@DNAOBEAA@TXT_KEY_NOTIFICATION_SUMMARY_MIN@
	lea	edx, DWORD PTR $T243566[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv203[ebp], eax
	mov	eax, DWORD PTR tv203[ebp]
	mov	DWORD PTR tv280[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv280[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T243566[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 6433 : 			strSummary << GetPlayer()->getNameKey();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T243567[ebp], eax
	lea	edx, DWORD PTR $T243567[ebp]
	push	edx
	lea	eax, DWORD PTR _strSummary$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 6434 : 
; 6435 : 			AddNotification(strMessage.toUTF8(), strSummary.toUTF8(), eMajor);

	push	-1
	push	-1
	mov	ecx, DWORD PTR _eMajor$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T243690[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T243568[ebp], esp
	mov	DWORD PTR $T243689[ebp], edx
	cmp	DWORD PTR $T243690[ebp], 0
	je	SHORT $LN83@DoIntrusio
	mov	eax, DWORD PTR $T243690[ebp]
	mov	DWORD PTR tv315[ebp], eax
	jmp	SHORT $LN84@DoIntrusio
$LN83@DoIntrusio:
	mov	DWORD PTR tv315[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN84@DoIntrusio:
	mov	ecx, DWORD PTR tv315[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T243689[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	edx, DWORD PTR $T243689[ebp]
	mov	DWORD PTR tv285[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T243700[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T243569[ebp], esp
	mov	DWORD PTR $T243699[ebp], eax
	cmp	DWORD PTR $T243700[ebp], 0
	je	SHORT $LN88@DoIntrusio
	mov	ecx, DWORD PTR $T243700[ebp]
	mov	DWORD PTR tv360[ebp], ecx
	jmp	SHORT $LN89@DoIntrusio
$LN88@DoIntrusio:
	mov	DWORD PTR tv360[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN89@DoIntrusio:
	mov	edx, DWORD PTR tv360[ebp]
	push	edx
	mov	ecx, DWORD PTR $T243699[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR $T243699[ebp]
	mov	DWORD PTR tv288[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z ; CvMinorCivAI::AddNotification
$LN1@DoIntrusio:

; 6436 : 		}
; 6437 : 	}

	jmp	$LN3@DoIntrusio
$LN2@DoIntrusio:

; 6438 : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN25@DoIntrusio:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoIntrusion@CvMinorCivAI@@QAEXXZ$0:
	lea	ecx, DWORD PTR _strMessage$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoIntrusion@CvMinorCivAI@@QAEXXZ$1:
	lea	ecx, DWORD PTR _strSummary$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoIntrusion@CvMinorCivAI@@QAEXXZ$2:
	lea	ecx, DWORD PTR $T243564[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoIntrusion@CvMinorCivAI@@QAEXXZ$3:
	lea	ecx, DWORD PTR $T243566[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoIntrusion@CvMinorCivAI@@QAEXXZ$4:
	mov	ecx, DWORD PTR $T243568[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?DoIntrusion@CvMinorCivAI@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-484]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoIntrusion@CvMinorCivAI@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoIntrusion@CvMinorCivAI@@QAEXXZ ENDP			; CvMinorCivAI::DoIntrusion
PUBLIC	?IsMajorIntruding@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsMajorIntruding
; Function compile flags: /Odtp
;	COMDAT ?IsMajorIntruding@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eMajor$ = 8						; size = 4
?IsMajorIntruding@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::IsMajorIntruding, COMDAT
; _this$ = ecx

; 6442 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 6443 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 6444 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 6445 : 	if(eMajor< 0 || eMajor >= MAX_MAJOR_CIVS) return false;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN1@IsMajorInt
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN2@IsMajorInt
$LN1@IsMajorInt:
	xor	al, al
	jmp	SHORT $LN3@IsMajorInt
$LN2@IsMajorInt:

; 6446 : 
; 6447 : 	return m_abMajorIntruding[eMajor];

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _eMajor$[ebp]
	mov	al, BYTE PTR [eax+3102]
$LN3@IsMajorInt:

; 6448 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsMajorIntruding@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::IsMajorIntruding
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?SetMajorIntruding@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eMajor$ = 8						; size = 4
_bValue$ = 12						; size = 1
?SetMajorIntruding@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z PROC ; CvMinorCivAI::SetMajorIntruding, COMDAT
; _this$ = ecx

; 6452 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 6453 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 6454 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 6455 : 	if(eMajor < 0 || eMajor >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN2@SetMajorIn
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN3@SetMajorIn
$LN2@SetMajorIn:
	jmp	SHORT $LN4@SetMajorIn
$LN3@SetMajorIn:

; 6456 : 
; 6457 : 	if(IsMajorIntruding(eMajor) != bValue)

	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsMajorIntruding@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsMajorIntruding
	movzx	ecx, al
	movzx	edx, BYTE PTR _bValue$[ebp]
	cmp	ecx, edx
	je	SHORT $LN4@SetMajorIn

; 6458 : 	{
; 6459 : 		m_abMajorIntruding[eMajor] = bValue;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _eMajor$[ebp]
	mov	cl, BYTE PTR _bValue$[ebp]
	mov	BYTE PTR [eax+3102], cl
$LN4@SetMajorIn:

; 6460 : 	}
; 6461 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetMajorIntruding@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z ENDP ; CvMinorCivAI::SetMajorIntruding
_TEXT	ENDS
PUBLIC	?IsPlayerHasOpenBordersAutomatically@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsPlayerHasOpenBordersAutomatically
; Function compile flags: /Odtp
;	COMDAT ?IsPlayerHasOpenBorders@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?IsPlayerHasOpenBorders@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::IsPlayerHasOpenBorders, COMDAT
; _this$ = ecx

; 6466 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 6467 : 	// Special trait?
; 6468 : 	if(IsPlayerHasOpenBordersAutomatically(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsPlayerHasOpenBordersAutomatically@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsPlayerHasOpenBordersAutomatically
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@IsPlayerHa

; 6469 : 		return true;

	mov	al, 1
	jmp	SHORT $LN2@IsPlayerHa
$LN1@IsPlayerHa:

; 6470 : 
; 6471 : 	return IsFriends(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
$LN2@IsPlayerHa:

; 6472 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsPlayerHasOpenBorders@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::IsPlayerHasOpenBorders
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsPlayerHasOpenBordersAutomatically@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T243724 = -12						; size = 4
$T243723 = -8						; size = 4
$T243719 = -4						; size = 4
_ePlayer$ = 8						; size = 4
?IsPlayerHasOpenBordersAutomatically@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::IsPlayerHasOpenBordersAutomatically, COMDAT
; _this$ = ecx

; 6476 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 6477 : 	// Special trait?
; 6478 : 	if(GET_PLAYER(ePlayer).GetPlayerTraits()->GetCityStateFriendshipModifier() > 0)

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T243719[ebp], eax
	mov	ecx, DWORD PTR $T243719[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T243723[ebp], eax
	mov	ecx, DWORD PTR $T243723[ebp]
	mov	edx, DWORD PTR [ecx+92]
	mov	DWORD PTR $T243724[ebp], edx
	cmp	DWORD PTR $T243724[ebp], 0
	jle	SHORT $LN1@IsPlayerHa@2

; 6479 : 		return true;

	mov	al, 1
	jmp	SHORT $LN2@IsPlayerHa@2
$LN1@IsPlayerHa@2:

; 6480 : 
; 6481 : 	return false;

	xor	al, al
$LN2@IsPlayerHa@2:

; 6482 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsPlayerHasOpenBordersAutomatically@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::IsPlayerHasOpenBordersAutomatically
_TEXT	ENDS
PUBLIC	??_C@_0CK@GPAODMCO@TXT_KEY_NOTIFICATION_MINOR_LIBER@ ; `string'
PUBLIC	??_C@_0CO@GDIICDKL@TXT_KEY_NOTIFICATION_SUMMARY_MIN@ ; `string'
PUBLIC	??_C@_0CG@DGJFOJDM@TXT_KEY_NOTIFICATION_MINOR_LIBER@ ; `string'
PUBLIC	?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z ; CvMinorCivAI::DoLiberationByMajor
;	COMDAT ??_C@_0CK@GPAODMCO@TXT_KEY_NOTIFICATION_MINOR_LIBER@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0CK@GPAODMCO@TXT_KEY_NOTIFICATION_MINOR_LIBER@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_LIBERATION_YOU', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@GDIICDKL@TXT_KEY_NOTIFICATION_SUMMARY_MIN@
CONST	SEGMENT
??_C@_0CO@GDIICDKL@TXT_KEY_NOTIFICATION_SUMMARY_MIN@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_MINOR_LIBERATION', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@DGJFOJDM@TXT_KEY_NOTIFICATION_MINOR_LIBER@
CONST	SEGMENT
??_C@_0CG@DGJFOJDM@TXT_KEY_NOTIFICATION_MINOR_LIBER@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_LIBERATION', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z$4
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z
_TEXT	SEGMENT
tv296 = -520						; size = 4
tv368 = -516						; size = 4
tv293 = -512						; size = 4
tv355 = -508						; size = 4
tv288 = -504						; size = 4
tv64 = -500						; size = 4
tv286 = -496						; size = 4
tv68 = -492						; size = 4
tv212 = -488						; size = 4
tv317 = -484						; size = 4
_this$ = -480						; size = 4
$T243857 = -476						; size = 4
$T243856 = -472						; size = 4
$T243847 = -468						; size = 4
$T243846 = -464						; size = 4
$T243834 = -460						; size = 4
$T243825 = -456						; size = 4
$T243819 = -452						; size = 4
$T243815 = -448						; size = 4
$T243811 = -444						; size = 4
$T243807 = -440						; size = 4
$T243795 = -436						; size = 4
$T243791 = -432						; size = 4
$T243787 = -428						; size = 4
$T243778 = -424						; size = 4
$T243774 = -420						; size = 4
$T243773 = -416						; size = 4
$T243764 = -409						; size = 1
$T243755 = -408						; size = 4
$T243748 = -404						; size = 4
$T243738 = -400						; size = 4
$T243737 = -396						; size = 4
$T243736 = -392						; size = 4
$T243735 = -388						; size = 80
$T243734 = -308						; size = 4
$T243733 = -304						; size = 80
$T243732 = -224						; size = 4
$T243731 = -220						; size = 4
$T243730 = -216						; size = 4
$T243729 = -212						; size = 4
$T243728 = -208						; size = 4
$T243727 = -204						; size = 4
_pNotifications$226001 = -200				; size = 4
_iInfluence$225996 = -196				; size = 4
_iI$225990 = -192					; size = 4
_ePlayer$ = -188					; size = 4
_iHighestOtherMajorInfluence$ = -184			; size = 4
_strMessage$ = -180					; size = 80
_strSummary$ = -100					; size = 80
_iNewInfluence$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_eLiberator$ = 8					; size = 4
_eConquerorTeam$ = 12					; size = 4
?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z PROC ; CvMinorCivAI::DoLiberationByMajor, COMDAT
; _this$ = ecx

; 6487 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 508				; 000001fcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 6488 : 	Localization::String strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_LIBERATION");

	push	OFFSET ??_C@_0CG@DGJFOJDM@TXT_KEY_NOTIFICATION_MINOR_LIBER@
	lea	eax, DWORD PTR _strMessage$[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 6489 : 	strMessage << GetPlayer()->getNameKey() << GET_PLAYER(eLiberator).getNameKey();

	mov	ecx, DWORD PTR _eLiberator$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T243748[ebp], ecx
	mov	ecx, DWORD PTR $T243748[ebp]
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T243727[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T243728[ebp], eax
	lea	edx, DWORD PTR $T243727[ebp]
	push	edx
	lea	eax, DWORD PTR $T243728[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 6490 : 	Localization::String strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_MINOR_LIBERATION");

	push	OFFSET ??_C@_0CO@GDIICDKL@TXT_KEY_NOTIFICATION_SUMMARY_MIN@
	lea	edx, DWORD PTR _strSummary$[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 6491 : 	strSummary << GetPlayer()->getNameKey();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T243729[ebp], eax
	lea	eax, DWORD PTR $T243729[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 6492 : 
; 6493 : 	int iHighestOtherMajorInfluence = GC.getMINOR_FRIENDSHIP_AT_WAR();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2768
	mov	DWORD PTR _iHighestOtherMajorInfluence$[ebp], edx

; 6494 : 
; 6495 : 	PlayerTypes ePlayer;
; 6496 : 	for(int iI = 0; iI < MAX_MAJOR_CIVS; iI++)

	mov	DWORD PTR _iI$225990[ebp], 0
	jmp	SHORT $LN9@DoLiberati
$LN8@DoLiberati:
	mov	eax, DWORD PTR _iI$225990[ebp]
	add	eax, 1
	mov	DWORD PTR _iI$225990[ebp], eax
$LN9@DoLiberati:
	cmp	DWORD PTR _iI$225990[ebp], 22		; 00000016H
	jge	$LN7@DoLiberati

; 6497 : 	{
; 6498 : 		ePlayer = (PlayerTypes) iI;

	mov	ecx, DWORD PTR _iI$225990[ebp]
	mov	DWORD PTR _ePlayer$[ebp], ecx

; 6499 : 
; 6500 : 		if(ePlayer != eLiberator)

	mov	edx, DWORD PTR _ePlayer$[ebp]
	cmp	edx, DWORD PTR _eLiberator$[ebp]
	je	$LN6@DoLiberati

; 6501 : 		{
; 6502 : 			int iInfluence = GetBaseFriendshipWithMajor(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBaseFriendshipWithMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBaseFriendshipWithMajor
	mov	DWORD PTR _iInfluence$225996[ebp], eax

; 6503 : 			if(iInfluence > iHighestOtherMajorInfluence)

	mov	ecx, DWORD PTR _iInfluence$225996[ebp]
	cmp	ecx, DWORD PTR _iHighestOtherMajorInfluence$[ebp]
	jle	SHORT $LN5@DoLiberati

; 6504 : 				iHighestOtherMajorInfluence = iInfluence;

	mov	edx, DWORD PTR _iInfluence$225996[ebp]
	mov	DWORD PTR _iHighestOtherMajorInfluence$[ebp], edx
$LN5@DoLiberati:

; 6505 : 
; 6506 : 			if(GET_PLAYER(ePlayer).isAlive())

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T243755[ebp], eax
	mov	ecx, DWORD PTR $T243755[ebp]
	mov	dl, BYTE PTR [ecx+2256]
	mov	BYTE PTR $T243764[ebp], dl
	movzx	eax, BYTE PTR $T243764[ebp]
	test	eax, eax
	je	$LN6@DoLiberati

; 6507 : 			{
; 6508 : 				if(GET_TEAM(GET_PLAYER(ePlayer).getTeam()).isHasMet(GetPlayer()->getTeam()))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T243773[ebp], eax
	mov	ecx, DWORD PTR $T243773[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T243774[ebp], eax
	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T243778[ebp], eax
	mov	ecx, DWORD PTR $T243778[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T243787[ebp], eax
	mov	eax, DWORD PTR $T243787[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T243791[ebp], eax
	mov	ecx, DWORD PTR $T243774[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T243791[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	movzx	edx, al
	test	edx, edx
	je	$LN6@DoLiberati

; 6509 : 				{
; 6510 : 					// Influence for other players - Were you the one that conquered us before?
; 6511 : 					if(GET_PLAYER(ePlayer).getTeam() == eConquerorTeam)

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T243795[ebp], eax
	mov	ecx, DWORD PTR $T243795[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	cmp	eax, DWORD PTR _eConquerorTeam$[ebp]
	jne	SHORT $LN2@DoLiberati

; 6512 : 					{
; 6513 : 						SetFriendshipWithMajor(ePlayer, GC.getMINOR_FRIENDSHIP_AT_WAR());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2768
	mov	DWORD PTR $T243807[ebp], eax
	push	0
	mov	ecx, DWORD PTR $T243807[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::SetFriendshipWithMajor
$LN2@DoLiberati:

; 6514 : 					}
; 6515 : 
; 6516 : 					// Notification for other players
; 6517 : 					CvNotifications* pNotifications = GET_PLAYER(ePlayer).GetNotifications();

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T243811[ebp], eax
	mov	ecx, DWORD PTR $T243811[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	DWORD PTR _pNotifications$226001[ebp], eax

; 6518 : 					if(pNotifications)

	cmp	DWORD PTR _pNotifications$226001[ebp], 0
	je	SHORT $LN6@DoLiberati

; 6519 : 					{
; 6520 : 						pNotifications->Add(NOTIFICATION_DIPLOMACY_DECLARATION, strMessage.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	1319111517				; 4ea00b5dH
	mov	ecx, DWORD PTR _pNotifications$226001[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add
$LN6@DoLiberati:

; 6521 : 					}
; 6522 : 				}
; 6523 : 			}
; 6524 : 		}
; 6525 : 	}

	jmp	$LN8@DoLiberati
$LN7@DoLiberati:

; 6526 : 
; 6527 : 	// Influence for liberator - raise to ally status
; 6528 : 	int iNewInfluence = max(iHighestOtherMajorInfluence + GC.getMINOR_LIBERATION_FRIENDSHIP(), GetBaseFriendshipWithMajor(eLiberator) + GC.getMINOR_LIBERATION_FRIENDSHIP());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3176
	mov	DWORD PTR $T243815[ebp], ecx
	mov	edx, DWORD PTR _eLiberator$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBaseFriendshipWithMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBaseFriendshipWithMajor
	add	eax, DWORD PTR $T243815[ebp]
	mov	DWORD PTR $T243730[ebp], eax
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3176
	mov	DWORD PTR $T243819[ebp], eax
	mov	ecx, DWORD PTR _iHighestOtherMajorInfluence$[ebp]
	add	ecx, DWORD PTR $T243819[ebp]
	mov	DWORD PTR $T243731[ebp], ecx
	mov	edx, DWORD PTR $T243731[ebp]
	cmp	edx, DWORD PTR $T243730[ebp]
	jge	SHORT $LN56@DoLiberati
	lea	eax, DWORD PTR $T243730[ebp]
	mov	DWORD PTR tv317[ebp], eax
	jmp	SHORT $LN57@DoLiberati
$LN56@DoLiberati:
	lea	ecx, DWORD PTR $T243731[ebp]
	mov	DWORD PTR tv317[ebp], ecx
$LN57@DoLiberati:
	mov	edx, DWORD PTR tv317[ebp]
	mov	DWORD PTR $T243825[ebp], edx
	mov	eax, DWORD PTR $T243825[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _iNewInfluence$[ebp], ecx

; 6529 : 	iNewInfluence = max(GetAlliesThreshold(), iNewInfluence); // Must be at least enough to make us allies

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlliesThreshold@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetAlliesThreshold
	mov	DWORD PTR $T243732[ebp], eax
	mov	edx, DWORD PTR $T243732[ebp]
	cmp	edx, DWORD PTR _iNewInfluence$[ebp]
	jge	SHORT $LN60@DoLiberati
	lea	eax, DWORD PTR _iNewInfluence$[ebp]
	mov	DWORD PTR tv212[ebp], eax
	jmp	SHORT $LN61@DoLiberati
$LN60@DoLiberati:
	lea	ecx, DWORD PTR $T243732[ebp]
	mov	DWORD PTR tv212[ebp], ecx
$LN61@DoLiberati:
	mov	edx, DWORD PTR tv212[ebp]
	mov	DWORD PTR $T243834[ebp], edx
	mov	eax, DWORD PTR $T243834[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _iNewInfluence$[ebp], ecx

; 6530 : 	SetFriendshipWithMajor(eLiberator, iNewInfluence);

	push	0
	mov	edx, DWORD PTR _iNewInfluence$[ebp]
	push	edx
	mov	eax, DWORD PTR _eLiberator$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::SetFriendshipWithMajor

; 6531 : 
; 6532 : 	// Notification for liberator
; 6533 : 	strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_LIBERATION_YOU");

	push	OFFSET ??_C@_0CK@GPAODMCO@TXT_KEY_NOTIFICATION_MINOR_LIBER@
	lea	ecx, DWORD PTR $T243733[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv68[ebp], eax
	mov	edx, DWORD PTR tv68[ebp]
	mov	DWORD PTR tv286[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR tv286[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T243733[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 6534 : 	strMessage << GetPlayer()->getNameKey();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T243734[ebp], eax
	lea	ecx, DWORD PTR $T243734[ebp]
	push	ecx
	lea	edx, DWORD PTR _strMessage$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 6535 : 	strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_MINOR_LIBERATION");

	push	OFFSET ??_C@_0CO@GDIICDKL@TXT_KEY_NOTIFICATION_SUMMARY_MIN@
	lea	eax, DWORD PTR $T243735[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	mov	DWORD PTR tv288[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR tv288[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T243735[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 6536 : 	strSummary << GetPlayer()->getNameKey();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T243736[ebp], eax
	lea	eax, DWORD PTR $T243736[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 6537 : 	AddNotification(strMessage.toUTF8(), strSummary.toUTF8(), eLiberator);

	push	-1
	push	-1
	mov	edx, DWORD PTR _eLiberator$[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T243847[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T243737[ebp], esp
	mov	DWORD PTR $T243846[ebp], eax
	cmp	DWORD PTR $T243847[ebp], 0
	je	SHORT $LN64@DoLiberati
	mov	ecx, DWORD PTR $T243847[ebp]
	mov	DWORD PTR tv355[ebp], ecx
	jmp	SHORT $LN65@DoLiberati
$LN64@DoLiberati:
	mov	DWORD PTR tv355[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN65@DoLiberati:
	mov	edx, DWORD PTR tv355[ebp]
	push	edx
	mov	ecx, DWORD PTR $T243846[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR $T243846[ebp]
	mov	DWORD PTR tv293[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T243857[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T243738[ebp], esp
	mov	DWORD PTR $T243856[ebp], ecx
	cmp	DWORD PTR $T243857[ebp], 0
	je	SHORT $LN69@DoLiberati
	mov	edx, DWORD PTR $T243857[ebp]
	mov	DWORD PTR tv368[ebp], edx
	jmp	SHORT $LN70@DoLiberati
$LN69@DoLiberati:
	mov	DWORD PTR tv368[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN70@DoLiberati:
	mov	eax, DWORD PTR tv368[ebp]
	push	eax
	mov	ecx, DWORD PTR $T243856[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	ecx, DWORD PTR $T243856[ebp]
	mov	DWORD PTR tv296[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z ; CvMinorCivAI::AddNotification

; 6538 : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z$0:
	lea	ecx, DWORD PTR _strMessage$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z$1:
	lea	ecx, DWORD PTR _strSummary$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z$2:
	lea	ecx, DWORD PTR $T243733[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z$3:
	lea	ecx, DWORD PTR $T243735[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z$4:
	mov	ecx, DWORD PTR $T243737[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-512]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z ENDP ; CvMinorCivAI::DoLiberationByMajor
PUBLIC	?SetTurnLastPledgeBrokenByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::SetTurnLastPledgeBrokenByMajor
PUBLIC	?SetTurnLastPledgedProtectionByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::SetTurnLastPledgedProtectionByMajor
PUBLIC	?CanMajorProtect@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorProtect
; Function compile flags: /Odtp
;	COMDAT ?DoChangeProtectionFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@_N1@Z
_TEXT	SEGMENT
tv159 = -32						; size = 4
tv147 = -28						; size = 4
_this$ = -24						; size = 4
$T243885 = -20						; size = 4
$T243881 = -16						; size = 4
$T243877 = -12						; size = 4
$T243873 = -8						; size = 4
$T243869 = -4						; size = 4
_eMajor$ = 8						; size = 4
_bProtect$ = 12						; size = 1
_bPledgeNowBroken$ = 16					; size = 1
?DoChangeProtectionFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@_N1@Z PROC ; CvMinorCivAI::DoChangeProtectionFromMajor, COMDAT
; _this$ = ecx

; 6541 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 6542 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 6543 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 6544 : 	if(eMajor < 0 || eMajor >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN6@DoChangePr
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN7@DoChangePr
$LN6@DoChangePr:
	jmp	$LN8@DoChangePr
$LN7@DoChangePr:

; 6545 : 
; 6546 : 	if(bProtect == IsProtectedByMajor(eMajor)) return;

	movzx	esi, BYTE PTR _bProtect$[ebp]
	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsProtectedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsProtectedByMajor
	movzx	ecx, al
	cmp	esi, ecx
	jne	SHORT $LN5@DoChangePr
	jmp	$LN8@DoChangePr
$LN5@DoChangePr:

; 6547 : 
; 6548 : 	if(bProtect)

	movzx	edx, BYTE PTR _bProtect$[ebp]
	test	edx, edx
	je	SHORT $LN4@DoChangePr

; 6549 : 	{
; 6550 : 		if(!CanMajorProtect(eMajor))

	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CanMajorProtect@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorProtect
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@DoChangePr

; 6551 : 		{
; 6552 : 			return;

	jmp	$LN8@DoChangePr
$LN3@DoChangePr:

; 6553 : 		}
; 6554 : 		SetTurnLastPledgedProtectionByMajor(eMajor, GC.getGame().getGameTurn());

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T243869[ebp], edx
	mov	ecx, DWORD PTR $T243869[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	push	eax
	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetTurnLastPledgedProtectionByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::SetTurnLastPledgedProtectionByMajor

; 6555 : 	}
; 6556 : 	else

	jmp	SHORT $LN2@DoChangePr
$LN4@DoChangePr:

; 6557 : 	{
; 6558 : 		if(bPledgeNowBroken)

	movzx	ecx, BYTE PTR _bPledgeNowBroken$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@DoChangePr

; 6559 : 		{
; 6560 : 			SetTurnLastPledgeBrokenByMajor(eMajor, GC.getGame().getGameTurn());

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T243873[ebp], edx
	mov	ecx, DWORD PTR $T243873[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	push	eax
	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetTurnLastPledgeBrokenByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::SetTurnLastPledgeBrokenByMajor

; 6561 : 			ChangeFriendshipWithMajorTimes100(eMajor, GC.getMINOR_FRIENDSHIP_DROP_DISHONOR_PLEDGE_TO_PROTECT());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2744
	mov	DWORD PTR $T243877[ebp], ecx
	push	0
	mov	edx, DWORD PTR $T243877[ebp]
	push	edx
	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeFriendshipWithMajorTimes100@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::ChangeFriendshipWithMajorTimes100
$LN2@DoChangePr:

; 6562 : 		}
; 6563 : 	}
; 6564 : 
; 6565 : 	m_abPledgeToProtect[eMajor] = bProtect;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _eMajor$[ebp]
	mov	dl, BYTE PTR _bProtect$[ebp]
	mov	BYTE PTR [ecx+3146], dl

; 6566 : 
; 6567 : 	// In case we had a Pledge to Protect quest active, complete it now
; 6568 : 	DoTestActiveQuestsForPlayer(eMajor, /*bTestComplete*/ true, /*bTestObsolete*/ false, MINOR_CIV_QUEST_PLEDGE_TO_PROTECT);

	push	9
	push	0
	push	1
	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoTestActiveQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@_N1W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::DoTestActiveQuestsForPlayer

; 6569 : 
; 6570 : 	GC.GetEngineUserInterface()->setDirty(GameData_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T243881[ebp]
	mov	DWORD PTR tv147[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv147[ebp], edx
	push	1
	push	11					; 0000000bH
	mov	eax, DWORD PTR tv147[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv147[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 6571 : 	GC.GetEngineUserInterface()->setDirty(CityInfo_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T243885[ebp]
	mov	DWORD PTR tv159[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv159[ebp], edx
	push	1
	push	18					; 00000012H
	mov	eax, DWORD PTR tv159[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv159[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax
$LN8@DoChangePr:

; 6572 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?DoChangeProtectionFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@_N1@Z ENDP ; CvMinorCivAI::DoChangeProtectionFromMajor
_TEXT	ENDS
PUBLIC	?GetTurnLastPledgeBrokenByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetTurnLastPledgeBrokenByMajor
; Function compile flags: /Odtp
;	COMDAT ?CanMajorProtect@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -44						; size = 4
$T243922 = -40						; size = 4
$T243918 = -36						; size = 4
$T243914 = -32						; size = 4
$T243910 = -28						; size = 4
$T243901 = -24						; size = 4
$T243897 = -20						; size = 4
$T243896 = -16						; size = 4
_iCurrentTurn$ = -12					; size = 4
_iGracePeriod$ = -8					; size = 4
_iLastPledgeBrokenTurn$ = -4				; size = 4
_eMajor$ = 8						; size = 4
?CanMajorProtect@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::CanMajorProtect, COMDAT
; _this$ = ecx

; 6575 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 6576 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 6577 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 6578 : 	if(eMajor < 0 || eMajor >= MAX_MAJOR_CIVS) return false;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN4@CanMajorPr
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN5@CanMajorPr
$LN4@CanMajorPr:
	xor	al, al
	jmp	$LN6@CanMajorPr
$LN5@CanMajorPr:

; 6579 : 
; 6580 : 	// If at war, may not protect
; 6581 : 	if(GET_TEAM(GET_PLAYER(eMajor).getTeam()).isAtWar(GetPlayer()->getTeam()))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T243896[ebp], eax
	mov	eax, DWORD PTR $T243896[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T243897[ebp], eax
	mov	edx, DWORD PTR _eMajor$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T243901[ebp], edx
	mov	eax, DWORD PTR $T243901[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T243910[ebp], eax
	mov	edx, DWORD PTR $T243910[ebp]
	imul	edx, 2984				; 00000ba8H
	add	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T243914[ebp], edx
	mov	eax, DWORD PTR $T243897[ebp]
	push	eax
	mov	ecx, DWORD PTR $T243914[ebp]
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@CanMajorPr

; 6582 : 		return false;

	xor	al, al
	jmp	SHORT $LN6@CanMajorPr
$LN3@CanMajorPr:

; 6583 : 
; 6584 : 	// Must have positive INF
; 6585 : 	if(GetEffectiveFriendshipWithMajor(eMajor) < /*0*/ GC.getFRIENDSHIP_THRESHOLD_CAN_PLEDGE_TO_PROTECT())

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2852
	mov	DWORD PTR $T243918[ebp], edx
	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajor
	cmp	eax, DWORD PTR $T243918[ebp]
	jge	SHORT $LN2@CanMajorPr

; 6586 : 		return false;

	xor	al, al
	jmp	SHORT $LN6@CanMajorPr
$LN2@CanMajorPr:

; 6587 : 
; 6588 : 	// Must not be too soon after a previous pledge was broken
; 6589 : 	int iCurrentTurn = GC.getGame().getGameTurn();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T243922[ebp], ecx
	mov	ecx, DWORD PTR $T243922[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	mov	DWORD PTR _iCurrentTurn$[ebp], eax

; 6590 : 	int iLastPledgeBrokenTurn = GetTurnLastPledgeBrokenByMajor(eMajor);

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTurnLastPledgeBrokenByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetTurnLastPledgeBrokenByMajor
	mov	DWORD PTR _iLastPledgeBrokenTurn$[ebp], eax

; 6591 : 	const int iGracePeriod = 20; //antonjs: todo: xml

	mov	DWORD PTR _iGracePeriod$[ebp], 20	; 00000014H

; 6592 : 	if(iLastPledgeBrokenTurn >= 0 && iLastPledgeBrokenTurn + iGracePeriod > iCurrentTurn)

	cmp	DWORD PTR _iLastPledgeBrokenTurn$[ebp], 0
	jl	SHORT $LN1@CanMajorPr
	mov	eax, DWORD PTR _iLastPledgeBrokenTurn$[ebp]
	add	eax, 20					; 00000014H
	cmp	eax, DWORD PTR _iCurrentTurn$[ebp]
	jle	SHORT $LN1@CanMajorPr

; 6593 : 		return false;

	xor	al, al
	jmp	SHORT $LN6@CanMajorPr
$LN1@CanMajorPr:

; 6594 : 
; 6595 : 	return true;

	mov	al, 1
$LN6@CanMajorPr:

; 6596 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?CanMajorProtect@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::CanMajorProtect
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?CanMajorStartProtection@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
_eMajor$ = 8						; size = 4
?CanMajorStartProtection@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::CanMajorStartProtection, COMDAT
; _this$ = ecx

; 6599 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 6600 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 6601 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 6602 : 	if(eMajor < 0 || eMajor >= MAX_MAJOR_CIVS) return false;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN1@CanMajorSt
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN2@CanMajorSt
$LN1@CanMajorSt:
	xor	al, al
	jmp	SHORT $LN3@CanMajorSt
$LN2@CanMajorSt:

; 6603 : 
; 6604 : 	return (CanMajorProtect(eMajor) && !IsProtectedByMajor(eMajor));

	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CanMajorProtect@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorProtect
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@CanMajorSt
	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsProtectedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsProtectedByMajor
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@CanMajorSt
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN6@CanMajorSt
$LN5@CanMajorSt:
	mov	DWORD PTR tv76[ebp], 0
$LN6@CanMajorSt:
	mov	al, BYTE PTR tv76[ebp]
$LN3@CanMajorSt:

; 6605 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?CanMajorStartProtection@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::CanMajorStartProtection
_TEXT	ENDS
PUBLIC	?GetTurnLastPledgedProtectionByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetTurnLastPledgedProtectionByMajor
PUBLIC	?CanMajorWithdrawProtection@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorWithdrawProtection
; Function compile flags: /Odtp
;	COMDAT ?CanMajorWithdrawProtection@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T243932 = -16						; size = 4
_iCurrentTurn$ = -12					; size = 4
_iLastPledgeTurn$ = -8					; size = 4
_iGracePeriod$ = -4					; size = 4
_eMajor$ = 8						; size = 4
?CanMajorWithdrawProtection@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::CanMajorWithdrawProtection, COMDAT
; _this$ = ecx

; 6608 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 6609 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 6610 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 6611 : 	if(eMajor < 0 || eMajor >= MAX_MAJOR_CIVS) return false;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN3@CanMajorWi
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN4@CanMajorWi
$LN3@CanMajorWi:
	xor	al, al
	jmp	SHORT $LN5@CanMajorWi
$LN4@CanMajorWi:

; 6612 : 
; 6613 : 	if (!IsProtectedByMajor(eMajor))

	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsProtectedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsProtectedByMajor
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@CanMajorWi

; 6614 : 		return false;

	xor	al, al
	jmp	SHORT $LN5@CanMajorWi
$LN2@CanMajorWi:

; 6615 : 
; 6616 : 	// Pledge is locked in for a certain time
; 6617 : 	int iCurrentTurn = GC.getGame().getGameTurn();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T243932[ebp], edx
	mov	ecx, DWORD PTR $T243932[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	mov	DWORD PTR _iCurrentTurn$[ebp], eax

; 6618 : 	int iLastPledgeTurn = GetTurnLastPledgedProtectionByMajor(eMajor);

	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTurnLastPledgedProtectionByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetTurnLastPledgedProtectionByMajor
	mov	DWORD PTR _iLastPledgeTurn$[ebp], eax

; 6619 : 	const int iGracePeriod = 10; //antonjs: todo: xml

	mov	DWORD PTR _iGracePeriod$[ebp], 10	; 0000000aH

; 6620 : 	if (iLastPledgeTurn >= 0 && iLastPledgeTurn + iGracePeriod > iCurrentTurn)

	cmp	DWORD PTR _iLastPledgeTurn$[ebp], 0
	jl	SHORT $LN1@CanMajorWi
	mov	ecx, DWORD PTR _iLastPledgeTurn$[ebp]
	add	ecx, 10					; 0000000aH
	cmp	ecx, DWORD PTR _iCurrentTurn$[ebp]
	jle	SHORT $LN1@CanMajorWi

; 6621 : 		return false;

	xor	al, al
	jmp	SHORT $LN5@CanMajorWi
$LN1@CanMajorWi:

; 6622 : 
; 6623 : 	return true;

	mov	al, 1
$LN5@CanMajorWi:

; 6624 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?CanMajorWithdrawProtection@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::CanMajorWithdrawProtection
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsProtectedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eMajor$ = 8						; size = 4
?IsProtectedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::IsProtectedByMajor, COMDAT
; _this$ = ecx

; 6627 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 6628 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 6629 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 6630 : 	if(eMajor < 0 || eMajor >= MAX_MAJOR_CIVS) return false;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN1@IsProtecte
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN2@IsProtecte
$LN1@IsProtecte:
	xor	al, al
	jmp	SHORT $LN3@IsProtecte
$LN2@IsProtecte:

; 6631 : 
; 6632 : 	return m_abPledgeToProtect[eMajor];

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _eMajor$[ebp]
	mov	al, BYTE PTR [eax+3146]
$LN3@IsProtecte:

; 6633 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsProtectedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::IsProtectedByMajor
_TEXT	ENDS
PUBLIC	?IsProtectedByAnyMajor@CvMinorCivAI@@QBE_NXZ	; CvMinorCivAI::IsProtectedByAnyMajor
; Function compile flags: /Odtp
;	COMDAT ?IsProtectedByAnyMajor@CvMinorCivAI@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iPlayerLoop$226065 = -4				; size = 4
?IsProtectedByAnyMajor@CvMinorCivAI@@QBE_NXZ PROC	; CvMinorCivAI::IsProtectedByAnyMajor, COMDAT
; _this$ = ecx

; 6636 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 6637 : 	for(int iPlayerLoop = 0; iPlayerLoop < MAX_MAJOR_CIVS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$226065[ebp], 0
	jmp	SHORT $LN4@IsProtecte@2
$LN3@IsProtecte@2:
	mov	eax, DWORD PTR _iPlayerLoop$226065[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayerLoop$226065[ebp], eax
$LN4@IsProtecte@2:
	cmp	DWORD PTR _iPlayerLoop$226065[ebp], 22	; 00000016H
	jge	SHORT $LN2@IsProtecte@2

; 6638 : 		if(IsProtectedByMajor((PlayerTypes)iPlayerLoop))

	mov	ecx, DWORD PTR _iPlayerLoop$226065[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsProtectedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsProtectedByMajor
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@IsProtecte@2

; 6639 : 			return true;

	mov	al, 1
	jmp	SHORT $LN5@IsProtecte@2
$LN1@IsProtecte@2:

; 6640 : 	return false;

	jmp	SHORT $LN3@IsProtecte@2
$LN2@IsProtecte@2:
	xor	al, al
$LN5@IsProtecte@2:

; 6641 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsProtectedByAnyMajor@CvMinorCivAI@@QBE_NXZ ENDP	; CvMinorCivAI::IsProtectedByAnyMajor
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetTurnLastPledgedProtectionByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eMajor$ = 8						; size = 4
?GetTurnLastPledgedProtectionByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetTurnLastPledgedProtectionByMajor, COMDAT
; _this$ = ecx

; 6644 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 6645 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 6646 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 6647 : 	if(eMajor < 0 || eMajor >= MAX_MAJOR_CIVS) return -1;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN1@GetTurnLas
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN2@GetTurnLas
$LN1@GetTurnLas:
	or	eax, -1
	jmp	SHORT $LN3@GetTurnLas
$LN2@GetTurnLas:

; 6648 : 
; 6649 : 	return m_aiTurnLastPledged[eMajor];

	mov	eax, DWORD PTR _eMajor$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+2904]
$LN3@GetTurnLas:

; 6650 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetTurnLastPledgedProtectionByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetTurnLastPledgedProtectionByMajor
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?SetTurnLastPledgedProtectionByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eMajor$ = 8						; size = 4
_iTurn$ = 12						; size = 4
?SetTurnLastPledgedProtectionByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z PROC ; CvMinorCivAI::SetTurnLastPledgedProtectionByMajor, COMDAT
; _this$ = ecx

; 6653 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 6654 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 6655 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 6656 : 	if(eMajor < 0 || eMajor >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN1@SetTurnLas
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN2@SetTurnLas
$LN1@SetTurnLas:
	jmp	SHORT $LN3@SetTurnLas
$LN2@SetTurnLas:

; 6657 : 
; 6658 : 	m_aiTurnLastPledged[eMajor] = iTurn;

	mov	eax, DWORD PTR _eMajor$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _iTurn$[ebp]
	mov	DWORD PTR [ecx+eax*4+2904], edx
$LN3@SetTurnLas:

; 6659 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetTurnLastPledgedProtectionByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ENDP ; CvMinorCivAI::SetTurnLastPledgedProtectionByMajor
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetTurnLastPledgeBrokenByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eMajor$ = 8						; size = 4
?GetTurnLastPledgeBrokenByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetTurnLastPledgeBrokenByMajor, COMDAT
; _this$ = ecx

; 6662 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 6663 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 6664 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 6665 : 	if(eMajor < 0 || eMajor >= MAX_MAJOR_CIVS) return -1;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN1@GetTurnLas@2
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN2@GetTurnLas@2
$LN1@GetTurnLas@2:
	or	eax, -1
	jmp	SHORT $LN3@GetTurnLas@2
$LN2@GetTurnLas@2:

; 6666 : 
; 6667 : 	return m_aiTurnLastBrokePledge[eMajor];

	mov	eax, DWORD PTR _eMajor$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+2992]
$LN3@GetTurnLas@2:

; 6668 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetTurnLastPledgeBrokenByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetTurnLastPledgeBrokenByMajor
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?SetTurnLastPledgeBrokenByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eMajor$ = 8						; size = 4
_iTurn$ = 12						; size = 4
?SetTurnLastPledgeBrokenByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z PROC ; CvMinorCivAI::SetTurnLastPledgeBrokenByMajor, COMDAT
; _this$ = ecx

; 6671 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 6672 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 6673 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 6674 : 	if(eMajor < 0 || eMajor >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN1@SetTurnLas@2
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN2@SetTurnLas@2
$LN1@SetTurnLas@2:
	jmp	SHORT $LN3@SetTurnLas@2
$LN2@SetTurnLas@2:

; 6675 : 
; 6676 : 	m_aiTurnLastBrokePledge[eMajor] = iTurn;

	mov	eax, DWORD PTR _eMajor$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _iTurn$[ebp]
	mov	DWORD PTR [ecx+eax*4+2992], edx
$LN3@SetTurnLas@2:

; 6677 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetTurnLastPledgeBrokenByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ENDP ; CvMinorCivAI::SetTurnLastPledgeBrokenByMajor
_TEXT	ENDS
PUBLIC	?GetFaithFlatAlliesBonus@CvMinorCivAI@@QBEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetFaithFlatAlliesBonus
PUBLIC	?GetFaithFlatFriendshipBonus@CvMinorCivAI@@QBEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetFaithFlatFriendshipBonus
PUBLIC	?GetHappinessPerLuxuryAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessPerLuxuryAlliesBonus
PUBLIC	?GetHappinessFlatAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessFlatAlliesBonus
PUBLIC	?GetHappinessPerLuxuryFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessPerLuxuryFriendshipBonus
PUBLIC	?GetHappinessFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessFlatFriendshipBonus
PUBLIC	?GetCulturePerBuildingAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCulturePerBuildingAlliesBonus
PUBLIC	?GetCultureFlatAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCultureFlatAlliesBonus
PUBLIC	?GetCulturePerBuildingFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCulturePerBuildingFriendshipBonus
PUBLIC	?GetCultureFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCultureFlatFriendshipBonus
PUBLIC	?DoMajorCivEraChange@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::DoMajorCivEraChange
; Function compile flags: /Odtp
;	COMDAT ?DoMajorCivEraChange@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4EraTypes@@@Z
_TEXT	SEGMENT
_this$ = -76						; size = 4
_iNewFaith$226143 = -72					; size = 4
_iOldFaith$226142 = -68					; size = 4
_iNewFaith$226139 = -64					; size = 4
_iOldFaith$226138 = -60					; size = 4
_iOldHappiness$226132 = -56				; size = 4
_iNewHappiness$226133 = -52				; size = 4
_iOldHappiness$226128 = -48				; size = 4
_iNewHappiness$226129 = -44				; size = 4
_iOldCulture$226122 = -40				; size = 4
_iNewCulture$226123 = -36				; size = 4
_iOldCulture$226118 = -32				; size = 4
_iNewCulture$226119 = -28				; size = 4
_iNewFood$226112 = -24					; size = 4
_iOldFood$226111 = -20					; size = 4
_iNewFood$226107 = -16					; size = 4
_iOldFood$226106 = -12					; size = 4
_eTrait$ = -8						; size = 4
_bSomethingChanged$ = -1				; size = 1
_ePlayer$ = 8						; size = 4
_eNewEra$ = 12						; size = 4
?DoMajorCivEraChange@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4EraTypes@@@Z PROC ; CvMinorCivAI::DoMajorCivEraChange, COMDAT
; _this$ = ecx

; 6689 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 6690 : 	bool bSomethingChanged = false;

	mov	BYTE PTR _bSomethingChanged$[ebp], 0

; 6691 : 
; 6692 : 	MinorCivTraitTypes eTrait = GetTrait();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait
	mov	DWORD PTR _eTrait$[ebp], eax

; 6693 : 
; 6694 : 	// MARITIME
; 6695 : 	if(eTrait == MINOR_CIV_TRAIT_MARITIME)

	cmp	DWORD PTR _eTrait$[ebp], 2
	jne	$LN25@DoMajorCiv

; 6696 : 	{
; 6697 : 		// Friends
; 6698 : 		if(IsFriends(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	movzx	ecx, al
	test	ecx, ecx
	je	$LN24@DoMajorCiv

; 6699 : 		{
; 6700 : 			int iOldFood, iNewFood;
; 6701 : 
; 6702 : 			// Capital
; 6703 : 			iOldFood = GetFriendsCapitalFoodBonus(ePlayer);

	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFriendsCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetFriendsCapitalFoodBonus
	mov	DWORD PTR _iOldFood$226106[ebp], eax

; 6704 : 			iNewFood = GetFriendsCapitalFoodBonus(ePlayer, eNewEra);

	mov	eax, DWORD PTR _eNewEra$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFriendsCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetFriendsCapitalFoodBonus
	mov	DWORD PTR _iNewFood$226107[ebp], eax

; 6705 : 
; 6706 : 			if(iOldFood != iNewFood)

	mov	edx, DWORD PTR _iOldFood$226106[ebp]
	cmp	edx, DWORD PTR _iNewFood$226107[ebp]
	je	SHORT $LN23@DoMajorCiv

; 6707 : 			{
; 6708 : 				bSomethingChanged = true;

	mov	BYTE PTR _bSomethingChanged$[ebp], 1

; 6709 : 				GET_PLAYER(ePlayer).ChangeCapitalYieldChange(YIELD_FOOD, iNewFood - iOldFood);

	mov	eax, DWORD PTR _iNewFood$226107[ebp]
	sub	eax, DWORD PTR _iOldFood$226106[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?ChangeCapitalYieldChange@CvPlayer@@QAEXW4YieldTypes@@H@Z ; CvPlayer::ChangeCapitalYieldChange
$LN23@DoMajorCiv:

; 6710 : 			}
; 6711 : 
; 6712 : 			// Other Cities
; 6713 : 			iOldFood = GetFriendsOtherCityFoodBonus(ePlayer);

	push	-1
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFriendsOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetFriendsOtherCityFoodBonus
	mov	DWORD PTR _iOldFood$226106[ebp], eax

; 6714 : 			iNewFood = GetFriendsOtherCityFoodBonus(ePlayer, eNewEra);

	mov	edx, DWORD PTR _eNewEra$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFriendsOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetFriendsOtherCityFoodBonus
	mov	DWORD PTR _iNewFood$226107[ebp], eax

; 6715 : 
; 6716 : 			if(iOldFood != iNewFood)

	mov	ecx, DWORD PTR _iOldFood$226106[ebp]
	cmp	ecx, DWORD PTR _iNewFood$226107[ebp]
	je	SHORT $LN24@DoMajorCiv

; 6717 : 			{
; 6718 : 				bSomethingChanged = true;

	mov	BYTE PTR _bSomethingChanged$[ebp], 1

; 6719 : 				GET_PLAYER(ePlayer).ChangeCityYieldChange(YIELD_FOOD, iNewFood - iOldFood);

	mov	edx, DWORD PTR _iNewFood$226107[ebp]
	sub	edx, DWORD PTR _iOldFood$226106[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?ChangeCityYieldChange@CvPlayer@@QAEXW4YieldTypes@@H@Z ; CvPlayer::ChangeCityYieldChange
$LN24@DoMajorCiv:

; 6720 : 			}
; 6721 : 		}
; 6722 : 
; 6723 : 		// Allies
; 6724 : 		if(IsAllies(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAllies
	movzx	ecx, al
	test	ecx, ecx
	je	$LN21@DoMajorCiv

; 6725 : 		{
; 6726 : 			int iOldFood, iNewFood;
; 6727 : 
; 6728 : 			// Capital
; 6729 : 			iOldFood = GetAlliesCapitalFoodBonus(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlliesCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetAlliesCapitalFoodBonus
	mov	DWORD PTR _iOldFood$226111[ebp], eax

; 6730 : 			iNewFood = GetAlliesCapitalFoodBonus(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlliesCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetAlliesCapitalFoodBonus
	mov	DWORD PTR _iNewFood$226112[ebp], eax

; 6731 : 
; 6732 : 			if(iOldFood != iNewFood)

	mov	ecx, DWORD PTR _iOldFood$226111[ebp]
	cmp	ecx, DWORD PTR _iNewFood$226112[ebp]
	je	SHORT $LN20@DoMajorCiv

; 6733 : 			{
; 6734 : 				bSomethingChanged = true;

	mov	BYTE PTR _bSomethingChanged$[ebp], 1

; 6735 : 				GET_PLAYER(ePlayer).ChangeCapitalYieldChange(YIELD_FOOD, iNewFood - iOldFood);

	mov	edx, DWORD PTR _iNewFood$226112[ebp]
	sub	edx, DWORD PTR _iOldFood$226111[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?ChangeCapitalYieldChange@CvPlayer@@QAEXW4YieldTypes@@H@Z ; CvPlayer::ChangeCapitalYieldChange
$LN20@DoMajorCiv:

; 6736 : 			}
; 6737 : 
; 6738 : 			// Other Cities
; 6739 : 			iOldFood = GetAlliesOtherCityFoodBonus(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlliesOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetAlliesOtherCityFoodBonus
	mov	DWORD PTR _iOldFood$226111[ebp], eax

; 6740 : 			iNewFood = GetAlliesOtherCityFoodBonus(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlliesOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetAlliesOtherCityFoodBonus
	mov	DWORD PTR _iNewFood$226112[ebp], eax

; 6741 : 
; 6742 : 			if(iOldFood != iNewFood)

	mov	edx, DWORD PTR _iOldFood$226111[ebp]
	cmp	edx, DWORD PTR _iNewFood$226112[ebp]
	je	SHORT $LN21@DoMajorCiv

; 6743 : 			{
; 6744 : 				bSomethingChanged = true;

	mov	BYTE PTR _bSomethingChanged$[ebp], 1

; 6745 : 				GET_PLAYER(ePlayer).ChangeCityYieldChange(YIELD_FOOD, iNewFood - iOldFood);

	mov	eax, DWORD PTR _iNewFood$226112[ebp]
	sub	eax, DWORD PTR _iOldFood$226111[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?ChangeCityYieldChange@CvPlayer@@QAEXW4YieldTypes@@H@Z ; CvPlayer::ChangeCityYieldChange
$LN21@DoMajorCiv:

; 6746 : 			}
; 6747 : 		}
; 6748 : 	}

	jmp	$LN18@DoMajorCiv
$LN25@DoMajorCiv:

; 6749 : 
; 6750 : 	// CULTURED
; 6751 : 	else if(eTrait == MINOR_CIV_TRAIT_CULTURED)

	cmp	DWORD PTR _eTrait$[ebp], 0
	jne	$LN17@DoMajorCiv

; 6752 : 	{
; 6753 : 		// Friends
; 6754 : 		if(IsFriends(ePlayer))

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN16@DoMajorCiv

; 6755 : 		{
; 6756 : 			int iOldCulture = GetCultureFlatFriendshipBonus(ePlayer) + GetCulturePerBuildingFriendshipBonus(ePlayer);

	push	-1
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCultureFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCultureFlatFriendshipBonus
	mov	esi, eax
	push	-1
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCulturePerBuildingFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCulturePerBuildingFriendshipBonus
	add	esi, eax
	mov	DWORD PTR _iOldCulture$226118[ebp], esi

; 6757 : 			int iNewCulture = GetCultureFlatFriendshipBonus(ePlayer, eNewEra) + GetCulturePerBuildingFriendshipBonus(ePlayer, eNewEra);

	mov	edx, DWORD PTR _eNewEra$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCultureFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCultureFlatFriendshipBonus
	mov	esi, eax
	mov	ecx, DWORD PTR _eNewEra$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCulturePerBuildingFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCulturePerBuildingFriendshipBonus
	add	esi, eax
	mov	DWORD PTR _iNewCulture$226119[ebp], esi

; 6758 : 
; 6759 : 			if(iOldCulture != iNewCulture)

	mov	eax, DWORD PTR _iOldCulture$226118[ebp]
	cmp	eax, DWORD PTR _iNewCulture$226119[ebp]
	je	SHORT $LN16@DoMajorCiv

; 6760 : 			{
; 6761 : 				bSomethingChanged = true;

	mov	BYTE PTR _bSomethingChanged$[ebp], 1
$LN16@DoMajorCiv:

; 6762 : 			}
; 6763 : 		}
; 6764 : 
; 6765 : 		// Allies
; 6766 : 		if(IsAllies(ePlayer))

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAllies
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN14@DoMajorCiv

; 6767 : 		{
; 6768 : 			int iOldCulture = GetCultureFlatAlliesBonus(ePlayer) + GetCulturePerBuildingAlliesBonus(ePlayer);

	push	-1
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCultureFlatAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCultureFlatAlliesBonus
	mov	esi, eax
	push	-1
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCulturePerBuildingAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCulturePerBuildingAlliesBonus
	add	esi, eax
	mov	DWORD PTR _iOldCulture$226122[ebp], esi

; 6769 : 			int iNewCulture = GetCultureFlatAlliesBonus(ePlayer, eNewEra) + GetCulturePerBuildingAlliesBonus(ePlayer, eNewEra);

	mov	edx, DWORD PTR _eNewEra$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCultureFlatAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCultureFlatAlliesBonus
	mov	esi, eax
	mov	ecx, DWORD PTR _eNewEra$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCulturePerBuildingAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCulturePerBuildingAlliesBonus
	add	esi, eax
	mov	DWORD PTR _iNewCulture$226123[ebp], esi

; 6770 : 
; 6771 : 			if(iOldCulture != iNewCulture)

	mov	eax, DWORD PTR _iOldCulture$226122[ebp]
	cmp	eax, DWORD PTR _iNewCulture$226123[ebp]
	je	SHORT $LN14@DoMajorCiv

; 6772 : 			{
; 6773 : 				bSomethingChanged = true;

	mov	BYTE PTR _bSomethingChanged$[ebp], 1
$LN14@DoMajorCiv:

; 6774 : 			}
; 6775 : 		}
; 6776 : 	}

	jmp	$LN18@DoMajorCiv
$LN17@DoMajorCiv:

; 6777 : 
; 6778 : 	// MERCANTILE
; 6779 : 	else if(eTrait == MINOR_CIV_TRAIT_MERCANTILE)

	cmp	DWORD PTR _eTrait$[ebp], 3
	jne	$LN11@DoMajorCiv

; 6780 : 	{
; 6781 : 		// Friends
; 6782 : 		if(IsFriends(ePlayer))

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN10@DoMajorCiv

; 6783 : 		{
; 6784 : 			int iOldHappiness, iNewHappiness;
; 6785 : 
; 6786 : 			iOldHappiness = GetHappinessFlatFriendshipBonus(ePlayer) + GetHappinessPerLuxuryFriendshipBonus(ePlayer);

	push	-1
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetHappinessFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessFlatFriendshipBonus
	mov	esi, eax
	push	-1
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetHappinessPerLuxuryFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessPerLuxuryFriendshipBonus
	add	esi, eax
	mov	DWORD PTR _iOldHappiness$226128[ebp], esi

; 6787 : 			iNewHappiness = GetHappinessFlatFriendshipBonus(ePlayer, eNewEra) + GetHappinessPerLuxuryFriendshipBonus(ePlayer, eNewEra);

	mov	edx, DWORD PTR _eNewEra$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetHappinessFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessFlatFriendshipBonus
	mov	esi, eax
	mov	ecx, DWORD PTR _eNewEra$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetHappinessPerLuxuryFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessPerLuxuryFriendshipBonus
	add	esi, eax
	mov	DWORD PTR _iNewHappiness$226129[ebp], esi

; 6788 : 
; 6789 : 			if(iOldHappiness != iNewHappiness)

	mov	eax, DWORD PTR _iOldHappiness$226128[ebp]
	cmp	eax, DWORD PTR _iNewHappiness$226129[ebp]
	je	SHORT $LN10@DoMajorCiv

; 6790 : 			{
; 6791 : 				bSomethingChanged = true;

	mov	BYTE PTR _bSomethingChanged$[ebp], 1

; 6792 : 				GET_PLAYER(ePlayer).DoUpdateHappiness();

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?DoUpdateHappiness@CvPlayer@@QAEXXZ	; CvPlayer::DoUpdateHappiness
$LN10@DoMajorCiv:

; 6793 : 			}
; 6794 : 		}
; 6795 : 
; 6796 : 		// Allies
; 6797 : 		if(IsAllies(ePlayer))

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAllies
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN8@DoMajorCiv

; 6798 : 		{
; 6799 : 			int iOldHappiness, iNewHappiness;
; 6800 : 
; 6801 : 			iOldHappiness = GetHappinessFlatAlliesBonus(ePlayer) + GetHappinessPerLuxuryAlliesBonus(ePlayer);

	push	-1
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetHappinessFlatAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessFlatAlliesBonus
	mov	esi, eax
	push	-1
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetHappinessPerLuxuryAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessPerLuxuryAlliesBonus
	add	esi, eax
	mov	DWORD PTR _iOldHappiness$226132[ebp], esi

; 6802 : 			iNewHappiness = GetHappinessFlatAlliesBonus(ePlayer, eNewEra) + GetHappinessPerLuxuryAlliesBonus(ePlayer, eNewEra);

	mov	edx, DWORD PTR _eNewEra$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetHappinessFlatAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessFlatAlliesBonus
	mov	esi, eax
	mov	ecx, DWORD PTR _eNewEra$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetHappinessPerLuxuryAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessPerLuxuryAlliesBonus
	add	esi, eax
	mov	DWORD PTR _iNewHappiness$226133[ebp], esi

; 6803 : 
; 6804 : 			if(iOldHappiness != iNewHappiness)

	mov	eax, DWORD PTR _iOldHappiness$226132[ebp]
	cmp	eax, DWORD PTR _iNewHappiness$226133[ebp]
	je	SHORT $LN8@DoMajorCiv

; 6805 : 			{
; 6806 : 				bSomethingChanged = true;

	mov	BYTE PTR _bSomethingChanged$[ebp], 1

; 6807 : 				GET_PLAYER(ePlayer).DoUpdateHappiness();

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?DoUpdateHappiness@CvPlayer@@QAEXXZ	; CvPlayer::DoUpdateHappiness
$LN8@DoMajorCiv:

; 6808 : 			}
; 6809 : 		}
; 6810 : 	}

	jmp	$LN18@DoMajorCiv
$LN11@DoMajorCiv:

; 6811 : 
; 6812 : 	// RELIGIOUS
; 6813 : 	else if(eTrait == MINOR_CIV_TRAIT_RELIGIOUS)

	cmp	DWORD PTR _eTrait$[ebp], 4
	jne	$LN18@DoMajorCiv

; 6814 : 	{
; 6815 : 		// Friends
; 6816 : 		if(IsFriends(ePlayer))

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@DoMajorCiv

; 6817 : 		{
; 6818 : 			int iOldFaith = GetFaithFlatFriendshipBonus(ePlayer);

	push	-1
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFaithFlatFriendshipBonus@CvMinorCivAI@@QBEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetFaithFlatFriendshipBonus
	mov	DWORD PTR _iOldFaith$226138[ebp], eax

; 6819 : 			int iNewFaith = GetFaithFlatFriendshipBonus(ePlayer, eNewEra);

	mov	ecx, DWORD PTR _eNewEra$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFaithFlatFriendshipBonus@CvMinorCivAI@@QBEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetFaithFlatFriendshipBonus
	mov	DWORD PTR _iNewFaith$226139[ebp], eax

; 6820 : 
; 6821 : 			if(iOldFaith != iNewFaith)

	mov	eax, DWORD PTR _iOldFaith$226138[ebp]
	cmp	eax, DWORD PTR _iNewFaith$226139[ebp]
	je	SHORT $LN4@DoMajorCiv

; 6822 : 			{
; 6823 : 				bSomethingChanged = true;

	mov	BYTE PTR _bSomethingChanged$[ebp], 1
$LN4@DoMajorCiv:

; 6824 : 			}
; 6825 : 		}
; 6826 : 
; 6827 : 		// Allies
; 6828 : 		if(IsAllies(ePlayer))

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAllies
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN18@DoMajorCiv

; 6829 : 		{
; 6830 : 			int iOldFaith = GetFaithFlatAlliesBonus(ePlayer);

	push	-1
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFaithFlatAlliesBonus@CvMinorCivAI@@QBEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetFaithFlatAlliesBonus
	mov	DWORD PTR _iOldFaith$226142[ebp], eax

; 6831 : 			int iNewFaith = GetFaithFlatAlliesBonus(ePlayer, eNewEra);

	mov	ecx, DWORD PTR _eNewEra$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFaithFlatAlliesBonus@CvMinorCivAI@@QBEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetFaithFlatAlliesBonus
	mov	DWORD PTR _iNewFaith$226143[ebp], eax

; 6832 : 
; 6833 : 			if(iOldFaith != iNewFaith)

	mov	eax, DWORD PTR _iOldFaith$226142[ebp]
	cmp	eax, DWORD PTR _iNewFaith$226143[ebp]
	je	SHORT $LN18@DoMajorCiv

; 6834 : 			{
; 6835 : 				bSomethingChanged = true;

	mov	BYTE PTR _bSomethingChanged$[ebp], 1
$LN18@DoMajorCiv:

; 6836 : 			}
; 6837 : 		}
; 6838 : 	}
; 6839 : 
; 6840 : #ifdef AUI_CITIZENS_MID_TURN_ASSIGN_RUNS_SELF_CONSISTENCY
; 6841 : 	if(bSomethingChanged)
; 6842 : 		GET_PLAYER(ePlayer).doSelfConsistencyCheckAllCities();
; 6843 : #endif
; 6844 : 
; 6845 : 	return bSomethingChanged;

	mov	al, BYTE PTR _bSomethingChanged$[ebp]

; 6846 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?DoMajorCivEraChange@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4EraTypes@@@Z ENDP ; CvMinorCivAI::DoMajorCivEraChange
_TEXT	ENDS
PUBLIC	?GetScienceFriendshipBonusTimes100@CvMinorCivAI@@QAEHXZ ; CvMinorCivAI::GetScienceFriendshipBonusTimes100
PUBLIC	?GetScienceFriendshipBonus@CvMinorCivAI@@QAEHXZ	; CvMinorCivAI::GetScienceFriendshipBonus
; Function compile flags: /Odtp
;	COMDAT ?GetScienceFriendshipBonus@CvMinorCivAI@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iResult$ = -4						; size = 4
?GetScienceFriendshipBonus@CvMinorCivAI@@QAEHXZ PROC	; CvMinorCivAI::GetScienceFriendshipBonus, COMDAT
; _this$ = ecx

; 6850 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 6851 : 	int iResult = GetScienceFriendshipBonusTimes100();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetScienceFriendshipBonusTimes100@CvMinorCivAI@@QAEHXZ ; CvMinorCivAI::GetScienceFriendshipBonusTimes100
	mov	DWORD PTR _iResult$[ebp], eax

; 6852 : 	iResult /= 100;

	mov	eax, DWORD PTR _iResult$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iResult$[ebp], eax

; 6853 : 
; 6854 : 	return iResult;

	mov	eax, DWORD PTR _iResult$[ebp]

; 6855 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetScienceFriendshipBonus@CvMinorCivAI@@QAEHXZ ENDP	; CvMinorCivAI::GetScienceFriendshipBonus
_TEXT	ENDS
EXTRN	?GetScienceTimes100@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScienceTimes100
; Function compile flags: /Odtp
;	COMDAT ?GetScienceFriendshipBonusTimes100@CvMinorCivAI@@QAEHXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T243985 = -16						; size = 4
$T243981 = -12						; size = 4
$T243977 = -8						; size = 4
_iResult$ = -4						; size = 4
?GetScienceFriendshipBonusTimes100@CvMinorCivAI@@QAEHXZ PROC ; CvMinorCivAI::GetScienceFriendshipBonusTimes100, COMDAT
; _this$ = ecx

; 6858 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 6859 : 	int iResult = GET_PLAYER(m_pPlayer->GetID()).GetScienceTimes100() * /*25*/ GC.getMINOR_CIV_SCIENCE_BONUS_MULTIPLIER();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T243977[ebp], edx
	mov	eax, DWORD PTR $T243977[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T243981[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2860
	mov	DWORD PTR $T243985[ebp], ecx
	mov	ecx, DWORD PTR $T243981[ebp]
	call	?GetScienceTimes100@CvPlayer@@QBEHXZ	; CvPlayer::GetScienceTimes100
	imul	eax, DWORD PTR $T243985[ebp]
	mov	DWORD PTR _iResult$[ebp], eax

; 6860 : 	iResult /= 100;

	mov	eax, DWORD PTR _iResult$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iResult$[ebp], eax

; 6861 : 
; 6862 : 	return iResult;

	mov	eax, DWORD PTR _iResult$[ebp]

; 6863 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetScienceFriendshipBonusTimes100@CvMinorCivAI@@QAEHXZ ENDP ; CvMinorCivAI::GetScienceFriendshipBonusTimes100
_TEXT	ENDS
PUBLIC	?GetCurrentScienceFriendshipBonusTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentScienceFriendshipBonusTimes100
EXTRN	?IsGetsScienceFromPlayer@CvPlayer@@QBE_NW4PlayerTypes@@@Z:PROC ; CvPlayer::IsGetsScienceFromPlayer
; Function compile flags: /Odtp
;	COMDAT ?GetCurrentScienceFriendshipBonusTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T244001 = -12						; size = 4
$T243997 = -8						; size = 4
$T243996 = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetCurrentScienceFriendshipBonusTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetCurrentScienceFriendshipBonusTimes100, COMDAT
; _this$ = ecx

; 6867 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 6868 : 	if(GET_PLAYER(ePlayer).IsGetsScienceFromPlayer(GetPlayer()->GetID()))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T243996[ebp], eax
	mov	eax, DWORD PTR $T243996[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T243997[ebp], ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244001[ebp], edx
	mov	eax, DWORD PTR $T243997[ebp]
	push	eax
	mov	ecx, DWORD PTR $T244001[ebp]
	call	?IsGetsScienceFromPlayer@CvPlayer@@QBE_NW4PlayerTypes@@@Z ; CvPlayer::IsGetsScienceFromPlayer
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@GetCurrent

; 6869 : 		return GetScienceFriendshipBonusTimes100();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetScienceFriendshipBonusTimes100@CvMinorCivAI@@QAEHXZ ; CvMinorCivAI::GetScienceFriendshipBonusTimes100
	jmp	SHORT $LN2@GetCurrent
$LN1@GetCurrent:

; 6870 : 
; 6871 : 	return 0;

	xor	eax, eax
$LN2@GetCurrent:

; 6872 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetCurrentScienceFriendshipBonusTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetCurrentScienceFriendshipBonusTimes100
_TEXT	ENDS
PUBLIC	??_C@_0N@FKOCAGBC@ERA_MEDIEVAL?$AA@		; `string'
PUBLIC	??_C@_0P@IGHGNBHE@ERA_INDUSTRIAL?$AA@		; `string'
EXTRN	?GetCurrentEra@CvTeam@@QBE?AW4EraTypes@@XZ:PROC	; CvTeam::GetCurrentEra
;	COMDAT ??_C@_0N@FKOCAGBC@ERA_MEDIEVAL?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
CONST	SEGMENT
??_C@_0N@FKOCAGBC@ERA_MEDIEVAL?$AA@ DB 'ERA_MEDIEVAL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IGHGNBHE@ERA_INDUSTRIAL?$AA@
CONST	SEGMENT
??_C@_0P@IGHGNBHE@ERA_INDUSTRIAL?$AA@ DB 'ERA_INDUSTRIAL', 00H ; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
CONST	ENDS
;	COMDAT ?GetCultureFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z
_TEXT	SEGMENT
_this$ = -44						; size = 4
$T244032 = -40						; size = 4
$T244028 = -36						; size = 4
$T244024 = -32						; size = 4
$T244020 = -28						; size = 4
$T244016 = -24						; size = 4
$T244007 = -20						; size = 4
_iCultureBonus$ = -16					; size = 4
_eCurrentEra$ = -12					; size = 4
_eMedieval$ = -8					; size = 4
_eIndustrial$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
_eAssumeEra$ = 12					; size = 4
?GetCultureFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z PROC ; CvMinorCivAI::GetCultureFlatFriendshipBonus, COMDAT
; _this$ = ecx

; 6876 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 6877 : 	//antonjs: consider: here it was assumed that this CS is cultured type, which is nice for me prototyping, but later maybe add in a check for this
; 6878 : 	int iCultureBonus = 0;

	mov	DWORD PTR _iCultureBonus$[ebp], 0

; 6879 : 
; 6880 : 	EraTypes eCurrentEra = eAssumeEra;

	mov	eax, DWORD PTR _eAssumeEra$[ebp]
	mov	DWORD PTR _eCurrentEra$[ebp], eax

; 6881 : 	if(eCurrentEra == NO_ERA)

	cmp	DWORD PTR _eCurrentEra$[ebp], -1
	jne	SHORT $LN5@GetCulture

; 6882 : 		eCurrentEra = GET_TEAM(GET_PLAYER(ePlayer).getTeam()).GetCurrentEra();

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244007[ebp], ecx
	mov	edx, DWORD PTR $T244007[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T244016[ebp], eax
	mov	ecx, DWORD PTR $T244016[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T244020[ebp], ecx
	mov	ecx, DWORD PTR $T244020[ebp]
	call	?GetCurrentEra@CvTeam@@QBE?AW4EraTypes@@XZ ; CvTeam::GetCurrentEra
	mov	DWORD PTR _eCurrentEra$[ebp], eax
$LN5@GetCulture:

; 6883 : 
; 6884 : 	EraTypes eIndustrial = (EraTypes) GC.getInfoTypeForString("ERA_INDUSTRIAL", true);

	push	1
	push	OFFSET ??_C@_0P@IGHGNBHE@ERA_INDUSTRIAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eIndustrial$[ebp], eax

; 6885 : 	EraTypes eMedieval = (EraTypes) GC.getInfoTypeForString("ERA_MEDIEVAL", true);

	push	1
	push	OFFSET ??_C@_0N@FKOCAGBC@ERA_MEDIEVAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eMedieval$[ebp], eax

; 6886 : 
; 6887 : 	// Industrial era or Later
; 6888 : 	if(eCurrentEra >= eIndustrial)

	mov	edx, DWORD PTR _eCurrentEra$[ebp]
	cmp	edx, DWORD PTR _eIndustrial$[ebp]
	jl	SHORT $LN4@GetCulture

; 6889 : 	{
; 6890 : 		iCultureBonus += /*10*/ GC.getFRIENDS_CULTURE_BONUS_AMOUNT_INDUSTRIAL();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2872
	mov	DWORD PTR $T244024[ebp], eax
	mov	ecx, DWORD PTR _iCultureBonus$[ebp]
	add	ecx, DWORD PTR $T244024[ebp]
	mov	DWORD PTR _iCultureBonus$[ebp], ecx
	jmp	SHORT $LN3@GetCulture
$LN4@GetCulture:

; 6891 : 	}
; 6892 : 
; 6893 : 	// Medieval era or later
; 6894 : 	else if(eCurrentEra >= eMedieval)

	mov	edx, DWORD PTR _eCurrentEra$[ebp]
	cmp	edx, DWORD PTR _eMedieval$[ebp]
	jl	SHORT $LN2@GetCulture

; 6895 : 	{
; 6896 : 		iCultureBonus += /*6*/ GC.getFRIENDS_CULTURE_BONUS_AMOUNT_MEDIEVAL();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2868
	mov	DWORD PTR $T244028[ebp], eax
	mov	ecx, DWORD PTR _iCultureBonus$[ebp]
	add	ecx, DWORD PTR $T244028[ebp]
	mov	DWORD PTR _iCultureBonus$[ebp], ecx

; 6897 : 	}
; 6898 : 
; 6899 : 	// Pre-Medieval
; 6900 : 	else

	jmp	SHORT $LN3@GetCulture
$LN2@GetCulture:

; 6901 : 	{
; 6902 : 		iCultureBonus += /*4*/ GC.getFRIENDS_CULTURE_BONUS_AMOUNT_ANCIENT();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2864
	mov	DWORD PTR $T244032[ebp], edx
	mov	eax, DWORD PTR _iCultureBonus$[ebp]
	add	eax, DWORD PTR $T244032[ebp]
	mov	DWORD PTR _iCultureBonus$[ebp], eax
$LN3@GetCulture:

; 6903 : 	}
; 6904 : 
; 6905 : 	return iCultureBonus;

	mov	eax, DWORD PTR _iCultureBonus$[ebp]

; 6906 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetCultureFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ENDP ; CvMinorCivAI::GetCultureFlatFriendshipBonus
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetCultureFlatAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z
_TEXT	SEGMENT
_this$ = -44						; size = 4
$T244063 = -40						; size = 4
$T244059 = -36						; size = 4
$T244055 = -32						; size = 4
$T244051 = -28						; size = 4
$T244047 = -24						; size = 4
$T244038 = -20						; size = 4
_iCultureBonus$ = -16					; size = 4
_eCurrentEra$ = -12					; size = 4
_eMedieval$ = -8					; size = 4
_eIndustrial$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
_eAssumeEra$ = 12					; size = 4
?GetCultureFlatAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z PROC ; CvMinorCivAI::GetCultureFlatAlliesBonus, COMDAT
; _this$ = ecx

; 6910 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 6911 : 	//antonjs: consider: here it was assumed that this CS is cultured type, which is nice for me prototyping, but later maybe add in a check for this
; 6912 : 	int iCultureBonus = 0;

	mov	DWORD PTR _iCultureBonus$[ebp], 0

; 6913 : 
; 6914 : 	EraTypes eCurrentEra = eAssumeEra;

	mov	eax, DWORD PTR _eAssumeEra$[ebp]
	mov	DWORD PTR _eCurrentEra$[ebp], eax

; 6915 : 	if(eCurrentEra == NO_ERA)

	cmp	DWORD PTR _eCurrentEra$[ebp], -1
	jne	SHORT $LN5@GetCulture@2

; 6916 : 		eCurrentEra = GET_TEAM(GET_PLAYER(ePlayer).getTeam()).GetCurrentEra();

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244038[ebp], ecx
	mov	edx, DWORD PTR $T244038[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T244047[ebp], eax
	mov	ecx, DWORD PTR $T244047[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T244051[ebp], ecx
	mov	ecx, DWORD PTR $T244051[ebp]
	call	?GetCurrentEra@CvTeam@@QBE?AW4EraTypes@@XZ ; CvTeam::GetCurrentEra
	mov	DWORD PTR _eCurrentEra$[ebp], eax
$LN5@GetCulture@2:

; 6917 : 
; 6918 : 	EraTypes eIndustrial = (EraTypes) GC.getInfoTypeForString("ERA_INDUSTRIAL", true);

	push	1
	push	OFFSET ??_C@_0P@IGHGNBHE@ERA_INDUSTRIAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eIndustrial$[ebp], eax

; 6919 : 	EraTypes eMedieval = (EraTypes) GC.getInfoTypeForString("ERA_MEDIEVAL", true);

	push	1
	push	OFFSET ??_C@_0N@FKOCAGBC@ERA_MEDIEVAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eMedieval$[ebp], eax

; 6920 : 
; 6921 : 	// Industrial era or Later
; 6922 : 	if(eCurrentEra >= eIndustrial)

	mov	edx, DWORD PTR _eCurrentEra$[ebp]
	cmp	edx, DWORD PTR _eIndustrial$[ebp]
	jl	SHORT $LN4@GetCulture@2

; 6923 : 	{
; 6924 : 		iCultureBonus += /*10*/ GC.getALLIES_CULTURE_BONUS_AMOUNT_INDUSTRIAL();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2884
	mov	DWORD PTR $T244055[ebp], eax
	mov	ecx, DWORD PTR _iCultureBonus$[ebp]
	add	ecx, DWORD PTR $T244055[ebp]
	mov	DWORD PTR _iCultureBonus$[ebp], ecx
	jmp	SHORT $LN3@GetCulture@2
$LN4@GetCulture@2:

; 6925 : 	}
; 6926 : 
; 6927 : 	// Medieval era or later
; 6928 : 	else if(eCurrentEra >= eMedieval)

	mov	edx, DWORD PTR _eCurrentEra$[ebp]
	cmp	edx, DWORD PTR _eMedieval$[ebp]
	jl	SHORT $LN2@GetCulture@2

; 6929 : 	{
; 6930 : 		iCultureBonus += /*6*/ GC.getALLIES_CULTURE_BONUS_AMOUNT_MEDIEVAL();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2880
	mov	DWORD PTR $T244059[ebp], eax
	mov	ecx, DWORD PTR _iCultureBonus$[ebp]
	add	ecx, DWORD PTR $T244059[ebp]
	mov	DWORD PTR _iCultureBonus$[ebp], ecx

; 6931 : 	}
; 6932 : 
; 6933 : 	// Pre-Medieval
; 6934 : 	else

	jmp	SHORT $LN3@GetCulture@2
$LN2@GetCulture@2:

; 6935 : 	{
; 6936 : 		iCultureBonus += /*4*/ GC.getALLIES_CULTURE_BONUS_AMOUNT_ANCIENT();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2876
	mov	DWORD PTR $T244063[ebp], edx
	mov	eax, DWORD PTR _iCultureBonus$[ebp]
	add	eax, DWORD PTR $T244063[ebp]
	mov	DWORD PTR _iCultureBonus$[ebp], eax
$LN3@GetCulture@2:

; 6937 : 	}
; 6938 : 
; 6939 : 	return iCultureBonus;

	mov	eax, DWORD PTR _iCultureBonus$[ebp]

; 6940 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetCultureFlatAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ENDP ; CvMinorCivAI::GetCultureFlatAlliesBonus
_TEXT	ENDS
PUBLIC	?GetCurrentCultureFlatBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentCultureFlatBonus
; Function compile flags: /Odtp
;	COMDAT ?GetCurrentCultureFlatBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T244077 = -20						; size = 4
$T244073 = -16						; size = 4
$T244069 = -12						; size = 4
_iAmount$ = -8						; size = 4
_iModifier$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
?GetCurrentCultureFlatBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetCurrentCultureFlatBonus, COMDAT
; _this$ = ecx

; 6944 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 6945 : 	CvAssertMsg(ePlayer >= 0, "eIndex is expected to be non-negative (invalid Index)");
; 6946 : 	CvAssertMsg(ePlayer < MAX_PLAYERS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 6947 : 	if(ePlayer < 0 || ePlayer >= MAX_PLAYERS) return 0;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN6@GetCurrent@2
	cmp	DWORD PTR _ePlayer$[ebp], 64		; 00000040H
	jl	SHORT $LN7@GetCurrent@2
$LN6@GetCurrent@2:
	xor	eax, eax
	jmp	$LN8@GetCurrent@2
$LN7@GetCurrent@2:

; 6948 : 
; 6949 : 	// Don't give a bonus to a minor civ player
; 6950 : 	if(ePlayer >= MAX_MAJOR_CIVS)

	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN5@GetCurrent@2

; 6951 : 		return 0;

	xor	eax, eax
	jmp	$LN8@GetCurrent@2
$LN5@GetCurrent@2:

; 6952 : 
; 6953 : 	// Only give a bonus if we are Cultural trait
; 6954 : 	if(GetTrait() != MINOR_CIV_TRAIT_CULTURED)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait
	test	eax, eax
	je	SHORT $LN4@GetCurrent@2

; 6955 : 		return 0;

	xor	eax, eax
	jmp	$LN8@GetCurrent@2
$LN4@GetCurrent@2:

; 6956 : 
; 6957 : 	int iAmount = 0;

	mov	DWORD PTR _iAmount$[ebp], 0

; 6958 : 
; 6959 : 	if(IsAllies(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAllies
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@GetCurrent@2

; 6960 : 		iAmount += GetCultureFlatAlliesBonus(ePlayer);

	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCultureFlatAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCultureFlatAlliesBonus
	add	eax, DWORD PTR _iAmount$[ebp]
	mov	DWORD PTR _iAmount$[ebp], eax
$LN3@GetCurrent@2:

; 6961 : 
; 6962 : 	if(IsFriends(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@GetCurrent@2

; 6963 : 		iAmount += GetCultureFlatFriendshipBonus(ePlayer);

	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCultureFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCultureFlatFriendshipBonus
	add	eax, DWORD PTR _iAmount$[ebp]
	mov	DWORD PTR _iAmount$[ebp], eax
$LN2@GetCurrent@2:

; 6964 : 
; 6965 : 	// Modify the bonus if called for by our trait
; 6966 : 	int iModifier = GET_PLAYER(ePlayer).GetPlayerTraits()->GetCityStateBonusModifier(); 

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244069[ebp], eax
	mov	ecx, DWORD PTR $T244069[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T244073[ebp], eax
	mov	ecx, DWORD PTR $T244073[ebp]
	mov	edx, DWORD PTR [ecx+88]
	mov	DWORD PTR _iModifier$[ebp], edx

; 6967 : 	
; 6968 : 	//NQMP GJS - Patronage Finisher
; 6969 : 	iModifier += GET_PLAYER(ePlayer).GetPlayerPolicies()->GetNumericModifier(POLICYMOD_CITY_STATE_BONUS_MODIFIER);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244077[ebp], eax
	push	60					; 0000003cH
	mov	ecx, DWORD PTR $T244077[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	add	eax, DWORD PTR _iModifier$[ebp]
	mov	DWORD PTR _iModifier$[ebp], eax

; 6970 : 
; 6971 : 	if(iModifier > 0)

	cmp	DWORD PTR _iModifier$[ebp], 0
	jle	SHORT $LN1@GetCurrent@2

; 6972 : 	{
; 6973 : 		iAmount *= (iModifier + 100);

	mov	ecx, DWORD PTR _iModifier$[ebp]
	add	ecx, 100				; 00000064H
	imul	ecx, DWORD PTR _iAmount$[ebp]
	mov	DWORD PTR _iAmount$[ebp], ecx

; 6974 : 		iAmount /= 100;

	mov	eax, DWORD PTR _iAmount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iAmount$[ebp], eax
$LN1@GetCurrent@2:

; 6975 : 	}
; 6976 : 
; 6977 : 	return iAmount;

	mov	eax, DWORD PTR _iAmount$[ebp]
$LN8@GetCurrent@2:

; 6978 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetCurrentCultureFlatBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetCurrentCultureFlatBonus
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetCulturePerBuildingFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?GetCulturePerBuildingFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z PROC ; CvMinorCivAI::GetCulturePerBuildingFriendshipBonus, COMDAT
; _this$ = ecx

; 6983 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 6984 : 	return 0;

	xor	eax, eax

; 6985 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetCulturePerBuildingFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ENDP ; CvMinorCivAI::GetCulturePerBuildingFriendshipBonus
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetCulturePerBuildingAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?GetCulturePerBuildingAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z PROC ; CvMinorCivAI::GetCulturePerBuildingAlliesBonus, COMDAT
; _this$ = ecx

; 6990 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 6991 : 	return 0;

	xor	eax, eax

; 6992 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetCulturePerBuildingAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ENDP ; CvMinorCivAI::GetCulturePerBuildingAlliesBonus
_TEXT	ENDS
PUBLIC	?GetCurrentCulturePerBuildingBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentCulturePerBuildingBonus
; Function compile flags: /Odtp
;	COMDAT ?GetCurrentCulturePerBuildingBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T244091 = -16						; size = 4
$T244087 = -12						; size = 4
_iAmount$ = -8						; size = 4
_iModifier$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
?GetCurrentCulturePerBuildingBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetCurrentCulturePerBuildingBonus, COMDAT
; _this$ = ecx

; 6996 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 6997 : 	CvAssertMsg(ePlayer >= 0, "eIndex is expected to be non-negative (invalid Index)");
; 6998 : 	CvAssertMsg(ePlayer < MAX_PLAYERS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 6999 : 	if(ePlayer < 0 || ePlayer >= MAX_PLAYERS) return 0;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN6@GetCurrent@3
	cmp	DWORD PTR _ePlayer$[ebp], 64		; 00000040H
	jl	SHORT $LN7@GetCurrent@3
$LN6@GetCurrent@3:
	xor	eax, eax
	jmp	$LN8@GetCurrent@3
$LN7@GetCurrent@3:

; 7000 : 
; 7001 : 	// Don't give a bonus to a minor civ player
; 7002 : 	if(ePlayer >= MAX_MAJOR_CIVS)

	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN5@GetCurrent@3

; 7003 : 		return 0;

	xor	eax, eax
	jmp	$LN8@GetCurrent@3
$LN5@GetCurrent@3:

; 7004 : 
; 7005 : 	// Only give a bonus if we are Cultural trait
; 7006 : 	if(GetTrait() != MINOR_CIV_TRAIT_CULTURED)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait
	test	eax, eax
	je	SHORT $LN4@GetCurrent@3

; 7007 : 		return 0;

	xor	eax, eax
	jmp	$LN8@GetCurrent@3
$LN4@GetCurrent@3:

; 7008 : 
; 7009 : 	int iAmount = 0;

	mov	DWORD PTR _iAmount$[ebp], 0

; 7010 : 
; 7011 : 	if(IsAllies(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAllies
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@GetCurrent@3

; 7012 : 		iAmount += GetCulturePerBuildingAlliesBonus(ePlayer);

	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCulturePerBuildingAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCulturePerBuildingAlliesBonus
	add	eax, DWORD PTR _iAmount$[ebp]
	mov	DWORD PTR _iAmount$[ebp], eax
$LN3@GetCurrent@3:

; 7013 : 
; 7014 : 	if(IsFriends(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@GetCurrent@3

; 7015 : 		iAmount += GetCulturePerBuildingFriendshipBonus(ePlayer);

	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCulturePerBuildingFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCulturePerBuildingFriendshipBonus
	add	eax, DWORD PTR _iAmount$[ebp]
	mov	DWORD PTR _iAmount$[ebp], eax
$LN2@GetCurrent@3:

; 7016 : 
; 7017 : 	// Modify the bonus if called for by our trait
; 7018 : 	int iModifier = GET_PLAYER(ePlayer).GetPlayerTraits()->GetCityStateBonusModifier();

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244087[ebp], eax
	mov	ecx, DWORD PTR $T244087[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T244091[ebp], eax
	mov	ecx, DWORD PTR $T244091[ebp]
	mov	edx, DWORD PTR [ecx+88]
	mov	DWORD PTR _iModifier$[ebp], edx

; 7019 : 	if(iModifier > 0)

	cmp	DWORD PTR _iModifier$[ebp], 0
	jle	SHORT $LN1@GetCurrent@3

; 7020 : 	{
; 7021 : 		iAmount *= (iModifier + 100);

	mov	eax, DWORD PTR _iModifier$[ebp]
	add	eax, 100				; 00000064H
	imul	eax, DWORD PTR _iAmount$[ebp]
	mov	DWORD PTR _iAmount$[ebp], eax

; 7022 : 		iAmount /= 100;

	mov	eax, DWORD PTR _iAmount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iAmount$[ebp], eax
$LN1@GetCurrent@3:

; 7023 : 	}
; 7024 : 
; 7025 : 	return iAmount;

	mov	eax, DWORD PTR _iAmount$[ebp]
$LN8@GetCurrent@3:

; 7026 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetCurrentCulturePerBuildingBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetCurrentCulturePerBuildingBonus
_TEXT	ENDS
PUBLIC	?GetCurrentCultureBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentCultureBonus
; Function compile flags: /Odtp
;	COMDAT ?GetCurrentCultureBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iAmount$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetCurrentCultureBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetCurrentCultureBonus, COMDAT
; _this$ = ecx

; 7029 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 7030 : 	CvAssertMsg(ePlayer >= 0, "eIndex is expected to be non-negative (invalid Index)");
; 7031 : 	CvAssertMsg(ePlayer < MAX_PLAYERS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 7032 : 	if(ePlayer < 0 || ePlayer >= MAX_PLAYERS) return 0;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@GetCurrent@4
	cmp	DWORD PTR _ePlayer$[ebp], 64		; 00000040H
	jl	SHORT $LN2@GetCurrent@4
$LN1@GetCurrent@4:
	xor	eax, eax
	jmp	SHORT $LN3@GetCurrent@4
$LN2@GetCurrent@4:

; 7033 : 
; 7034 : 	int iAmount = 0;

	mov	DWORD PTR _iAmount$[ebp], 0

; 7035 : 
; 7036 : 	iAmount += GetCurrentCultureFlatBonus(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCurrentCultureFlatBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentCultureFlatBonus
	add	eax, DWORD PTR _iAmount$[ebp]
	mov	DWORD PTR _iAmount$[ebp], eax

; 7037 : 	iAmount += GetCurrentCulturePerBuildingBonus(ePlayer); //antonjs: This feature was prototyped, but later removed. Its value is 0 (no bonus).

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCurrentCulturePerBuildingBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentCulturePerBuildingBonus
	add	eax, DWORD PTR _iAmount$[ebp]
	mov	DWORD PTR _iAmount$[ebp], eax

; 7038 : 
; 7039 : 	return iAmount;

	mov	eax, DWORD PTR _iAmount$[ebp]
$LN3@GetCurrent@4:

; 7040 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetCurrentCultureBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetCurrentCultureBonus
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetHappinessFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z
_TEXT	SEGMENT
_this$ = -40						; size = 4
$T244124 = -36						; size = 4
$T244120 = -32						; size = 4
$T244116 = -28						; size = 4
$T244112 = -24						; size = 4
$T244108 = -20						; size = 4
$T244099 = -16						; size = 4
_eCurrentEra$ = -12					; size = 4
_eMedieval$ = -8					; size = 4
_eIndustrial$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
_eAssumeEra$ = 12					; size = 4
?GetHappinessFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z PROC ; CvMinorCivAI::GetHappinessFlatFriendshipBonus, COMDAT
; _this$ = ecx

; 7044 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	DWORD PTR _this$[ebp], ecx

; 7045 : 	EraTypes eCurrentEra = eAssumeEra;

	mov	eax, DWORD PTR _eAssumeEra$[ebp]
	mov	DWORD PTR _eCurrentEra$[ebp], eax

; 7046 : 	if(eCurrentEra == NO_ERA)

	cmp	DWORD PTR _eCurrentEra$[ebp], -1
	jne	SHORT $LN5@GetHappine

; 7047 : 		eCurrentEra = GET_TEAM(GET_PLAYER(ePlayer).getTeam()).GetCurrentEra();

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244099[ebp], ecx
	mov	edx, DWORD PTR $T244099[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T244108[ebp], eax
	mov	ecx, DWORD PTR $T244108[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T244112[ebp], ecx
	mov	ecx, DWORD PTR $T244112[ebp]
	call	?GetCurrentEra@CvTeam@@QBE?AW4EraTypes@@XZ ; CvTeam::GetCurrentEra
	mov	DWORD PTR _eCurrentEra$[ebp], eax
$LN5@GetHappine:

; 7048 : 
; 7049 : 	EraTypes eIndustrial = (EraTypes) GC.getInfoTypeForString("ERA_INDUSTRIAL", true);

	push	1
	push	OFFSET ??_C@_0P@IGHGNBHE@ERA_INDUSTRIAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eIndustrial$[ebp], eax

; 7050 : 	EraTypes eMedieval = (EraTypes) GC.getInfoTypeForString("ERA_MEDIEVAL", true);

	push	1
	push	OFFSET ??_C@_0N@FKOCAGBC@ERA_MEDIEVAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eMedieval$[ebp], eax

; 7051 : 
; 7052 : 	// Industrial era or Later
; 7053 : 	if(eCurrentEra >= eIndustrial)

	mov	edx, DWORD PTR _eCurrentEra$[ebp]
	cmp	edx, DWORD PTR _eIndustrial$[ebp]
	jl	SHORT $LN4@GetHappine

; 7054 : 		return GC.getFRIENDS_HAPPINESS_FLAT_BONUS_AMOUNT_INDUSTRIAL();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2940
	mov	DWORD PTR $T244116[ebp], eax
	mov	eax, DWORD PTR $T244116[ebp]
	jmp	SHORT $LN6@GetHappine
	jmp	SHORT $LN6@GetHappine
$LN4@GetHappine:

; 7055 : 
; 7056 : 	// Medieval era or later
; 7057 : 	else if(eCurrentEra >= eMedieval)

	mov	ecx, DWORD PTR _eCurrentEra$[ebp]
	cmp	ecx, DWORD PTR _eMedieval$[ebp]
	jl	SHORT $LN2@GetHappine

; 7058 : 		return GC.getFRIENDS_HAPPINESS_FLAT_BONUS_AMOUNT_MEDIEVAL();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2936
	mov	DWORD PTR $T244120[ebp], edx
	mov	eax, DWORD PTR $T244120[ebp]
	jmp	SHORT $LN6@GetHappine

; 7059 : 
; 7060 : 	// Pre-Medieval
; 7061 : 	else

	jmp	SHORT $LN6@GetHappine
$LN2@GetHappine:

; 7062 : 		return GC.getFRIENDS_HAPPINESS_FLAT_BONUS_AMOUNT_ANCIENT();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2932
	mov	DWORD PTR $T244124[ebp], eax
	mov	eax, DWORD PTR $T244124[ebp]
$LN6@GetHappine:

; 7063 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetHappinessFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ENDP ; CvMinorCivAI::GetHappinessFlatFriendshipBonus
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetHappinessFlatAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z
_TEXT	SEGMENT
_this$ = -40						; size = 4
$T244155 = -36						; size = 4
$T244151 = -32						; size = 4
$T244147 = -28						; size = 4
$T244143 = -24						; size = 4
$T244139 = -20						; size = 4
$T244130 = -16						; size = 4
_eCurrentEra$ = -12					; size = 4
_eMedieval$ = -8					; size = 4
_eIndustrial$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
_eAssumeEra$ = 12					; size = 4
?GetHappinessFlatAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z PROC ; CvMinorCivAI::GetHappinessFlatAlliesBonus, COMDAT
; _this$ = ecx

; 7067 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	DWORD PTR _this$[ebp], ecx

; 7068 : 	EraTypes eCurrentEra = eAssumeEra;

	mov	eax, DWORD PTR _eAssumeEra$[ebp]
	mov	DWORD PTR _eCurrentEra$[ebp], eax

; 7069 : 	if(eCurrentEra == NO_ERA)

	cmp	DWORD PTR _eCurrentEra$[ebp], -1
	jne	SHORT $LN5@GetHappine@2

; 7070 : 		eCurrentEra = GET_TEAM(GET_PLAYER(ePlayer).getTeam()).GetCurrentEra();

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244130[ebp], ecx
	mov	edx, DWORD PTR $T244130[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T244139[ebp], eax
	mov	ecx, DWORD PTR $T244139[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T244143[ebp], ecx
	mov	ecx, DWORD PTR $T244143[ebp]
	call	?GetCurrentEra@CvTeam@@QBE?AW4EraTypes@@XZ ; CvTeam::GetCurrentEra
	mov	DWORD PTR _eCurrentEra$[ebp], eax
$LN5@GetHappine@2:

; 7071 : 
; 7072 : 	EraTypes eIndustrial = (EraTypes) GC.getInfoTypeForString("ERA_INDUSTRIAL", true);

	push	1
	push	OFFSET ??_C@_0P@IGHGNBHE@ERA_INDUSTRIAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eIndustrial$[ebp], eax

; 7073 : 	EraTypes eMedieval = (EraTypes) GC.getInfoTypeForString("ERA_MEDIEVAL", true);

	push	1
	push	OFFSET ??_C@_0N@FKOCAGBC@ERA_MEDIEVAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eMedieval$[ebp], eax

; 7074 : 
; 7075 : 	// Industrial era or Later
; 7076 : 	if(eCurrentEra >= eIndustrial)

	mov	edx, DWORD PTR _eCurrentEra$[ebp]
	cmp	edx, DWORD PTR _eIndustrial$[ebp]
	jl	SHORT $LN4@GetHappine@2

; 7077 : 		return GC.getALLIES_HAPPINESS_FLAT_BONUS_AMOUNT_INDUSTRIAL();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2952
	mov	DWORD PTR $T244147[ebp], eax
	mov	eax, DWORD PTR $T244147[ebp]
	jmp	SHORT $LN6@GetHappine@2
	jmp	SHORT $LN6@GetHappine@2
$LN4@GetHappine@2:

; 7078 : 
; 7079 : 	// Medieval era or later
; 7080 : 	else if(eCurrentEra >= eMedieval)

	mov	ecx, DWORD PTR _eCurrentEra$[ebp]
	cmp	ecx, DWORD PTR _eMedieval$[ebp]
	jl	SHORT $LN2@GetHappine@2

; 7081 : 		return GC.getALLIES_HAPPINESS_FLAT_BONUS_AMOUNT_MEDIEVAL();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2948
	mov	DWORD PTR $T244151[ebp], edx
	mov	eax, DWORD PTR $T244151[ebp]
	jmp	SHORT $LN6@GetHappine@2

; 7082 : 
; 7083 : 	// Pre-Medieval
; 7084 : 	else

	jmp	SHORT $LN6@GetHappine@2
$LN2@GetHappine@2:

; 7085 : 		return GC.getALLIES_HAPPINESS_FLAT_BONUS_AMOUNT_ANCIENT();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2944
	mov	DWORD PTR $T244155[ebp], eax
	mov	eax, DWORD PTR $T244155[ebp]
$LN6@GetHappine@2:

; 7086 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetHappinessFlatAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ENDP ; CvMinorCivAI::GetHappinessFlatAlliesBonus
_TEXT	ENDS
PUBLIC	?GetCurrentHappinessFlatBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentHappinessFlatBonus
; Function compile flags: /Odtp
;	COMDAT ?GetCurrentHappinessFlatBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iAmount$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetCurrentHappinessFlatBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetCurrentHappinessFlatBonus, COMDAT
; _this$ = ecx

; 7090 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 7091 : 	CvAssertMsg(ePlayer >= 0, "eIndex is expected to be non-negative (invalid Index)");
; 7092 : 	CvAssertMsg(ePlayer < MAX_PLAYERS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 7093 : 	if(ePlayer < 0 || ePlayer >= MAX_PLAYERS) return 0;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN5@GetCurrent@5
	cmp	DWORD PTR _ePlayer$[ebp], 64		; 00000040H
	jl	SHORT $LN6@GetCurrent@5
$LN5@GetCurrent@5:
	xor	eax, eax
	jmp	SHORT $LN7@GetCurrent@5
$LN6@GetCurrent@5:

; 7094 : 
; 7095 : 	// Minor civ players do not get a bonus
; 7096 : 	if(ePlayer >= MAX_MAJOR_CIVS)

	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN4@GetCurrent@5

; 7097 : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN7@GetCurrent@5
$LN4@GetCurrent@5:

; 7098 : 
; 7099 : 	// Only for Mercantile trait minors
; 7100 : 	if(GetTrait() != MINOR_CIV_TRAIT_MERCANTILE)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait
	cmp	eax, 3
	je	SHORT $LN3@GetCurrent@5

; 7101 : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN7@GetCurrent@5
$LN3@GetCurrent@5:

; 7102 : 
; 7103 : 	int iAmount = 0;

	mov	DWORD PTR _iAmount$[ebp], 0

; 7104 : 	if(IsAllies(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAllies
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@GetCurrent@5

; 7105 : 		iAmount += GetHappinessFlatAlliesBonus(ePlayer);

	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetHappinessFlatAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessFlatAlliesBonus
	add	eax, DWORD PTR _iAmount$[ebp]
	mov	DWORD PTR _iAmount$[ebp], eax
$LN2@GetCurrent@5:

; 7106 : 	if(IsFriends(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@GetCurrent@5

; 7107 : 		iAmount += GetHappinessFlatFriendshipBonus(ePlayer);

	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetHappinessFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessFlatFriendshipBonus
	add	eax, DWORD PTR _iAmount$[ebp]
	mov	DWORD PTR _iAmount$[ebp], eax
$LN1@GetCurrent@5:

; 7108 : 	return iAmount;

	mov	eax, DWORD PTR _iAmount$[ebp]
$LN7@GetCurrent@5:

; 7109 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetCurrentHappinessFlatBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetCurrentHappinessFlatBonus
_TEXT	ENDS
EXTRN	?getNumResourceAvailable@CvPlayer@@QBEHW4ResourceTypes@@_N@Z:PROC ; CvPlayer::getNumResourceAvailable
; Function compile flags: /Odtp
;	COMDAT ?GetHappinessPerLuxuryFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z
_TEXT	SEGMENT
_this$ = -60						; size = 4
$T244192 = -56						; size = 4
$T244188 = -52						; size = 4
$T244184 = -48						; size = 4
$T244180 = -44						; size = 4
$T244176 = -40						; size = 4
$T244167 = -36						; size = 4
$T244163 = -32						; size = 4
_pkResourceInfo$226289 = -28				; size = 4
_iResourceLoop$226283 = -24				; size = 4
_eCurrentEra$ = -20					; size = 4
_eMedieval$ = -16					; size = 4
_eIndustrial$ = -12					; size = 4
_iNumLuxuries$ = -8					; size = 4
_eResource$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
_eAssumeEra$ = 12					; size = 4
?GetHappinessPerLuxuryFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z PROC ; CvMinorCivAI::GetHappinessPerLuxuryFriendshipBonus, COMDAT
; _this$ = ecx

; 7113 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	mov	DWORD PTR _this$[ebp], ecx

; 7114 : 	//antonjs: consider: optimize
; 7115 : 	int iNumLuxuries = 0;

	mov	DWORD PTR _iNumLuxuries$[ebp], 0

; 7116 : 	ResourceTypes eResource;
; 7117 : #ifdef AUI_WARNING_FIXES
; 7118 : 	for (uint iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)
; 7119 : #else
; 7120 : 	for(int iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)

	mov	DWORD PTR _iResourceLoop$226283[ebp], 0
	jmp	SHORT $LN10@GetHappine@3
$LN9@GetHappine@3:
	mov	eax, DWORD PTR _iResourceLoop$226283[ebp]
	add	eax, 1
	mov	DWORD PTR _iResourceLoop$226283[ebp], eax
$LN10@GetHappine@3:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	cmp	DWORD PTR _iResourceLoop$226283[ebp], eax
	jge	SHORT $LN8@GetHappine@3

; 7121 : #endif
; 7122 : 	{
; 7123 : 		eResource = (ResourceTypes) iResourceLoop;

	mov	ecx, DWORD PTR _iResourceLoop$226283[ebp]
	mov	DWORD PTR _eResource$[ebp], ecx

; 7124 : 
; 7125 : 		if(GET_PLAYER(ePlayer).getNumResourceAvailable(eResource) > 0)

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244163[ebp], edx
	push	1
	mov	eax, DWORD PTR _eResource$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T244163[ebp]
	call	?getNumResourceAvailable@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceAvailable
	test	eax, eax
	jle	SHORT $LN7@GetHappine@3

; 7126 : 		{
; 7127 : 			const CvResourceInfo* pkResourceInfo = GC.getResourceInfo(eResource);

	mov	ecx, DWORD PTR _eResource$[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	DWORD PTR _pkResourceInfo$226289[ebp], eax

; 7128 : 			if(pkResourceInfo != NULL && pkResourceInfo->getResourceUsage() == RESOURCEUSAGE_LUXURY)

	cmp	DWORD PTR _pkResourceInfo$226289[ebp], 0
	je	SHORT $LN7@GetHappine@3
	mov	ecx, DWORD PTR _pkResourceInfo$226289[ebp]
	call	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ ; CvResourceInfo::getResourceUsage
	cmp	eax, 2
	jne	SHORT $LN7@GetHappine@3

; 7129 : 			{
; 7130 : 				iNumLuxuries++;

	mov	edx, DWORD PTR _iNumLuxuries$[ebp]
	add	edx, 1
	mov	DWORD PTR _iNumLuxuries$[ebp], edx
$LN7@GetHappine@3:

; 7131 : 			}
; 7132 : 		}
; 7133 : 	}

	jmp	SHORT $LN9@GetHappine@3
$LN8@GetHappine@3:

; 7134 : 
; 7135 : 	EraTypes eCurrentEra = eAssumeEra;

	mov	eax, DWORD PTR _eAssumeEra$[ebp]
	mov	DWORD PTR _eCurrentEra$[ebp], eax

; 7136 : 	if(eCurrentEra == NO_ERA)

	cmp	DWORD PTR _eCurrentEra$[ebp], -1
	jne	SHORT $LN5@GetHappine@3

; 7137 : 		eCurrentEra = GET_TEAM(GET_PLAYER(ePlayer).getTeam()).GetCurrentEra();

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244167[ebp], ecx
	mov	edx, DWORD PTR $T244167[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T244176[ebp], eax
	mov	ecx, DWORD PTR $T244176[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T244180[ebp], ecx
	mov	ecx, DWORD PTR $T244180[ebp]
	call	?GetCurrentEra@CvTeam@@QBE?AW4EraTypes@@XZ ; CvTeam::GetCurrentEra
	mov	DWORD PTR _eCurrentEra$[ebp], eax
$LN5@GetHappine@3:

; 7138 : 
; 7139 : 	EraTypes eIndustrial = (EraTypes) GC.getInfoTypeForString("ERA_INDUSTRIAL", true);

	push	1
	push	OFFSET ??_C@_0P@IGHGNBHE@ERA_INDUSTRIAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eIndustrial$[ebp], eax

; 7140 : 	EraTypes eMedieval = (EraTypes) GC.getInfoTypeForString("ERA_MEDIEVAL", true);

	push	1
	push	OFFSET ??_C@_0N@FKOCAGBC@ERA_MEDIEVAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eMedieval$[ebp], eax

; 7141 : 
; 7142 : 	// Industrial era or Later
; 7143 : 	if(eCurrentEra >= eIndustrial)

	mov	edx, DWORD PTR _eCurrentEra$[ebp]
	cmp	edx, DWORD PTR _eIndustrial$[ebp]
	jl	SHORT $LN4@GetHappine@3

; 7144 : 		return (iNumLuxuries * GC.getFRIENDS_HAPPINESS_PER_LUXURY_BONUS_AMOUNT_INDUSTRIAL());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2964
	mov	DWORD PTR $T244184[ebp], eax
	mov	eax, DWORD PTR _iNumLuxuries$[ebp]
	imul	eax, DWORD PTR $T244184[ebp]
	jmp	SHORT $LN11@GetHappine@3
	jmp	SHORT $LN11@GetHappine@3
$LN4@GetHappine@3:

; 7145 : 
; 7146 : 	// Medieval era or later
; 7147 : 	else if(eCurrentEra >= eMedieval)

	mov	ecx, DWORD PTR _eCurrentEra$[ebp]
	cmp	ecx, DWORD PTR _eMedieval$[ebp]
	jl	SHORT $LN2@GetHappine@3

; 7148 : 		return (iNumLuxuries * GC.getFRIENDS_HAPPINESS_PER_LUXURY_BONUS_AMOUNT_MEDIEVAL());

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2960
	mov	DWORD PTR $T244188[ebp], edx
	mov	eax, DWORD PTR _iNumLuxuries$[ebp]
	imul	eax, DWORD PTR $T244188[ebp]
	jmp	SHORT $LN11@GetHappine@3

; 7149 : 
; 7150 : 	// Pre-Medieval
; 7151 : 	else

	jmp	SHORT $LN11@GetHappine@3
$LN2@GetHappine@3:

; 7152 : 		return (iNumLuxuries * GC.getFRIENDS_HAPPINESS_PER_LUXURY_BONUS_AMOUNT_ANCIENT());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2956
	mov	DWORD PTR $T244192[ebp], eax
	mov	eax, DWORD PTR _iNumLuxuries$[ebp]
	imul	eax, DWORD PTR $T244192[ebp]
$LN11@GetHappine@3:

; 7153 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetHappinessPerLuxuryFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ENDP ; CvMinorCivAI::GetHappinessPerLuxuryFriendshipBonus
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetHappinessPerLuxuryAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z
_TEXT	SEGMENT
_this$ = -60						; size = 4
$T244227 = -56						; size = 4
$T244223 = -52						; size = 4
$T244219 = -48						; size = 4
$T244215 = -44						; size = 4
$T244211 = -40						; size = 4
$T244202 = -36						; size = 4
$T244198 = -32						; size = 4
_pkResourceInfo$226314 = -28				; size = 4
_iResourceLoop$226308 = -24				; size = 4
_eCurrentEra$ = -20					; size = 4
_eMedieval$ = -16					; size = 4
_eIndustrial$ = -12					; size = 4
_iNumLuxuries$ = -8					; size = 4
_eResource$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
_eAssumeEra$ = 12					; size = 4
?GetHappinessPerLuxuryAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z PROC ; CvMinorCivAI::GetHappinessPerLuxuryAlliesBonus, COMDAT
; _this$ = ecx

; 7157 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	mov	DWORD PTR _this$[ebp], ecx

; 7158 : 	//antonjs: consider: optimize
; 7159 : 	int iNumLuxuries = 0;

	mov	DWORD PTR _iNumLuxuries$[ebp], 0

; 7160 : 	ResourceTypes eResource;
; 7161 : #ifdef AUI_WARNING_FIXES
; 7162 : 	for (uint iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)
; 7163 : #else
; 7164 : 	for(int iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)

	mov	DWORD PTR _iResourceLoop$226308[ebp], 0
	jmp	SHORT $LN10@GetHappine@4
$LN9@GetHappine@4:
	mov	eax, DWORD PTR _iResourceLoop$226308[ebp]
	add	eax, 1
	mov	DWORD PTR _iResourceLoop$226308[ebp], eax
$LN10@GetHappine@4:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	cmp	DWORD PTR _iResourceLoop$226308[ebp], eax
	jge	SHORT $LN8@GetHappine@4

; 7165 : #endif
; 7166 : 	{
; 7167 : 		eResource = (ResourceTypes) iResourceLoop;

	mov	ecx, DWORD PTR _iResourceLoop$226308[ebp]
	mov	DWORD PTR _eResource$[ebp], ecx

; 7168 : 
; 7169 : 		if(GET_PLAYER(ePlayer).getNumResourceAvailable(eResource) > 0)

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244198[ebp], edx
	push	1
	mov	eax, DWORD PTR _eResource$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T244198[ebp]
	call	?getNumResourceAvailable@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceAvailable
	test	eax, eax
	jle	SHORT $LN7@GetHappine@4

; 7170 : 		{
; 7171 : 			const CvResourceInfo* pkResourceInfo = GC.getResourceInfo(eResource);

	mov	ecx, DWORD PTR _eResource$[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	DWORD PTR _pkResourceInfo$226314[ebp], eax

; 7172 : 			if(pkResourceInfo != NULL && pkResourceInfo->getResourceUsage() == RESOURCEUSAGE_LUXURY)

	cmp	DWORD PTR _pkResourceInfo$226314[ebp], 0
	je	SHORT $LN7@GetHappine@4
	mov	ecx, DWORD PTR _pkResourceInfo$226314[ebp]
	call	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ ; CvResourceInfo::getResourceUsage
	cmp	eax, 2
	jne	SHORT $LN7@GetHappine@4

; 7173 : 			{
; 7174 : 				iNumLuxuries++;

	mov	edx, DWORD PTR _iNumLuxuries$[ebp]
	add	edx, 1
	mov	DWORD PTR _iNumLuxuries$[ebp], edx
$LN7@GetHappine@4:

; 7175 : 			}
; 7176 : 		}
; 7177 : 	}

	jmp	SHORT $LN9@GetHappine@4
$LN8@GetHappine@4:

; 7178 : 
; 7179 : 	EraTypes eCurrentEra = eAssumeEra;

	mov	eax, DWORD PTR _eAssumeEra$[ebp]
	mov	DWORD PTR _eCurrentEra$[ebp], eax

; 7180 : 	if(eCurrentEra == NO_ERA)

	cmp	DWORD PTR _eCurrentEra$[ebp], -1
	jne	SHORT $LN5@GetHappine@4

; 7181 : 		eCurrentEra = GET_TEAM(GET_PLAYER(ePlayer).getTeam()).GetCurrentEra();

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244202[ebp], ecx
	mov	edx, DWORD PTR $T244202[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T244211[ebp], eax
	mov	ecx, DWORD PTR $T244211[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T244215[ebp], ecx
	mov	ecx, DWORD PTR $T244215[ebp]
	call	?GetCurrentEra@CvTeam@@QBE?AW4EraTypes@@XZ ; CvTeam::GetCurrentEra
	mov	DWORD PTR _eCurrentEra$[ebp], eax
$LN5@GetHappine@4:

; 7182 : 
; 7183 : 	EraTypes eIndustrial = (EraTypes) GC.getInfoTypeForString("ERA_INDUSTRIAL", true);

	push	1
	push	OFFSET ??_C@_0P@IGHGNBHE@ERA_INDUSTRIAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eIndustrial$[ebp], eax

; 7184 : 	EraTypes eMedieval = (EraTypes) GC.getInfoTypeForString("ERA_MEDIEVAL", true);

	push	1
	push	OFFSET ??_C@_0N@FKOCAGBC@ERA_MEDIEVAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eMedieval$[ebp], eax

; 7185 : 
; 7186 : 	// Industrial era or Later
; 7187 : 	if(eCurrentEra >= eIndustrial)

	mov	edx, DWORD PTR _eCurrentEra$[ebp]
	cmp	edx, DWORD PTR _eIndustrial$[ebp]
	jl	SHORT $LN4@GetHappine@4

; 7188 : 		return (iNumLuxuries * GC.getALLIES_HAPPINESS_PER_LUXURY_BONUS_AMOUNT_INDUSTRIAL());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2976
	mov	DWORD PTR $T244219[ebp], eax
	mov	eax, DWORD PTR _iNumLuxuries$[ebp]
	imul	eax, DWORD PTR $T244219[ebp]
	jmp	SHORT $LN11@GetHappine@4
	jmp	SHORT $LN11@GetHappine@4
$LN4@GetHappine@4:

; 7189 : 
; 7190 : 	// Medieval era or later
; 7191 : 	else if(eCurrentEra >= eMedieval)

	mov	ecx, DWORD PTR _eCurrentEra$[ebp]
	cmp	ecx, DWORD PTR _eMedieval$[ebp]
	jl	SHORT $LN2@GetHappine@4

; 7192 : 		return (iNumLuxuries * GC.getALLIES_HAPPINESS_PER_LUXURY_BONUS_AMOUNT_MEDIEVAL());

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2972
	mov	DWORD PTR $T244223[ebp], edx
	mov	eax, DWORD PTR _iNumLuxuries$[ebp]
	imul	eax, DWORD PTR $T244223[ebp]
	jmp	SHORT $LN11@GetHappine@4

; 7193 : 
; 7194 : 	// Pre-Medieval
; 7195 : 	else

	jmp	SHORT $LN11@GetHappine@4
$LN2@GetHappine@4:

; 7196 : 		return (iNumLuxuries * GC.getALLIES_HAPPINESS_PER_LUXURY_BONUS_AMOUNT_ANCIENT());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2968
	mov	DWORD PTR $T244227[ebp], eax
	mov	eax, DWORD PTR _iNumLuxuries$[ebp]
	imul	eax, DWORD PTR $T244227[ebp]
$LN11@GetHappine@4:

; 7197 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetHappinessPerLuxuryAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ENDP ; CvMinorCivAI::GetHappinessPerLuxuryAlliesBonus
_TEXT	ENDS
PUBLIC	?GetCurrentHappinessPerLuxuryBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentHappinessPerLuxuryBonus
; Function compile flags: /Odtp
;	COMDAT ?GetCurrentHappinessPerLuxuryBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iAmount$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetCurrentHappinessPerLuxuryBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetCurrentHappinessPerLuxuryBonus, COMDAT
; _this$ = ecx

; 7201 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 7202 : 	CvAssertMsg(ePlayer >= 0, "eIndex is expected to be non-negative (invalid Index)");
; 7203 : 	CvAssertMsg(ePlayer < MAX_PLAYERS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 7204 : 	if(ePlayer < 0 || ePlayer >= MAX_PLAYERS) return 0;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN5@GetCurrent@6
	cmp	DWORD PTR _ePlayer$[ebp], 64		; 00000040H
	jl	SHORT $LN6@GetCurrent@6
$LN5@GetCurrent@6:
	xor	eax, eax
	jmp	SHORT $LN7@GetCurrent@6
$LN6@GetCurrent@6:

; 7205 : 
; 7206 : 	// Minor civ players do not get a bonus
; 7207 : 	if(ePlayer >= MAX_MAJOR_CIVS)

	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN4@GetCurrent@6

; 7208 : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN7@GetCurrent@6
$LN4@GetCurrent@6:

; 7209 : 
; 7210 : 	// Only for Mercantile trait minors
; 7211 : 	if(GetTrait() != MINOR_CIV_TRAIT_MERCANTILE)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait
	cmp	eax, 3
	je	SHORT $LN3@GetCurrent@6

; 7212 : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN7@GetCurrent@6
$LN3@GetCurrent@6:

; 7213 : 
; 7214 : 	int iAmount = 0;

	mov	DWORD PTR _iAmount$[ebp], 0

; 7215 : 	if(IsAllies(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAllies
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@GetCurrent@6

; 7216 : 		iAmount += GetHappinessPerLuxuryAlliesBonus(ePlayer);

	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetHappinessPerLuxuryAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessPerLuxuryAlliesBonus
	add	eax, DWORD PTR _iAmount$[ebp]
	mov	DWORD PTR _iAmount$[ebp], eax
$LN2@GetCurrent@6:

; 7217 : 	if(IsFriends(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@GetCurrent@6

; 7218 : 		iAmount += GetHappinessPerLuxuryFriendshipBonus(ePlayer);

	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetHappinessPerLuxuryFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessPerLuxuryFriendshipBonus
	add	eax, DWORD PTR _iAmount$[ebp]
	mov	DWORD PTR _iAmount$[ebp], eax
$LN1@GetCurrent@6:

; 7219 : 	return iAmount;

	mov	eax, DWORD PTR _iAmount$[ebp]
$LN7@GetCurrent@6:

; 7220 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetCurrentHappinessPerLuxuryBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetCurrentHappinessPerLuxuryBonus
_TEXT	ENDS
PUBLIC	?GetCurrentHappinessBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentHappinessBonus
; Function compile flags: /Odtp
;	COMDAT ?GetCurrentHappinessBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iValue$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetCurrentHappinessBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetCurrentHappinessBonus, COMDAT
; _this$ = ecx

; 7224 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 7225 : 	int iValue = 0;

	mov	DWORD PTR _iValue$[ebp], 0

; 7226 : 
; 7227 : 	iValue += GetCurrentHappinessFlatBonus(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCurrentHappinessFlatBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentHappinessFlatBonus
	add	eax, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _iValue$[ebp], eax

; 7228 : 	iValue += GetCurrentHappinessPerLuxuryBonus(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCurrentHappinessPerLuxuryBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentHappinessPerLuxuryBonus
	add	eax, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _iValue$[ebp], eax

; 7229 : 
; 7230 : 	return iValue;

	mov	eax, DWORD PTR _iValue$[ebp]

; 7231 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetCurrentHappinessBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetCurrentHappinessBonus
_TEXT	ENDS
PUBLIC	??_C@_0O@DOFGCEG@ERA_CLASSICAL?$AA@		; `string'
PUBLIC	??_C@_0BA@OCIKOJNE@ERA_RENAISSANCE?$AA@		; `string'
;	COMDAT ??_C@_0O@DOFGCEG@ERA_CLASSICAL?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
CONST	SEGMENT
??_C@_0O@DOFGCEG@ERA_CLASSICAL?$AA@ DB 'ERA_CLASSICAL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OCIKOJNE@ERA_RENAISSANCE?$AA@
CONST	SEGMENT
??_C@_0BA@OCIKOJNE@ERA_RENAISSANCE?$AA@ DB 'ERA_RENAISSANCE', 00H ; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
CONST	ENDS
;	COMDAT ?GetFaithFlatFriendshipBonus@CvMinorCivAI@@QBEHW4PlayerTypes@@W4EraTypes@@@Z
_TEXT	SEGMENT
_this$ = -60						; size = 4
$T244270 = -56						; size = 4
$T244266 = -52						; size = 4
$T244262 = -48						; size = 4
$T244258 = -44						; size = 4
$T244254 = -40						; size = 4
$T244250 = -36						; size = 4
$T244246 = -32						; size = 4
$T244237 = -28						; size = 4
_eCurrentEra$ = -24					; size = 4
_eRenaissance$ = -20					; size = 4
_iFaithBonus$ = -16					; size = 4
_eMedieval$ = -12					; size = 4
_eIndustrial$ = -8					; size = 4
_eClassical$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
_eAssumeEra$ = 12					; size = 4
?GetFaithFlatFriendshipBonus@CvMinorCivAI@@QBEHW4PlayerTypes@@W4EraTypes@@@Z PROC ; CvMinorCivAI::GetFaithFlatFriendshipBonus, COMDAT
; _this$ = ecx

; 7234 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	mov	DWORD PTR _this$[ebp], ecx

; 7235 : 	int iFaithBonus = 0;

	mov	DWORD PTR _iFaithBonus$[ebp], 0

; 7236 : 
; 7237 : 	EraTypes eCurrentEra = eAssumeEra;

	mov	eax, DWORD PTR _eAssumeEra$[ebp]
	mov	DWORD PTR _eCurrentEra$[ebp], eax

; 7238 : 	if(eCurrentEra == NO_ERA)

	cmp	DWORD PTR _eCurrentEra$[ebp], -1
	jne	SHORT $LN9@GetFaithFl

; 7239 : 		eCurrentEra = GET_TEAM(GET_PLAYER(ePlayer).getTeam()).GetCurrentEra();

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244237[ebp], ecx
	mov	edx, DWORD PTR $T244237[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T244246[ebp], eax
	mov	ecx, DWORD PTR $T244246[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T244250[ebp], ecx
	mov	ecx, DWORD PTR $T244250[ebp]
	call	?GetCurrentEra@CvTeam@@QBE?AW4EraTypes@@XZ ; CvTeam::GetCurrentEra
	mov	DWORD PTR _eCurrentEra$[ebp], eax
$LN9@GetFaithFl:

; 7240 : 
; 7241 : 	EraTypes eIndustrial = (EraTypes) GC.getInfoTypeForString("ERA_INDUSTRIAL", true);

	push	1
	push	OFFSET ??_C@_0P@IGHGNBHE@ERA_INDUSTRIAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eIndustrial$[ebp], eax

; 7242 : 	EraTypes eRenaissance = (EraTypes) GC.getInfoTypeForString("ERA_RENAISSANCE", true);

	push	1
	push	OFFSET ??_C@_0BA@OCIKOJNE@ERA_RENAISSANCE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eRenaissance$[ebp], eax

; 7243 : 	EraTypes eMedieval = (EraTypes) GC.getInfoTypeForString("ERA_MEDIEVAL", true);

	push	1
	push	OFFSET ??_C@_0N@FKOCAGBC@ERA_MEDIEVAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eMedieval$[ebp], eax

; 7244 : 	EraTypes eClassical = (EraTypes) GC.getInfoTypeForString("ERA_CLASSICAL", true);

	push	1
	push	OFFSET ??_C@_0O@DOFGCEG@ERA_CLASSICAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eClassical$[ebp], eax

; 7245 : 
; 7246 : 	// Industrial era or later
; 7247 : 	if(eCurrentEra >= eIndustrial)

	mov	edx, DWORD PTR _eCurrentEra$[ebp]
	cmp	edx, DWORD PTR _eIndustrial$[ebp]
	jl	SHORT $LN8@GetFaithFl

; 7248 : 	{
; 7249 : 		iFaithBonus += GC.getFRIENDS_FAITH_FLAT_BONUS_AMOUNT_INDUSTRIAL();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2980
	mov	DWORD PTR $T244254[ebp], eax
	mov	ecx, DWORD PTR _iFaithBonus$[ebp]
	add	ecx, DWORD PTR $T244254[ebp]
	mov	DWORD PTR _iFaithBonus$[ebp], ecx
	jmp	SHORT $LN7@GetFaithFl
$LN8@GetFaithFl:

; 7250 : 	}
; 7251 : 
; 7252 : 	// Renaissance era
; 7253 : 	else if(eCurrentEra >= eRenaissance)

	mov	edx, DWORD PTR _eCurrentEra$[ebp]
	cmp	edx, DWORD PTR _eRenaissance$[ebp]
	jl	SHORT $LN6@GetFaithFl

; 7254 : 	{
; 7255 : 		iFaithBonus += GC.getFRIENDS_FAITH_FLAT_BONUS_AMOUNT_RENAISSANCE();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2984
	mov	DWORD PTR $T244258[ebp], eax
	mov	ecx, DWORD PTR _iFaithBonus$[ebp]
	add	ecx, DWORD PTR $T244258[ebp]
	mov	DWORD PTR _iFaithBonus$[ebp], ecx
	jmp	SHORT $LN7@GetFaithFl
$LN6@GetFaithFl:

; 7256 : 	}
; 7257 : 
; 7258 : 	// Medieval era
; 7259 : 	else if(eCurrentEra >= eMedieval)

	mov	edx, DWORD PTR _eCurrentEra$[ebp]
	cmp	edx, DWORD PTR _eMedieval$[ebp]
	jl	SHORT $LN4@GetFaithFl

; 7260 : 	{
; 7261 : 		iFaithBonus += GC.getFRIENDS_FAITH_FLAT_BONUS_AMOUNT_MEDIEVAL();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2988
	mov	DWORD PTR $T244262[ebp], eax
	mov	ecx, DWORD PTR _iFaithBonus$[ebp]
	add	ecx, DWORD PTR $T244262[ebp]
	mov	DWORD PTR _iFaithBonus$[ebp], ecx
	jmp	SHORT $LN7@GetFaithFl
$LN4@GetFaithFl:

; 7262 : 	}
; 7263 : 
; 7264 : 	// Classical era
; 7265 : 	else if(eCurrentEra >= eClassical)

	mov	edx, DWORD PTR _eCurrentEra$[ebp]
	cmp	edx, DWORD PTR _eClassical$[ebp]
	jl	SHORT $LN2@GetFaithFl

; 7266 : 	{
; 7267 : 		iFaithBonus += GC.getFRIENDS_FAITH_FLAT_BONUS_AMOUNT_CLASSICAL();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2992
	mov	DWORD PTR $T244266[ebp], eax
	mov	ecx, DWORD PTR _iFaithBonus$[ebp]
	add	ecx, DWORD PTR $T244266[ebp]
	mov	DWORD PTR _iFaithBonus$[ebp], ecx

; 7268 : 	}
; 7269 : 
; 7270 : 	// Ancient era
; 7271 : 	else

	jmp	SHORT $LN7@GetFaithFl
$LN2@GetFaithFl:

; 7272 : 	{
; 7273 : 		iFaithBonus += GC.getFRIENDS_FAITH_FLAT_BONUS_AMOUNT_ANCIENT();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2996
	mov	DWORD PTR $T244270[ebp], edx
	mov	eax, DWORD PTR _iFaithBonus$[ebp]
	add	eax, DWORD PTR $T244270[ebp]
	mov	DWORD PTR _iFaithBonus$[ebp], eax
$LN7@GetFaithFl:

; 7274 : 	}
; 7275 : 
; 7276 : 	return iFaithBonus;

	mov	eax, DWORD PTR _iFaithBonus$[ebp]

; 7277 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetFaithFlatFriendshipBonus@CvMinorCivAI@@QBEHW4PlayerTypes@@W4EraTypes@@@Z ENDP ; CvMinorCivAI::GetFaithFlatFriendshipBonus
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetFaithFlatAlliesBonus@CvMinorCivAI@@QBEHW4PlayerTypes@@W4EraTypes@@@Z
_TEXT	SEGMENT
_this$ = -60						; size = 4
$T244309 = -56						; size = 4
$T244305 = -52						; size = 4
$T244301 = -48						; size = 4
$T244297 = -44						; size = 4
$T244293 = -40						; size = 4
$T244289 = -36						; size = 4
$T244285 = -32						; size = 4
$T244276 = -28						; size = 4
_eCurrentEra$ = -24					; size = 4
_eRenaissance$ = -20					; size = 4
_iFaithBonus$ = -16					; size = 4
_eMedieval$ = -12					; size = 4
_eIndustrial$ = -8					; size = 4
_eClassical$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
_eAssumeEra$ = 12					; size = 4
?GetFaithFlatAlliesBonus@CvMinorCivAI@@QBEHW4PlayerTypes@@W4EraTypes@@@Z PROC ; CvMinorCivAI::GetFaithFlatAlliesBonus, COMDAT
; _this$ = ecx

; 7280 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	mov	DWORD PTR _this$[ebp], ecx

; 7281 : 	int iFaithBonus = 0;

	mov	DWORD PTR _iFaithBonus$[ebp], 0

; 7282 : 
; 7283 : 	EraTypes eCurrentEra = eAssumeEra;

	mov	eax, DWORD PTR _eAssumeEra$[ebp]
	mov	DWORD PTR _eCurrentEra$[ebp], eax

; 7284 : 	if(eCurrentEra == NO_ERA)

	cmp	DWORD PTR _eCurrentEra$[ebp], -1
	jne	SHORT $LN9@GetFaithFl@2

; 7285 : 		eCurrentEra = GET_TEAM(GET_PLAYER(ePlayer).getTeam()).GetCurrentEra();

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244276[ebp], ecx
	mov	edx, DWORD PTR $T244276[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T244285[ebp], eax
	mov	ecx, DWORD PTR $T244285[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T244289[ebp], ecx
	mov	ecx, DWORD PTR $T244289[ebp]
	call	?GetCurrentEra@CvTeam@@QBE?AW4EraTypes@@XZ ; CvTeam::GetCurrentEra
	mov	DWORD PTR _eCurrentEra$[ebp], eax
$LN9@GetFaithFl@2:

; 7286 : 
; 7287 : 	EraTypes eIndustrial = (EraTypes) GC.getInfoTypeForString("ERA_INDUSTRIAL", true);

	push	1
	push	OFFSET ??_C@_0P@IGHGNBHE@ERA_INDUSTRIAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eIndustrial$[ebp], eax

; 7288 : 	EraTypes eRenaissance = (EraTypes) GC.getInfoTypeForString("ERA_RENAISSANCE", true);

	push	1
	push	OFFSET ??_C@_0BA@OCIKOJNE@ERA_RENAISSANCE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eRenaissance$[ebp], eax

; 7289 : 	EraTypes eMedieval = (EraTypes) GC.getInfoTypeForString("ERA_MEDIEVAL", true);

	push	1
	push	OFFSET ??_C@_0N@FKOCAGBC@ERA_MEDIEVAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eMedieval$[ebp], eax

; 7290 : 	EraTypes eClassical = (EraTypes) GC.getInfoTypeForString("ERA_CLASSICAL", true);

	push	1
	push	OFFSET ??_C@_0O@DOFGCEG@ERA_CLASSICAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eClassical$[ebp], eax

; 7291 : 
; 7292 : 	// Industrial era or later
; 7293 : 	if(eCurrentEra >= eIndustrial)

	mov	edx, DWORD PTR _eCurrentEra$[ebp]
	cmp	edx, DWORD PTR _eIndustrial$[ebp]
	jl	SHORT $LN8@GetFaithFl@2

; 7294 : 	{
; 7295 : 		iFaithBonus += GC.getALLIES_FAITH_FLAT_BONUS_AMOUNT_INDUSTRIAL();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3000
	mov	DWORD PTR $T244293[ebp], eax
	mov	ecx, DWORD PTR _iFaithBonus$[ebp]
	add	ecx, DWORD PTR $T244293[ebp]
	mov	DWORD PTR _iFaithBonus$[ebp], ecx
	jmp	SHORT $LN7@GetFaithFl@2
$LN8@GetFaithFl@2:

; 7296 : 	}
; 7297 : 
; 7298 : 	// Renaissance era
; 7299 : 	else if(eCurrentEra >= eRenaissance)

	mov	edx, DWORD PTR _eCurrentEra$[ebp]
	cmp	edx, DWORD PTR _eRenaissance$[ebp]
	jl	SHORT $LN6@GetFaithFl@2

; 7300 : 	{
; 7301 : 		iFaithBonus += GC.getALLIES_FAITH_FLAT_BONUS_AMOUNT_RENAISSANCE();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3004
	mov	DWORD PTR $T244297[ebp], eax
	mov	ecx, DWORD PTR _iFaithBonus$[ebp]
	add	ecx, DWORD PTR $T244297[ebp]
	mov	DWORD PTR _iFaithBonus$[ebp], ecx
	jmp	SHORT $LN7@GetFaithFl@2
$LN6@GetFaithFl@2:

; 7302 : 	}
; 7303 : 
; 7304 : 	// Medieval era
; 7305 : 	else if(eCurrentEra >= eMedieval)

	mov	edx, DWORD PTR _eCurrentEra$[ebp]
	cmp	edx, DWORD PTR _eMedieval$[ebp]
	jl	SHORT $LN4@GetFaithFl@2

; 7306 : 	{
; 7307 : 		iFaithBonus += GC.getALLIES_FAITH_FLAT_BONUS_AMOUNT_MEDIEVAL();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3008
	mov	DWORD PTR $T244301[ebp], eax
	mov	ecx, DWORD PTR _iFaithBonus$[ebp]
	add	ecx, DWORD PTR $T244301[ebp]
	mov	DWORD PTR _iFaithBonus$[ebp], ecx
	jmp	SHORT $LN7@GetFaithFl@2
$LN4@GetFaithFl@2:

; 7308 : 	}
; 7309 : 
; 7310 : 	// Classical era
; 7311 : 	else if(eCurrentEra >= eClassical)

	mov	edx, DWORD PTR _eCurrentEra$[ebp]
	cmp	edx, DWORD PTR _eClassical$[ebp]
	jl	SHORT $LN2@GetFaithFl@2

; 7312 : 	{
; 7313 : 		iFaithBonus += GC.getALLIES_FAITH_FLAT_BONUS_AMOUNT_CLASSICAL();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3012
	mov	DWORD PTR $T244305[ebp], eax
	mov	ecx, DWORD PTR _iFaithBonus$[ebp]
	add	ecx, DWORD PTR $T244305[ebp]
	mov	DWORD PTR _iFaithBonus$[ebp], ecx

; 7314 : 	}
; 7315 : 
; 7316 : 	// Ancient era
; 7317 : 	else

	jmp	SHORT $LN7@GetFaithFl@2
$LN2@GetFaithFl@2:

; 7318 : 	{
; 7319 : 		iFaithBonus += GC.getALLIES_FAITH_FLAT_BONUS_AMOUNT_ANCIENT();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3016
	mov	DWORD PTR $T244309[ebp], edx
	mov	eax, DWORD PTR _iFaithBonus$[ebp]
	add	eax, DWORD PTR $T244309[ebp]
	mov	DWORD PTR _iFaithBonus$[ebp], eax
$LN7@GetFaithFl@2:

; 7320 : 	}
; 7321 : 
; 7322 : 	return iFaithBonus;

	mov	eax, DWORD PTR _iFaithBonus$[ebp]

; 7323 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetFaithFlatAlliesBonus@CvMinorCivAI@@QBEHW4PlayerTypes@@W4EraTypes@@@Z ENDP ; CvMinorCivAI::GetFaithFlatAlliesBonus
_TEXT	ENDS
PUBLIC	?GetCurrentFaithFlatBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentFaithFlatBonus
; Function compile flags: /Odtp
;	COMDAT ?GetCurrentFaithFlatBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T244323 = -20						; size = 4
$T244319 = -16						; size = 4
$T244315 = -12						; size = 4
_iAmount$ = -8						; size = 4
_iModifier$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
?GetCurrentFaithFlatBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetCurrentFaithFlatBonus, COMDAT
; _this$ = ecx

; 7326 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 7327 : 	CvAssertMsg(ePlayer >= 0, "eIndex is expected to be non-negative (invalid Index)");
; 7328 : 	CvAssertMsg(ePlayer < MAX_PLAYERS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 7329 : 	if(ePlayer < 0 || ePlayer >= MAX_PLAYERS) return 0;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN6@GetCurrent@7
	cmp	DWORD PTR _ePlayer$[ebp], 64		; 00000040H
	jl	SHORT $LN7@GetCurrent@7
$LN6@GetCurrent@7:
	xor	eax, eax
	jmp	$LN8@GetCurrent@7
$LN7@GetCurrent@7:

; 7330 : 
; 7331 : 	// Minor civ players do not get a bonus
; 7332 : 	if(ePlayer >= MAX_MAJOR_CIVS)

	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN5@GetCurrent@7

; 7333 : 		return 0;

	xor	eax, eax
	jmp	$LN8@GetCurrent@7
$LN5@GetCurrent@7:

; 7334 : 
; 7335 : 	// Only for Religious trait minors
; 7336 : 	if(GetTrait() != MINOR_CIV_TRAIT_RELIGIOUS)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait
	cmp	eax, 4
	je	SHORT $LN4@GetCurrent@7

; 7337 : 		return 0;

	xor	eax, eax
	jmp	$LN8@GetCurrent@7
$LN4@GetCurrent@7:

; 7338 : 
; 7339 : 	int iAmount = 0;

	mov	DWORD PTR _iAmount$[ebp], 0

; 7340 : 	if(IsAllies(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAllies
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@GetCurrent@7

; 7341 : 		iAmount += GetFaithFlatAlliesBonus(ePlayer);

	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFaithFlatAlliesBonus@CvMinorCivAI@@QBEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetFaithFlatAlliesBonus
	add	eax, DWORD PTR _iAmount$[ebp]
	mov	DWORD PTR _iAmount$[ebp], eax
$LN3@GetCurrent@7:

; 7342 : 	if(IsFriends(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@GetCurrent@7

; 7343 : 		iAmount += GetFaithFlatFriendshipBonus(ePlayer);

	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFaithFlatFriendshipBonus@CvMinorCivAI@@QBEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetFaithFlatFriendshipBonus
	add	eax, DWORD PTR _iAmount$[ebp]
	mov	DWORD PTR _iAmount$[ebp], eax
$LN2@GetCurrent@7:

; 7344 : 
; 7345 : 	// Modify the bonus if called for by our trait
; 7346 : 	int iModifier = GET_PLAYER(ePlayer).GetPlayerTraits()->GetCityStateBonusModifier(); 

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244315[ebp], eax
	mov	ecx, DWORD PTR $T244315[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T244319[ebp], eax
	mov	ecx, DWORD PTR $T244319[ebp]
	mov	edx, DWORD PTR [ecx+88]
	mov	DWORD PTR _iModifier$[ebp], edx

; 7347 : 	
; 7348 : 	//NQMP GJS - Patronage Finisher
; 7349 : 	iModifier += GET_PLAYER(ePlayer).GetPlayerPolicies()->GetNumericModifier(POLICYMOD_CITY_STATE_BONUS_MODIFIER);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244323[ebp], eax
	push	60					; 0000003cH
	mov	ecx, DWORD PTR $T244323[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	add	eax, DWORD PTR _iModifier$[ebp]
	mov	DWORD PTR _iModifier$[ebp], eax

; 7350 : 
; 7351 : 	if(iModifier > 0)

	cmp	DWORD PTR _iModifier$[ebp], 0
	jle	SHORT $LN1@GetCurrent@7

; 7352 : 	{
; 7353 : 		iAmount *= (iModifier + 100);

	mov	ecx, DWORD PTR _iModifier$[ebp]
	add	ecx, 100				; 00000064H
	imul	ecx, DWORD PTR _iAmount$[ebp]
	mov	DWORD PTR _iAmount$[ebp], ecx

; 7354 : 		iAmount /= 100;

	mov	eax, DWORD PTR _iAmount$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iAmount$[ebp], eax
$LN1@GetCurrent@7:

; 7355 : 	}
; 7356 : 
; 7357 : 	return iAmount;

	mov	eax, DWORD PTR _iAmount$[ebp]
$LN8@GetCurrent@7:

; 7358 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetCurrentFaithFlatBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetCurrentFaithFlatBonus
_TEXT	ENDS
PUBLIC	?GetCurrentFaithBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentFaithBonus
; Function compile flags: /Odtp
;	COMDAT ?GetCurrentFaithBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iValue$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetCurrentFaithBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetCurrentFaithBonus, COMDAT
; _this$ = ecx

; 7362 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 7363 : 	int iValue = 0;

	mov	DWORD PTR _iValue$[ebp], 0

; 7364 : 
; 7365 : 	iValue += GetCurrentFaithFlatBonus(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCurrentFaithFlatBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentFaithFlatBonus
	add	eax, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _iValue$[ebp], eax

; 7366 : 
; 7367 : 	return iValue;

	mov	eax, DWORD PTR _iValue$[ebp]

; 7368 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetCurrentFaithBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetCurrentFaithBonus
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetFriendsCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z
_TEXT	SEGMENT
_this$ = -44						; size = 4
$T244362 = -40						; size = 4
$T244358 = -36						; size = 4
$T244354 = -32						; size = 4
$T244344 = -28						; size = 4
$T244340 = -24						; size = 4
$T244331 = -20						; size = 4
_eCurrentEra$ = -16					; size = 4
_eRenaissance$ = -12					; size = 4
_iBonus$ = -8						; size = 4
_iModifier$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
_eAssumeEra$ = 12					; size = 4
?GetFriendsCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z PROC ; CvMinorCivAI::GetFriendsCapitalFoodBonus, COMDAT
; _this$ = ecx

; 7372 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 7373 : 	int iBonus;
; 7374 : 
; 7375 : 	EraTypes eCurrentEra = eAssumeEra;

	mov	eax, DWORD PTR _eAssumeEra$[ebp]
	mov	DWORD PTR _eCurrentEra$[ebp], eax

; 7376 : 	if(eCurrentEra == NO_ERA)

	cmp	DWORD PTR _eCurrentEra$[ebp], -1
	jne	SHORT $LN4@GetFriends@5

; 7377 : 		eCurrentEra = GET_TEAM(GET_PLAYER(ePlayer).getTeam()).GetCurrentEra();

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244331[ebp], ecx
	mov	edx, DWORD PTR $T244331[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T244340[ebp], eax
	mov	ecx, DWORD PTR $T244340[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T244344[ebp], ecx
	mov	ecx, DWORD PTR $T244344[ebp]
	call	?GetCurrentEra@CvTeam@@QBE?AW4EraTypes@@XZ ; CvTeam::GetCurrentEra
	mov	DWORD PTR _eCurrentEra$[ebp], eax
$LN4@GetFriends@5:

; 7378 : 
; 7379 : 	EraTypes eRenaissance = (EraTypes) GC.getInfoTypeForString("ERA_RENAISSANCE", true);

	push	1
	push	OFFSET ??_C@_0BA@OCIKOJNE@ERA_RENAISSANCE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eRenaissance$[ebp], eax

; 7380 : 
; 7381 : 	// Medieval era or sooner
; 7382 : 	if(eCurrentEra < eRenaissance)

	mov	edx, DWORD PTR _eCurrentEra$[ebp]
	cmp	edx, DWORD PTR _eRenaissance$[ebp]
	jge	SHORT $LN3@GetFriends@5

; 7383 : 		iBonus = /*200*/ GC.getFRIENDS_CAPITAL_FOOD_BONUS_AMOUNT_PRE_RENAISSANCE();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2888
	mov	DWORD PTR _iBonus$[ebp], eax

; 7384 : 
; 7385 : 	// Renaissance era or later
; 7386 : 	else

	jmp	SHORT $LN2@GetFriends@5
$LN3@GetFriends@5:

; 7387 : 		iBonus = /*200*/ GC.getFRIENDS_CAPITAL_FOOD_BONUS_AMOUNT_POST_RENAISSANCE();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2892
	mov	DWORD PTR _iBonus$[ebp], ecx
$LN2@GetFriends@5:

; 7388 : 
; 7389 : 	// Modify the bonus if called for by our trait
; 7390 : 	int iModifier = GET_PLAYER(ePlayer).GetPlayerTraits()->GetCityStateBonusModifier(); 

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244354[ebp], edx
	mov	ecx, DWORD PTR $T244354[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T244358[ebp], eax
	mov	eax, DWORD PTR $T244358[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	DWORD PTR _iModifier$[ebp], ecx

; 7391 : 	
; 7392 : 	//NQMP GJS - Patronage Finisher
; 7393 : 	iModifier += GET_PLAYER(ePlayer).GetPlayerPolicies()->GetNumericModifier(POLICYMOD_CITY_STATE_BONUS_MODIFIER);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244362[ebp], edx
	push	60					; 0000003cH
	mov	ecx, DWORD PTR $T244362[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	add	eax, DWORD PTR _iModifier$[ebp]
	mov	DWORD PTR _iModifier$[ebp], eax

; 7394 : 
; 7395 : 	if(iModifier > 0)

	cmp	DWORD PTR _iModifier$[ebp], 0
	jle	SHORT $LN1@GetFriends@5

; 7396 : 	{
; 7397 : 		iBonus *= (iModifier + 100);

	mov	eax, DWORD PTR _iModifier$[ebp]
	add	eax, 100				; 00000064H
	imul	eax, DWORD PTR _iBonus$[ebp]
	mov	DWORD PTR _iBonus$[ebp], eax

; 7398 : 		iBonus /= 100;

	mov	eax, DWORD PTR _iBonus$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iBonus$[ebp], eax
$LN1@GetFriends@5:

; 7399 : 	}
; 7400 : 
; 7401 : 	return iBonus;

	mov	eax, DWORD PTR _iBonus$[ebp]

; 7402 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetFriendsCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ENDP ; CvMinorCivAI::GetFriendsCapitalFoodBonus
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetFriendsOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z
_TEXT	SEGMENT
_this$ = -44						; size = 4
$T244399 = -40						; size = 4
$T244395 = -36						; size = 4
$T244391 = -32						; size = 4
$T244381 = -28						; size = 4
$T244377 = -24						; size = 4
$T244368 = -20						; size = 4
_eCurrentEra$ = -16					; size = 4
_eRenaissance$ = -12					; size = 4
_iBonus$ = -8						; size = 4
_iModifier$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
_eAssumeEra$ = 12					; size = 4
?GetFriendsOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z PROC ; CvMinorCivAI::GetFriendsOtherCityFoodBonus, COMDAT
; _this$ = ecx

; 7406 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 7407 : 	int iBonus;
; 7408 : 
; 7409 : 	EraTypes eCurrentEra = eAssumeEra;

	mov	eax, DWORD PTR _eAssumeEra$[ebp]
	mov	DWORD PTR _eCurrentEra$[ebp], eax

; 7410 : 	if(eCurrentEra == NO_ERA)

	cmp	DWORD PTR _eCurrentEra$[ebp], -1
	jne	SHORT $LN4@GetFriends@6

; 7411 : 		eCurrentEra = GET_TEAM(GET_PLAYER(ePlayer).getTeam()).GetCurrentEra();

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244368[ebp], ecx
	mov	edx, DWORD PTR $T244368[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T244377[ebp], eax
	mov	ecx, DWORD PTR $T244377[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T244381[ebp], ecx
	mov	ecx, DWORD PTR $T244381[ebp]
	call	?GetCurrentEra@CvTeam@@QBE?AW4EraTypes@@XZ ; CvTeam::GetCurrentEra
	mov	DWORD PTR _eCurrentEra$[ebp], eax
$LN4@GetFriends@6:

; 7412 : 
; 7413 : 	EraTypes eRenaissance = (EraTypes) GC.getInfoTypeForString("ERA_RENAISSANCE", true);

	push	1
	push	OFFSET ??_C@_0BA@OCIKOJNE@ERA_RENAISSANCE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eRenaissance$[ebp], eax

; 7414 : 
; 7415 : 	// Medieval era or sooner
; 7416 : 	if(eCurrentEra < eRenaissance)

	mov	edx, DWORD PTR _eCurrentEra$[ebp]
	cmp	edx, DWORD PTR _eRenaissance$[ebp]
	jge	SHORT $LN3@GetFriends@6

; 7417 : 		iBonus = /*0*/ GC.getFRIENDS_OTHER_CITIES_FOOD_BONUS_AMOUNT_PRE_RENAISSANCE();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2896
	mov	DWORD PTR _iBonus$[ebp], eax

; 7418 : 
; 7419 : 	// Renaissance era or later
; 7420 : 	else

	jmp	SHORT $LN2@GetFriends@6
$LN3@GetFriends@6:

; 7421 : 		iBonus = /*0*/ GC.getFRIENDS_OTHER_CITIES_FOOD_BONUS_AMOUNT_POST_RENAISSANCE();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2900
	mov	DWORD PTR _iBonus$[ebp], ecx
$LN2@GetFriends@6:

; 7422 : 
; 7423 : 	// Modify the bonus if called for by our trait
; 7424 : 	int iModifier = GET_PLAYER(ePlayer).GetPlayerTraits()->GetCityStateBonusModifier(); 

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244391[ebp], edx
	mov	ecx, DWORD PTR $T244391[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T244395[ebp], eax
	mov	eax, DWORD PTR $T244395[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	DWORD PTR _iModifier$[ebp], ecx

; 7425 : 	
; 7426 : 	//NQMP GJS - Patronage Finisher
; 7427 : 	iModifier += GET_PLAYER(ePlayer).GetPlayerPolicies()->GetNumericModifier(POLICYMOD_CITY_STATE_BONUS_MODIFIER);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244399[ebp], edx
	push	60					; 0000003cH
	mov	ecx, DWORD PTR $T244399[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	add	eax, DWORD PTR _iModifier$[ebp]
	mov	DWORD PTR _iModifier$[ebp], eax

; 7428 : 
; 7429 : 	if(iModifier > 0)

	cmp	DWORD PTR _iModifier$[ebp], 0
	jle	SHORT $LN1@GetFriends@6

; 7430 : 	{
; 7431 : 		iBonus *= (iModifier + 100);

	mov	eax, DWORD PTR _iModifier$[ebp]
	add	eax, 100				; 00000064H
	imul	eax, DWORD PTR _iBonus$[ebp]
	mov	DWORD PTR _iBonus$[ebp], eax

; 7432 : 		iBonus /= 100;

	mov	eax, DWORD PTR _iBonus$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iBonus$[ebp], eax
$LN1@GetFriends@6:

; 7433 : 	}
; 7434 : 
; 7435 : 	return iBonus;

	mov	eax, DWORD PTR _iBonus$[ebp]

; 7436 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetFriendsOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ENDP ; CvMinorCivAI::GetFriendsOtherCityFoodBonus
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetAlliesCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T244416 = -20						; size = 4
$T244412 = -16						; size = 4
$T244408 = -12						; size = 4
_iBonus$ = -8						; size = 4
_iModifier$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
?GetAlliesCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetAlliesCapitalFoodBonus, COMDAT
; _this$ = ecx

; 7440 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 7441 : 	int iBonus = /*100*/ GC.getALLIES_CAPITAL_FOOD_BONUS_AMOUNT();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2904
	mov	DWORD PTR _iBonus$[ebp], eax

; 7442 : 
; 7443 : 	// Modify the bonus if called for by our trait
; 7444 : 	int iModifier = GET_PLAYER(ePlayer).GetPlayerTraits()->GetCityStateBonusModifier(); 

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244408[ebp], ecx
	mov	ecx, DWORD PTR $T244408[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T244412[ebp], eax
	mov	edx, DWORD PTR $T244412[ebp]
	mov	eax, DWORD PTR [edx+88]
	mov	DWORD PTR _iModifier$[ebp], eax

; 7445 : 	
; 7446 : 	//NQMP GJS - Patronage Finisher
; 7447 : 	iModifier += GET_PLAYER(ePlayer).GetPlayerPolicies()->GetNumericModifier(POLICYMOD_CITY_STATE_BONUS_MODIFIER);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244416[ebp], ecx
	push	60					; 0000003cH
	mov	ecx, DWORD PTR $T244416[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	add	eax, DWORD PTR _iModifier$[ebp]
	mov	DWORD PTR _iModifier$[ebp], eax

; 7448 : 
; 7449 : 	if(iModifier > 0)

	cmp	DWORD PTR _iModifier$[ebp], 0
	jle	SHORT $LN1@GetAlliesC

; 7450 : 	{
; 7451 : 		iBonus *= (iModifier + 100);

	mov	edx, DWORD PTR _iModifier$[ebp]
	add	edx, 100				; 00000064H
	imul	edx, DWORD PTR _iBonus$[ebp]
	mov	DWORD PTR _iBonus$[ebp], edx

; 7452 : 		iBonus /= 100;

	mov	eax, DWORD PTR _iBonus$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iBonus$[ebp], eax
$LN1@GetAlliesC:

; 7453 : 	}
; 7454 : 
; 7455 : 	return iBonus;

	mov	eax, DWORD PTR _iBonus$[ebp]

; 7456 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetAlliesCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetAlliesCapitalFoodBonus
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetAlliesOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T244433 = -20						; size = 4
$T244429 = -16						; size = 4
$T244425 = -12						; size = 4
_iBonus$ = -8						; size = 4
_iModifier$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
?GetAlliesOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetAlliesOtherCityFoodBonus, COMDAT
; _this$ = ecx

; 7460 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 7461 : 	int iBonus = /*100*/ GC.getALLIES_OTHER_CITIES_FOOD_BONUS_AMOUNT();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2908
	mov	DWORD PTR _iBonus$[ebp], eax

; 7462 : 
; 7463 : 	// Modify the bonus if called for by our trait
; 7464 : 	int iModifier = GET_PLAYER(ePlayer).GetPlayerTraits()->GetCityStateBonusModifier(); 

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244425[ebp], ecx
	mov	ecx, DWORD PTR $T244425[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T244429[ebp], eax
	mov	edx, DWORD PTR $T244429[ebp]
	mov	eax, DWORD PTR [edx+88]
	mov	DWORD PTR _iModifier$[ebp], eax

; 7465 : 	
; 7466 : 	//NQMP GJS - Patronage Finisher
; 7467 : 	iModifier += GET_PLAYER(ePlayer).GetPlayerPolicies()->GetNumericModifier(POLICYMOD_CITY_STATE_BONUS_MODIFIER);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244433[ebp], ecx
	push	60					; 0000003cH
	mov	ecx, DWORD PTR $T244433[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	add	eax, DWORD PTR _iModifier$[ebp]
	mov	DWORD PTR _iModifier$[ebp], eax

; 7468 : 
; 7469 : 	if(iModifier > 0)

	cmp	DWORD PTR _iModifier$[ebp], 0
	jle	SHORT $LN1@GetAlliesO

; 7470 : 	{
; 7471 : 		iBonus *= (iModifier + 100);

	mov	edx, DWORD PTR _iModifier$[ebp]
	add	edx, 100				; 00000064H
	imul	edx, DWORD PTR _iBonus$[ebp]
	mov	DWORD PTR _iBonus$[ebp], edx

; 7472 : 		iBonus /= 100;

	mov	eax, DWORD PTR _iBonus$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iBonus$[ebp], eax
$LN1@GetAlliesO:

; 7473 : 	}
; 7474 : 
; 7475 : 	return iBonus;

	mov	eax, DWORD PTR _iBonus$[ebp]

; 7476 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetAlliesOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetAlliesOtherCityFoodBonus
_TEXT	ENDS
PUBLIC	?GetCurrentCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentCapitalFoodBonus
; Function compile flags: /Odtp
;	COMDAT ?GetCurrentCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iAmount$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetCurrentCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetCurrentCapitalFoodBonus, COMDAT
; _this$ = ecx

; 7480 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 7481 : 	// This guy isn't Maritime
; 7482 : 	if(GetTrait() != MINOR_CIV_TRAIT_MARITIME)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait
	cmp	eax, 2
	je	SHORT $LN3@GetCurrent@8

; 7483 : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN4@GetCurrent@8
$LN3@GetCurrent@8:

; 7484 : 
; 7485 : 	int iAmount = 0;

	mov	DWORD PTR _iAmount$[ebp], 0

; 7486 : 
; 7487 : 	if(IsAllies(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAllies
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@GetCurrent@8

; 7488 : 	{
; 7489 : 		iAmount += GetAlliesCapitalFoodBonus(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlliesCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetAlliesCapitalFoodBonus
	add	eax, DWORD PTR _iAmount$[ebp]
	mov	DWORD PTR _iAmount$[ebp], eax

; 7490 : 		iAmount += GetAlliesOtherCityFoodBonus(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlliesOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetAlliesOtherCityFoodBonus
	add	eax, DWORD PTR _iAmount$[ebp]
	mov	DWORD PTR _iAmount$[ebp], eax
$LN2@GetCurrent@8:

; 7491 : 	}
; 7492 : 
; 7493 : 	if(IsFriends(ePlayer))

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetCurrent@8

; 7494 : 	{
; 7495 : 		iAmount += GetFriendsCapitalFoodBonus(ePlayer);

	push	-1
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFriendsCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetFriendsCapitalFoodBonus
	add	eax, DWORD PTR _iAmount$[ebp]
	mov	DWORD PTR _iAmount$[ebp], eax

; 7496 : 		iAmount += GetFriendsOtherCityFoodBonus(ePlayer);

	push	-1
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFriendsOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetFriendsOtherCityFoodBonus
	add	eax, DWORD PTR _iAmount$[ebp]
	mov	DWORD PTR _iAmount$[ebp], eax
$LN1@GetCurrent@8:

; 7497 : 	}
; 7498 : 
; 7499 : 	return iAmount;

	mov	eax, DWORD PTR _iAmount$[ebp]
$LN4@GetCurrent@8:

; 7500 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetCurrentCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetCurrentCapitalFoodBonus
_TEXT	ENDS
PUBLIC	?GetCurrentOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentOtherCityFoodBonus
; Function compile flags: /Odtp
;	COMDAT ?GetCurrentOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iAmount$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetCurrentOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetCurrentOtherCityFoodBonus, COMDAT
; _this$ = ecx

; 7504 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 7505 : 	// This guy isn't Maritime
; 7506 : 	if(GetTrait() != MINOR_CIV_TRAIT_MARITIME)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait
	cmp	eax, 2
	je	SHORT $LN3@GetCurrent@9

; 7507 : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN4@GetCurrent@9
$LN3@GetCurrent@9:

; 7508 : 
; 7509 : 	int iAmount = 0;

	mov	DWORD PTR _iAmount$[ebp], 0

; 7510 : 
; 7511 : 	if(IsAllies(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAllies
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@GetCurrent@9

; 7512 : 		iAmount += GetAlliesOtherCityFoodBonus(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlliesOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetAlliesOtherCityFoodBonus
	add	eax, DWORD PTR _iAmount$[ebp]
	mov	DWORD PTR _iAmount$[ebp], eax
$LN2@GetCurrent@9:

; 7513 : 
; 7514 : 	if(IsFriends(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@GetCurrent@9

; 7515 : 		iAmount += GetFriendsOtherCityFoodBonus(ePlayer);

	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFriendsOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetFriendsOtherCityFoodBonus
	add	eax, DWORD PTR _iAmount$[ebp]
	mov	DWORD PTR _iAmount$[ebp], eax
$LN1@GetCurrent@9:

; 7516 : 
; 7517 : 	return iAmount;

	mov	eax, DWORD PTR _iAmount$[ebp]
$LN4@GetCurrent@9:

; 7518 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetCurrentOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetCurrentOtherCityFoodBonus
_TEXT	ENDS
PUBLIC	?SetUnitSpawnCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::SetUnitSpawnCounter
PUBLIC	??_C@_0CJ@KLMDGEGA@Rand?5turns?5for?5Friendly?5Minor?5un@ ; `string'
PUBLIC	?GetSpawnBaseTurns@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetSpawnBaseTurns
;	COMDAT ??_C@_0CJ@KLMDGEGA@Rand?5turns?5for?5Friendly?5Minor?5un@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
CONST	SEGMENT
??_C@_0CJ@KLMDGEGA@Rand?5turns?5for?5Friendly?5Minor?5un@ DB 'Rand turns '
	DB	'for Friendly Minor unit spawn', 00H		; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
CONST	ENDS
;	COMDAT ?DoSeedUnitSpawnCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T244450 = -16						; size = 4
$T244446 = -12						; size = 4
_iRand$ = -8						; size = 4
_iNumTurns$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
_bBias$ = 12						; size = 1
?DoSeedUnitSpawnCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z PROC ; CvMinorCivAI::DoSeedUnitSpawnCounter, COMDAT
; _this$ = ecx

; 7522 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 7523 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 7524 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 7525 : 
; 7526 : 	int iNumTurns = GetSpawnBaseTurns(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSpawnBaseTurns@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetSpawnBaseTurns
	mov	DWORD PTR _iNumTurns$[ebp], eax

; 7527 : 
; 7528 : 	// Add some randomness
; 7529 : 	int iRand = /*3*/ GC.getFRIENDS_RAND_TURNS_UNIT_SPAWN();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2916
	mov	DWORD PTR _iRand$[ebp], ecx

; 7530 : 	iNumTurns += GC.getGame().getJonRandNum(iRand, "Rand turns for Friendly Minor unit spawn");

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T244446[ebp], edx
	push	OFFSET ??_C@_0CJ@KLMDGEGA@Rand?5turns?5for?5Friendly?5Minor?5un@
	mov	eax, DWORD PTR _iRand$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T244446[ebp]
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	add	eax, DWORD PTR _iNumTurns$[ebp]
	mov	DWORD PTR _iNumTurns$[ebp], eax

; 7531 : 
; 7532 : 	// If we're biasing the result then decrease the number of turns
; 7533 : 	if(bBias)

	movzx	ecx, BYTE PTR _bBias$[ebp]
	test	ecx, ecx
	je	SHORT $LN1@DoSeedUnit

; 7534 : 	{
; 7535 : 		iNumTurns *= /*50*/ GC.getUNIT_SPAWN_BIAS_MULTIPLIER();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2924
	mov	DWORD PTR $T244450[ebp], edx
	mov	eax, DWORD PTR _iNumTurns$[ebp]
	imul	eax, DWORD PTR $T244450[ebp]
	mov	DWORD PTR _iNumTurns$[ebp], eax

; 7536 : 		iNumTurns /= 100;

	mov	eax, DWORD PTR _iNumTurns$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iNumTurns$[ebp], eax
$LN1@DoSeedUnit:

; 7537 : 	}
; 7538 : 
; 7539 : 	SetUnitSpawnCounter(ePlayer, iNumTurns);

	mov	edx, DWORD PTR _iNumTurns$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetUnitSpawnCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::SetUnitSpawnCounter

; 7540 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?DoSeedUnitSpawnCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z ENDP ; CvMinorCivAI::DoSeedUnitSpawnCounter
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetUnitSpawnCounter@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetUnitSpawnCounter@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetUnitSpawnCounter, COMDAT
; _this$ = ecx

; 7544 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 7545 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 7546 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 7547 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return -1; // as defined during Reset()

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@GetUnitSpa
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN2@GetUnitSpa
$LN1@GetUnitSpa:
	or	eax, -1
	jmp	SHORT $LN3@GetUnitSpa
$LN2@GetUnitSpa:

; 7548 : 
; 7549 : 	return m_aiUnitSpawnCounter[ePlayer];

	mov	eax, DWORD PTR _ePlayer$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+2552]
$LN3@GetUnitSpa:

; 7550 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetUnitSpawnCounter@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetUnitSpawnCounter
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?SetUnitSpawnCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
_iValue$ = 12						; size = 4
?SetUnitSpawnCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z PROC ; CvMinorCivAI::SetUnitSpawnCounter, COMDAT
; _this$ = ecx

; 7554 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 7555 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 7556 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 7557 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@SetUnitSpa
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN2@SetUnitSpa
$LN1@SetUnitSpa:
	jmp	SHORT $LN3@SetUnitSpa
$LN2@SetUnitSpa:

; 7558 : 
; 7559 : 	m_aiUnitSpawnCounter[ePlayer] = iValue;

	mov	eax, DWORD PTR _ePlayer$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR [ecx+eax*4+2552], edx
$LN3@SetUnitSpa:

; 7560 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetUnitSpawnCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ENDP ; CvMinorCivAI::SetUnitSpawnCounter
_TEXT	ENDS
PUBLIC	?ChangeUnitSpawnCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::ChangeUnitSpawnCounter
; Function compile flags: /Odtp
;	COMDAT ?ChangeUnitSpawnCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
_iChange$ = 12						; size = 4
?ChangeUnitSpawnCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z PROC ; CvMinorCivAI::ChangeUnitSpawnCounter, COMDAT
; _this$ = ecx

; 7564 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 7565 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 7566 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 7567 : 
; 7568 : 	SetUnitSpawnCounter(ePlayer, GetUnitSpawnCounter(ePlayer) + iChange);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetUnitSpawnCounter@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetUnitSpawnCounter
	add	eax, DWORD PTR _iChange$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetUnitSpawnCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::SetUnitSpawnCounter

; 7569 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?ChangeUnitSpawnCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ENDP ; CvMinorCivAI::ChangeUnitSpawnCounter
_TEXT	ENDS
PUBLIC	?IsUnitSpawningAllowed@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsUnitSpawningAllowed
; Function compile flags: /Odtp
;	COMDAT ?IsUnitSpawningAllowed@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T244481 = -13						; size = 1
$T244472 = -12						; size = 4
$T244468 = -5						; size = 1
$T244467 = -4						; size = 4
_ePlayer$ = 8						; size = 4
?IsUnitSpawningAllowed@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::IsUnitSpawningAllowed, COMDAT
; _this$ = ecx

; 7573 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 7574 : 	// Must have met ePlayer
; 7575 : 	if(!IsHasMetPlayer(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsHasMetPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsHasMetPlayer
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN6@IsUnitSpaw

; 7576 : 		return false;

	xor	al, al
	jmp	$LN7@IsUnitSpaw
$LN6@IsUnitSpaw:

; 7577 : 
; 7578 : 	// Must be Militaristic
; 7579 : 	if(GetTrait() != MINOR_CIV_TRAIT_MILITARISTIC)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait
	cmp	eax, 1
	je	SHORT $LN5@IsUnitSpaw

; 7580 : 		return false;

	xor	al, al
	jmp	SHORT $LN7@IsUnitSpaw
$LN5@IsUnitSpaw:

; 7581 : 
; 7582 : 	// Can't be at war!
; 7583 : 	if(IsAtWarWithPlayersTeam(ePlayer))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAtWarWithPlayersTeam@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAtWarWithPlayersTeam
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@IsUnitSpaw

; 7584 : 		return false;

	xor	al, al
	jmp	SHORT $LN7@IsUnitSpaw
$LN4@IsUnitSpaw:

; 7585 : 
; 7586 : 	// Must be Friends
; 7587 : 	if(!IsFriends(ePlayer))

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@IsUnitSpaw

; 7588 : 		return false;

	xor	al, al
	jmp	SHORT $LN7@IsUnitSpaw
$LN3@IsUnitSpaw:

; 7589 : 
; 7590 : 	// We must be alive
; 7591 : 	if(!GetPlayer()->isAlive())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T244467[ebp], eax
	mov	eax, DWORD PTR $T244467[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T244468[ebp], cl
	movzx	edx, BYTE PTR $T244468[ebp]
	test	edx, edx
	jne	SHORT $LN2@IsUnitSpaw

; 7592 : 		return false;

	xor	al, al
	jmp	SHORT $LN7@IsUnitSpaw
$LN2@IsUnitSpaw:

; 7593 : 
; 7594 : 	// They must be alive
; 7595 : 	if(!GET_PLAYER(ePlayer).isAlive())

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244472[ebp], eax
	mov	ecx, DWORD PTR $T244472[ebp]
	mov	dl, BYTE PTR [ecx+2256]
	mov	BYTE PTR $T244481[ebp], dl
	movzx	eax, BYTE PTR $T244481[ebp]
	test	eax, eax
	jne	SHORT $LN1@IsUnitSpaw

; 7596 : 		return false;

	xor	al, al
	jmp	SHORT $LN7@IsUnitSpaw
$LN1@IsUnitSpaw:

; 7597 : 
; 7598 : 	return true;

	mov	al, 1
$LN7@IsUnitSpaw:

; 7599 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsUnitSpawningAllowed@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::IsUnitSpawningAllowed
_TEXT	ENDS
PUBLIC	?IsUnitSpawningDisabled@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsUnitSpawningDisabled
; Function compile flags: /Odtp
;	COMDAT ?IsUnitSpawningDisabled@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?IsUnitSpawningDisabled@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::IsUnitSpawningDisabled, COMDAT
; _this$ = ecx

; 7603 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 7604 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 7605 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 7606 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return false;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@IsUnitSpaw@2
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN2@IsUnitSpaw@2
$LN1@IsUnitSpaw@2:
	xor	al, al
	jmp	SHORT $LN3@IsUnitSpaw@2
$LN2@IsUnitSpaw@2:

; 7607 : 
; 7608 : 	return m_abUnitSpawningDisabled[ePlayer];

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _ePlayer$[ebp]
	mov	al, BYTE PTR [eax+3080]
$LN3@IsUnitSpaw@2:

; 7609 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsUnitSpawningDisabled@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::IsUnitSpawningDisabled
_TEXT	ENDS
PUBLIC	?SetUnitSpawningDisabled@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z ; CvMinorCivAI::SetUnitSpawningDisabled
; Function compile flags: /Odtp
;	COMDAT ?SetUnitSpawningDisabled@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
_bValue$ = 12						; size = 1
?SetUnitSpawningDisabled@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z PROC ; CvMinorCivAI::SetUnitSpawningDisabled, COMDAT
; _this$ = ecx

; 7613 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 7614 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 7615 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 7616 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@SetUnitSpa@2
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN2@SetUnitSpa@2
$LN1@SetUnitSpa@2:
	jmp	SHORT $LN3@SetUnitSpa@2
$LN2@SetUnitSpa@2:

; 7617 : 
; 7618 : 	m_abUnitSpawningDisabled[ePlayer] = bValue;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _ePlayer$[ebp]
	mov	cl, BYTE PTR _bValue$[ebp]
	mov	BYTE PTR [eax+3080], cl
$LN3@SetUnitSpa@2:

; 7619 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetUnitSpawningDisabled@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z ENDP ; CvMinorCivAI::SetUnitSpawningDisabled
_TEXT	ENDS
PUBLIC	??_C@_0DD@ICNLOLEK@TXT_KEY_NOTIFICATION_SUMMARY_CIT@ ; `string'
PUBLIC	??_C@_0CL@CLDPIHBK@TXT_KEY_NOTIFICATION_CITY_STATE_@ ; `string'
PUBLIC	?DoSpawnUnit@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ; CvMinorCivAI::DoSpawnUnit
EXTRN	?kill@CvUnit@@QAEX_NW4PlayerTypes@@@Z:PROC	; CvUnit::kill
EXTRN	?addProductionExperience@CvCity@@QAEXPAVCvUnit@@_N@Z:PROC ; CvCity::addProductionExperience
EXTRN	?jumpToNearestValidPlot@CvUnit@@QAE_NXZ:PROC	; CvUnit::jumpToNearestValidPlot
EXTRN	?changeExperience@CvUnit@@QAEXHH_N00@Z:PROC	; CvUnit::changeExperience
EXTRN	?initUnit@CvPlayer@@QAEPAVCvUnit@@W4UnitTypes@@HHW4UnitAITypes@@W4DirectionTypes@@_N3HH@Z:PROC ; CvPlayer::initUnit
EXTRN	?GetCompetitiveSpawnUnitType@CvGame@@QAE?AW4UnitTypes@@W4PlayerTypes@@_N1@Z:PROC ; CvGame::GetCompetitiveSpawnUnitType
EXTRN	?GetObsoleteTech@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetObsoleteTech
EXTRN	?GetPrereqAndTech@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetPrereqAndTech
EXTRN	?GetClosestFriendlyCity@CvPlayer@@QAEPAVCvCity@@AAVCvPlot@@H@Z:PROC ; CvPlayer::GetClosestFriendlyCity
;	COMDAT ??_C@_0DD@ICNLOLEK@TXT_KEY_NOTIFICATION_SUMMARY_CIT@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0DD@ICNLOLEK@TXT_KEY_NOTIFICATION_SUMMARY_CIT@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_CITY_STATE_UNIT_SPAWN', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@CLDPIHBK@TXT_KEY_NOTIFICATION_CITY_STATE_@
CONST	SEGMENT
??_C@_0CL@CLDPIHBK@TXT_KEY_NOTIFICATION_CITY_STATE_@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_CITY_STATE_UNIT_SPAWN', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DoSpawnUnit@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoSpawnUnit@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DoSpawnUnit@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?DoSpawnUnit@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$2
__ehfuncinfo$?DoSpawnUnit@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?DoSpawnUnit@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoSpawnUnit@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
_TEXT	SEGMENT
tv337 = -348						; size = 4
tv382 = -344						; size = 4
tv334 = -340						; size = 4
tv369 = -336						; size = 4
_this$ = -332						; size = 4
$T244632 = -328						; size = 4
$T244631 = -324						; size = 4
$T244622 = -320						; size = 4
$T244621 = -316						; size = 4
$T244612 = -312						; size = 4
$T244603 = -308						; size = 4
$T244594 = -304						; size = 4
$T244590 = -300						; size = 4
$T244589 = -296						; size = 4
$T244585 = -292						; size = 4
$T244581 = -288						; size = 4
$T244577 = -284						; size = 4
$T244573 = -280						; size = 4
$T244569 = -276						; size = 4
$T244565 = -272						; size = 4
$T244561 = -268						; size = 4
$T244552 = -264						; size = 4
$T244548 = -260						; size = 4
$T244544 = -256						; size = 4
$T244535 = -252						; size = 4
$T244499 = -248						; size = 4
$T244491 = -244						; size = 4
$T244490 = -240						; size = 4
$T244489 = -236						; size = 4
$T244488 = -232						; size = 4
_strMessage$226561 = -228				; size = 80
_strSummary$226565 = -148				; size = 80
_pNewUnit$226557 = -68					; size = 4
_i$226553 = -64						; size = 4
_iUnitsToGift$226552 = -60				; size = 4
_eObsoleteTech$226544 = -56				; size = 4
_ePrereqTech$226540 = -52				; size = 4
_pkUnitInfo$226538 = -48				; size = 4
_bUseUniqueUnit$226535 = -41				; size = 1
_eUniqueUnit$226536 = -40				; size = 4
_pMajorCity$226529 = -36				; size = 4
_eUnit$226533 = -32					; size = 4
_pMinorCapitalPlot$226527 = -28				; size = 4
_iX$226530 = -24					; size = 4
_iY$226531 = -20					; size = 4
_pMinorCapital$226525 = -16				; size = 4
__$EHRec$ = -12						; size = 12
_eMajor$ = 8						; size = 4
?DoSpawnUnit@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z PROC	; CvMinorCivAI::DoSpawnUnit, COMDAT
; _this$ = ecx

; 7623 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoSpawnUnit@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 336				; 00000150H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 7624 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 7625 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 7626 : 	if(eMajor < 0 || eMajor >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN23@DoSpawnUni
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN24@DoSpawnUni
$LN23@DoSpawnUni:
	jmp	$LN25@DoSpawnUni
$LN24@DoSpawnUni:

; 7627 : 
; 7628 : 	if(!IsUnitSpawningDisabled(eMajor))

	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsUnitSpawningDisabled@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsUnitSpawningDisabled
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN22@DoSpawnUni

; 7629 : 	{
; 7630 : 		// Minor must have Capital
; 7631 : 		CvCity* pMinorCapital = GetPlayer()->getCapitalCity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pMinorCapital$226525[ebp], eax

; 7632 : 		if(pMinorCapital == NULL)

	cmp	DWORD PTR _pMinorCapital$226525[ebp], 0
	jne	SHORT $LN21@DoSpawnUni

; 7633 : 		{
; 7634 : 			FAssertMsg(false, "MINOR CIV AI: Trying to spawn a Unit for a major civ but the minor has no capital. Please send Jon this with your last 5 autosaves and what changelist # you're playing.");
; 7635 : 			return;

	jmp	$LN25@DoSpawnUni
$LN21@DoSpawnUni:

; 7636 : 		}
; 7637 : 		CvPlot* pMinorCapitalPlot = pMinorCapital->plot();

	mov	ecx, DWORD PTR _pMinorCapital$226525[ebp]
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	DWORD PTR _pMinorCapitalPlot$226527[ebp], eax

; 7638 : 		if(pMinorCapitalPlot == NULL)

	cmp	DWORD PTR _pMinorCapitalPlot$226527[ebp], 0
	jne	SHORT $LN20@DoSpawnUni

; 7639 : 		{
; 7640 : 			CvAssertMsg(false, "MINOR CIV AI: Trying to spawn a Unit for a major civ but the minor's capital has no plot. Please send Anton your save file and version.");
; 7641 : 			return;

	jmp	$LN25@DoSpawnUni
$LN20@DoSpawnUni:

; 7642 : 		}
; 7643 : 
; 7644 : 		CvCity* pMajorCity = GET_PLAYER(eMajor).GetClosestFriendlyCity(*pMinorCapitalPlot, MAX_INT);

	mov	edx, DWORD PTR _eMajor$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244499[ebp], edx
	push	2147483647				; 7fffffffH
	mov	eax, DWORD PTR _pMinorCapitalPlot$226527[ebp]
	push	eax
	mov	ecx, DWORD PTR $T244499[ebp]
	call	?GetClosestFriendlyCity@CvPlayer@@QAEPAVCvCity@@AAVCvPlot@@H@Z ; CvPlayer::GetClosestFriendlyCity
	mov	DWORD PTR _pMajorCity$226529[ebp], eax

; 7645 : 
; 7646 : 		int iX = pMinorCapital->getX();

	mov	ecx, DWORD PTR _pMinorCapital$226525[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR _iX$226530[ebp], edx

; 7647 : 		int iY = pMinorCapital->getY();

	mov	eax, DWORD PTR _pMinorCapital$226525[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR _iY$226531[ebp], ecx

; 7648 : 		if(pMajorCity != NULL)

	cmp	DWORD PTR _pMajorCity$226529[ebp], 0
	je	SHORT $LN19@DoSpawnUni

; 7649 : 		{
; 7650 : 			iX = pMajorCity->getX();

	mov	edx, DWORD PTR _pMajorCity$226529[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR _iX$226530[ebp], eax

; 7651 : 			iY = pMajorCity->getY();

	mov	ecx, DWORD PTR _pMajorCity$226529[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR _iY$226531[ebp], edx
$LN19@DoSpawnUni:

; 7652 : 		}
; 7653 : 
; 7654 : 		// Pick Unit type
; 7655 : 		UnitTypes eUnit = NO_UNIT;

	mov	DWORD PTR _eUnit$226533[ebp], -1

; 7656 : 		if (GetAlly() == eMajor)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetAlly
	cmp	eax, DWORD PTR _eMajor$[ebp]
	jne	$LN18@DoSpawnUni

; 7657 : 		{	
; 7658 : 			// Should we give our unique unit?
; 7659 : 			bool bUseUniqueUnit = false;

	mov	BYTE PTR _bUseUniqueUnit$226535[ebp], 0

; 7660 : 			UnitTypes eUniqueUnit = GetUniqueUnit();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetUniqueUnit@CvMinorCivAI@@QBE?AW4UnitTypes@@XZ ; CvMinorCivAI::GetUniqueUnit
	mov	DWORD PTR _eUniqueUnit$226536[ebp], eax

; 7661 : 			if (eUniqueUnit != NO_UNIT)

	cmp	DWORD PTR _eUniqueUnit$226536[ebp], -1
	je	$LN17@DoSpawnUni

; 7662 : 			{
; 7663 : 				CvUnitEntry* pkUnitInfo = GC.getUnitInfo(eUniqueUnit);

	mov	eax, DWORD PTR _eUniqueUnit$226536[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	DWORD PTR _pkUnitInfo$226538[ebp], eax

; 7664 : 				if (pkUnitInfo)

	cmp	DWORD PTR _pkUnitInfo$226538[ebp], 0
	je	$LN17@DoSpawnUni

; 7665 : 				{
; 7666 : 					// Ally must have unit's prereq tech
; 7667 : 					TechTypes ePrereqTech = (TechTypes) pkUnitInfo->GetPrereqAndTech();

	mov	ecx, DWORD PTR _pkUnitInfo$226538[ebp]
	call	?GetPrereqAndTech@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetPrereqAndTech
	mov	DWORD PTR _ePrereqTech$226540[ebp], eax

; 7668 : 					if (ePrereqTech == NO_TECH || GET_TEAM(GET_PLAYER(eMajor).getTeam()).GetTeamTechs()->HasTech(ePrereqTech))

	cmp	DWORD PTR _ePrereqTech$226540[ebp], -1
	je	SHORT $LN14@DoSpawnUni
	mov	ecx, DWORD PTR _eMajor$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244535[ebp], ecx
	mov	edx, DWORD PTR $T244535[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T244544[ebp], eax
	mov	ecx, DWORD PTR $T244544[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T244548[ebp], ecx
	mov	edx, DWORD PTR _ePrereqTech$226540[ebp]
	push	edx
	mov	ecx, DWORD PTR $T244548[ebp]
	call	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ ; CvTeam::GetTeamTechs
	mov	ecx, eax
	call	?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z ; CvTeamTechs::HasTech
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN17@DoSpawnUni
$LN14@DoSpawnUni:

; 7669 : 					{
; 7670 : 						// Ally must NOT have unit's obsolete tech
; 7671 : 						TechTypes eObsoleteTech = (TechTypes) pkUnitInfo->GetObsoleteTech();

	mov	ecx, DWORD PTR _pkUnitInfo$226538[ebp]
	call	?GetObsoleteTech@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetObsoleteTech
	mov	DWORD PTR _eObsoleteTech$226544[ebp], eax

; 7672 : 						if (eObsoleteTech == NO_TECH || !GET_TEAM(GET_PLAYER(eMajor).getTeam()).GetTeamTechs()->HasTech(eObsoleteTech))

	cmp	DWORD PTR _eObsoleteTech$226544[ebp], -1
	je	SHORT $LN12@DoSpawnUni
	mov	ecx, DWORD PTR _eMajor$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244552[ebp], ecx
	mov	edx, DWORD PTR $T244552[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T244561[ebp], eax
	mov	ecx, DWORD PTR $T244561[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T244565[ebp], ecx
	mov	edx, DWORD PTR _eObsoleteTech$226544[ebp]
	push	edx
	mov	ecx, DWORD PTR $T244565[ebp]
	call	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ ; CvTeam::GetTeamTechs
	mov	ecx, eax
	call	?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z ; CvTeamTechs::HasTech
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN17@DoSpawnUni
$LN12@DoSpawnUni:

; 7673 : 						{
; 7674 : 							bUseUniqueUnit = true;

	mov	BYTE PTR _bUseUniqueUnit$226535[ebp], 1
$LN17@DoSpawnUni:

; 7675 : 						}
; 7676 : 					}
; 7677 : 				}
; 7678 : 			}
; 7679 : 			
; 7680 : 			if (bUseUniqueUnit)

	movzx	ecx, BYTE PTR _bUseUniqueUnit$226535[ebp]
	test	ecx, ecx
	je	SHORT $LN11@DoSpawnUni

; 7681 : 			{
; 7682 : 				eUnit = eUniqueUnit;

	mov	edx, DWORD PTR _eUniqueUnit$226536[ebp]
	mov	DWORD PTR _eUnit$226533[ebp], edx

; 7683 : 			}
; 7684 : 			else

	jmp	SHORT $LN10@DoSpawnUni
$LN11@DoSpawnUni:

; 7685 : 			{
; 7686 : 				eUnit = GC.getGame().GetCompetitiveSpawnUnitType(eMajor, /*bIncludeUUs*/ false, /*bIncludeRanged*/true);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T244569[ebp], eax
	push	1
	push	0
	mov	ecx, DWORD PTR _eMajor$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T244569[ebp]
	call	?GetCompetitiveSpawnUnitType@CvGame@@QAE?AW4UnitTypes@@W4PlayerTypes@@_N1@Z ; CvGame::GetCompetitiveSpawnUnitType
	mov	DWORD PTR _eUnit$226533[ebp], eax
$LN10@DoSpawnUni:

; 7687 : 			}
; 7688 : 		}
; 7689 : 		else

	jmp	SHORT $LN9@DoSpawnUni
$LN18@DoSpawnUni:

; 7690 : 		{
; 7691 : 			eUnit = GC.getGame().GetCompetitiveSpawnUnitType(eMajor, /*bIncludeUUs*/ false, /*bIncludeRanged*/true);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T244573[ebp], edx
	push	1
	push	0
	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T244573[ebp]
	call	?GetCompetitiveSpawnUnitType@CvGame@@QAE?AW4UnitTypes@@W4PlayerTypes@@_N1@Z ; CvGame::GetCompetitiveSpawnUnitType
	mov	DWORD PTR _eUnit$226533[ebp], eax
$LN9@DoSpawnUni:

; 7692 : 		}
; 7693 : 
; 7694 : 		// Spawn Unit
; 7695 : 		if(eUnit != NO_UNIT)

	cmp	DWORD PTR _eUnit$226533[ebp], -1
	je	$LN22@DoSpawnUni

; 7696 : 		{
; 7697 : 			// NQMP GJS - Patronage Finisher
; 7698 : 			int iUnitsToGift = 1 + GET_PLAYER(eMajor).GetPlayerPolicies()->GetNumericModifier(POLICYMOD_MINOR_MILITARY_NUM_EXTRA_UNITS_TO_GIFT);

	mov	ecx, DWORD PTR _eMajor$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244577[ebp], ecx
	push	59					; 0000003bH
	mov	ecx, DWORD PTR $T244577[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	add	eax, 1
	mov	DWORD PTR _iUnitsToGift$226552[ebp], eax

; 7699 : 			for (int i = 0; i < iUnitsToGift; ++i)

	mov	DWORD PTR _i$226553[ebp], 0
	jmp	SHORT $LN7@DoSpawnUni
$LN6@DoSpawnUni:
	mov	edx, DWORD PTR _i$226553[ebp]
	add	edx, 1
	mov	DWORD PTR _i$226553[ebp], edx
$LN7@DoSpawnUni:
	mov	eax, DWORD PTR _i$226553[ebp]
	cmp	eax, DWORD PTR _iUnitsToGift$226552[ebp]
	jge	$LN22@DoSpawnUni

; 7700 : 			{
; 7701 : 				// NQMP GJS - the code inside this for loop is pre-existing, it was put inside the for loop for the mod
; 7702 : 				CvUnit* pNewUnit = GET_PLAYER(eMajor).initUnit(eUnit, iX, iY);

	mov	ecx, DWORD PTR _eMajor$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244581[ebp], ecx
	push	0
	push	0
	push	1
	push	0
	push	-1
	push	-1
	mov	edx, DWORD PTR _iY$226531[ebp]
	push	edx
	mov	eax, DWORD PTR _iX$226530[ebp]
	push	eax
	mov	ecx, DWORD PTR _eUnit$226533[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T244581[ebp]
	call	?initUnit@CvPlayer@@QAEPAVCvUnit@@W4UnitTypes@@HHW4UnitAITypes@@W4DirectionTypes@@_N3HH@Z ; CvPlayer::initUnit
	mov	DWORD PTR _pNewUnit$226557[ebp], eax

; 7703 : 
; 7704 : 				// If player trait is to enhance minor bonuses, give this unit some free experience
; 7705 : 				if(GET_PLAYER(eMajor).GetPlayerTraits()->GetCityStateBonusModifier() > 0)

	mov	edx, DWORD PTR _eMajor$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244585[ebp], edx
	mov	ecx, DWORD PTR $T244585[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T244589[ebp], eax
	mov	eax, DWORD PTR $T244589[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	DWORD PTR $T244590[ebp], ecx
	cmp	DWORD PTR $T244590[ebp], 0
	jle	SHORT $LN4@DoSpawnUni

; 7706 : 				{
; 7707 : 					pNewUnit->changeExperience(GC.getMAX_EXPERIENCE_PER_COMBAT()); //NQMP GJS - Patronage Finisher

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7588
	mov	DWORD PTR $T244594[ebp], edx
	push	0
	push	0
	push	0
	push	-1
	mov	eax, DWORD PTR $T244594[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNewUnit$226557[ebp]
	call	?changeExperience@CvUnit@@QAEXHH_N00@Z	; CvUnit::changeExperience
$LN4@DoSpawnUni:

; 7708 : 				}
; 7709 : 
; 7710 : 				if (pNewUnit->jumpToNearestValidPlot())

	mov	ecx, DWORD PTR _pNewUnit$226557[ebp]
	call	?jumpToNearestValidPlot@CvUnit@@QAE_NXZ	; CvUnit::jumpToNearestValidPlot
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@DoSpawnUni

; 7711 : 				{
; 7712 : 					if(GetPlayer()->getCapitalCity())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	test	eax, eax
	je	SHORT $LN2@DoSpawnUni

; 7713 : 						GetPlayer()->getCapitalCity()->addProductionExperience(pNewUnit);

	push	0
	mov	edx, DWORD PTR _pNewUnit$226557[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	ecx, eax
	call	?addProductionExperience@CvCity@@QAEXPAVCvUnit@@_N@Z ; CvCity::addProductionExperience
$LN2@DoSpawnUni:

; 7714 : 
; 7715 : 					Localization::String strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_CITY_STATE_UNIT_SPAWN");

	push	OFFSET ??_C@_0CL@CLDPIHBK@TXT_KEY_NOTIFICATION_CITY_STATE_@
	lea	eax, DWORD PTR _strMessage$226561[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 7716 : 					strMessage << GetPlayer()->getNameKey();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T244488[ebp], eax
	lea	ecx, DWORD PTR $T244488[ebp]
	push	ecx
	lea	edx, DWORD PTR _strMessage$226561[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 7717 : 					Localization::String strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_CITY_STATE_UNIT_SPAWN");

	push	OFFSET ??_C@_0DD@ICNLOLEK@TXT_KEY_NOTIFICATION_SUMMARY_CIT@
	lea	eax, DWORD PTR _strSummary$226565[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 7718 : 					strSummary << GetPlayer()->getNameKey();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T244489[ebp], eax
	lea	ecx, DWORD PTR $T244489[ebp]
	push	ecx
	lea	edx, DWORD PTR _strSummary$226565[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 7719 : 
; 7720 : 					AddNotification(strMessage.toUTF8(), strSummary.toUTF8(), eMajor, pNewUnit->getX(), pNewUnit->getY());

	mov	eax, DWORD PTR _pNewUnit$226557[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	DWORD PTR $T244603[ebp], ecx
	mov	edx, DWORD PTR $T244603[ebp]
	push	edx
	mov	eax, DWORD PTR _pNewUnit$226557[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR $T244612[ebp], ecx
	mov	edx, DWORD PTR $T244612[ebp]
	push	edx
	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$226565[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T244622[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T244490[ebp], esp
	mov	DWORD PTR $T244621[ebp], ecx
	cmp	DWORD PTR $T244622[ebp], 0
	je	SHORT $LN89@DoSpawnUni
	mov	edx, DWORD PTR $T244622[ebp]
	mov	DWORD PTR tv369[ebp], edx
	jmp	SHORT $LN90@DoSpawnUni
$LN89@DoSpawnUni:
	mov	DWORD PTR tv369[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN90@DoSpawnUni:
	mov	eax, DWORD PTR tv369[ebp]
	push	eax
	mov	ecx, DWORD PTR $T244621[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	ecx, DWORD PTR $T244621[ebp]
	mov	DWORD PTR tv334[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _strMessage$226561[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T244632[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T244491[ebp], esp
	mov	DWORD PTR $T244631[ebp], edx
	cmp	DWORD PTR $T244632[ebp], 0
	je	SHORT $LN94@DoSpawnUni
	mov	eax, DWORD PTR $T244632[ebp]
	mov	DWORD PTR tv382[ebp], eax
	jmp	SHORT $LN95@DoSpawnUni
$LN94@DoSpawnUni:
	mov	DWORD PTR tv382[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN95@DoSpawnUni:
	mov	ecx, DWORD PTR tv382[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T244631[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	edx, DWORD PTR $T244631[ebp]
	mov	DWORD PTR tv337[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z ; CvMinorCivAI::AddNotification

; 7721 : 				}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$226565[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strMessage$226561[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 7722 : 				else

	jmp	SHORT $LN1@DoSpawnUni
$LN3@DoSpawnUni:

; 7723 : 				{
; 7724 : 					pNewUnit->kill(false);	// Could not find a spot!

	push	-1
	push	0
	mov	ecx, DWORD PTR _pNewUnit$226557[ebp]
	call	?kill@CvUnit@@QAEX_NW4PlayerTypes@@@Z	; CvUnit::kill
$LN1@DoSpawnUni:

; 7725 : 				}
; 7726 : 			} // NQMP GJS - Patronage Finisher end

	jmp	$LN6@DoSpawnUni
$LN22@DoSpawnUni:

; 7727 : 		}
; 7728 : 	}
; 7729 : 
; 7730 : 	// Reseed counter
; 7731 : 	DoSeedUnitSpawnCounter(eMajor);

	push	0
	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoSeedUnitSpawnCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z ; CvMinorCivAI::DoSeedUnitSpawnCounter
$LN25@DoSpawnUni:

; 7732 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoSpawnUnit@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$0:
	lea	ecx, DWORD PTR _strMessage$226561[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoSpawnUnit@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$1:
	lea	ecx, DWORD PTR _strSummary$226565[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoSpawnUnit@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$2:
	mov	ecx, DWORD PTR $T244490[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?DoSpawnUnit@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-340]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoSpawnUnit@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoSpawnUnit@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ENDP	; CvMinorCivAI::DoSpawnUnit
; Function compile flags: /Odtp
;	COMDAT ?DoUnitSpawnTurn@CvMinorCivAI@@QAEXXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_iMajorLoop$226576 = -8					; size = 4
_eMajor$ = -4						; size = 4
?DoUnitSpawnTurn@CvMinorCivAI@@QAEXXZ PROC		; CvMinorCivAI::DoUnitSpawnTurn, COMDAT
; _this$ = ecx

; 7736 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 7737 : 	// Loop through all players and see if we should give them a Unit
; 7738 : 	PlayerTypes eMajor;
; 7739 : 	for(int iMajorLoop = 0; iMajorLoop < MAX_MAJOR_CIVS; iMajorLoop++)

	mov	DWORD PTR _iMajorLoop$226576[ebp], 0
	jmp	SHORT $LN6@DoUnitSpaw
$LN5@DoUnitSpaw:
	mov	eax, DWORD PTR _iMajorLoop$226576[ebp]
	add	eax, 1
	mov	DWORD PTR _iMajorLoop$226576[ebp], eax
$LN6@DoUnitSpaw:
	cmp	DWORD PTR _iMajorLoop$226576[ebp], 22	; 00000016H
	jge	SHORT $LN7@DoUnitSpaw

; 7740 : 	{
; 7741 : 		eMajor = (PlayerTypes) iMajorLoop;

	mov	ecx, DWORD PTR _iMajorLoop$226576[ebp]
	mov	DWORD PTR _eMajor$[ebp], ecx

; 7742 : 
; 7743 : 		if(IsUnitSpawningAllowed(eMajor))

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsUnitSpawningAllowed@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsUnitSpawningAllowed
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@DoUnitSpaw

; 7744 : 		{
; 7745 : 			// Tick down
; 7746 : 			if(GetUnitSpawnCounter(eMajor) > 0)

	mov	ecx, DWORD PTR _eMajor$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetUnitSpawnCounter@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetUnitSpawnCounter
	test	eax, eax
	jle	SHORT $LN2@DoUnitSpaw

; 7747 : 			{
; 7748 : 				ChangeUnitSpawnCounter(eMajor, -1);

	push	-1
	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeUnitSpawnCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::ChangeUnitSpawnCounter
$LN2@DoUnitSpaw:

; 7749 : 			}
; 7750 : 
; 7751 : 			// Time to spawn!
; 7752 : 			if(GetUnitSpawnCounter(eMajor) == 0)

	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetUnitSpawnCounter@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetUnitSpawnCounter
	test	eax, eax
	jne	SHORT $LN3@DoUnitSpaw

; 7753 : 			{
; 7754 : 				DoSpawnUnit(eMajor);

	mov	ecx, DWORD PTR _eMajor$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoSpawnUnit@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ; CvMinorCivAI::DoSpawnUnit
$LN3@DoUnitSpaw:

; 7755 : 			}
; 7756 : 		}

	jmp	SHORT $LN5@DoUnitSpaw
$LN7@DoUnitSpaw:

; 7757 : 	}
; 7758 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoUnitSpawnTurn@CvMinorCivAI@@QAEXXZ ENDP		; CvMinorCivAI::DoUnitSpawnTurn
_TEXT	ENDS
EXTRN	?HasCommonEnemy@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC ; CvTeam::HasCommonEnemy
; Function compile flags: /Odtp
;	COMDAT ?GetSpawnBaseTurns@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -44						; size = 4
$T244680 = -40						; size = 4
$T244676 = -36						; size = 4
$T244667 = -32						; size = 4
$T244666 = -28						; size = 4
$T244654 = -24						; size = 4
$T244650 = -20						; size = 4
$T244646 = -16						; size = 4
_iPolicyMod$ = -12					; size = 4
_iNumTurns$ = -8					; size = 4
_kPlayer$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetSpawnBaseTurns@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetSpawnBaseTurns, COMDAT
; _this$ = ecx

; 7762 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 7763 : 	// Not friends
; 7764 : 	if(!IsFriends(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN5@GetSpawnBa

; 7765 : 		return 0;

	xor	eax, eax
	jmp	$LN6@GetSpawnBa
$LN5@GetSpawnBa:

; 7766 : 
; 7767 : 	// This guy isn't militaristic
; 7768 : 	if(GetTrait() != MINOR_CIV_TRAIT_MILITARISTIC)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait
	cmp	eax, 1
	je	SHORT $LN4@GetSpawnBa

; 7769 : 		return 0;

	xor	eax, eax
	jmp	$LN6@GetSpawnBa
$LN4@GetSpawnBa:

; 7770 : 
; 7771 : 	int iNumTurns = /*19*/ GC.getFRIENDS_BASE_TURNS_UNIT_SPAWN() * 100;

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2912
	mov	DWORD PTR $T244646[ebp], edx
	mov	eax, DWORD PTR $T244646[ebp]
	imul	eax, 100				; 00000064H
	mov	DWORD PTR _iNumTurns$[ebp], eax

; 7772 : 
; 7773 : 	// If relations are at allied level then reduce spawn counter
; 7774 : 	if(IsAllies(ePlayer))

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAllies
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@GetSpawnBa

; 7775 : 		iNumTurns += /*-3*/ (GC.getALLIES_EXTRA_TURNS_UNIT_SPAWN() * 100);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2920
	mov	DWORD PTR $T244650[ebp], eax
	mov	ecx, DWORD PTR $T244650[ebp]
	imul	ecx, 100				; 00000064H
	add	ecx, DWORD PTR _iNumTurns$[ebp]
	mov	DWORD PTR _iNumTurns$[ebp], ecx
$LN3@GetSpawnBa:

; 7776 : 
; 7777 : 	// Modify for Game Speed
; 7778 : 	iNumTurns *= GC.getGame().getGameSpeedInfo().getGreatPeoplePercent();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T244654[ebp], edx
	mov	ecx, DWORD PTR $T244654[ebp]
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getGreatPeoplePercent@CvGameSpeedInfo@@QBEHXZ ; CvGameSpeedInfo::getGreatPeoplePercent
	imul	eax, DWORD PTR _iNumTurns$[ebp]
	mov	DWORD PTR _iNumTurns$[ebp], eax

; 7779 : 	iNumTurns /= 100;

	mov	eax, DWORD PTR _iNumTurns$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iNumTurns$[ebp], eax

; 7780 : 
; 7781 : 	// Modify for policies
; 7782 : 	CvPlayer& kPlayer = GET_PLAYER(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], edx

; 7783 : 	int iPolicyMod = kPlayer.GetPlayerPolicies()->GetNumericModifier(POLICYMOD_UNIT_FREQUENCY_MODIFIER);

	push	16					; 00000010H
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	mov	DWORD PTR _iPolicyMod$[ebp], eax

; 7784 : 	if(iPolicyMod > 0)

	cmp	DWORD PTR _iPolicyMod$[ebp], 0
	jle	SHORT $LN2@GetSpawnBa

; 7785 : 	{
; 7786 : 		if(GET_TEAM(kPlayer.getTeam()).HasCommonEnemy(m_pPlayer->getTeam()))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T244666[ebp], ecx
	mov	edx, DWORD PTR $T244666[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T244667[ebp], eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T244676[ebp], eax
	mov	eax, DWORD PTR $T244676[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T244680[ebp], eax
	mov	ecx, DWORD PTR $T244667[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T244680[ebp]
	call	?HasCommonEnemy@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::HasCommonEnemy
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@GetSpawnBa

; 7787 : 		{
; 7788 : 			iNumTurns *= 100;

	mov	eax, DWORD PTR _iNumTurns$[ebp]
	imul	eax, 100				; 00000064H
	mov	DWORD PTR _iNumTurns$[ebp], eax

; 7789 : 			iNumTurns /= (100 + iPolicyMod);

	mov	ecx, DWORD PTR _iPolicyMod$[ebp]
	add	ecx, 100				; 00000064H
	mov	eax, DWORD PTR _iNumTurns$[ebp]
	cdq
	idiv	ecx
	mov	DWORD PTR _iNumTurns$[ebp], eax
$LN2@GetSpawnBa:

; 7790 : 		}
; 7791 : 	}
; 7792 : 
; 7793 : 	return iNumTurns / 100;

	mov	eax, DWORD PTR _iNumTurns$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
$LN6@GetSpawnBa:

; 7794 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetSpawnBaseTurns@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetSpawnBaseTurns
_TEXT	ENDS
PUBLIC	?GetCurrentSpawnEstimate@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentSpawnEstimate
; Function compile flags: /Odtp
;	COMDAT ?GetCurrentSpawnEstimate@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T244686 = -12						; size = 4
_iRand$ = -8						; size = 4
_iNumTurns$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
?GetCurrentSpawnEstimate@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetCurrentSpawnEstimate, COMDAT
; _this$ = ecx

; 7798 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 7799 : 	// Not friends
; 7800 : 	if(!IsFriends(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@GetCurrent@10

; 7801 : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN3@GetCurrent@10
$LN2@GetCurrent@10:

; 7802 : 
; 7803 : 	// This guy isn't militaristic
; 7804 : 	if(GetTrait() != MINOR_CIV_TRAIT_MILITARISTIC)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait
	cmp	eax, 1
	je	SHORT $LN1@GetCurrent@10

; 7805 : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN3@GetCurrent@10
$LN1@GetCurrent@10:

; 7806 : 
; 7807 : 	int iNumTurns = GetSpawnBaseTurns(ePlayer) * 100;

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSpawnBaseTurns@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetSpawnBaseTurns
	imul	eax, 100				; 00000064H
	mov	DWORD PTR _iNumTurns$[ebp], eax

; 7808 : 
; 7809 : 	int iRand = /*3*/ GC.getFRIENDS_RAND_TURNS_UNIT_SPAWN() * 100;

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2916
	mov	DWORD PTR $T244686[ebp], eax
	mov	ecx, DWORD PTR $T244686[ebp]
	imul	ecx, 100				; 00000064H
	mov	DWORD PTR _iRand$[ebp], ecx

; 7810 : 	iNumTurns += (iRand / 2);

	mov	eax, DWORD PTR _iRand$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _iNumTurns$[ebp]
	mov	DWORD PTR _iNumTurns$[ebp], eax

; 7811 : 
; 7812 : 	return iNumTurns / 100;

	mov	eax, DWORD PTR _iNumTurns$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
$LN3@GetCurrent@10:

; 7813 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetCurrentSpawnEstimate@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetCurrentSpawnEstimate
_TEXT	ENDS
PUBLIC	?GetMajorBoughtOutBy@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetMajorBoughtOutBy
PUBLIC	?IsBoughtOut@CvMinorCivAI@@QBE_NXZ		; CvMinorCivAI::IsBoughtOut
; Function compile flags: /Odtp
;	COMDAT ?IsBoughtOut@CvMinorCivAI@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_eBuyoutPlayer$ = -4					; size = 4
?IsBoughtOut@CvMinorCivAI@@QBE_NXZ PROC			; CvMinorCivAI::IsBoughtOut, COMDAT
; _this$ = ecx

; 7817 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 7818 : 	PlayerTypes eBuyoutPlayer = GetMajorBoughtOutBy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMajorBoughtOutBy@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetMajorBoughtOutBy
	mov	DWORD PTR _eBuyoutPlayer$[ebp], eax

; 7819 : 	return (eBuyoutPlayer != NO_PLAYER);

	xor	eax, eax
	cmp	DWORD PTR _eBuyoutPlayer$[ebp], -1
	setne	al

; 7820 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsBoughtOut@CvMinorCivAI@@QBE_NXZ ENDP			; CvMinorCivAI::IsBoughtOut
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetMajorBoughtOutBy@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMajorBoughtOutBy@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ PROC ; CvMinorCivAI::GetMajorBoughtOutBy, COMDAT
; _this$ = ecx

; 7824 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 7825 : 	return m_eMajorBoughtOutBy;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+2020]

; 7826 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetMajorBoughtOutBy@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ENDP ; CvMinorCivAI::GetMajorBoughtOutBy
_TEXT	ENDS
PUBLIC	?SetMajorBoughtOutBy@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ; CvMinorCivAI::SetMajorBoughtOutBy
; Function compile flags: /Odtp
;	COMDAT ?SetMajorBoughtOutBy@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eMajor$ = 8						; size = 4
?SetMajorBoughtOutBy@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z PROC ; CvMinorCivAI::SetMajorBoughtOutBy, COMDAT
; _this$ = ecx

; 7830 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 7831 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 7832 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 7833 : 
; 7834 : 	m_eMajorBoughtOutBy = eMajor;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _eMajor$[ebp]
	mov	DWORD PTR [eax+2020], ecx

; 7835 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetMajorBoughtOutBy@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::SetMajorBoughtOutBy
_TEXT	ENDS
PUBLIC	?GetBuyoutCost@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBuyoutCost
PUBLIC	?CanMajorBuyout@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorBuyout
EXTRN	?GetGold@CvTreasury@@QBEHXZ:PROC		; CvTreasury::GetGold
EXTRN	?IsAbleToAnnexCityStates@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::IsAbleToAnnexCityStates
; Function compile flags: /Odtp
;	COMDAT ?CanMajorBuyout@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -56						; size = 4
$T244756 = -52						; size = 4
$T244752 = -48						; size = 4
$T244748 = -44						; size = 4
$T244744 = -40						; size = 4
$T244743 = -36						; size = 4
$T244734 = -32						; size = 4
$T244725 = -28						; size = 4
$T244721 = -24						; size = 4
$T244717 = -17						; size = 1
$T244716 = -16						; size = 4
$T244707 = -9						; size = 1
$T244698 = -8						; size = 4
_iBuyoutCost$ = -4					; size = 4
_eMajor$ = 8						; size = 4
?CanMajorBuyout@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::CanMajorBuyout, COMDAT
; _this$ = ecx

; 7839 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	mov	DWORD PTR _this$[ebp], ecx

; 7840 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 7841 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 7842 : 	if(eMajor < 0 || eMajor >= MAX_MAJOR_CIVS) return false;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN8@CanMajorBu
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN9@CanMajorBu
$LN8@CanMajorBu:
	xor	al, al
	jmp	$LN10@CanMajorBu
$LN9@CanMajorBu:

; 7843 : 
; 7844 : 	// Is alive?
; 7845 : 	if (!GET_PLAYER(eMajor).isAlive() || !GetPlayer()->isAlive())

	mov	eax, DWORD PTR _eMajor$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244698[ebp], eax
	mov	ecx, DWORD PTR $T244698[ebp]
	mov	dl, BYTE PTR [ecx+2256]
	mov	BYTE PTR $T244707[ebp], dl
	movzx	eax, BYTE PTR $T244707[ebp]
	test	eax, eax
	je	SHORT $LN6@CanMajorBu
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T244716[ebp], eax
	mov	ecx, DWORD PTR $T244716[ebp]
	mov	dl, BYTE PTR [ecx+2256]
	mov	BYTE PTR $T244717[ebp], dl
	movzx	eax, BYTE PTR $T244717[ebp]
	test	eax, eax
	jne	SHORT $LN7@CanMajorBu
$LN6@CanMajorBu:

; 7846 : 		return false;

	xor	al, al
	jmp	$LN10@CanMajorBu
$LN7@CanMajorBu:

; 7847 : 	
; 7848 : 	// Has the trait or the policy?
; 7849 : 	if(!GET_PLAYER(eMajor).IsAbleToAnnexCityStates())

	mov	ecx, DWORD PTR _eMajor$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244721[ebp], ecx
	mov	ecx, DWORD PTR $T244721[ebp]
	call	?IsAbleToAnnexCityStates@CvPlayer@@QBE_NXZ ; CvPlayer::IsAbleToAnnexCityStates
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN5@CanMajorBu

; 7850 : 		return false;

	xor	al, al
	jmp	$LN10@CanMajorBu
$LN5@CanMajorBu:

; 7851 : 
; 7852 : 	// Not at war?
; 7853 : 	if(GET_TEAM(GetPlayer()->getTeam()).isAtWar(GET_PLAYER(eMajor).getTeam()))

	mov	eax, DWORD PTR _eMajor$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244725[ebp], eax
	mov	ecx, DWORD PTR $T244725[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T244734[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T244743[ebp], eax
	mov	eax, DWORD PTR $T244743[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T244744[ebp], eax
	mov	edx, DWORD PTR $T244744[ebp]
	imul	edx, 2984				; 00000ba8H
	add	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T244748[ebp], edx
	mov	eax, DWORD PTR $T244734[ebp]
	push	eax
	mov	ecx, DWORD PTR $T244748[ebp]
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@CanMajorBu

; 7854 : 		return false;

	xor	al, al
	jmp	SHORT $LN10@CanMajorBu
$LN4@CanMajorBu:

; 7855 : 
; 7856 : 	// Allies?
; 7857 : 	if(!IsAllies(eMajor))

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAllies
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@CanMajorBu

; 7858 : 		return false;

	xor	al, al
	jmp	SHORT $LN10@CanMajorBu
$LN3@CanMajorBu:

; 7859 : 
; 7860 : 	// Allied long enough?
; 7861 : 	if (GetAlliedTurns() < GC.getMINOR_CIV_BUYOUT_TURNS())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7332
	mov	DWORD PTR $T244752[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlliedTurns@CvMinorCivAI@@QBEHXZ	; CvMinorCivAI::GetAlliedTurns
	cmp	eax, DWORD PTR $T244752[ebp]
	jge	SHORT $LN2@CanMajorBu

; 7862 : 	{
; 7863 : 		return false;

	xor	al, al
	jmp	SHORT $LN10@CanMajorBu
$LN2@CanMajorBu:

; 7864 : 	}
; 7865 : 
; 7866 : 	// Has enough gold?
; 7867 : 	const int iBuyoutCost = GetBuyoutCost(eMajor);

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBuyoutCost@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBuyoutCost
	mov	DWORD PTR _iBuyoutCost$[ebp], eax

; 7868 : 	if(GET_PLAYER(eMajor).GetTreasury()->GetGold() < iBuyoutCost)

	mov	eax, DWORD PTR _eMajor$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244756[ebp], eax
	mov	ecx, DWORD PTR $T244756[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGold@CvTreasury@@QBEHXZ		; CvTreasury::GetGold
	cmp	eax, DWORD PTR _iBuyoutCost$[ebp]
	jge	SHORT $LN1@CanMajorBu

; 7869 : 		return false;

	xor	al, al
	jmp	SHORT $LN10@CanMajorBu
$LN1@CanMajorBu:

; 7870 : 
; 7871 : 	return true;

	mov	al, 1
$LN10@CanMajorBu:

; 7872 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?CanMajorBuyout@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::CanMajorBuyout
_TEXT	ENDS
EXTRN	?GetScrapGold@CvUnit@@QBEHXZ:PROC		; CvUnit::GetScrapGold
EXTRN	?getGoldPercent@CvGameSpeedInfo@@QBEHXZ:PROC	; CvGameSpeedInfo::getGoldPercent
; Function compile flags: /Odtp
;	COMDAT ?GetBuyoutCost@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T244765 = -24						; size = 4
_iScrapCost$ = -20					; size = 4
_iVisibleDivisor$ = -16					; size = 4
_pLoopUnit$ = -12					; size = 4
_iGold$ = -8						; size = 4
_iUnitLoop$ = -4					; size = 4
_eMajor$ = 8						; size = 4
?GetBuyoutCost@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC	; CvMinorCivAI::GetBuyoutCost, COMDAT
; _this$ = ecx

; 7875 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 7876 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 7877 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 7878 : 	if(eMajor < 0 || eMajor >= MAX_MAJOR_CIVS) return -1;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN4@GetBuyoutC
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN5@GetBuyoutC
$LN4@GetBuyoutC:
	or	eax, -1
	jmp	$LN6@GetBuyoutC
$LN5@GetBuyoutC:

; 7879 : 
; 7880 : 	int iGold = GC.getMINOR_CIV_BUYOUT_COST();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7328
	mov	DWORD PTR _iGold$[ebp], eax

; 7881 : 
; 7882 : 	// Game Speed Mod
; 7883 : 	iGold *= GC.getGame().getGameSpeedInfo().getGoldPercent();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T244765[ebp], ecx
	mov	ecx, DWORD PTR $T244765[ebp]
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getGoldPercent@CvGameSpeedInfo@@QBEHXZ	; CvGameSpeedInfo::getGoldPercent
	imul	eax, DWORD PTR _iGold$[ebp]
	mov	DWORD PTR _iGold$[ebp], eax

; 7884 : 	iGold /= 100;

	mov	eax, DWORD PTR _iGold$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iGold$[ebp], eax

; 7885 : 
; 7886 : 	// Add in the scrap cost of all this minor's units
; 7887 : 	int iScrapCost = 0;

	mov	DWORD PTR _iScrapCost$[ebp], 0

; 7888 : 	int iUnitLoop;
; 7889 : 	CvUnit *pLoopUnit;
; 7890 : 	for (pLoopUnit = m_pPlayer->firstUnit(&iUnitLoop); pLoopUnit != NULL; pLoopUnit = m_pPlayer->nextUnit(&iUnitLoop))

	push	0
	lea	edx, DWORD PTR _iUnitLoop$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::firstUnit
	mov	DWORD PTR _pLoopUnit$[ebp], eax
	jmp	SHORT $LN3@GetBuyoutC
$LN2@GetBuyoutC:
	push	0
	lea	ecx, DWORD PTR _iUnitLoop$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::nextUnit
	mov	DWORD PTR _pLoopUnit$[ebp], eax
$LN3@GetBuyoutC:
	cmp	DWORD PTR _pLoopUnit$[ebp], 0
	je	SHORT $LN1@GetBuyoutC

; 7891 : 	{
; 7892 : 		iScrapCost += pLoopUnit->GetScrapGold();

	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	call	?GetScrapGold@CvUnit@@QBEHXZ		; CvUnit::GetScrapGold
	add	eax, DWORD PTR _iScrapCost$[ebp]
	mov	DWORD PTR _iScrapCost$[ebp], eax

; 7893 : 	}

	jmp	SHORT $LN2@GetBuyoutC
$LN1@GetBuyoutC:

; 7894 : 	iGold += iScrapCost;

	mov	eax, DWORD PTR _iGold$[ebp]
	add	eax, DWORD PTR _iScrapCost$[ebp]
	mov	DWORD PTR _iGold$[ebp], eax

; 7895 : 
; 7896 : 	// Rounding
; 7897 : 	int iVisibleDivisor = /*5*/ GC.getMINOR_CIV_GOLD_GIFT_VISIBLE_DIVISOR();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3144
	mov	DWORD PTR _iVisibleDivisor$[ebp], ecx

; 7898 : 	iGold /= iVisibleDivisor;

	mov	eax, DWORD PTR _iGold$[ebp]
	cdq
	idiv	DWORD PTR _iVisibleDivisor$[ebp]
	mov	DWORD PTR _iGold$[ebp], eax

; 7899 : 	iGold *= iVisibleDivisor;

	mov	edx, DWORD PTR _iGold$[ebp]
	imul	edx, DWORD PTR _iVisibleDivisor$[ebp]
	mov	DWORD PTR _iGold$[ebp], edx

; 7900 : 
; 7901 : 	return iGold;

	mov	eax, DWORD PTR _iGold$[ebp]
$LN6@GetBuyoutC:

; 7902 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetBuyoutCost@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP	; CvMinorCivAI::GetBuyoutCost
_TEXT	ENDS
PUBLIC	??_C@_0CC@LHLCEDKN@TXT_KEY_NOTIFICATION_MINOR_BUYOU@ ; `string'
PUBLIC	??_C@_0CH@JCPMMINF@TXT_KEY_NOTIFICATION_MINOR_BUYOU@ ; `string'
PUBLIC	??_C@_0CH@LJNBJLBG@TXT_KEY_NOTIFICATION_MINOR_BUYOU@ ; `string'
PUBLIC	??_C@_0EO@OELONOGO@Coin?5toss?5roll?5to?5determine?5flav@ ; `string'
PUBLIC	?DoAcquire@CvMinorCivAI@@QAEXW4PlayerTypes@@AAH11@Z ; CvMinorCivAI::DoAcquire
PUBLIC	??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@I@Z ; FStaticVector<enum PlayerTypes,64,1,297,0>::FStaticVector<enum PlayerTypes,64,1,297,0>
PUBLIC	??_C@_0BB@CBAJGCNM@MINOR_CIV_SOKOTO?$AA@	; `string'
PUBLIC	??_C@_0BA@KGLHKHGI@MINOR_CIV_BORNU?$AA@		; `string'
PUBLIC	?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z	; CvMinorCivAI::DoBuyout
EXTRN	?BoughtCityState@CvPlayerAchievements@@QAEXH@Z:PROC ; CvPlayerAchievements::BoughtCityState
EXTRN	?LogMinorCivBuyout@CvDiplomacyAI@@QAEXW4PlayerTypes@@H_N@Z:PROC ; CvDiplomacyAI::LogMinorCivBuyout
EXTRN	?LogExpenditure@CvTreasury@@QAEXVCvString@@HH@Z:PROC ; CvTreasury::LogExpenditure
;	COMDAT ??_C@_0CC@LHLCEDKN@TXT_KEY_NOTIFICATION_MINOR_BUYOU@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvplayer.h
CONST	SEGMENT
??_C@_0CC@LHLCEDKN@TXT_KEY_NOTIFICATION_MINOR_BUYOU@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_BUYOUT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@JCPMMINF@TXT_KEY_NOTIFICATION_MINOR_BUYOU@
CONST	SEGMENT
??_C@_0CH@JCPMMINF@TXT_KEY_NOTIFICATION_MINOR_BUYOU@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_BUYOUT_TT_2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@LJNBJLBG@TXT_KEY_NOTIFICATION_MINOR_BUYOU@
CONST	SEGMENT
??_C@_0CH@LJNBJLBG@TXT_KEY_NOTIFICATION_MINOR_BUYOU@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_BUYOUT_TT_1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@OELONOGO@Coin?5toss?5roll?5to?5determine?5flav@
CONST	SEGMENT
??_C@_0EO@OELONOGO@Coin?5toss?5roll?5to?5determine?5flav@ DB 'Coin toss r'
	DB	'oll to determine flavor message for minor civ buyout notifica'
	DB	'tion.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CBAJGCNM@MINOR_CIV_SOKOTO?$AA@
CONST	SEGMENT
??_C@_0BB@CBAJGCNM@MINOR_CIV_SOKOTO?$AA@ DB 'MINOR_CIV_SOKOTO', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KGLHKHGI@MINOR_CIV_BORNU?$AA@
CONST	SEGMENT
??_C@_0BA@KGLHKHGI@MINOR_CIV_BORNU?$AA@ DB 'MINOR_CIV_BORNU', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$5
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
_TEXT	SEGMENT
tv362 = -448						; size = 4
tv454 = -444						; size = 4
tv359 = -440						; size = 4
tv390 = -436						; size = 4
tv353 = -432						; size = 4
tv244 = -428						; size = 4
tv350 = -424						; size = 4
tv348 = -420						; size = 4
tv347 = -416						; size = 4
tv452 = -412						; size = 4
tv156 = -408						; size = 4
tv86 = -404						; size = 4
_this$ = -400						; size = 4
$T244864 = -396						; size = 4
$T244863 = -392						; size = 4
$T244854 = -388						; size = 4
$T244853 = -384						; size = 4
$T244844 = -380						; size = 4
$T244840 = -376						; size = 4
$T244836 = -372						; size = 4
$T244832 = -368						; size = 4
$T244828 = -364						; size = 4
$T244827 = -360						; size = 4
$T244818 = -356						; size = 4
$T244814 = -352						; size = 4
$T244798 = -340						; size = 4
$T244794 = -336						; size = 4
$T244790 = -332						; size = 4
$T244779 = -328						; size = 4
$T244778 = -324						; size = 4
$T244777 = -320						; size = 4
$T244776 = -316						; size = 4
$T244775 = -312						; size = 4
$T244774 = -308						; size = 4
$T244773 = -304						; size = 80
$T244772 = -224						; size = 4
$T244771 = -220						; size = 4
_eMajorLoop$226685 = -216				; size = 4
_iMajorLoop$226681 = -212				; size = 4
_eBornu$ = -208						; size = 4
_bUsingXP2Scenario2$ = -201				; size = 1
_iNumUnits$ = -200					; size = 4
_iCapitalX$ = -196					; size = 4
_iCoinToss$ = -192					; size = 4
_strMessage$ = -188					; size = 80
_strSummary$ = -108					; size = 80
_kMajorPlayer$ = -28					; size = 4
_eSokoto$ = -24						; size = 4
_iCapitalY$ = -20					; size = 4
_iBuyoutCost$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_eMajor$ = 8						; size = 4
?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z PROC	; CvMinorCivAI::DoBuyout, COMDAT
; _this$ = ecx

; 7905 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 436				; 000001b4H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 7906 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 7907 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 7908 : 	if(eMajor < 0 || eMajor >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN9@DoBuyout
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN10@DoBuyout
$LN9@DoBuyout:
	jmp	$LN11@DoBuyout
$LN10@DoBuyout:

; 7909 : 
; 7910 : 	if(!CanMajorBuyout(eMajor))

	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CanMajorBuyout@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorBuyout
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN8@DoBuyout

; 7911 : 		return;

	jmp	$LN11@DoBuyout
$LN8@DoBuyout:

; 7912 : 	
; 7913 : 
; 7914 : 	//Nigerian Prince Achievement
; 7915 : 	MinorCivTypes eBornu =(MinorCivTypes) GC.getInfoTypeForString("MINOR_CIV_BORNU", true /*bHideAssert*/);

	push	1
	push	OFFSET ??_C@_0BA@KGLHKHGI@MINOR_CIV_BORNU?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eBornu$[ebp], eax

; 7916 : 	MinorCivTypes  eSokoto =(MinorCivTypes) GC.getInfoTypeForString("MINOR_CIV_SOKOTO", true /*bHideAssert*/);

	push	1
	push	OFFSET ??_C@_0BB@CBAJGCNM@MINOR_CIV_SOKOTO?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eSokoto$[ebp], eax

; 7917 : 	bool bUsingXP2Scenario2 = gDLL->IsModActivated(CIV5_XP2_SCENARIO2_MODID);

	mov	edx, DWORD PTR $T244790[ebp]
	mov	DWORD PTR tv86[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv86[ebp], eax
	mov	ecx, DWORD PTR _CIV5_XP2_SCENARIO2_MODID
	push	ecx
	mov	edx, DWORD PTR tv86[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv86[ebp]
	mov	edx, DWORD PTR [eax+44]
	call	edx
	mov	BYTE PTR _bUsingXP2Scenario2$[ebp], al

; 7918 : 
; 7919 : 	if (GET_PLAYER(eMajor).isHuman() && bUsingXP2Scenario2 && (GetPlayer()->GetMinorCivAI()->GetMinorCivType() == eBornu || GetPlayer()->GetMinorCivAI()->GetMinorCivType() == eSokoto ))

	mov	eax, DWORD PTR _eMajor$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244794[ebp], eax
	mov	ecx, DWORD PTR $T244794[ebp]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@DoBuyout
	movzx	edx, BYTE PTR _bUsingXP2Scenario2$[ebp]
	test	edx, edx
	je	SHORT $LN7@DoBuyout
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetMinorCivType@CvMinorCivAI@@QBE?AW4MinorCivTypes@@XZ ; CvMinorCivAI::GetMinorCivType
	cmp	eax, DWORD PTR _eBornu$[ebp]
	je	SHORT $LN6@DoBuyout
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetMinorCivType@CvMinorCivAI@@QBE?AW4MinorCivTypes@@XZ ; CvMinorCivAI::GetMinorCivType
	cmp	eax, DWORD PTR _eSokoto$[ebp]
	jne	SHORT $LN7@DoBuyout
$LN6@DoBuyout:

; 7920 : 		gDLL->UnlockAchievement(ACHIEVEMENT_XP2_54);

	mov	eax, DWORD PTR $T244798[ebp]
	mov	DWORD PTR tv156[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv156[ebp], ecx
	push	296					; 00000128H
	mov	edx, DWORD PTR tv156[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv156[ebp]
	mov	edx, DWORD PTR [eax+828]
	call	edx
$LN7@DoBuyout:

; 7921 : 
; 7922 : 
; 7923 : 	// Pay the cost
; 7924 : 	const int iBuyoutCost = GetBuyoutCost(eMajor);

	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBuyoutCost@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBuyoutCost
	mov	DWORD PTR _iBuyoutCost$[ebp], eax

; 7925 : 	GET_PLAYER(eMajor).GetTreasury()->LogExpenditure(GetPlayer()->GetMinorCivAI()->GetNamesListAsString(0), iBuyoutCost,6);

	push	6
	mov	ecx, DWORD PTR _iBuyoutCost$[ebp]
	push	ecx
	sub	esp, 28					; 0000001cH
	mov	esi, esp
	mov	DWORD PTR $T244771[ebp], esp
	sub	esp, 272				; 00000110H
	mov	ecx, esp
	mov	DWORD PTR $T244772[ebp], esp
	push	0
	call	??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@I@Z ; FStaticVector<enum PlayerTypes,64,1,297,0>::FStaticVector<enum PlayerTypes,64,1,297,0>
	mov	DWORD PTR tv452[ebp], eax
	mov	edx, DWORD PTR tv452[ebp]
	mov	DWORD PTR tv347[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	esi
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, eax
	call	?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z ; CvMinorCivAI::GetNamesListAsString
	mov	DWORD PTR tv348[ebp], eax
	mov	eax, DWORD PTR tv348[ebp]
	mov	DWORD PTR tv350[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _eMajor$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244814[ebp], ecx
	mov	ecx, DWORD PTR $T244814[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, eax
	call	?LogExpenditure@CvTreasury@@QAEXVCvString@@HH@Z ; CvTreasury::LogExpenditure

; 7926 : 	GET_PLAYER(eMajor).GetTreasury()->ChangeGold(-iBuyoutCost);

	mov	edx, DWORD PTR _eMajor$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244818[ebp], edx
	mov	eax, DWORD PTR _iBuyoutCost$[ebp]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR $T244818[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?ChangeGold@CvTreasury@@QAEXH@Z		; CvTreasury::ChangeGold

; 7927 : 
; 7928 : 	int iNumUnits = 0;

	mov	DWORD PTR _iNumUnits$[ebp], 0

; 7929 : 	int iCapitalX = 0;

	mov	DWORD PTR _iCapitalX$[ebp], 0

; 7930 : 	int iCapitalY = 0;

	mov	DWORD PTR _iCapitalY$[ebp], 0

; 7931 : 	DoAcquire(eMajor, iNumUnits, iCapitalX, iCapitalY);

	lea	ecx, DWORD PTR _iCapitalY$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iCapitalX$[ebp]
	push	edx
	lea	eax, DWORD PTR _iNumUnits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eMajor$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoAcquire@CvMinorCivAI@@QAEXW4PlayerTypes@@AAH11@Z ; CvMinorCivAI::DoAcquire

; 7932 : 
; 7933 : 	GET_PLAYER(eMajor).GetDiplomacyAI()->LogMinorCivBuyout(GetPlayer()->GetID(), iBuyoutCost, /*bSaving*/ false);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T244827[ebp], eax
	mov	edx, DWORD PTR $T244827[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T244828[ebp], eax
	mov	ecx, DWORD PTR _eMajor$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244832[ebp], ecx
	push	0
	mov	edx, DWORD PTR _iBuyoutCost$[ebp]
	push	edx
	mov	eax, DWORD PTR $T244828[ebp]
	push	eax
	mov	ecx, DWORD PTR $T244832[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?LogMinorCivBuyout@CvDiplomacyAI@@QAEXW4PlayerTypes@@H_N@Z ; CvDiplomacyAI::LogMinorCivBuyout

; 7934 : 
; 7935 : 	// Show special notifications
; 7936 : 	int iCoinToss = GC.getGame().getJonRandNum(2, "Coin toss roll to determine flavor message for minor civ buyout notification.");

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T244836[ebp], ecx
	push	OFFSET ??_C@_0EO@OELONOGO@Coin?5toss?5roll?5to?5determine?5flav@
	push	2
	mov	ecx, DWORD PTR $T244836[ebp]
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	mov	DWORD PTR _iCoinToss$[ebp], eax

; 7937 : 	Localization::String strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_BUYOUT_TT_1");

	push	OFFSET ??_C@_0CH@LJNBJLBG@TXT_KEY_NOTIFICATION_MINOR_BUYOU@
	lea	edx, DWORD PTR _strMessage$[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 2

; 7938 : 	if (iCoinToss == 0) // Is it a boy or a girl?

	cmp	DWORD PTR _iCoinToss$[ebp], 0
	jne	SHORT $LN5@DoBuyout

; 7939 : 		strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_BUYOUT_TT_2");

	push	OFFSET ??_C@_0CH@JCPMMINF@TXT_KEY_NOTIFICATION_MINOR_BUYOU@
	lea	eax, DWORD PTR $T244773[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv244[ebp], eax
	mov	ecx, DWORD PTR tv244[ebp]
	mov	DWORD PTR tv353[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR tv353[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T244773[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN5@DoBuyout:

; 7940 : 	strMessage << GET_PLAYER(eMajor).getCivilizationShortDescriptionKey();

	mov	eax, DWORD PTR _eMajor$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244840[ebp], eax
	mov	ecx, DWORD PTR $T244840[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR $T244774[ebp], eax
	lea	ecx, DWORD PTR $T244774[ebp]
	push	ecx
	lea	edx, DWORD PTR _strMessage$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 7941 : 	strMessage << GetPlayer()->getCivilizationShortDescriptionKey();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR $T244775[ebp], eax
	lea	eax, DWORD PTR $T244775[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 7942 : 
; 7943 : 	Localization::String strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_BUYOUT");

	push	OFFSET ??_C@_0CC@LHLCEDKN@TXT_KEY_NOTIFICATION_MINOR_BUYOU@
	lea	edx, DWORD PTR _strSummary$[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 7944 : 	strSummary << GET_PLAYER(eMajor).getCivilizationShortDescriptionKey();

	mov	eax, DWORD PTR _eMajor$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T244844[ebp], eax
	mov	ecx, DWORD PTR $T244844[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR $T244776[ebp], eax
	lea	ecx, DWORD PTR $T244776[ebp]
	push	ecx
	lea	edx, DWORD PTR _strSummary$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 7945 : 	strSummary << GetPlayer()->getCivilizationShortDescriptionKey();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR $T244777[ebp], eax
	lea	eax, DWORD PTR $T244777[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 7946 : 
; 7947 : 	for (int iMajorLoop = 0; iMajorLoop < MAX_MAJOR_CIVS; iMajorLoop++)

	mov	DWORD PTR _iMajorLoop$226681[ebp], 0
	jmp	SHORT $LN4@DoBuyout
$LN3@DoBuyout:
	mov	edx, DWORD PTR _iMajorLoop$226681[ebp]
	add	edx, 1
	mov	DWORD PTR _iMajorLoop$226681[ebp], edx
$LN4@DoBuyout:
	cmp	DWORD PTR _iMajorLoop$226681[ebp], 22	; 00000016H
	jge	$LN61@DoBuyout

; 7948 : 	{
; 7949 : 		PlayerTypes eMajorLoop = (PlayerTypes) iMajorLoop;

	mov	eax, DWORD PTR _iMajorLoop$226681[ebp]
	mov	DWORD PTR _eMajorLoop$226685[ebp], eax

; 7950 : 		if (IsHasMetPlayer(eMajorLoop))

	mov	ecx, DWORD PTR _eMajorLoop$226685[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsHasMetPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsHasMetPlayer
	movzx	edx, al
	test	edx, edx
	je	$LN1@DoBuyout

; 7951 : 		{
; 7952 : 			AddBuyoutNotification(strMessage.toUTF8(), strSummary.toUTF8(), eMajorLoop, iCapitalX, iCapitalY);

	mov	eax, DWORD PTR _iCapitalY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iCapitalX$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eMajorLoop$226685[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T244854[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T244778[ebp], esp
	mov	DWORD PTR $T244853[ebp], eax
	cmp	DWORD PTR $T244854[ebp], 0
	je	SHORT $LN53@DoBuyout
	mov	ecx, DWORD PTR $T244854[ebp]
	mov	DWORD PTR tv390[ebp], ecx
	jmp	SHORT $LN54@DoBuyout
$LN53@DoBuyout:
	mov	DWORD PTR tv390[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN54@DoBuyout:
	mov	edx, DWORD PTR tv390[ebp]
	push	edx
	mov	ecx, DWORD PTR $T244853[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR $T244853[ebp]
	mov	DWORD PTR tv359[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T244864[ebp], eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T244779[ebp], esp
	mov	DWORD PTR $T244863[ebp], ecx
	cmp	DWORD PTR $T244864[ebp], 0
	je	SHORT $LN58@DoBuyout
	mov	edx, DWORD PTR $T244864[ebp]
	mov	DWORD PTR tv454[ebp], edx
	jmp	SHORT $LN59@DoBuyout
$LN58@DoBuyout:
	mov	DWORD PTR tv454[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN59@DoBuyout:
	mov	eax, DWORD PTR tv454[ebp]
	push	eax
	mov	ecx, DWORD PTR $T244863[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	ecx, DWORD PTR $T244863[ebp]
	mov	DWORD PTR tv362[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddBuyoutNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z ; CvMinorCivAI::AddBuyoutNotification
$LN1@DoBuyout:

; 7953 : 		}
; 7954 : 	}

	jmp	$LN3@DoBuyout

; 7955 : 
; 7956 : 	
; 7957 : 
; 7958 : 	CvPlayerAI& kMajorPlayer = GET_PLAYER(eMajor);

$LN61@DoBuyout:
	mov	edx, DWORD PTR _eMajor$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kMajorPlayer$[ebp], edx

; 7959 : 	kMajorPlayer.GetPlayerAchievements().BoughtCityState(iNumUnits);

	mov	eax, DWORD PTR _iNumUnits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kMajorPlayer$[ebp]
	add	ecx, 63156				; 0000f6b4H
	call	?BoughtCityState@CvPlayerAchievements@@QAEXH@Z ; CvPlayerAchievements::BoughtCityState

; 7960 : }

	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN11@DoBuyout:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$0:
	mov	ecx, DWORD PTR $T244772[ebp]
	jmp	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
__unwindfunclet$?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$1:
	mov	ecx, DWORD PTR $T244771[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$2:
	lea	ecx, DWORD PTR _strMessage$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$3:
	lea	ecx, DWORD PTR $T244773[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$4:
	lea	ecx, DWORD PTR _strSummary$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z$5:
	mov	ecx, DWORD PTR $T244778[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-444]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ENDP	; CvMinorCivAI::DoBuyout
PUBLIC	??1?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvCity *,16,0,297,0>::~FStaticVector<CvCity *,16,0,297,0>
PUBLIC	?push_back@?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAEIABQAVCvCity@@@Z ; FStaticVector<CvCity *,16,0,297,0>::push_back
PUBLIC	??0?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvCity *,16,0,297,0>::FStaticVector<CvCity *,16,0,297,0>
PUBLIC	__$ArrayPad$
EXTRN	?DoUpdateDiploVictory@CvGame@@QAEXXZ:PROC	; CvGame::DoUpdateDiploVictory
EXTRN	?acquireCity@CvPlayer@@QAEXPAVCvCity@@_N1@Z:PROC ; CvPlayer::acquireCity
EXTRN	?isCapital@CvCity@@QBE_NXZ:PROC			; CvCity::isCapital
EXTRN	?DoDistanceGift@CvPlayer@@QAEXW4PlayerTypes@@PAVCvUnit@@@Z:PROC ; CvPlayer::DoDistanceGift
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?DoAcquire@CvMinorCivAI@@QAEXW4PlayerTypes@@AAH11@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoAcquire@CvMinorCivAI@@QAEXW4PlayerTypes@@AAH11@Z$0
__ehfuncinfo$?DoAcquire@CvMinorCivAI@@QAEXW4PlayerTypes@@AAH11@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DoAcquire@CvMinorCivAI@@QAEXW4PlayerTypes@@AAH11@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoAcquire@CvMinorCivAI@@QAEXW4PlayerTypes@@AAH11@Z
_TEXT	SEGMENT
tv191 = -184						; size = 4
_this$ = -180						; size = 4
$T244948 = -164						; size = 4
$T244944 = -160						; size = 4
$T244937 = -156						; size = 4
$T244928 = -152						; size = 4
$T244916 = -148						; size = 4
$T244890 = -132						; size = 4
$T244889 = -128						; size = 4
_pCity$226860 = -124					; size = 4
_iI$226856 = -120					; size = 4
_pLoopCity$226852 = -116				; size = 4
_iLoopCity$ = -112					; size = 4
_vpCitiesToAcquire$ = -108				; size = 80
__$ArrayPad$ = -24					; size = 4
_iLoopUnit$ = -20					; size = 4
_pLoopUnit$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_eMajor$ = 8						; size = 4
_iNumUnits$ = 12					; size = 4
_iCapitalX$ = 16					; size = 4
_iCapitalY$ = 20					; size = 4
?DoAcquire@CvMinorCivAI@@QAEXW4PlayerTypes@@AAH11@Z PROC ; CvMinorCivAI::DoAcquire, COMDAT
; _this$ = ecx

; 7963 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoAcquire@CvMinorCivAI@@QAEXW4PlayerTypes@@AAH11@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 172				; 000000acH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 7964 : 	// Take their units
; 7965 : 	CvUnit* pLoopUnit = NULL;

	mov	DWORD PTR _pLoopUnit$[ebp], 0

; 7966 : 	int iLoopUnit;
; 7967 : 	iNumUnits = 0;

	mov	eax, DWORD PTR _iNumUnits$[ebp]
	mov	DWORD PTR [eax], 0

; 7968 : 	for(pLoopUnit = GetPlayer()->firstUnit(&iLoopUnit); pLoopUnit != NULL; pLoopUnit = GetPlayer()->nextUnit(&iLoopUnit))

	push	0
	lea	ecx, DWORD PTR _iLoopUnit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::firstUnit
	mov	DWORD PTR _pLoopUnit$[ebp], eax
	jmp	SHORT $LN11@DoAcquire
$LN10@DoAcquire:
	push	0
	lea	edx, DWORD PTR _iLoopUnit$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::nextUnit
	mov	DWORD PTR _pLoopUnit$[ebp], eax
$LN11@DoAcquire:
	cmp	DWORD PTR _pLoopUnit$[ebp], 0
	je	SHORT $LN9@DoAcquire

; 7969 : 	{
; 7970 : 		GET_PLAYER(eMajor).DoDistanceGift(GetPlayer()->GetID(), pLoopUnit);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T244889[ebp], eax
	mov	eax, DWORD PTR $T244889[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T244890[ebp], ecx
	mov	edx, DWORD PTR _pLoopUnit$[ebp]
	push	edx
	mov	eax, DWORD PTR $T244890[ebp]
	push	eax
	mov	ecx, DWORD PTR _eMajor$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?DoDistanceGift@CvPlayer@@QAEXW4PlayerTypes@@PAVCvUnit@@@Z ; CvPlayer::DoDistanceGift

; 7971 : 		iNumUnits++;

	mov	ecx, DWORD PTR _iNumUnits$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR _iNumUnits$[ebp]
	mov	DWORD PTR [eax], edx

; 7972 : 	}

	jmp	SHORT $LN10@DoAcquire
$LN9@DoAcquire:

; 7973 : 
; 7974 : 	// Take all their cities, don't show notifications
; 7975 : 	SetDisableNotifications(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDisableNotifications@CvMinorCivAI@@QAEX_N@Z ; CvMinorCivAI::SetDisableNotifications

; 7976 : 	iCapitalX = -1;

	mov	ecx, DWORD PTR _iCapitalX$[ebp]
	mov	DWORD PTR [ecx], -1

; 7977 : 	iCapitalY = -1;

	mov	edx, DWORD PTR _iCapitalY$[ebp]
	mov	DWORD PTR [edx], -1

; 7978 : 	FStaticVector<CvCity*, 16, false, c_eCiv5GameplayDLL, 0> vpCitiesToAcquire;

	lea	ecx, DWORD PTR _vpCitiesToAcquire$[ebp]
	call	??0?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvCity *,16,0,297,0>::FStaticVector<CvCity *,16,0,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 7979 : 	int iLoopCity;
; 7980 : 	for (CvCity* pLoopCity = GetPlayer()->firstCity(&iLoopCity, true); pLoopCity != NULL; pLoopCity = GetPlayer()->nextCity(&iLoopCity, true))

	push	1
	lea	eax, DWORD PTR _iLoopCity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$226852[ebp], eax
	jmp	SHORT $LN8@DoAcquire
$LN7@DoAcquire:
	push	1
	lea	ecx, DWORD PTR _iLoopCity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$226852[ebp], eax
$LN8@DoAcquire:
	cmp	DWORD PTR _pLoopCity$226852[ebp], 0
	je	SHORT $LN6@DoAcquire

; 7981 : 	{
; 7982 : 		vpCitiesToAcquire.push_back(pLoopCity);

	lea	edx, DWORD PTR _pLoopCity$226852[ebp]
	push	edx
	lea	ecx, DWORD PTR _vpCitiesToAcquire$[ebp]
	call	?push_back@?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAEIABQAVCvCity@@@Z ; FStaticVector<CvCity *,16,0,297,0>::push_back

; 7983 : 	}

	jmp	SHORT $LN7@DoAcquire
$LN6@DoAcquire:

; 7984 : 	for (uint iI = 0; iI < vpCitiesToAcquire.size(); iI++)

	mov	DWORD PTR _iI$226856[ebp], 0
	jmp	SHORT $LN5@DoAcquire
$LN4@DoAcquire:
	mov	eax, DWORD PTR _iI$226856[ebp]
	add	eax, 1
	mov	DWORD PTR _iI$226856[ebp], eax
$LN5@DoAcquire:
	mov	ecx, DWORD PTR _vpCitiesToAcquire$[ebp+4]
	mov	DWORD PTR $T244916[ebp], ecx
	mov	edx, DWORD PTR _iI$226856[ebp]
	cmp	edx, DWORD PTR $T244916[ebp]
	jae	SHORT $LN3@DoAcquire

; 7985 : 	{
; 7986 : 		CvCity* pCity = vpCitiesToAcquire[iI];

	mov	eax, DWORD PTR _iI$226856[ebp]
	mov	ecx, DWORD PTR _vpCitiesToAcquire$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _pCity$226860[ebp], edx

; 7987 : 		CvAssertMsg(pCity, "pCity should not be NULL. Please send Anton your save file and version.");
; 7988 : 		if (pCity)

	cmp	DWORD PTR _pCity$226860[ebp], 0
	je	SHORT $LN2@DoAcquire

; 7989 : 		{
; 7990 : 			if (pCity->isCapital())

	mov	ecx, DWORD PTR _pCity$226860[ebp]
	call	?isCapital@CvCity@@QBE_NXZ		; CvCity::isCapital
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN49@DoAcquire

; 7991 : 			{
; 7992 : 				iCapitalX = pCity->getX();

	mov	ecx, DWORD PTR _pCity$226860[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR $T244928[ebp], edx
	mov	eax, DWORD PTR _iCapitalX$[ebp]
	mov	ecx, DWORD PTR $T244928[ebp]
	mov	DWORD PTR [eax], ecx

; 7993 : 				iCapitalY = pCity->getY();

	mov	edx, DWORD PTR _pCity$226860[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR $T244937[ebp], eax
	mov	ecx, DWORD PTR _iCapitalY$[ebp]
	mov	edx, DWORD PTR $T244937[ebp]
	mov	DWORD PTR [ecx], edx

; 7994 : 			}
; 7995 : 			GET_PLAYER(eMajor).acquireCity(pCity, false, true); // deletes pCity, don't reuse the pointer

$LN49@DoAcquire:
	push	1
	push	0
	mov	eax, DWORD PTR _pCity$226860[ebp]
	push	eax
	mov	ecx, DWORD PTR _eMajor$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?acquireCity@CvPlayer@@QAEXPAVCvCity@@_N1@Z ; CvPlayer::acquireCity
$LN2@DoAcquire:

; 7996 : 		}
; 7997 : 	}

	jmp	$LN4@DoAcquire
$LN3@DoAcquire:

; 7998 : 	SetDisableNotifications(false);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDisableNotifications@CvMinorCivAI@@QAEX_N@Z ; CvMinorCivAI::SetDisableNotifications

; 7999 : 
; 8000 : 	SetMajorBoughtOutBy(eMajor);

	mov	ecx, DWORD PTR _eMajor$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetMajorBoughtOutBy@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ; CvMinorCivAI::SetMajorBoughtOutBy

; 8001 : 
; 8002 : 	GC.getGame().DoUpdateDiploVictory();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T244944[ebp], edx
	mov	ecx, DWORD PTR $T244944[ebp]
	call	?DoUpdateDiploVictory@CvGame@@QAEXXZ	; CvGame::DoUpdateDiploVictory

; 8003 : 
; 8004 : 	GC.GetEngineUserInterface()->setDirty(GameData_DIRTY_BIT, true);

	mov	eax, DWORD PTR $T244948[ebp]
	mov	DWORD PTR tv191[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv191[ebp], ecx
	push	1
	push	11					; 0000000bH
	mov	edx, DWORD PTR tv191[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv191[ebp]
	mov	edx, DWORD PTR [eax+260]
	call	edx

; 8005 : 
; 8006 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _vpCitiesToAcquire$[ebp]
	call	??1?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvCity *,16,0,297,0>::~FStaticVector<CvCity *,16,0,297,0>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoAcquire@CvMinorCivAI@@QAEXW4PlayerTypes@@AAH11@Z$0:
	lea	ecx, DWORD PTR _vpCitiesToAcquire$[ebp]
	jmp	??1?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvCity *,16,0,297,0>::~FStaticVector<CvCity *,16,0,297,0>
__ehhandler$?DoAcquire@CvMinorCivAI@@QAEXW4PlayerTypes@@AAH11@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-176]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoAcquire@CvMinorCivAI@@QAEXW4PlayerTypes@@AAH11@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoAcquire@CvMinorCivAI@@QAEXW4PlayerTypes@@AAH11@Z ENDP ; CvMinorCivAI::DoAcquire
PUBLIC	__real@3f800000
PUBLIC	?GetBullyGoldAmount@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBullyGoldAmount
EXTRN	?getEstimateEndTurn@CvGame@@QBEHXZ:PROC		; CvGame::getEstimateEndTurn
EXTRN	__fltused:DWORD
;	COMDAT __real@3f800000
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
CONST	ENDS
;	COMDAT ?GetBullyGoldAmount@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
tv151 = -36						; size = 4
_this$ = -32						; size = 4
$T244998 = -28						; size = 4
$T244994 = -24						; size = 4
$T244990 = -20						; size = 4
_iVisibleDivisor$ = -16					; size = 4
_iGoldGrowthFactor$ = -12				; size = 4
_iGold$ = -8						; size = 4
_fGameProgressFactor$ = -4				; size = 4
___formal$ = 8						; size = 4
?GetBullyGoldAmount@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetBullyGoldAmount, COMDAT
; _this$ = ecx

; 8013 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 8014 : 	int iGold = GC.getMINOR_BULLY_GOLD();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2720
	mov	DWORD PTR _iGold$[ebp], eax

; 8015 : 	int iGoldGrowthFactor = 350; //antonjs: todo: XML

	mov	DWORD PTR _iGoldGrowthFactor$[ebp], 350	; 0000015eH

; 8016 : 
; 8017 : 	// Add gold, more if later in game
; 8018 : 	float fGameProgressFactor = ((float) GC.getGame().getElapsedGameTurns() / (float) GC.getGame().getEstimateEndTurn());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T244990[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T244994[ebp], edx
	mov	ecx, DWORD PTR $T244990[ebp]
	call	?getElapsedGameTurns@CvGame@@QBEHXZ	; CvGame::getElapsedGameTurns
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR $T244994[ebp]
	movss	DWORD PTR tv151[ebp], xmm0
	call	?getEstimateEndTurn@CvGame@@QBEHXZ	; CvGame::getEstimateEndTurn
	cvtsi2ss xmm0, eax
	movss	xmm1, DWORD PTR tv151[ebp]
	divss	xmm1, xmm0
	movss	DWORD PTR _fGameProgressFactor$[ebp], xmm1

; 8019 : 	CvAssertMsg(fGameProgressFactor >= 0.0f, "fGameProgressFactor is not expected to be negative! Please send Anton your save file and version.");
; 8020 : 	if(fGameProgressFactor > 1.0f)

	movss	xmm0, DWORD PTR _fGameProgressFactor$[ebp]
	comiss	xmm0, DWORD PTR __real@3f800000
	jbe	SHORT $LN1@GetBullyGo

; 8021 : 		fGameProgressFactor = 1.0f;

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _fGameProgressFactor$[ebp], xmm0
$LN1@GetBullyGo:

; 8022 : 
; 8023 : 	iGold += (int)(fGameProgressFactor * iGoldGrowthFactor);

	cvtsi2ss xmm0, DWORD PTR _iGoldGrowthFactor$[ebp]
	mulss	xmm0, DWORD PTR _fGameProgressFactor$[ebp]
	cvttss2si eax, xmm0
	add	eax, DWORD PTR _iGold$[ebp]
	mov	DWORD PTR _iGold$[ebp], eax

; 8024 : 
; 8025 : 	// UA, SP Mods
; 8026 : 
; 8027 : 	// Game Speed Mod
; 8028 : 	iGold *= GC.getGame().getGameSpeedInfo().getGoldGiftMod(); //antonjs: consider: separate XML

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T244998[ebp], ecx
	mov	ecx, DWORD PTR $T244998[ebp]
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getGoldGiftMod@CvGameSpeedInfo@@QBEHXZ	; CvGameSpeedInfo::getGoldGiftMod
	imul	eax, DWORD PTR _iGold$[ebp]
	mov	DWORD PTR _iGold$[ebp], eax

; 8029 : 	iGold /= 100;

	mov	eax, DWORD PTR _iGold$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iGold$[ebp], eax

; 8030 : 
; 8031 : 	// Rounding
; 8032 : 	int iVisibleDivisor = /*5*/ GC.getMINOR_CIV_GOLD_GIFT_VISIBLE_DIVISOR(); //antonjs: consider: separate XML

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3144
	mov	DWORD PTR _iVisibleDivisor$[ebp], edx

; 8033 : 	iGold /= iVisibleDivisor;

	mov	eax, DWORD PTR _iGold$[ebp]
	cdq
	idiv	DWORD PTR _iVisibleDivisor$[ebp]
	mov	DWORD PTR _iGold$[ebp], eax

; 8034 : 	iGold *= iVisibleDivisor;

	mov	eax, DWORD PTR _iGold$[ebp]
	imul	eax, DWORD PTR _iVisibleDivisor$[ebp]
	mov	DWORD PTR _iGold$[ebp], eax

; 8035 : 
; 8036 : 	return iGold;

	mov	eax, DWORD PTR _iGold$[ebp]

; 8037 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetBullyGoldAmount@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetBullyGoldAmount
_TEXT	ENDS
PUBLIC	??1?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@QAE@XZ ; CvWeightedVector<enum PlayerTypes,22,1>::~CvWeightedVector<enum PlayerTypes,22,1>
PUBLIC	??$?6$0CN@@@YAAAVString@Localization@@AAV01@AAY0CN@$$CBD@Z ; operator<<<45>
PUBLIC	??_C@_0CN@BICGDNCG@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ ; `string'
PUBLIC	??$?6$0CI@@@YAAAVString@Localization@@AAV01@AAY0CI@$$CBD@Z ; operator<<<40>
PUBLIC	??_C@_0CI@GLALONPI@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ ; `string'
PUBLIC	??$?6$0DD@@@YAAAVString@Localization@@AAV01@AAY0DD@$$CBD@Z ; operator<<<51>
PUBLIC	??_C@_0DD@JJMKDHJB@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ ; `string'
PUBLIC	??$?6$0CH@@@YAAAVString@Localization@@AAV01@AAY0CH@$$CBD@Z ; operator<<<39>
PUBLIC	??_C@_0CH@PBIFPGNJ@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ ; `string'
PUBLIC	??$?6$0CP@@@YAAAVString@Localization@@AAV01@AAY0CP@$$CBD@Z ; operator<<<47>
PUBLIC	??_C@_0CP@OBOKDNNF@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ ; `string'
PUBLIC	??_C@_0DA@BBHMGGCE@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ ; `string'
PUBLIC	??$?6$0DB@@@YAAAVString@Localization@@AAV01@AAY0DB@$$CBD@Z ; operator<<<49>
PUBLIC	??_C@_0DB@ICLEFKIA@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ ; `string'
PUBLIC	??$?6$0DG@@@YAAAVString@Localization@@AAV01@AAY0DG@$$CBD@Z ; operator<<<54>
PUBLIC	??_C@_0DG@HNBOLHJJ@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ ; `string'
PUBLIC	??$?6$0CO@@@YAAAVString@Localization@@AAV01@AAY0CO@$$CBD@Z ; operator<<<46>
PUBLIC	??_C@_0CO@OIBGNBDI@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ ; `string'
PUBLIC	??_C@_0DA@IDDOPKPK@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ ; `string'
PUBLIC	??_C@_0CJ@KNJNDKBM@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ ; `string'
PUBLIC	??_C@_0DC@NCFGOIMH@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ ; `string'
PUBLIC	??$?6$0DC@@@YAAAVString@Localization@@AAV01@AAY0DC@$$CBD@Z ; operator<<<50>
PUBLIC	??_C@_0DC@MHCMDPGK@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ ; `string'
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff8000000000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4008000000000000
PUBLIC	?plotXYWithRangeCheck@@YAPAVCvPlot@@HHHHH@Z	; plotXYWithRangeCheck
PUBLIC	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>::~FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>
PUBLIC	??$?6$0DA@@@YAAAVString@Localization@@AAV01@AAY0DA@$$CBD@Z ; operator<<<48>
PUBLIC	??_C@_0DA@GDOHPDMC@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ ; `string'
PUBLIC	??_C@_0CJ@CHJNIFIH@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ ; `string'
PUBLIC	__real@42480000
PUBLIC	?SortItems@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@QAEXXZ ; CvWeightedVector<enum PlayerTypes,22,1>::SortItems
PUBLIC	?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@Z ; FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>::push_back
PUBLIC	??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>::FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>
PUBLIC	__$ArrayPad$
PUBLIC	?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z ; CvMinorCivAI::CalculateBullyMetric
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z:PROC
EXTRN	?getPopulation@CvCity@@QBEHXZ:PROC		; CvCity::getPopulation
EXTRN	?GetPower@CvUnit@@QBEHXZ:PROC			; CvUnit::GetPower
EXTRN	?nextUnitNode@CvPlot@@QAEPAUIDInfo@@PAU2@@Z:PROC ; CvPlot::nextUnitNode
EXTRN	?getNumUnits@CvPlot@@QBEHXZ:PROC		; CvPlot::getNumUnits
EXTRN	?GetPower@CvCity@@QBEHXZ:PROC			; CvCity::GetPower
EXTRN	?GetMilitaryMight@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetMilitaryMight
;	COMDAT ??_C@_0CN@BICGDNCG@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0CN@BICGDNCG@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ DB 'TXT_KEY_POP_CSTA'
	DB	'TE_BULLY_FACTOR_MILITARISTIC', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@GLALONPI@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
CONST	SEGMENT
??_C@_0CI@GLALONPI@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ DB 'TXT_KEY_POP_CSTA'
	DB	'TE_BULLY_FACTOR_HOSTILE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@JJMKDHJB@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
CONST	SEGMENT
??_C@_0DD@JJMKDHJB@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ DB 'TXT_KEY_POP_CSTA'
	DB	'TE_BULLY_FACTOR_PLEDGES_TO_PROTECT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@PBIFPGNJ@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
CONST	SEGMENT
??_C@_0CH@PBIFPGNJ@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ DB 'TXT_KEY_POP_CSTA'
	DB	'TE_BULLY_FACTOR_ALLIES', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@OBOKDNNF@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
CONST	SEGMENT
??_C@_0CP@OBOKDNNF@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ DB 'TXT_KEY_POP_CSTA'
	DB	'TE_BULLY_FACTOR_LOW_POPULATION', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@BBHMGGCE@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
CONST	SEGMENT
??_C@_0DA@BBHMGGCE@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ DB 'TXT_KEY_POP_CSTA'
	DB	'TE_BULLY_FACTOR_UNIT_RELUCTANCE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@ICLEFKIA@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
CONST	SEGMENT
??_C@_0DB@ICLEFKIA@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ DB 'TXT_KEY_POP_CSTA'
	DB	'TE_BULLY_FACTOR_BULLIED_RECENTLY', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@HNBOLHJJ@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
CONST	SEGMENT
??_C@_0DG@HNBOLHJJ@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ DB 'TXT_KEY_POP_CSTA'
	DB	'TE_BULLY_FACTOR_BULLIED_VERY_RECENTLY', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@OIBGNBDI@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
CONST	SEGMENT
??_C@_0CO@OIBGNBDI@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ DB 'TXT_KEY_POP_CSTA'
	DB	'TE_BULLY_FACTOR_LOW_INFLUENCE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@IDDOPKPK@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
CONST	SEGMENT
??_C@_0DA@IDDOPKPK@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ DB 'TXT_KEY_POP_CSTA'
	DB	'TE_BULLY_FACTOR_BASE_RELUCTANCE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@KNJNDKBM@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
CONST	SEGMENT
??_C@_0CJ@KNJNDKBM@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ DB 'TXT_KEY_POP_CSTA'
	DB	'TE_BULLY_FACTOR_NEGATIVE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@NCFGOIMH@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
CONST	SEGMENT
??_C@_0DC@NCFGOIMH@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ DB 'TXT_KEY_POP_CSTA'
	DB	'TE_BULLY_FACTOR_GUNBOAT_DIPLOMACY', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@MHCMDPGK@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
CONST	SEGMENT
??_C@_0DC@MHCMDPGK@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ DB 'TXT_KEY_POP_CSTA'
	DB	'TE_BULLY_FACTOR_MILITARY_PRESENCE', 00H	; `string'
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3ff8000000000000
CONST	SEGMENT
__real@3ff8000000000000 DQ 03ff8000000000000r	; 1.5
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT ??_C@_0DA@GDOHPDMC@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
CONST	SEGMENT
??_C@_0DA@GDOHPDMC@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ DB 'TXT_KEY_POP_CSTA'
	DB	'TE_BULLY_FACTOR_GLOBAL_MILITARY', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@CHJNIFIH@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
CONST	SEGMENT
??_C@_0CJ@CHJNIFIH@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@ DB 'TXT_KEY_POP_CSTA'
	DB	'TE_BULLY_FACTOR_POSITIVE', 00H		; `string'
CONST	ENDS
;	COMDAT __real@42480000
CONST	SEGMENT
__real@42480000 DD 042480000r			; 50
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z DD 019930522H
	DD	0fH
	DD	FLAT:__unwindtable$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$7
	DD	01H
	DD	FLAT:__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$8
	DD	01H
	DD	FLAT:__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$9
	DD	01H
	DD	FLAT:__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$10
	DD	01H
	DD	FLAT:__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$11
	DD	01H
	DD	FLAT:__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$12
	DD	01H
	DD	FLAT:__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$13
	DD	01H
	DD	FLAT:__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$14
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z
_TEXT	SEGMENT
tv733 = -1704						; size = 4
tv639 = -1700						; size = 4
_this$ = -1696						; size = 4
$T245360 = -1680					; size = 4
$T245356 = -1676					; size = 4
$T245352 = -1672					; size = 4
$T245348 = -1668					; size = 4
$T245344 = -1664					; size = 4
$T245343 = -1660					; size = 4
$T245334 = -1656					; size = 4
$T245325 = -1652					; size = 4
$T245167 = -1564					; size = 4
$T245161 = -1560					; size = 4
$T245157 = -1556					; size = 4
$T245149 = -1552					; size = 4
$T245140 = -1548					; size = 4
$T245123 = -1544					; size = 4
$T245106 = -1532					; size = 4
_weightedElem$245102 = -1528				; size = 8
$T245096 = -1520					; size = 4
$T245092 = -1516					; size = 4
$T245088 = -1509					; size = 1
$T245079 = -1508					; size = 4
$T245067 = -1501					; size = 1
$T245066 = -1500					; size = 4
$T245049 = -1496					; size = 4
$T245048 = -1492					; size = 4
$T245016 = -1488					; size = 4
$T245015 = -1484					; size = 4
$T245014 = -1480					; size = 4
$T245013 = -1476					; size = 4
$T245012 = -1472					; size = 4
$T245011 = -1468					; size = 4
$T245010 = -1464					; size = 4
$T245009 = -1460					; size = 4
$T245008 = -1456					; size = 4
_strNegativeFactor$227398 = -1452			; size = 80
_iMilitaristicScore$227396 = -1368			; size = 4
_strNegativeFactor$227376 = -1364			; size = 80
_iHostileScore$227374 = -1280				; size = 4
_strNegativeFactor$227354 = -1276			; size = 80
_iProtectionScore$227350 = -1196			; size = 4
_iMajorLoop$227346 = -1192				; size = 4
_strNegativeFactor$227327 = -1188			; size = 80
_iAllyScore$227325 = -1104				; size = 4
_strNegativeFactor$227305 = -1100			; size = 80
_iPopulationScore$227303 = -1016			; size = 4
_strNegativeFactor$227297 = -1012			; size = 80
_iUnitScore$227295 = -928				; size = 4
_strNegativeFactor$227275 = -924			; size = 80
_iBulliedRecentlyScore$227273 = -840			; size = 4
_strNegativeFactor$227252 = -836			; size = 80
_iBulliedVeryRecentlyScore$227250 = -752		; size = 4
_strNegativeFactor$227228 = -748			; size = 80
_iInfluenceScore$227226 = -664				; size = 4
_strNegativeFactor$227220 = -660			; size = 80
_strPositiveFactor$227215 = -580			; size = 80
_strPositiveFactor$227192 = -500			; size = 80
_iDY$227165 = -420					; size = 4
_iDX$227161 = -416					; size = 4
_strPositiveFactor$227125 = -412			; size = 80
_fRankRatio$227120 = -328				; size = 4
_iRanking$227115 = -324					; size = 4
_iMajorLoop$227109 = -320				; size = 4
_iPoliciesScore$ = -316					; size = 4
_iFailScore$ = -312					; size = 4
_veMilitaryRankings$ = -308				; size = 192
_pMinorCapitalPlot$ = -116				; size = 4
_iMinorCapitalX$ = -112					; size = 4
_iMinorLocalPower$ = -108				; size = 4
_iBaseReluctanceScore$ = -104				; size = 4
_sFactors$ = -100					; size = 28
__$ArrayPad$ = -72					; size = 4
_iMinorCapitalY$ = -68					; size = 4
_pUnitNode$ = -64					; size = 4
_eMajorLoop$ = -60					; size = 4
_iBullyLocalPower$ = -56				; size = 4
_fLocalPowerRatio$ = -52				; size = 4
_pLoopUnit$ = -48					; size = 4
_iGlobalMilitaryScore$ = -44				; size = 4
_iPoliciesMod$ = -40					; size = 4
_pLoopPlot$ = -36					; size = 4
_iLocalPowerScore$ = -32				; size = 4
_pMinorCapital$ = -28					; size = 4
_iLastBullyTurn$ = -24					; size = 4
_iScore$ = -20						; size = 4
_iComparisonRadius$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
_eBullyPlayer$ = 8					; size = 4
_bForUnit$ = 12						; size = 1
_sTooltipSink$ = 16					; size = 4
?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z PROC ; CvMinorCivAI::CalculateBullyMetric, COMDAT
; _this$ = ecx

; 8043 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1692				; 0000069cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 8044 : 	CvString sFactors = "";

	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
	test	eax, eax
	je	SHORT $LN88@CalculateB
	mov	DWORD PTR tv639[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	SHORT $LN89@CalculateB
$LN88@CalculateB:
	mov	DWORD PTR tv639[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN89@CalculateB:
	mov	ecx, DWORD PTR tv639[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 8045 : 
; 8046 : 	int iScore = 0;

	mov	DWORD PTR _iScore$[ebp], 0

; 8047 : 	const int iFailScore = -300;

	mov	DWORD PTR _iFailScore$[ebp], -300	; fffffed4H

; 8048 : 
; 8049 : 	CvAssertMsg(GetPlayer()->GetID() != eBullyPlayer, "Minor civ and bully civ not expected to have the same ID!");
; 8050 : 	if(GetPlayer()->GetID() == eBullyPlayer)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T245048[ebp], eax
	mov	edx, DWORD PTR $T245048[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T245049[ebp], eax
	mov	ecx, DWORD PTR $T245049[ebp]
	cmp	ecx, DWORD PTR _eBullyPlayer$[ebp]
	jne	SHORT $LN68@CalculateB

; 8051 : 		return iFailScore;

	mov	DWORD PTR $T245008[ebp], -300		; fffffed4H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T245008[ebp]
	jmp	$LN69@CalculateB
$LN68@CalculateB:

; 8052 : 
; 8053 : 	CvAssertMsg(eBullyPlayer >= 0, "eBullyPlayer is expected to be non-negative (invalid Index)");
; 8054 : 	CvAssertMsg(eBullyPlayer < MAX_MAJOR_CIVS, "eBullyPlayer is expected to be within maximum bounds (invalid Index)");
; 8055 : 	if(eBullyPlayer < 0 || eBullyPlayer >= MAX_MAJOR_CIVS)

	cmp	DWORD PTR _eBullyPlayer$[ebp], 0
	jl	SHORT $LN66@CalculateB
	cmp	DWORD PTR _eBullyPlayer$[ebp], 22	; 00000016H
	jl	SHORT $LN67@CalculateB
$LN66@CalculateB:

; 8056 : 		return iFailScore;

	mov	DWORD PTR $T245009[ebp], -300		; fffffed4H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T245009[ebp]
	jmp	$LN69@CalculateB
$LN67@CalculateB:

; 8057 : 
; 8058 : 	// Can't bully the dead
; 8059 : 	if(!GetPlayer()->isAlive())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T245066[ebp], eax
	mov	edx, DWORD PTR $T245066[ebp]
	mov	al, BYTE PTR [edx+2256]
	mov	BYTE PTR $T245067[ebp], al
	movzx	ecx, BYTE PTR $T245067[ebp]
	test	ecx, ecx
	jne	SHORT $LN65@CalculateB

; 8060 : 		return iFailScore;

	mov	DWORD PTR $T245010[ebp], -300		; fffffed4H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T245010[ebp]
	jmp	$LN69@CalculateB
$LN65@CalculateB:

; 8061 : 
; 8062 : 	// **************************
; 8063 : 	// Global military power ranking of major
; 8064 : 	//
; 8065 : 	// +0 ~ +75
; 8066 : 	// **************************
; 8067 : 	CvWeightedVector<PlayerTypes, MAX_MAJOR_CIVS, true> veMilitaryRankings;

	lea	ecx, DWORD PTR _veMilitaryRankings$[ebp]
	call	??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>::FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 8068 : 	PlayerTypes eMajorLoop;
; 8069 : 	int iGlobalMilitaryScore = 0;

	mov	DWORD PTR _iGlobalMilitaryScore$[ebp], 0

; 8070 : 	for(int iMajorLoop = 0; iMajorLoop < MAX_MAJOR_CIVS; iMajorLoop++)

	mov	DWORD PTR _iMajorLoop$227109[ebp], 0
	jmp	SHORT $LN64@CalculateB
$LN63@CalculateB:
	mov	edx, DWORD PTR _iMajorLoop$227109[ebp]
	add	edx, 1
	mov	DWORD PTR _iMajorLoop$227109[ebp], edx
$LN64@CalculateB:
	cmp	DWORD PTR _iMajorLoop$227109[ebp], 22	; 00000016H
	jge	$LN62@CalculateB

; 8071 : 	{
; 8072 : 		eMajorLoop = (PlayerTypes) iMajorLoop;

	mov	eax, DWORD PTR _iMajorLoop$227109[ebp]
	mov	DWORD PTR _eMajorLoop$[ebp], eax

; 8073 : 		if(GET_PLAYER(eMajorLoop).isAlive() && !GET_PLAYER(eMajorLoop).isMinorCiv())

	mov	ecx, DWORD PTR _eMajorLoop$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T245079[ebp], ecx
	mov	edx, DWORD PTR $T245079[ebp]
	mov	al, BYTE PTR [edx+2256]
	mov	BYTE PTR $T245088[ebp], al
	movzx	ecx, BYTE PTR $T245088[ebp]
	test	ecx, ecx
	je	$LN121@CalculateB
	mov	edx, DWORD PTR _eMajorLoop$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T245092[ebp], edx
	mov	ecx, DWORD PTR $T245092[ebp]
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN121@CalculateB

; 8074 : 		{
; 8075 : 			veMilitaryRankings.push_back(eMajorLoop, GET_PLAYER(eMajorLoop).GetMilitaryMight()); // Don't recalculate within a turn, can cause inconsistency

	mov	ecx, DWORD PTR _eMajorLoop$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T245096[ebp], ecx
	mov	ecx, DWORD PTR $T245096[ebp]
	call	?GetMilitaryMight@CvPlayer@@QBEHXZ	; CvPlayer::GetMilitaryMight
	mov	DWORD PTR $T245106[ebp], eax
	mov	DWORD PTR _weightedElem$245102[ebp], 0
	mov	DWORD PTR _weightedElem$245102[ebp+4], 0
	mov	edx, DWORD PTR _eMajorLoop$[ebp]
	mov	DWORD PTR _weightedElem$245102[ebp], edx
	mov	eax, DWORD PTR $T245106[ebp]
	mov	DWORD PTR _weightedElem$245102[ebp+4], eax
	lea	ecx, DWORD PTR _weightedElem$245102[ebp]
	push	ecx
	lea	ecx, DWORD PTR _veMilitaryRankings$[ebp]
	call	?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@Z ; FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>::push_back
$LN121@CalculateB:

; 8076 : 		}
; 8077 : 	}

	jmp	$LN63@CalculateB
$LN62@CalculateB:

; 8078 : 	CvAssertMsg(veMilitaryRankings.size() > 0, "WeightedVector of military might rankings not expected to be size 0");
; 8079 : 	veMilitaryRankings.SortItems();

	lea	ecx, DWORD PTR _veMilitaryRankings$[ebp]
	call	?SortItems@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@QAEXXZ ; CvWeightedVector<enum PlayerTypes,22,1>::SortItems

; 8080 : 	for(int iRanking = 0; iRanking < veMilitaryRankings.size(); iRanking++)

	mov	DWORD PTR _iRanking$227115[ebp], 0
	jmp	SHORT $LN60@CalculateB
$LN59@CalculateB:
	mov	edx, DWORD PTR _iRanking$227115[ebp]
	add	edx, 1
	mov	DWORD PTR _iRanking$227115[ebp], edx
$LN60@CalculateB:
	mov	eax, DWORD PTR _veMilitaryRankings$[ebp+4]
	mov	DWORD PTR $T245123[ebp], eax
	mov	ecx, DWORD PTR _iRanking$227115[ebp]
	cmp	ecx, DWORD PTR $T245123[ebp]
	jge	SHORT $LN58@CalculateB

; 8081 : 	{
; 8082 : 		if(veMilitaryRankings.GetElement(iRanking) == eBullyPlayer)

	mov	edx, DWORD PTR _iRanking$227115[ebp]
	mov	eax, DWORD PTR _veMilitaryRankings$[ebp]
	mov	ecx, DWORD PTR [eax+edx*8]
	cmp	ecx, DWORD PTR _eBullyPlayer$[ebp]
	jne	SHORT $LN57@CalculateB

; 8083 : 		{
; 8084 : 			float fRankRatio = (float)(veMilitaryRankings.size() - iRanking) / (float)(veMilitaryRankings.size());

	mov	edx, DWORD PTR _veMilitaryRankings$[ebp+4]
	mov	DWORD PTR $T245140[ebp], edx
	mov	eax, DWORD PTR _veMilitaryRankings$[ebp+4]
	mov	DWORD PTR $T245149[ebp], eax
	mov	ecx, DWORD PTR $T245140[ebp]
	sub	ecx, DWORD PTR _iRanking$227115[ebp]
	cvtsi2ss xmm0, ecx
	cvtsi2ss xmm1, DWORD PTR $T245149[ebp]
	divss	xmm0, xmm1
	movss	DWORD PTR _fRankRatio$227120[ebp], xmm0

; 8085 : #ifdef NQ_TRIBUTE_EASIER_WITH_LOCAL_POWER
; 8086 : 			iGlobalMilitaryScore = (int)(fRankRatio * 50); // A score between 50*(1 / num majors alive) and 50, with the highest rank major getting 50

	movss	xmm0, DWORD PTR _fRankRatio$227120[ebp]
	mulss	xmm0, DWORD PTR __real@42480000
	cvttss2si edx, xmm0
	mov	DWORD PTR _iGlobalMilitaryScore$[ebp], edx

; 8087 : #else
; 8088 : 			iGlobalMilitaryScore = (int)(fRankRatio * 75); // A score between 75*(1 / num majors alive) and 75, with the highest rank major getting 75
; 8089 : #endif
; 8090 : 			iScore += iGlobalMilitaryScore;

	mov	eax, DWORD PTR _iScore$[ebp]
	add	eax, DWORD PTR _iGlobalMilitaryScore$[ebp]
	mov	DWORD PTR _iScore$[ebp], eax

; 8091 : 			break;

	jmp	SHORT $LN58@CalculateB
$LN57@CalculateB:

; 8092 : 		}
; 8093 : 	}

	jmp	$LN59@CalculateB
$LN58@CalculateB:

; 8094 : 	
; 8095 : 	if (sTooltipSink)

	cmp	DWORD PTR _sTooltipSink$[ebp], 0
	je	SHORT $LN56@CalculateB

; 8096 : 	{
; 8097 : 		Localization::String strPositiveFactor = Localization::Lookup("TXT_KEY_POP_CSTATE_BULLY_FACTOR_POSITIVE");

	push	OFFSET ??_C@_0CJ@CHJNIFIH@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	ecx, DWORD PTR _strPositiveFactor$227125[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 8098 : 		strPositiveFactor << iGlobalMilitaryScore;

	lea	edx, DWORD PTR _iGlobalMilitaryScore$[ebp]
	push	edx
	lea	eax, DWORD PTR _strPositiveFactor$227125[ebp]
	push	eax
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 8099 : 		strPositiveFactor << "TXT_KEY_POP_CSTATE_BULLY_FACTOR_GLOBAL_MILITARY";

	push	OFFSET ??_C@_0DA@GDOHPDMC@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	ecx, DWORD PTR _strPositiveFactor$227125[ebp]
	push	ecx
	call	??$?6$0DA@@@YAAAVString@Localization@@AAV01@AAY0DA@$$CBD@Z ; operator<<<48>
	add	esp, 8

; 8100 : 		sFactors += strPositiveFactor.toUTF8();

	lea	ecx, DWORD PTR _strPositiveFactor$227125[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 8101 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _strPositiveFactor$227125[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN56@CalculateB:

; 8102 : 
; 8103 : 	// **************************
; 8104 : 	// Local military power comparison
; 8105 : 	//
; 8106 : 	// +0 ~ +125
; 8107 : 	// **************************
; 8108 : #ifdef AUI_WARNING_FIXES
; 8109 : 	int iComparisonRadius = MAX(GC.getMap().getGridWidth() / 10, uint(5));
; 8110 : #else
; 8111 : 	int iComparisonRadius = std::max(GC.getMap().getGridWidth() / 10, 5);

	mov	DWORD PTR $T245011[ebp], 5
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T245157[ebp], edx
	mov	eax, DWORD PTR $T245157[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T245161[ebp], ecx
	mov	eax, DWORD PTR $T245161[ebp]
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	mov	DWORD PTR $T245012[ebp], eax
	mov	edx, DWORD PTR $T245012[ebp]
	cmp	edx, DWORD PTR $T245011[ebp]
	jge	SHORT $LN155@CalculateB
	lea	eax, DWORD PTR $T245011[ebp]
	mov	DWORD PTR tv733[ebp], eax
	jmp	SHORT $LN156@CalculateB
$LN155@CalculateB:
	lea	ecx, DWORD PTR $T245012[ebp]
	mov	DWORD PTR tv733[ebp], ecx
$LN156@CalculateB:
	mov	edx, DWORD PTR tv733[ebp]
	mov	DWORD PTR $T245167[ebp], edx
	mov	eax, DWORD PTR $T245167[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _iComparisonRadius$[ebp], ecx

; 8112 : #endif
; 8113 : 	CvCity* pMinorCapital = GetPlayer()->getCapitalCity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pMinorCapital$[ebp], eax

; 8114 : 	if(pMinorCapital == NULL)

	cmp	DWORD PTR _pMinorCapital$[ebp], 0
	jne	SHORT $LN55@CalculateB

; 8115 : 		return iFailScore;

	mov	DWORD PTR $T245013[ebp], -300		; fffffed4H
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _veMilitaryRankings$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>::~FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T245013[ebp]
	jmp	$LN69@CalculateB
$LN55@CalculateB:

; 8116 : 	CvPlot* pMinorCapitalPlot = pMinorCapital->plot();

	mov	ecx, DWORD PTR _pMinorCapital$[ebp]
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	DWORD PTR _pMinorCapitalPlot$[ebp], eax

; 8117 : 	if(pMinorCapitalPlot == NULL)

	cmp	DWORD PTR _pMinorCapitalPlot$[ebp], 0
	jne	SHORT $LN54@CalculateB

; 8118 : 		return iFailScore;

	mov	DWORD PTR $T245014[ebp], -300		; fffffed4H
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _veMilitaryRankings$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>::~FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T245014[ebp]
	jmp	$LN69@CalculateB
$LN54@CalculateB:

; 8119 : 	int iMinorCapitalX = pMinorCapitalPlot->getX();

	mov	edx, DWORD PTR _pMinorCapitalPlot$[ebp]
	movsx	eax, WORD PTR [edx]
	mov	DWORD PTR _iMinorCapitalX$[ebp], eax

; 8120 : 	int iMinorCapitalY = pMinorCapitalPlot->getY();

	mov	ecx, DWORD PTR _pMinorCapitalPlot$[ebp]
	movsx	edx, WORD PTR [ecx+2]
	mov	DWORD PTR _iMinorCapitalY$[ebp], edx

; 8121 : 	int iMinorLocalPower = 0;

	mov	DWORD PTR _iMinorLocalPower$[ebp], 0

; 8122 : 	int iBullyLocalPower = 0;

	mov	DWORD PTR _iBullyLocalPower$[ebp], 0

; 8123 : 	CvPlot* pLoopPlot;
; 8124 : 	IDInfo* pUnitNode;
; 8125 : 	CvUnit* pLoopUnit;
; 8126 : 
; 8127 : 	// Include the minor's city power
; 8128 : 	iMinorLocalPower += pMinorCapital->GetPower();

	mov	ecx, DWORD PTR _pMinorCapital$[ebp]
	call	?GetPower@CvCity@@QBEHXZ		; CvCity::GetPower
	add	eax, DWORD PTR _iMinorLocalPower$[ebp]
	mov	DWORD PTR _iMinorLocalPower$[ebp], eax

; 8129 : 
; 8130 : #ifdef AUI_HEXSPACE_DX_LOOPS
; 8131 : 	int iMaxDX, iDX;
; 8132 : 	for (int iDY = -iComparisonRadius; iDY <= iComparisonRadius; iDY++)
; 8133 : 	{
; 8134 : 		iMaxDX = iComparisonRadius - MAX(0, iDY);
; 8135 : 		for (iDX = -iComparisonRadius - MIN(0, iDY); iDX <= iMaxDX; iDX++) // MIN() and MAX() stuff is to reduce loops (hexspace!)
; 8136 : 		{
; 8137 : 			// No need for range check because loops are set up properly
; 8138 : 			pLoopPlot = plotXY(iMinorCapitalX, iMinorCapitalY, iDX, iDY);
; 8139 : #else
; 8140 : 	for(int iDX = -iComparisonRadius; iDX <= iComparisonRadius; iDX++)

	mov	eax, DWORD PTR _iComparisonRadius$[ebp]
	neg	eax
	mov	DWORD PTR _iDX$227161[ebp], eax
	jmp	SHORT $LN53@CalculateB
$LN52@CalculateB:
	mov	ecx, DWORD PTR _iDX$227161[ebp]
	add	ecx, 1
	mov	DWORD PTR _iDX$227161[ebp], ecx
$LN53@CalculateB:
	mov	edx, DWORD PTR _iDX$227161[ebp]
	cmp	edx, DWORD PTR _iComparisonRadius$[ebp]
	jg	$LN51@CalculateB

; 8141 : 	{
; 8142 : 		for(int iDY = -iComparisonRadius; iDY <= iComparisonRadius; iDY++)

	mov	eax, DWORD PTR _iComparisonRadius$[ebp]
	neg	eax
	mov	DWORD PTR _iDY$227165[ebp], eax
	jmp	SHORT $LN50@CalculateB
$LN49@CalculateB:
	mov	ecx, DWORD PTR _iDY$227165[ebp]
	add	ecx, 1
	mov	DWORD PTR _iDY$227165[ebp], ecx
$LN50@CalculateB:
	mov	edx, DWORD PTR _iDY$227165[ebp]
	cmp	edx, DWORD PTR _iComparisonRadius$[ebp]
	jg	$LN48@CalculateB

; 8143 : 		{
; 8144 : 			pLoopPlot = ::plotXYWithRangeCheck(iMinorCapitalX, iMinorCapitalY, iDX, iDY, iComparisonRadius);

	mov	eax, DWORD PTR _iComparisonRadius$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iDY$227165[ebp]
	push	ecx
	mov	edx, DWORD PTR _iDX$227161[ebp]
	push	edx
	mov	eax, DWORD PTR _iMinorCapitalY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iMinorCapitalX$[ebp]
	push	ecx
	call	?plotXYWithRangeCheck@@YAPAVCvPlot@@HHHHH@Z ; plotXYWithRangeCheck
	add	esp, 20					; 00000014H
	mov	DWORD PTR _pLoopPlot$[ebp], eax

; 8145 : #endif
; 8146 : 
; 8147 : 			if(pLoopPlot != NULL)

	cmp	DWORD PTR _pLoopPlot$[ebp], 0
	je	$LN44@CalculateB

; 8148 : 			{
; 8149 : 				// If there are Units here, loop through them
; 8150 : 				if(pLoopPlot->getNumUnits() > 0)

	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	call	?getNumUnits@CvPlot@@QBEHXZ		; CvPlot::getNumUnits
	test	eax, eax
	jle	$LN44@CalculateB

; 8151 : 				{
; 8152 : 					pUnitNode = pLoopPlot->headUnitNode();

	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	call	?headUnitNode@CvPlot@@QAEPAUIDInfo@@XZ	; CvPlot::headUnitNode
	mov	DWORD PTR _pUnitNode$[ebp], eax
$LN45@CalculateB:

; 8153 : 
; 8154 : 					while(pUnitNode != NULL)

	cmp	DWORD PTR _pUnitNode$[ebp], 0
	je	$LN44@CalculateB

; 8155 : 					{
; 8156 : 						pLoopUnit = ::getUnit(*pUnitNode);

	mov	edx, DWORD PTR _pUnitNode$[ebp]
	push	edx
	call	?getUnit@@YAPAVCvUnit@@ABUIDInfo@@@Z	; getUnit
	add	esp, 4
	mov	DWORD PTR _pLoopUnit$[ebp], eax

; 8157 : 						pUnitNode = pLoopPlot->nextUnitNode(pUnitNode);

	mov	eax, DWORD PTR _pUnitNode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	call	?nextUnitNode@CvPlot@@QAEPAUIDInfo@@PAU2@@Z ; CvPlot::nextUnitNode
	mov	DWORD PTR _pUnitNode$[ebp], eax

; 8158 : 
; 8159 : 						// Is a combat unit
; 8160 : 						if(pLoopUnit && pLoopUnit->IsCombatUnit())

	cmp	DWORD PTR _pLoopUnit$[ebp], 0
	je	$LN40@CalculateB
	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	xor	edx, edx
	cmp	DWORD PTR [ecx+1044], 0
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN40@CalculateB

; 8161 : 						{
; 8162 : 							if(pLoopUnit->getOwner() == eBullyPlayer)

	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR $T245325[ebp], edx
	mov	eax, DWORD PTR $T245325[ebp]
	cmp	eax, DWORD PTR _eBullyPlayer$[ebp]
	jne	SHORT $LN42@CalculateB

; 8163 : 							{
; 8164 : 								iBullyLocalPower += pLoopUnit->GetPower();

	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	call	?GetPower@CvUnit@@QBEHXZ		; CvUnit::GetPower
	add	eax, DWORD PTR _iBullyLocalPower$[ebp]
	mov	DWORD PTR _iBullyLocalPower$[ebp], eax
	jmp	SHORT $LN40@CalculateB
$LN42@CalculateB:

; 8165 : 							}
; 8166 : 							else if(pLoopUnit->getOwner() == GetPlayer()->GetID())

	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR $T245334[ebp], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T245343[ebp], eax
	mov	eax, DWORD PTR $T245343[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T245344[ebp], ecx
	mov	edx, DWORD PTR $T245334[ebp]
	cmp	edx, DWORD PTR $T245344[ebp]
	jne	SHORT $LN40@CalculateB

; 8167 : 							{
; 8168 : 								iMinorLocalPower += pLoopUnit->GetPower();

	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	call	?GetPower@CvUnit@@QBEHXZ		; CvUnit::GetPower
	add	eax, DWORD PTR _iMinorLocalPower$[ebp]
	mov	DWORD PTR _iMinorLocalPower$[ebp], eax
$LN40@CalculateB:

; 8169 : 							}
; 8170 : 						}
; 8171 : 					}

	jmp	$LN45@CalculateB
$LN44@CalculateB:

; 8172 : 				}
; 8173 : 
; 8174 : 			}
; 8175 : 		}

	jmp	$LN49@CalculateB
$LN48@CalculateB:

; 8176 : 	}

	jmp	$LN52@CalculateB
$LN51@CalculateB:

; 8177 : 	float fLocalPowerRatio = (float)iBullyLocalPower / (float)iMinorLocalPower;

	cvtsi2ss xmm0, DWORD PTR _iBullyLocalPower$[ebp]
	cvtsi2ss xmm1, DWORD PTR _iMinorLocalPower$[ebp]
	divss	xmm0, xmm1
	movss	DWORD PTR _fLocalPowerRatio$[ebp], xmm0

; 8178 : 	int iLocalPowerScore = 0;

	mov	DWORD PTR _iLocalPowerScore$[ebp], 0

; 8179 : 	if(fLocalPowerRatio >= 3.0)

	cvtss2sd xmm0, DWORD PTR _fLocalPowerRatio$[ebp]
	comisd	xmm0, QWORD PTR __real@4008000000000000
	jb	SHORT $LN39@CalculateB

; 8180 : 	{
; 8181 : #ifdef NQ_TRIBUTE_EASIER_WITH_LOCAL_POWER
; 8182 : 		iLocalPowerScore += 150;

	mov	eax, DWORD PTR _iLocalPowerScore$[ebp]
	add	eax, 150				; 00000096H
	mov	DWORD PTR _iLocalPowerScore$[ebp], eax
	jmp	SHORT $LN31@CalculateB
$LN39@CalculateB:

; 8183 : #else
; 8184 : 		iLocalPowerScore += 125;
; 8185 : #endif
; 8186 : 	}
; 8187 : 	else if(fLocalPowerRatio >= 2.0)

	cvtss2sd xmm0, DWORD PTR _fLocalPowerRatio$[ebp]
	comisd	xmm0, QWORD PTR __real@4000000000000000
	jb	SHORT $LN37@CalculateB

; 8188 : 	{
; 8189 : #ifdef NQ_TRIBUTE_EASIER_WITH_LOCAL_POWER
; 8190 : 		iLocalPowerScore += 120;

	mov	ecx, DWORD PTR _iLocalPowerScore$[ebp]
	add	ecx, 120				; 00000078H
	mov	DWORD PTR _iLocalPowerScore$[ebp], ecx
	jmp	SHORT $LN31@CalculateB
$LN37@CalculateB:

; 8191 : #else
; 8192 : 		iLocalPowerScore += 100;
; 8193 : #endif
; 8194 : 	}
; 8195 : 	else if(fLocalPowerRatio >= 1.5)

	cvtss2sd xmm0, DWORD PTR _fLocalPowerRatio$[ebp]
	comisd	xmm0, QWORD PTR __real@3ff8000000000000
	jb	SHORT $LN35@CalculateB

; 8196 : 	{
; 8197 : #ifdef NQ_TRIBUTE_EASIER_WITH_LOCAL_POWER
; 8198 : 		iLocalPowerScore += 90;

	mov	edx, DWORD PTR _iLocalPowerScore$[ebp]
	add	edx, 90					; 0000005aH
	mov	DWORD PTR _iLocalPowerScore$[ebp], edx
	jmp	SHORT $LN31@CalculateB
$LN35@CalculateB:

; 8199 : #else
; 8200 : 		iLocalPowerScore += 75;
; 8201 : #endif
; 8202 : 	}
; 8203 : 	else if(fLocalPowerRatio >= 1.0)

	cvtss2sd xmm0, DWORD PTR _fLocalPowerRatio$[ebp]
	comisd	xmm0, QWORD PTR __real@3ff0000000000000
	jb	SHORT $LN33@CalculateB

; 8204 : 	{
; 8205 : #ifdef NQ_TRIBUTE_EASIER_WITH_LOCAL_POWER
; 8206 : 		iLocalPowerScore += 60;

	mov	eax, DWORD PTR _iLocalPowerScore$[ebp]
	add	eax, 60					; 0000003cH
	mov	DWORD PTR _iLocalPowerScore$[ebp], eax
	jmp	SHORT $LN31@CalculateB
$LN33@CalculateB:

; 8207 : #else
; 8208 : 		iLocalPowerScore += 50;
; 8209 : #endif
; 8210 : 	}
; 8211 : 	else if(fLocalPowerRatio >= 0.5)

	cvtss2sd xmm0, DWORD PTR _fLocalPowerRatio$[ebp]
	comisd	xmm0, QWORD PTR __real@3fe0000000000000
	jb	SHORT $LN31@CalculateB

; 8212 : 	{
; 8213 : #ifdef NQ_TRIBUTE_EASIER_WITH_LOCAL_POWER
; 8214 : 		iLocalPowerScore += 30;

	mov	ecx, DWORD PTR _iLocalPowerScore$[ebp]
	add	ecx, 30					; 0000001eH
	mov	DWORD PTR _iLocalPowerScore$[ebp], ecx
$LN31@CalculateB:

; 8215 : #else
; 8216 : 		iLocalPowerScore += 25;
; 8217 : #endif
; 8218 : 	}
; 8219 : 	iScore += iLocalPowerScore;

	mov	edx, DWORD PTR _iScore$[ebp]
	add	edx, DWORD PTR _iLocalPowerScore$[ebp]
	mov	DWORD PTR _iScore$[ebp], edx

; 8220 : 	
; 8221 : 	if (sTooltipSink)

	cmp	DWORD PTR _sTooltipSink$[ebp], 0
	je	SHORT $LN30@CalculateB

; 8222 : 	{
; 8223 : 		Localization::String strPositiveFactor = Localization::Lookup("TXT_KEY_POP_CSTATE_BULLY_FACTOR_POSITIVE");

	push	OFFSET ??_C@_0CJ@CHJNIFIH@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	eax, DWORD PTR _strPositiveFactor$227192[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 8224 : 		strPositiveFactor << iLocalPowerScore;

	lea	ecx, DWORD PTR _iLocalPowerScore$[ebp]
	push	ecx
	lea	edx, DWORD PTR _strPositiveFactor$227192[ebp]
	push	edx
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 8225 : 		strPositiveFactor << "TXT_KEY_POP_CSTATE_BULLY_FACTOR_MILITARY_PRESENCE";

	push	OFFSET ??_C@_0DC@MHCMDPGK@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	eax, DWORD PTR _strPositiveFactor$227192[ebp]
	push	eax
	call	??$?6$0DC@@@YAAAVString@Localization@@AAV01@AAY0DC@$$CBD@Z ; operator<<<50>
	add	esp, 8

; 8226 : 		sFactors += strPositiveFactor.toUTF8();

	lea	ecx, DWORD PTR _strPositiveFactor$227192[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 8227 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _strPositiveFactor$227192[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN30@CalculateB:

; 8228 : 
; 8229 : 	// **************************
; 8230 : 	// Social Policies
; 8231 : 	//
; 8232 : 	// Modifier to positive scores
; 8233 : 	// **************************
; 8234 : 	int iPoliciesScore = 0;

	mov	DWORD PTR _iPoliciesScore$[ebp], 0

; 8235 : 	int iPoliciesMod = GET_PLAYER(eBullyPlayer).GetPlayerPolicies()->GetNumericModifier(POLICYMOD_MINOR_BULLY_SCORE_MODIFIER);

	mov	ecx, DWORD PTR _eBullyPlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T245348[ebp], ecx
	push	39					; 00000027H
	mov	ecx, DWORD PTR $T245348[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	mov	DWORD PTR _iPoliciesMod$[ebp], eax

; 8236 : 	if (iPoliciesMod != 0)

	cmp	DWORD PTR _iPoliciesMod$[ebp], 0
	je	SHORT $LN29@CalculateB

; 8237 : 	{
; 8238 : 		iPoliciesScore += iGlobalMilitaryScore;

	mov	edx, DWORD PTR _iPoliciesScore$[ebp]
	add	edx, DWORD PTR _iGlobalMilitaryScore$[ebp]
	mov	DWORD PTR _iPoliciesScore$[ebp], edx

; 8239 : 		iPoliciesScore += iLocalPowerScore;

	mov	eax, DWORD PTR _iPoliciesScore$[ebp]
	add	eax, DWORD PTR _iLocalPowerScore$[ebp]
	mov	DWORD PTR _iPoliciesScore$[ebp], eax

; 8240 : 
; 8241 : 		iPoliciesScore *= iPoliciesMod;

	mov	ecx, DWORD PTR _iPoliciesScore$[ebp]
	imul	ecx, DWORD PTR _iPoliciesMod$[ebp]
	mov	DWORD PTR _iPoliciesScore$[ebp], ecx

; 8242 : 		iPoliciesScore /= 100;

	mov	eax, DWORD PTR _iPoliciesScore$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iPoliciesScore$[ebp], eax
$LN29@CalculateB:

; 8243 : 	}
; 8244 : 	if (sTooltipSink && iPoliciesScore != 0)

	cmp	DWORD PTR _sTooltipSink$[ebp], 0
	je	SHORT $LN28@CalculateB
	cmp	DWORD PTR _iPoliciesScore$[ebp], 0
	je	SHORT $LN28@CalculateB

; 8245 : 	{
; 8246 : 		Localization::String strPositiveFactor = Localization::Lookup("TXT_KEY_POP_CSTATE_BULLY_FACTOR_POSITIVE");

	push	OFFSET ??_C@_0CJ@CHJNIFIH@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	edx, DWORD PTR _strPositiveFactor$227215[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 8247 : 		strPositiveFactor << iPoliciesScore;

	lea	eax, DWORD PTR _iPoliciesScore$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strPositiveFactor$227215[ebp]
	push	ecx
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 8248 : 		strPositiveFactor << "TXT_KEY_POP_CSTATE_BULLY_FACTOR_GUNBOAT_DIPLOMACY";

	push	OFFSET ??_C@_0DC@NCFGOIMH@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	edx, DWORD PTR _strPositiveFactor$227215[ebp]
	push	edx
	call	??$?6$0DC@@@YAAAVString@Localization@@AAV01@AAY0DC@$$CBD@Z ; operator<<<50>
	add	esp, 8

; 8249 : 		sFactors += strPositiveFactor.toUTF8();

	lea	ecx, DWORD PTR _strPositiveFactor$227215[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 8250 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _strPositiveFactor$227215[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN28@CalculateB:

; 8251 : 	iScore += iPoliciesScore;

	mov	eax, DWORD PTR _iScore$[ebp]
	add	eax, DWORD PTR _iPoliciesScore$[ebp]
	mov	DWORD PTR _iScore$[ebp], eax

; 8252 : 
; 8253 : 	// **************************
; 8254 : 	// Base Reluctance
; 8255 : 	//
; 8256 : 	// -110
; 8257 : 	// **************************
; 8258 : 	const int iBaseReluctanceScore = -110;

	mov	DWORD PTR _iBaseReluctanceScore$[ebp], -110 ; ffffff92H

; 8259 : 	
; 8260 : 	if (sTooltipSink)

	cmp	DWORD PTR _sTooltipSink$[ebp], 0
	je	SHORT $LN27@CalculateB

; 8261 : 	{
; 8262 : 		Localization::String strNegativeFactor = Localization::Lookup("TXT_KEY_POP_CSTATE_BULLY_FACTOR_NEGATIVE");

	push	OFFSET ??_C@_0CJ@KNJNDKBM@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	ecx, DWORD PTR _strNegativeFactor$227220[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 5

; 8263 : 		strNegativeFactor << iBaseReluctanceScore;

	mov	DWORD PTR $T245015[ebp], -110		; ffffff92H
	lea	edx, DWORD PTR $T245015[ebp]
	push	edx
	lea	eax, DWORD PTR _strNegativeFactor$227220[ebp]
	push	eax
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 8264 : 		strNegativeFactor << "TXT_KEY_POP_CSTATE_BULLY_FACTOR_BASE_RELUCTANCE";

	push	OFFSET ??_C@_0DA@IDDOPKPK@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	ecx, DWORD PTR _strNegativeFactor$227220[ebp]
	push	ecx
	call	??$?6$0DA@@@YAAAVString@Localization@@AAV01@AAY0DA@$$CBD@Z ; operator<<<48>
	add	esp, 8

; 8265 : 		sFactors += strNegativeFactor.toUTF8();

	lea	ecx, DWORD PTR _strNegativeFactor$227220[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 8266 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _strNegativeFactor$227220[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN27@CalculateB:

; 8267 : 
; 8268 : 	iScore += iBaseReluctanceScore;

	mov	edx, DWORD PTR _iScore$[ebp]
	sub	edx, 110				; 0000006eH
	mov	DWORD PTR _iScore$[ebp], edx

; 8269 : 
; 8270 : 	// **************************
; 8271 : 	// Current influence of major
; 8272 : 	//
; 8273 : 	// -999 ~ -0
; 8274 : 	// **************************
; 8275 : 	if(GetEffectiveFriendshipWithMajor(eBullyPlayer) < GC.getFRIENDSHIP_THRESHOLD_CAN_BULLY())

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2848
	mov	DWORD PTR $T245352[ebp], eax
	mov	ecx, DWORD PTR _eBullyPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajor
	cmp	eax, DWORD PTR $T245352[ebp]
	jge	$LN25@CalculateB

; 8276 : 	{
; 8277 : 		int iInfluenceScore = iFailScore;

	mov	DWORD PTR _iInfluenceScore$227226[ebp], -300 ; fffffed4H

; 8278 : 		iScore += iInfluenceScore;

	mov	edx, DWORD PTR _iScore$[ebp]
	add	edx, DWORD PTR _iInfluenceScore$227226[ebp]
	mov	DWORD PTR _iScore$[ebp], edx

; 8279 : 		if (sTooltipSink)

	cmp	DWORD PTR _sTooltipSink$[ebp], 0
	je	SHORT $LN25@CalculateB

; 8280 : 		{
; 8281 : 			Localization::String strNegativeFactor = Localization::Lookup("TXT_KEY_POP_CSTATE_BULLY_FACTOR_NEGATIVE");

	push	OFFSET ??_C@_0CJ@KNJNDKBM@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	eax, DWORD PTR _strNegativeFactor$227228[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 6

; 8282 : 			strNegativeFactor << iInfluenceScore;

	lea	ecx, DWORD PTR _iInfluenceScore$227226[ebp]
	push	ecx
	lea	edx, DWORD PTR _strNegativeFactor$227228[ebp]
	push	edx
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 8283 : 			strNegativeFactor << "TXT_KEY_POP_CSTATE_BULLY_FACTOR_LOW_INFLUENCE";

	push	OFFSET ??_C@_0CO@OIBGNBDI@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	eax, DWORD PTR _strNegativeFactor$227228[ebp]
	push	eax
	call	??$?6$0CO@@@YAAAVString@Localization@@AAV01@AAY0CO@$$CBD@Z ; operator<<<46>
	add	esp, 8

; 8284 : 			sFactors += strNegativeFactor.toUTF8();

	lea	ecx, DWORD PTR _strNegativeFactor$227228[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 8285 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _strNegativeFactor$227228[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN25@CalculateB:

; 8286 : 	}
; 8287 : 
; 8288 : 	// **************************
; 8289 : 	// Previous bully attempts
; 8290 : 	//
; 8291 : 	// -300 ~ -0
; 8292 : 	// **************************
; 8293 : 	int iLastBullyTurn = GetTurnLastBulliedByMajor(eBullyPlayer);

	mov	ecx, DWORD PTR _eBullyPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTurnLastBulliedByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetTurnLastBulliedByMajor
	mov	DWORD PTR _iLastBullyTurn$[ebp], eax

; 8294 : 	if(iLastBullyTurn >= 0)

	cmp	DWORD PTR _iLastBullyTurn$[ebp], 0
	jl	$LN19@CalculateB

; 8295 : 	{
; 8296 : 		if(iLastBullyTurn + 10 >= GC.getGame().getGameTurn())

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T245356[ebp], edx
	mov	esi, DWORD PTR _iLastBullyTurn$[ebp]
	add	esi, 10					; 0000000aH
	mov	ecx, DWORD PTR $T245356[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	cmp	esi, eax
	jl	$LN23@CalculateB

; 8297 : 		{
; 8298 : 			int iBulliedVeryRecentlyScore = iFailScore;

	mov	DWORD PTR _iBulliedVeryRecentlyScore$227250[ebp], -300 ; fffffed4H

; 8299 : 			iScore += iBulliedVeryRecentlyScore;

	mov	eax, DWORD PTR _iScore$[ebp]
	add	eax, DWORD PTR _iBulliedVeryRecentlyScore$227250[ebp]
	mov	DWORD PTR _iScore$[ebp], eax

; 8300 : 			if (sTooltipSink)

	cmp	DWORD PTR _sTooltipSink$[ebp], 0
	je	SHORT $LN22@CalculateB

; 8301 : 			{
; 8302 : 				Localization::String strNegativeFactor = Localization::Lookup("TXT_KEY_POP_CSTATE_BULLY_FACTOR_NEGATIVE");

	push	OFFSET ??_C@_0CJ@KNJNDKBM@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	ecx, DWORD PTR _strNegativeFactor$227252[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 7

; 8303 : 				strNegativeFactor << iBulliedVeryRecentlyScore;

	lea	edx, DWORD PTR _iBulliedVeryRecentlyScore$227250[ebp]
	push	edx
	lea	eax, DWORD PTR _strNegativeFactor$227252[ebp]
	push	eax
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 8304 : 				strNegativeFactor << "TXT_KEY_POP_CSTATE_BULLY_FACTOR_BULLIED_VERY_RECENTLY";

	push	OFFSET ??_C@_0DG@HNBOLHJJ@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	ecx, DWORD PTR _strNegativeFactor$227252[ebp]
	push	ecx
	call	??$?6$0DG@@@YAAAVString@Localization@@AAV01@AAY0DG@$$CBD@Z ; operator<<<54>
	add	esp, 8

; 8305 : 				sFactors += strNegativeFactor.toUTF8();

	lea	ecx, DWORD PTR _strNegativeFactor$227252[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 8306 : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _strNegativeFactor$227252[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN22@CalculateB:

; 8307 : 		}

	jmp	$LN19@CalculateB
$LN23@CalculateB:

; 8308 : 		else if(iLastBullyTurn + 20 >= GC.getGame().getGameTurn())

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T245360[ebp], edx
	mov	esi, DWORD PTR _iLastBullyTurn$[ebp]
	add	esi, 20					; 00000014H
	mov	ecx, DWORD PTR $T245360[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	cmp	esi, eax
	jl	$LN19@CalculateB

; 8309 : 		{
; 8310 : 			int iBulliedRecentlyScore = -40;

	mov	DWORD PTR _iBulliedRecentlyScore$227273[ebp], -40 ; ffffffd8H

; 8311 : 			iScore += iBulliedRecentlyScore;

	mov	eax, DWORD PTR _iScore$[ebp]
	add	eax, DWORD PTR _iBulliedRecentlyScore$227273[ebp]
	mov	DWORD PTR _iScore$[ebp], eax

; 8312 : 			if (sTooltipSink)

	cmp	DWORD PTR _sTooltipSink$[ebp], 0
	je	SHORT $LN19@CalculateB

; 8313 : 			{
; 8314 : 				Localization::String strNegativeFactor = Localization::Lookup("TXT_KEY_POP_CSTATE_BULLY_FACTOR_NEGATIVE");

	push	OFFSET ??_C@_0CJ@KNJNDKBM@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	ecx, DWORD PTR _strNegativeFactor$227275[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 8

; 8315 : 				strNegativeFactor << iBulliedRecentlyScore;

	lea	edx, DWORD PTR _iBulliedRecentlyScore$227273[ebp]
	push	edx
	lea	eax, DWORD PTR _strNegativeFactor$227275[ebp]
	push	eax
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 8316 : 				strNegativeFactor << "TXT_KEY_POP_CSTATE_BULLY_FACTOR_BULLIED_RECENTLY";

	push	OFFSET ??_C@_0DB@ICLEFKIA@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	ecx, DWORD PTR _strNegativeFactor$227275[ebp]
	push	ecx
	call	??$?6$0DB@@@YAAAVString@Localization@@AAV01@AAY0DB@$$CBD@Z ; operator<<<49>
	add	esp, 8

; 8317 : 				sFactors += strNegativeFactor.toUTF8();

	lea	ecx, DWORD PTR _strNegativeFactor$227275[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 8318 : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _strNegativeFactor$227275[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN19@CalculateB:

; 8319 : 		}
; 8320 : 	}
; 8321 : 
; 8322 : 	// **************************
; 8323 : 	// Tribute type
; 8324 : 	//
; 8325 : 	// -30 ~ -0
; 8326 : 	// **************************
; 8327 : 	if (bForUnit)

	movzx	edx, BYTE PTR _bForUnit$[ebp]
	test	edx, edx
	je	$LN17@CalculateB

; 8328 : 	{
; 8329 : 		int iUnitScore = -30;

	mov	DWORD PTR _iUnitScore$227295[ebp], -30	; ffffffe2H

; 8330 : 		iScore += iUnitScore;

	mov	eax, DWORD PTR _iScore$[ebp]
	add	eax, DWORD PTR _iUnitScore$227295[ebp]
	mov	DWORD PTR _iScore$[ebp], eax

; 8331 : 		if (sTooltipSink)

	cmp	DWORD PTR _sTooltipSink$[ebp], 0
	je	SHORT $LN17@CalculateB

; 8332 : 		{
; 8333 : 			Localization::String strNegativeFactor = Localization::Lookup("TXT_KEY_POP_CSTATE_BULLY_FACTOR_NEGATIVE");

	push	OFFSET ??_C@_0CJ@KNJNDKBM@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	ecx, DWORD PTR _strNegativeFactor$227297[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 9

; 8334 : 			strNegativeFactor << iUnitScore;

	lea	edx, DWORD PTR _iUnitScore$227295[ebp]
	push	edx
	lea	eax, DWORD PTR _strNegativeFactor$227297[ebp]
	push	eax
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 8335 : 			strNegativeFactor << "TXT_KEY_POP_CSTATE_BULLY_FACTOR_UNIT_RELUCTANCE";

	push	OFFSET ??_C@_0DA@BBHMGGCE@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	ecx, DWORD PTR _strNegativeFactor$227297[ebp]
	push	ecx
	call	??$?6$0DA@@@YAAAVString@Localization@@AAV01@AAY0DA@$$CBD@Z ; operator<<<48>
	add	esp, 8

; 8336 : 			sFactors += strNegativeFactor.toUTF8();

	lea	ecx, DWORD PTR _strNegativeFactor$227297[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 8337 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _strNegativeFactor$227297[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN17@CalculateB:

; 8338 : 	}
; 8339 : 
; 8340 : 	// **************************
; 8341 : 	// City-State population
; 8342 : 	//
; 8343 : 	// -300 ~ -0
; 8344 : 	// **************************
; 8345 : 	if (bForUnit)

	movzx	edx, BYTE PTR _bForUnit$[ebp]
	test	edx, edx
	je	$LN13@CalculateB

; 8346 : 	{
; 8347 : 		if (GetPlayer()->getCapitalCity() == NULL || GetPlayer()->getCapitalCity()->getPopulation() < 4)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	test	eax, eax
	je	SHORT $LN14@CalculateB
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	ecx, eax
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	cmp	eax, 4
	jge	$LN13@CalculateB
$LN14@CalculateB:

; 8348 : 		{
; 8349 : 			int iPopulationScore = iFailScore;

	mov	DWORD PTR _iPopulationScore$227303[ebp], -300 ; fffffed4H

; 8350 : 			iScore += iPopulationScore;

	mov	eax, DWORD PTR _iScore$[ebp]
	add	eax, DWORD PTR _iPopulationScore$227303[ebp]
	mov	DWORD PTR _iScore$[ebp], eax

; 8351 : 			if (sTooltipSink)

	cmp	DWORD PTR _sTooltipSink$[ebp], 0
	je	SHORT $LN13@CalculateB

; 8352 : 			{
; 8353 : 				Localization::String strNegativeFactor = Localization::Lookup("TXT_KEY_POP_CSTATE_BULLY_FACTOR_NEGATIVE");

	push	OFFSET ??_C@_0CJ@KNJNDKBM@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	ecx, DWORD PTR _strNegativeFactor$227305[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH

; 8354 : 				strNegativeFactor << iPopulationScore;

	lea	edx, DWORD PTR _iPopulationScore$227303[ebp]
	push	edx
	lea	eax, DWORD PTR _strNegativeFactor$227305[ebp]
	push	eax
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 8355 : 				strNegativeFactor << "TXT_KEY_POP_CSTATE_BULLY_FACTOR_LOW_POPULATION";

	push	OFFSET ??_C@_0CP@OBOKDNNF@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	ecx, DWORD PTR _strNegativeFactor$227305[ebp]
	push	ecx
	call	??$?6$0CP@@@YAAAVString@Localization@@AAV01@AAY0CP@$$CBD@Z ; operator<<<47>
	add	esp, 8

; 8356 : 				sFactors += strNegativeFactor.toUTF8();

	lea	ecx, DWORD PTR _strNegativeFactor$227305[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 8357 : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _strNegativeFactor$227305[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN13@CalculateB:

; 8358 : 		}
; 8359 : 	}
; 8360 : 
; 8361 : 	// **************************
; 8362 : 	// Passive Support from other majors
; 8363 : 	//
; 8364 : 	// -10 ~ -0
; 8365 : 	// **************************
; 8366 : 	if(GetAlly() != NO_PLAYER && GetAlly() != eBullyPlayer)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetAlly
	cmp	eax, -1
	je	$LN11@CalculateB
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetAlly
	cmp	eax, DWORD PTR _eBullyPlayer$[ebp]
	je	$LN11@CalculateB

; 8367 : 	{
; 8368 : 		int iAllyScore = -10;

	mov	DWORD PTR _iAllyScore$227325[ebp], -10	; fffffff6H

; 8369 : 		iScore += iAllyScore;

	mov	edx, DWORD PTR _iScore$[ebp]
	add	edx, DWORD PTR _iAllyScore$227325[ebp]
	mov	DWORD PTR _iScore$[ebp], edx

; 8370 : 		if (sTooltipSink)

	cmp	DWORD PTR _sTooltipSink$[ebp], 0
	je	SHORT $LN11@CalculateB

; 8371 : 		{
; 8372 : 			Localization::String strNegativeFactor = Localization::Lookup("TXT_KEY_POP_CSTATE_BULLY_FACTOR_NEGATIVE");

	push	OFFSET ??_C@_0CJ@KNJNDKBM@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	eax, DWORD PTR _strNegativeFactor$227327[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH

; 8373 : 			strNegativeFactor << iAllyScore;

	lea	ecx, DWORD PTR _iAllyScore$227325[ebp]
	push	ecx
	lea	edx, DWORD PTR _strNegativeFactor$227327[ebp]
	push	edx
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 8374 : 			strNegativeFactor << "TXT_KEY_POP_CSTATE_BULLY_FACTOR_ALLIES";

	push	OFFSET ??_C@_0CH@PBIFPGNJ@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	eax, DWORD PTR _strNegativeFactor$227327[ebp]
	push	eax
	call	??$?6$0CH@@@YAAAVString@Localization@@AAV01@AAY0CH@$$CBD@Z ; operator<<<39>
	add	esp, 8

; 8375 : 			sFactors += strNegativeFactor.toUTF8();

	lea	ecx, DWORD PTR _strNegativeFactor$227327[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 8376 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _strNegativeFactor$227327[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN11@CalculateB:

; 8377 : 	}
; 8378 : 
; 8379 : 	// **************************
; 8380 : 	// Pledges of Protection from other majors
; 8381 : 	//
; 8382 : 	// -20 ~ -0
; 8383 : 	// **************************
; 8384 : 	for(int iMajorLoop = 0; iMajorLoop < MAX_MAJOR_CIVS; iMajorLoop++)

	mov	DWORD PTR _iMajorLoop$227346[ebp], 0
	jmp	SHORT $LN10@CalculateB
$LN9@CalculateB:
	mov	ecx, DWORD PTR _iMajorLoop$227346[ebp]
	add	ecx, 1
	mov	DWORD PTR _iMajorLoop$227346[ebp], ecx
$LN10@CalculateB:
	cmp	DWORD PTR _iMajorLoop$227346[ebp], 22	; 00000016H
	jge	$LN8@CalculateB

; 8385 : 	{
; 8386 : 		int iProtectionScore = 0;

	mov	DWORD PTR _iProtectionScore$227350[ebp], 0

; 8387 : 		eMajorLoop = (PlayerTypes) iMajorLoop;

	mov	edx, DWORD PTR _iMajorLoop$227346[ebp]
	mov	DWORD PTR _eMajorLoop$[ebp], edx

; 8388 : 		if(eMajorLoop != eBullyPlayer && IsProtectedByMajor(eMajorLoop))

	mov	eax, DWORD PTR _eMajorLoop$[ebp]
	cmp	eax, DWORD PTR _eBullyPlayer$[ebp]
	je	$LN7@CalculateB
	mov	ecx, DWORD PTR _eMajorLoop$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsProtectedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsProtectedByMajor
	movzx	edx, al
	test	edx, edx
	je	$LN7@CalculateB

; 8389 : 		{
; 8390 : 			iProtectionScore += -20;

	mov	eax, DWORD PTR _iProtectionScore$227350[ebp]
	sub	eax, 20					; 00000014H
	mov	DWORD PTR _iProtectionScore$227350[ebp], eax

; 8391 : 			iScore += iProtectionScore;

	mov	ecx, DWORD PTR _iScore$[ebp]
	add	ecx, DWORD PTR _iProtectionScore$227350[ebp]
	mov	DWORD PTR _iScore$[ebp], ecx

; 8392 : 			if (sTooltipSink)

	cmp	DWORD PTR _sTooltipSink$[ebp], 0
	je	SHORT $LN6@CalculateB

; 8393 : 			{
; 8394 : 				Localization::String strNegativeFactor = Localization::Lookup("TXT_KEY_POP_CSTATE_BULLY_FACTOR_NEGATIVE");

	push	OFFSET ??_C@_0CJ@KNJNDKBM@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	edx, DWORD PTR _strNegativeFactor$227354[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH

; 8395 : 				strNegativeFactor << iProtectionScore;

	lea	eax, DWORD PTR _iProtectionScore$227350[ebp]
	push	eax
	lea	ecx, DWORD PTR _strNegativeFactor$227354[ebp]
	push	ecx
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 8396 : 				strNegativeFactor << "TXT_KEY_POP_CSTATE_BULLY_FACTOR_PLEDGES_TO_PROTECT";

	push	OFFSET ??_C@_0DD@JJMKDHJB@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	edx, DWORD PTR _strNegativeFactor$227354[ebp]
	push	edx
	call	??$?6$0DD@@@YAAAVString@Localization@@AAV01@AAY0DD@$$CBD@Z ; operator<<<51>
	add	esp, 8

; 8397 : 				sFactors += strNegativeFactor.toUTF8();

	lea	ecx, DWORD PTR _strNegativeFactor$227354[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 8398 : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _strNegativeFactor$227354[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN6@CalculateB:

; 8399 : 			break;

	jmp	SHORT $LN8@CalculateB
$LN7@CalculateB:

; 8400 : 		}
; 8401 : 	}

	jmp	$LN9@CalculateB
$LN8@CalculateB:

; 8402 : 
; 8403 : 	// **************************
; 8404 : 	// Minor Civ Type
; 8405 : 	//
; 8406 : 	// -20 ~ -0
; 8407 : 	// **************************
; 8408 : 	if(GetPersonality() == MINOR_CIV_PERSONALITY_HOSTILE)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPersonality@CvMinorCivAI@@QBE?AW4MinorCivPersonalityTypes@@XZ ; CvMinorCivAI::GetPersonality
	cmp	eax, 2
	jne	$LN4@CalculateB

; 8409 : 	{
; 8410 : 		int iHostileScore = -10;

	mov	DWORD PTR _iHostileScore$227374[ebp], -10 ; fffffff6H

; 8411 : 		iScore += iHostileScore;

	mov	eax, DWORD PTR _iScore$[ebp]
	add	eax, DWORD PTR _iHostileScore$227374[ebp]
	mov	DWORD PTR _iScore$[ebp], eax

; 8412 : 		if (sTooltipSink)

	cmp	DWORD PTR _sTooltipSink$[ebp], 0
	je	SHORT $LN4@CalculateB

; 8413 : 		{
; 8414 : 			Localization::String strNegativeFactor = Localization::Lookup("TXT_KEY_POP_CSTATE_BULLY_FACTOR_NEGATIVE");

	push	OFFSET ??_C@_0CJ@KNJNDKBM@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	ecx, DWORD PTR _strNegativeFactor$227376[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH

; 8415 : 			strNegativeFactor << iHostileScore;

	lea	edx, DWORD PTR _iHostileScore$227374[ebp]
	push	edx
	lea	eax, DWORD PTR _strNegativeFactor$227376[ebp]
	push	eax
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 8416 : 			strNegativeFactor << "TXT_KEY_POP_CSTATE_BULLY_FACTOR_HOSTILE";

	push	OFFSET ??_C@_0CI@GLALONPI@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	ecx, DWORD PTR _strNegativeFactor$227376[ebp]
	push	ecx
	call	??$?6$0CI@@@YAAAVString@Localization@@AAV01@AAY0CI@$$CBD@Z ; operator<<<40>
	add	esp, 8

; 8417 : 			sFactors += strNegativeFactor.toUTF8();

	lea	ecx, DWORD PTR _strNegativeFactor$227376[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 8418 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _strNegativeFactor$227376[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN4@CalculateB:

; 8419 : 	}
; 8420 : 	if(GetTrait() == MINOR_CIV_TRAIT_MILITARISTIC)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait
	cmp	eax, 1
	jne	$LN2@CalculateB

; 8421 : 	{
; 8422 : 		int iMilitaristicScore = -10;

	mov	DWORD PTR _iMilitaristicScore$227396[ebp], -10 ; fffffff6H

; 8423 : 		iScore += iMilitaristicScore;

	mov	edx, DWORD PTR _iScore$[ebp]
	add	edx, DWORD PTR _iMilitaristicScore$227396[ebp]
	mov	DWORD PTR _iScore$[ebp], edx

; 8424 : 		if (sTooltipSink)

	cmp	DWORD PTR _sTooltipSink$[ebp], 0
	je	SHORT $LN2@CalculateB

; 8425 : 		{
; 8426 : 			Localization::String strNegativeFactor = Localization::Lookup("TXT_KEY_POP_CSTATE_BULLY_FACTOR_NEGATIVE");

	push	OFFSET ??_C@_0CJ@KNJNDKBM@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	eax, DWORD PTR _strNegativeFactor$227398[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH

; 8427 : 			strNegativeFactor << iMilitaristicScore;

	lea	ecx, DWORD PTR _iMilitaristicScore$227396[ebp]
	push	ecx
	lea	edx, DWORD PTR _strNegativeFactor$227398[ebp]
	push	edx
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 8428 : 			strNegativeFactor << "TXT_KEY_POP_CSTATE_BULLY_FACTOR_MILITARISTIC";

	push	OFFSET ??_C@_0CN@BICGDNCG@TXT_KEY_POP_CSTATE_BULLY_FACTOR_@
	lea	eax, DWORD PTR _strNegativeFactor$227398[ebp]
	push	eax
	call	??$?6$0CN@@@YAAAVString@Localization@@AAV01@AAY0CN@$$CBD@Z ; operator<<<45>
	add	esp, 8

; 8429 : 			sFactors += strNegativeFactor.toUTF8();

	lea	ecx, DWORD PTR _strNegativeFactor$227398[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 8430 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _strNegativeFactor$227398[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN2@CalculateB:

; 8431 : 	}
; 8432 : 
; 8433 : 	if (sTooltipSink != NULL)

	cmp	DWORD PTR _sTooltipSink$[ebp], 0
	je	SHORT $LN1@CalculateB

; 8434 : 	{
; 8435 : 		(*sTooltipSink) += sFactors;

	lea	ecx, DWORD PTR _sFactors$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _sTooltipSink$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
$LN1@CalculateB:

; 8436 : 	}
; 8437 : 
; 8438 : 	return iScore;

	mov	edx, DWORD PTR _iScore$[ebp]
	mov	DWORD PTR $T245016[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _veMilitaryRankings$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>::~FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T245016[ebp]
$LN69@CalculateB:

; 8439 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$0:
	lea	ecx, DWORD PTR _sFactors$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$1:
	lea	ecx, DWORD PTR _veMilitaryRankings$[ebp]
	jmp	??1?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@QAE@XZ ; CvWeightedVector<enum PlayerTypes,22,1>::~CvWeightedVector<enum PlayerTypes,22,1>
__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$2:
	lea	ecx, DWORD PTR _strPositiveFactor$227125[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$3:
	lea	ecx, DWORD PTR _strPositiveFactor$227192[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$4:
	lea	ecx, DWORD PTR _strPositiveFactor$227215[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$5:
	lea	ecx, DWORD PTR _strNegativeFactor$227220[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$6:
	lea	ecx, DWORD PTR _strNegativeFactor$227228[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$7:
	lea	ecx, DWORD PTR _strNegativeFactor$227252[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$8:
	lea	ecx, DWORD PTR _strNegativeFactor$227275[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$9:
	lea	ecx, DWORD PTR _strNegativeFactor$227297[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$10:
	lea	ecx, DWORD PTR _strNegativeFactor$227305[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$11:
	lea	ecx, DWORD PTR _strNegativeFactor$227327[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$12:
	lea	ecx, DWORD PTR _strNegativeFactor$227354[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$13:
	lea	ecx, DWORD PTR _strNegativeFactor$227376[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z$14:
	lea	ecx, DWORD PTR _strNegativeFactor$227398[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1700]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z ENDP ; CvMinorCivAI::CalculateBullyMetric
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
;	COMDAT ?plotXYWithRangeCheck@@YAPAVCvPlot@@HHHHH@Z
_TEXT	SEGMENT
tv83 = -96						; size = 4
tv81 = -92						; size = 4
tv78 = -88						; size = 4
tv74 = -84						; size = 4
tv71 = -80						; size = 4
_iAbsDY$217890 = -20					; size = 4
_iAbsDX$217889 = -16					; size = 4
_iAbsDY$217887 = -12					; size = 4
_iAbsDX$217886 = -8					; size = 4
_hexRange$ = -4						; size = 4
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
_iDX$ = 16						; size = 4
_iDY$ = 20						; size = 4
_iRange$ = 24						; size = 4
?plotXYWithRangeCheck@@YAPAVCvPlot@@HHHHH@Z PROC	; plotXYWithRangeCheck, COMDAT

; 233  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H

; 234  : #ifdef NQM_GAME_CORE_UTILS_OPTIMIZATIONS
; 235  : 	// I'm assuming iDX and iDY are in hex-space
; 236  : 	if (hexDistance(iDX, iDY) > iRange)
; 237  : #else
; 238  : 	int hexRange;
; 239  : 
; 240  : 	// I'm assuming iDX and iDY are in hex-space
; 241  : 	if((iDX >= 0) == (iDY >= 0))  // the signs match

	xor	eax, eax
	cmp	DWORD PTR _iDX$[ebp], 0
	setge	al
	xor	ecx, ecx
	cmp	DWORD PTR _iDY$[ebp], 0
	setge	cl
	cmp	eax, ecx
	jne	SHORT $LN3@plotXYWith

; 242  : 	{
; 243  : 		int iAbsDX = iDX >= 0 ? iDX : -iDX;

	cmp	DWORD PTR _iDX$[ebp], 0
	jl	SHORT $LN6@plotXYWith
	mov	edx, DWORD PTR _iDX$[ebp]
	mov	DWORD PTR tv71[ebp], edx
	jmp	SHORT $LN7@plotXYWith
$LN6@plotXYWith:
	mov	eax, DWORD PTR _iDX$[ebp]
	neg	eax
	mov	DWORD PTR tv71[ebp], eax
$LN7@plotXYWith:
	mov	ecx, DWORD PTR tv71[ebp]
	mov	DWORD PTR _iAbsDX$217886[ebp], ecx

; 244  : 		int iAbsDY = iDY >= 0 ? iDY : -iDY;

	cmp	DWORD PTR _iDY$[ebp], 0
	jl	SHORT $LN8@plotXYWith
	mov	edx, DWORD PTR _iDY$[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN9@plotXYWith
$LN8@plotXYWith:
	mov	eax, DWORD PTR _iDY$[ebp]
	neg	eax
	mov	DWORD PTR tv74[ebp], eax
$LN9@plotXYWith:
	mov	ecx, DWORD PTR tv74[ebp]
	mov	DWORD PTR _iAbsDY$217887[ebp], ecx

; 245  : 		hexRange = iAbsDX + iAbsDY;

	mov	edx, DWORD PTR _iAbsDX$217886[ebp]
	add	edx, DWORD PTR _iAbsDY$217887[ebp]
	mov	DWORD PTR _hexRange$[ebp], edx

; 246  : 	}
; 247  : 	else

	jmp	SHORT $LN2@plotXYWith
$LN3@plotXYWith:

; 248  : 	{
; 249  : 		int iAbsDX = iDX >= 0 ? iDX : -iDX;

	cmp	DWORD PTR _iDX$[ebp], 0
	jl	SHORT $LN10@plotXYWith
	mov	eax, DWORD PTR _iDX$[ebp]
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN11@plotXYWith
$LN10@plotXYWith:
	mov	ecx, DWORD PTR _iDX$[ebp]
	neg	ecx
	mov	DWORD PTR tv78[ebp], ecx
$LN11@plotXYWith:
	mov	edx, DWORD PTR tv78[ebp]
	mov	DWORD PTR _iAbsDX$217889[ebp], edx

; 250  : 		int iAbsDY = iDY >= 0 ? iDY : -iDY;

	cmp	DWORD PTR _iDY$[ebp], 0
	jl	SHORT $LN12@plotXYWith
	mov	eax, DWORD PTR _iDY$[ebp]
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN13@plotXYWith
$LN12@plotXYWith:
	mov	ecx, DWORD PTR _iDY$[ebp]
	neg	ecx
	mov	DWORD PTR tv81[ebp], ecx
$LN13@plotXYWith:
	mov	edx, DWORD PTR tv81[ebp]
	mov	DWORD PTR _iAbsDY$217890[ebp], edx

; 251  : 		hexRange = iAbsDX >= iAbsDY ? iAbsDX : iAbsDY;

	mov	eax, DWORD PTR _iAbsDX$217889[ebp]
	cmp	eax, DWORD PTR _iAbsDY$217890[ebp]
	jl	SHORT $LN14@plotXYWith
	mov	ecx, DWORD PTR _iAbsDX$217889[ebp]
	mov	DWORD PTR tv83[ebp], ecx
	jmp	SHORT $LN15@plotXYWith
$LN14@plotXYWith:
	mov	edx, DWORD PTR _iAbsDY$217890[ebp]
	mov	DWORD PTR tv83[ebp], edx
$LN15@plotXYWith:
	mov	eax, DWORD PTR tv83[ebp]
	mov	DWORD PTR _hexRange$[ebp], eax
$LN2@plotXYWith:

; 252  : 	}
; 253  : 
; 254  : 	if(hexRange > iRange)

	mov	ecx, DWORD PTR _hexRange$[ebp]
	cmp	ecx, DWORD PTR _iRange$[ebp]
	jle	SHORT $LN1@plotXYWith

; 255  : #endif
; 256  : 	{
; 257  : 		return NULL;

	xor	eax, eax
	jmp	SHORT $LN4@plotXYWith
$LN1@plotXYWith:

; 258  : 	}
; 259  : 
; 260  : 	return plotXY(iX, iY, iDX, iDY);

	mov	edx, DWORD PTR _iDY$[ebp]
	push	edx
	mov	eax, DWORD PTR _iDX$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iY$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iX$[ebp]
	push	edx
	call	?plotXY@@YAPAVCvPlot@@HHHH@Z		; plotXY
	add	esp, 16					; 00000010H
$LN4@plotXYWith:

; 261  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?plotXYWithRangeCheck@@YAPAVCvPlot@@HHHHH@Z ENDP	; plotXYWithRangeCheck
_TEXT	ENDS
PUBLIC	?CanMajorBullyGold@CvMinorCivAI@@QAE_NW4PlayerTypes@@H@Z ; CvMinorCivAI::CanMajorBullyGold
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
;	COMDAT ?CanMajorBullyGold@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T245558 = -9						; size = 1
$T245557 = -8						; size = 4
_iScore$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?CanMajorBullyGold@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::CanMajorBullyGold, COMDAT
; _this$ = ecx

; 8442 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 8443 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 8444 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 8445 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return false;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN2@CanMajorBu@2
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN3@CanMajorBu@2
$LN2@CanMajorBu@2:
	xor	al, al
	jmp	SHORT $LN4@CanMajorBu@2
$LN3@CanMajorBu@2:

; 8446 : 
; 8447 : 	// Can't bully us if we're dead!
; 8448 : 	if(!GetPlayer()->isAlive())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T245557[ebp], eax
	mov	eax, DWORD PTR $T245557[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T245558[ebp], cl
	movzx	edx, BYTE PTR $T245558[ebp]
	test	edx, edx
	jne	SHORT $LN1@CanMajorBu@2

; 8449 : 		return false;

	xor	al, al
	jmp	SHORT $LN4@CanMajorBu@2
$LN1@CanMajorBu@2:

; 8450 : 
; 8451 : 	int iScore = CalculateBullyMetric(ePlayer, /*bForUnit*/false);

	push	0
	push	0
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z ; CvMinorCivAI::CalculateBullyMetric
	mov	DWORD PTR _iScore$[ebp], eax

; 8452 : 	return CanMajorBullyGold(ePlayer, iScore);

	mov	ecx, DWORD PTR _iScore$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CanMajorBullyGold@CvMinorCivAI@@QAE_NW4PlayerTypes@@H@Z ; CvMinorCivAI::CanMajorBullyGold
$LN4@CanMajorBu@2:

; 8453 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?CanMajorBullyGold@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::CanMajorBullyGold
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?CanMajorBullyGold@CvMinorCivAI@@QAE_NW4PlayerTypes@@H@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T245570 = -5						; size = 1
$T245569 = -4						; size = 4
_ePlayer$ = 8						; size = 4
_iSpecifiedBullyMetric$ = 12				; size = 4
?CanMajorBullyGold@CvMinorCivAI@@QAE_NW4PlayerTypes@@H@Z PROC ; CvMinorCivAI::CanMajorBullyGold, COMDAT
; _this$ = ecx

; 8457 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 8458 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 8459 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 8460 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return false;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN2@CanMajorBu@3
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN3@CanMajorBu@3
$LN2@CanMajorBu@3:
	xor	al, al
	jmp	SHORT $LN4@CanMajorBu@3
$LN3@CanMajorBu@3:

; 8461 : 
; 8462 : 	// Can't bully us if we're dead!
; 8463 : 	if(!GetPlayer()->isAlive())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T245569[ebp], eax
	mov	eax, DWORD PTR $T245569[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T245570[ebp], cl
	movzx	edx, BYTE PTR $T245570[ebp]
	test	edx, edx
	jne	SHORT $LN1@CanMajorBu@3

; 8464 : 		return false;

	xor	al, al
	jmp	SHORT $LN4@CanMajorBu@3
$LN1@CanMajorBu@3:

; 8465 : 
; 8466 : 	return (iSpecifiedBullyMetric >= 0);

	xor	eax, eax
	cmp	DWORD PTR _iSpecifiedBullyMetric$[ebp], 0
	setge	al
$LN4@CanMajorBu@3:

; 8467 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?CanMajorBullyGold@CvMinorCivAI@@QAE_NW4PlayerTypes@@H@Z ENDP ; CvMinorCivAI::CanMajorBullyGold
_TEXT	ENDS
PUBLIC	??_C@_0CB@KMKOILEP@TXT_KEY_POP_CSTATE_BULLY_GOLD_TT@ ; `string'
PUBLIC	??_C@_0CD@MMCKAMNP@TXT_KEY_POP_CSTATE_BULLY_RESILIE@ ; `string'
PUBLIC	??_C@_0CA@IAMMOKHG@TXT_KEY_POP_CSTATE_BULLY_AFRAID?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z ; CvMinorCivAI::GetMajorBullyGoldDetails
;	COMDAT ??_C@_0CB@KMKOILEP@TXT_KEY_POP_CSTATE_BULLY_GOLD_TT@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0CB@KMKOILEP@TXT_KEY_POP_CSTATE_BULLY_GOLD_TT@ DB 'TXT_KEY_POP_CSTA'
	DB	'TE_BULLY_GOLD_TT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@MMCKAMNP@TXT_KEY_POP_CSTATE_BULLY_RESILIE@
CONST	SEGMENT
??_C@_0CD@MMCKAMNP@TXT_KEY_POP_CSTATE_BULLY_RESILIE@ DB 'TXT_KEY_POP_CSTA'
	DB	'TE_BULLY_RESILIENT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@IAMMOKHG@TXT_KEY_POP_CSTATE_BULLY_AFRAID?$AA@
CONST	SEGMENT
??_C@_0CA@IAMMOKHG@TXT_KEY_POP_CSTATE_BULLY_AFRAID?$AA@ DB 'TXT_KEY_POP_C'
	DB	'STATE_BULLY_AFRAID', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z$4
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
tv193 = -328						; size = 4
tv154 = -324						; size = 4
tv83 = -320						; size = 4
tv180 = -316						; size = 4
tv167 = -312						; size = 4
_this$ = -308						; size = 4
$T245607 = -304						; size = 4
$T245577 = -300						; size = 4
$T245575 = -296						; size = 4
$T245574 = -292						; size = 80
_sFactors$ = -212					; size = 28
__$ArrayPad$ = -184					; size = 4
_sResult$ = -180					; size = 80
_sFear$ = -100						; size = 80
_bCanBully$ = -17					; size = 1
_iScore$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_ePlayer$ = 12						; size = 4
?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetMajorBullyGoldDetails, COMDAT
; _this$ = ecx

; 8470 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 316				; 0000013cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T245577[ebp], 0

; 8471 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 8472 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 8473 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return "";

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN2@GetMajorBu
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN3@GetMajorBu
$LN2@GetMajorBu:
	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
	test	eax, eax
	je	SHORT $LN14@GetMajorBu
	mov	DWORD PTR tv167[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	SHORT $LN15@GetMajorBu
$LN14@GetMajorBu:
	mov	DWORD PTR tv167[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN15@GetMajorBu:
	mov	ecx, DWORD PTR tv167[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T245577[ebp]
	or	edx, 1
	mov	DWORD PTR $T245577[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN4@GetMajorBu
$LN3@GetMajorBu:

; 8474 : 	
; 8475 : 	CvString sFactors = "";

	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
	test	eax, eax
	je	SHORT $LN19@GetMajorBu
	mov	DWORD PTR tv180[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	SHORT $LN20@GetMajorBu
$LN19@GetMajorBu:
	mov	DWORD PTR tv180[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN20@GetMajorBu:
	mov	ecx, DWORD PTR tv180[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 8476 : 	int iScore = CalculateBullyMetric(ePlayer, /*bForUnit*/false, &sFactors);

	lea	edx, DWORD PTR _sFactors$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z ; CvMinorCivAI::CalculateBullyMetric
	mov	DWORD PTR _iScore$[ebp], eax

; 8477 : 	bool bCanBully = CanMajorBullyGold(ePlayer, iScore);

	mov	ecx, DWORD PTR _iScore$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CanMajorBullyGold@CvMinorCivAI@@QAE_NW4PlayerTypes@@H@Z ; CvMinorCivAI::CanMajorBullyGold
	mov	BYTE PTR _bCanBully$[ebp], al

; 8478 : 
; 8479 : 	Localization::String sFear = Localization::Lookup("TXT_KEY_POP_CSTATE_BULLY_AFRAID");

	push	OFFSET ??_C@_0CA@IAMMOKHG@TXT_KEY_POP_CSTATE_BULLY_AFRAID?$AA@
	lea	eax, DWORD PTR _sFear$[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 8480 : 	if (!bCanBully)

	movzx	ecx, BYTE PTR _bCanBully$[ebp]
	test	ecx, ecx
	jne	SHORT $LN1@GetMajorBu

; 8481 : 	{
; 8482 : 		sFear = Localization::Lookup("TXT_KEY_POP_CSTATE_BULLY_RESILIENT");

	push	OFFSET ??_C@_0CD@MMCKAMNP@TXT_KEY_POP_CSTATE_BULLY_RESILIE@
	lea	edx, DWORD PTR $T245574[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv83[ebp], eax
	mov	eax, DWORD PTR tv83[ebp]
	mov	DWORD PTR tv154[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv154[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sFear$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T245574[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN1@GetMajorBu:

; 8483 : 	}
; 8484 : 	sFear << iScore;

	lea	edx, DWORD PTR _iScore$[ebp]
	push	edx
	lea	eax, DWORD PTR _sFear$[ebp]
	push	eax
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 8485 : 
; 8486 : 	Localization::String sResult = Localization::Lookup("TXT_KEY_POP_CSTATE_BULLY_GOLD_TT");

	push	OFFSET ??_C@_0CB@KMKOILEP@TXT_KEY_POP_CSTATE_BULLY_GOLD_TT@
	lea	ecx, DWORD PTR _sResult$[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 8487 : 	sResult << sFear.toUTF8() << sFactors;

	lea	ecx, DWORD PTR _sFear$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T245575[ebp], eax
	lea	edx, DWORD PTR _sFactors$[ebp]
	push	edx
	lea	eax, DWORD PTR $T245575[ebp]
	push	eax
	lea	ecx, DWORD PTR _sResult$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	push	eax
	call	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
	add	esp, 8

; 8488 : 
; 8489 : 	return sResult.toUTF8();

	lea	ecx, DWORD PTR _sResult$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T245607[ebp], eax
	cmp	DWORD PTR $T245607[ebp], 0
	je	SHORT $LN24@GetMajorBu
	mov	edx, DWORD PTR $T245607[ebp]
	mov	DWORD PTR tv193[ebp], edx
	jmp	SHORT $LN25@GetMajorBu
$LN24@GetMajorBu:
	mov	DWORD PTR tv193[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN25@GetMajorBu:
	mov	eax, DWORD PTR tv193[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	ecx, DWORD PTR $T245577[ebp]
	or	ecx, 1
	mov	DWORD PTR $T245577[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _sResult$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _sFear$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN4@GetMajorBu:

; 8490 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z$0:
	mov	eax, DWORD PTR $T245577[ebp]
	and	eax, 1
	je	$LN7@GetMajorBu
	and	DWORD PTR $T245577[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
$LN7@GetMajorBu:
	ret	0
__unwindfunclet$?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z$1:
	lea	ecx, DWORD PTR _sFactors$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z$2:
	lea	ecx, DWORD PTR _sFear$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z$3:
	lea	ecx, DWORD PTR $T245574[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z$4:
	lea	ecx, DWORD PTR _sResult$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-320]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-172]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetMajorBullyGoldDetails
PUBLIC	?CanMajorBullyUnit@CvMinorCivAI@@QAE_NW4PlayerTypes@@H@Z ; CvMinorCivAI::CanMajorBullyUnit
PUBLIC	?CanMajorBullyUnit@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorBullyUnit
; Function compile flags: /Odtp
;	COMDAT ?CanMajorBullyUnit@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T245629 = -9						; size = 1
$T245628 = -8						; size = 4
_iScore$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?CanMajorBullyUnit@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::CanMajorBullyUnit, COMDAT
; _this$ = ecx

; 8493 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 8494 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 8495 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 8496 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return false;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN2@CanMajorBu@4
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN3@CanMajorBu@4
$LN2@CanMajorBu@4:
	xor	al, al
	jmp	SHORT $LN4@CanMajorBu@4
$LN3@CanMajorBu@4:

; 8497 : 
; 8498 : 	// Can't bully us if we're dead!
; 8499 : 	if(!GetPlayer()->isAlive())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T245628[ebp], eax
	mov	eax, DWORD PTR $T245628[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T245629[ebp], cl
	movzx	edx, BYTE PTR $T245629[ebp]
	test	edx, edx
	jne	SHORT $LN1@CanMajorBu@4

; 8500 : 		return false;

	xor	al, al
	jmp	SHORT $LN4@CanMajorBu@4
$LN1@CanMajorBu@4:

; 8501 : 
; 8502 : 	int iScore = CalculateBullyMetric(ePlayer, /*bForUnit*/true);

	push	0
	push	1
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z ; CvMinorCivAI::CalculateBullyMetric
	mov	DWORD PTR _iScore$[ebp], eax

; 8503 : 	return CanMajorBullyUnit(ePlayer, iScore);

	mov	ecx, DWORD PTR _iScore$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CanMajorBullyUnit@CvMinorCivAI@@QAE_NW4PlayerTypes@@H@Z ; CvMinorCivAI::CanMajorBullyUnit
$LN4@CanMajorBu@4:

; 8504 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?CanMajorBullyUnit@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::CanMajorBullyUnit
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?CanMajorBullyUnit@CvMinorCivAI@@QAE_NW4PlayerTypes@@H@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T245641 = -5						; size = 1
$T245640 = -4						; size = 4
_ePlayer$ = 8						; size = 4
_iSpecifiedBullyMetric$ = 12				; size = 4
?CanMajorBullyUnit@CvMinorCivAI@@QAE_NW4PlayerTypes@@H@Z PROC ; CvMinorCivAI::CanMajorBullyUnit, COMDAT
; _this$ = ecx

; 8508 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 8509 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 8510 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 8511 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return false;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN2@CanMajorBu@5
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN3@CanMajorBu@5
$LN2@CanMajorBu@5:
	xor	al, al
	jmp	SHORT $LN4@CanMajorBu@5
$LN3@CanMajorBu@5:

; 8512 : 
; 8513 : 	// Can't bully us if we're dead!
; 8514 : 	if(!GetPlayer()->isAlive())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T245640[ebp], eax
	mov	eax, DWORD PTR $T245640[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T245641[ebp], cl
	movzx	edx, BYTE PTR $T245641[ebp]
	test	edx, edx
	jne	SHORT $LN1@CanMajorBu@5

; 8515 : 		return false;

	xor	al, al
	jmp	SHORT $LN4@CanMajorBu@5
$LN1@CanMajorBu@5:

; 8516 : 
; 8517 : 	return (iSpecifiedBullyMetric >= 0);

	xor	eax, eax
	cmp	DWORD PTR _iSpecifiedBullyMetric$[ebp], 0
	setge	al
$LN4@CanMajorBu@5:

; 8518 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?CanMajorBullyUnit@CvMinorCivAI@@QAE_NW4PlayerTypes@@H@Z ENDP ; CvMinorCivAI::CanMajorBullyUnit
_TEXT	ENDS
PUBLIC	??_C@_0CB@EGKLAJM@TXT_KEY_POP_CSTATE_BULLY_UNIT_TT@ ; `string'
PUBLIC	??_C@_0M@INLNKHPF@UNIT_WORKER?$AA@		; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z ; CvMinorCivAI::GetMajorBullyUnitDetails
;	COMDAT ??_C@_0CB@EGKLAJM@TXT_KEY_POP_CSTATE_BULLY_UNIT_TT@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0CB@EGKLAJM@TXT_KEY_POP_CSTATE_BULLY_UNIT_TT@ DB 'TXT_KEY_POP_CSTAT'
	DB	'E_BULLY_UNIT_TT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@INLNKHPF@UNIT_WORKER?$AA@
CONST	SEGMENT
??_C@_0M@INLNKHPF@UNIT_WORKER?$AA@ DB 'UNIT_WORKER', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z$4
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
tv240 = -348						; size = 4
tv177 = -344						; size = 4
tv95 = -340						; size = 4
tv216 = -336						; size = 4
tv203 = -332						; size = 4
tv190 = -328						; size = 4
_this$ = -324						; size = 4
$T245694 = -320						; size = 4
$T245649 = -316						; size = 4
$T245647 = -312						; size = 4
$T245646 = -308						; size = 4
$T245645 = -304						; size = 80
_pUnitInfo$ = -224					; size = 4
_sFactors$ = -220					; size = 28
__$ArrayPad$ = -192					; size = 4
_sResult$ = -188					; size = 80
_sFear$ = -108						; size = 80
_bCanBully$ = -21					; size = 1
_eUnitType$ = -20					; size = 4
_iScore$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_ePlayer$ = 12						; size = 4
?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetMajorBullyUnitDetails, COMDAT
; _this$ = ecx

; 8521 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 336				; 00000150H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T245649[ebp], 0

; 8522 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 8523 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 8524 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return "";

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN3@GetMajorBu@2
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN4@GetMajorBu@2
$LN3@GetMajorBu@2:
	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
	test	eax, eax
	je	SHORT $LN15@GetMajorBu@2
	mov	DWORD PTR tv190[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	SHORT $LN16@GetMajorBu@2
$LN15@GetMajorBu@2:
	mov	DWORD PTR tv190[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN16@GetMajorBu@2:
	mov	ecx, DWORD PTR tv190[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T245649[ebp]
	or	edx, 1
	mov	DWORD PTR $T245649[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@GetMajorBu@2
$LN4@GetMajorBu@2:

; 8525 : 
; 8526 : 	CvString sFactors = "";

	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
	test	eax, eax
	je	SHORT $LN20@GetMajorBu@2
	mov	DWORD PTR tv203[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	SHORT $LN21@GetMajorBu@2
$LN20@GetMajorBu@2:
	mov	DWORD PTR tv203[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN21@GetMajorBu@2:
	mov	ecx, DWORD PTR tv203[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 8527 : 	int iScore = CalculateBullyMetric(ePlayer, /*bForUnit*/true, &sFactors);

	lea	edx, DWORD PTR _sFactors$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z ; CvMinorCivAI::CalculateBullyMetric
	mov	DWORD PTR _iScore$[ebp], eax

; 8528 : 	bool bCanBully = CanMajorBullyUnit(ePlayer, iScore);

	mov	ecx, DWORD PTR _iScore$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CanMajorBullyUnit@CvMinorCivAI@@QAE_NW4PlayerTypes@@H@Z ; CvMinorCivAI::CanMajorBullyUnit
	mov	BYTE PTR _bCanBully$[ebp], al

; 8529 : 	UnitTypes eUnitType = (UnitTypes) GC.getInfoTypeForString("UNIT_WORKER"); //antonjs: todo: XML/function

	push	0
	push	OFFSET ??_C@_0M@INLNKHPF@UNIT_WORKER?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eUnitType$[ebp], eax

; 8530 : 	CvUnitEntry* pUnitInfo = GC.getUnitInfo(eUnitType);

	mov	eax, DWORD PTR _eUnitType$[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	DWORD PTR _pUnitInfo$[ebp], eax

; 8531 : 	CvAssert(pUnitInfo);
; 8532 : 	if (!pUnitInfo)

	cmp	DWORD PTR _pUnitInfo$[ebp], 0
	jne	SHORT $LN2@GetMajorBu@2

; 8533 : 		return "";

	mov	ecx, OFFSET ??_C@_00CNPNBAHC@?$AA@
	test	ecx, ecx
	je	SHORT $LN25@GetMajorBu@2
	mov	DWORD PTR tv216[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	SHORT $LN26@GetMajorBu@2
$LN25@GetMajorBu@2:
	mov	DWORD PTR tv216[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN26@GetMajorBu@2:
	mov	edx, DWORD PTR tv216[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR $T245649[ebp]
	or	eax, 1
	mov	DWORD PTR $T245649[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@GetMajorBu@2
$LN2@GetMajorBu@2:

; 8534 : 
; 8535 : 	Localization::String sFear = Localization::Lookup("TXT_KEY_POP_CSTATE_BULLY_AFRAID");

	push	OFFSET ??_C@_0CA@IAMMOKHG@TXT_KEY_POP_CSTATE_BULLY_AFRAID?$AA@
	lea	ecx, DWORD PTR _sFear$[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 8536 : 	if (!bCanBully)

	movzx	edx, BYTE PTR _bCanBully$[ebp]
	test	edx, edx
	jne	SHORT $LN1@GetMajorBu@2

; 8537 : 	{
; 8538 : 		sFear = Localization::Lookup("TXT_KEY_POP_CSTATE_BULLY_RESILIENT");

	push	OFFSET ??_C@_0CD@MMCKAMNP@TXT_KEY_POP_CSTATE_BULLY_RESILIE@
	lea	eax, DWORD PTR $T245645[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv95[ebp], eax
	mov	ecx, DWORD PTR tv95[ebp]
	mov	DWORD PTR tv177[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR tv177[ebp]
	push	edx
	lea	ecx, DWORD PTR _sFear$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T245645[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN1@GetMajorBu@2:

; 8539 : 	}
; 8540 : 	sFear << iScore;

	lea	eax, DWORD PTR _iScore$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sFear$[ebp]
	push	ecx
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 8541 : 
; 8542 : 	Localization::String sResult = Localization::Lookup("TXT_KEY_POP_CSTATE_BULLY_UNIT_TT");

	push	OFFSET ??_C@_0CB@EGKLAJM@TXT_KEY_POP_CSTATE_BULLY_UNIT_TT@
	lea	edx, DWORD PTR _sResult$[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 8543 : 	sResult << sFear.toUTF8() << sFactors << pUnitInfo->GetDescriptionKey();

	mov	ecx, DWORD PTR _pUnitInfo$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T245646[ebp], eax
	lea	ecx, DWORD PTR _sFear$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T245647[ebp], eax
	lea	eax, DWORD PTR $T245646[ebp]
	push	eax
	lea	ecx, DWORD PTR _sFactors$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T245647[ebp]
	push	edx
	lea	eax, DWORD PTR _sResult$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	push	eax
	call	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
	add	esp, 8
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 8544 : 
; 8545 : 	return sResult.toUTF8();

	lea	ecx, DWORD PTR _sResult$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T245694[ebp], eax
	cmp	DWORD PTR $T245694[ebp], 0
	je	SHORT $LN35@GetMajorBu@2
	mov	ecx, DWORD PTR $T245694[ebp]
	mov	DWORD PTR tv240[ebp], ecx
	jmp	SHORT $LN36@GetMajorBu@2
$LN35@GetMajorBu@2:
	mov	DWORD PTR tv240[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN36@GetMajorBu@2:
	mov	edx, DWORD PTR tv240[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR $T245649[ebp]
	or	eax, 1
	mov	DWORD PTR $T245649[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _sResult$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _sFear$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sFactors$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@GetMajorBu@2:

; 8546 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z$0:
	mov	eax, DWORD PTR $T245649[ebp]
	and	eax, 1
	je	$LN8@GetMajorBu@2
	and	DWORD PTR $T245649[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
$LN8@GetMajorBu@2:
	ret	0
__unwindfunclet$?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z$1:
	lea	ecx, DWORD PTR _sFactors$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z$2:
	lea	ecx, DWORD PTR _sFear$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z$3:
	lea	ecx, DWORD PTR $T245645[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z$4:
	lea	ecx, DWORD PTR _sResult$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-340]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-180]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetMajorBullyUnitDetails
PUBLIC	?DoBulliedByMajorReaction@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::DoBulliedByMajorReaction
PUBLIC	?DoMajorBullyGold@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::DoMajorBullyGold
EXTRN	?LogMinorCivBullyGold@CvDiplomacyAI@@QAEXW4PlayerTypes@@HHH_NH@Z:PROC ; CvDiplomacyAI::LogMinorCivBullyGold
; Function compile flags: /Odtp
;	COMDAT ?DoMajorBullyGold@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z
_TEXT	SEGMENT
tv199 = -80						; size = 4
tv137 = -76						; size = 4
tv92 = -72						; size = 4
_this$ = -68						; size = 4
$T245747 = -64						; size = 4
$T245743 = -60						; size = 4
$T245739 = -56						; size = 4
$T245738 = -52						; size = 4
$T245726 = -48						; size = 4
$T245722 = -44						; size = 4
$T245718 = -40						; size = 4
$T245714 = -36						; size = 4
$T245710 = -32						; size = 4
_iBullyGold$227507 = -28				; size = 4
_iInfluenceChange$227508 = -24				; size = 4
_iBullyInfluenceGain$227509 = -20			; size = 4
_bShouldRemoveQuests$227510 = -13			; size = 1
_iBullyMetric$ = -12					; size = 4
_bSuccess$ = -5						; size = 1
_iOldFriendshipTimes100$ = -4				; size = 4
_eBully$ = 8						; size = 4
_iGold$ = 12						; size = 4
?DoMajorBullyGold@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z PROC ; CvMinorCivAI::DoMajorBullyGold, COMDAT
; _this$ = ecx

; 8549 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	mov	DWORD PTR _this$[ebp], ecx

; 8550 : 	CvAssertMsg(eBully >= 0, "eBully is expected to be non-negative (invalid Index)");
; 8551 : 	CvAssertMsg(eBully < MAX_MAJOR_CIVS, "eBully is expected to be within maximum bounds (invalid Index)");
; 8552 : 	if(eBully < 0 || eBully >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _eBully$[ebp], 0
	jl	SHORT $LN5@DoMajorBul
	cmp	DWORD PTR _eBully$[ebp], 22		; 00000016H
	jl	SHORT $LN6@DoMajorBul
$LN5@DoMajorBul:
	jmp	$LN7@DoMajorBul
$LN6@DoMajorBul:

; 8553 : 
; 8554 : 	int iBullyMetric = CalculateBullyMetric(eBully, /*bForUnit*/false);

	push	0
	push	0
	mov	eax, DWORD PTR _eBully$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z ; CvMinorCivAI::CalculateBullyMetric
	mov	DWORD PTR _iBullyMetric$[ebp], eax

; 8555 : 	bool bSuccess = CanMajorBullyGold(eBully, iBullyMetric);

	mov	ecx, DWORD PTR _iBullyMetric$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eBully$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CanMajorBullyGold@CvMinorCivAI@@QAE_NW4PlayerTypes@@H@Z ; CvMinorCivAI::CanMajorBullyGold
	mov	BYTE PTR _bSuccess$[ebp], al

; 8556 : 	int iOldFriendshipTimes100 = GetEffectiveFriendshipWithMajorTimes100(eBully);

	mov	eax, DWORD PTR _eBully$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajorTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajorTimes100
	mov	DWORD PTR _iOldFriendshipTimes100$[ebp], eax

; 8557 : 
; 8558 : 	if(bSuccess)

	movzx	ecx, BYTE PTR _bSuccess$[ebp]
	test	ecx, ecx
	je	$LN4@DoMajorBul

; 8559 : 	{
; 8560 : 		CvAssertMsg(iGold >= 0, "iGold is expected to be non-negative. Please send Anton your save file and version.");
; 8561 : 	
; 8562 : 		if(GC.getGame().getActivePlayer() == eBully)

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T245710[ebp], edx
	mov	ecx, DWORD PTR $T245710[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	eax, DWORD PTR _eBully$[ebp]
	jne	SHORT $LN3@DoMajorBul

; 8563 : 		{
; 8564 : 			int iBullyGold = 0;

	mov	DWORD PTR _iBullyGold$227507[ebp], 0

; 8565 : 			gDLL->GetSteamStat(ESTEAMSTAT_BULLIEDGOLD, &iBullyGold);

	mov	eax, DWORD PTR $T245714[ebp]
	mov	DWORD PTR tv92[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv92[ebp], ecx
	lea	edx, DWORD PTR _iBullyGold$227507[ebp]
	push	edx
	push	136					; 00000088H
	mov	eax, DWORD PTR tv92[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv92[ebp]
	mov	eax, DWORD PTR [edx+836]
	call	eax

; 8566 : 
; 8567 : 			iBullyGold += iGold;

	mov	ecx, DWORD PTR _iBullyGold$227507[ebp]
	add	ecx, DWORD PTR _iGold$[ebp]
	mov	DWORD PTR _iBullyGold$227507[ebp], ecx

; 8568 : 
; 8569 : 			gDLL->SetSteamStat(ESTEAMSTAT_BULLIEDGOLD, iBullyGold);

	mov	edx, DWORD PTR $T245718[ebp]
	mov	DWORD PTR tv137[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv137[ebp], eax
	mov	ecx, DWORD PTR _iBullyGold$227507[ebp]
	push	ecx
	push	136					; 00000088H
	mov	edx, DWORD PTR tv137[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv137[ebp]
	mov	edx, DWORD PTR [eax+840]
	call	edx
$LN3@DoMajorBul:

; 8570 : 		}
; 8571 : 
; 8572 : 		GET_PLAYER(eBully).GetTreasury()->ChangeGold(iGold);

	mov	eax, DWORD PTR _eBully$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T245722[ebp], eax
	mov	ecx, DWORD PTR _iGold$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T245722[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?ChangeGold@CvTreasury@@QAEXH@Z		; CvTreasury::ChangeGold

; 8573 : #ifdef NQ_MINOR_FRIENDSHIP_GAIN_BULLY_GOLD_SUCCESS_FROM_POLICIES
; 8574 : 		int iInfluenceChange = 0;

	mov	DWORD PTR _iInfluenceChange$227508[ebp], 0

; 8575 : 		int iBullyInfluenceGain = GET_PLAYER(eBully).GetPlayerPolicies()->GetNumericModifier(POLICYMOD_MINOR_FRIENDSHIP_GAIN_BULLY_GOLD_SUCCESS);

	mov	edx, DWORD PTR _eBully$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T245726[ebp], edx
	push	53					; 00000035H
	mov	ecx, DWORD PTR $T245726[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	mov	DWORD PTR _iBullyInfluenceGain$227509[ebp], eax

; 8576 : 		bool bShouldRemoveQuests;
; 8577 : 		if (iBullyInfluenceGain > 0)

	cmp	DWORD PTR _iBullyInfluenceGain$227509[ebp], 0
	jle	SHORT $LN2@DoMajorBul

; 8578 : 		{
; 8579 : 			iInfluenceChange = iBullyInfluenceGain;

	mov	eax, DWORD PTR _iBullyInfluenceGain$227509[ebp]
	mov	DWORD PTR _iInfluenceChange$227508[ebp], eax

; 8580 : 			bShouldRemoveQuests = false;

	mov	BYTE PTR _bShouldRemoveQuests$227510[ebp], 0

; 8581 : 		}
; 8582 : 		else

	jmp	SHORT $LN1@DoMajorBul
$LN2@DoMajorBul:

; 8583 : 		{
; 8584 : 			iInfluenceChange = GC.getMINOR_FRIENDSHIP_DROP_BULLY_GOLD_SUCCESS();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2748
	mov	DWORD PTR _iInfluenceChange$227508[ebp], ecx

; 8585 : 			bShouldRemoveQuests = true;

	mov	BYTE PTR _bShouldRemoveQuests$227510[ebp], 1
$LN1@DoMajorBul:

; 8586 : 		}
; 8587 : 		DoBulliedByMajorReaction(eBully, iInfluenceChange, bShouldRemoveQuests);

	movzx	edx, BYTE PTR _bShouldRemoveQuests$227510[ebp]
	push	edx
	mov	eax, DWORD PTR _iInfluenceChange$227508[ebp]
	push	eax
	mov	ecx, DWORD PTR _eBully$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoBulliedByMajorReaction@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::DoBulliedByMajorReaction
$LN4@DoMajorBul:

; 8588 : #else
; 8589 : 		DoBulliedByMajorReaction(eBully, GC.getMINOR_FRIENDSHIP_DROP_BULLY_GOLD_SUCCESS());
; 8590 : #endif
; 8591 : 	}
; 8592 : 
; 8593 : 	// Logging
; 8594 : 	GET_PLAYER(eBully).GetDiplomacyAI()->LogMinorCivBullyGold(GetPlayer()->GetID(), iOldFriendshipTimes100, GetEffectiveFriendshipWithMajorTimes100(eBully), iGold, bSuccess, iBullyMetric);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T245738[ebp], eax
	mov	edx, DWORD PTR $T245738[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T245739[ebp], eax
	mov	ecx, DWORD PTR _eBully$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T245743[ebp], ecx
	mov	edx, DWORD PTR _iBullyMetric$[ebp]
	push	edx
	movzx	eax, BYTE PTR _bSuccess$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iGold$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eBully$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajorTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajorTimes100
	push	eax
	mov	eax, DWORD PTR _iOldFriendshipTimes100$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T245739[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T245743[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?LogMinorCivBullyGold@CvDiplomacyAI@@QAEXW4PlayerTypes@@HHH_NH@Z ; CvDiplomacyAI::LogMinorCivBullyGold

; 8595 : 
; 8596 : 	GC.GetEngineUserInterface()->setDirty(GameData_DIRTY_BIT, true);

	mov	edx, DWORD PTR $T245747[ebp]
	mov	DWORD PTR tv199[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv199[ebp], eax
	push	1
	push	11					; 0000000bH
	mov	ecx, DWORD PTR tv199[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv199[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax
$LN7@DoMajorBul:

; 8597 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?DoMajorBullyGold@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ENDP ; CvMinorCivAI::DoMajorBullyGold
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
_TEXT	ENDS
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
_TEXT	ENDS
PUBLIC	?DoMajorBullyUnit@CvMinorCivAI@@QAEXW4PlayerTypes@@W4UnitTypes@@@Z ; CvMinorCivAI::DoMajorBullyUnit
EXTRN	?LogMinorCivBullyUnit@CvDiplomacyAI@@QAEXW4PlayerTypes@@HHW4UnitTypes@@_NH@Z:PROC ; CvDiplomacyAI::LogMinorCivBullyUnit
EXTRN	?finishMoves@CvUnit@@QAEXXZ:PROC		; CvUnit::finishMoves
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
;	COMDAT ?DoMajorBullyUnit@CvMinorCivAI@@QAEXW4PlayerTypes@@W4UnitTypes@@@Z
_TEXT	SEGMENT
tv194 = -60						; size = 4
_this$ = -56						; size = 4
$T245794 = -52						; size = 4
$T245790 = -48						; size = 4
$T245786 = -44						; size = 4
$T245785 = -40						; size = 4
$T245776 = -36						; size = 4
$T245772 = -32						; size = 4
_pCapital$227525 = -28					; size = 4
_iX$227527 = -24					; size = 4
_iY$227528 = -20					; size = 4
_pNewUnit$227529 = -16					; size = 4
_iBullyMetric$ = -12					; size = 4
_bSuccess$ = -5						; size = 1
_iOldFriendshipTimes100$ = -4				; size = 4
_eBully$ = 8						; size = 4
_eUnitType$ = 12					; size = 4
?DoMajorBullyUnit@CvMinorCivAI@@QAEXW4PlayerTypes@@W4UnitTypes@@@Z PROC ; CvMinorCivAI::DoMajorBullyUnit, COMDAT
; _this$ = ecx

; 8600 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	mov	DWORD PTR _this$[ebp], ecx

; 8601 : 	CvAssertMsg(eBully >= 0, "eBully is expected to be non-negative (invalid Index)");
; 8602 : 	CvAssertMsg(eBully < MAX_MAJOR_CIVS, "eBully is expected to be within maximum bounds (invalid Index)");
; 8603 : 	if(eBully < 0 || eBully >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _eBully$[ebp], 0
	jl	SHORT $LN7@DoMajorBul@2
	cmp	DWORD PTR _eBully$[ebp], 22		; 00000016H
	jl	SHORT $LN8@DoMajorBul@2
$LN7@DoMajorBul@2:
	jmp	$LN9@DoMajorBul@2
$LN8@DoMajorBul@2:

; 8604 : 
; 8605 : 	int iBullyMetric = CalculateBullyMetric(eBully, /*bForUnit*/true);

	push	0
	push	1
	mov	eax, DWORD PTR _eBully$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CalculateBullyMetric@CvMinorCivAI@@QAEHW4PlayerTypes@@_NPAVCvString@@@Z ; CvMinorCivAI::CalculateBullyMetric
	mov	DWORD PTR _iBullyMetric$[ebp], eax

; 8606 : 	bool bSuccess = CanMajorBullyUnit(eBully, iBullyMetric);

	mov	ecx, DWORD PTR _iBullyMetric$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eBully$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CanMajorBullyUnit@CvMinorCivAI@@QAE_NW4PlayerTypes@@H@Z ; CvMinorCivAI::CanMajorBullyUnit
	mov	BYTE PTR _bSuccess$[ebp], al

; 8607 : 	int iOldFriendshipTimes100 = GetEffectiveFriendshipWithMajorTimes100(eBully);

	mov	eax, DWORD PTR _eBully$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajorTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajorTimes100
	mov	DWORD PTR _iOldFriendshipTimes100$[ebp], eax

; 8608 : 
; 8609 : 	if(bSuccess)

	movzx	ecx, BYTE PTR _bSuccess$[ebp]
	test	ecx, ecx
	je	$LN6@DoMajorBul@2

; 8610 : 	{
; 8611 : 		if(eUnitType == NO_UNIT)

	cmp	DWORD PTR _eUnitType$[ebp], -1
	jne	SHORT $LN5@DoMajorBul@2

; 8612 : 		{
; 8613 : 			CvAssertMsg(false, "eUnitType is not expected to be NO_UNIT. Please send Anton your save file and version.");
; 8614 : 			return;

	jmp	$LN9@DoMajorBul@2
$LN5@DoMajorBul@2:

; 8615 : 		}
; 8616 : 
; 8617 : 		// Minor must have Capital
; 8618 : 		CvCity* pCapital = GetPlayer()->getCapitalCity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pCapital$227525[ebp], eax

; 8619 : 		if(pCapital == NULL)

	cmp	DWORD PTR _pCapital$227525[ebp], 0
	jne	SHORT $LN13@DoMajorBul@2

; 8620 : 		{
; 8621 : 			CvAssertMsg(false, "Trying to spawn a Unit for a major civ but the minor has no capital. Please send Anton your save file and version.");
; 8622 : 			return;

	jmp	$LN9@DoMajorBul@2

; 8623 : 		}
; 8624 : 
; 8625 : 		int iX = pCapital->getX();

$LN13@DoMajorBul@2:
	mov	edx, DWORD PTR _pCapital$227525[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR _iX$227527[ebp], eax

; 8626 : 		int iY = pCapital->getY();

	mov	ecx, DWORD PTR _pCapital$227525[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR _iY$227528[ebp], edx

; 8627 : 
; 8628 : 		CvUnit* pNewUnit = GET_PLAYER(eBully).initUnit(eUnitType, iX, iY);

	mov	eax, DWORD PTR _eBully$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T245772[ebp], eax
	push	0
	push	0
	push	1
	push	0
	push	-1
	push	-1
	mov	ecx, DWORD PTR _iY$227528[ebp]
	push	ecx
	mov	edx, DWORD PTR _iX$227527[ebp]
	push	edx
	mov	eax, DWORD PTR _eUnitType$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T245772[ebp]
	call	?initUnit@CvPlayer@@QAEPAVCvUnit@@W4UnitTypes@@HHW4UnitAITypes@@W4DirectionTypes@@_N3HH@Z ; CvPlayer::initUnit
	mov	DWORD PTR _pNewUnit$227529[ebp], eax

; 8629 : 		if (pNewUnit->jumpToNearestValidPlot())

	mov	ecx, DWORD PTR _pNewUnit$227529[ebp]
	call	?jumpToNearestValidPlot@CvUnit@@QAE_NXZ	; CvUnit::jumpToNearestValidPlot
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@DoMajorBul@2

; 8630 : 		{
; 8631 : 			pNewUnit->finishMoves(); // The given unit cannot move this turn

	mov	ecx, DWORD PTR _pNewUnit$227529[ebp]
	call	?finishMoves@CvUnit@@QAEXXZ		; CvUnit::finishMoves

; 8632 : 
; 8633 : 			if(GetPlayer()->getCapitalCity())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	test	eax, eax
	je	SHORT $LN2@DoMajorBul@2

; 8634 : 				GetPlayer()->getCapitalCity()->addProductionExperience(pNewUnit);

	push	0
	mov	edx, DWORD PTR _pNewUnit$227529[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	ecx, eax
	call	?addProductionExperience@CvCity@@QAEXPAVCvUnit@@_N@Z ; CvCity::addProductionExperience
$LN2@DoMajorBul@2:

; 8635 : 
; 8636 : #ifdef NQ_MINOR_FRIENDSHIP_GAIN_BULLY_GOLD_SUCCESS_FROM_POLICIES
; 8637 : 			DoBulliedByMajorReaction(eBully, GC.getMINOR_FRIENDSHIP_DROP_BULLY_WORKER_SUCCESS(), true);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2756
	mov	DWORD PTR $T245776[ebp], eax
	push	1
	mov	ecx, DWORD PTR $T245776[ebp]
	push	ecx
	mov	edx, DWORD PTR _eBully$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoBulliedByMajorReaction@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::DoBulliedByMajorReaction

; 8638 : #else
; 8639 : 			DoBulliedByMajorReaction(eBully, GC.getMINOR_FRIENDSHIP_DROP_BULLY_WORKER_SUCCESS());
; 8640 : #endif
; 8641 : 		}
; 8642 : 		else

	jmp	SHORT $LN6@DoMajorBul@2
$LN3@DoMajorBul@2:

; 8643 : 			pNewUnit->kill(false);	// Could not find a spot for the unit!

	push	-1
	push	0
	mov	ecx, DWORD PTR _pNewUnit$227529[ebp]
	call	?kill@CvUnit@@QAEX_NW4PlayerTypes@@@Z	; CvUnit::kill
$LN6@DoMajorBul@2:

; 8644 : 	}
; 8645 : 
; 8646 : 	// Logging
; 8647 : 	GET_PLAYER(eBully).GetDiplomacyAI()->LogMinorCivBullyUnit(GetPlayer()->GetID(), iOldFriendshipTimes100, GetEffectiveFriendshipWithMajorTimes100(eBully), eUnitType, bSuccess, iBullyMetric);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T245785[ebp], eax
	mov	eax, DWORD PTR $T245785[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T245786[ebp], ecx
	mov	edx, DWORD PTR _eBully$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T245790[ebp], edx
	mov	eax, DWORD PTR _iBullyMetric$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bSuccess$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eUnitType$[ebp]
	push	edx
	mov	eax, DWORD PTR _eBully$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajorTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajorTimes100
	push	eax
	mov	ecx, DWORD PTR _iOldFriendshipTimes100$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T245786[ebp]
	push	edx
	mov	ecx, DWORD PTR $T245790[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?LogMinorCivBullyUnit@CvDiplomacyAI@@QAEXW4PlayerTypes@@HHW4UnitTypes@@_NH@Z ; CvDiplomacyAI::LogMinorCivBullyUnit

; 8648 : 
; 8649 : 	GC.GetEngineUserInterface()->setDirty(GameData_DIRTY_BIT, true);

	mov	eax, DWORD PTR $T245794[ebp]
	mov	DWORD PTR tv194[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv194[ebp], ecx
	push	1
	push	11					; 0000000bH
	mov	edx, DWORD PTR tv194[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv194[ebp]
	mov	edx, DWORD PTR [eax+260]
	call	edx
$LN9@DoMajorBul@2:

; 8650 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?DoMajorBullyUnit@CvMinorCivAI@@QAEXW4PlayerTypes@@W4UnitTypes@@@Z ENDP ; CvMinorCivAI::DoMajorBullyUnit
_TEXT	ENDS
PUBLIC	?SetTurnLastBulliedByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::SetTurnLastBulliedByMajor
EXTRN	?DoPlayerBulliedSomeone@CvDiplomacyAI@@QAEXW4PlayerTypes@@0@Z:PROC ; CvDiplomacyAI::DoPlayerBulliedSomeone
; Function compile flags: /Odtp
;	COMDAT ?DoBulliedByMajorReaction@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z
_TEXT	SEGMENT
_this$ = -72						; size = 4
$T245869 = -65						; size = 1
$T245857 = -64						; size = 4
$T245856 = -60						; size = 4
$T245847 = -56						; size = 4
$T245846 = -52						; size = 4
$T245837 = -48						; size = 4
$T245833 = -44						; size = 4
$T245824 = -40						; size = 4
$T245815 = -33						; size = 1
$T245803 = -32						; size = 4
_pMinorLoop$227561 = -28				; size = 4
_eMinorLoop$227558 = -24				; size = 4
_iMinorLoop$227554 = -20				; size = 4
_eMajorLoop$227548 = -16				; size = 4
_pMajorLoop$227550 = -12				; size = 4
_iMajorLoop$227544 = -8					; size = 4
_pBully$ = -4						; size = 4
_eBully$ = 8						; size = 4
_iInfluenceChangeTimes100$ = 12				; size = 4
_bShouldRemoveQuests$ = 16				; size = 1
?DoBulliedByMajorReaction@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z PROC ; CvMinorCivAI::DoBulliedByMajorReaction, COMDAT
; _this$ = ecx

; 8659 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	mov	DWORD PTR _this$[ebp], ecx

; 8660 : 	CvAssertMsg(eBully >= 0, "eBully is expected to be non-negative (invalid Index)");
; 8661 : 	CvAssertMsg(eBully < MAX_MAJOR_CIVS, "eBully is expected to be within maximum bounds (invalid Index)");
; 8662 : 	if(eBully < 0 || eBully >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _eBully$[ebp], 0
	jl	SHORT $LN15@DoBulliedB
	cmp	DWORD PTR _eBully$[ebp], 22		; 00000016H
	jl	SHORT $LN19@DoBulliedB
$LN15@DoBulliedB:
	jmp	$LN17@DoBulliedB

; 8663 : 
; 8664 : 	CvPlayer* pBully = &GET_PLAYER(eBully);

$LN19@DoBulliedB:
	mov	eax, DWORD PTR _eBully$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pBully$[ebp], eax

; 8665 : 	CvAssertMsg(pBully, "pBully not expected to be NULL. Please send Anton your save file and version.");
; 8666 : 	if (!pBully) return;

	jne	SHORT $LN14@DoBulliedB
	jmp	$LN17@DoBulliedB
$LN14@DoBulliedB:

; 8667 : 
; 8668 : 	SetTurnLastBulliedByMajor(eBully, GC.getGame().getGameTurn());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T245803[ebp], ecx
	mov	ecx, DWORD PTR $T245803[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	push	eax
	mov	edx, DWORD PTR _eBully$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetTurnLastBulliedByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::SetTurnLastBulliedByMajor

; 8669 : 	ChangeFriendshipWithMajorTimes100(eBully, iInfluenceChangeTimes100);

	push	0
	mov	eax, DWORD PTR _iInfluenceChangeTimes100$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eBully$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeFriendshipWithMajorTimes100@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::ChangeFriendshipWithMajorTimes100

; 8670 : 
; 8671 : #ifdef NQ_MINOR_FRIENDSHIP_GAIN_BULLY_GOLD_SUCCESS_FROM_POLICIES
; 8672 : 	if (bShouldRemoveQuests)

	movzx	edx, BYTE PTR _bShouldRemoveQuests$[ebp]
	test	edx, edx
	je	SHORT $LN13@DoBulliedB

; 8673 : #endif
; 8674 : 	// In case we have quests that bullying makes obsolete, check now
; 8675 : 	DoTestActiveQuests(/*bTestComplete*/ false, /*bTestObsolete*/ true);

	push	1
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoTestActiveQuests@CvMinorCivAI@@QAEX_N0@Z ; CvMinorCivAI::DoTestActiveQuests
$LN13@DoBulliedB:

; 8676 : 
; 8677 : 	// Inform alive majors who have met the bully
; 8678 : 	for (int iMajorLoop = 0; iMajorLoop < MAX_MAJOR_CIVS; iMajorLoop++)

	mov	DWORD PTR _iMajorLoop$227544[ebp], 0
	jmp	SHORT $LN12@DoBulliedB
$LN11@DoBulliedB:
	mov	eax, DWORD PTR _iMajorLoop$227544[ebp]
	add	eax, 1
	mov	DWORD PTR _iMajorLoop$227544[ebp], eax
$LN12@DoBulliedB:
	cmp	DWORD PTR _iMajorLoop$227544[ebp], 22	; 00000016H
	jge	$LN10@DoBulliedB

; 8679 : 	{
; 8680 : 		PlayerTypes eMajorLoop = (PlayerTypes) iMajorLoop;

	mov	ecx, DWORD PTR _iMajorLoop$227544[ebp]
	mov	DWORD PTR _eMajorLoop$227548[ebp], ecx

; 8681 : 		CvPlayer* pMajorLoop = &GET_PLAYER(eMajorLoop);

	mov	edx, DWORD PTR _eMajorLoop$227548[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pMajorLoop$227550[ebp], edx

; 8682 : 		if (!pMajorLoop) continue;

	jne	SHORT $LN27@DoBulliedB
	jmp	SHORT $LN11@DoBulliedB

; 8683 : 
; 8684 : 		if(pMajorLoop->isAlive())

$LN27@DoBulliedB:
	mov	eax, DWORD PTR _pMajorLoop$227550[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T245815[ebp], cl
	movzx	edx, BYTE PTR $T245815[ebp]
	test	edx, edx
	je	SHORT $LN8@DoBulliedB

; 8685 : 		{
; 8686 : 			if(GET_TEAM(pMajorLoop->getTeam()).isHasMet(pBully->getTeam()))

	mov	eax, DWORD PTR _pBully$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T245824[ebp], eax
	mov	edx, DWORD PTR _pMajorLoop$227550[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T245833[ebp], eax
	mov	ecx, DWORD PTR $T245833[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T245837[ebp], ecx
	mov	edx, DWORD PTR $T245824[ebp]
	push	edx
	mov	ecx, DWORD PTR $T245837[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@DoBulliedB

; 8687 : 			{
; 8688 : 				pMajorLoop->GetDiplomacyAI()->DoPlayerBulliedSomeone(eBully, GetPlayer()->GetID());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T245846[ebp], eax
	mov	ecx, DWORD PTR $T245846[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T245847[ebp], edx
	mov	eax, DWORD PTR $T245847[ebp]
	push	eax
	mov	ecx, DWORD PTR _eBully$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pMajorLoop$227550[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?DoPlayerBulliedSomeone@CvDiplomacyAI@@QAEXW4PlayerTypes@@0@Z ; CvDiplomacyAI::DoPlayerBulliedSomeone
$LN8@DoBulliedB:

; 8689 : 			}
; 8690 : 		}
; 8691 : 	}

	jmp	$LN11@DoBulliedB
$LN10@DoBulliedB:

; 8692 : 
; 8693 : 	// Inform other alive minors, in case they had a quest that this fulfills
; 8694 : 	for (int iMinorLoop = MAX_MAJOR_CIVS; iMinorLoop < MAX_CIV_PLAYERS; iMinorLoop++)

	mov	DWORD PTR _iMinorLoop$227554[ebp], 22	; 00000016H
	jmp	SHORT $LN6@DoBulliedB
$LN5@DoBulliedB:
	mov	edx, DWORD PTR _iMinorLoop$227554[ebp]
	add	edx, 1
	mov	DWORD PTR _iMinorLoop$227554[ebp], edx
$LN6@DoBulliedB:
	cmp	DWORD PTR _iMinorLoop$227554[ebp], 63	; 0000003fH
	jge	$LN17@DoBulliedB

; 8695 : 	{
; 8696 : 		PlayerTypes eMinorLoop = (PlayerTypes) iMinorLoop;

	mov	eax, DWORD PTR _iMinorLoop$227554[ebp]
	mov	DWORD PTR _eMinorLoop$227558[ebp], eax

; 8697 : 		if (eMinorLoop == GetPlayer()->GetID()) continue;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T245856[ebp], eax
	mov	ecx, DWORD PTR $T245856[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T245857[ebp], edx
	mov	eax, DWORD PTR _eMinorLoop$227558[ebp]
	cmp	eax, DWORD PTR $T245857[ebp]
	jne	SHORT $LN47@DoBulliedB
	jmp	SHORT $LN5@DoBulliedB

; 8698 : 
; 8699 : 		CvPlayer* pMinorLoop = &GET_PLAYER(eMinorLoop);

$LN47@DoBulliedB:
	mov	ecx, DWORD PTR _eMinorLoop$227558[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pMinorLoop$227561[ebp], ecx

; 8700 : 		if (!pMinorLoop) continue;

	jne	SHORT $LN51@DoBulliedB
	jmp	SHORT $LN5@DoBulliedB

; 8701 : 
; 8702 : 		if (pMinorLoop->isAlive() && pMinorLoop->GetMinorCivAI()->IsHasMetPlayer(eBully))

$LN51@DoBulliedB:
	mov	edx, DWORD PTR _pMinorLoop$227561[ebp]
	mov	al, BYTE PTR [edx+2256]
	mov	BYTE PTR $T245869[ebp], al
	movzx	ecx, BYTE PTR $T245869[ebp]
	test	ecx, ecx
	je	SHORT $LN1@DoBulliedB
	mov	edx, DWORD PTR _eBully$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pMinorLoop$227561[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsHasMetPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsHasMetPlayer
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@DoBulliedB

; 8703 : 		{
; 8704 : 			pMinorLoop->GetMinorCivAI()->DoTestActiveQuestsForPlayer(eBully, /*bTestComplete*/ true, /*bTestObsolete*/ false, MINOR_CIV_QUEST_BULLY_CITY_STATE);

	push	14					; 0000000eH
	push	0
	push	1
	mov	ecx, DWORD PTR _eBully$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pMinorLoop$227561[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?DoTestActiveQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@_N1W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::DoTestActiveQuestsForPlayer
$LN1@DoBulliedB:

; 8705 : 		}

	jmp	$LN5@DoBulliedB
$LN17@DoBulliedB:

; 8706 : 	}
; 8707 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?DoBulliedByMajorReaction@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ENDP ; CvMinorCivAI::DoBulliedByMajorReaction
_TEXT	ENDS
PUBLIC	?IsEverBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsEverBulliedByMajor
; Function compile flags: /Odtp
;	COMDAT ?IsEverBulliedByAnyMajor@CvMinorCivAI@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iPlayerLoop$227567 = -4				; size = 4
?IsEverBulliedByAnyMajor@CvMinorCivAI@@QBE_NXZ PROC	; CvMinorCivAI::IsEverBulliedByAnyMajor, COMDAT
; _this$ = ecx

; 8710 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 8711 : 	for(int iPlayerLoop = 0; iPlayerLoop < MAX_MAJOR_CIVS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$227567[ebp], 0
	jmp	SHORT $LN4@IsEverBull
$LN3@IsEverBull:
	mov	eax, DWORD PTR _iPlayerLoop$227567[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayerLoop$227567[ebp], eax
$LN4@IsEverBull:
	cmp	DWORD PTR _iPlayerLoop$227567[ebp], 22	; 00000016H
	jge	SHORT $LN2@IsEverBull

; 8712 : 		if(IsEverBulliedByMajor((PlayerTypes)iPlayerLoop))

	mov	ecx, DWORD PTR _iPlayerLoop$227567[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsEverBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsEverBulliedByMajor
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@IsEverBull

; 8713 : 			return true;

	mov	al, 1
	jmp	SHORT $LN5@IsEverBull
$LN1@IsEverBull:

; 8714 : 	return false;

	jmp	SHORT $LN3@IsEverBull
$LN2@IsEverBull:
	xor	al, al
$LN5@IsEverBull:

; 8715 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsEverBulliedByAnyMajor@CvMinorCivAI@@QBE_NXZ ENDP	; CvMinorCivAI::IsEverBulliedByAnyMajor
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsEverBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?IsEverBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::IsEverBulliedByMajor, COMDAT
; _this$ = ecx

; 8718 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 8719 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 8720 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 8721 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return false;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@IsEverBull@2
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN2@IsEverBull@2
$LN1@IsEverBull@2:
	xor	al, al
	jmp	SHORT $LN3@IsEverBull@2
$LN2@IsEverBull@2:

; 8722 : 
; 8723 : 	return (m_aiTurnLastBullied[ePlayer] >= 0); // -1 means never bullied

	mov	eax, DWORD PTR _ePlayer$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	xor	edx, edx
	cmp	DWORD PTR [ecx+eax*4+2816], 0
	setge	dl
	mov	al, dl
$LN3@IsEverBull@2:

; 8724 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsEverBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::IsEverBulliedByMajor
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsRecentlyBulliedByAnyMajor@CvMinorCivAI@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iPlayerLoop$227582 = -4				; size = 4
?IsRecentlyBulliedByAnyMajor@CvMinorCivAI@@QBE_NXZ PROC	; CvMinorCivAI::IsRecentlyBulliedByAnyMajor, COMDAT
; _this$ = ecx

; 8727 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 8728 : 	for(int iPlayerLoop = 0; iPlayerLoop < MAX_MAJOR_CIVS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$227582[ebp], 0
	jmp	SHORT $LN4@IsRecently
$LN3@IsRecently:
	mov	eax, DWORD PTR _iPlayerLoop$227582[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayerLoop$227582[ebp], eax
$LN4@IsRecently:
	cmp	DWORD PTR _iPlayerLoop$227582[ebp], 22	; 00000016H
	jge	SHORT $LN2@IsRecently

; 8729 : 		if(IsRecentlyBulliedByMajor((PlayerTypes)iPlayerLoop))

	mov	ecx, DWORD PTR _iPlayerLoop$227582[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsRecentlyBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsRecentlyBulliedByMajor
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@IsRecently

; 8730 : 			return true;

	mov	al, 1
	jmp	SHORT $LN5@IsRecently
$LN1@IsRecently:

; 8731 : 	return false;

	jmp	SHORT $LN3@IsRecently
$LN2@IsRecently:
	xor	al, al
$LN5@IsRecently:

; 8732 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsRecentlyBulliedByAnyMajor@CvMinorCivAI@@QBE_NXZ ENDP	; CvMinorCivAI::IsRecentlyBulliedByAnyMajor
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsRecentlyBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
tv79 = -16						; size = 4
_this$ = -12						; size = 4
$T245883 = -8						; size = 4
_iRecentlyBulliedTurnInterval$ = -4			; size = 4
_ePlayer$ = 8						; size = 4
?IsRecentlyBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::IsRecentlyBulliedByMajor, COMDAT
; _this$ = ecx

; 8745 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 8746 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 8747 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 8748 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return false;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@IsRecently@2
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN2@IsRecently@2
$LN1@IsRecently@2:
	xor	al, al
	jmp	SHORT $LN3@IsRecently@2
$LN2@IsRecently@2:

; 8749 : 
; 8750 : 	const int iRecentlyBulliedTurnInterval = 20; //antonjs: todo: constant/XML

	mov	DWORD PTR _iRecentlyBulliedTurnInterval$[ebp], 20 ; 00000014H

; 8751 : 	return (m_aiTurnLastBullied[ePlayer] >= 0 && m_aiTurnLastBullied[ePlayer] >= (GC.getGame().getGameTurn() - iRecentlyBulliedTurnInterval)); // -1 means never bullied

	mov	eax, DWORD PTR _ePlayer$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+2816], 0
	jl	SHORT $LN5@IsRecently@2
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T245883[ebp], edx
	mov	ecx, DWORD PTR $T245883[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	sub	eax, 20					; 00000014H
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx*4+2816], eax
	jl	SHORT $LN5@IsRecently@2
	mov	DWORD PTR tv79[ebp], 1
	jmp	SHORT $LN6@IsRecently@2
$LN5@IsRecently@2:
	mov	DWORD PTR tv79[ebp], 0
$LN6@IsRecently@2:
	mov	al, BYTE PTR tv79[ebp]
$LN3@IsRecently@2:

; 8752 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsRecentlyBulliedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::IsRecentlyBulliedByMajor
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetTurnLastBulliedByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetTurnLastBulliedByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetTurnLastBulliedByMajor, COMDAT
; _this$ = ecx

; 8755 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 8756 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 8757 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 8758 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return -1;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@GetTurnLas@3
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN2@GetTurnLas@3
$LN1@GetTurnLas@3:
	or	eax, -1
	jmp	SHORT $LN3@GetTurnLas@3
$LN2@GetTurnLas@3:

; 8759 : 
; 8760 : 	return m_aiTurnLastBullied[ePlayer];

	mov	eax, DWORD PTR _ePlayer$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+2816]
$LN3@GetTurnLas@3:

; 8761 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetTurnLastBulliedByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetTurnLastBulliedByMajor
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?SetTurnLastBulliedByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
_iTurn$ = 12						; size = 4
?SetTurnLastBulliedByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z PROC ; CvMinorCivAI::SetTurnLastBulliedByMajor, COMDAT
; _this$ = ecx

; 8764 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 8765 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 8766 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 8767 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@SetTurnLas@3
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN2@SetTurnLas@3
$LN1@SetTurnLas@3:
	jmp	SHORT $LN3@SetTurnLas@3
$LN2@SetTurnLas@3:

; 8768 : 
; 8769 : 	m_aiTurnLastBullied[ePlayer] = iTurn;

	mov	eax, DWORD PTR _ePlayer$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _iTurn$[ebp]
	mov	DWORD PTR [ecx+eax*4+2816], edx
$LN3@SetTurnLas@3:

; 8770 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetTurnLastBulliedByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ENDP ; CvMinorCivAI::SetTurnLastBulliedByMajor
_TEXT	ENDS
PUBLIC	??_C@_0CM@HEBIDICI@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@ ; `string'
PUBLIC	??_C@_0CO@IDCJAFDG@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@ ; `string'
PUBLIC	??_C@_0CO@OMNFMFJG@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@ ; `string'
PUBLIC	??_C@_0DA@DKGDJAGM@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@ ; `string'
PUBLIC	??_C@_0CO@CFJHHOMM@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@ ; `string'
PUBLIC	??_C@_0DA@CGIEIGPE@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@ ; `string'
PUBLIC	?ChooseByWeight@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@QAE?AW4PlayerTypes@@PAV?$FastDelegate2@HPBDH@fastdelegate@@PBD@Z ; CvWeightedVector<enum PlayerTypes,22,1>::ChooseByWeight
PUBLIC	??_C@_0CG@IIGFPPJB@Choosing?5CS?5election?5winner?5by?5w@ ; `string'
PUBLIC	??$MakeDelegate@VCvGame@@V1@HPBDH@fastdelegate@@YA?AV?$FastDelegate2@HPBDH@0@PAVCvGame@@P82@AEHHPBD@Z@Z ; fastdelegate::MakeDelegate<CvGame,CvGame,int,char const *,int>
PUBLIC	__$ArrayPad$
EXTRN	?getSpyNames@CvCivilizationInfo@@QBEPBDH@Z:PROC	; CvCivilizationInfo::getSpyNames
EXTRN	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ:PROC ; CvPlayer::getCivilizationInfo
EXTRN	?GetSpyRankName@CvPlayerEspionage@@QBEPBDH@Z:PROC ; CvPlayerEspionage::GetSpyRankName
EXTRN	?getNameKey@CvCity@@QBEPBDXZ:PROC		; CvCity::getNameKey
EXTRN	?SetLastProgress@CvCityEspionage@@QAEXW4PlayerTypes@@H@Z:PROC ; CvCityEspionage::SetLastProgress
EXTRN	?SetActivity@CvCityEspionage@@QAEXW4PlayerTypes@@HHH@Z:PROC ; CvCityEspionage::SetActivity
EXTRN	?CalcRequired@CvPlayerEspionage@@QAEHHPAVCvCity@@H@Z:PROC ; CvPlayerEspionage::CalcRequired
EXTRN	?CalcPerTurn@CvPlayerEspionage@@QAEHHPAVCvCity@@H@Z:PROC ; CvPlayerEspionage::CalcPerTurn
EXTRN	?ResetProgress@CvCityEspionage@@QAEXW4PlayerTypes@@@Z:PROC ; CvCityEspionage::ResetProgress
EXTRN	?GetCityEspionage@CvCity@@QBEPAVCvCityEspionage@@XZ:PROC ; CvCity::GetCityEspionage
EXTRN	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ:PROC ; CvPlayer::GetEspionage
EXTRN	?GetTurnsUntilMinorCivElection@CvGame@@QAEHXZ:PROC ; CvGame::GetTurnsUntilMinorCivElection
;	COMDAT ??_C@_0CM@HEBIDICI@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0CM@HEBIDICI@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SPY_RIG_ELECTION_ALERT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@IDCJAFDG@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@
CONST	SEGMENT
??_C@_0CO@IDCJAFDG@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SPY_RIG_ELECTION_ALERT_S', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@OMNFMFJG@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@
CONST	SEGMENT
??_C@_0CO@OMNFMFJG@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SPY_RIG_ELECTION_FAILURE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@DKGDJAGM@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@
CONST	SEGMENT
??_C@_0DA@DKGDJAGM@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SPY_RIG_ELECTION_FAILURE_S', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@CFJHHOMM@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@
CONST	SEGMENT
??_C@_0CO@CFJHHOMM@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SPY_RIG_ELECTION_SUCCESS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@CGIEIGPE@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@
CONST	SEGMENT
??_C@_0DA@CGIEIGPE@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SPY_RIG_ELECTION_SUCCESS_S', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@IIGFPPJB@Choosing?5CS?5election?5winner?5by?5w@
CONST	SEGMENT
??_C@_0CG@IIGFPPJB@Choosing?5CS?5election?5winner?5by?5w@ DB 'Choosing CS'
	DB	' election winner by weight', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?DoElection@CvMinorCivAI@@QAEXXZ DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?DoElection@CvMinorCivAI@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?DoElection@CvMinorCivAI@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoElection@CvMinorCivAI@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DoElection@CvMinorCivAI@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?DoElection@CvMinorCivAI@@QAEXXZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?DoElection@CvMinorCivAI@@QAEXXZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$?DoElection@CvMinorCivAI@@QAEXXZ$4
	DD	00H
	DD	FLAT:__unwindfunclet$?DoElection@CvMinorCivAI@@QAEXXZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$?DoElection@CvMinorCivAI@@QAEXXZ$6
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoElection@CvMinorCivAI@@QAEXXZ
_TEXT	SEGMENT
tv585 = -1172						; size = 4
tv573 = -1168						; size = 4
tv714 = -1164						; size = 4
tv341 = -1160						; size = 4
_this$ = -1156						; size = 4
$T246224 = -1140					; size = 4
$T246220 = -1136					; size = 4
$T246213 = -1132					; size = 4
$T246207 = -1128					; size = 4
$T246203 = -1124					; size = 4
$T246199 = -1120					; size = 4
$T246190 = -1116					; size = 4
$T246181 = -1112					; size = 4
$T246177 = -1108					; size = 4
$T246168 = -1104					; size = 4
$T246159 = -1100					; size = 4
$T246155 = -1096					; size = 4
$T246148 = -1092					; size = 4
$T246141 = -1088					; size = 4
$T246134 = -1084					; size = 4
$T246130 = -1080					; size = 4
$T246121 = -1076					; size = 4
$T246117 = -1072					; size = 4
$T246116 = -1068					; size = 4
$T246107 = -1064					; size = 4
$T246103 = -1060					; size = 4
$T246099 = -1056					; size = 4
$T246095 = -1052					; size = 4
$T246091 = -1048					; size = 4
$T246082 = -1044					; size = 4
$T246073 = -1040					; size = 4
$T246066 = -1036					; size = 4
$T246059 = -1032					; size = 4
$T246028 = -996						; size = 4
$T246012 = -992						; size = 4
$T245977 = -988						; size = 4
_weightedElem$245972 = -984				; size = 8
$T245963 = -976						; size = 4
$T245956 = -972						; size = 4
$T245943 = -965						; size = 1
$T245934 = -964						; size = 4
$T245927 = -960						; size = 4
$T245915 = -956						; size = 4
$T245904 = -952						; size = 4
$T245903 = -948						; size = 4
$T245902 = -944						; size = 4
$T245901 = -940						; size = 4
$T245900 = -936						; size = 4
$T245899 = -932						; size = 4
$T245898 = -928						; size = 4
$T245897 = -924						; size = 4
$T245896 = -920						; size = 4
$T245895 = -916						; size = 4
$T245894 = -912						; size = 4
$T245893 = -908						; size = 4
$T245892 = -904						; size = 4
$T245891 = -900						; size = 8
_iInfluenceModifier$227874 = -892			; size = 4
_iDiminishAmount$227875 = -888				; size = 4
_strNotification$227869 = -884				; size = 80
_strSummary$227865 = -804				; size = 80
_pNotifications$227863 = -720				; size = 4
_strNotification$227853 = -716				; size = 80
_strSummary$227849 = -636				; size = 80
_pNotifications$227847 = -552				; size = 4
_bMet$227845 = -545					; size = 1
_iRelationshipAnchor$227843 = -544			; size = 4
_iFriendship$227842 = -540				; size = 4
_bFriends$227844 = -533					; size = 1
_strNotification$227833 = -532				; size = 80
_strSummary$227829 = -452				; size = 80
_pNotifications$227827 = -372				; size = 4
_iInfluenceModifier$227839 = -368			; size = 4
_ePlayer$227824 = -364					; size = 4
_ui$227820 = -360					; size = 4
_fcn$227788 = -356					; size = 8
_eElectionWinner$227818 = -348				; size = 4
_pCityEspionage$227657 = -344				; size = 4
_iGoal$227662 = -340					; size = 4
_iRate$227661 = -336					; size = 4
_iSpyID$227658 = -332					; size = 4
_pCity$227653 = -328					; size = 4
_pPlayerEspionage$227649 = -324				; size = 4
_eEspionagePlayer$227647 = -320				; size = 4
_iVotes$227650 = -316					; size = 4
_iLoop$227651 = -312					; size = 4
_ui$227643 = -308					; size = 4
_pCapital$ = -304					; size = 4
_apSpy$ = -300						; size = 88
_wvVotes$ = -212					; size = 192
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?DoElection@CvMinorCivAI@@QAEXXZ PROC			; CvMinorCivAI::DoElection, COMDAT
; _this$ = ecx

; 8776 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoElection@CvMinorCivAI@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1160				; 00000488H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 8777 : 	// if it is not an election turn, don't process!
; 8778 : 	if(GC.getGame().GetTurnsUntilMinorCivElection() != 0)

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T245915[ebp], eax
	mov	ecx, DWORD PTR $T245915[ebp]
	call	?GetTurnsUntilMinorCivElection@CvGame@@QAEHXZ ; CvGame::GetTurnsUntilMinorCivElection
	test	eax, eax
	je	SHORT $LN27@DoElection

; 8779 : 	{
; 8780 : 		return;

	jmp	$LN28@DoElection
$LN27@DoElection:

; 8781 : 	}
; 8782 : 
; 8783 : 	CvWeightedVector<PlayerTypes, MAX_MAJOR_CIVS, true> wvVotes;

	lea	ecx, DWORD PTR _wvVotes$[ebp]
	call	??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>::FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 8784 : 	Firaxis::Array<CvEspionageSpy*, MAX_MAJOR_CIVS> apSpy;
; 8785 : 	CvCity* pCapital = GetPlayer()->getCapitalCity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pCapital$[ebp], eax

; 8786 : 	if(!pCapital)

	cmp	DWORD PTR _pCapital$[ebp], 0
	jne	SHORT $LN26@DoElection

; 8787 : 	{
; 8788 : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wvVotes$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>::~FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>
	jmp	$LN28@DoElection
$LN26@DoElection:

; 8789 : 	}
; 8790 : 
; 8791 : 	for(uint ui = 0; ui < MAX_MAJOR_CIVS; ui++)

	mov	DWORD PTR _ui$227643[ebp], 0
	jmp	SHORT $LN25@DoElection
$LN24@DoElection:
	mov	ecx, DWORD PTR _ui$227643[ebp]
	add	ecx, 1
	mov	DWORD PTR _ui$227643[ebp], ecx
$LN25@DoElection:
	cmp	DWORD PTR _ui$227643[ebp], 22		; 00000016H
	jae	$LN23@DoElection

; 8792 : 	{
; 8793 : 		PlayerTypes eEspionagePlayer = (PlayerTypes)ui;

	mov	edx, DWORD PTR _ui$227643[ebp]
	mov	DWORD PTR _eEspionagePlayer$227647[ebp], edx

; 8794 : 		CvPlayerEspionage* pPlayerEspionage = GET_PLAYER(eEspionagePlayer).GetEspionage();

	mov	eax, DWORD PTR _eEspionagePlayer$227647[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T245927[ebp], eax
	mov	ecx, DWORD PTR $T245927[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	DWORD PTR _pPlayerEspionage$227649[ebp], eax

; 8795 : 		int iVotes = 0;

	mov	DWORD PTR _iVotes$227650[ebp], 0

; 8796 : 		int iLoop;
; 8797 : 		apSpy[ui] = NULL;

	mov	ecx, DWORD PTR _ui$227643[ebp]
	mov	DWORD PTR _apSpy$[ebp+ecx*4], 0

; 8798 : 
; 8799 : 		if (!GET_PLAYER(eEspionagePlayer).isAlive())

	mov	edx, DWORD PTR _eEspionagePlayer$227647[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T245934[ebp], edx
	mov	eax, DWORD PTR $T245934[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T245943[ebp], cl
	movzx	edx, BYTE PTR $T245943[ebp]
	test	edx, edx
	jne	SHORT $LN22@DoElection

; 8800 : 		{
; 8801 : 			continue;

	jmp	$LN24@DoElection
$LN22@DoElection:

; 8802 : 		}
; 8803 : 
; 8804 : 		for(CvCity* pCity = m_pPlayer->firstCity(&iLoop); pCity != NULL; pCity = m_pPlayer->nextCity(&iLoop))

	push	0
	lea	eax, DWORD PTR _iLoop$227651[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pCity$227653[ebp], eax
	jmp	SHORT $LN21@DoElection
$LN20@DoElection:
	push	0
	lea	edx, DWORD PTR _iLoop$227651[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pCity$227653[ebp], eax
$LN21@DoElection:
	cmp	DWORD PTR _pCity$227653[ebp], 0
	je	$LN19@DoElection

; 8805 : 		{
; 8806 : 			CvCityEspionage* pCityEspionage = pCity->GetCityEspionage();

	mov	ecx, DWORD PTR _pCity$227653[ebp]
	call	?GetCityEspionage@CvCity@@QBEPAVCvCityEspionage@@XZ ; CvCity::GetCityEspionage
	mov	DWORD PTR _pCityEspionage$227657[ebp], eax

; 8807 : 			int iSpyID = pCityEspionage->m_aiSpyAssignment[eEspionagePlayer];

	mov	ecx, DWORD PTR _eEspionagePlayer$227647[ebp]
	mov	edx, DWORD PTR _pCityEspionage$227657[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+4]
	mov	DWORD PTR _iSpyID$227658[ebp], eax

; 8808 : 			// if no spies are assigned here, continue
; 8809 : 			if(iSpyID == -1)

	cmp	DWORD PTR _iSpyID$227658[ebp], -1
	jne	SHORT $LN57@DoElection

; 8810 : 			{
; 8811 : 				continue;

	jmp	SHORT $LN20@DoElection

; 8812 : 			}
; 8813 : 
; 8814 : 			// on election day, evaluate spy to be reassigned
; 8815 : 			pPlayerEspionage->m_aSpyList[iSpyID].m_bEvaluateReassignment = true;

$LN57@DoElection:
	mov	ecx, DWORD PTR _iSpyID$227658[ebp]
	imul	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR _pPlayerEspionage$227649[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	BYTE PTR [eax+ecx+25], 1

; 8816 : 
; 8817 : 			// if the spy assigned here is not rigging the election yet, continue
; 8818 : 			if(pPlayerEspionage->m_aSpyList[iSpyID].m_eSpyState != SPY_STATE_RIG_ELECTION)

	mov	ecx, DWORD PTR _iSpyID$227658[ebp]
	imul	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR _pPlayerEspionage$227649[ebp]
	mov	eax, DWORD PTR [edx+4]
	cmp	DWORD PTR [eax+ecx+16], 4
	je	SHORT $LN17@DoElection

; 8819 : 			{
; 8820 : 				continue;

	jmp	$LN20@DoElection
$LN17@DoElection:

; 8821 : 			}
; 8822 : 
; 8823 : 			apSpy[ui] = &(pPlayerEspionage->m_aSpyList[iSpyID]);

	mov	ecx, DWORD PTR _iSpyID$227658[ebp]
	imul	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR _pPlayerEspionage$227649[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR $T245956[ebp], ecx
	mov	eax, DWORD PTR _ui$227643[ebp]
	mov	ecx, DWORD PTR $T245956[ebp]
	mov	DWORD PTR _apSpy$[ebp+eax*4], ecx

; 8824 : 
; 8825 : 			iVotes += (pCityEspionage->m_aiAmount[eEspionagePlayer] * (100 + m_pPlayer->GetPlayerPolicies()->GetNumericModifier(POLICYMOD_RIGGING_ELECTION_MODIFIER))) / 100;

	mov	edx, DWORD PTR _eEspionagePlayer$227647[ebp]
	mov	eax, DWORD PTR _pCityEspionage$227657[ebp]
	lea	ecx, DWORD PTR [eax+edx*4+92]
	mov	DWORD PTR $T245963[ebp], ecx
	push	35					; 00000023H
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	add	eax, 100				; 00000064H
	mov	ecx, DWORD PTR $T245963[ebp]
	imul	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	add	eax, DWORD PTR _iVotes$227650[ebp]
	mov	DWORD PTR _iVotes$227650[ebp], eax

; 8826 : 
; 8827 : 			// now that votes are counted, remove the progress from the spy
; 8828 : 			pCityEspionage->ResetProgress(eEspionagePlayer);

	mov	edx, DWORD PTR _eEspionagePlayer$227647[ebp]
	push	edx
	mov	ecx, DWORD PTR _pCityEspionage$227657[ebp]
	call	?ResetProgress@CvCityEspionage@@QAEXW4PlayerTypes@@@Z ; CvCityEspionage::ResetProgress

; 8829 : 
; 8830 : 			int iRate = pPlayerEspionage->CalcPerTurn(SPY_STATE_RIG_ELECTION, pCity, iSpyID);

	mov	eax, DWORD PTR _iSpyID$227658[ebp]
	push	eax
	mov	ecx, DWORD PTR _pCity$227653[ebp]
	push	ecx
	push	4
	mov	ecx, DWORD PTR _pPlayerEspionage$227649[ebp]
	call	?CalcPerTurn@CvPlayerEspionage@@QAEHHPAVCvCity@@H@Z ; CvPlayerEspionage::CalcPerTurn
	mov	DWORD PTR _iRate$227661[ebp], eax

; 8831 : 			int iGoal = pPlayerEspionage->CalcRequired(SPY_STATE_RIG_ELECTION, pCity, iSpyID);

	mov	edx, DWORD PTR _iSpyID$227658[ebp]
	push	edx
	mov	eax, DWORD PTR _pCity$227653[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _pPlayerEspionage$227649[ebp]
	call	?CalcRequired@CvPlayerEspionage@@QAEHHPAVCvCity@@H@Z ; CvPlayerEspionage::CalcRequired
	mov	DWORD PTR _iGoal$227662[ebp], eax

; 8832 : 			pCityEspionage->SetActivity(eEspionagePlayer, 0, iRate, iGoal);

	mov	ecx, DWORD PTR _iGoal$227662[ebp]
	push	ecx
	mov	edx, DWORD PTR _iRate$227661[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _eEspionagePlayer$227647[ebp]
	push	eax
	mov	ecx, DWORD PTR _pCityEspionage$227657[ebp]
	call	?SetActivity@CvCityEspionage@@QAEXW4PlayerTypes@@HHH@Z ; CvCityEspionage::SetActivity

; 8833 : 			pCityEspionage->SetLastProgress(eEspionagePlayer, iRate);

	mov	ecx, DWORD PTR _iRate$227661[ebp]
	push	ecx
	mov	edx, DWORD PTR _eEspionagePlayer$227647[ebp]
	push	edx
	mov	ecx, DWORD PTR _pCityEspionage$227657[ebp]
	call	?SetLastProgress@CvCityEspionage@@QAEXW4PlayerTypes@@H@Z ; CvCityEspionage::SetLastProgress

; 8834 : 		}

	jmp	$LN20@DoElection
$LN19@DoElection:

; 8835 : 
; 8836 : 		if(iVotes > 0)

	cmp	DWORD PTR _iVotes$227650[ebp], 0
	jle	SHORT $LN16@DoElection

; 8837 : 		{
; 8838 : 			wvVotes.push_back(eEspionagePlayer, iVotes);

	mov	DWORD PTR _weightedElem$245972[ebp], 0
	mov	DWORD PTR _weightedElem$245972[ebp+4], 0
	mov	eax, DWORD PTR _eEspionagePlayer$227647[ebp]
	mov	DWORD PTR _weightedElem$245972[ebp], eax
	mov	ecx, DWORD PTR _iVotes$227650[ebp]
	mov	DWORD PTR _weightedElem$245972[ebp+4], ecx
	lea	edx, DWORD PTR _weightedElem$245972[ebp]
	push	edx
	lea	ecx, DWORD PTR _wvVotes$[ebp]
	call	?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@Z ; FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>::push_back
$LN16@DoElection:

; 8839 : 		}
; 8840 : 	}

	jmp	$LN24@DoElection
$LN23@DoElection:

; 8841 : 
; 8842 : 	if(wvVotes.size() > 0)

	mov	eax, DWORD PTR _wvVotes$[ebp+4]
	mov	DWORD PTR $T245977[ebp], eax
	cmp	DWORD PTR $T245977[ebp], 0
	jle	$LN15@DoElection

; 8843 : 	{
; 8844 : 		RandomNumberDelegate fcn;

	mov	DWORD PTR _fcn$227788[ebp], 0
	mov	DWORD PTR _fcn$227788[ebp+4], 0
	mov	DWORD PTR _fcn$227788[ebp], 0
	mov	DWORD PTR _fcn$227788[ebp+4], 0

; 8845 : 		fcn = MakeDelegate(&GC.getGame(), &CvGame::getJonRandNum);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T246012[ebp], ecx
	push	OFFSET ?getJonRandNum@CvGame@@QAEHHPBD@Z ; CvGame::getJonRandNum
	mov	edx, DWORD PTR $T246012[ebp]
	push	edx
	lea	eax, DWORD PTR $T245891[ebp]
	push	eax
	call	??$MakeDelegate@VCvGame@@V1@HPBDH@fastdelegate@@YA?AV?$FastDelegate2@HPBDH@0@PAVCvGame@@P82@AEHHPBD@Z@Z ; fastdelegate::MakeDelegate<CvGame,CvGame,int,char const *,int>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T246028[ebp], eax
	mov	ecx, DWORD PTR $T246028[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _fcn$227788[ebp+4], edx
	mov	eax, DWORD PTR $T246028[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _fcn$227788[ebp], ecx

; 8846 : 		PlayerTypes eElectionWinner = wvVotes.ChooseByWeight(&fcn, "Choosing CS election winner by weight");

	push	OFFSET ??_C@_0CG@IIGFPPJB@Choosing?5CS?5election?5winner?5by?5w@
	lea	edx, DWORD PTR _fcn$227788[ebp]
	push	edx
	lea	ecx, DWORD PTR _wvVotes$[ebp]
	call	?ChooseByWeight@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@QAE?AW4PlayerTypes@@PAV?$FastDelegate2@HPBDH@fastdelegate@@PBD@Z ; CvWeightedVector<enum PlayerTypes,22,1>::ChooseByWeight
	mov	DWORD PTR _eElectionWinner$227818[ebp], eax

; 8847 : 
; 8848 : 		for(uint ui = 0; ui < MAX_MAJOR_CIVS; ui++)

	mov	DWORD PTR _ui$227820[ebp], 0
	jmp	SHORT $LN14@DoElection
$LN13@DoElection:
	mov	eax, DWORD PTR _ui$227820[ebp]
	add	eax, 1
	mov	DWORD PTR _ui$227820[ebp], eax
$LN14@DoElection:
	cmp	DWORD PTR _ui$227820[ebp], 22		; 00000016H
	jae	$LN15@DoElection

; 8849 : 		{
; 8850 : 			PlayerTypes ePlayer = (PlayerTypes)ui;

	mov	ecx, DWORD PTR _ui$227820[ebp]
	mov	DWORD PTR _ePlayer$227824[ebp], ecx

; 8851 : 
; 8852 : 			if(ePlayer == eElectionWinner)

	mov	edx, DWORD PTR _ePlayer$227824[ebp]
	cmp	edx, DWORD PTR _eElectionWinner$227818[ebp]
	jne	$LN11@DoElection

; 8853 : 			{
; 8854 : 				CvNotifications* pNotifications = GET_PLAYER(ePlayer).GetNotifications();

	mov	eax, DWORD PTR _ePlayer$227824[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246059[ebp], eax
	mov	ecx, DWORD PTR $T246059[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	DWORD PTR _pNotifications$227827[ebp], eax

; 8855 : 				if(pNotifications)

	cmp	DWORD PTR _pNotifications$227827[ebp], 0
	je	$LN10@DoElection

; 8856 : 				{
; 8857 : 					Localization::String strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SPY_RIG_ELECTION_SUCCESS_S");

	push	OFFSET ??_C@_0DA@CGIEIGPE@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@
	lea	ecx, DWORD PTR _strSummary$227829[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 8858 : 					strSummary << pCapital->getNameKey();

	mov	ecx, DWORD PTR _pCapital$[ebp]
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	mov	DWORD PTR $T245892[ebp], eax
	lea	edx, DWORD PTR $T245892[ebp]
	push	edx
	lea	eax, DWORD PTR _strSummary$227829[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 8859 : 					Localization::String strNotification = Localization::Lookup("TXT_KEY_NOTIFICATION_SPY_RIG_ELECTION_SUCCESS");

	push	OFFSET ??_C@_0CO@CFJHHOMM@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@
	lea	ecx, DWORD PTR _strNotification$227833[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 8860 : 					strNotification << GET_PLAYER(ePlayer).GetEspionage()->GetSpyRankName(apSpy[ui]->m_eRank);

	mov	edx, DWORD PTR _ePlayer$227824[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246066[ebp], edx
	mov	eax, DWORD PTR _ui$227820[ebp]
	mov	ecx, DWORD PTR _apSpy$[ebp+eax*4]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	ecx, DWORD PTR $T246066[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	ecx, eax
	call	?GetSpyRankName@CvPlayerEspionage@@QBEPBDH@Z ; CvPlayerEspionage::GetSpyRankName
	mov	DWORD PTR $T245893[ebp], eax
	lea	eax, DWORD PTR $T245893[ebp]
	push	eax
	lea	ecx, DWORD PTR _strNotification$227833[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 8861 : 					strNotification << GET_PLAYER(ePlayer).getCivilizationInfo().getSpyNames(apSpy[ui]->m_iName);

	mov	edx, DWORD PTR _ePlayer$227824[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246073[ebp], edx
	mov	eax, DWORD PTR _ui$227820[ebp]
	mov	ecx, DWORD PTR _apSpy$[ebp+eax*4]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR $T246073[ebp]
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getSpyNames@CvCivilizationInfo@@QBEPBDH@Z ; CvCivilizationInfo::getSpyNames
	mov	DWORD PTR $T245894[ebp], eax
	lea	eax, DWORD PTR $T245894[ebp]
	push	eax
	lea	ecx, DWORD PTR _strNotification$227833[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 8862 : 					strNotification << pCapital->getNameKey();

	mov	ecx, DWORD PTR _pCapital$[ebp]
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	mov	DWORD PTR $T245895[ebp], eax
	lea	edx, DWORD PTR $T245895[ebp]
	push	edx
	lea	eax, DWORD PTR _strNotification$227833[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 8863 : 					pNotifications->Add(NOTIFICATION_SPY_RIG_ELECTION_SUCCESS, strNotification.toUTF8(), strSummary.toUTF8(), pCapital->getX(), pCapital->getY(), -1);

	mov	ecx, DWORD PTR _pCapital$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR $T246082[ebp], edx
	mov	eax, DWORD PTR _pCapital$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T246091[ebp], ecx
	push	-1
	push	-1
	mov	edx, DWORD PTR $T246082[ebp]
	push	edx
	mov	eax, DWORD PTR $T246091[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$227829[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strNotification$227833[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	-1502528765				; a6713b03H
	mov	ecx, DWORD PTR _pNotifications$227827[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 8864 : 				}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _strNotification$227833[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$227829[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN10@DoElection:

; 8865 : 
; 8866 : 				int iInfluenceModifier = GET_PLAYER(ePlayer).GetPlayerPolicies()->GetNumericModifier(POLICYMOD_RIGGING_ELECTION_MODIFIER); // NQMP GJS - new Covert Action

	mov	ecx, DWORD PTR _ePlayer$227824[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246095[ebp], ecx
	push	35					; 00000023H
	mov	ecx, DWORD PTR $T246095[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	mov	DWORD PTR _iInfluenceModifier$227839[ebp], eax

; 8867 : 				ChangeFriendshipWithMajor(ePlayer, GC.getESPIONAGE_INFLUENCE_GAINED_FOR_RIGGED_ELECTION() * (100 + iInfluenceModifier) / 100, false); // NQMP GJS - new Covert Action

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7940
	mov	DWORD PTR $T246099[ebp], edx
	push	0
	mov	eax, DWORD PTR _iInfluenceModifier$227839[ebp]
	add	eax, 100				; 00000064H
	imul	eax, DWORD PTR $T246099[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _ePlayer$227824[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::ChangeFriendshipWithMajor

; 8868 : 
; 8869 : 				//Achievements!
; 8870 : 				if(ePlayer == GC.getGame().getActivePlayer())

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T246103[ebp], eax
	mov	ecx, DWORD PTR $T246103[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR _ePlayer$227824[ebp], eax
	jne	SHORT $LN9@DoElection

; 8871 : 				{
; 8872 : 					gDLL->UnlockAchievement(ACHIEVEMENT_XP1_14);

	mov	ecx, DWORD PTR $T246107[ebp]
	mov	DWORD PTR tv341[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv341[ebp], edx
	push	204					; 000000ccH
	mov	eax, DWORD PTR tv341[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv341[ebp]
	mov	eax, DWORD PTR [edx+828]
	call	eax
$LN9@DoElection:

; 8873 : 				}
; 8874 : 			}
; 8875 : 			else

	jmp	$LN8@DoElection
$LN11@DoElection:

; 8876 : 			{
; 8877 : 				int iFriendship = GetEffectiveFriendshipWithMajor(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$227824[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajor
	mov	DWORD PTR _iFriendship$227842[ebp], eax

; 8878 : 				int iRelationshipAnchor = GetFriendshipAnchorWithMajor(ePlayer);

	mov	edx, DWORD PTR _ePlayer$227824[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFriendshipAnchorWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetFriendshipAnchorWithMajor
	mov	DWORD PTR _iRelationshipAnchor$227843[ebp], eax

; 8879 : 				bool bFriends = IsFriends(ePlayer);

	mov	eax, DWORD PTR _ePlayer$227824[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	mov	BYTE PTR _bFriends$227844[ebp], al

; 8880 : 				bool bMet = GET_TEAM(GET_PLAYER(ePlayer).getTeam()).isHasMet(m_pPlayer->getTeam());

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T246116[ebp], edx
	mov	eax, DWORD PTR $T246116[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T246117[ebp], eax
	mov	edx, DWORD PTR _ePlayer$227824[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246121[ebp], edx
	mov	eax, DWORD PTR $T246121[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T246130[ebp], eax
	mov	edx, DWORD PTR $T246130[ebp]
	imul	edx, 2984				; 00000ba8H
	add	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T246134[ebp], edx
	mov	eax, DWORD PTR $T246117[ebp]
	push	eax
	mov	ecx, DWORD PTR $T246134[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	mov	BYTE PTR _bMet$227845[ebp], al

; 8881 : 
; 8882 : 				// if they have a spy in the city
; 8883 : 				if(apSpy[ui] != NULL)

	mov	ecx, DWORD PTR _ui$227820[ebp]
	cmp	DWORD PTR _apSpy$[ebp+ecx*4], 0
	je	$LN7@DoElection

; 8884 : 				{
; 8885 : 					CvNotifications* pNotifications = GET_PLAYER(ePlayer).GetNotifications();

	mov	edx, DWORD PTR _ePlayer$227824[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246141[ebp], edx
	mov	ecx, DWORD PTR $T246141[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	DWORD PTR _pNotifications$227847[ebp], eax

; 8886 : 					if(pNotifications)

	cmp	DWORD PTR _pNotifications$227847[ebp], 0
	je	$LN6@DoElection

; 8887 : 					{
; 8888 : 						Localization::String strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SPY_RIG_ELECTION_FAILURE_S");

	push	OFFSET ??_C@_0DA@DKGDJAGM@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@
	lea	eax, DWORD PTR _strSummary$227849[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 8889 : 						strSummary << pCapital->getNameKey();

	mov	ecx, DWORD PTR _pCapital$[ebp]
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	mov	DWORD PTR $T245896[ebp], eax
	lea	ecx, DWORD PTR $T245896[ebp]
	push	ecx
	lea	edx, DWORD PTR _strSummary$227849[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 8890 : 						Localization::String strNotification = Localization::Lookup("TXT_KEY_NOTIFICATION_SPY_RIG_ELECTION_FAILURE");

	push	OFFSET ??_C@_0CO@OMNFMFJG@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@
	lea	eax, DWORD PTR _strNotification$227853[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 8891 : 						strNotification << GET_PLAYER(ePlayer).GetEspionage()->GetSpyRankName(apSpy[ui]->m_eRank);

	mov	ecx, DWORD PTR _ePlayer$227824[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246148[ebp], ecx
	mov	edx, DWORD PTR _ui$227820[ebp]
	mov	eax, DWORD PTR _apSpy$[ebp+edx*4]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR $T246148[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	ecx, eax
	call	?GetSpyRankName@CvPlayerEspionage@@QBEPBDH@Z ; CvPlayerEspionage::GetSpyRankName
	mov	DWORD PTR $T245897[ebp], eax
	lea	edx, DWORD PTR $T245897[ebp]
	push	edx
	lea	eax, DWORD PTR _strNotification$227853[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 8892 : 						strNotification << GET_PLAYER(ePlayer).getCivilizationInfo().getSpyNames(apSpy[ui]->m_iName);

	mov	ecx, DWORD PTR _ePlayer$227824[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246155[ebp], ecx
	mov	edx, DWORD PTR _ui$227820[ebp]
	mov	eax, DWORD PTR _apSpy$[ebp+edx*4]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR $T246155[ebp]
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getSpyNames@CvCivilizationInfo@@QBEPBDH@Z ; CvCivilizationInfo::getSpyNames
	mov	DWORD PTR $T245898[ebp], eax
	lea	edx, DWORD PTR $T245898[ebp]
	push	edx
	lea	eax, DWORD PTR _strNotification$227853[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 8893 : 						strNotification << pCapital->getNameKey();

	mov	ecx, DWORD PTR _pCapital$[ebp]
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	mov	DWORD PTR $T245899[ebp], eax
	lea	ecx, DWORD PTR $T245899[ebp]
	push	ecx
	lea	edx, DWORD PTR _strNotification$227853[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 8894 : 						strNotification << GET_PLAYER(eElectionWinner).getCivilizationShortDescriptionKey();

	mov	eax, DWORD PTR _eElectionWinner$227818[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246159[ebp], eax
	mov	ecx, DWORD PTR $T246159[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR $T245900[ebp], eax
	lea	ecx, DWORD PTR $T245900[ebp]
	push	ecx
	lea	edx, DWORD PTR _strNotification$227853[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 8895 : 						pNotifications->Add(NOTIFICATION_SPY_RIG_ELECTION_FAILURE, strNotification.toUTF8(), strSummary.toUTF8(), pCapital->getX(), pCapital->getY(), -1);

	mov	eax, DWORD PTR _pCapital$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T246168[ebp], ecx
	mov	edx, DWORD PTR _pCapital$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T246177[ebp], eax
	push	-1
	push	-1
	mov	ecx, DWORD PTR $T246168[ebp]
	push	ecx
	mov	edx, DWORD PTR $T246177[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$227849[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strNotification$227853[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	-387258512				; e8eae770H
	mov	ecx, DWORD PTR _pNotifications$227847[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 8896 : 					}

	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _strNotification$227853[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$227849[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN6@DoElection:

; 8897 : 				}

	jmp	$LN5@DoElection
$LN7@DoElection:

; 8898 : 				else if (bMet && (bFriends || iFriendship > iRelationshipAnchor))

	movzx	eax, BYTE PTR _bMet$227845[ebp]
	test	eax, eax
	je	$LN5@DoElection
	movzx	ecx, BYTE PTR _bFriends$227844[ebp]
	test	ecx, ecx
	jne	SHORT $LN3@DoElection
	mov	edx, DWORD PTR _iFriendship$227842[ebp]
	cmp	edx, DWORD PTR _iRelationshipAnchor$227843[ebp]
	jle	$LN5@DoElection
$LN3@DoElection:

; 8899 : 				{
; 8900 : 					// no spy in the city, so just give them an alert that scenanigans are going on
; 8901 : 					CvNotifications* pNotifications = GET_PLAYER(ePlayer).GetNotifications();

	mov	eax, DWORD PTR _ePlayer$227824[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246181[ebp], eax
	mov	ecx, DWORD PTR $T246181[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	DWORD PTR _pNotifications$227863[ebp], eax

; 8902 : 					if(pNotifications)

	cmp	DWORD PTR _pNotifications$227863[ebp], 0
	je	$LN5@DoElection

; 8903 : 					{
; 8904 : 						Localization::String strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SPY_RIG_ELECTION_ALERT_S");

	push	OFFSET ??_C@_0CO@IDCJAFDG@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@
	lea	ecx, DWORD PTR _strSummary$227865[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 5

; 8905 : 						strSummary << pCapital->getNameKey();

	mov	ecx, DWORD PTR _pCapital$[ebp]
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	mov	DWORD PTR $T245901[ebp], eax
	lea	edx, DWORD PTR $T245901[ebp]
	push	edx
	lea	eax, DWORD PTR _strSummary$227865[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 8906 : 						Localization::String strNotification = Localization::Lookup("TXT_KEY_NOTIFICATION_SPY_RIG_ELECTION_ALERT");

	push	OFFSET ??_C@_0CM@HEBIDICI@TXT_KEY_NOTIFICATION_SPY_RIG_ELE@
	lea	ecx, DWORD PTR _strNotification$227869[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 6

; 8907 : 						strNotification << pCapital->getNameKey();

	mov	ecx, DWORD PTR _pCapital$[ebp]
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	mov	DWORD PTR $T245902[ebp], eax
	lea	edx, DWORD PTR $T245902[ebp]
	push	edx
	lea	eax, DWORD PTR _strNotification$227869[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 8908 : 						pNotifications->Add(NOTIFICATION_SPY_RIG_ELECTION_ALERT, strNotification.toUTF8(), strSummary.toUTF8(), pCapital->getX(), pCapital->getY(), -1);

	mov	ecx, DWORD PTR _pCapital$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR $T246190[ebp], edx
	mov	eax, DWORD PTR _pCapital$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T246199[ebp], ecx
	push	-1
	push	-1
	mov	edx, DWORD PTR $T246190[ebp]
	push	edx
	mov	eax, DWORD PTR $T246199[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$227865[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strNotification$227869[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	-1313356287				; b1b7c601H
	mov	ecx, DWORD PTR _pNotifications$227863[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 8909 : 					}

	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _strNotification$227869[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$227865[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN5@DoElection:

; 8910 : 				}
; 8911 : 
; 8912 : 				if (GetEffectiveFriendshipWithMajorTimes100(ePlayer) > 0)

	mov	ecx, DWORD PTR _ePlayer$227824[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajorTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajorTimes100
	test	eax, eax
	jle	$LN8@DoElection

; 8913 : 				{
; 8914 : 					int iInfluenceModifier = GET_PLAYER(eElectionWinner).GetPlayerPolicies()->GetNumericModifier(POLICYMOD_RIGGING_ELECTION_MODIFIER); // NQMP GJS - new Covert Action

	mov	edx, DWORD PTR _eElectionWinner$227818[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246203[ebp], edx
	push	35					; 00000023H
	mov	ecx, DWORD PTR $T246203[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	mov	DWORD PTR _iInfluenceModifier$227874[ebp], eax

; 8915 : 					int iDiminishAmount = min(GC.getESPIONAGE_INFLUENCE_LOST_FOR_RIGGED_ELECTION() * (100 + iInfluenceModifier), GetEffectiveFriendshipWithMajorTimes100(ePlayer)); // NQMP GJS - new Covert Action

	mov	eax, DWORD PTR _ePlayer$227824[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetEffectiveFriendshipWithMajorTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajorTimes100
	mov	DWORD PTR $T245903[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7944
	mov	DWORD PTR $T246207[ebp], ecx
	mov	edx, DWORD PTR _iInfluenceModifier$227874[ebp]
	add	edx, 100				; 00000064H
	imul	edx, DWORD PTR $T246207[ebp]
	mov	DWORD PTR $T245904[ebp], edx
	mov	eax, DWORD PTR $T245903[ebp]
	cmp	eax, DWORD PTR $T245904[ebp]
	jge	SHORT $LN187@DoElection
	lea	ecx, DWORD PTR $T245903[ebp]
	mov	DWORD PTR tv714[ebp], ecx
	jmp	SHORT $LN188@DoElection
$LN187@DoElection:
	lea	edx, DWORD PTR $T245904[ebp]
	mov	DWORD PTR tv714[ebp], edx
$LN188@DoElection:
	mov	eax, DWORD PTR tv714[ebp]
	mov	DWORD PTR $T246213[ebp], eax
	mov	ecx, DWORD PTR $T246213[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _iDiminishAmount$227875[ebp], edx

; 8916 : 					ChangeFriendshipWithMajorTimes100(ePlayer, -iDiminishAmount, false);

	push	0
	mov	eax, DWORD PTR _iDiminishAmount$227875[ebp]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _ePlayer$227824[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeFriendshipWithMajorTimes100@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::ChangeFriendshipWithMajorTimes100
$LN8@DoElection:

; 8917 : 				}
; 8918 : 			}
; 8919 : 		}

	jmp	$LN13@DoElection
$LN15@DoElection:

; 8920 : 	}
; 8921 : 
; 8922 : 	GC.GetEngineUserInterface()->setDirty(GameData_DIRTY_BIT, true);

	mov	edx, DWORD PTR $T246220[ebp]
	mov	DWORD PTR tv573[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv573[ebp], eax
	push	1
	push	11					; 0000000bH
	mov	ecx, DWORD PTR tv573[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv573[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 8923 : 	GC.GetEngineUserInterface()->setDirty(CityInfo_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T246224[ebp]
	mov	DWORD PTR tv585[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv585[ebp], edx
	push	1
	push	18					; 00000012H
	mov	eax, DWORD PTR tv585[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv585[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 8924 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wvVotes$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>::~FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>
$LN28@DoElection:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoElection@CvMinorCivAI@@QAEXXZ$0:
	lea	ecx, DWORD PTR _wvVotes$[ebp]
	jmp	??1?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@QAE@XZ ; CvWeightedVector<enum PlayerTypes,22,1>::~CvWeightedVector<enum PlayerTypes,22,1>
__unwindfunclet$?DoElection@CvMinorCivAI@@QAEXXZ$1:
	lea	ecx, DWORD PTR _strSummary$227829[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoElection@CvMinorCivAI@@QAEXXZ$2:
	lea	ecx, DWORD PTR _strNotification$227833[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoElection@CvMinorCivAI@@QAEXXZ$3:
	lea	ecx, DWORD PTR _strSummary$227849[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoElection@CvMinorCivAI@@QAEXXZ$4:
	lea	ecx, DWORD PTR _strNotification$227853[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoElection@CvMinorCivAI@@QAEXXZ$5:
	lea	ecx, DWORD PTR _strSummary$227865[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoElection@CvMinorCivAI@@QAEXXZ$6:
	lea	ecx, DWORD PTR _strNotification$227869[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?DoElection@CvMinorCivAI@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1164]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoElection@CvMinorCivAI@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoElection@CvMinorCivAI@@QAEXXZ ENDP			; CvMinorCivAI::DoElection
PUBLIC	?GetNumUnitsGifted@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetNumUnitsGifted
; Function compile flags: /Odtp
;	COMDAT ?GetNumUnitsGifted@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetNumUnitsGifted@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetNumUnitsGifted, COMDAT
; _this$ = ecx

; 8934 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 8935 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 8936 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 8937 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return -1; // as defined during Reset()

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@GetNumUnit
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN2@GetNumUnit
$LN1@GetNumUnit:
	or	eax, -1
	jmp	SHORT $LN3@GetNumUnit
$LN2@GetNumUnit:

; 8938 : 
; 8939 : 	return m_aiNumUnitsGifted[ePlayer];

	mov	eax, DWORD PTR _ePlayer$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+2640]
$LN3@GetNumUnit:

; 8940 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetNumUnitsGifted@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetNumUnitsGifted
_TEXT	ENDS
PUBLIC	?SetNumUnitsGifted@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::SetNumUnitsGifted
; Function compile flags: /Odtp
;	COMDAT ?SetNumUnitsGifted@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
_iValue$ = 12						; size = 4
?SetNumUnitsGifted@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z PROC ; CvMinorCivAI::SetNumUnitsGifted, COMDAT
; _this$ = ecx

; 8944 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 8945 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 8946 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 8947 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@SetNumUnit
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN2@SetNumUnit
$LN1@SetNumUnit:
	jmp	SHORT $LN3@SetNumUnit
$LN2@SetNumUnit:

; 8948 : 
; 8949 : 	m_aiNumUnitsGifted[ePlayer] = iValue;

	mov	eax, DWORD PTR _ePlayer$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR [ecx+eax*4+2640], edx
$LN3@SetNumUnit:

; 8950 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetNumUnitsGifted@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ENDP ; CvMinorCivAI::SetNumUnitsGifted
_TEXT	ENDS
PUBLIC	?ChangeNumUnitsGifted@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::ChangeNumUnitsGifted
; Function compile flags: /Odtp
;	COMDAT ?ChangeNumUnitsGifted@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
_iChange$ = 12						; size = 4
?ChangeNumUnitsGifted@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z PROC ; CvMinorCivAI::ChangeNumUnitsGifted, COMDAT
; _this$ = ecx

; 8954 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 8955 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 8956 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 8957 : 
; 8958 : 	SetNumUnitsGifted(ePlayer, GetNumUnitsGifted(ePlayer) + iChange);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumUnitsGifted@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetNumUnitsGifted
	add	eax, DWORD PTR _iChange$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetNumUnitsGifted@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::SetNumUnitsGifted

; 8959 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?ChangeNumUnitsGifted@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ENDP ; CvMinorCivAI::ChangeNumUnitsGifted
_TEXT	ENDS
PUBLIC	?GetFriendshipFromUnitGift@CvMinorCivAI@@QAEHW4PlayerTypes@@_N1@Z ; CvMinorCivAI::GetFriendshipFromUnitGift
PUBLIC	?DoUnitGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@PAVCvUnit@@_N@Z ; CvMinorCivAI::DoUnitGiftFromMajor
EXTRN	?IsGreatPerson@CvUnit@@QBE_NXZ:PROC		; CvUnit::IsGreatPerson
; Function compile flags: /Odtp
;	COMDAT ?DoUnitGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@PAVCvUnit@@_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iInfluence$ = -4					; size = 4
_eFromPlayer$ = 8					; size = 4
_pGiftUnit$ = 12					; size = 4
_bDistanceGift$ = 16					; size = 1
?DoUnitGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@PAVCvUnit@@_N@Z PROC ; CvMinorCivAI::DoUnitGiftFromMajor, COMDAT
; _this$ = ecx

; 8962 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 8963 : 	CvAssertMsg(eFromPlayer >= 0, "eFromPlayer is expected to be non-negative (invalid Index)");
; 8964 : 	CvAssertMsg(eFromPlayer < MAX_MAJOR_CIVS, "eFromPlayer is expected to be within maximum bounds (invalid Index)");
; 8965 : 	if (eFromPlayer < 0 || eFromPlayer >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _eFromPlayer$[ebp], 0
	jl	SHORT $LN3@DoUnitGift
	cmp	DWORD PTR _eFromPlayer$[ebp], 22	; 00000016H
	jl	SHORT $LN4@DoUnitGift
$LN3@DoUnitGift:
	jmp	SHORT $LN5@DoUnitGift
$LN4@DoUnitGift:

; 8966 : 
; 8967 : 	CvAssertMsg(pGiftUnit != NULL, "pGiftUnit is NULL");
; 8968 : 	if (pGiftUnit == NULL) return;

	cmp	DWORD PTR _pGiftUnit$[ebp], 0
	jne	SHORT $LN2@DoUnitGift
	jmp	SHORT $LN5@DoUnitGift
$LN2@DoUnitGift:

; 8969 : 
; 8970 : 	ChangeNumUnitsGifted(eFromPlayer, 1);

	push	1
	mov	eax, DWORD PTR _eFromPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeNumUnitsGifted@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::ChangeNumUnitsGifted

; 8971 : 
; 8972 : 	// Influence
; 8973 : 	int iInfluence = GetFriendshipFromUnitGift(eFromPlayer, pGiftUnit->IsGreatPerson(), bDistanceGift);

	movzx	ecx, BYTE PTR _bDistanceGift$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pGiftUnit$[ebp]
	call	?IsGreatPerson@CvUnit@@QBE_NXZ		; CvUnit::IsGreatPerson
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _eFromPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFriendshipFromUnitGift@CvMinorCivAI@@QAEHW4PlayerTypes@@_N1@Z ; CvMinorCivAI::GetFriendshipFromUnitGift
	mov	DWORD PTR _iInfluence$[ebp], eax

; 8974 : 	ChangeFriendshipWithMajor(eFromPlayer, iInfluence);

	push	0
	mov	ecx, DWORD PTR _iInfluence$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eFromPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::ChangeFriendshipWithMajor

; 8975 : 
; 8976 : 	// We can't keep Great Person units
; 8977 : 	if(pGiftUnit->IsGreatPerson())

	mov	ecx, DWORD PTR _pGiftUnit$[ebp]
	call	?IsGreatPerson@CvUnit@@QBE_NXZ		; CvUnit::IsGreatPerson
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@DoUnitGift

; 8978 : 	{
; 8979 : 		pGiftUnit->kill(false);

	push	-1
	push	0
	mov	ecx, DWORD PTR _pGiftUnit$[ebp]
	call	?kill@CvUnit@@QAEX_NW4PlayerTypes@@@Z	; CvUnit::kill
$LN5@DoUnitGift:

; 8980 : 	}
; 8981 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?DoUnitGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@PAVCvUnit@@_N@Z ENDP ; CvMinorCivAI::DoUnitGiftFromMajor
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetFriendshipFromUnitGift@CvMinorCivAI@@QAEHW4PlayerTypes@@_N1@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T246286 = -28						; size = 4
$T246282 = -24						; size = 4
$T246278 = -20						; size = 4
_iMilitaryInfluence$227922 = -16			; size = 4
_iGPInfluence$227918 = -12				; size = 4
_iInfluence$ = -8					; size = 4
_kFromPlayer$ = -4					; size = 4
_eFromPlayer$ = 8					; size = 4
_bGreatPerson$ = 12					; size = 1
___formal$ = 16						; size = 1
?GetFriendshipFromUnitGift@CvMinorCivAI@@QAEHW4PlayerTypes@@_N1@Z PROC ; CvMinorCivAI::GetFriendshipFromUnitGift, COMDAT
; _this$ = ecx

; 8984 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 8985 : 	CvAssertMsg(eFromPlayer >= 0, "eFromPlayer is expected to be non-negative (invalid Index)");
; 8986 : 	CvAssertMsg(eFromPlayer < MAX_MAJOR_CIVS, "eFromPlayer is expected to be within maximum bounds (invalid Index)");
; 8987 : 	if (eFromPlayer < 0 || eFromPlayer >= MAX_MAJOR_CIVS) return 0;

	cmp	DWORD PTR _eFromPlayer$[ebp], 0
	jl	SHORT $LN6@GetFriends@7
	cmp	DWORD PTR _eFromPlayer$[ebp], 22	; 00000016H
	jl	SHORT $LN7@GetFriends@7
$LN6@GetFriends@7:
	xor	eax, eax
	jmp	$LN8@GetFriends@7
$LN7@GetFriends@7:

; 8988 : 
; 8989 : 	int iInfluence = 0;

	mov	DWORD PTR _iInfluence$[ebp], 0

; 8990 : 	CvPlayer& kFromPlayer = GET_PLAYER(eFromPlayer);

	mov	eax, DWORD PTR _eFromPlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kFromPlayer$[ebp], eax

; 8991 : 
; 8992 : 	// Influence
; 8993 : 	if (bGreatPerson)

	movzx	ecx, BYTE PTR _bGreatPerson$[ebp]
	test	ecx, ecx
	je	SHORT $LN5@GetFriends@7

; 8994 : 	{
; 8995 : 		int iGPInfluence = kFromPlayer.GetPlayerTraits()->GetGreatPersonGiftInfluence();

	mov	ecx, DWORD PTR _kFromPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T246278[ebp], eax
	mov	edx, DWORD PTR $T246278[ebp]
	mov	eax, DWORD PTR [edx+60]
	mov	DWORD PTR _iGPInfluence$227918[ebp], eax

; 8996 : 		if (iGPInfluence > 0)

	cmp	DWORD PTR _iGPInfluence$227918[ebp], 0
	jle	SHORT $LN4@GetFriends@7

; 8997 : 		{
; 8998 : 			iInfluence += iGPInfluence;

	mov	ecx, DWORD PTR _iInfluence$[ebp]
	add	ecx, DWORD PTR _iGPInfluence$227918[ebp]
	mov	DWORD PTR _iInfluence$[ebp], ecx
$LN4@GetFriends@7:

; 8999 : 		}
; 9000 : 	}
; 9001 : 	else

	jmp	SHORT $LN3@GetFriends@7
$LN5@GetFriends@7:

; 9002 : 	{
; 9003 : 		iInfluence += GC.getFRIENDSHIP_PER_UNIT_GIFTED();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3168
	mov	DWORD PTR $T246282[ebp], edx
	mov	eax, DWORD PTR _iInfluence$[ebp]
	add	eax, DWORD PTR $T246282[ebp]
	mov	DWORD PTR _iInfluence$[ebp], eax

; 9004 : 
; 9005 : 		// War state
; 9006 : 		if (IsProxyWarActiveForMajor(eFromPlayer))

	mov	ecx, DWORD PTR _eFromPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsProxyWarActiveForMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsProxyWarActiveForMajor
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@GetFriends@7

; 9007 : 		{
; 9008 : 			iInfluence += GC.getFRIENDSHIP_PER_UNIT_GIFTED();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3168
	mov	DWORD PTR $T246286[ebp], eax
	mov	ecx, DWORD PTR _iInfluence$[ebp]
	add	ecx, DWORD PTR $T246286[ebp]
	mov	DWORD PTR _iInfluence$[ebp], ecx
$LN2@GetFriends@7:

; 9009 : 		}
; 9010 : 		
; 9011 : 		// Policies
; 9012 : 		int iMilitaryInfluence = kFromPlayer.GetPlayerPolicies()->GetNumericModifier(POLICYMOD_MILITARY_UNIT_GIFT_INFLUENCE);

	push	36					; 00000024H
	mov	ecx, DWORD PTR _kFromPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	mov	DWORD PTR _iMilitaryInfluence$227922[ebp], eax

; 9013 : 		if (iMilitaryInfluence > 0)

	cmp	DWORD PTR _iMilitaryInfluence$227922[ebp], 0
	jle	SHORT $LN3@GetFriends@7

; 9014 : 		{
; 9015 : 			iInfluence += iMilitaryInfluence;

	mov	edx, DWORD PTR _iInfluence$[ebp]
	add	edx, DWORD PTR _iMilitaryInfluence$227922[ebp]
	mov	DWORD PTR _iInfluence$[ebp], edx
$LN3@GetFriends@7:

; 9016 : 		}
; 9017 : 	}
; 9018 : 
; 9019 : 	return iInfluence;

	mov	eax, DWORD PTR _iInfluence$[ebp]
$LN8@GetFriends@7:

; 9020 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetFriendshipFromUnitGift@CvMinorCivAI@@QAEHW4PlayerTypes@@_N1@Z ENDP ; CvMinorCivAI::GetFriendshipFromUnitGift
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetNumGoldGifted@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetNumGoldGifted@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetNumGoldGifted, COMDAT
; _this$ = ecx

; 9024 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 9025 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 9026 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 9027 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return 0;  // as defined in Reset()

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@GetNumGold
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN2@GetNumGold
$LN1@GetNumGold:
	xor	eax, eax
	jmp	SHORT $LN3@GetNumGold
$LN2@GetNumGold:

; 9028 : 	return m_aiNumGoldGifted[ePlayer];

	mov	eax, DWORD PTR _ePlayer$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+2728]
$LN3@GetNumGold:

; 9029 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetNumGoldGifted@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetNumGoldGifted
_TEXT	ENDS
PUBLIC	?SetNumGoldGifted@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::SetNumGoldGifted
; Function compile flags: /Odtp
;	COMDAT ?SetNumGoldGifted@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
_iValue$ = 12						; size = 4
?SetNumGoldGifted@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z PROC ; CvMinorCivAI::SetNumGoldGifted, COMDAT
; _this$ = ecx

; 9032 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 9033 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 9034 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 9035 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@SetNumGold
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN2@SetNumGold
$LN1@SetNumGold:
	jmp	SHORT $LN3@SetNumGold
$LN2@SetNumGold:

; 9036 : 	m_aiNumGoldGifted[ePlayer] = iValue;

	mov	eax, DWORD PTR _ePlayer$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR [ecx+eax*4+2728], edx
$LN3@SetNumGold:

; 9037 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetNumGoldGifted@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ENDP ; CvMinorCivAI::SetNumGoldGifted
_TEXT	ENDS
PUBLIC	?ChangeNumGoldGifted@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::ChangeNumGoldGifted
; Function compile flags: /Odtp
;	COMDAT ?ChangeNumGoldGifted@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
_iChange$ = 12						; size = 4
?ChangeNumGoldGifted@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z PROC ; CvMinorCivAI::ChangeNumGoldGifted, COMDAT
; _this$ = ecx

; 9040 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 9041 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 9042 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 9043 : 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@ChangeNumG
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN2@ChangeNumG
$LN1@ChangeNumG:
	jmp	SHORT $LN3@ChangeNumG
$LN2@ChangeNumG:

; 9044 : 	SetNumGoldGifted(ePlayer, GetNumGoldGifted(ePlayer) + iChange);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumGoldGifted@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetNumGoldGifted
	add	eax, DWORD PTR _iChange$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetNumGoldGifted@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::SetNumGoldGifted
$LN3@ChangeNumG:

; 9045 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?ChangeNumGoldGifted@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ENDP ; CvMinorCivAI::ChangeNumGoldGifted
_TEXT	ENDS
PUBLIC	?GetFriendshipFromGoldGift@CvMinorCivAI@@QAEHW4PlayerTypes@@H@Z ; CvMinorCivAI::GetFriendshipFromGoldGift
PUBLIC	?DoGoldGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::DoGoldGiftFromMajor
EXTRN	?GetNumTurnsBeforeMinorAlliesRefuseBribes@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetNumTurnsBeforeMinorAlliesRefuseBribes
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
xdata$x	SEGMENT
__unwindtable$?DoGoldGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoGoldGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?DoGoldGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z$1
__ehfuncinfo$?DoGoldGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?DoGoldGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoGoldGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z
_TEXT	SEGMENT
tv201 = -84						; size = 4
tv212 = -80						; size = 4
tv210 = -76						; size = 4
tv209 = -72						; size = 4
tv198 = -68						; size = 4
_this$ = -64						; size = 4
$T246330 = -60						; size = 4
$T246326 = -56						; size = 4
$T246322 = -52						; size = 4
$T246306 = -40						; size = 4
$T246302 = -36						; size = 4
$T246296 = -32						; size = 4
$T246295 = -28						; size = 4
_iFriendshipChange$227954 = -24				; size = 4
_iNumTurns$227951 = -20					; size = 4
_iAlly$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
_iGold$ = 12						; size = 4
?DoGoldGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z PROC ; CvMinorCivAI::DoGoldGiftFromMajor, COMDAT
; _this$ = ecx

; 9050 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoGoldGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 9051 : #ifdef NQ_NUM_TURNS_BEFORE_MINOR_ALLIES_REFUSE_BRIBES_FROM_TRAIT
; 9052 : 	PlayerTypes iAlly = GetAlly();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetAlly
	mov	DWORD PTR _iAlly$[ebp], eax

; 9053 : 	if (iAlly != NO_PLAYER && iAlly != ePlayer)

	cmp	DWORD PTR _iAlly$[ebp], -1
	je	SHORT $LN4@DoGoldGift
	mov	eax, DWORD PTR _iAlly$[ebp]
	cmp	eax, DWORD PTR _ePlayer$[ebp]
	je	SHORT $LN4@DoGoldGift

; 9054 : 	{
; 9055 : 		int iNumTurns = GET_PLAYER(iAlly).GetNumTurnsBeforeMinorAlliesRefuseBribes();

	mov	ecx, DWORD PTR _iAlly$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246302[ebp], ecx
	mov	ecx, DWORD PTR $T246302[ebp]
	call	?GetNumTurnsBeforeMinorAlliesRefuseBribes@CvPlayer@@QBEHXZ ; CvPlayer::GetNumTurnsBeforeMinorAlliesRefuseBribes
	mov	DWORD PTR _iNumTurns$227951[ebp], eax

; 9056 : 		if (iNumTurns > 0 && GetAlliedTurns() >= iNumTurns)

	cmp	DWORD PTR _iNumTurns$227951[ebp], 0
	jle	SHORT $LN4@DoGoldGift
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlliedTurns@CvMinorCivAI@@QBEHXZ	; CvMinorCivAI::GetAlliedTurns
	cmp	eax, DWORD PTR _iNumTurns$227951[ebp]
	jl	SHORT $LN4@DoGoldGift

; 9057 : 		{
; 9058 : 			return;

	jmp	$LN5@DoGoldGift
$LN4@DoGoldGift:

; 9059 : 		}
; 9060 : 	}
; 9061 : #endif
; 9062 : 	if(GET_PLAYER(ePlayer).GetTreasury()->GetGold() >= iGold)

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246306[ebp], edx
	mov	ecx, DWORD PTR $T246306[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGold@CvTreasury@@QBEHXZ		; CvTreasury::GetGold
	cmp	eax, DWORD PTR _iGold$[ebp]
	jl	$LN2@DoGoldGift

; 9063 : 	{
; 9064 : 		int iFriendshipChange = GetFriendshipFromGoldGift(ePlayer, iGold);

	mov	eax, DWORD PTR _iGold$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFriendshipFromGoldGift@CvMinorCivAI@@QAEHW4PlayerTypes@@H@Z ; CvMinorCivAI::GetFriendshipFromGoldGift
	mov	DWORD PTR _iFriendshipChange$227954[ebp], eax

; 9065 : 		if(iFriendshipChange > 0)

	cmp	DWORD PTR _iFriendshipChange$227954[ebp], 0
	jle	$LN1@DoGoldGift

; 9066 : 			GET_PLAYER(ePlayer).GetTreasury()->LogExpenditure(GetPlayer()->GetMinorCivAI()->GetNamesListAsString(0), iGold,4);

	push	4
	mov	edx, DWORD PTR _iGold$[ebp]
	push	edx
	sub	esp, 28					; 0000001cH
	mov	esi, esp
	mov	DWORD PTR $T246295[ebp], esp
	sub	esp, 272				; 00000110H
	mov	ecx, esp
	mov	DWORD PTR $T246296[ebp], esp
	push	0
	call	??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@I@Z ; FStaticVector<enum PlayerTypes,64,1,297,0>::FStaticVector<enum PlayerTypes,64,1,297,0>
	mov	DWORD PTR tv198[ebp], eax
	mov	eax, DWORD PTR tv198[ebp]
	mov	DWORD PTR tv209[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	esi
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, eax
	call	?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z ; CvMinorCivAI::GetNamesListAsString
	mov	DWORD PTR tv210[ebp], eax
	mov	ecx, DWORD PTR tv210[ebp]
	mov	DWORD PTR tv212[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246322[ebp], edx
	mov	ecx, DWORD PTR $T246322[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, eax
	call	?LogExpenditure@CvTreasury@@QAEXVCvString@@HH@Z ; CvTreasury::LogExpenditure
$LN1@DoGoldGift:

; 9067 : 
; 9068 : 		GET_PLAYER(ePlayer).GetTreasury()->ChangeGold(-iGold);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246326[ebp], eax
	mov	ecx, DWORD PTR _iGold$[ebp]
	neg	ecx
	push	ecx
	mov	ecx, DWORD PTR $T246326[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?ChangeGold@CvTreasury@@QAEXH@Z		; CvTreasury::ChangeGold

; 9069 : 		
; 9070 : 		ChangeNumGoldGifted(ePlayer, iGold);

	mov	edx, DWORD PTR _iGold$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeNumGoldGifted@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::ChangeNumGoldGifted

; 9071 : 		
; 9072 : 		ChangeFriendshipWithMajor(ePlayer, iFriendshipChange);

	push	0
	mov	ecx, DWORD PTR _iFriendshipChange$227954[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::ChangeFriendshipWithMajor

; 9073 : 
; 9074 : 		// In case we had a Gold Gift quest active, complete it now
; 9075 : 		DoTestActiveQuestsForPlayer(ePlayer, /*bTestComplete*/ true, /*bTestObsolete*/ false, MINOR_CIV_QUEST_GIVE_GOLD);

	push	8
	push	0
	push	1
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoTestActiveQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@_N1W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::DoTestActiveQuestsForPlayer
$LN2@DoGoldGift:

; 9076 : 	}
; 9077 : 
; 9078 : 	GC.GetEngineUserInterface()->setDirty(GameData_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T246330[ebp]
	mov	DWORD PTR tv201[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv201[ebp], edx
	push	1
	push	11					; 0000000bH
	mov	eax, DWORD PTR tv201[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv201[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax
$LN5@DoGoldGift:

; 9079 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoGoldGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z$0:
	mov	ecx, DWORD PTR $T246296[ebp]
	jmp	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
__unwindfunclet$?DoGoldGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z$1:
	mov	ecx, DWORD PTR $T246295[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?DoGoldGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoGoldGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoGoldGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ENDP ; CvMinorCivAI::DoGoldGiftFromMajor
EXTRN	?GetCityStateInfluenceModifier@CvPlayerReligions@@QBEHXZ:PROC ; CvPlayerReligions::GetCityStateInfluenceModifier
EXTRN	?getMinorGoldFriendshipMod@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getMinorGoldFriendshipMod
EXTRN	___libm_sse2_pow:PROC
; Function compile flags: /Odtp
;	COMDAT ?GetFriendshipFromGoldGift@CvMinorCivAI@@QAEHW4PlayerTypes@@H@Z
_TEXT	SEGMENT
tv189 = -100						; size = 4
tv187 = -96						; size = 4
tv252 = -92						; size = 4
_this$ = -88						; size = 4
$T246395 = -84						; size = 4
$T246389 = -80						; size = 4
$T246385 = -76						; size = 4
$T246381 = -72						; size = 4
$T246377 = -68						; size = 4
$T246373 = -64						; size = 4
$T246369 = -60						; size = 4
$T246362 = -56						; size = 4
$T246356 = -52						; size = 4
$T246352 = -48						; size = 4
$T246348 = -44						; size = 4
$T246344 = -40						; size = 4
$T246340 = -36						; size = 4
$T246339 = -32						; size = 8
_iBoostPercentage$227979 = -24				; size = 4
_iFriendship$ = -20					; size = 4
_iVisibleDivisor$ = -16					; size = 4
_iFriendshipMod$ = -12					; size = 4
_fGameProgressFactor$ = -8				; size = 8
_eMajor$ = 8						; size = 4
_iGold$ = 12						; size = 4
?GetFriendshipFromGoldGift@CvMinorCivAI@@QAEHW4PlayerTypes@@H@Z PROC ; CvMinorCivAI::GetFriendshipFromGoldGift, COMDAT
; _this$ = ecx

; 9084 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 100				; 00000064H
	mov	DWORD PTR _this$[ebp], ecx

; 9085 : 	// The more Gold you spend the more Friendship you get!
; 9086 : 	iGold = (int) pow((double) iGold, (double) /*1.01*/ GC.getGOLD_GIFT_FRIENDSHIP_EXPONENT());

	movss	xmm0, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8112
	movss	DWORD PTR $T246344[ebp], xmm0
	cvtsi2sd xmm0, DWORD PTR _iGold$[ebp]
	cvtss2sd xmm1, DWORD PTR $T246344[ebp]
	call	___libm_sse2_pow
	cvttsd2si eax, xmm0
	mov	DWORD PTR _iGold$[ebp], eax

; 9087 : 	// The higher this divisor the less Friendship is gained
; 9088 : 	int iFriendship = int(iGold / /*9.8*/ GC.getGOLD_GIFT_FRIENDSHIP_DIVISOR());

	movss	xmm0, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8116
	movss	DWORD PTR $T246348[ebp], xmm0
	cvtsi2ss xmm0, DWORD PTR _iGold$[ebp]
	divss	xmm0, DWORD PTR $T246348[ebp]
	cvttss2si ecx, xmm0
	mov	DWORD PTR _iFriendship$[ebp], ecx

; 9089 : 
; 9090 : 	// Game progress factor based on how far into the game we are
; 9091 : 	double fGameProgressFactor = float(GC.getGame().getElapsedGameTurns()) / GC.getGame().getEstimateEndTurn();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T246352[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T246356[ebp], eax
	mov	ecx, DWORD PTR $T246352[ebp]
	call	?getElapsedGameTurns@CvGame@@QBEHXZ	; CvGame::getElapsedGameTurns
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR $T246356[ebp]
	movss	DWORD PTR tv252[ebp], xmm0
	call	?getEstimateEndTurn@CvGame@@QBEHXZ	; CvGame::getEstimateEndTurn
	cvtsi2ss xmm0, eax
	movss	xmm1, DWORD PTR tv252[ebp]
	divss	xmm1, xmm0
	cvtss2sd xmm0, xmm1
	movsd	QWORD PTR _fGameProgressFactor$[ebp], xmm0

; 9092 : 	fGameProgressFactor = min(fGameProgressFactor, 1.0); // Don't count above 1.0, otherwise it will end up negative!

	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR $T246339[ebp], xmm0
	movsd	xmm0, QWORD PTR _fGameProgressFactor$[ebp]
	comisd	xmm0, QWORD PTR $T246339[ebp]
	jbe	SHORT $LN15@GetFriends@8
	lea	ecx, DWORD PTR $T246339[ebp]
	mov	DWORD PTR tv187[ebp], ecx
	jmp	SHORT $LN16@GetFriends@8
$LN15@GetFriends@8:
	lea	edx, DWORD PTR _fGameProgressFactor$[ebp]
	mov	DWORD PTR tv187[ebp], edx
$LN16@GetFriends@8:
	mov	eax, DWORD PTR tv187[ebp]
	mov	DWORD PTR $T246362[ebp], eax
	mov	ecx, DWORD PTR $T246362[ebp]
	movsd	xmm0, QWORD PTR [ecx]
	movsd	QWORD PTR _fGameProgressFactor$[ebp], xmm0

; 9093 : 	
; 9094 : 	// Tweak factor slightly, otherwise Gold will do literally NOTHING once we reach the end of the game!
; 9095 : 	fGameProgressFactor *= /*2*/ GC.getMINOR_CIV_GOLD_GIFT_GAME_MULTIPLIER();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3136
	mov	DWORD PTR $T246369[ebp], edx
	cvtsi2sd xmm0, DWORD PTR $T246369[ebp]
	mulsd	xmm0, QWORD PTR _fGameProgressFactor$[ebp]
	movsd	QWORD PTR _fGameProgressFactor$[ebp], xmm0

; 9096 : 	fGameProgressFactor /= /*3*/ GC.getMINOR_CIV_GOLD_GIFT_GAME_DIVISOR();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3140
	mov	DWORD PTR $T246373[ebp], eax
	cvtsi2sd xmm0, DWORD PTR $T246373[ebp]
	movsd	xmm1, QWORD PTR _fGameProgressFactor$[ebp]
	divsd	xmm1, xmm0
	movsd	QWORD PTR _fGameProgressFactor$[ebp], xmm1

; 9097 : 	fGameProgressFactor = 1 - fGameProgressFactor;

	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	subsd	xmm0, QWORD PTR _fGameProgressFactor$[ebp]
	movsd	QWORD PTR _fGameProgressFactor$[ebp], xmm0

; 9098 : 
; 9099 : 	iFriendship = (int)(iFriendship * fGameProgressFactor);

	cvtsi2sd xmm0, DWORD PTR _iFriendship$[ebp]
	mulsd	xmm0, QWORD PTR _fGameProgressFactor$[ebp]
	cvttsd2si ecx, xmm0
	mov	DWORD PTR _iFriendship$[ebp], ecx

; 9100 : 
; 9101 : 
; 9102 : 	// Mod (Policies, etc.)
; 9103 : 	int iFriendshipMod = GET_PLAYER(eMajor).getMinorGoldFriendshipMod();

	mov	edx, DWORD PTR _eMajor$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246377[ebp], edx
	mov	ecx, DWORD PTR $T246377[ebp]
	call	?getMinorGoldFriendshipMod@CvPlayer@@QBEHXZ ; CvPlayer::getMinorGoldFriendshipMod
	mov	DWORD PTR _iFriendshipMod$[ebp], eax

; 9104 : 	iFriendshipMod += GET_PLAYER(eMajor).GetReligions()->GetCityStateInfluenceModifier();

	mov	eax, DWORD PTR _eMajor$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246381[ebp], eax
	mov	ecx, DWORD PTR $T246381[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?GetCityStateInfluenceModifier@CvPlayerReligions@@QBEHXZ ; CvPlayerReligions::GetCityStateInfluenceModifier
	add	eax, DWORD PTR _iFriendshipMod$[ebp]
	mov	DWORD PTR _iFriendshipMod$[ebp], eax

; 9105 : 	if(iFriendshipMod != 0)

	je	SHORT $LN2@GetFriends@8

; 9106 : 	{
; 9107 : 		iFriendship *= (100 + iFriendshipMod);

	mov	ecx, DWORD PTR _iFriendshipMod$[ebp]
	add	ecx, 100				; 00000064H
	imul	ecx, DWORD PTR _iFriendship$[ebp]
	mov	DWORD PTR _iFriendship$[ebp], ecx

; 9108 : 		iFriendship /= 100;

	mov	eax, DWORD PTR _iFriendship$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iFriendship$[ebp], eax
$LN2@GetFriends@8:

; 9109 : 	}
; 9110 : 
; 9111 : 	// Game Speed Mod
; 9112 : 	iFriendship *= GC.getGame().getGameSpeedInfo().getGoldGiftMod();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T246385[ebp], edx
	mov	ecx, DWORD PTR $T246385[ebp]
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getGoldGiftMod@CvGameSpeedInfo@@QBEHXZ	; CvGameSpeedInfo::getGoldGiftMod
	imul	eax, DWORD PTR _iFriendship$[ebp]
	mov	DWORD PTR _iFriendship$[ebp], eax

; 9113 : 	iFriendship /= 100;

	mov	eax, DWORD PTR _iFriendship$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iFriendship$[ebp], eax

; 9114 : 
; 9115 : 	//antonjs: todo: refine
; 9116 : 	if(IsActiveQuestForPlayer(eMajor, MINOR_CIV_QUEST_INVEST))

	push	13					; 0000000dH
	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsActiveQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsActiveQuestForPlayer
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@GetFriends@8

; 9117 : 	{
; 9118 : 		int iBoostPercentage = 50; //antonjs: todo: xml

	mov	DWORD PTR _iBoostPercentage$227979[ebp], 50 ; 00000032H

; 9119 : 		iFriendship *= 100 + iBoostPercentage;

	mov	ecx, DWORD PTR _iBoostPercentage$227979[ebp]
	add	ecx, 100				; 00000064H
	imul	ecx, DWORD PTR _iFriendship$[ebp]
	mov	DWORD PTR _iFriendship$[ebp], ecx

; 9120 : 		iFriendship /= 100;

	mov	eax, DWORD PTR _iFriendship$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iFriendship$[ebp], eax
$LN1@GetFriends@8:

; 9121 : 	}
; 9122 : 
; 9123 : 	// Friendship gained should always be positive
; 9124 : 	iFriendship = max(iFriendship, /*5*/ GC.getMINOR_CIV_GOLD_GIFT_MINIMUM_FRIENDSHIP_REWARD());

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3148
	mov	DWORD PTR $T246389[ebp], edx
	mov	eax, DWORD PTR $T246389[ebp]
	mov	DWORD PTR $T246340[ebp], eax
	mov	ecx, DWORD PTR _iFriendship$[ebp]
	cmp	ecx, DWORD PTR $T246340[ebp]
	jge	SHORT $LN31@GetFriends@8
	lea	edx, DWORD PTR $T246340[ebp]
	mov	DWORD PTR tv189[ebp], edx
	jmp	SHORT $LN32@GetFriends@8
$LN31@GetFriends@8:
	lea	eax, DWORD PTR _iFriendship$[ebp]
	mov	DWORD PTR tv189[ebp], eax
$LN32@GetFriends@8:
	mov	ecx, DWORD PTR tv189[ebp]
	mov	DWORD PTR $T246395[ebp], ecx
	mov	edx, DWORD PTR $T246395[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _iFriendship$[ebp], eax

; 9125 : 
; 9126 : 	// Round the number so it's pretty
; 9127 : 	int iVisibleDivisor = /*5*/ GC.getMINOR_CIV_GOLD_GIFT_VISIBLE_DIVISOR();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3144
	mov	DWORD PTR _iVisibleDivisor$[ebp], ecx

; 9128 : 	iFriendship /= iVisibleDivisor;

	mov	eax, DWORD PTR _iFriendship$[ebp]
	cdq
	idiv	DWORD PTR _iVisibleDivisor$[ebp]
	mov	DWORD PTR _iFriendship$[ebp], eax

; 9129 : 	iFriendship *= iVisibleDivisor;

	mov	edx, DWORD PTR _iFriendship$[ebp]
	imul	edx, DWORD PTR _iVisibleDivisor$[ebp]
	mov	DWORD PTR _iFriendship$[ebp], edx

; 9130 : 
; 9131 : 	return iFriendship;

	mov	eax, DWORD PTR _iFriendship$[ebp]

; 9132 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetFriendshipFromGoldGift@CvMinorCivAI@@QAEHW4PlayerTypes@@H@Z ENDP ; CvMinorCivAI::GetFriendshipFromGoldGift
_TEXT	ENDS
PUBLIC	?GetFriendshipFromFaithGift@CvMinorCivAI@@QAEHW4PlayerTypes@@H@Z ; CvMinorCivAI::GetFriendshipFromFaithGift
PUBLIC	?DoFaithGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::DoFaithGiftFromMajor
EXTRN	?GetFaith@CvPlayer@@QBEHXZ:PROC			; CvPlayer::GetFaith
EXTRN	?CanFaithGiftMinors@CvPlayer@@QAE_NXZ:PROC	; CvPlayer::CanFaithGiftMinors
; Function compile flags: /Odtp
;	COMDAT ?DoFaithGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z
_TEXT	SEGMENT
tv139 = -24						; size = 4
_this$ = -20						; size = 4
$T246419 = -16						; size = 4
$T246412 = -12						; size = 4
$T246408 = -8						; size = 4
_iFriendshipChange$227988 = -4				; size = 4
_ePlayer$ = 8						; size = 4
_iFaith$ = 12						; size = 4
?DoFaithGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z PROC ; CvMinorCivAI::DoFaithGiftFromMajor, COMDAT
; _this$ = ecx

; 9137 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 9138 : 	if(GET_PLAYER(ePlayer).CanFaithGiftMinors() && GET_PLAYER(ePlayer).GetFaith() >= iFaith)

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246408[ebp], eax
	mov	ecx, DWORD PTR $T246408[ebp]
	call	?CanFaithGiftMinors@CvPlayer@@QAE_NXZ	; CvPlayer::CanFaithGiftMinors
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@DoFaithGif
	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246412[ebp], edx
	mov	ecx, DWORD PTR $T246412[ebp]
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith
	cmp	eax, DWORD PTR _iFaith$[ebp]
	jl	SHORT $LN1@DoFaithGif

; 9139 : 	{
; 9140 : 		int iFriendshipChange = GetFriendshipFromFaithGift(ePlayer, iFaith);

	mov	eax, DWORD PTR _iFaith$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFriendshipFromFaithGift@CvMinorCivAI@@QAEHW4PlayerTypes@@H@Z ; CvMinorCivAI::GetFriendshipFromFaithGift
	mov	DWORD PTR _iFriendshipChange$227988[ebp], eax

; 9141 : 
; 9142 : 		// GJS: not sure what this part here does, but I am going to skip it for now.
; 9143 : 		//if(iFriendshipChange > 0)
; 9144 : 			//GET_PLAYER(ePlayer).GetTreasury()->LogExpenditure(GetPlayer()->GetMinorCivAI()->GetNamesListAsString(0), iGold,4);
; 9145 : 
; 9146 : 		GET_PLAYER(ePlayer).ChangeFaith(-iFaith);

	mov	edx, DWORD PTR _iFaith$[ebp]
	neg	edx
	push	edx
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?ChangeFaith@CvPlayer@@QAEXH@Z		; CvPlayer::ChangeFaith

; 9147 : 		
; 9148 : 		// GJS: we're not gifting gold, so it's fine to skip this.
; 9149 : 		//ChangeNumGoldGifted(ePlayer, iGold);
; 9150 : 		
; 9151 : 		ChangeFriendshipWithMajor(ePlayer, iFriendshipChange);

	push	0
	mov	eax, DWORD PTR _iFriendshipChange$227988[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::ChangeFriendshipWithMajor
$LN1@DoFaithGif:

; 9152 : 
; 9153 : 		// GJS: this is no longer applicable, but might want to do somethign with this in the future: 
; 9154 : 		// In case we had a Gold Gift quest active, complete it now
; 9155 : 		//DoTestActiveQuestsForPlayer(ePlayer, /*bTestComplete*/ true, /*bTestObsolete*/ false, MINOR_CIV_QUEST_GIVE_GOLD);
; 9156 : 	}
; 9157 : 
; 9158 : 	GC.GetEngineUserInterface()->setDirty(GameData_DIRTY_BIT, true);

	mov	edx, DWORD PTR $T246419[ebp]
	mov	DWORD PTR tv139[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv139[ebp], eax
	push	1
	push	11					; 0000000bH
	mov	ecx, DWORD PTR tv139[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv139[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 9159 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?DoFaithGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ENDP ; CvMinorCivAI::DoFaithGiftFromMajor
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetFriendshipFromFaithGift@CvMinorCivAI@@QAEHW4PlayerTypes@@H@Z
_TEXT	SEGMENT
tv90 = -32						; size = 4
_this$ = -28						; size = 4
$T246437 = -24						; size = 4
$T246430 = -20						; size = 4
$T246426 = -16						; size = 4
$T246422 = -12						; size = 4
_iFriendship$ = -8					; size = 4
_iVisibleDivisor$ = -4					; size = 4
_eMajor$ = 8						; size = 4
_iFaith$ = 12						; size = 4
?GetFriendshipFromFaithGift@CvMinorCivAI@@QAEHW4PlayerTypes@@H@Z PROC ; CvMinorCivAI::GetFriendshipFromFaithGift, COMDAT
; _this$ = ecx

; 9163 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 9164 : 	int iFriendship = iFaith * 8; // hard-coded to be 8% of faith spent, which becomes 10% on quick speed

	mov	eax, DWORD PTR _iFaith$[ebp]
	shl	eax, 3
	mov	DWORD PTR _iFriendship$[ebp], eax

; 9165 : 	iFriendship /= 100;

	mov	eax, DWORD PTR _iFriendship$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iFriendship$[ebp], eax

; 9166 : 
; 9167 : 	// Game Speed Mod
; 9168 : 	iFriendship *= GC.getGame().getGameSpeedInfo().getGoldGiftMod(); // on quick speed this multiplies it by 125%

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T246426[ebp], edx
	mov	ecx, DWORD PTR $T246426[ebp]
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getGoldGiftMod@CvGameSpeedInfo@@QBEHXZ	; CvGameSpeedInfo::getGoldGiftMod
	imul	eax, DWORD PTR _iFriendship$[ebp]
	mov	DWORD PTR _iFriendship$[ebp], eax

; 9169 : 	iFriendship /= 100;

	mov	eax, DWORD PTR _iFriendship$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iFriendship$[ebp], eax

; 9170 : 
; 9171 : 	// Friendship gained should always be positive
; 9172 : 	iFriendship = max(iFriendship, /*5*/ GC.getMINOR_CIV_GOLD_GIFT_MINIMUM_FRIENDSHIP_REWARD());

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3148
	mov	DWORD PTR $T246430[ebp], edx
	mov	eax, DWORD PTR $T246430[ebp]
	mov	DWORD PTR $T246422[ebp], eax
	mov	ecx, DWORD PTR _iFriendship$[ebp]
	cmp	ecx, DWORD PTR $T246422[ebp]
	jge	SHORT $LN10@GetFriends@9
	lea	edx, DWORD PTR $T246422[ebp]
	mov	DWORD PTR tv90[ebp], edx
	jmp	SHORT $LN11@GetFriends@9
$LN10@GetFriends@9:
	lea	eax, DWORD PTR _iFriendship$[ebp]
	mov	DWORD PTR tv90[ebp], eax
$LN11@GetFriends@9:
	mov	ecx, DWORD PTR tv90[ebp]
	mov	DWORD PTR $T246437[ebp], ecx
	mov	edx, DWORD PTR $T246437[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _iFriendship$[ebp], eax

; 9173 : 
; 9174 : 	// Round the number so it's pretty
; 9175 : 	int iVisibleDivisor = /*5*/ GC.getMINOR_CIV_GOLD_GIFT_VISIBLE_DIVISOR();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3144
	mov	DWORD PTR _iVisibleDivisor$[ebp], ecx

; 9176 : 	iFriendship /= iVisibleDivisor;

	mov	eax, DWORD PTR _iFriendship$[ebp]
	cdq
	idiv	DWORD PTR _iVisibleDivisor$[ebp]
	mov	DWORD PTR _iFriendship$[ebp], eax

; 9177 : 	iFriendship *= iVisibleDivisor;

	mov	edx, DWORD PTR _iFriendship$[ebp]
	imul	edx, DWORD PTR _iVisibleDivisor$[ebp]
	mov	DWORD PTR _iFriendship$[ebp], edx

; 9178 : 
; 9179 : 	// if the city state is the same religion as you, triple the effect
; 9180 : 	if (IsSameReligionAsMajor(eMajor))

	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsSameReligionAsMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsSameReligionAsMajor
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@GetFriends@9

; 9181 : 		iFriendship *= 3;

	mov	edx, DWORD PTR _iFriendship$[ebp]
	imul	edx, 3
	mov	DWORD PTR _iFriendship$[ebp], edx
$LN1@GetFriends@9:

; 9182 : 
; 9183 : 	return iFriendship;

	mov	eax, DWORD PTR _iFriendship$[ebp]

; 9184 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetFriendshipFromFaithGift@CvMinorCivAI@@QAEHW4PlayerTypes@@H@Z ENDP ; CvMinorCivAI::GetFriendshipFromFaithGift
_TEXT	ENDS
PUBLIC	?IsLackingGiftableTileImprovementAtPlot@CvMinorCivAI@@QAE_NW4PlayerTypes@@HH@Z ; CvMinorCivAI::IsLackingGiftableTileImprovementAtPlot
PUBLIC	?GetGiftTileImprovementCost@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetGiftTileImprovementCost
PUBLIC	?CanMajorGiftTileImprovement@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorGiftTileImprovement
EXTRN	?GetPlots@CvPlayer@@QAEAAV?$FStaticVector@H$0DJAA@$00$0BCJ@$0A@@@XZ:PROC ; CvPlayer::GetPlots
; Function compile flags: /Odtp
;	COMDAT ?CanMajorGiftTileImprovement@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
tv166 = -60						; size = 4
_this$ = -56						; size = 4
$T246484 = -52						; size = 4
$T246480 = -48						; size = 4
$T246476 = -44						; size = 4
$T246469 = -40						; size = 4
$T246462 = -36						; size = 4
$T246458 = -32						; size = 4
$T246451 = -28						; size = 4
_pPlot$228015 = -24					; size = 4
_ui$228010 = -20					; size = 4
_bHasValidPlot$ = -13					; size = 1
_aiPlots$ = -12						; size = 4
_pPlayer$ = -8						; size = 4
_iCost$ = -4						; size = 4
_eMajor$ = 8						; size = 4
?CanMajorGiftTileImprovement@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::CanMajorGiftTileImprovement, COMDAT
; _this$ = ecx

; 9190 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	mov	DWORD PTR _this$[ebp], ecx

; 9191 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 9192 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 9193 : 	if(eMajor < 0 || eMajor >= MAX_MAJOR_CIVS) return false;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN9@CanMajorGi
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN13@CanMajorGi
$LN9@CanMajorGi:
	xor	al, al
	jmp	$LN11@CanMajorGi

; 9194 : 	CvPlayer* pPlayer = &GET_PLAYER(eMajor);

$LN13@CanMajorGi:
	mov	eax, DWORD PTR _eMajor$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pPlayer$[ebp], eax

; 9195 : 	if(pPlayer == NULL)

	jne	SHORT $LN8@CanMajorGi

; 9196 : 	{
; 9197 : 		CvAssertMsg(false, "pPlayer not expected to be NULL. Please send Anton your save file and version.");
; 9198 : 		return false;

	xor	al, al
	jmp	$LN11@CanMajorGi
$LN8@CanMajorGi:

; 9199 : 	}
; 9200 : 
; 9201 : 	// Must have enough gold
; 9202 : 	const int iCost = GetGiftTileImprovementCost(eMajor);

	mov	ecx, DWORD PTR _eMajor$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetGiftTileImprovementCost@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetGiftTileImprovementCost
	mov	DWORD PTR _iCost$[ebp], eax

; 9203 : 	if(pPlayer->GetTreasury()->GetGold() < iCost)

	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGold@CvTreasury@@QBEHXZ		; CvTreasury::GetGold
	cmp	eax, DWORD PTR _iCost$[ebp]
	jge	SHORT $LN7@CanMajorGi

; 9204 : 		return false;

	xor	al, al
	jmp	$LN11@CanMajorGi
$LN7@CanMajorGi:

; 9205 : 
; 9206 : 	// Must own an improveable plot
; 9207 : 	bool bHasValidPlot = false;

	mov	BYTE PTR _bHasValidPlot$[ebp], 0

; 9208 : 	CvPlotsVector& aiPlots = GetPlayer()->GetPlots();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?GetPlots@CvPlayer@@QAEAAV?$FStaticVector@H$0DJAA@$00$0BCJ@$0A@@@XZ ; CvPlayer::GetPlots
	mov	DWORD PTR _aiPlots$[ebp], eax

; 9209 : 	for(uint ui = 0; ui < aiPlots.size(); ui++)

	mov	DWORD PTR _ui$228010[ebp], 0
	jmp	SHORT $LN6@CanMajorGi
$LN5@CanMajorGi:
	mov	edx, DWORD PTR _ui$228010[ebp]
	add	edx, 1
	mov	DWORD PTR _ui$228010[ebp], edx
$LN6@CanMajorGi:
	mov	eax, DWORD PTR _aiPlots$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T246451[ebp], ecx
	mov	edx, DWORD PTR _ui$228010[ebp]
	cmp	edx, DWORD PTR $T246451[ebp]
	jae	$LN4@CanMajorGi

; 9210 : 	{
; 9211 : 		// at the end of the plot list
; 9212 : 		if(aiPlots[ui] == -1)

	mov	eax, DWORD PTR _aiPlots$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _ui$228010[ebp]
	cmp	DWORD PTR [ecx+edx*4], -1
	jne	SHORT $LN3@CanMajorGi

; 9213 : 		{
; 9214 : 			break;

	jmp	$LN4@CanMajorGi
$LN3@CanMajorGi:

; 9215 : 		}
; 9216 : 
; 9217 : 		CvPlot* pPlot = GC.getMap().plotByIndex(aiPlots[ui]);

	mov	eax, DWORD PTR _aiPlots$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _ui$228010[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR $T246458[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T246462[ebp], ecx
	mov	edx, DWORD PTR $T246458[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T246476[ebp], eax
	cmp	DWORD PTR $T246476[ebp], 0
	jl	SHORT $LN25@CanMajorGi
	mov	ecx, DWORD PTR $T246462[ebp]
	mov	edx, DWORD PTR [ecx+4028]
	mov	DWORD PTR $T246469[ebp], edx
	mov	eax, DWORD PTR $T246476[ebp]
	cmp	eax, DWORD PTR $T246469[ebp]
	jge	SHORT $LN25@CanMajorGi
	mov	ecx, DWORD PTR $T246476[ebp]
	imul	ecx, 484				; 000001e4H
	mov	edx, DWORD PTR $T246462[ebp]
	add	ecx, DWORD PTR [edx+4068]
	mov	DWORD PTR tv166[ebp], ecx
	jmp	SHORT $LN23@CanMajorGi
$LN25@CanMajorGi:
	mov	DWORD PTR tv166[ebp], 0
$LN23@CanMajorGi:
	mov	eax, DWORD PTR tv166[ebp]
	mov	DWORD PTR _pPlot$228015[ebp], eax

; 9218 : 		if (IsLackingGiftableTileImprovementAtPlot(eMajor, pPlot->getX(), pPlot->getY()))

	mov	ecx, DWORD PTR _pPlot$228015[ebp]
	movsx	edx, WORD PTR [ecx+2]
	mov	DWORD PTR $T246480[ebp], edx
	mov	eax, DWORD PTR _pPlot$228015[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	DWORD PTR $T246484[ebp], ecx
	mov	edx, DWORD PTR $T246480[ebp]
	push	edx
	mov	eax, DWORD PTR $T246484[ebp]
	push	eax
	mov	ecx, DWORD PTR _eMajor$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLackingGiftableTileImprovementAtPlot@CvMinorCivAI@@QAE_NW4PlayerTypes@@HH@Z ; CvMinorCivAI::IsLackingGiftableTileImprovementAtPlot
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@CanMajorGi

; 9219 : 		{
; 9220 : 			bHasValidPlot = true;

	mov	BYTE PTR _bHasValidPlot$[ebp], 1

; 9221 : 			break;

	jmp	SHORT $LN4@CanMajorGi
$LN2@CanMajorGi:

; 9222 : 		}
; 9223 : 	}

	jmp	$LN5@CanMajorGi
$LN4@CanMajorGi:

; 9224 : 
; 9225 : 	if (!bHasValidPlot)

	movzx	eax, BYTE PTR _bHasValidPlot$[ebp]
	test	eax, eax
	jne	SHORT $LN1@CanMajorGi

; 9226 : 		return false;

	xor	al, al
	jmp	SHORT $LN11@CanMajorGi
$LN1@CanMajorGi:

; 9227 : 
; 9228 : 	return true;

	mov	al, 1
$LN11@CanMajorGi:

; 9229 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?CanMajorGiftTileImprovement@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::CanMajorGiftTileImprovement
_TEXT	ENDS
EXTRN	?getImprovementTypeNeededToImproveResource@CvPlot@@QAE?AW4ImprovementTypes@@W4PlayerTypes@@_N@Z:PROC ; CvPlot::getImprovementTypeNeededToImproveResource
; Function compile flags: /Odtp
;	COMDAT ?IsLackingGiftableTileImprovementAtPlot@CvMinorCivAI@@QAE_NW4PlayerTypes@@HH@Z
_TEXT	SEGMENT
tv158 = -80						; size = 4
tv173 = -76						; size = 4
_this$ = -72						; size = 4
$T246605 = -68						; size = 4
$T246604 = -64						; size = 4
$T246595 = -60						; size = 4
$T246547 = -56						; size = 4
$T246534 = -52						; size = 4
$T246530 = -48						; size = 4
$T246516 = -44						; size = 4
$T246512 = -37						; size = 1
$T246501 = -36						; size = 4
$T246497 = -29						; size = 1
_iMapY$246564 = -28					; size = 4
_iMapX$246562 = -24					; size = 4
$T246490 = -20						; size = 4
_eUsage$228032 = -16					; size = 4
_pPlot$ = -12						; size = 4
_eImprovement$ = -8					; size = 4
_eResource$ = -4					; size = 4
_eMajor$ = 8						; size = 4
_iPlotX$ = 12						; size = 4
_iPlotY$ = 16						; size = 4
?IsLackingGiftableTileImprovementAtPlot@CvMinorCivAI@@QAE_NW4PlayerTypes@@HH@Z PROC ; CvMinorCivAI::IsLackingGiftableTileImprovementAtPlot, COMDAT
; _this$ = ecx

; 9233 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	mov	DWORD PTR _this$[ebp], ecx

; 9234 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 9235 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 9236 : 	if(eMajor < 0 || eMajor >= MAX_MAJOR_CIVS) return false;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN7@IsLackingG
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN8@IsLackingG
$LN7@IsLackingG:
	xor	al, al
	jmp	$LN9@IsLackingG
$LN8@IsLackingG:

; 9237 : 	CvPlot* pPlot = GC.getMap().plot(iPlotX, iPlotY);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T246490[ebp], eax
	cmp	DWORD PTR _iPlotX$[ebp], -2147483647	; 80000001H
	je	SHORT $LN13@IsLackingG
	cmp	DWORD PTR _iPlotY$[ebp], -2147483647	; 80000001H
	jne	SHORT $LN14@IsLackingG
$LN13@IsLackingG:
	mov	DWORD PTR _pPlot$[ebp], 0
	jmp	$LN15@IsLackingG
$LN14@IsLackingG:
	mov	ecx, DWORD PTR $T246490[ebp]
	mov	dl, BYTE PTR [ecx+4056]
	mov	BYTE PTR $T246497[ebp], dl
	mov	eax, DWORD PTR $T246490[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T246501[ebp], ecx
	movzx	edx, BYTE PTR $T246497[ebp]
	test	edx, edx
	je	SHORT $LN26@IsLackingG
	cmp	DWORD PTR _iPlotX$[ebp], 0
	jge	SHORT $LN25@IsLackingG
	mov	eax, DWORD PTR _iPlotX$[ebp]
	cdq
	idiv	DWORD PTR $T246501[ebp]
	add	edx, DWORD PTR $T246501[ebp]
	mov	DWORD PTR _iMapX$246562[ebp], edx
	jmp	SHORT $LN27@IsLackingG
	jmp	SHORT $LN26@IsLackingG
$LN25@IsLackingG:
	mov	eax, DWORD PTR _iPlotX$[ebp]
	cmp	eax, DWORD PTR $T246501[ebp]
	jl	SHORT $LN26@IsLackingG
	mov	eax, DWORD PTR _iPlotX$[ebp]
	cdq
	idiv	DWORD PTR $T246501[ebp]
	mov	DWORD PTR _iMapX$246562[ebp], edx
	jmp	SHORT $LN27@IsLackingG
$LN26@IsLackingG:
	mov	ecx, DWORD PTR _iPlotX$[ebp]
	mov	DWORD PTR _iMapX$246562[ebp], ecx
$LN27@IsLackingG:
	mov	edx, DWORD PTR $T246490[ebp]
	mov	al, BYTE PTR [edx+4057]
	mov	BYTE PTR $T246512[ebp], al
	mov	ecx, DWORD PTR $T246490[ebp]
	mov	edx, DWORD PTR [ecx+4024]
	mov	DWORD PTR $T246516[ebp], edx
	movzx	eax, BYTE PTR $T246512[ebp]
	test	eax, eax
	je	SHORT $LN36@IsLackingG
	cmp	DWORD PTR _iPlotY$[ebp], 0
	jge	SHORT $LN35@IsLackingG
	mov	eax, DWORD PTR _iPlotY$[ebp]
	cdq
	idiv	DWORD PTR $T246516[ebp]
	add	edx, DWORD PTR $T246516[ebp]
	mov	DWORD PTR _iMapY$246564[ebp], edx
	jmp	SHORT $LN37@IsLackingG
	jmp	SHORT $LN36@IsLackingG
$LN35@IsLackingG:
	mov	ecx, DWORD PTR _iPlotY$[ebp]
	cmp	ecx, DWORD PTR $T246516[ebp]
	jl	SHORT $LN36@IsLackingG
	mov	eax, DWORD PTR _iPlotY$[ebp]
	cdq
	idiv	DWORD PTR $T246516[ebp]
	mov	DWORD PTR _iMapY$246564[ebp], edx
	jmp	SHORT $LN37@IsLackingG
$LN36@IsLackingG:
	mov	edx, DWORD PTR _iPlotY$[ebp]
	mov	DWORD PTR _iMapY$246564[ebp], edx
$LN37@IsLackingG:
	cmp	DWORD PTR _iMapX$246562[ebp], 0
	jl	SHORT $LN41@IsLackingG
	mov	eax, DWORD PTR $T246490[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T246530[ebp], ecx
	mov	edx, DWORD PTR _iMapX$246562[ebp]
	cmp	edx, DWORD PTR $T246530[ebp]
	jge	SHORT $LN41@IsLackingG
	cmp	DWORD PTR _iMapY$246564[ebp], 0
	jl	SHORT $LN41@IsLackingG
	mov	eax, DWORD PTR $T246490[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T246534[ebp], ecx
	mov	edx, DWORD PTR _iMapY$246564[ebp]
	cmp	edx, DWORD PTR $T246534[ebp]
	jge	SHORT $LN41@IsLackingG
	mov	DWORD PTR tv173[ebp], 1
	jmp	SHORT $LN39@IsLackingG
$LN41@IsLackingG:
	mov	DWORD PTR tv173[ebp], 0
$LN39@IsLackingG:
	cmp	DWORD PTR tv173[ebp], 0
	je	SHORT $LN17@IsLackingG
	mov	eax, DWORD PTR $T246490[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T246547[ebp], ecx
	mov	edx, DWORD PTR _iMapY$246564[ebp]
	imul	edx, DWORD PTR $T246547[ebp]
	add	edx, DWORD PTR _iMapX$246562[ebp]
	imul	edx, 484				; 000001e4H
	mov	eax, DWORD PTR $T246490[ebp]
	add	edx, DWORD PTR [eax+4068]
	mov	DWORD PTR tv158[ebp], edx
	jmp	SHORT $LN18@IsLackingG
$LN17@IsLackingG:
	mov	DWORD PTR tv158[ebp], 0
$LN18@IsLackingG:
	mov	ecx, DWORD PTR tv158[ebp]
	mov	DWORD PTR _pPlot$[ebp], ecx
$LN15@IsLackingG:

; 9238 : 	if(pPlot == NULL)

	cmp	DWORD PTR _pPlot$[ebp], 0
	jne	SHORT $LN6@IsLackingG

; 9239 : 	{
; 9240 : 		CvAssertMsg(false, "pPlot not expected to be NULL, invalid coordinates. Please send Anton your save file and version.");
; 9241 : 		return false;

	xor	al, al
	jmp	$LN9@IsLackingG
$LN6@IsLackingG:

; 9242 : 	}
; 9243 : 
; 9244 : 	// Only allowed to improve plots that the minor actually owns
; 9245 : 	if(pPlot->getOwner() != GetPlayer()->GetID())

	mov	edx, DWORD PTR _pPlot$[ebp]
	movsx	eax, BYTE PTR [edx+4]
	mov	DWORD PTR $T246595[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T246604[ebp], eax
	mov	ecx, DWORD PTR $T246604[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T246605[ebp], edx
	mov	eax, DWORD PTR $T246595[ebp]
	cmp	eax, DWORD PTR $T246605[ebp]
	je	SHORT $LN5@IsLackingG

; 9246 : 		return false;

	xor	al, al
	jmp	SHORT $LN9@IsLackingG
$LN5@IsLackingG:

; 9247 : 
; 9248 : 	// Only allowed to improve Luxury and Strategic resources
; 9249 : 	ResourceTypes eResource = pPlot->getResourceType();

	push	-1
	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z ; CvPlot::getResourceType
	mov	DWORD PTR _eResource$[ebp], eax

; 9250 : 	if(eResource == NO_RESOURCE)

	cmp	DWORD PTR _eResource$[ebp], -1
	jne	SHORT $LN4@IsLackingG

; 9251 : 	{
; 9252 : 		return false;

	xor	al, al
	jmp	SHORT $LN9@IsLackingG

; 9253 : 	}
; 9254 : 	else

	jmp	SHORT $LN3@IsLackingG
$LN4@IsLackingG:

; 9255 : 	{
; 9256 : 		ResourceUsageTypes eUsage = GC.getResourceInfo(eResource)->getResourceUsage();

	mov	ecx, DWORD PTR _eResource$[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	ecx, eax
	call	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ ; CvResourceInfo::getResourceUsage
	mov	DWORD PTR _eUsage$228032[ebp], eax

; 9257 : 		if(eUsage != RESOURCEUSAGE_STRATEGIC && eUsage != RESOURCEUSAGE_LUXURY)

	cmp	DWORD PTR _eUsage$228032[ebp], 1
	je	SHORT $LN3@IsLackingG
	cmp	DWORD PTR _eUsage$228032[ebp], 2
	je	SHORT $LN3@IsLackingG

; 9258 : 		{
; 9259 : 			return false;

	xor	al, al
	jmp	SHORT $LN9@IsLackingG
$LN3@IsLackingG:

; 9260 : 		}
; 9261 : 	}
; 9262 : 
; 9263 : 	ImprovementTypes eImprovement = pPlot->getImprovementTypeNeededToImproveResource(eMajor, false /*bTestOwner*/);

	push	0
	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?getImprovementTypeNeededToImproveResource@CvPlot@@QAE?AW4ImprovementTypes@@W4PlayerTypes@@_N@Z ; CvPlot::getImprovementTypeNeededToImproveResource
	mov	DWORD PTR _eImprovement$[ebp], eax

; 9264 : 
; 9265 : 	// There must be a valid improvement for the player to build
; 9266 : 	if(eImprovement == NO_IMPROVEMENT)

	cmp	DWORD PTR _eImprovement$[ebp], -1
	jne	SHORT $LN1@IsLackingG

; 9267 : 		return false;

	xor	al, al
	jmp	SHORT $LN9@IsLackingG
$LN1@IsLackingG:

; 9268 : 
; 9269 : 	return true;

	mov	al, 1
$LN9@IsLackingG:

; 9270 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?IsLackingGiftableTileImprovementAtPlot@CvMinorCivAI@@QAE_NW4PlayerTypes@@HH@Z ENDP ; CvMinorCivAI::IsLackingGiftableTileImprovementAtPlot
_TEXT	ENDS
PUBLIC	?CanMajorGiftTileImprovementAtPlot@CvMinorCivAI@@QAE_NW4PlayerTypes@@HH@Z ; CvMinorCivAI::CanMajorGiftTileImprovementAtPlot
; Function compile flags: /Odtp
;	COMDAT ?CanMajorGiftTileImprovementAtPlot@CvMinorCivAI@@QAE_NW4PlayerTypes@@HH@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
_eMajor$ = 8						; size = 4
_iPlotX$ = 12						; size = 4
_iPlotY$ = 16						; size = 4
?CanMajorGiftTileImprovementAtPlot@CvMinorCivAI@@QAE_NW4PlayerTypes@@HH@Z PROC ; CvMinorCivAI::CanMajorGiftTileImprovementAtPlot, COMDAT
; _this$ = ecx

; 9274 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 9275 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 9276 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 9277 : 	if(eMajor < 0 || eMajor >= MAX_MAJOR_CIVS) return false;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN1@CanMajorGi@2
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN2@CanMajorGi@2
$LN1@CanMajorGi@2:
	xor	al, al
	jmp	SHORT $LN3@CanMajorGi@2
$LN2@CanMajorGi@2:

; 9278 : 
; 9279 : 	return (CanMajorGiftTileImprovement(eMajor) && IsLackingGiftableTileImprovementAtPlot(eMajor, iPlotX, iPlotY));

	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CanMajorGiftTileImprovement@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorGiftTileImprovement
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@CanMajorGi@2
	mov	edx, DWORD PTR _iPlotY$[ebp]
	push	edx
	mov	eax, DWORD PTR _iPlotX$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eMajor$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLackingGiftableTileImprovementAtPlot@CvMinorCivAI@@QAE_NW4PlayerTypes@@HH@Z ; CvMinorCivAI::IsLackingGiftableTileImprovementAtPlot
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@CanMajorGi@2
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN6@CanMajorGi@2
$LN5@CanMajorGi@2:
	mov	DWORD PTR tv78[ebp], 0
$LN6@CanMajorGi@2:
	mov	al, BYTE PTR tv78[ebp]
$LN3@CanMajorGi@2:

; 9280 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?CanMajorGiftTileImprovementAtPlot@CvMinorCivAI@@QAE_NW4PlayerTypes@@HH@Z ENDP ; CvMinorCivAI::CanMajorGiftTileImprovementAtPlot
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetGiftTileImprovementCost@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T246615 = -4						; size = 4
_eMajor$ = 8						; size = 4
?GetGiftTileImprovementCost@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetGiftTileImprovementCost, COMDAT
; _this$ = ecx

; 9283 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 9284 : 	CvAssertMsg(eMajor >= 0, "eMajor is expected to be non-negative (invalid Index)");
; 9285 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "eMajor is expected to be within maximum bounds (invalid Index)");
; 9286 : 	if(eMajor < 0 || eMajor >= MAX_MAJOR_CIVS) return -1;

	cmp	DWORD PTR _eMajor$[ebp], 0
	jl	SHORT $LN1@GetGiftTil
	cmp	DWORD PTR _eMajor$[ebp], 22		; 00000016H
	jl	SHORT $LN2@GetGiftTil
$LN1@GetGiftTil:
	or	eax, -1
	jmp	SHORT $LN3@GetGiftTil
$LN2@GetGiftTil:

; 9287 : 
; 9288 : 	return GC.getMINOR_CIV_TILE_IMPROVEMENT_GIFT_COST();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7324
	mov	DWORD PTR $T246615[ebp], eax
	mov	eax, DWORD PTR $T246615[ebp]
$LN3@GetGiftTil:

; 9289 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetGiftTileImprovementCost@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetGiftTileImprovementCost
_TEXT	ENDS
PUBLIC	??1?$auto_ptr@VICvPlot1@@@std@@QAE@XZ		; std::auto_ptr<ICvPlot1>::~auto_ptr<ICvPlot1>
PUBLIC	?DoTileImprovementGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z ; CvMinorCivAI::DoTileImprovementGiftFromMajor
EXTRN	??3CvDllPlot@@SAXPAX@Z:PROC			; CvDllPlot::operator delete
EXTRN	??0CvDllPlot@@QAE@PAVCvPlot@@@Z:PROC		; CvDllPlot::CvDllPlot
EXTRN	??2CvDllPlot@@SAPAXI@Z:PROC			; CvDllPlot::operator new
EXTRN	?setImprovementType@CvPlot@@QAEXW4ImprovementTypes@@W4PlayerTypes@@@Z:PROC ; CvPlot::setImprovementType
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces.h
xdata$x	SEGMENT
__unwindtable$?DoTileImprovementGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoTileImprovementGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?DoTileImprovementGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?DoTileImprovementGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?DoTileImprovementGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z$3
__ehfuncinfo$?DoTileImprovementGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?DoTileImprovementGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoTileImprovementGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z
_TEXT	SEGMENT
tv214 = -148						; size = 4
tv212 = -144						; size = 4
tv211 = -140						; size = 4
tv162 = -136						; size = 4
tv148 = -132						; size = 4
tv138 = -128						; size = 4
tv245 = -124						; size = 4
tv257 = -120						; size = 4
_this$ = -116						; size = 4
_inst$246761 = -112					; size = 4
$T246758 = -108						; size = 4
$T246748 = -104						; size = 4
$T246729 = -92						; size = 4
$T246681 = -88						; size = 4
$T246668 = -84						; size = 4
$T246664 = -80						; size = 4
$T246657 = -76						; size = 4
$T246653 = -69						; size = 1
$T246642 = -68						; size = 4
$T246638 = -61						; size = 1
_iMapY$246690 = -60					; size = 4
_iMapX$246689 = -56					; size = 4
$T246631 = -52						; size = 4
$T246623 = -48						; size = 4
$T246622 = -44						; size = 4
$T246619 = -40						; size = 4
$T246618 = -36						; size = 4
_pPlot$ = -32						; size = 4
_eImprovement$ = -28					; size = 4
_pPlayer$ = -24						; size = 4
_pDllPlot$ = -20					; size = 4
_iCost$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_eMajor$ = 8						; size = 4
_iPlotX$ = 12						; size = 4
_iPlotY$ = 16						; size = 4
?DoTileImprovementGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z PROC ; CvMinorCivAI::DoTileImprovementGiftFromMajor, COMDAT
; _this$ = ecx

; 9292 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoTileImprovementGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 136				; 00000088H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 9293 : 	if(!CanMajorGiftTileImprovementAtPlot(eMajor, iPlotX, iPlotY))

	mov	eax, DWORD PTR _iPlotY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iPlotX$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CanMajorGiftTileImprovementAtPlot@CvMinorCivAI@@QAE_NW4PlayerTypes@@HH@Z ; CvMinorCivAI::CanMajorGiftTileImprovementAtPlot
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@DoTileImpr

; 9294 : 	{
; 9295 : 		return;

	jmp	$LN5@DoTileImpr
$LN4@DoTileImpr:

; 9296 : 	}
; 9297 : 	CvPlot* pPlot = GC.getMap().plot(iPlotX, iPlotY);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T246631[ebp], ecx
	cmp	DWORD PTR _iPlotX$[ebp], -2147483647	; 80000001H
	je	SHORT $LN15@DoTileImpr
	cmp	DWORD PTR _iPlotY$[ebp], -2147483647	; 80000001H
	jne	SHORT $LN16@DoTileImpr
$LN15@DoTileImpr:
	mov	DWORD PTR _pPlot$[ebp], 0
	jmp	$LN17@DoTileImpr
$LN16@DoTileImpr:
	mov	edx, DWORD PTR $T246631[ebp]
	mov	al, BYTE PTR [edx+4056]
	mov	BYTE PTR $T246638[ebp], al
	mov	ecx, DWORD PTR $T246631[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T246642[ebp], edx
	movzx	eax, BYTE PTR $T246638[ebp]
	test	eax, eax
	je	SHORT $LN28@DoTileImpr
	cmp	DWORD PTR _iPlotX$[ebp], 0
	jge	SHORT $LN27@DoTileImpr
	mov	eax, DWORD PTR _iPlotX$[ebp]
	cdq
	idiv	DWORD PTR $T246642[ebp]
	add	edx, DWORD PTR $T246642[ebp]
	mov	DWORD PTR _iMapX$246689[ebp], edx
	jmp	SHORT $LN29@DoTileImpr
	jmp	SHORT $LN28@DoTileImpr
$LN27@DoTileImpr:
	mov	ecx, DWORD PTR _iPlotX$[ebp]
	cmp	ecx, DWORD PTR $T246642[ebp]
	jl	SHORT $LN28@DoTileImpr
	mov	eax, DWORD PTR _iPlotX$[ebp]
	cdq
	idiv	DWORD PTR $T246642[ebp]
	mov	DWORD PTR _iMapX$246689[ebp], edx
	jmp	SHORT $LN29@DoTileImpr
$LN28@DoTileImpr:
	mov	edx, DWORD PTR _iPlotX$[ebp]
	mov	DWORD PTR _iMapX$246689[ebp], edx
$LN29@DoTileImpr:
	mov	eax, DWORD PTR $T246631[ebp]
	mov	cl, BYTE PTR [eax+4057]
	mov	BYTE PTR $T246653[ebp], cl
	mov	edx, DWORD PTR $T246631[ebp]
	mov	eax, DWORD PTR [edx+4024]
	mov	DWORD PTR $T246657[ebp], eax
	movzx	ecx, BYTE PTR $T246653[ebp]
	push	ecx
	mov	edx, DWORD PTR $T246657[ebp]
	push	edx
	mov	eax, DWORD PTR _iPlotY$[ebp]
	push	eax
	call	?coordRange@@YAHHH_N@Z			; coordRange
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iMapY$246690[ebp], eax
	cmp	DWORD PTR _iMapX$246689[ebp], 0
	jl	SHORT $LN37@DoTileImpr
	mov	ecx, DWORD PTR $T246631[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T246664[ebp], edx
	mov	eax, DWORD PTR _iMapX$246689[ebp]
	cmp	eax, DWORD PTR $T246664[ebp]
	jge	SHORT $LN37@DoTileImpr
	cmp	DWORD PTR _iMapY$246690[ebp], 0
	jl	SHORT $LN37@DoTileImpr
	mov	ecx, DWORD PTR $T246631[ebp]
	mov	edx, DWORD PTR [ecx+4024]
	mov	DWORD PTR $T246668[ebp], edx
	mov	eax, DWORD PTR _iMapY$246690[ebp]
	cmp	eax, DWORD PTR $T246668[ebp]
	jge	SHORT $LN37@DoTileImpr
	mov	DWORD PTR tv257[ebp], 1
	jmp	SHORT $LN35@DoTileImpr
$LN37@DoTileImpr:
	mov	DWORD PTR tv257[ebp], 0
$LN35@DoTileImpr:
	cmp	DWORD PTR tv257[ebp], 0
	je	SHORT $LN19@DoTileImpr
	mov	ecx, DWORD PTR $T246631[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T246681[ebp], edx
	mov	eax, DWORD PTR _iMapY$246690[ebp]
	imul	eax, DWORD PTR $T246681[ebp]
	add	eax, DWORD PTR _iMapX$246689[ebp]
	imul	eax, 484				; 000001e4H
	mov	ecx, DWORD PTR $T246631[ebp]
	add	eax, DWORD PTR [ecx+4068]
	mov	DWORD PTR tv245[ebp], eax
	jmp	SHORT $LN20@DoTileImpr
$LN19@DoTileImpr:
	mov	DWORD PTR tv245[ebp], 0
$LN20@DoTileImpr:
	mov	edx, DWORD PTR tv245[ebp]
	mov	DWORD PTR _pPlot$[ebp], edx
$LN17@DoTileImpr:

; 9298 : 	if(pPlot == NULL)

	cmp	DWORD PTR _pPlot$[ebp], 0
	jne	SHORT $LN47@DoTileImpr

; 9299 : 	{
; 9300 : 		CvAssertMsg(false, "pPlot not expected to be NULL, invalid coordinates. Please send Anton your save file and version.");
; 9301 : 		return;

	jmp	$LN5@DoTileImpr

; 9302 : 	}
; 9303 : 	CvPlayer* pPlayer = &GET_PLAYER(eMajor);

$LN47@DoTileImpr:
	mov	eax, DWORD PTR _eMajor$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pPlayer$[ebp], eax

; 9304 : 	if(pPlayer == NULL)

	jne	SHORT $LN2@DoTileImpr

; 9305 : 	{
; 9306 : 		CvAssertMsg(false, "pPlayer not expected to be NULL. Please send Anton your save file and version.");
; 9307 : 		return;

	jmp	$LN5@DoTileImpr
$LN2@DoTileImpr:

; 9308 : 	}
; 9309 : 
; 9310 : 	ImprovementTypes eImprovement = pPlot->getImprovementTypeNeededToImproveResource(eMajor, /*bTestOwner*/false);

	push	0
	mov	ecx, DWORD PTR _eMajor$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?getImprovementTypeNeededToImproveResource@CvPlot@@QAE?AW4ImprovementTypes@@W4PlayerTypes@@_N@Z ; CvPlot::getImprovementTypeNeededToImproveResource
	mov	DWORD PTR _eImprovement$[ebp], eax

; 9311 : 	if(eImprovement == NO_IMPROVEMENT)

	cmp	DWORD PTR _eImprovement$[ebp], -1
	jne	SHORT $LN1@DoTileImpr

; 9312 : 	{
; 9313 : 		return;

	jmp	$LN5@DoTileImpr
$LN1@DoTileImpr:

; 9314 : 	}
; 9315 : 
; 9316 : 	pPlot->setImprovementType(eImprovement, eMajor);

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	eax, DWORD PTR _eImprovement$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?setImprovementType@CvPlot@@QAEXW4ImprovementTypes@@W4PlayerTypes@@@Z ; CvPlot::setImprovementType

; 9317 : 
; 9318 : 	// VFX
; 9319 : 	auto_ptr<ICvPlot1> pDllPlot(new CvDllPlot(pPlot));

	push	12					; 0000000cH
	call	??2CvDllPlot@@SAPAXI@Z			; CvDllPlot::operator new
	add	esp, 4
	mov	DWORD PTR $T246619[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T246619[ebp], 0
	je	SHORT $LN7@DoTileImpr
	mov	ecx, DWORD PTR _pPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T246619[ebp]
	call	??0CvDllPlot@@QAE@PAVCvPlot@@@Z		; CvDllPlot::CvDllPlot
	mov	DWORD PTR tv138[ebp], eax
	jmp	SHORT $LN8@DoTileImpr
$LN7@DoTileImpr:
	mov	DWORD PTR tv138[ebp], 0
$LN8@DoTileImpr:
	mov	edx, DWORD PTR tv138[ebp]
	mov	DWORD PTR $T246618[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T246618[ebp]
	mov	DWORD PTR _pDllPlot$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 9320 : 	gDLL->GameplayDoFX(pDllPlot.get());

	mov	ecx, DWORD PTR $T246729[ebp]
	mov	DWORD PTR tv148[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv148[ebp], edx
	push	-1
	mov	eax, DWORD PTR _pDllPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv148[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv148[ebp]
	mov	eax, DWORD PTR [edx+708]
	call	eax

; 9321 : 
; 9322 : 	const int iCost = GetGiftTileImprovementCost(eMajor);

	mov	ecx, DWORD PTR _eMajor$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetGiftTileImprovementCost@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetGiftTileImprovementCost
	mov	DWORD PTR _iCost$[ebp], eax

; 9323 : 	GET_PLAYER(eMajor).GetTreasury()->LogExpenditure(GetPlayer()->GetMinorCivAI()->GetNamesListAsString(0), iCost,5);

	push	5
	mov	edx, DWORD PTR _iCost$[ebp]
	push	edx
	sub	esp, 28					; 0000001cH
	mov	esi, esp
	mov	DWORD PTR $T246622[ebp], esp
	sub	esp, 272				; 00000110H
	mov	ecx, esp
	mov	DWORD PTR $T246623[ebp], esp
	push	0
	call	??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@I@Z ; FStaticVector<enum PlayerTypes,64,1,297,0>::FStaticVector<enum PlayerTypes,64,1,297,0>
	mov	DWORD PTR tv162[ebp], eax
	mov	eax, DWORD PTR tv162[ebp]
	mov	DWORD PTR tv211[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	esi
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, eax
	call	?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z ; CvMinorCivAI::GetNamesListAsString
	mov	DWORD PTR tv212[ebp], eax
	mov	ecx, DWORD PTR tv212[ebp]
	mov	DWORD PTR tv214[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR _eMajor$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246748[ebp], edx
	mov	ecx, DWORD PTR $T246748[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, eax
	call	?LogExpenditure@CvTreasury@@QAEXVCvString@@HH@Z ; CvTreasury::LogExpenditure

; 9324 : 	pPlayer->GetTreasury()->ChangeGold(-iCost);

	mov	eax, DWORD PTR _iCost$[ebp]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?ChangeGold@CvTreasury@@QAEXH@Z		; CvTreasury::ChangeGold

; 9325 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _pDllPlot$[ebp]
	mov	DWORD PTR $T246758[ebp], ecx
	cmp	DWORD PTR $T246758[ebp], 0
	je	SHORT $LN5@DoTileImpr
	mov	edx, DWORD PTR $T246758[ebp]
	mov	DWORD PTR _inst$246761[ebp], edx
	mov	eax, DWORD PTR _inst$246761[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$246761[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN5@DoTileImpr:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoTileImprovementGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z$0:
	mov	eax, DWORD PTR $T246619[ebp]
	push	eax
	call	??3CvDllPlot@@SAXPAX@Z			; CvDllPlot::operator delete
	pop	ecx
	ret	0
__unwindfunclet$?DoTileImprovementGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z$1:
	lea	ecx, DWORD PTR _pDllPlot$[ebp]
	jmp	??1?$auto_ptr@VICvPlot1@@@std@@QAE@XZ	; std::auto_ptr<ICvPlot1>::~auto_ptr<ICvPlot1>
__unwindfunclet$?DoTileImprovementGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z$2:
	mov	ecx, DWORD PTR $T246623[ebp]
	jmp	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
__unwindfunclet$?DoTileImprovementGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z$3:
	mov	ecx, DWORD PTR $T246622[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?DoTileImprovementGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-144]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoTileImprovementGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoTileImprovementGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z ENDP ; CvMinorCivAI::DoTileImprovementGiftFromMajor
PUBLIC	?DoNowAtWarWithTeam@CvMinorCivAI@@QAEXW4TeamTypes@@@Z ; CvMinorCivAI::DoNowAtWarWithTeam
; Function compile flags: /Odtp
;	COMDAT ?DoNowAtWarWithTeam@CvMinorCivAI@@QAEXW4TeamTypes@@@Z
_TEXT	SEGMENT
tv181 = -60						; size = 4
tv197 = -56						; size = 4
_this$ = -52						; size = 4
$T246816 = -48						; size = 4
$T246809 = -44						; size = 4
$T246803 = -40						; size = 4
$T246799 = -36						; size = 4
$T246790 = -32						; size = 4
$T246778 = -28						; size = 4
$T246771 = -24						; size = 4
_iBaseSpawnTurns$228146 = -20				; size = 4
_iPlayerLoop$228135 = -16				; size = 4
_ePlayer$ = -12						; size = 4
_iOldFriendship$ = -8					; size = 4
_iWarFriendship$ = -4					; size = 4
_eTeam$ = 8						; size = 4
?DoNowAtWarWithTeam@CvMinorCivAI@@QAEXW4TeamTypes@@@Z PROC ; CvMinorCivAI::DoNowAtWarWithTeam, COMDAT
; _this$ = ecx

; 9329 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	mov	DWORD PTR _this$[ebp], ecx

; 9330 : 	int iOldFriendship;
; 9331 : 	int iWarFriendship = /*-60*/ GC.getMINOR_FRIENDSHIP_AT_WAR();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2768
	mov	DWORD PTR _iWarFriendship$[ebp], eax

; 9332 : 
; 9333 : 	PlayerTypes ePlayer;
; 9334 : 	for(int iPlayerLoop = 0; iPlayerLoop < MAX_MAJOR_CIVS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$228135[ebp], 0
	jmp	SHORT $LN10@DoNowAtWar
$LN9@DoNowAtWar:
	mov	ecx, DWORD PTR _iPlayerLoop$228135[ebp]
	add	ecx, 1
	mov	DWORD PTR _iPlayerLoop$228135[ebp], ecx
$LN10@DoNowAtWar:
	cmp	DWORD PTR _iPlayerLoop$228135[ebp], 22	; 00000016H
	jge	$LN8@DoNowAtWar

; 9335 : 	{
; 9336 : 		ePlayer = (PlayerTypes) iPlayerLoop;

	mov	edx, DWORD PTR _iPlayerLoop$228135[ebp]
	mov	DWORD PTR _ePlayer$[ebp], edx

; 9337 : 
; 9338 : 		if(GET_PLAYER(ePlayer).getTeam() == eTeam)

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246778[ebp], eax
	mov	ecx, DWORD PTR $T246778[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	cmp	eax, DWORD PTR _eTeam$[ebp]
	jne	SHORT $LN7@DoNowAtWar

; 9339 : 		{
; 9340 : 			// Friendship change
; 9341 : 			iOldFriendship = GetBaseFriendshipWithMajor(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBaseFriendshipWithMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBaseFriendshipWithMajor
	mov	DWORD PTR _iOldFriendship$[ebp], eax

; 9342 : 			DoFriendshipChangeEffects(ePlayer, iOldFriendship, iWarFriendship);

	push	0
	push	0
	mov	ecx, DWORD PTR _iWarFriendship$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iOldFriendship$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z ; CvMinorCivAI::DoFriendshipChangeEffects

; 9343 : 
; 9344 : 			// Revoke PtP is there was one
; 9345 : 			if(IsProtectedByMajor(ePlayer))

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsProtectedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsProtectedByMajor
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN6@DoNowAtWar

; 9346 : 			{
; 9347 : 				DoChangeProtectionFromMajor(ePlayer, false);

	push	0
	push	0
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoChangeProtectionFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@_N1@Z ; CvMinorCivAI::DoChangeProtectionFromMajor
$LN6@DoNowAtWar:

; 9348 : 			}
; 9349 : 
; 9350 : 			// Revoke quests if there were any
; 9351 : 			if(GetNumActiveQuestsForPlayer(ePlayer) > 0)

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumActiveQuestsForPlayer@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetNumActiveQuestsForPlayer
	test	eax, eax
	jle	SHORT $LN5@DoNowAtWar

; 9352 : 			{
; 9353 : 				EndAllActiveQuestsForPlayer(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndAllActiveQuestsForPlayer@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ; CvMinorCivAI::EndAllActiveQuestsForPlayer
$LN5@DoNowAtWar:

; 9354 : 			}
; 9355 : 
; 9356 : 			// Nullify Quests - Deprecated?
; 9357 : 			//GET_PLAYER((PlayerTypes) iMinorCivLoop).GetMinorCivAI()->SetPeaceQuestCompletedByMajor((PlayerTypes) iMajorCivLoop, true);
; 9358 : 			//GET_PLAYER((PlayerTypes) iMinorCivLoop).GetMinorCivAI()->SetWarQuestCompletedByMajor((PlayerTypes) iMajorCivLoop, true);
; 9359 : 
; 9360 : 			//// Is this player declaring war also already a Bully?  If so, he's gonna regret it
; 9361 : 			//GET_PLAYER((PlayerTypes) iMinorCivLoop).GetMinorCivAI()->DoBullyDeclareWar((PlayerTypes) iMajorCivLoop);
; 9362 : 		}

	jmp	$LN4@DoNowAtWar
$LN7@DoNowAtWar:

; 9363 : 		else if (!IsAtWarWithPlayersTeam(ePlayer) && GET_TEAM(GET_PLAYER(ePlayer).getTeam()).isAtWar(eTeam))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAtWarWithPlayersTeam@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAtWarWithPlayersTeam
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN4@DoNowAtWar
	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246790[ebp], edx
	mov	eax, DWORD PTR $T246790[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T246799[ebp], eax
	mov	edx, DWORD PTR $T246799[ebp]
	imul	edx, 2984				; 00000ba8H
	add	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T246803[ebp], edx
	mov	eax, DWORD PTR _eTeam$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T246803[ebp]
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@DoNowAtWar

; 9364 : 		{
; 9365 : 			// If ePlayer is also at war with eTeam, we might shorten the unit spawn timer
; 9366 : 			if (IsFriends(ePlayer) && GetTrait() == MINOR_CIV_TRAIT_MILITARISTIC)

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@DoNowAtWar
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait
	cmp	eax, 1
	jne	SHORT $LN4@DoNowAtWar

; 9367 : 			{
; 9368 : 				int iBaseSpawnTurns = GetSpawnBaseTurns(ePlayer); // May be significantly less now with common enemy due to social policy

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSpawnBaseTurns@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetSpawnBaseTurns
	mov	DWORD PTR _iBaseSpawnTurns$228146[ebp], eax

; 9369 : 				iBaseSpawnTurns = MAX(iBaseSpawnTurns, 1);

	mov	DWORD PTR $T246771[ebp], 1
	mov	edx, DWORD PTR _iBaseSpawnTurns$228146[ebp]
	cmp	edx, DWORD PTR $T246771[ebp]
	jge	SHORT $LN31@DoNowAtWar
	lea	eax, DWORD PTR $T246771[ebp]
	mov	DWORD PTR tv197[ebp], eax
	jmp	SHORT $LN32@DoNowAtWar
$LN31@DoNowAtWar:
	lea	ecx, DWORD PTR _iBaseSpawnTurns$228146[ebp]
	mov	DWORD PTR tv197[ebp], ecx
$LN32@DoNowAtWar:
	mov	edx, DWORD PTR tv197[ebp]
	mov	DWORD PTR $T246809[ebp], edx
	mov	eax, DWORD PTR $T246809[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _iBaseSpawnTurns$228146[ebp], ecx

; 9370 : 				if (iBaseSpawnTurns < GetUnitSpawnCounter(ePlayer))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetUnitSpawnCounter@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetUnitSpawnCounter
	cmp	DWORD PTR _iBaseSpawnTurns$228146[ebp], eax
	jge	SHORT $LN4@DoNowAtWar

; 9371 : 				{
; 9372 : 					SetUnitSpawnCounter(ePlayer, iBaseSpawnTurns);

	mov	eax, DWORD PTR _iBaseSpawnTurns$228146[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetUnitSpawnCounter@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::SetUnitSpawnCounter
$LN4@DoNowAtWar:

; 9373 : 				}
; 9374 : 			}
; 9375 : 		}
; 9376 : 	}

	jmp	$LN9@DoNowAtWar
$LN8@DoNowAtWar:

; 9377 : 
; 9378 : 	GC.GetEngineUserInterface()->setDirty(GameData_DIRTY_BIT, true);

	mov	edx, DWORD PTR $T246816[ebp]
	mov	DWORD PTR tv181[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv181[ebp], eax
	push	1
	push	11					; 0000000bH
	mov	ecx, DWORD PTR tv181[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv181[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 9379 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?DoNowAtWarWithTeam@CvMinorCivAI@@QAEXW4TeamTypes@@@Z ENDP ; CvMinorCivAI::DoNowAtWarWithTeam
_TEXT	ENDS
PUBLIC	?DoNowPeaceWithTeam@CvMinorCivAI@@QAEXW4TeamTypes@@@Z ; CvMinorCivAI::DoNowPeaceWithTeam
; Function compile flags: /Odtp
;	COMDAT ?DoNowPeaceWithTeam@CvMinorCivAI@@QAEXW4TeamTypes@@@Z
_TEXT	SEGMENT
tv93 = -32						; size = 4
_this$ = -28						; size = 4
$T246837 = -24						; size = 4
$T246825 = -20						; size = 4
_iPlayerLoop$228156 = -16				; size = 4
_ePlayer$ = -12						; size = 4
_iNewFriendship$ = -8					; size = 4
_iWarFriendship$ = -4					; size = 4
_eTeam$ = 8						; size = 4
?DoNowPeaceWithTeam@CvMinorCivAI@@QAEXW4TeamTypes@@@Z PROC ; CvMinorCivAI::DoNowPeaceWithTeam, COMDAT
; _this$ = ecx

; 9383 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 9384 : 	int iWarFriendship = /*-60*/ GC.getMINOR_FRIENDSHIP_AT_WAR();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2768
	mov	DWORD PTR _iWarFriendship$[ebp], eax

; 9385 : 	int iNewFriendship;
; 9386 : 
; 9387 : 	PlayerTypes ePlayer;
; 9388 : 	for(int iPlayerLoop = 0; iPlayerLoop < MAX_MAJOR_CIVS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$228156[ebp], 0
	jmp	SHORT $LN4@DoNowPeace
$LN3@DoNowPeace:
	mov	ecx, DWORD PTR _iPlayerLoop$228156[ebp]
	add	ecx, 1
	mov	DWORD PTR _iPlayerLoop$228156[ebp], ecx
$LN4@DoNowPeace:
	cmp	DWORD PTR _iPlayerLoop$228156[ebp], 22	; 00000016H
	jge	SHORT $LN2@DoNowPeace

; 9389 : 	{
; 9390 : 		ePlayer = (PlayerTypes) iPlayerLoop;

	mov	edx, DWORD PTR _iPlayerLoop$228156[ebp]
	mov	DWORD PTR _ePlayer$[ebp], edx

; 9391 : 
; 9392 : 		if(GET_PLAYER(ePlayer).getTeam() == eTeam)

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246825[ebp], eax
	mov	ecx, DWORD PTR $T246825[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	cmp	eax, DWORD PTR _eTeam$[ebp]
	jne	SHORT $LN1@DoNowPeace

; 9393 : 		{
; 9394 : 			// Friendship change
; 9395 : 			iNewFriendship = GetBaseFriendshipWithMajor(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBaseFriendshipWithMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBaseFriendshipWithMajor
	mov	DWORD PTR _iNewFriendship$[ebp], eax

; 9396 : 			DoFriendshipChangeEffects(ePlayer, iWarFriendship, iNewFriendship);

	push	0
	push	0
	mov	ecx, DWORD PTR _iNewFriendship$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iWarFriendship$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoFriendshipChangeEffects@CvMinorCivAI@@QAEXW4PlayerTypes@@HH_N1@Z ; CvMinorCivAI::DoFriendshipChangeEffects
$LN1@DoNowPeace:

; 9397 : 		}
; 9398 : 	}

	jmp	SHORT $LN3@DoNowPeace
$LN2@DoNowPeace:

; 9399 : 
; 9400 : 	GC.GetEngineUserInterface()->setDirty(GameData_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T246837[ebp]
	mov	DWORD PTR tv93[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv93[ebp], edx
	push	1
	push	11					; 0000000bH
	mov	eax, DWORD PTR tv93[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv93[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 9401 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?DoNowPeaceWithTeam@CvMinorCivAI@@QAEXW4TeamTypes@@@Z ENDP ; CvMinorCivAI::DoNowPeaceWithTeam
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsPeaceBlocked@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T246869 = -28						; size = 4
$T246865 = -24						; size = 4
$T246856 = -20						; size = 4
$T246852 = -13						; size = 1
$T246843 = -12						; size = 4
_iMajorLoop$228168 = -8					; size = 4
_eMajor$ = -4						; size = 4
_eTeam$ = 8						; size = 4
?IsPeaceBlocked@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z PROC	; CvMinorCivAI::IsPeaceBlocked, COMDAT
; _this$ = ecx

; 9405 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 9406 : 	// Permanent war?
; 9407 : 	if(IsPermanentWar(eTeam))

	mov	eax, DWORD PTR _eTeam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsPermanentWar@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z ; CvMinorCivAI::IsPermanentWar
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@IsPeaceBlo

; 9408 : 		return true;

	mov	al, 1
	jmp	$LN8@IsPeaceBlo
$LN7@IsPeaceBlo:

; 9409 : 
; 9410 : 	// Allies with someone at war with this guy?
; 9411 : 	PlayerTypes eMajor;
; 9412 : 	for(int iMajorLoop = 0; iMajorLoop < MAX_MAJOR_CIVS; iMajorLoop++)

	mov	DWORD PTR _iMajorLoop$228168[ebp], 0
	jmp	SHORT $LN6@IsPeaceBlo
$LN5@IsPeaceBlo:
	mov	edx, DWORD PTR _iMajorLoop$228168[ebp]
	add	edx, 1
	mov	DWORD PTR _iMajorLoop$228168[ebp], edx
$LN6@IsPeaceBlo:
	cmp	DWORD PTR _iMajorLoop$228168[ebp], 22	; 00000016H
	jge	$LN4@IsPeaceBlo

; 9413 : 	{
; 9414 : 		eMajor = (PlayerTypes) iMajorLoop;

	mov	eax, DWORD PTR _iMajorLoop$228168[ebp]
	mov	DWORD PTR _eMajor$[ebp], eax

; 9415 : 
; 9416 : 		// Major must be alive
; 9417 : 		if(!GET_PLAYER(eMajor).isAlive())

	mov	ecx, DWORD PTR _eMajor$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246843[ebp], ecx
	mov	edx, DWORD PTR $T246843[ebp]
	mov	al, BYTE PTR [edx+2256]
	mov	BYTE PTR $T246852[ebp], al
	movzx	ecx, BYTE PTR $T246852[ebp]
	test	ecx, ecx
	jne	SHORT $LN3@IsPeaceBlo

; 9418 : 			continue;

	jmp	SHORT $LN5@IsPeaceBlo
$LN3@IsPeaceBlo:

; 9419 : 
; 9420 : 		// Must be allies
; 9421 : 		if(!IsAllies(eMajor))

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAllies
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@IsPeaceBlo

; 9422 : 			continue;

	jmp	SHORT $LN5@IsPeaceBlo
$LN2@IsPeaceBlo:

; 9423 : 
; 9424 : 		// Ally must be at war with this team
; 9425 : 		if(!GET_TEAM(GET_PLAYER(eMajor).getTeam()).isAtWar(eTeam))

	mov	ecx, DWORD PTR _eMajor$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246856[ebp], ecx
	mov	edx, DWORD PTR $T246856[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T246865[ebp], eax
	mov	ecx, DWORD PTR $T246865[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T246869[ebp], ecx
	mov	edx, DWORD PTR _eTeam$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T246869[ebp]
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@IsPeaceBlo

; 9426 : 			continue;

	jmp	$LN5@IsPeaceBlo
$LN1@IsPeaceBlo:

; 9427 : 
; 9428 : 		return true;

	mov	al, 1
	jmp	SHORT $LN8@IsPeaceBlo

; 9429 : 	}

	jmp	$LN5@IsPeaceBlo
$LN4@IsPeaceBlo:

; 9430 : 
; 9431 : 	return false;

	xor	al, al
$LN8@IsPeaceBlo:

; 9432 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsPeaceBlocked@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z ENDP	; CvMinorCivAI::IsPeaceBlocked
_TEXT	ENDS
PUBLIC	?IsInfluenceTooLowForPeace@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsInfluenceTooLowForPeace
; Function compile flags: /Odtp
;	COMDAT ?IsInfluenceTooLowForPeace@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?IsInfluenceTooLowForPeace@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::IsInfluenceTooLowForPeace, COMDAT
; _this$ = ecx

; 9436 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 9437 : 	return GetBaseFriendshipWithMajor(ePlayer) < -50;

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBaseFriendshipWithMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBaseFriendshipWithMajor
	xor	ecx, ecx
	cmp	eax, -50				; ffffffceH
	setl	cl
	mov	al, cl

; 9438 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsInfluenceTooLowForPeace@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::IsInfluenceTooLowForPeace
_TEXT	ENDS
PUBLIC	??_C@_0CI@LAEBGJPM@TXT_KEY_NOTIFICATION_MINORS_NOW_@ ; `string'
PUBLIC	??_C@_0CF@PGHDNEPJ@TXT_KEY_NOTIFICATION_MINORS_NOW_@ ; `string'
PUBLIC	??_C@_0EC@EHAABKCB@MINOR?5CIV?5AI?3?5Third?5party?5minor?5@ ; `string'
PUBLIC	??_C@_0CN@ENDJIIJA@MINOR?5CIV?5AI?3?5Become?5Wary?5Of?5agg@ ; `string'
PUBLIC	?SetPermanentWar@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z ; CvMinorCivAI::SetPermanentWar
PUBLIC	?SetWaryOfTeam@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z ; CvMinorCivAI::SetWaryOfTeam
PUBLIC	__$ArrayPad$
PUBLIC	?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z ; CvMinorCivAI::DoTeamDeclaredWarOnMe
;	COMDAT ??_C@_0CI@LAEBGJPM@TXT_KEY_NOTIFICATION_MINORS_NOW_@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0CI@LAEBGJPM@TXT_KEY_NOTIFICATION_MINORS_NOW_@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINORS_NOW_WARY_TT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@PGHDNEPJ@TXT_KEY_NOTIFICATION_MINORS_NOW_@
CONST	SEGMENT
??_C@_0CF@PGHDNEPJ@TXT_KEY_NOTIFICATION_MINORS_NOW_@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINORS_NOW_WARY', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@EHAABKCB@MINOR?5CIV?5AI?3?5Third?5party?5minor?5@
CONST	SEGMENT
??_C@_0EC@EHAABKCB@MINOR?5CIV?5AI?3?5Third?5party?5minor?5@ DB 'MINOR CIV'
	DB	' AI: Third party minor to become Wary Of aggressor roll.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@ENDJIIJA@MINOR?5CIV?5AI?3?5Become?5Wary?5Of?5agg@
CONST	SEGMENT
??_C@_0CN@ENDJIIJA@MINOR?5CIV?5AI?3?5Become?5Wary?5Of?5agg@ DB 'MINOR CIV'
	DB	' AI: Become Wary Of aggressor roll.', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z$4
	DD	03H
	DD	FLAT:__unwindfunclet$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z$7
	DD	06H
	DD	FLAT:__unwindfunclet$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z$8
	DD	05H
	DD	FLAT:__unwindfunclet$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z$9
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z
_TEXT	SEGMENT
tv455 = -980						; size = 4
tv482 = -976						; size = 4
tv479 = -972						; size = 4
tv802 = -968						; size = 4
tv472 = -964						; size = 4
tv470 = -960						; size = 4
tv469 = -956						; size = 4
tv704 = -952						; size = 4
tv466 = -948						; size = 4
tv67 = -944						; size = 4
tv689 = -940						; size = 4
tv463 = -936						; size = 4
tv331 = -932						; size = 4
_this$ = -928						; size = 4
$T247189 = -912						; size = 4
$T247177 = -908						; size = 4
$T247172 = -904						; size = 4
$T247163 = -900						; size = 4
$T247139 = -888						; size = 4
$T247135 = -881						; size = 1
$T247126 = -880						; size = 4
$T247122 = -876						; size = 4
$T247113 = -872						; size = 4
$T247104 = -868						; size = 4
$T247093 = -860						; size = 4
$T247089 = -856						; size = 4
$T247085 = -852						; size = 4
$T247081 = -848						; size = 4
$T247072 = -844						; size = 4
$T247068 = -840						; size = 4
$T247064 = -836						; size = 4
$T247060 = -832						; size = 4
$T247056 = -828						; size = 4
$T247052 = -824						; size = 4
$T247048 = -820						; size = 4
$T247044 = -816						; size = 4
$T247040 = -812						; size = 4
$T247039 = -808						; size = 4
$T247030 = -801						; size = 1
$T247021 = -800						; size = 4
$T247009 = -796						; size = 4
$T247005 = -792						; size = 4
$T247004 = -788						; size = 4
$T246995 = -784						; size = 4
$T246994 = -780						; size = 4
$T246985 = -773						; size = 1
$T246966 = -768						; size = 4
$T246965 = -764						; size = 4
$T246956 = -760						; size = 4
$T246952 = -756						; size = 4
$T246941 = -748						; size = 4
$T246940 = -744						; size = 4
$T246931 = -740						; size = 4
$T246919 = -736						; size = 4
$T246915 = -729						; size = 1
$T246906 = -728						; size = 4
$T246883 = -724						; size = 4
$T246882 = -720						; size = 4
$T246881 = -716						; size = 28
$T246880 = -688						; size = 28
$T246879 = -660						; size = 4
$T246878 = -656						; size = 80
$T246877 = -576						; size = 80
$T246876 = -496						; size = 4
$T246875 = -492						; size = 4
_eEnemyMajorLoop$228264 = -488				; size = 4
_iEnemyMajorLoop$228260 = -484				; size = 4
_iMinimumFriendshipMod$228252 = -480			; size = 4
_strMessage$228259 = -476				; size = 28
_strSummary$228256 = -448				; size = 28
_strTemp$228253 = -420					; size = 80
_iMinorCivLoop$228214 = -340				; size = 4
_eProximity$228208 = -336				; size = 4
_pOtherMinorCiv$228212 = -332				; size = 4
_iAttackingMajorPlayer$228209 = -328			; size = 4
_eAttackingMajorPlayer$228210 = -324			; size = 4
_eOtherMinorCiv$228213 = -320				; size = 4
_bAttackerIsAlly$228211 = -313				; size = 1
_iChance$228207 = -312					; size = 4
_eEnemyMajorLoop$228191 = -308				; size = 4
_iEnemyMajorLoop$228187 = -304				; size = 4
_pEnemyTeam$ = -300					; size = 4
_iRand$ = -296						; size = 4
_veMinorsNowWary$ = -292				; size = 272
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_eEnemyTeam$ = 8					; size = 4
?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z PROC ; CvMinorCivAI::DoTeamDeclaredWarOnMe, COMDAT
; _this$ = ecx

; 9443 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 968				; 000003c8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 9444 : 	CvTeam* pEnemyTeam = &GET_TEAM(eEnemyTeam);

	mov	eax, DWORD PTR _eEnemyTeam$[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _pEnemyTeam$[ebp], eax

; 9445 : 	CivsList veMinorsNowWary;

	lea	ecx, DWORD PTR _veMinorsNowWary$[ebp]
	call	??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::FStaticVector<enum PlayerTypes,64,1,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 9446 : 	int iRand;
; 9447 : 
; 9448 : 	// Since eEnemyTeam was the aggressor, drop the base influence to the minimum
; 9449 : 	for(int iEnemyMajorLoop = 0; iEnemyMajorLoop < MAX_MAJOR_CIVS; iEnemyMajorLoop++)

	mov	DWORD PTR _iEnemyMajorLoop$228187[ebp], 0
	jmp	SHORT $LN53@DoTeamDecl
$LN52@DoTeamDecl:
	mov	ecx, DWORD PTR _iEnemyMajorLoop$228187[ebp]
	add	ecx, 1
	mov	DWORD PTR _iEnemyMajorLoop$228187[ebp], ecx
$LN53@DoTeamDecl:
	cmp	DWORD PTR _iEnemyMajorLoop$228187[ebp], 22 ; 00000016H
	jge	$LN51@DoTeamDecl

; 9450 : 	{
; 9451 : 		PlayerTypes eEnemyMajorLoop = (PlayerTypes) iEnemyMajorLoop;

	mov	edx, DWORD PTR _iEnemyMajorLoop$228187[ebp]
	mov	DWORD PTR _eEnemyMajorLoop$228191[ebp], edx

; 9452 : 		if(!GET_PLAYER(eEnemyMajorLoop).isAlive())

	mov	eax, DWORD PTR _eEnemyMajorLoop$228191[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246906[ebp], eax
	mov	ecx, DWORD PTR $T246906[ebp]
	mov	dl, BYTE PTR [ecx+2256]
	mov	BYTE PTR $T246915[ebp], dl
	movzx	eax, BYTE PTR $T246915[ebp]
	test	eax, eax
	jne	SHORT $LN50@DoTeamDecl

; 9453 : 			continue;

	jmp	SHORT $LN52@DoTeamDecl
$LN50@DoTeamDecl:

; 9454 : 		if(GET_PLAYER(eEnemyMajorLoop).getTeam() != eEnemyTeam)

	mov	ecx, DWORD PTR _eEnemyMajorLoop$228191[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246919[ebp], ecx
	mov	edx, DWORD PTR $T246919[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	cmp	eax, DWORD PTR _eEnemyTeam$[ebp]
	je	SHORT $LN49@DoTeamDecl

; 9455 : 			continue;		

	jmp	$LN52@DoTeamDecl
$LN49@DoTeamDecl:

; 9456 : 
; 9457 : 		//antonjs: consider: forcibly revoke PtP here instead, and have negative INF / broken PtP fallout
; 9458 : 		
; 9459 : 		SetFriendshipWithMajor(eEnemyMajorLoop, GC.getMINOR_FRIENDSHIP_AT_WAR());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2768
	mov	DWORD PTR $T246931[ebp], ecx
	push	0
	mov	edx, DWORD PTR $T246931[ebp]
	push	edx
	mov	eax, DWORD PTR _eEnemyMajorLoop$228191[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::SetFriendshipWithMajor

; 9460 : 	}

	jmp	$LN52@DoTeamDecl
$LN51@DoTeamDecl:

; 9461 : 
; 9462 : 	//antonjs: todo: xml, rename xml to indicate it is for WaryOf, not Permanent War
; 9463 : 	// Minor Civ Warmonger
; 9464 : 	if(pEnemyTeam->IsMinorCivWarmonger())

	mov	ecx, DWORD PTR _pEnemyTeam$[ebp]
	call	?IsMinorCivWarmonger@CvTeam@@QBE_NXZ	; CvTeam::IsMinorCivWarmonger
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN48@DoTeamDecl

; 9465 : 	{
; 9466 : 		if(!IsWaryOfTeam(eEnemyTeam))

	mov	edx, DWORD PTR _eEnemyTeam$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsWaryOfTeam@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z ; CvMinorCivAI::IsWaryOfTeam
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN47@DoTeamDecl

; 9467 : 		{
; 9468 : 			SetWaryOfTeam(eEnemyTeam, true);

	push	1
	mov	ecx, DWORD PTR _eEnemyTeam$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetWaryOfTeam@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z ; CvMinorCivAI::SetWaryOfTeam

; 9469 : 			veMinorsNowWary.push_back(GetPlayer()->GetID());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T246940[ebp], eax
	mov	edx, DWORD PTR $T246940[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T246941[ebp], eax
	mov	ecx, DWORD PTR $T246941[ebp]
	mov	DWORD PTR $T246875[ebp], ecx
	lea	edx, DWORD PTR $T246875[ebp]
	push	edx
	lea	ecx, DWORD PTR _veMinorsNowWary$[ebp]
	call	?push_back@?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAEIABW4PlayerTypes@@@Z ; FStaticVector<enum PlayerTypes,64,1,297,0>::push_back
$LN47@DoTeamDecl:

; 9470 : 		}
; 9471 : 		if(ENABLE_PERMANENT_WAR)

	xor	eax, eax
	je	SHORT $LN46@DoTeamDecl

; 9472 : 			SetPermanentWar(eEnemyTeam, true);

	push	1
	mov	ecx, DWORD PTR _eEnemyTeam$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPermanentWar@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z ; CvMinorCivAI::SetPermanentWar
$LN46@DoTeamDecl:

; 9473 : 	}

	jmp	$LN45@DoTeamDecl
$LN48@DoTeamDecl:

; 9474 : 	// Minor Civ Aggressor - chance of permanent war
; 9475 : 	else if(pEnemyTeam->IsMinorCivAggressor())

	mov	ecx, DWORD PTR _pEnemyTeam$[ebp]
	call	?IsMinorCivAggressor@CvTeam@@QBE_NXZ	; CvTeam::IsMinorCivAggressor
	movzx	edx, al
	test	edx, edx
	je	$LN45@DoTeamDecl

; 9476 : 	{
; 9477 : 		iRand = GC.getGame().getJonRandNum(100, "MINOR CIV AI: Become Wary Of aggressor roll.");

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T246952[ebp], eax
	push	OFFSET ??_C@_0CN@ENDJIIJA@MINOR?5CIV?5AI?3?5Become?5Wary?5Of?5agg@
	push	100					; 00000064H
	mov	ecx, DWORD PTR $T246952[ebp]
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	mov	DWORD PTR _iRand$[ebp], eax

; 9478 : 
; 9479 : 		if(iRand < /*50*/ GC.getPERMANENT_WAR_AGGRESSOR_CHANCE())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2780
	mov	DWORD PTR $T246956[ebp], ecx
	mov	edx, DWORD PTR _iRand$[ebp]
	cmp	edx, DWORD PTR $T246956[ebp]
	jge	SHORT $LN45@DoTeamDecl

; 9480 : 		{
; 9481 : 			if(!IsWaryOfTeam(eEnemyTeam))

	mov	eax, DWORD PTR _eEnemyTeam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsWaryOfTeam@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z ; CvMinorCivAI::IsWaryOfTeam
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN42@DoTeamDecl

; 9482 : 			{
; 9483 : 				SetWaryOfTeam(eEnemyTeam, true);

	push	1
	mov	edx, DWORD PTR _eEnemyTeam$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetWaryOfTeam@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z ; CvMinorCivAI::SetWaryOfTeam

; 9484 : 				veMinorsNowWary.push_back(GetPlayer()->GetID());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T246965[ebp], eax
	mov	eax, DWORD PTR $T246965[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T246966[ebp], ecx
	mov	edx, DWORD PTR $T246966[ebp]
	mov	DWORD PTR $T246876[ebp], edx
	lea	eax, DWORD PTR $T246876[ebp]
	push	eax
	lea	ecx, DWORD PTR _veMinorsNowWary$[ebp]
	call	?push_back@?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAEIABW4PlayerTypes@@@Z ; FStaticVector<enum PlayerTypes,64,1,297,0>::push_back
$LN42@DoTeamDecl:

; 9485 : 			}
; 9486 : 			if(ENABLE_PERMANENT_WAR)

	xor	ecx, ecx
	je	SHORT $LN45@DoTeamDecl

; 9487 : 				SetPermanentWar(eEnemyTeam, true);

	push	1
	mov	edx, DWORD PTR _eEnemyTeam$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPermanentWar@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z ; CvMinorCivAI::SetPermanentWar
$LN45@DoTeamDecl:

; 9488 : 		}
; 9489 : 	}
; 9490 : 
; 9491 : 	// See if other minors will declare war
; 9492 : 	if(pEnemyTeam->IsMinorCivAggressor())

	mov	ecx, DWORD PTR _pEnemyTeam$[ebp]
	call	?IsMinorCivAggressor@CvTeam@@QBE_NXZ	; CvTeam::IsMinorCivAggressor
	movzx	eax, al
	test	eax, eax
	je	$LN40@DoTeamDecl

; 9493 : 	{
; 9494 : 		int iChance;
; 9495 : 
; 9496 : 		PlayerProximityTypes eProximity;
; 9497 : 
; 9498 : 		int iAttackingMajorPlayer;
; 9499 : 		PlayerTypes eAttackingMajorPlayer;
; 9500 : 		bool bAttackerIsAlly;
; 9501 : 
; 9502 : 		CvPlayer* pOtherMinorCiv;
; 9503 : 		PlayerTypes eOtherMinorCiv;
; 9504 : 		for(int iMinorCivLoop = MAX_MAJOR_CIVS; iMinorCivLoop < MAX_CIV_PLAYERS; iMinorCivLoop++)

	mov	DWORD PTR _iMinorCivLoop$228214[ebp], 22 ; 00000016H
	jmp	SHORT $LN39@DoTeamDecl
$LN38@DoTeamDecl:
	mov	ecx, DWORD PTR _iMinorCivLoop$228214[ebp]
	add	ecx, 1
	mov	DWORD PTR _iMinorCivLoop$228214[ebp], ecx
$LN39@DoTeamDecl:
	cmp	DWORD PTR _iMinorCivLoop$228214[ebp], 63 ; 0000003fH
	jge	$LN40@DoTeamDecl

; 9505 : 		{
; 9506 : 			eOtherMinorCiv = (PlayerTypes) iMinorCivLoop;

	mov	edx, DWORD PTR _iMinorCivLoop$228214[ebp]
	mov	DWORD PTR _eOtherMinorCiv$228213[ebp], edx

; 9507 : 			pOtherMinorCiv = &GET_PLAYER((eOtherMinorCiv));

	mov	eax, DWORD PTR _eOtherMinorCiv$228213[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pOtherMinorCiv$228212[ebp], eax

; 9508 : 
; 9509 : 			iChance = 0;

	mov	DWORD PTR _iChance$228207[ebp], 0

; 9510 : 
; 9511 : 			// Must be alive
; 9512 : 			if(!pOtherMinorCiv->isAlive())

	mov	ecx, DWORD PTR _pOtherMinorCiv$228212[ebp]
	mov	dl, BYTE PTR [ecx+2256]
	mov	BYTE PTR $T246985[ebp], dl
	movzx	eax, BYTE PTR $T246985[ebp]
	test	eax, eax
	jne	SHORT $LN36@DoTeamDecl

; 9513 : 				continue;

	jmp	SHORT $LN38@DoTeamDecl
$LN36@DoTeamDecl:

; 9514 : 
; 9515 : 			// Must be a different minor
; 9516 : 			if(eOtherMinorCiv == GetPlayer()->GetID())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T246994[ebp], eax
	mov	ecx, DWORD PTR $T246994[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T246995[ebp], edx
	mov	eax, DWORD PTR _eOtherMinorCiv$228213[ebp]
	cmp	eax, DWORD PTR $T246995[ebp]
	jne	SHORT $LN35@DoTeamDecl

; 9517 : 				continue;

	jmp	$LN38@DoTeamDecl
$LN35@DoTeamDecl:

; 9518 : 
; 9519 : 			// Ignore minors that want THIS minor dead
; 9520 : 			if(pOtherMinorCiv->GetMinorCivAI()->IsWantsMinorDead(GetPlayer()->GetID()))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T247004[ebp], eax
	mov	ecx, DWORD PTR $T247004[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T247005[ebp], edx
	mov	eax, DWORD PTR $T247005[ebp]
	push	eax
	mov	ecx, DWORD PTR _pOtherMinorCiv$228212[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsWantsMinorDead@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsWantsMinorDead
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN34@DoTeamDecl

; 9521 : 				continue;

	jmp	$LN38@DoTeamDecl
$LN34@DoTeamDecl:

; 9522 : 
; 9523 : 			bAttackerIsAlly = false;

	mov	BYTE PTR _bAttackerIsAlly$228211[ebp], 0

; 9524 : 
; 9525 : 			// Ignore minors that are allied to the attacker
; 9526 : 			for(iAttackingMajorPlayer = 0; iAttackingMajorPlayer < MAX_MAJOR_CIVS; iAttackingMajorPlayer++)

	mov	DWORD PTR _iAttackingMajorPlayer$228209[ebp], 0
	jmp	SHORT $LN33@DoTeamDecl
$LN32@DoTeamDecl:
	mov	edx, DWORD PTR _iAttackingMajorPlayer$228209[ebp]
	add	edx, 1
	mov	DWORD PTR _iAttackingMajorPlayer$228209[ebp], edx
$LN33@DoTeamDecl:
	cmp	DWORD PTR _iAttackingMajorPlayer$228209[ebp], 22 ; 00000016H
	jge	$LN31@DoTeamDecl

; 9527 : 			{
; 9528 : 				eAttackingMajorPlayer = (PlayerTypes) iAttackingMajorPlayer;

	mov	eax, DWORD PTR _iAttackingMajorPlayer$228209[ebp]
	mov	DWORD PTR _eAttackingMajorPlayer$228210[ebp], eax

; 9529 : 
; 9530 : 				// Not on this team
; 9531 : 				if(GET_PLAYER(eAttackingMajorPlayer).getTeam() != eEnemyTeam)

	mov	ecx, DWORD PTR _eAttackingMajorPlayer$228210[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247009[ebp], ecx
	mov	edx, DWORD PTR $T247009[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	cmp	eax, DWORD PTR _eEnemyTeam$[ebp]
	je	SHORT $LN30@DoTeamDecl

; 9532 : 					continue;

	jmp	SHORT $LN32@DoTeamDecl
$LN30@DoTeamDecl:

; 9533 : 
; 9534 : 				// Not alive
; 9535 : 				if(!GET_PLAYER(eAttackingMajorPlayer).isAlive())

	mov	ecx, DWORD PTR _eAttackingMajorPlayer$228210[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247021[ebp], ecx
	mov	edx, DWORD PTR $T247021[ebp]
	mov	al, BYTE PTR [edx+2256]
	mov	BYTE PTR $T247030[ebp], al
	movzx	ecx, BYTE PTR $T247030[ebp]
	test	ecx, ecx
	jne	SHORT $LN29@DoTeamDecl

; 9536 : 					continue;

	jmp	$LN32@DoTeamDecl
$LN29@DoTeamDecl:

; 9537 : 
; 9538 : 				if(pOtherMinorCiv->GetMinorCivAI()->GetAlly() == eAttackingMajorPlayer)

	mov	ecx, DWORD PTR _pOtherMinorCiv$228212[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetAlly
	cmp	eax, DWORD PTR _eAttackingMajorPlayer$228210[ebp]
	jne	SHORT $LN28@DoTeamDecl

; 9539 : 				{
; 9540 : 					bAttackerIsAlly = true;

	mov	BYTE PTR _bAttackerIsAlly$228211[ebp], 1

; 9541 : 					break;

	jmp	SHORT $LN31@DoTeamDecl
$LN28@DoTeamDecl:

; 9542 : 				}
; 9543 : 			}

	jmp	$LN32@DoTeamDecl
$LN31@DoTeamDecl:

; 9544 : 
; 9545 : 			if(bAttackerIsAlly)

	movzx	edx, BYTE PTR _bAttackerIsAlly$228211[ebp]
	test	edx, edx
	je	SHORT $LN27@DoTeamDecl

; 9546 : 				continue;

	jmp	$LN38@DoTeamDecl
$LN27@DoTeamDecl:

; 9547 : 
; 9548 : 			// Closer to the minor the more likely war is
; 9549 : 			eProximity = pOtherMinorCiv->GetProximityToPlayer(GetPlayer()->GetID());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T247039[ebp], eax
	mov	eax, DWORD PTR $T247039[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T247040[ebp], ecx
	mov	edx, DWORD PTR $T247040[ebp]
	push	edx
	mov	ecx, DWORD PTR _pOtherMinorCiv$228212[ebp]
	call	?GetProximityToPlayer@CvPlayer@@QBE?AW4PlayerProximityTypes@@W4PlayerTypes@@@Z ; CvPlayer::GetProximityToPlayer
	mov	DWORD PTR _eProximity$228208[ebp], eax

; 9550 : 
; 9551 : 			// Warmonger
; 9552 : 			if(pEnemyTeam->IsMinorCivWarmonger())

	mov	ecx, DWORD PTR _pEnemyTeam$[ebp]
	call	?IsMinorCivWarmonger@CvTeam@@QBE_NXZ	; CvTeam::IsMinorCivWarmonger
	movzx	eax, al
	test	eax, eax
	je	$LN26@DoTeamDecl

; 9553 : 			{
; 9554 : 				if(eProximity == PLAYER_PROXIMITY_DISTANT)

	cmp	DWORD PTR _eProximity$228208[ebp], 0
	jne	SHORT $LN25@DoTeamDecl

; 9555 : 					iChance += /*25*/ GC.getPERMANENT_WAR_OTHER_WARMONGER_CHANCE_DISTANT();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2784
	mov	DWORD PTR $T247044[ebp], ecx
	mov	edx, DWORD PTR _iChance$228207[ebp]
	add	edx, DWORD PTR $T247044[ebp]
	mov	DWORD PTR _iChance$228207[ebp], edx
	jmp	SHORT $LN24@DoTeamDecl
$LN25@DoTeamDecl:

; 9556 : 				else if(eProximity == PLAYER_PROXIMITY_FAR)

	cmp	DWORD PTR _eProximity$228208[ebp], 1
	jne	SHORT $LN23@DoTeamDecl

; 9557 : 					iChance += /*50*/ GC.getPERMANENT_WAR_OTHER_WARMONGER_CHANCE_FAR();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2788
	mov	DWORD PTR $T247048[ebp], eax
	mov	ecx, DWORD PTR _iChance$228207[ebp]
	add	ecx, DWORD PTR $T247048[ebp]
	mov	DWORD PTR _iChance$228207[ebp], ecx
	jmp	SHORT $LN24@DoTeamDecl
$LN23@DoTeamDecl:

; 9558 : 				else if(eProximity == PLAYER_PROXIMITY_CLOSE)

	cmp	DWORD PTR _eProximity$228208[ebp], 2
	jne	SHORT $LN21@DoTeamDecl

; 9559 : 					iChance += /*75*/ GC.getPERMANENT_WAR_OTHER_WARMONGER_CHANCE_CLOSE();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2792
	mov	DWORD PTR $T247052[ebp], edx
	mov	eax, DWORD PTR _iChance$228207[ebp]
	add	eax, DWORD PTR $T247052[ebp]
	mov	DWORD PTR _iChance$228207[ebp], eax
	jmp	SHORT $LN24@DoTeamDecl
$LN21@DoTeamDecl:

; 9560 : 				else if(eProximity == PLAYER_PROXIMITY_NEIGHBORS)

	cmp	DWORD PTR _eProximity$228208[ebp], 3
	jne	SHORT $LN24@DoTeamDecl

; 9561 : 					iChance += /*100*/ GC.getPERMANENT_WAR_OTHER_WARMONGER_CHANCE_NEIGHBORS();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2796
	mov	DWORD PTR $T247056[ebp], ecx
	mov	edx, DWORD PTR _iChance$228207[ebp]
	add	edx, DWORD PTR $T247056[ebp]
	mov	DWORD PTR _iChance$228207[ebp], edx
$LN24@DoTeamDecl:

; 9562 : 			}
; 9563 : 			// Aggressor
; 9564 : 			else

	jmp	$LN162@DoTeamDecl
$LN26@DoTeamDecl:

; 9565 : 			{
; 9566 : 				if(eProximity == PLAYER_PROXIMITY_DISTANT)

	cmp	DWORD PTR _eProximity$228208[ebp], 0
	jne	SHORT $LN17@DoTeamDecl

; 9567 : 					iChance += /*0*/ GC.getPERMANENT_WAR_OTHER_CHANCE_DISTANT();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2800
	mov	DWORD PTR $T247060[ebp], eax
	mov	ecx, DWORD PTR _iChance$228207[ebp]
	add	ecx, DWORD PTR $T247060[ebp]
	mov	DWORD PTR _iChance$228207[ebp], ecx
	jmp	SHORT $LN162@DoTeamDecl
$LN17@DoTeamDecl:

; 9568 : 				else if(eProximity == PLAYER_PROXIMITY_FAR)

	cmp	DWORD PTR _eProximity$228208[ebp], 1
	jne	SHORT $LN15@DoTeamDecl

; 9569 : 					iChance += /*0*/ GC.getPERMANENT_WAR_OTHER_CHANCE_FAR();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2804
	mov	DWORD PTR $T247064[ebp], edx
	mov	eax, DWORD PTR _iChance$228207[ebp]
	add	eax, DWORD PTR $T247064[ebp]
	mov	DWORD PTR _iChance$228207[ebp], eax
	jmp	SHORT $LN162@DoTeamDecl
$LN15@DoTeamDecl:

; 9570 : 				else if(eProximity == PLAYER_PROXIMITY_CLOSE)

	cmp	DWORD PTR _eProximity$228208[ebp], 2
	jne	SHORT $LN13@DoTeamDecl

; 9571 : 					iChance += /*20*/ GC.getPERMANENT_WAR_OTHER_CHANCE_CLOSE();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2808
	mov	DWORD PTR $T247068[ebp], ecx
	mov	edx, DWORD PTR _iChance$228207[ebp]
	add	edx, DWORD PTR $T247068[ebp]
	mov	DWORD PTR _iChance$228207[ebp], edx
	jmp	SHORT $LN162@DoTeamDecl
$LN13@DoTeamDecl:

; 9572 : 				else if(eProximity == PLAYER_PROXIMITY_NEIGHBORS)

	cmp	DWORD PTR _eProximity$228208[ebp], 3
	jne	SHORT $LN162@DoTeamDecl

; 9573 : 					iChance += /*50*/ GC.getPERMANENT_WAR_OTHER_CHANCE_NEIGHBORS();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2812
	mov	DWORD PTR $T247072[ebp], eax
	mov	ecx, DWORD PTR _iChance$228207[ebp]
	add	ecx, DWORD PTR $T247072[ebp]
	mov	DWORD PTR _iChance$228207[ebp], ecx

; 9574 : 			}
; 9575 : 
; 9576 : 			// If the minor is already at war, then there's a chance of it turning into permanent war
; 9577 : 			if(GET_TEAM(pOtherMinorCiv->getTeam()).isAtWar(eEnemyTeam))

$LN162@DoTeamDecl:
	mov	edx, DWORD PTR _pOtherMinorCiv$228212[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T247081[ebp], eax
	mov	ecx, DWORD PTR $T247081[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T247085[ebp], ecx
	mov	edx, DWORD PTR _eEnemyTeam$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T247085[ebp]
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@DoTeamDecl

; 9578 : 				iChance += /*50*/ GC.getPERMANENT_WAR_OTHER_AT_WAR();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2816
	mov	DWORD PTR $T247089[ebp], ecx
	mov	edx, DWORD PTR _iChance$228207[ebp]
	add	edx, DWORD PTR $T247089[ebp]
	mov	DWORD PTR _iChance$228207[ebp], edx
$LN10@DoTeamDecl:

; 9579 : 
; 9580 : 			iRand = GC.getGame().getJonRandNum(100, "MINOR CIV AI: Third party minor to become Wary Of aggressor roll.");

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T247093[ebp], eax
	push	OFFSET ??_C@_0EC@EHAABKCB@MINOR?5CIV?5AI?3?5Third?5party?5minor?5@
	push	100					; 00000064H
	mov	ecx, DWORD PTR $T247093[ebp]
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	mov	DWORD PTR _iRand$[ebp], eax

; 9581 : 			if(iRand < iChance)

	mov	ecx, DWORD PTR _iRand$[ebp]
	cmp	ecx, DWORD PTR _iChance$228207[ebp]
	jge	SHORT $LN9@DoTeamDecl

; 9582 : 			{
; 9583 : 				if(!pOtherMinorCiv->GetMinorCivAI()->IsWaryOfTeam(eEnemyTeam))

	mov	edx, DWORD PTR _eEnemyTeam$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pOtherMinorCiv$228212[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsWaryOfTeam@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z ; CvMinorCivAI::IsWaryOfTeam
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN8@DoTeamDecl

; 9584 : 				{
; 9585 : 					pOtherMinorCiv->GetMinorCivAI()->SetWaryOfTeam(eEnemyTeam, true);

	push	1
	mov	ecx, DWORD PTR _eEnemyTeam$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pOtherMinorCiv$228212[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?SetWaryOfTeam@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z ; CvMinorCivAI::SetWaryOfTeam

; 9586 : 					veMinorsNowWary.push_back(eOtherMinorCiv);

	lea	edx, DWORD PTR _eOtherMinorCiv$228213[ebp]
	push	edx
	lea	ecx, DWORD PTR _veMinorsNowWary$[ebp]
	call	?push_back@?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAEIABW4PlayerTypes@@@Z ; FStaticVector<enum PlayerTypes,64,1,297,0>::push_back
$LN8@DoTeamDecl:

; 9587 : 				}
; 9588 : 				if(ENABLE_PERMANENT_WAR)

	xor	eax, eax
	je	SHORT $LN9@DoTeamDecl

; 9589 : 					pOtherMinorCiv->GetMinorCivAI()->SetPermanentWar(eEnemyTeam, true);

	push	1
	mov	ecx, DWORD PTR _eEnemyTeam$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pOtherMinorCiv$228212[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?SetPermanentWar@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z ; CvMinorCivAI::SetPermanentWar
$LN9@DoTeamDecl:

; 9590 : 			}
; 9591 : 		}

	jmp	$LN38@DoTeamDecl
$LN40@DoTeamDecl:

; 9592 : 	}
; 9593 : 
; 9594 : 	if(veMinorsNowWary.size() > 0)

	mov	edx, DWORD PTR _veMinorsNowWary$[ebp+4]
	mov	DWORD PTR $T247104[ebp], edx
	cmp	DWORD PTR $T247104[ebp], 0
	jbe	$LN6@DoTeamDecl

; 9595 : 	{
; 9596 : 		int iMinimumFriendshipMod = 20; //antonjs: todo: xml

	mov	DWORD PTR _iMinimumFriendshipMod$228252[ebp], 20 ; 00000014H

; 9597 : 		Localization::String strTemp;

	lea	ecx, DWORD PTR _strTemp$228253[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 9598 : 
; 9599 : 		strTemp = Localization::Lookup("TXT_KEY_NOTIFICATION_MINORS_NOW_WARY");

	push	OFFSET ??_C@_0CF@PGHDNEPJ@TXT_KEY_NOTIFICATION_MINORS_NOW_@
	lea	eax, DWORD PTR $T246877[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv331[ebp], eax
	mov	ecx, DWORD PTR tv331[ebp]
	mov	DWORD PTR tv463[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv463[ebp]
	push	edx
	lea	ecx, DWORD PTR _strTemp$228253[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T246877[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9600 : 		CvString strSummary = strTemp.toUTF8();

	lea	ecx, DWORD PTR _strTemp$228253[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T247113[ebp], eax
	cmp	DWORD PTR $T247113[ebp], 0
	je	SHORT $LN181@DoTeamDecl
	mov	eax, DWORD PTR $T247113[ebp]
	mov	DWORD PTR tv689[ebp], eax
	jmp	SHORT $LN182@DoTeamDecl
$LN181@DoTeamDecl:
	mov	DWORD PTR tv689[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN182@DoTeamDecl:
	mov	ecx, DWORD PTR tv689[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$228256[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 9601 : 		strTemp = Localization::Lookup("TXT_KEY_NOTIFICATION_MINORS_NOW_WARY_TT");

	push	OFFSET ??_C@_0CI@LAEBGJPM@TXT_KEY_NOTIFICATION_MINORS_NOW_@
	lea	edx, DWORD PTR $T246878[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv67[ebp], eax
	mov	eax, DWORD PTR tv67[ebp]
	mov	DWORD PTR tv466[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv466[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strTemp$228253[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T246878[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9602 : 		strTemp << iMinimumFriendshipMod;

	lea	edx, DWORD PTR _iMinimumFriendshipMod$228252[ebp]
	push	edx
	lea	eax, DWORD PTR _strTemp$228253[ebp]
	push	eax
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 9603 : 		CvString strMessage = strTemp.toUTF8();

	lea	ecx, DWORD PTR _strTemp$228253[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T247122[ebp], eax
	cmp	DWORD PTR $T247122[ebp], 0
	je	SHORT $LN186@DoTeamDecl
	mov	ecx, DWORD PTR $T247122[ebp]
	mov	DWORD PTR tv704[ebp], ecx
	jmp	SHORT $LN187@DoTeamDecl
$LN186@DoTeamDecl:
	mov	DWORD PTR tv704[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN187@DoTeamDecl:
	mov	edx, DWORD PTR tv704[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$228259[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5

; 9604 : 
; 9605 : 		for(int iEnemyMajorLoop = 0; iEnemyMajorLoop < MAX_MAJOR_CIVS; iEnemyMajorLoop++)

	mov	DWORD PTR _iEnemyMajorLoop$228260[ebp], 0
	jmp	SHORT $LN5@DoTeamDecl
$LN4@DoTeamDecl:
	mov	eax, DWORD PTR _iEnemyMajorLoop$228260[ebp]
	add	eax, 1
	mov	DWORD PTR _iEnemyMajorLoop$228260[ebp], eax
$LN5@DoTeamDecl:
	cmp	DWORD PTR _iEnemyMajorLoop$228260[ebp], 22 ; 00000016H
	jge	$LN3@DoTeamDecl

; 9606 : 		{
; 9607 : 			PlayerTypes eEnemyMajorLoop = (PlayerTypes) iEnemyMajorLoop;

	mov	ecx, DWORD PTR _iEnemyMajorLoop$228260[ebp]
	mov	DWORD PTR _eEnemyMajorLoop$228264[ebp], ecx

; 9608 : 			if(!GET_PLAYER(eEnemyMajorLoop).isAlive())

	mov	edx, DWORD PTR _eEnemyMajorLoop$228264[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247126[ebp], edx
	mov	eax, DWORD PTR $T247126[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T247135[ebp], cl
	movzx	edx, BYTE PTR $T247135[ebp]
	test	edx, edx
	jne	SHORT $LN2@DoTeamDecl

; 9609 : 				continue;

	jmp	SHORT $LN4@DoTeamDecl
$LN2@DoTeamDecl:

; 9610 : 			if(GET_PLAYER(eEnemyMajorLoop).getTeam() != eEnemyTeam)

	mov	eax, DWORD PTR _eEnemyMajorLoop$228264[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247139[ebp], eax
	mov	ecx, DWORD PTR $T247139[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	cmp	eax, DWORD PTR _eEnemyTeam$[ebp]
	je	SHORT $LN1@DoTeamDecl

; 9611 : 				continue;

	jmp	$LN4@DoTeamDecl
$LN1@DoTeamDecl:

; 9612 : 
; 9613 : 			strMessage = strMessage + GetNamesListAsString(veMinorsNowWary);

	sub	esp, 272				; 00000110H
	mov	ecx, esp
	mov	DWORD PTR $T246879[ebp], esp
	lea	eax, DWORD PTR _veMinorsNowWary$[ebp]
	push	eax
	call	??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@ABV0@@Z ; FStaticVector<enum PlayerTypes,64,1,297,0>::FStaticVector<enum PlayerTypes,64,1,297,0>
	mov	DWORD PTR tv469[ebp], eax
	lea	ecx, DWORD PTR $T246880[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z ; CvMinorCivAI::GetNamesListAsString
	mov	DWORD PTR tv470[ebp], eax
	mov	edx, DWORD PTR tv470[ebp]
	mov	DWORD PTR tv472[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR tv472[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$228259[ebp]
	push	ecx
	lea	edx, DWORD PTR $T246881[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv802[ebp], eax
	mov	eax, DWORD PTR tv802[ebp]
	mov	DWORD PTR $T247163[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR $T247163[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strMessage$228259[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T246881[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T246880[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 9614 : 			AddNotification(strMessage, strSummary, eEnemyMajorLoop);

	push	-1
	push	-1
	mov	ecx, DWORD PTR _eEnemyMajorLoop$228264[ebp]
	push	ecx
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T246882[ebp], esp
	mov	DWORD PTR $T247172[ebp], edx
	lea	eax, DWORD PTR _strSummary$228256[ebp]
	push	eax
	mov	ecx, DWORD PTR $T247172[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T247172[ebp]
	mov	DWORD PTR tv479[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T246883[ebp], esp
	mov	DWORD PTR $T247177[ebp], edx
	lea	eax, DWORD PTR _strMessage$228259[ebp]
	push	eax
	mov	ecx, DWORD PTR $T247177[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T247177[ebp]
	mov	DWORD PTR tv482[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNotification@CvMinorCivAI@@QAEXVCvString@@0W4PlayerTypes@@HH@Z ; CvMinorCivAI::AddNotification

; 9615 : 		}

	jmp	$LN4@DoTeamDecl
$LN3@DoTeamDecl:

; 9616 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _strMessage$228259[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _strSummary$228256[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strTemp$228253[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN6@DoTeamDecl:

; 9617 : 
; 9618 : 	GC.GetEngineUserInterface()->setDirty(GameData_DIRTY_BIT, true);

	mov	edx, DWORD PTR $T247189[ebp]
	mov	DWORD PTR tv455[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv455[ebp], eax
	push	1
	push	11					; 0000000bH
	mov	ecx, DWORD PTR tv455[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv455[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 9619 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _veMinorsNowWary$[ebp]
	call	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z$0:
	lea	ecx, DWORD PTR _veMinorsNowWary$[ebp]
	jmp	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
__unwindfunclet$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z$1:
	lea	ecx, DWORD PTR _strTemp$228253[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z$2:
	lea	ecx, DWORD PTR $T246877[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z$3:
	lea	ecx, DWORD PTR _strSummary$228256[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z$4:
	lea	ecx, DWORD PTR $T246878[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z$5:
	lea	ecx, DWORD PTR _strMessage$228259[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z$7:
	lea	ecx, DWORD PTR $T246880[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z$8:
	lea	ecx, DWORD PTR $T246881[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z$9:
	mov	ecx, DWORD PTR $T246882[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-972]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoTeamDeclaredWarOnMe@CvMinorCivAI@@QAEXW4TeamTypes@@@Z ENDP ; CvMinorCivAI::DoTeamDeclaredWarOnMe
; Function compile flags: /Odtp
;	COMDAT ?IsPermanentWar@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eTeam$ = 8						; size = 4
?IsPermanentWar@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z PROC	; CvMinorCivAI::IsPermanentWar, COMDAT
; _this$ = ecx

; 9623 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 9624 : 	CvAssertMsg(eTeam >= 0, "eTeam is expected to be non-negative (invalid Index)");
; 9625 : 	CvAssertMsg(eTeam < MAX_TEAMS, "eTeam is expected to be within maximum bounds (invalid Index)");
; 9626 : 	if(eTeam < 0 || eTeam >= MAX_TEAMS) return false;

	cmp	DWORD PTR _eTeam$[ebp], 0
	jl	SHORT $LN1@IsPermanen
	cmp	DWORD PTR _eTeam$[ebp], 64		; 00000040H
	jl	SHORT $LN2@IsPermanen
$LN1@IsPermanen:
	xor	al, al
	jmp	SHORT $LN3@IsPermanen
$LN2@IsPermanen:

; 9627 : 
; 9628 : 	return m_abPermanentWar[eTeam];

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _eTeam$[ebp]
	mov	al, BYTE PTR [eax+3168]
$LN3@IsPermanen:

; 9629 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsPermanentWar@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z ENDP	; CvMinorCivAI::IsPermanentWar
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?SetPermanentWar@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eTeam$ = 8						; size = 4
_bValue$ = 12						; size = 1
?SetPermanentWar@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z PROC ; CvMinorCivAI::SetPermanentWar, COMDAT
; _this$ = ecx

; 9633 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 9634 : 	CvAssertMsg(eTeam >= 0, "eTeam is expected to be non-negative (invalid Index)");
; 9635 : 	CvAssertMsg(eTeam < MAX_TEAMS, "eTeam is expected to be within maximum bounds (invalid Index)");
; 9636 : 	if(eTeam < 0 || eTeam >= MAX_TEAMS) return;

	cmp	DWORD PTR _eTeam$[ebp], 0
	jl	SHORT $LN2@SetPermane
	cmp	DWORD PTR _eTeam$[ebp], 64		; 00000040H
	jl	SHORT $LN3@SetPermane
$LN2@SetPermane:
	jmp	SHORT $LN4@SetPermane
$LN3@SetPermane:

; 9637 : 
; 9638 : 	if(ENABLE_PERMANENT_WAR)

	xor	eax, eax
	je	SHORT $LN4@SetPermane

; 9639 : 		m_abPermanentWar[eTeam] = bValue;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _eTeam$[ebp]
	mov	dl, BYTE PTR _bValue$[ebp]
	mov	BYTE PTR [ecx+3168], dl
$LN4@SetPermane:

; 9640 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetPermanentWar@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z ENDP ; CvMinorCivAI::SetPermanentWar
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsWaryOfTeam@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eTeam$ = 8						; size = 4
?IsWaryOfTeam@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z PROC	; CvMinorCivAI::IsWaryOfTeam, COMDAT
; _this$ = ecx

; 9644 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 9645 : 	CvAssertMsg(eTeam >= 0, "eTeam is expected to be non-negative (invalid Index)");
; 9646 : 	CvAssertMsg(eTeam < MAX_TEAMS, "eTeam is expected to be within maximum bounds (invalid Index)");
; 9647 : 	if(eTeam < 0 || eTeam >= MAX_TEAMS) return false;

	cmp	DWORD PTR _eTeam$[ebp], 0
	jl	SHORT $LN1@IsWaryOfTe
	cmp	DWORD PTR _eTeam$[ebp], 64		; 00000040H
	jl	SHORT $LN2@IsWaryOfTe
$LN1@IsWaryOfTe:
	xor	al, al
	jmp	SHORT $LN3@IsWaryOfTe
$LN2@IsWaryOfTe:

; 9648 : 
; 9649 : 	return m_abWaryOfTeam[eTeam];

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _eTeam$[ebp]
	mov	al, BYTE PTR [eax+3248]
$LN3@IsWaryOfTe:

; 9650 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsWaryOfTeam@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z ENDP	; CvMinorCivAI::IsWaryOfTeam
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?SetWaryOfTeam@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eTeam$ = 8						; size = 4
_bValue$ = 12						; size = 1
?SetWaryOfTeam@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z PROC	; CvMinorCivAI::SetWaryOfTeam, COMDAT
; _this$ = ecx

; 9654 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 9655 : 	CvAssertMsg(eTeam >= 0, "eTeam is expected to be non-negative (invalid Index)");
; 9656 : 	CvAssertMsg(eTeam < MAX_TEAMS, "eTeam is expected to be within maximum bounds (invalid Index)");
; 9657 : 	if(eTeam < 0 || eTeam >= MAX_TEAMS) return;

	cmp	DWORD PTR _eTeam$[ebp], 0
	jl	SHORT $LN2@SetWaryOfT
	cmp	DWORD PTR _eTeam$[ebp], 64		; 00000040H
	jl	SHORT $LN3@SetWaryOfT
$LN2@SetWaryOfT:
	jmp	SHORT $LN4@SetWaryOfT
$LN3@SetWaryOfT:

; 9658 : 
; 9659 : 	if(IsWaryOfTeam(eTeam) == bValue)

	mov	eax, DWORD PTR _eTeam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsWaryOfTeam@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z ; CvMinorCivAI::IsWaryOfTeam
	movzx	ecx, al
	movzx	edx, BYTE PTR _bValue$[ebp]
	cmp	ecx, edx
	jne	SHORT $LN1@SetWaryOfT

; 9660 : 		return;

	jmp	SHORT $LN4@SetWaryOfT
$LN1@SetWaryOfT:

; 9661 : 
; 9662 : 	m_abWaryOfTeam[eTeam] = bValue;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _eTeam$[ebp]
	mov	cl, BYTE PTR _bValue$[ebp]
	mov	BYTE PTR [eax+3248], cl
$LN4@SetWaryOfT:

; 9663 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetWaryOfTeam@CvMinorCivAI@@QAEXW4TeamTypes@@_N@Z ENDP	; CvMinorCivAI::SetWaryOfTeam
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsHasMetPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T247259 = -20						; size = 4
$T247255 = -16						; size = 4
$T247254 = -12						; size = 4
$T247245 = -8						; size = 4
$T247236 = -4						; size = 4
_ePlayer$ = 8						; size = 4
?IsHasMetPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::IsHasMetPlayer, COMDAT
; _this$ = ecx

; 9673 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 9674 : 	return GET_TEAM(GetPlayer()->getTeam()).isHasMet(GET_PLAYER(ePlayer).getTeam());

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247236[ebp], eax
	mov	ecx, DWORD PTR $T247236[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T247245[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T247254[ebp], eax
	mov	eax, DWORD PTR $T247254[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T247255[ebp], eax
	mov	edx, DWORD PTR $T247255[ebp]
	imul	edx, 2984				; 00000ba8H
	add	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T247259[ebp], edx
	mov	eax, DWORD PTR $T247245[ebp]
	push	eax
	mov	ecx, DWORD PTR $T247259[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet

; 9675 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsHasMetPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::IsHasMetPlayer
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsAtWarWithPlayersTeam@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T247288 = -20						; size = 4
$T247284 = -16						; size = 4
$T247275 = -12						; size = 4
$T247271 = -8						; size = 4
$T247270 = -4						; size = 4
_ePlayer$ = 8						; size = 4
?IsAtWarWithPlayersTeam@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::IsAtWarWithPlayersTeam, COMDAT
; _this$ = ecx

; 9679 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 9680 : 	return GET_TEAM(GET_PLAYER(ePlayer).getTeam()).isAtWar(GetPlayer()->getTeam());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR $T247270[ebp], eax
	mov	eax, DWORD PTR $T247270[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T247271[ebp], eax
	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247275[ebp], edx
	mov	eax, DWORD PTR $T247275[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T247284[ebp], eax
	mov	edx, DWORD PTR $T247284[ebp]
	imul	edx, 2984				; 00000ba8H
	add	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T247288[ebp], edx
	mov	eax, DWORD PTR $T247271[ebp]
	push	eax
	mov	ecx, DWORD PTR $T247288[ebp]
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar

; 9681 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsAtWarWithPlayersTeam@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::IsAtWarWithPlayersTeam
_TEXT	ENDS
PUBLIC	?GetNumResourcesMajorLacks@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetNumResourcesMajorLacks
; Function compile flags: /Odtp
;	COMDAT ?GetNumResourcesMajorLacks@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T247294 = -20						; size = 4
_pkResourceInfo$228320 = -16				; size = 4
_iResourceLoop$228315 = -12				; size = 4
_iNumTheyLack$ = -8					; size = 4
_eResource$ = -4					; size = 4
_eMajor$ = 8						; size = 4
?GetNumResourcesMajorLacks@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetNumResourcesMajorLacks, COMDAT
; _this$ = ecx

; 9685 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 9686 : 	CvAssertMsg(eMajor >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 9687 : 	CvAssertMsg(eMajor < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 9688 : 
; 9689 : 	int iNumTheyLack = 0;

	mov	DWORD PTR _iNumTheyLack$[ebp], 0

; 9690 : 
; 9691 : 	// Loop through all resources to see what this minor has
; 9692 : 	ResourceTypes eResource;
; 9693 : #ifdef AUI_WARNING_FIXES
; 9694 : 	for (uint iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)
; 9695 : #else
; 9696 : 	for(int iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)

	mov	DWORD PTR _iResourceLoop$228315[ebp], 0
	jmp	SHORT $LN7@GetNumReso
$LN6@GetNumReso:
	mov	eax, DWORD PTR _iResourceLoop$228315[ebp]
	add	eax, 1
	mov	DWORD PTR _iResourceLoop$228315[ebp], eax
$LN7@GetNumReso:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	cmp	DWORD PTR _iResourceLoop$228315[ebp], eax
	jge	SHORT $LN5@GetNumReso

; 9697 : #endif
; 9698 : 	{
; 9699 : 		eResource = (ResourceTypes) iResourceLoop;

	mov	ecx, DWORD PTR _iResourceLoop$228315[ebp]
	mov	DWORD PTR _eResource$[ebp], ecx

; 9700 : 
; 9701 : 		const CvResourceInfo* pkResourceInfo = GC.getResourceInfo(eResource);

	mov	edx, DWORD PTR _eResource$[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	DWORD PTR _pkResourceInfo$228320[ebp], eax

; 9702 : 		// Must not be a Bonus resource
; 9703 : 		if(pkResourceInfo == NULL || pkResourceInfo->getResourceUsage() == RESOURCEUSAGE_BONUS)

	cmp	DWORD PTR _pkResourceInfo$228320[ebp], 0
	je	SHORT $LN3@GetNumReso
	mov	ecx, DWORD PTR _pkResourceInfo$228320[ebp]
	call	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ ; CvResourceInfo::getResourceUsage
	test	eax, eax
	jne	SHORT $LN4@GetNumReso
$LN3@GetNumReso:

; 9704 : 			continue;

	jmp	SHORT $LN6@GetNumReso
$LN4@GetNumReso:

; 9705 : 
; 9706 : 		// We must have it
; 9707 : 		if(GetPlayer()->getNumResourceTotal(eResource, /*bIncludeImport*/ false) == 0)

	push	0
	mov	eax, DWORD PTR _eResource$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNumResourceTotal@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceTotal
	test	eax, eax
	jne	SHORT $LN2@GetNumReso

; 9708 : 			continue;

	jmp	SHORT $LN6@GetNumReso
$LN2@GetNumReso:

; 9709 : 
; 9710 : 		// They must not have it
; 9711 : 		if(GET_PLAYER(eMajor).getNumResourceTotal(eResource, /*bIncludeImport*/ false) > 0)

	mov	ecx, DWORD PTR _eMajor$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247294[ebp], ecx
	push	0
	mov	edx, DWORD PTR _eResource$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T247294[ebp]
	call	?getNumResourceTotal@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceTotal
	test	eax, eax
	jle	SHORT $LN1@GetNumReso

; 9712 : 			continue;

	jmp	$LN6@GetNumReso
$LN1@GetNumReso:

; 9713 : 
; 9714 : 		iNumTheyLack++;

	mov	eax, DWORD PTR _iNumTheyLack$[ebp]
	add	eax, 1
	mov	DWORD PTR _iNumTheyLack$[ebp], eax

; 9715 : 	}

	jmp	$LN6@GetNumReso
$LN5@GetNumReso:

; 9716 : 
; 9717 : 	return iNumTheyLack;

	mov	eax, DWORD PTR _iNumTheyLack$[ebp]

; 9718 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetNumResourcesMajorLacks@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetNumResourcesMajorLacks
_TEXT	ENDS
PUBLIC	??1?$BaseVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$00@@QAE@XZ ; BaseVector<CvWeightedVector<int,100,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<int,100,1>::WeightedElement,1>
PUBLIC	??1?$CvWeightedVector@H$0GE@$00@@QAE@XZ		; CvWeightedVector<int,100,1>::~CvWeightedVector<int,100,1>
PUBLIC	?Free@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@I@Z ; FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>::Free
PUBLIC	?SortItems@?$CvWeightedVector@H$0GE@$00@@QAEXXZ	; CvWeightedVector<int,100,1>::SortItems
PUBLIC	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>::~FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>
PUBLIC	?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@Z ; FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>::push_back
PUBLIC	??_C@_0ED@OODFEHP@Minor?5Civ?5Quest?5Reward?3?5Tech?5?9?5A@ ; `string'
PUBLIC	??0CvTeam@@QAE@ABV0@@Z				; CvTeam::CvTeam
PUBLIC	??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>::FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>
PUBLIC	__$ArrayPad$
PUBLIC	?GetGoodTechPlayerDoesntHave@CvMinorCivAI@@QBE?AW4TechTypes@@W4PlayerTypes@@H@Z ; CvMinorCivAI::GetGoodTechPlayerDoesntHave
EXTRN	??1CvTeam@@QAE@XZ:PROC				; CvTeam::~CvTeam
EXTRN	?GetResearchProgress@CvTeamTechs@@QBEHW4TechTypes@@@Z:PROC ; CvTeamTechs::GetResearchProgress
EXTRN	?GetResearchCost@CvTechEntry@@QBEHXZ:PROC	; CvTechEntry::GetResearchCost
EXTRN	?CanResearch@CvPlayerTechs@@QBE_NW4TechTypes@@_N@Z:PROC ; CvPlayerTechs::CanResearch
EXTRN	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ:PROC ; CvPlayer::GetPlayerTechs
EXTRN	?getTechInfo@CvGlobals@@QAEPAVCvTechEntry@@W4TechTypes@@@Z:PROC ; CvGlobals::getTechInfo
EXTRN	?getNumTechInfos@CvGlobals@@QAEHXZ:PROC		; CvGlobals::getNumTechInfos
;	COMDAT ??_C@_0ED@OODFEHP@Minor?5Civ?5Quest?5Reward?3?5Tech?5?9?5A@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0ED@OODFEHP@Minor?5Civ?5Quest?5Reward?3?5Tech?5?9?5A@ DB 'Minor Civ'
	DB	' Quest Reward: Tech - Adding random weight to Tech Reward', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetGoodTechPlayerDoesntHave@CvMinorCivAI@@QBE?AW4TechTypes@@W4PlayerTypes@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetGoodTechPlayerDoesntHave@CvMinorCivAI@@QBE?AW4TechTypes@@W4PlayerTypes@@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetGoodTechPlayerDoesntHave@CvMinorCivAI@@QBE?AW4TechTypes@@W4PlayerTypes@@H@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetGoodTechPlayerDoesntHave@CvMinorCivAI@@QBE?AW4TechTypes@@W4PlayerTypes@@H@Z$8
__ehfuncinfo$?GetGoodTechPlayerDoesntHave@CvMinorCivAI@@QBE?AW4TechTypes@@W4PlayerTypes@@H@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?GetGoodTechPlayerDoesntHave@CvMinorCivAI@@QBE?AW4TechTypes@@W4PlayerTypes@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?GetGoodTechPlayerDoesntHave@CvMinorCivAI@@QBE?AW4TechTypes@@W4PlayerTypes@@H@Z
_TEXT	SEGMENT
_this$ = -3904						; size = 4
$T247389 = -3900					; size = 4
$T247364 = -3888					; size = 4
$T247343 = -3884					; size = 4
_weightedElem$247335 = -3880				; size = 8
$T247329 = -3872					; size = 4
$T247322 = -3868					; size = 4
$T247318 = -3864					; size = 4
$T247300 = -3860					; size = 4
$T247299 = -3856					; size = 4
$T247298 = -3852					; size = 4
_eTech$228554 = -3848					; size = 4
_pkTechInfo$228556 = -3844				; size = 4
_iTechLoop$228550 = -3840				; size = 4
_TechVector$ = -3836					; size = 816
_iIndex$ = -3016					; size = 4
_kTeam$ = -3012						; size = 2984
__$ArrayPad$ = -28					; size = 4
_iValue$ = -24						; size = 4
_iProgress$ = -20					; size = 4
_kPlayer$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
_iRoughTechValue$ = 12					; size = 4
?GetGoodTechPlayerDoesntHave@CvMinorCivAI@@QBE?AW4TechTypes@@W4PlayerTypes@@H@Z PROC ; CvMinorCivAI::GetGoodTechPlayerDoesntHave, COMDAT
; _this$ = ecx

; 9722 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetGoodTechPlayerDoesntHave@CvMinorCivAI@@QBE?AW4TechTypes@@W4PlayerTypes@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 3892				; 00000f34H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 9723 : 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 9724 : 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 9725 : 
; 9726 : 	CvWeightedVector<int, SAFE_ESTIMATE_NUM_XML_WIDGETS, true> TechVector;

	lea	ecx, DWORD PTR _TechVector$[ebp]
	call	??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>::FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 9727 : 	int iValue, iProgress;
; 9728 : 
; 9729 : 
; 9730 : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 9731 : 	CvTeam kTeam = GET_TEAM(kPlayer.getTeam());

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T247318[ebp], eax
	mov	eax, DWORD PTR $T247318[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T247322[ebp], eax
	mov	ecx, DWORD PTR $T247322[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kTeam$[ebp]
	call	??0CvTeam@@QAE@ABV0@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 9732 : 
; 9733 : #ifdef AUI_WARNING_FIXES
; 9734 : 	for (uint iTechLoop = 0; iTechLoop < GC.getNumTechInfos(); iTechLoop++)
; 9735 : #else
; 9736 : 	for(int iTechLoop = 0; iTechLoop < GC.getNumTechInfos(); iTechLoop++)

	mov	DWORD PTR _iTechLoop$228550[ebp], 0
	jmp	SHORT $LN11@GetGoodTec
$LN10@GetGoodTec:
	mov	edx, DWORD PTR _iTechLoop$228550[ebp]
	add	edx, 1
	mov	DWORD PTR _iTechLoop$228550[ebp], edx
$LN11@GetGoodTec:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumTechInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumTechInfos
	cmp	DWORD PTR _iTechLoop$228550[ebp], eax
	jge	$LN9@GetGoodTec

; 9737 : #endif
; 9738 : 	{
; 9739 : 		const TechTypes eTech = static_cast<TechTypes>(iTechLoop);

	mov	eax, DWORD PTR _iTechLoop$228550[ebp]
	mov	DWORD PTR _eTech$228554[ebp], eax

; 9740 : 		CvTechEntry* pkTechInfo = GC.getTechInfo(eTech);

	mov	ecx, DWORD PTR _eTech$228554[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getTechInfo@CvGlobals@@QAEPAVCvTechEntry@@W4TechTypes@@@Z ; CvGlobals::getTechInfo
	mov	DWORD PTR _pkTechInfo$228556[ebp], eax

; 9741 : 		if(pkTechInfo == NULL)

	cmp	DWORD PTR _pkTechInfo$228556[ebp], 0
	jne	SHORT $LN8@GetGoodTec

; 9742 : 			continue;

	jmp	SHORT $LN10@GetGoodTec
$LN8@GetGoodTec:

; 9743 : 
; 9744 : 		// Player doesn't already have Tech
; 9745 : 		if(!kTeam.GetTeamTechs()->HasTech(eTech))

	mov	edx, DWORD PTR _eTech$228554[ebp]
	push	edx
	lea	ecx, DWORD PTR _kTeam$[ebp]
	call	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ ; CvTeam::GetTeamTechs
	mov	ecx, eax
	call	?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z ; CvTeamTechs::HasTech
	movzx	eax, al
	test	eax, eax
	jne	$LN7@GetGoodTec

; 9746 : 		{
; 9747 : 			// Player can research this Tech
; 9748 : 			if(kPlayer.GetPlayerTechs()->CanResearch(eTech))

	push	0
	mov	ecx, DWORD PTR _eTech$228554[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?CanResearch@CvPlayerTechs@@QBE_NW4TechTypes@@_N@Z ; CvPlayerTechs::CanResearch
	movzx	edx, al
	test	edx, edx
	je	$LN7@GetGoodTec

; 9749 : 			{
; 9750 : 				iValue = pkTechInfo->GetResearchCost();

	mov	ecx, DWORD PTR _pkTechInfo$228556[ebp]
	call	?GetResearchCost@CvTechEntry@@QBEHXZ	; CvTechEntry::GetResearchCost
	mov	DWORD PTR _iValue$[ebp], eax

; 9751 : 
; 9752 : 				// Reduce value of a Tech if it's already in progress
; 9753 : 				iProgress = kTeam.GetTeamTechs()->GetResearchProgress(eTech);

	mov	eax, DWORD PTR _eTech$228554[ebp]
	push	eax
	lea	ecx, DWORD PTR _kTeam$[ebp]
	call	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ ; CvTeam::GetTeamTechs
	mov	ecx, eax
	call	?GetResearchProgress@CvTeamTechs@@QBEHW4TechTypes@@@Z ; CvTeamTechs::GetResearchProgress
	mov	DWORD PTR _iProgress$[ebp], eax

; 9754 : 
; 9755 : 				if(iProgress > 0)

	cmp	DWORD PTR _iProgress$[ebp], 0
	jle	SHORT $LN5@GetGoodTec

; 9756 : 				{
; 9757 : 					iValue -= iProgress;

	mov	ecx, DWORD PTR _iValue$[ebp]
	sub	ecx, DWORD PTR _iProgress$[ebp]
	mov	DWORD PTR _iValue$[ebp], ecx
$LN5@GetGoodTec:

; 9758 : 				}
; 9759 : 
; 9760 : 				// Random factor so that the same thing isn't always picked
; 9761 : 				iValue += GC.getGame().getJonRandNum(iValue / 4, "Minor Civ Quest Reward: Tech - Adding random weight to Tech Reward");

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T247329[ebp], edx
	push	OFFSET ??_C@_0ED@OODFEHP@Minor?5Civ?5Quest?5Reward?3?5Tech?5?9?5A@
	mov	eax, DWORD PTR _iValue$[ebp]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	push	eax
	mov	ecx, DWORD PTR $T247329[ebp]
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	add	eax, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _iValue$[ebp], eax

; 9762 : 
; 9763 : 				TechVector.push_back(iTechLoop, iValue);

	mov	DWORD PTR _weightedElem$247335[ebp], 0
	mov	DWORD PTR _weightedElem$247335[ebp+4], 0
	mov	eax, DWORD PTR _iTechLoop$228550[ebp]
	mov	DWORD PTR _weightedElem$247335[ebp], eax
	mov	ecx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _weightedElem$247335[ebp+4], ecx
	lea	edx, DWORD PTR _weightedElem$247335[ebp]
	push	edx
	lea	ecx, DWORD PTR _TechVector$[ebp]
	call	?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@Z ; FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>::push_back
$LN7@GetGoodTec:

; 9764 : 			}
; 9765 : 		}
; 9766 : 	}

	jmp	$LN10@GetGoodTec
$LN9@GetGoodTec:

; 9767 : 
; 9768 : 	// If there's only one option return it... this will help prevent divide by zero stuff later
; 9769 : 	if(TechVector.size() == 1)

	mov	eax, DWORD PTR _TechVector$[ebp+4]
	mov	DWORD PTR $T247343[ebp], eax
	cmp	DWORD PTR $T247343[ebp], 1
	jne	SHORT $LN4@GetGoodTec

; 9770 : 	{
; 9771 : 		return (TechTypes) TechVector.GetElement(0);

	xor	ecx, ecx
	shl	ecx, 3
	mov	edx, DWORD PTR _TechVector$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	mov	DWORD PTR $T247298[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kTeam$[ebp]
	call	??1CvTeam@@QAE@XZ			; CvTeam::~CvTeam
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _TechVector$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>::~FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>
	mov	eax, DWORD PTR $T247298[ebp]
	jmp	$LN12@GetGoodTec
	jmp	SHORT $LN3@GetGoodTec
$LN4@GetGoodTec:

; 9772 : 	}
; 9773 : 	else if(TechVector.size() == 0)

	mov	ecx, DWORD PTR _TechVector$[ebp+4]
	mov	DWORD PTR $T247364[ebp], ecx
	cmp	DWORD PTR $T247364[ebp], 0
	jne	SHORT $LN3@GetGoodTec

; 9774 : 	{
; 9775 : 		return NO_TECH;

	mov	DWORD PTR $T247299[ebp], -1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kTeam$[ebp]
	call	??1CvTeam@@QAE@XZ			; CvTeam::~CvTeam
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _TechVector$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>::~FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>
	mov	eax, DWORD PTR $T247299[ebp]
	jmp	$LN12@GetGoodTec
$LN3@GetGoodTec:

; 9776 : 	}
; 9777 : 
; 9778 : 	TechVector.SortItems();

	lea	ecx, DWORD PTR _TechVector$[ebp]
	call	?SortItems@?$CvWeightedVector@H$0GE@$00@@QAEXXZ ; CvWeightedVector<int,100,1>::SortItems

; 9779 : 
; 9780 : 	// Our rough estimate is that 20 is a good ceiling for the max Tech value
; 9781 : 	if(iRoughTechValue > 20)

	cmp	DWORD PTR _iRoughTechValue$[ebp], 20	; 00000014H
	jle	SHORT $LN1@GetGoodTec

; 9782 : 	{
; 9783 : 		iRoughTechValue = 20;

	mov	DWORD PTR _iRoughTechValue$[ebp], 20	; 00000014H
$LN1@GetGoodTec:

; 9784 : 	}
; 9785 : 
; 9786 : 	int iIndex = (TechVector.size() - 1) * iRoughTechValue / 20;

	mov	edx, DWORD PTR _TechVector$[ebp+4]
	mov	DWORD PTR $T247389[ebp], edx
	mov	eax, DWORD PTR $T247389[ebp]
	sub	eax, 1
	imul	eax, DWORD PTR _iRoughTechValue$[ebp]
	cdq
	mov	ecx, 20					; 00000014H
	idiv	ecx
	mov	DWORD PTR _iIndex$[ebp], eax

; 9787 : 
; 9788 : 	return (TechTypes) TechVector.GetElement(iIndex);

	mov	edx, DWORD PTR _iIndex$[ebp]
	mov	eax, DWORD PTR _TechVector$[ebp]
	mov	ecx, DWORD PTR [eax+edx*8]
	mov	DWORD PTR $T247300[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kTeam$[ebp]
	call	??1CvTeam@@QAE@XZ			; CvTeam::~CvTeam
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR _TechVector$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _TechVector$[ebp]
	push	eax
	lea	ecx, DWORD PTR _TechVector$[ebp]
	call	?Free@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@I@Z ; FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>::Free
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T247300[ebp]
$LN12@GetGoodTec:

; 9789 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetGoodTechPlayerDoesntHave@CvMinorCivAI@@QBE?AW4TechTypes@@W4PlayerTypes@@H@Z$0:
	lea	ecx, DWORD PTR _TechVector$[ebp]
	jmp	??1?$CvWeightedVector@H$0GE@$00@@QAE@XZ	; CvWeightedVector<int,100,1>::~CvWeightedVector<int,100,1>
__unwindfunclet$?GetGoodTechPlayerDoesntHave@CvMinorCivAI@@QBE?AW4TechTypes@@W4PlayerTypes@@H@Z$1:
	lea	ecx, DWORD PTR _kTeam$[ebp]
	jmp	??1CvTeam@@QAE@XZ			; CvTeam::~CvTeam
__unwindfunclet$?GetGoodTechPlayerDoesntHave@CvMinorCivAI@@QBE?AW4TechTypes@@W4PlayerTypes@@H@Z$8:
	lea	ecx, DWORD PTR _TechVector$[ebp]
	jmp	??1?$BaseVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$00@@QAE@XZ ; BaseVector<CvWeightedVector<int,100,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<int,100,1>::WeightedElement,1>
__ehhandler$?GetGoodTechPlayerDoesntHave@CvMinorCivAI@@QBE?AW4TechTypes@@W4PlayerTypes@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-3896]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetGoodTechPlayerDoesntHave@CvMinorCivAI@@QBE?AW4TechTypes@@W4PlayerTypes@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetGoodTechPlayerDoesntHave@CvMinorCivAI@@QBE?AW4TechTypes@@W4PlayerTypes@@H@Z ENDP ; CvMinorCivAI::GetGoodTechPlayerDoesntHave
PUBLIC	??1?$FAllocArrayType@HU?$FAllocArrayType@_NU?$FAllocArrayType@_NU?$FAllocArrayType@_NU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArray2DType@HU?$FAllocArray2DType@HU?$FAllocArray2DType@HU?$FAllocBase@$0A@$0A@$0A@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@QAE@XZ ; FAllocArrayType<int,FAllocArrayType<bool,FAllocArrayType<bool,FAllocArrayType<bool,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArray2DType<int,FAllocArray2DType<int,FAllocArray2DType<int,FAllocBase<0,0,0> > > > > > > > > > > > > > > > > >::~FAllocArrayType<int,FAllocArrayType<bool,FAllocArrayType<bool,FAllocArrayType<bool,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArray2DType<int,FAllocArray2DType<int,FAllocArray2DType<int,FAllocBase<0,0,0> > > > > > > > > > > > > > > > > >
PUBLIC	??0?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@ABV01@@Z ; std::vector<enum ResourceTypes,std::allocator<enum ResourceTypes> >::vector<enum ResourceTypes,std::allocator<enum ResourceTypes> >
PUBLIC	??_7CvTeam@@6B@					; CvTeam::`vftable'
EXTRN	?Read@CvTeam@@UAEXAAVFDataStream@@@Z:PROC	; CvTeam::Read
EXTRN	?Write@CvTeam@@UBEXAAVFDataStream@@@Z:PROC	; CvTeam::Write
;	COMDAT ??_7CvTeam@@6B@
CONST	SEGMENT
??_7CvTeam@@6B@ DD FLAT:?Read@CvTeam@@UAEXAAVFDataStream@@@Z ; CvTeam::`vftable'
	DD	FLAT:?Write@CvTeam@@UBEXAAVFDataStream@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CvTeam@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CvTeam@@QAE@ABV0@@Z$0
__ehfuncinfo$??0CvTeam@@QAE@ABV0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CvTeam@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0CvTeam@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0CvTeam@@QAE@ABV0@@Z PROC				; CvTeam::CvTeam, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CvTeam@@QAE@ABV0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CvTeam@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+16], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR [ecx+24], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR [ecx+28], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR [ecx+32], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	DWORD PTR [ecx+36], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR [ecx+40], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR [ecx+44], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+48]
	mov	DWORD PTR [ecx+48], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+52]
	mov	DWORD PTR [ecx+52], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+56]
	mov	DWORD PTR [ecx+56], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+60]
	mov	DWORD PTR [ecx+60], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+64]
	mov	DWORD PTR [ecx+64], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+68]
	mov	DWORD PTR [ecx+68], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+72]
	mov	DWORD PTR [ecx+72], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+76]
	mov	DWORD PTR [ecx+76], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	DWORD PTR [ecx+80], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR [ecx+84], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+88]
	mov	DWORD PTR [ecx+88], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+92]
	mov	DWORD PTR [ecx+92], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR [ecx+96], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+100]
	mov	DWORD PTR [ecx+100], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+104]
	mov	DWORD PTR [ecx+104], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR [ecx+108], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+112]
	mov	DWORD PTR [ecx+112], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+116]
	mov	DWORD PTR [ecx+116], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+120]
	mov	DWORD PTR [ecx+120], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+124]
	mov	DWORD PTR [ecx+124], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	al, BYTE PTR [edx+128]
	mov	BYTE PTR [ecx+128], al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	al, BYTE PTR [edx+129]
	mov	BYTE PTR [ecx+129], al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	al, BYTE PTR [edx+130]
	mov	BYTE PTR [ecx+130], al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	al, BYTE PTR [edx+131]
	mov	BYTE PTR [ecx+131], al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	al, BYTE PTR [edx+132]
	mov	BYTE PTR [ecx+132], al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	al, BYTE PTR [edx+133]
	mov	BYTE PTR [ecx+133], al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	al, BYTE PTR [edx+134]
	mov	BYTE PTR [ecx+134], al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	al, BYTE PTR [edx+135]
	mov	BYTE PTR [ecx+135], al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+136]
	mov	DWORD PTR [ecx+136], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+140]
	mov	DWORD PTR [ecx+140], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+144]
	mov	DWORD PTR [ecx+144], eax
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 148				; 00000094H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 148				; 00000094H
	mov	ecx, 80					; 00000050H
	rep movsd
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 468				; 000001d4H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 468				; 000001d4H
	mov	ecx, 80					; 00000050H
	rep movsd
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 788				; 00000314H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 788				; 00000314H
	mov	ecx, 80					; 00000050H
	rep movsd
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 1108				; 00000454H
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 1108				; 00000454H
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], eax
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR [edx+12], eax
	mov	ecx, DWORD PTR [ecx+16]
	mov	DWORD PTR [edx+16], ecx
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 1128				; 00000468H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 1128				; 00000468H
	mov	ecx, 80					; 00000050H
	rep movsd
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 1448				; 000005a8H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 1448				; 000005a8H
	mov	ecx, 80					; 00000050H
	rep movsd
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 1768				; 000006e8H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 1768				; 000006e8H
	mov	ecx, 20					; 00000014H
	rep movsd
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 1848				; 00000738H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 1848				; 00000738H
	mov	ecx, 20					; 00000014H
	rep movsd
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 1928				; 00000788H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 1928				; 00000788H
	mov	ecx, 20					; 00000014H
	rep movsd
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 2008				; 000007d8H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 2008				; 000007d8H
	mov	ecx, 20					; 00000014H
	rep movsd
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 2088				; 00000828H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 2088				; 00000828H
	mov	ecx, 20					; 00000014H
	rep movsd
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 2168				; 00000878H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 2168				; 00000878H
	mov	ecx, 20					; 00000014H
	rep movsd
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 2248				; 000008c8H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 2248				; 000008c8H
	mov	ecx, 20					; 00000014H
	rep movsd
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 2328				; 00000918H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 2328				; 00000918H
	mov	ecx, 20					; 00000014H
	rep movsd
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 2408				; 00000968H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 2408				; 00000968H
	mov	ecx, 20					; 00000014H
	rep movsd
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 2488				; 000009b8H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 2488				; 000009b8H
	mov	ecx, 20					; 00000014H
	rep movsd
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 2568				; 00000a08H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 2568				; 00000a08H
	mov	ecx, 80					; 00000050H
	rep movsd
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+2888]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+2888], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+2892]
	mov	DWORD PTR [edx+2892], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+2896]
	mov	DWORD PTR [edx+2896], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+2900]
	mov	DWORD PTR [edx+2900], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+2904]
	mov	DWORD PTR [edx+2904], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+2908]
	mov	DWORD PTR [edx+2908], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+2912]
	mov	DWORD PTR [edx+2912], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+2916]
	mov	DWORD PTR [edx+2916], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+2920]
	mov	DWORD PTR [edx+2920], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+2924]
	mov	DWORD PTR [edx+2924], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+2928]
	mov	DWORD PTR [edx+2928], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+2932]
	mov	DWORD PTR [edx+2932], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+2936]
	mov	DWORD PTR [edx+2936], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+2940]
	mov	DWORD PTR [edx+2940], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+2944]
	mov	DWORD PTR [edx+2944], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+2948]
	mov	DWORD PTR [edx+2948], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+2952]
	mov	DWORD PTR [edx+2952], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+2956]
	mov	DWORD PTR [edx+2956], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+2960]
	mov	DWORD PTR [edx+2960], ecx
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 2964				; 00000b94H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2964				; 00000b94H
	call	??0?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@ABV01@@Z ; std::vector<enum ResourceTypes,std::allocator<enum ResourceTypes> >::vector<enum ResourceTypes,std::allocator<enum ResourceTypes> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+2980]
	mov	DWORD PTR [eax+2980], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CvTeam@@QAE@ABV0@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2888				; 00000b48H
	jmp	??1?$FAllocArrayType@HU?$FAllocArrayType@_NU?$FAllocArrayType@_NU?$FAllocArrayType@_NU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArray2DType@HU?$FAllocArray2DType@HU?$FAllocArray2DType@HU?$FAllocBase@$0A@$0A@$0A@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@QAE@XZ
__ehhandler$??0CvTeam@@QAE@ABV0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CvTeam@@QAE@ABV0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CvTeam@@QAE@ABV0@@Z ENDP				; CvTeam::CvTeam
; Function compile flags: /Odtp
;	COMDAT ??1?$FAllocArrayType@HU?$FAllocArrayType@_NU?$FAllocArrayType@_NU?$FAllocArrayType@_NU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArray2DType@HU?$FAllocArray2DType@HU?$FAllocArray2DType@HU?$FAllocBase@$0A@$0A@$0A@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$FAllocArrayType@HU?$FAllocArrayType@_NU?$FAllocArrayType@_NU?$FAllocArrayType@_NU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArray2DType@HU?$FAllocArray2DType@HU?$FAllocArray2DType@HU?$FAllocBase@$0A@$0A@$0A@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@QAE@XZ PROC ; FAllocArrayType<int,FAllocArrayType<bool,FAllocArrayType<bool,FAllocArrayType<bool,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArray2DType<int,FAllocArray2DType<int,FAllocArray2DType<int,FAllocBase<0,0,0> > > > > > > > > > > > > > > > > >::~FAllocArrayType<int,FAllocArrayType<bool,FAllocArrayType<bool,FAllocArrayType<bool,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArray2DType<int,FAllocArray2DType<int,FAllocArray2DType<int,FAllocBase<0,0,0> > > > > > > > > > > > > > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$FAllocArrayType@HU?$FAllocArrayType@_NU?$FAllocArrayType@_NU?$FAllocArrayType@_NU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArrayType@HU?$FAllocArray2DType@HU?$FAllocArray2DType@HU?$FAllocArray2DType@HU?$FAllocBase@$0A@$0A@$0A@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@QAE@XZ ENDP ; FAllocArrayType<int,FAllocArrayType<bool,FAllocArrayType<bool,FAllocArrayType<bool,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArray2DType<int,FAllocArray2DType<int,FAllocArray2DType<int,FAllocBase<0,0,0> > > > > > > > > > > > > > > > > >::~FAllocArrayType<int,FAllocArrayType<bool,FAllocArrayType<bool,FAllocArrayType<bool,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArrayType<int,FAllocArray2DType<int,FAllocArray2DType<int,FAllocArray2DType<int,FAllocBase<0,0,0> > > > > > > > > > > > > > > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsSameReligionAsMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T247782 = -20						; size = 4
_eMajorReligion$228618 = -16				; size = 4
_eMinorReligion$228617 = -12				; size = 4
_pkCity$228615 = -8					; size = 4
_pkPlayer$ = -4						; size = 4
_eMajor$ = 8						; size = 4
?IsSameReligionAsMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z PROC ; CvMinorCivAI::IsSameReligionAsMajor, COMDAT
; _this$ = ecx

; 9793 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 9794 : 	CvPlayer* pkPlayer = GetPlayer();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9795 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN3@IsSameReli

; 9796 : 	{
; 9797 : 		CvCity* pkCity = pkPlayer->getCapitalCity();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pkCity$228615[ebp], eax

; 9798 : 		if(pkCity)

	cmp	DWORD PTR _pkCity$228615[ebp], 0
	je	SHORT $LN3@IsSameReli

; 9799 : 		{
; 9800 : 			ReligionTypes eMinorReligion = pkCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, DWORD PTR _pkCity$228615[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eMinorReligion$228617[ebp], eax

; 9801 : 			ReligionTypes eMajorReligion = GC.getGame().GetGameReligions()->GetReligionCreatedByPlayer(eMajor);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T247782[ebp], eax
	mov	ecx, DWORD PTR _eMajor$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T247782[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer
	mov	DWORD PTR _eMajorReligion$228618[ebp], eax

; 9802 : 
; 9803 : 			if(eMinorReligion != NO_RELIGION &&
; 9804 : 			        eMajorReligion != NO_RELIGION &&
; 9805 : 			        eMinorReligion == eMajorReligion)

	cmp	DWORD PTR _eMinorReligion$228617[ebp], -1
	je	SHORT $LN3@IsSameReli
	cmp	DWORD PTR _eMajorReligion$228618[ebp], -1
	je	SHORT $LN3@IsSameReli
	mov	edx, DWORD PTR _eMinorReligion$228617[ebp]
	cmp	edx, DWORD PTR _eMajorReligion$228618[ebp]
	jne	SHORT $LN3@IsSameReli

; 9806 : 			{
; 9807 : 				return true;

	mov	al, 1
	jmp	SHORT $LN4@IsSameReli
$LN3@IsSameReli:

; 9808 : 			}
; 9809 : 		}
; 9810 : 	}
; 9811 : 	return false;

	xor	al, al
$LN4@IsSameReli:

; 9812 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsSameReligionAsMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::IsSameReligionAsMajor
_TEXT	ENDS
PUBLIC	??_C@_0CK@EFAAJFN@TXT_KEY_NOTIFICATION_MINOR_LOST_@ ; `string'
PUBLIC	??_C@_0DB@GCJHNCBN@TXT_KEY_NOTIFICATION_MINOR_NOW_F@ ; `string'
PUBLIC	??_C@_0DA@EFCJOBLE@TXT_KEY_NOTIFICATION_MINOR_NOW_A@ ; `string'
PUBLIC	??_C@_0CL@DEEMNMFN@TXT_KEY_NOTIFICATION_MINOR_LOST_@ ; `string'
PUBLIC	??_C@_0DC@ECPGFKBG@TXT_KEY_NOTIFICATION_MINOR_NOW_F@ ; `string'
PUBLIC	??_C@_0DB@ONNLPPGJ@TXT_KEY_NOTIFICATION_MINOR_NOW_A@ ; `string'
PUBLIC	??_C@_0CJ@NHJJAHGM@TXT_KEY_NOTIFICATION_MINOR_LOST_@ ; `string'
PUBLIC	??_C@_0DA@BGHJINLG@TXT_KEY_NOTIFICATION_MINOR_NOW_F@ ; `string'
PUBLIC	??$?6M@@YAAAVString@Localization@@AAV01@ABM@Z	; operator<<<float>
PUBLIC	??_C@_0CP@KKALIOMH@TXT_KEY_NOTIFICATION_MINOR_NOW_A@ ; `string'
PUBLIC	__real@42c80000
PUBLIC	??_C@_0DE@GNPCMNCO@TXT_KEY_NOTIFICATION_MINOR_LOST_@ ; `string'
PUBLIC	??_C@_0DF@OMBGEHJN@TXT_KEY_NOTIFICATION_MINOR_LOST_@ ; `string'
PUBLIC	??_C@_0DE@ILCDMHMG@TXT_KEY_NOTIFICATION_MINOR_NOW_F@ ; `string'
PUBLIC	??_C@_0DD@IFDIFKLF@TXT_KEY_NOTIFICATION_MINOR_NOW_A@ ; `string'
PUBLIC	??_C@_0CI@NFMCAMDF@TXT_KEY_NOTIFICATION_MINOR_LOST_@ ; `string'
PUBLIC	??_C@_0CP@FEFFHNAL@TXT_KEY_NOTIFICATION_MINOR_NOW_F@ ; `string'
PUBLIC	??_C@_0CO@EANFBGLK@TXT_KEY_NOTIFICATION_MINOR_NOW_A@ ; `string'
;	COMDAT ??_C@_0CK@EFAAJFN@TXT_KEY_NOTIFICATION_MINOR_LOST_@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0CK@EFAAJFN@TXT_KEY_NOTIFICATION_MINOR_LOST_@ DB 'TXT_KEY_NOTIFICAT'
	DB	'ION_MINOR_LOST_RELIGIOUS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@GCJHNCBN@TXT_KEY_NOTIFICATION_MINOR_NOW_F@
CONST	SEGMENT
??_C@_0DB@GCJHNCBN@TXT_KEY_NOTIFICATION_MINOR_NOW_F@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_NOW_FRIENDS_RELIGIOUS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@EFCJOBLE@TXT_KEY_NOTIFICATION_MINOR_NOW_A@
CONST	SEGMENT
??_C@_0DA@EFCJOBLE@TXT_KEY_NOTIFICATION_MINOR_NOW_A@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_NOW_ALLIES_RELIGIOUS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@DEEMNMFN@TXT_KEY_NOTIFICATION_MINOR_LOST_@
CONST	SEGMENT
??_C@_0CL@DEEMNMFN@TXT_KEY_NOTIFICATION_MINOR_LOST_@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_LOST_MERCANTILE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@ECPGFKBG@TXT_KEY_NOTIFICATION_MINOR_NOW_F@
CONST	SEGMENT
??_C@_0DC@ECPGFKBG@TXT_KEY_NOTIFICATION_MINOR_NOW_F@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_NOW_FRIENDS_MERCANTILE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@ONNLPPGJ@TXT_KEY_NOTIFICATION_MINOR_NOW_A@
CONST	SEGMENT
??_C@_0DB@ONNLPPGJ@TXT_KEY_NOTIFICATION_MINOR_NOW_A@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_NOW_ALLIES_MERCANTILE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@NHJJAHGM@TXT_KEY_NOTIFICATION_MINOR_LOST_@
CONST	SEGMENT
??_C@_0CJ@NHJJAHGM@TXT_KEY_NOTIFICATION_MINOR_LOST_@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_LOST_MARITIME', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@BGHJINLG@TXT_KEY_NOTIFICATION_MINOR_NOW_F@
CONST	SEGMENT
??_C@_0DA@BGHJINLG@TXT_KEY_NOTIFICATION_MINOR_NOW_F@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_NOW_FRIENDS_MARITIME', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@KKALIOMH@TXT_KEY_NOTIFICATION_MINOR_NOW_A@
CONST	SEGMENT
??_C@_0CP@KKALIOMH@TXT_KEY_NOTIFICATION_MINOR_NOW_A@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_NOW_ALLIES_MARITIME', 00H	; `string'
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT ??_C@_0DE@GNPCMNCO@TXT_KEY_NOTIFICATION_MINOR_LOST_@
CONST	SEGMENT
??_C@_0DE@GNPCMNCO@TXT_KEY_NOTIFICATION_MINOR_LOST_@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_LOST_ALLIES_MILITARISTIC', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@OMBGEHJN@TXT_KEY_NOTIFICATION_MINOR_LOST_@
CONST	SEGMENT
??_C@_0DF@OMBGEHJN@TXT_KEY_NOTIFICATION_MINOR_LOST_@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_LOST_FRIENDS_MILITARISTIC', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@ILCDMHMG@TXT_KEY_NOTIFICATION_MINOR_NOW_F@
CONST	SEGMENT
??_C@_0DE@ILCDMHMG@TXT_KEY_NOTIFICATION_MINOR_NOW_F@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_NOW_FRIENDS_MILITARISTIC', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@IFDIFKLF@TXT_KEY_NOTIFICATION_MINOR_NOW_A@
CONST	SEGMENT
??_C@_0DD@IFDIFKLF@TXT_KEY_NOTIFICATION_MINOR_NOW_A@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_NOW_ALLIES_MILITARISTIC', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@NFMCAMDF@TXT_KEY_NOTIFICATION_MINOR_LOST_@
CONST	SEGMENT
??_C@_0CI@NFMCAMDF@TXT_KEY_NOTIFICATION_MINOR_LOST_@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_LOST_CULTURE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@FEFFHNAL@TXT_KEY_NOTIFICATION_MINOR_NOW_F@
CONST	SEGMENT
??_C@_0CP@FEFFHNAL@TXT_KEY_NOTIFICATION_MINOR_NOW_F@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_NOW_FRIENDS_CULTURE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@EANFBGLK@TXT_KEY_NOTIFICATION_MINOR_NOW_A@
CONST	SEGMENT
??_C@_0CO@EANFBGLK@TXT_KEY_NOTIFICATION_MINOR_NOW_A@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_NOW_ALLIES_CULTURE', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z DD 019930522H
	DD	012H
	DD	FLAT:__unwindtable$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$17
	DD	00H
	DD	FLAT:__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$7
	DD	01H
	DD	FLAT:__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$8
	DD	01H
	DD	FLAT:__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$9
	DD	01H
	DD	FLAT:__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$10
	DD	01H
	DD	FLAT:__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$11
	DD	01H
	DD	FLAT:__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$12
	DD	01H
	DD	FLAT:__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$13
	DD	01H
	DD	FLAT:__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$14
	DD	01H
	DD	FLAT:__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$15
	DD	01H
	DD	FLAT:__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$16
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z
_TEXT	SEGMENT
tv460 = -1548						; size = 4
tv447 = -1544						; size = 4
tv479 = -1540						; size = 4
tv445 = -1536						; size = 4
tv478 = -1532						; size = 4
tv443 = -1528						; size = 4
tv477 = -1524						; size = 4
tv441 = -1520						; size = 4
tv476 = -1516						; size = 4
tv439 = -1512						; size = 4
tv475 = -1508						; size = 4
tv437 = -1504						; size = 4
tv474 = -1500						; size = 4
tv435 = -1496						; size = 4
tv473 = -1492						; size = 4
tv433 = -1488						; size = 4
tv472 = -1484						; size = 4
tv431 = -1480						; size = 4
tv471 = -1476						; size = 4
tv429 = -1472						; size = 4
tv470 = -1468						; size = 4
tv427 = -1464						; size = 4
tv469 = -1460						; size = 4
tv425 = -1456						; size = 4
tv468 = -1452						; size = 4
tv423 = -1448						; size = 4
tv401 = -1444						; size = 4
tv421 = -1440						; size = 4
tv413 = -1436						; size = 4
tv419 = -1432						; size = 4
tv458 = -1428						; size = 4
tv417 = -1424						; size = 4
tv65 = -1420						; size = 4
_this$ = -1416						; size = 4
$T247829 = -1412					; size = 4
$T247819 = -1408					; size = 4
$T247800 = -1404					; size = 80
$T247799 = -1324					; size = 80
$T247798 = -1244					; size = 80
$T247797 = -1164					; size = 80
$T247796 = -1084					; size = 80
$T247795 = -1004					; size = 80
$T247794 = -924						; size = 80
$T247793 = -844						; size = 80
$T247792 = -764						; size = 80
$T247791 = -684						; size = 80
$T247790 = -604						; size = 80
$T247789 = -524						; size = 80
$T247788 = -444						; size = 80
$T247787 = -364						; size = 80
$T247786 = -284						; size = 80
$T247785 = -204						; size = 80
_iFaithBonusAmount$228706 = -124			; size = 4
_iHappinessBonus$228690 = -120				; size = 4
_iCapitalFoodTimes100$228665 = -116			; size = 4
_fOtherCitiesFood$228671 = -112				; size = 4
_iOtherCitiesFoodTimes100$228666 = -108			; size = 4
_fCapitalFood$228670 = -104				; size = 4
_iCultureBonusAmount$228631 = -100			; size = 4
_eTrait$ = -96						; size = 4
_strDetailedInfo$ = -92					; size = 80
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_ePlayer$ = 12						; size = 4
_bAdd$ = 16						; size = 1
_bFriends$ = 20						; size = 1
_bAllies$ = 24						; size = 1
?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z PROC ; CvMinorCivAI::GetStatusChangeDetails, COMDAT
; _this$ = ecx

; 9815 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1536				; 00000600H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T247819[ebp], 0

; 9816 : 	Localization::String strDetailedInfo;

	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 9817 : 
; 9818 : 	MinorCivTraitTypes eTrait = GetTrait();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait
	mov	DWORD PTR _eTrait$[ebp], eax

; 9819 : 
; 9820 : 	if(eTrait == MINOR_CIV_TRAIT_CULTURED)

	cmp	DWORD PTR _eTrait$[ebp], 0
	jne	$LN47@GetStatusC

; 9821 : 	{
; 9822 : 		int iCultureBonusAmount = 0;

	mov	DWORD PTR _iCultureBonusAmount$228631[ebp], 0

; 9823 : 		if (bFriends)

	movzx	eax, BYTE PTR _bFriends$[ebp]
	test	eax, eax
	je	SHORT $LN46@GetStatusC

; 9824 : 		{
; 9825 : 			iCultureBonusAmount += GetCultureFlatFriendshipBonus(ePlayer) + GetCulturePerBuildingFriendshipBonus(ePlayer);

	push	-1
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCultureFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCultureFlatFriendshipBonus
	mov	esi, eax
	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCulturePerBuildingFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCulturePerBuildingFriendshipBonus
	add	eax, DWORD PTR _iCultureBonusAmount$228631[ebp]
	add	eax, esi
	mov	DWORD PTR _iCultureBonusAmount$228631[ebp], eax
$LN46@GetStatusC:

; 9826 : 		}
; 9827 : 		if (bAllies)

	movzx	eax, BYTE PTR _bAllies$[ebp]
	test	eax, eax
	je	SHORT $LN45@GetStatusC

; 9828 : 		{
; 9829 : 			iCultureBonusAmount += GetCultureFlatAlliesBonus(ePlayer) + GetCulturePerBuildingAlliesBonus(ePlayer);

	push	-1
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCultureFlatAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCultureFlatAlliesBonus
	mov	esi, eax
	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCulturePerBuildingAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCulturePerBuildingAlliesBonus
	add	eax, DWORD PTR _iCultureBonusAmount$228631[ebp]
	add	eax, esi
	mov	DWORD PTR _iCultureBonusAmount$228631[ebp], eax
$LN45@GetStatusC:

; 9830 : 		}
; 9831 : 		if (!bAdd)

	movzx	eax, BYTE PTR _bAdd$[ebp]
	test	eax, eax
	jne	SHORT $LN44@GetStatusC

; 9832 : 		{
; 9833 : 			iCultureBonusAmount = -iCultureBonusAmount;

	mov	ecx, DWORD PTR _iCultureBonusAmount$228631[ebp]
	neg	ecx
	mov	DWORD PTR _iCultureBonusAmount$228631[ebp], ecx
$LN44@GetStatusC:

; 9834 : 		}
; 9835 : 
; 9836 : 		if(bAllies && bAdd)		// Now Allies (includes jump from nothing through Friends to Allies)

	movzx	edx, BYTE PTR _bAllies$[ebp]
	test	edx, edx
	je	SHORT $LN43@GetStatusC
	movzx	eax, BYTE PTR _bAdd$[ebp]
	test	eax, eax
	je	SHORT $LN43@GetStatusC

; 9837 : 		{
; 9838 : 			strDetailedInfo = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_NOW_ALLIES_CULTURE");

	push	OFFSET ??_C@_0CO@EANFBGLK@TXT_KEY_NOTIFICATION_MINOR_NOW_A@
	lea	ecx, DWORD PTR $T247785[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv65[ebp], eax
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv417[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR tv417[ebp]
	push	eax
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T247785[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9839 : 			strDetailedInfo << iCultureBonusAmount;

	lea	ecx, DWORD PTR _iCultureBonusAmount$228631[ebp]
	push	ecx
	lea	edx, DWORD PTR _strDetailedInfo$[ebp]
	push	edx
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8
	jmp	$LN39@GetStatusC
$LN43@GetStatusC:

; 9840 : 		}
; 9841 : 		else if(bFriends && bAdd)		// Now Friends

	movzx	eax, BYTE PTR _bFriends$[ebp]
	test	eax, eax
	je	SHORT $LN41@GetStatusC
	movzx	ecx, BYTE PTR _bAdd$[ebp]
	test	ecx, ecx
	je	SHORT $LN41@GetStatusC

; 9842 : 		{
; 9843 : 			strDetailedInfo = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_NOW_FRIENDS_CULTURE");

	push	OFFSET ??_C@_0CP@FEFFHNAL@TXT_KEY_NOTIFICATION_MINOR_NOW_F@
	lea	edx, DWORD PTR $T247786[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv458[ebp], eax
	mov	eax, DWORD PTR tv458[ebp]
	mov	DWORD PTR tv419[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv419[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T247786[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9844 : 			strDetailedInfo << iCultureBonusAmount;

	lea	edx, DWORD PTR _iCultureBonusAmount$228631[ebp]
	push	edx
	lea	eax, DWORD PTR _strDetailedInfo$[ebp]
	push	eax
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8
	jmp	SHORT $LN39@GetStatusC
$LN41@GetStatusC:

; 9845 : 		}
; 9846 : 		else if(!bAdd)		// Bonus diminished (or removed)

	movzx	ecx, BYTE PTR _bAdd$[ebp]
	test	ecx, ecx
	jne	SHORT $LN39@GetStatusC

; 9847 : 		{
; 9848 : 			strDetailedInfo = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_LOST_CULTURE");

	push	OFFSET ??_C@_0CI@NFMCAMDF@TXT_KEY_NOTIFICATION_MINOR_LOST_@
	lea	edx, DWORD PTR $T247787[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv413[ebp], eax
	mov	eax, DWORD PTR tv413[ebp]
	mov	DWORD PTR tv421[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv421[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T247787[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9849 : 			strDetailedInfo << iCultureBonusAmount;

	lea	edx, DWORD PTR _iCultureBonusAmount$228631[ebp]
	push	edx
	lea	eax, DWORD PTR _strDetailedInfo$[ebp]
	push	eax
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8
$LN39@GetStatusC:

; 9850 : 		}
; 9851 : 	}

	jmp	$LN10@GetStatusC
$LN47@GetStatusC:

; 9852 : 	else if(eTrait == MINOR_CIV_TRAIT_MILITARISTIC)

	cmp	DWORD PTR _eTrait$[ebp], 1
	jne	$LN37@GetStatusC

; 9853 : 	{
; 9854 : 		if(bAllies && bAdd)		// Now Allies (includes jump from nothing through Friends to Allies)

	movzx	ecx, BYTE PTR _bAllies$[ebp]
	test	ecx, ecx
	je	SHORT $LN36@GetStatusC
	movzx	edx, BYTE PTR _bAdd$[ebp]
	test	edx, edx
	je	SHORT $LN36@GetStatusC

; 9855 : 			strDetailedInfo = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_NOW_ALLIES_MILITARISTIC");

	push	OFFSET ??_C@_0DD@IFDIFKLF@TXT_KEY_NOTIFICATION_MINOR_NOW_A@
	lea	eax, DWORD PTR $T247788[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv401[ebp], eax
	mov	ecx, DWORD PTR tv401[ebp]
	mov	DWORD PTR tv423[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR tv423[ebp]
	push	edx
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T247788[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN30@GetStatusC
$LN36@GetStatusC:

; 9856 : 		else if(bFriends && bAdd)		// Now Friends

	movzx	eax, BYTE PTR _bFriends$[ebp]
	test	eax, eax
	je	SHORT $LN34@GetStatusC
	movzx	ecx, BYTE PTR _bAdd$[ebp]
	test	ecx, ecx
	je	SHORT $LN34@GetStatusC

; 9857 : 			strDetailedInfo = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_NOW_FRIENDS_MILITARISTIC");

	push	OFFSET ??_C@_0DE@ILCDMHMG@TXT_KEY_NOTIFICATION_MINOR_NOW_F@
	lea	edx, DWORD PTR $T247789[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv468[ebp], eax
	mov	eax, DWORD PTR tv468[ebp]
	mov	DWORD PTR tv425[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR tv425[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T247789[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN30@GetStatusC
$LN34@GetStatusC:

; 9858 : 		else if(bFriends && !bAdd)		// No longer Friends (includes drop from Allies down to nothing) - this should be before the Allies check!

	movzx	edx, BYTE PTR _bFriends$[ebp]
	test	edx, edx
	je	SHORT $LN32@GetStatusC
	movzx	eax, BYTE PTR _bAdd$[ebp]
	test	eax, eax
	jne	SHORT $LN32@GetStatusC

; 9859 : 			strDetailedInfo = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_LOST_FRIENDS_MILITARISTIC");

	push	OFFSET ??_C@_0DF@OMBGEHJN@TXT_KEY_NOTIFICATION_MINOR_LOST_@
	lea	ecx, DWORD PTR $T247790[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv469[ebp], eax
	mov	edx, DWORD PTR tv469[ebp]
	mov	DWORD PTR tv427[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR tv427[ebp]
	push	eax
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T247790[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	SHORT $LN30@GetStatusC
$LN32@GetStatusC:

; 9860 : 		else if(bAllies && !bAdd)		// No longer Allies

	movzx	ecx, BYTE PTR _bAllies$[ebp]
	test	ecx, ecx
	je	SHORT $LN30@GetStatusC
	movzx	edx, BYTE PTR _bAdd$[ebp]
	test	edx, edx
	jne	SHORT $LN30@GetStatusC

; 9861 : 			strDetailedInfo = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_LOST_ALLIES_MILITARISTIC");

	push	OFFSET ??_C@_0DE@GNPCMNCO@TXT_KEY_NOTIFICATION_MINOR_LOST_@
	lea	eax, DWORD PTR $T247791[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv470[ebp], eax
	mov	ecx, DWORD PTR tv470[ebp]
	mov	DWORD PTR tv429[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	edx, DWORD PTR tv429[ebp]
	push	edx
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T247791[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN30@GetStatusC:

; 9862 : 	}

	jmp	$LN10@GetStatusC
$LN37@GetStatusC:

; 9863 : 	else if(eTrait == MINOR_CIV_TRAIT_MARITIME)

	cmp	DWORD PTR _eTrait$[ebp], 2
	jne	$LN28@GetStatusC

; 9864 : 	{
; 9865 : 		int iCapitalFoodTimes100 = 0;

	mov	DWORD PTR _iCapitalFoodTimes100$228665[ebp], 0

; 9866 : 		int iOtherCitiesFoodTimes100 = 0;

	mov	DWORD PTR _iOtherCitiesFoodTimes100$228666[ebp], 0

; 9867 : 
; 9868 : 		if(bFriends)	// Friends bonus

	movzx	eax, BYTE PTR _bFriends$[ebp]
	test	eax, eax
	je	SHORT $LN27@GetStatusC

; 9869 : 		{
; 9870 : 			iCapitalFoodTimes100 += GetFriendsCapitalFoodBonus(ePlayer);

	push	-1
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFriendsCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetFriendsCapitalFoodBonus
	add	eax, DWORD PTR _iCapitalFoodTimes100$228665[ebp]
	mov	DWORD PTR _iCapitalFoodTimes100$228665[ebp], eax

; 9871 : 			iOtherCitiesFoodTimes100 += GetFriendsOtherCityFoodBonus(ePlayer);

	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFriendsOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetFriendsOtherCityFoodBonus
	add	eax, DWORD PTR _iOtherCitiesFoodTimes100$228666[ebp]
	mov	DWORD PTR _iOtherCitiesFoodTimes100$228666[ebp], eax
$LN27@GetStatusC:

; 9872 : 		}
; 9873 : 		if(bAllies)		// Allies bonus

	movzx	eax, BYTE PTR _bAllies$[ebp]
	test	eax, eax
	je	SHORT $LN26@GetStatusC

; 9874 : 		{
; 9875 : 			iCapitalFoodTimes100 += GetAlliesCapitalFoodBonus(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlliesCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetAlliesCapitalFoodBonus
	add	eax, DWORD PTR _iCapitalFoodTimes100$228665[ebp]
	mov	DWORD PTR _iCapitalFoodTimes100$228665[ebp], eax

; 9876 : 			iOtherCitiesFoodTimes100 += GetAlliesOtherCityFoodBonus(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAlliesOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetAlliesOtherCityFoodBonus
	add	eax, DWORD PTR _iOtherCitiesFoodTimes100$228666[ebp]
	mov	DWORD PTR _iOtherCitiesFoodTimes100$228666[ebp], eax
$LN26@GetStatusC:

; 9877 : 		}
; 9878 : 
; 9879 : 		if(!bAdd)		// Flip amount of we're taking bonuses away

	movzx	eax, BYTE PTR _bAdd$[ebp]
	test	eax, eax
	jne	SHORT $LN25@GetStatusC

; 9880 : 		{
; 9881 : 			iCapitalFoodTimes100 = -iCapitalFoodTimes100;

	mov	ecx, DWORD PTR _iCapitalFoodTimes100$228665[ebp]
	neg	ecx
	mov	DWORD PTR _iCapitalFoodTimes100$228665[ebp], ecx

; 9882 : 			iOtherCitiesFoodTimes100 = -iOtherCitiesFoodTimes100;

	mov	edx, DWORD PTR _iOtherCitiesFoodTimes100$228666[ebp]
	neg	edx
	mov	DWORD PTR _iOtherCitiesFoodTimes100$228666[ebp], edx
$LN25@GetStatusC:

; 9883 : 		}
; 9884 : 
; 9885 : 		// Now that we've changed the gameplay, add together the two so the DISPLAY looks right
; 9886 : 		iCapitalFoodTimes100 += iOtherCitiesFoodTimes100;

	mov	eax, DWORD PTR _iCapitalFoodTimes100$228665[ebp]
	add	eax, DWORD PTR _iOtherCitiesFoodTimes100$228666[ebp]
	mov	DWORD PTR _iCapitalFoodTimes100$228665[ebp], eax

; 9887 : 		float fCapitalFood = float(iCapitalFoodTimes100) / 100;

	cvtsi2ss xmm0, DWORD PTR _iCapitalFoodTimes100$228665[ebp]
	divss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _fCapitalFood$228670[ebp], xmm0

; 9888 : 		float fOtherCitiesFood = float(iOtherCitiesFoodTimes100) / 100;

	cvtsi2ss xmm0, DWORD PTR _iOtherCitiesFoodTimes100$228666[ebp]
	divss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _fOtherCitiesFood$228671[ebp], xmm0

; 9889 : 		//iCapitalFood += iOtherCitiesFood;
; 9890 : 
; 9891 : 		if(bAllies && bAdd)		// Now Allies (includes jump from nothing through Friends to Allies)

	movzx	ecx, BYTE PTR _bAllies$[ebp]
	test	ecx, ecx
	je	SHORT $LN24@GetStatusC
	movzx	edx, BYTE PTR _bAdd$[ebp]
	test	edx, edx
	je	SHORT $LN24@GetStatusC

; 9892 : 		{
; 9893 : 			strDetailedInfo = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_NOW_ALLIES_MARITIME");

	push	OFFSET ??_C@_0CP@KKALIOMH@TXT_KEY_NOTIFICATION_MINOR_NOW_A@
	lea	eax, DWORD PTR $T247792[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv471[ebp], eax
	mov	ecx, DWORD PTR tv471[ebp]
	mov	DWORD PTR tv431[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	edx, DWORD PTR tv431[ebp]
	push	edx
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T247792[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9894 : 			strDetailedInfo << fCapitalFood << fOtherCitiesFood;

	lea	eax, DWORD PTR _fOtherCitiesFood$228671[ebp]
	push	eax
	lea	ecx, DWORD PTR _fCapitalFood$228670[ebp]
	push	ecx
	lea	edx, DWORD PTR _strDetailedInfo$[ebp]
	push	edx
	call	??$?6M@@YAAAVString@Localization@@AAV01@ABM@Z ; operator<<<float>
	add	esp, 8
	push	eax
	call	??$?6M@@YAAAVString@Localization@@AAV01@ABM@Z ; operator<<<float>
	add	esp, 8
	jmp	$LN20@GetStatusC
$LN24@GetStatusC:

; 9895 : 		}
; 9896 : 		else if(bFriends && bAdd)		// Now Friends

	movzx	eax, BYTE PTR _bFriends$[ebp]
	test	eax, eax
	je	SHORT $LN22@GetStatusC
	movzx	ecx, BYTE PTR _bAdd$[ebp]
	test	ecx, ecx
	je	SHORT $LN22@GetStatusC

; 9897 : 		{
; 9898 : 			strDetailedInfo = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_NOW_FRIENDS_MARITIME");

	push	OFFSET ??_C@_0DA@BGHJINLG@TXT_KEY_NOTIFICATION_MINOR_NOW_F@
	lea	edx, DWORD PTR $T247793[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv472[ebp], eax
	mov	eax, DWORD PTR tv472[ebp]
	mov	DWORD PTR tv433[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	ecx, DWORD PTR tv433[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T247793[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9899 : 			strDetailedInfo << fCapitalFood << fOtherCitiesFood;

	lea	edx, DWORD PTR _fOtherCitiesFood$228671[ebp]
	push	edx
	lea	eax, DWORD PTR _fCapitalFood$228670[ebp]
	push	eax
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	push	ecx
	call	??$?6M@@YAAAVString@Localization@@AAV01@ABM@Z ; operator<<<float>
	add	esp, 8
	push	eax
	call	??$?6M@@YAAAVString@Localization@@AAV01@ABM@Z ; operator<<<float>
	add	esp, 8
	jmp	SHORT $LN20@GetStatusC
$LN22@GetStatusC:

; 9900 : 		}
; 9901 : 		else if(!bAdd)		// Bonus diminished (or removed)

	movzx	edx, BYTE PTR _bAdd$[ebp]
	test	edx, edx
	jne	SHORT $LN20@GetStatusC

; 9902 : 		{
; 9903 : 			strDetailedInfo = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_LOST_MARITIME");

	push	OFFSET ??_C@_0CJ@NHJJAHGM@TXT_KEY_NOTIFICATION_MINOR_LOST_@
	lea	eax, DWORD PTR $T247794[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv473[ebp], eax
	mov	ecx, DWORD PTR tv473[ebp]
	mov	DWORD PTR tv435[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	edx, DWORD PTR tv435[ebp]
	push	edx
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T247794[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9904 : 			strDetailedInfo << fCapitalFood << fOtherCitiesFood;

	lea	eax, DWORD PTR _fOtherCitiesFood$228671[ebp]
	push	eax
	lea	ecx, DWORD PTR _fCapitalFood$228670[ebp]
	push	ecx
	lea	edx, DWORD PTR _strDetailedInfo$[ebp]
	push	edx
	call	??$?6M@@YAAAVString@Localization@@AAV01@ABM@Z ; operator<<<float>
	add	esp, 8
	push	eax
	call	??$?6M@@YAAAVString@Localization@@AAV01@ABM@Z ; operator<<<float>
	add	esp, 8
$LN20@GetStatusC:

; 9905 : 		}
; 9906 : 	}

	jmp	$LN10@GetStatusC
$LN28@GetStatusC:

; 9907 : 	else if(eTrait == MINOR_CIV_TRAIT_MERCANTILE)

	cmp	DWORD PTR _eTrait$[ebp], 3
	jne	$LN10@GetStatusC

; 9908 : 	{
; 9909 : 		int iHappinessBonus = 0;

	mov	DWORD PTR _iHappinessBonus$228690[ebp], 0

; 9910 : 
; 9911 : 		if(bFriends)	// Friends bonus

	movzx	eax, BYTE PTR _bFriends$[ebp]
	test	eax, eax
	je	SHORT $LN17@GetStatusC

; 9912 : 		{
; 9913 : 			iHappinessBonus += GetHappinessFlatFriendshipBonus(ePlayer) + GetHappinessPerLuxuryFriendshipBonus(ePlayer);

	push	-1
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetHappinessFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessFlatFriendshipBonus
	mov	esi, eax
	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetHappinessPerLuxuryFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessPerLuxuryFriendshipBonus
	add	eax, DWORD PTR _iHappinessBonus$228690[ebp]
	add	eax, esi
	mov	DWORD PTR _iHappinessBonus$228690[ebp], eax
$LN17@GetStatusC:

; 9914 : 		}
; 9915 : 		if(bAllies)		// Allies bonus

	movzx	eax, BYTE PTR _bAllies$[ebp]
	test	eax, eax
	je	SHORT $LN16@GetStatusC

; 9916 : 		{
; 9917 : 			iHappinessBonus += GetHappinessFlatAlliesBonus(ePlayer) + GetHappinessPerLuxuryAlliesBonus(ePlayer);

	push	-1
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetHappinessFlatAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessFlatAlliesBonus
	mov	esi, eax
	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetHappinessPerLuxuryAlliesBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessPerLuxuryAlliesBonus
	add	eax, DWORD PTR _iHappinessBonus$228690[ebp]
	add	eax, esi
	mov	DWORD PTR _iHappinessBonus$228690[ebp], eax
$LN16@GetStatusC:

; 9918 : 		}
; 9919 : 		if(!bAdd)		// Flip amount of we're taking bonuses away

	movzx	eax, BYTE PTR _bAdd$[ebp]
	test	eax, eax
	jne	SHORT $LN15@GetStatusC

; 9920 : 		{
; 9921 : 			iHappinessBonus = -iHappinessBonus;

	mov	ecx, DWORD PTR _iHappinessBonus$228690[ebp]
	neg	ecx
	mov	DWORD PTR _iHappinessBonus$228690[ebp], ecx
$LN15@GetStatusC:

; 9922 : 		}
; 9923 : 
; 9924 : 		if(bAllies && bAdd)		// Now Allies (includes jump from nothing through Friends to Allies)

	movzx	edx, BYTE PTR _bAllies$[ebp]
	test	edx, edx
	je	SHORT $LN14@GetStatusC
	movzx	eax, BYTE PTR _bAdd$[ebp]
	test	eax, eax
	je	SHORT $LN14@GetStatusC

; 9925 : 		{
; 9926 : 			strDetailedInfo = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_NOW_ALLIES_MERCANTILE");

	push	OFFSET ??_C@_0DB@ONNLPPGJ@TXT_KEY_NOTIFICATION_MINOR_NOW_A@
	lea	ecx, DWORD PTR $T247795[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv474[ebp], eax
	mov	edx, DWORD PTR tv474[ebp]
	mov	DWORD PTR tv437[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	eax, DWORD PTR tv437[ebp]
	push	eax
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T247795[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9927 : 			strDetailedInfo << iHappinessBonus;

	lea	ecx, DWORD PTR _iHappinessBonus$228690[ebp]
	push	ecx
	lea	edx, DWORD PTR _strDetailedInfo$[ebp]
	push	edx
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8
	jmp	$LN10@GetStatusC
$LN14@GetStatusC:

; 9928 : 		}
; 9929 : 		else if(bFriends && bAdd)		// Now Friends

	movzx	eax, BYTE PTR _bFriends$[ebp]
	test	eax, eax
	je	SHORT $LN12@GetStatusC
	movzx	ecx, BYTE PTR _bAdd$[ebp]
	test	ecx, ecx
	je	SHORT $LN12@GetStatusC

; 9930 : 		{
; 9931 : 			strDetailedInfo = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_NOW_FRIENDS_MERCANTILE");

	push	OFFSET ??_C@_0DC@ECPGFKBG@TXT_KEY_NOTIFICATION_MINOR_NOW_F@
	lea	edx, DWORD PTR $T247796[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv475[ebp], eax
	mov	eax, DWORD PTR tv475[ebp]
	mov	DWORD PTR tv439[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	ecx, DWORD PTR tv439[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T247796[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9932 : 			strDetailedInfo << iHappinessBonus;

	lea	edx, DWORD PTR _iHappinessBonus$228690[ebp]
	push	edx
	lea	eax, DWORD PTR _strDetailedInfo$[ebp]
	push	eax
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8
	jmp	SHORT $LN10@GetStatusC
$LN12@GetStatusC:

; 9933 : 		}
; 9934 : 		else if(!bAdd)		// Bonus diminished (or removed)

	movzx	ecx, BYTE PTR _bAdd$[ebp]
	test	ecx, ecx
	jne	SHORT $LN10@GetStatusC

; 9935 : 		{
; 9936 : 			strDetailedInfo = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_LOST_MERCANTILE");

	push	OFFSET ??_C@_0CL@DEEMNMFN@TXT_KEY_NOTIFICATION_MINOR_LOST_@
	lea	edx, DWORD PTR $T247797[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv476[ebp], eax
	mov	eax, DWORD PTR tv476[ebp]
	mov	DWORD PTR tv441[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	ecx, DWORD PTR tv441[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T247797[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9937 : 			strDetailedInfo << iHappinessBonus;

	lea	edx, DWORD PTR _iHappinessBonus$228690[ebp]
	push	edx
	lea	eax, DWORD PTR _strDetailedInfo$[ebp]
	push	eax
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8
$LN10@GetStatusC:

; 9938 : 		}
; 9939 : 	}
; 9940 : 
; 9941 : 	// Religious
; 9942 : 	if(eTrait == MINOR_CIV_TRAIT_RELIGIOUS)

	cmp	DWORD PTR _eTrait$[ebp], 4
	jne	$LN1@GetStatusC

; 9943 : 	{
; 9944 : 		int iFaithBonusAmount = 0;

	mov	DWORD PTR _iFaithBonusAmount$228706[ebp], 0

; 9945 : 		if (bFriends)

	movzx	ecx, BYTE PTR _bFriends$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@GetStatusC

; 9946 : 		{
; 9947 : 			iFaithBonusAmount += GetFaithFlatFriendshipBonus(ePlayer);

	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFaithFlatFriendshipBonus@CvMinorCivAI@@QBEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetFaithFlatFriendshipBonus
	add	eax, DWORD PTR _iFaithBonusAmount$228706[ebp]
	mov	DWORD PTR _iFaithBonusAmount$228706[ebp], eax
$LN8@GetStatusC:

; 9948 : 		}
; 9949 : 		if (bAllies)

	movzx	eax, BYTE PTR _bAllies$[ebp]
	test	eax, eax
	je	SHORT $LN7@GetStatusC

; 9950 : 		{
; 9951 : 			iFaithBonusAmount += GetFaithFlatAlliesBonus(ePlayer);

	push	-1
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFaithFlatAlliesBonus@CvMinorCivAI@@QBEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetFaithFlatAlliesBonus
	add	eax, DWORD PTR _iFaithBonusAmount$228706[ebp]
	mov	DWORD PTR _iFaithBonusAmount$228706[ebp], eax
$LN7@GetStatusC:

; 9952 : 		}
; 9953 : 		if (!bAdd)

	movzx	edx, BYTE PTR _bAdd$[ebp]
	test	edx, edx
	jne	SHORT $LN6@GetStatusC

; 9954 : 		{
; 9955 : 			iFaithBonusAmount = -iFaithBonusAmount;

	mov	eax, DWORD PTR _iFaithBonusAmount$228706[ebp]
	neg	eax
	mov	DWORD PTR _iFaithBonusAmount$228706[ebp], eax
$LN6@GetStatusC:

; 9956 : 		}
; 9957 : 
; 9958 : 		if(bAllies && bAdd)		// Now Allies (includes jump from nothing through Friends to Allies)

	movzx	ecx, BYTE PTR _bAllies$[ebp]
	test	ecx, ecx
	je	SHORT $LN5@GetStatusC
	movzx	edx, BYTE PTR _bAdd$[ebp]
	test	edx, edx
	je	SHORT $LN5@GetStatusC

; 9959 : 		{
; 9960 : 			strDetailedInfo = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_NOW_ALLIES_RELIGIOUS");

	push	OFFSET ??_C@_0DA@EFCJOBLE@TXT_KEY_NOTIFICATION_MINOR_NOW_A@
	lea	eax, DWORD PTR $T247798[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv477[ebp], eax
	mov	ecx, DWORD PTR tv477[ebp]
	mov	DWORD PTR tv443[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	edx, DWORD PTR tv443[ebp]
	push	edx
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T247798[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9961 : 			strDetailedInfo << iFaithBonusAmount;

	lea	eax, DWORD PTR _iFaithBonusAmount$228706[ebp]
	push	eax
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	push	ecx
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8
	jmp	$LN1@GetStatusC
$LN5@GetStatusC:

; 9962 : 		}
; 9963 : 		else if(bFriends && bAdd)		// Now Friends

	movzx	edx, BYTE PTR _bFriends$[ebp]
	test	edx, edx
	je	SHORT $LN3@GetStatusC
	movzx	eax, BYTE PTR _bAdd$[ebp]
	test	eax, eax
	je	SHORT $LN3@GetStatusC

; 9964 : 		{
; 9965 : 			strDetailedInfo = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_NOW_FRIENDS_RELIGIOUS");

	push	OFFSET ??_C@_0DB@GCJHNCBN@TXT_KEY_NOTIFICATION_MINOR_NOW_F@
	lea	ecx, DWORD PTR $T247799[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv478[ebp], eax
	mov	edx, DWORD PTR tv478[ebp]
	mov	DWORD PTR tv445[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	eax, DWORD PTR tv445[ebp]
	push	eax
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T247799[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9966 : 			strDetailedInfo << iFaithBonusAmount;

	lea	ecx, DWORD PTR _iFaithBonusAmount$228706[ebp]
	push	ecx
	lea	edx, DWORD PTR _strDetailedInfo$[ebp]
	push	edx
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8
	jmp	SHORT $LN1@GetStatusC
$LN3@GetStatusC:

; 9967 : 		}
; 9968 : 		else if(!bAdd)		// Bonus diminished (or removed)

	movzx	eax, BYTE PTR _bAdd$[ebp]
	test	eax, eax
	jne	SHORT $LN1@GetStatusC

; 9969 : 		{
; 9970 : 			strDetailedInfo = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_LOST_RELIGIOUS");

	push	OFFSET ??_C@_0CK@EFAAJFN@TXT_KEY_NOTIFICATION_MINOR_LOST_@
	lea	ecx, DWORD PTR $T247800[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv479[ebp], eax
	mov	edx, DWORD PTR tv479[ebp]
	mov	DWORD PTR tv447[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	eax, DWORD PTR tv447[ebp]
	push	eax
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T247800[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9971 : 			strDetailedInfo << iFaithBonusAmount;

	lea	ecx, DWORD PTR _iFaithBonusAmount$228706[ebp]
	push	ecx
	lea	edx, DWORD PTR _strDetailedInfo$[ebp]
	push	edx
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8
$LN1@GetStatusC:

; 9972 : 		}
; 9973 : 	}
; 9974 : 
; 9975 : 	return strDetailedInfo.toUTF8();

	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T247829[ebp], eax
	cmp	DWORD PTR $T247829[ebp], 0
	je	SHORT $LN71@GetStatusC
	mov	eax, DWORD PTR $T247829[ebp]
	mov	DWORD PTR tv460[ebp], eax
	jmp	SHORT $LN72@GetStatusC
$LN71@GetStatusC:
	mov	DWORD PTR tv460[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN72@GetStatusC:
	mov	ecx, DWORD PTR tv460[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	edx, DWORD PTR $T247819[ebp]
	or	edx, 1
	mov	DWORD PTR $T247819[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 9976 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$0:
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$1:
	lea	ecx, DWORD PTR $T247785[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$2:
	lea	ecx, DWORD PTR $T247786[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$3:
	lea	ecx, DWORD PTR $T247787[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$4:
	lea	ecx, DWORD PTR $T247788[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$5:
	lea	ecx, DWORD PTR $T247789[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$6:
	lea	ecx, DWORD PTR $T247790[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$7:
	lea	ecx, DWORD PTR $T247791[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$8:
	lea	ecx, DWORD PTR $T247792[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$9:
	lea	ecx, DWORD PTR $T247793[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$10:
	lea	ecx, DWORD PTR $T247794[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$11:
	lea	ecx, DWORD PTR $T247795[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$12:
	lea	ecx, DWORD PTR $T247796[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$13:
	lea	ecx, DWORD PTR $T247797[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$14:
	lea	ecx, DWORD PTR $T247798[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$15:
	lea	ecx, DWORD PTR $T247799[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$16:
	lea	ecx, DWORD PTR $T247800[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z$17:
	mov	eax, DWORD PTR $T247819[ebp]
	and	eax, 1
	je	$LN68@GetStatusC
	and	DWORD PTR $T247819[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
$LN68@GetStatusC:
	ret	0
__ehhandler$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1544]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z ENDP ; CvMinorCivAI::GetStatusChangeDetails
PUBLIC	??_C@_0DH@DDLMFCGP@TXT_KEY_NOTIFICATION_SUMMARY_MIN@ ; `string'
PUBLIC	??_C@_0CN@PENACDEK@TXT_KEY_NOTIFICATION_MINOR_FRIEN@ ; `string'
PUBLIC	??_C@_0DI@DFOJBBDN@TXT_KEY_NOTIFICATION_SUMMARY_MIN@ ; `string'
PUBLIC	??_C@_0CJ@BKLINDDF@TXT_KEY_NOTIFICATION_MINOR_ALLIE@ ; `string'
PUBLIC	??_C@_0DG@GJFACJH@TXT_KEY_NOTIFICATION_SUMMARY_MIN@ ; `string'
PUBLIC	??_C@_0CH@NGGNOFHA@TXT_KEY_NOTIFICATION_MINOR_ALLIE@ ; `string'
PUBLIC	??_C@_0DC@GKJCJFIC@TXT_KEY_NOTIFICATION_SUMMARY_MIN@ ; `string'
PUBLIC	??_C@_0CM@EDJOBAIF@TXT_KEY_NOTIFICATION_MINOR_NOW_F@ ; `string'
PUBLIC	??_C@_0DM@NJNFKAGM@TXT_KEY_NOTIFICATION_MINOR_GAINE@ ; `string'
PUBLIC	??_C@_02KEGNLNML@?0?5?$AA@			; `string'
PUBLIC	??_C@_0DM@EDODENAG@TXT_KEY_NOTIFICATION_MINOR_GAINE@ ; `string'
PUBLIC	??_C@_0DB@EMFGHMAA@TXT_KEY_NOTIFICATION_SUMMARY_MIN@ ; `string'
PUBLIC	??_C@_0DC@NBOCOJAN@TXT_KEY_NOTIFICATION_MINOR_NOW_A@ ; `string'
PUBLIC	??_C@_0CL@HIGECEBM@TXT_KEY_NOTIFICATION_MINOR_NOW_A@ ; `string'
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_0DH@DDLMFCGP@TXT_KEY_NOTIFICATION_SUMMARY_MIN@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0DH@DDLMFCGP@TXT_KEY_NOTIFICATION_SUMMARY_MIN@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_MINOR_FRIENDS_STATUS_LOST', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@PENACDEK@TXT_KEY_NOTIFICATION_MINOR_FRIEN@
CONST	SEGMENT
??_C@_0CN@PENACDEK@TXT_KEY_NOTIFICATION_MINOR_FRIEN@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_FRIENDS_LOST_BASE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@DFOJBBDN@TXT_KEY_NOTIFICATION_SUMMARY_MIN@
CONST	SEGMENT
??_C@_0DI@DFOJBBDN@TXT_KEY_NOTIFICATION_SUMMARY_MIN@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_MINOR_ALLIES_STATUS_PASSED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@BKLINDDF@TXT_KEY_NOTIFICATION_MINOR_ALLIE@
CONST	SEGMENT
??_C@_0CJ@BKLINDDF@TXT_KEY_NOTIFICATION_MINOR_ALLIE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_ALLIES_PASSED', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@GJFACJH@TXT_KEY_NOTIFICATION_SUMMARY_MIN@
CONST	SEGMENT
??_C@_0DG@GJFACJH@TXT_KEY_NOTIFICATION_SUMMARY_MIN@ DB 'TXT_KEY_NOTIFICAT'
	DB	'ION_SUMMARY_MINOR_ALLIES_STATUS_LOST', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@NGGNOFHA@TXT_KEY_NOTIFICATION_MINOR_ALLIE@
CONST	SEGMENT
??_C@_0CH@NGGNOFHA@TXT_KEY_NOTIFICATION_MINOR_ALLIE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_ALLIES_LOST', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@GKJCJFIC@TXT_KEY_NOTIFICATION_SUMMARY_MIN@
CONST	SEGMENT
??_C@_0DC@GKJCJFIC@TXT_KEY_NOTIFICATION_SUMMARY_MIN@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_MINOR_FRIENDS_STATUS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@EDJOBAIF@TXT_KEY_NOTIFICATION_MINOR_NOW_F@
CONST	SEGMENT
??_C@_0CM@EDJOBAIF@TXT_KEY_NOTIFICATION_MINOR_NOW_F@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_NOW_FRIENDS_BASE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@NJNFKAGM@TXT_KEY_NOTIFICATION_MINOR_GAINE@
CONST	SEGMENT
??_C@_0DM@NJNFKAGM@TXT_KEY_NOTIFICATION_MINOR_GAINE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_GAINED_BEST_RELATIONS_BONUS_SOME', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02KEGNLNML@?0?5?$AA@
CONST	SEGMENT
??_C@_02KEGNLNML@?0?5?$AA@ DB ', ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@EDODENAG@TXT_KEY_NOTIFICATION_MINOR_GAINE@
CONST	SEGMENT
??_C@_0DM@EDODENAG@TXT_KEY_NOTIFICATION_MINOR_GAINE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_GAINED_BEST_RELATIONS_BONUS_NONE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@EMFGHMAA@TXT_KEY_NOTIFICATION_SUMMARY_MIN@
CONST	SEGMENT
??_C@_0DB@EMFGHMAA@TXT_KEY_NOTIFICATION_SUMMARY_MIN@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_MINOR_ALLIES_STATUS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@NBOCOJAN@TXT_KEY_NOTIFICATION_MINOR_NOW_A@
CONST	SEGMENT
??_C@_0DC@NBOCOJAN@TXT_KEY_NOTIFICATION_MINOR_NOW_A@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_NOW_ALLIES_BASE_PASSED', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@HIGECEBM@TXT_KEY_NOTIFICATION_MINOR_NOW_A@
CONST	SEGMENT
??_C@_0CL@HIGECEBM@TXT_KEY_NOTIFICATION_MINOR_NOW_A@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_MINOR_NOW_ALLIES_BASE', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z DD 019930522H
	DD	01cH
	DD	FLAT:__unwindtable$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$22
	DD	00H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$5
	DD	06H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$6
	DD	07H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$8
	DD	09H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$9
	DD	02H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$10
	DD	02H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$11
	DD	02H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$12
	DD	02H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$13
	DD	02H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$14
	DD	02H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$15
	DD	02H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$16
	DD	02H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$17
	DD	02H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$18
	DD	013H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$19
	DD	014H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$20
	DD	015H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$29
	DD	015H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$21
	DD	014H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$21
	DD	013H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$21
	DD	019H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$35
	DD	013H
	DD	FLAT:__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$39
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z
_TEXT	SEGMENT
tv663 = -2020						; size = 4
tv645 = -2016						; size = 4
tv473 = -2012						; size = 4
tv782 = -2008						; size = 4
tv471 = -2004						; size = 4
tv483 = -2000						; size = 4
tv469 = -1996						; size = 4
tv549 = -1992						; size = 4
tv467 = -1988						; size = 4
tv592 = -1984						; size = 4
tv465 = -1980						; size = 4
tv661 = -1976						; size = 4
tv463 = -1972						; size = 4
tv687 = -1968						; size = 4
tv461 = -1964						; size = 4
tv702 = -1960						; size = 4
tv459 = -1956						; size = 4
tv738 = -1952						; size = 4
tv457 = -1948						; size = 4
tv167 = -1944						; size = 4
tv254 = -1940						; size = 4
tv509 = -1936						; size = 4
tv454 = -1932						; size = 4
tv195 = -1928						; size = 4
tv450 = -1924						; size = 4
tv753 = -1920						; size = 4
tv448 = -1916						; size = 4
tv65 = -1912						; size = 4
tv446 = -1908						; size = 4
tv68 = -1904						; size = 4
_this$ = -1900						; size = 4
$T248077 = -1896					; size = 4
$T248063 = -1892					; size = 4
$T248037 = -1888					; size = 4
$T248025 = -1884					; size = 4
$T248016 = -1880					; size = 4
$T248007 = -1876					; size = 4
$T247995 = -1872					; size = 4
$T247960 = -1856					; size = 4
$T247956 = -1852					; size = 4
$T247944 = -1848					; size = 4
$T247943 = -1844					; size = 4
$T247939 = -1840					; size = 4
$T247916 = -1824					; size = 4
$T247904 = -1820					; size = 4
$T247897 = -1816					; size = 4
$T247888 = -1812					; size = 4
$T247883 = -1808					; size = 4
$T247859 = -1804					; size = 28
$T247858 = -1776					; size = 28
$T247857 = -1748					; size = 4
$T247856 = -1744					; size = 4
$T247855 = -1740					; size = 80
$T247854 = -1660					; size = 80
$T247853 = -1580					; size = 80
$T247852 = -1500					; size = 80
$T247851 = -1420					; size = 80
$T247850 = -1340					; size = 80
$T247849 = -1260					; size = 80
$T247848 = -1180					; size = 80
$T247847 = -1100					; size = 4
$T247846 = -1096					; size = 4
$T247845 = -1092					; size = 80
$T247844 = -1012					; size = 80
$T247843 = -932						; size = 80
$T247842 = -852						; size = 80
$T247841 = -772						; size = 80
_strNewBestPlayersNameKey$228796 = -692			; size = 4
_eNewAllyTeam$228797 = -688				; size = 4
_i$228773 = -684					; size = 4
_strResourceNames$228772 = -680				; size = 28
_pkResourceInfo$228763 = -652				; size = 4
_iResourceLoop$228757 = -648				; size = 4
_strOldBestPlayersNameKey$228744 = -644			; size = 4
_eOldAllyTeam$228745 = -640				; size = 4
_iResourceQuantity$228756 = -636			; size = 4
_eUsage$228755 = -632					; size = 4
_strResourceDetails$228767 = -628			; size = 80
_veResources$228753 = -548				; size = 272
_iNumResourceTypes$228751 = -276			; size = 4
_eResource$228754 = -272				; size = 4
_pTeam$ = -268						; size = 4
_strMinorsNameKey$ = -264				; size = 4
_notifStrings$ = -260					; size = 56
_strDetailedInfo$ = -204				; size = 28
__$ArrayPad$ = -176					; size = 4
_strMessage$ = -172					; size = 80
_strSummary$ = -92					; size = 80
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_ePlayer$ = 12						; size = 4
_bAdd$ = 16						; size = 1
_bFriends$ = 20						; size = 1
_bAllies$ = 24						; size = 1
_eOldAlly$ = 28						; size = 4
_eNewAlly$ = 32						; size = 4
?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z PROC ; CvMinorCivAI::GetStatusChangeNotificationStrings, COMDAT
; _this$ = ecx

; 9979 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 2008				; 000007d8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T247883[ebp], 0

; 9980 : 	Localization::String strMessage;

	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 9981 : 	Localization::String strSummary;

	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 9982 : 
; 9983 : 	CvTeam* pTeam = &GET_TEAM(GET_PLAYER(ePlayer).getTeam());

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247888[ebp], eax
	mov	ecx, DWORD PTR $T247888[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T247897[ebp], eax
	mov	eax, DWORD PTR $T247897[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _pTeam$[ebp], eax

; 9984 : 	CvAssertMsg(pTeam, "pTeam not expected to be NULL. Please send Anton your save file and version.");
; 9985 : 
; 9986 : 	const char* strMinorsNameKey = GetPlayer()->getNameKey();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR _strMinorsNameKey$[ebp], eax

; 9987 : 
; 9988 : 	// Adding/Increasing bonus
; 9989 : 	if(bAdd)

	movzx	ecx, BYTE PTR _bAdd$[ebp]
	test	ecx, ecx
	je	$LN26@GetStatusC@2

; 9990 : 	{
; 9991 : 		// Jumped up to Allies (either from Neutral or from Friends, or passing another player)
; 9992 : 		if(bAllies)

	movzx	edx, BYTE PTR _bAllies$[ebp]
	test	edx, edx
	je	$LN25@GetStatusC@2

; 9993 : 		{
; 9994 : 			// BASE ALLIES MESSAGE
; 9995 : 
; 9996 : 			// No previous Ally (or it was us)
; 9997 : 			if(eOldAlly == NO_PLAYER || eOldAlly == ePlayer)

	cmp	DWORD PTR _eOldAlly$[ebp], -1
	je	SHORT $LN23@GetStatusC@2
	mov	eax, DWORD PTR _eOldAlly$[ebp]
	cmp	eax, DWORD PTR _ePlayer$[ebp]
	jne	SHORT $LN24@GetStatusC@2
$LN23@GetStatusC@2:

; 9998 : 			{
; 9999 : 				strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_NOW_ALLIES_BASE");

	push	OFFSET ??_C@_0CL@HIGECEBM@TXT_KEY_NOTIFICATION_MINOR_NOW_A@
	lea	ecx, DWORD PTR $T247841[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv68[ebp], eax
	mov	edx, DWORD PTR tv68[ebp]
	mov	DWORD PTR tv446[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv446[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T247841[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10000: 			}
; 10001: 			// We're passing someone
; 10002: 			else

	jmp	$LN22@GetStatusC@2
$LN24@GetStatusC@2:

; 10003: 			{
; 10004: 				CvAssertMsg(eOldAlly != NO_PLAYER, "eOldAlly not expected to be NO_PLAYER here. Please send Anton your save file and version.");
; 10005: 				const char* strOldBestPlayersNameKey = "TXT_KEY_UNMET_PLAYER";

	mov	DWORD PTR _strOldBestPlayersNameKey$228744[ebp], OFFSET ??_C@_0BF@MGALNDKL@TXT_KEY_UNMET_PLAYER?$AA@

; 10006: 				TeamTypes eOldAllyTeam = GET_PLAYER(eOldAlly).getTeam();

	mov	ecx, DWORD PTR _eOldAlly$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247904[ebp], ecx
	mov	edx, DWORD PTR $T247904[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR _eOldAllyTeam$228745[ebp], eax

; 10007: 				if(pTeam->isHasMet(eOldAllyTeam))

	mov	ecx, DWORD PTR _eOldAllyTeam$228745[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pTeam$[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN21@GetStatusC@2

; 10008: 					strOldBestPlayersNameKey = GET_PLAYER(eOldAlly).getCivilizationShortDescriptionKey();

	mov	eax, DWORD PTR _eOldAlly$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247916[ebp], eax
	mov	ecx, DWORD PTR $T247916[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR _strOldBestPlayersNameKey$228744[ebp], eax
$LN21@GetStatusC@2:

; 10009: 
; 10010: 				strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_NOW_ALLIES_BASE_PASSED");

	push	OFFSET ??_C@_0DC@NBOCOJAN@TXT_KEY_NOTIFICATION_MINOR_NOW_A@
	lea	ecx, DWORD PTR $T247842[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv65[ebp], eax
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv448[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR tv448[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T247842[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10011: 				strMessage << strOldBestPlayersNameKey;

	lea	ecx, DWORD PTR _strOldBestPlayersNameKey$228744[ebp]
	push	ecx
	lea	edx, DWORD PTR _strMessage$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
$LN22@GetStatusC@2:

; 10012: 			}
; 10013: 
; 10014: 			strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_MINOR_ALLIES_STATUS");

	push	OFFSET ??_C@_0DB@EMFGHMAA@TXT_KEY_NOTIFICATION_SUMMARY_MIN@
	lea	eax, DWORD PTR $T247843[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv753[ebp], eax
	mov	ecx, DWORD PTR tv753[ebp]
	mov	DWORD PTR tv450[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR tv450[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T247843[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10015: 
; 10016: 			// Build Resource info
; 10017: 			int iNumResourceTypes = 0;

	mov	DWORD PTR _iNumResourceTypes$228751[ebp], 0

; 10018: 			FStaticVector<ResourceTypes, 64, true, c_eCiv5GameplayDLL, 0> veResources;

	lea	ecx, DWORD PTR _veResources$228753[ebp]
	call	??0?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum ResourceTypes,64,1,297,0>::FStaticVector<enum ResourceTypes,64,1,297,0>
	mov	BYTE PTR __$EHRec$[ebp+8], 6

; 10019: 			ResourceTypes eResource;
; 10020: 			ResourceUsageTypes eUsage;
; 10021: 			int iResourceQuantity;
; 10022: #ifdef AUI_WARNING_FIXES
; 10023: 			for (uint iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)
; 10024: #else
; 10025: 			for(int iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)

	mov	DWORD PTR _iResourceLoop$228757[ebp], 0
	jmp	SHORT $LN20@GetStatusC@2
$LN19@GetStatusC@2:
	mov	eax, DWORD PTR _iResourceLoop$228757[ebp]
	add	eax, 1
	mov	DWORD PTR _iResourceLoop$228757[ebp], eax
$LN20@GetStatusC@2:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	cmp	DWORD PTR _iResourceLoop$228757[ebp], eax
	jge	$LN18@GetStatusC@2

; 10026: #endif
; 10027: 			{
; 10028: 				eResource = (ResourceTypes) iResourceLoop;

	mov	ecx, DWORD PTR _iResourceLoop$228757[ebp]
	mov	DWORD PTR _eResource$228754[ebp], ecx

; 10029: 				iResourceQuantity = GetPlayer()->getNumResourceTotal(eResource);

	push	1
	mov	edx, DWORD PTR _eResource$228754[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNumResourceTotal@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceTotal
	mov	DWORD PTR _iResourceQuantity$228756[ebp], eax

; 10030: 
; 10031: 				if(iResourceQuantity > 0)

	cmp	DWORD PTR _iResourceQuantity$228756[ebp], 0
	jle	SHORT $LN17@GetStatusC@2

; 10032: 				{
; 10033: 					const CvResourceInfo* pkResourceInfo = GC.getResourceInfo(eResource);					

	mov	eax, DWORD PTR _eResource$228754[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	DWORD PTR _pkResourceInfo$228763[ebp], eax

; 10034: 					if (pkResourceInfo != NULL)

	cmp	DWORD PTR _pkResourceInfo$228763[ebp], 0
	je	SHORT $LN17@GetStatusC@2

; 10035: 					{
; 10036: 						eUsage = GC.getResourceInfo(eResource)->getResourceUsage();

	mov	ecx, DWORD PTR _eResource$228754[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	ecx, eax
	call	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ ; CvResourceInfo::getResourceUsage
	mov	DWORD PTR _eUsage$228755[ebp], eax

; 10037: 
; 10038: 						if(eUsage == RESOURCEUSAGE_STRATEGIC || eUsage == RESOURCEUSAGE_LUXURY)

	cmp	DWORD PTR _eUsage$228755[ebp], 1
	je	SHORT $LN14@GetStatusC@2
	cmp	DWORD PTR _eUsage$228755[ebp], 2
	jne	SHORT $LN17@GetStatusC@2
$LN14@GetStatusC@2:

; 10039: 						{
; 10040: 							veResources.push_back(eResource);

	lea	edx, DWORD PTR _eResource$228754[ebp]
	push	edx
	lea	ecx, DWORD PTR _veResources$228753[ebp]
	call	?push_back@?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAEIABW4ResourceTypes@@@Z ; FStaticVector<enum ResourceTypes,64,1,297,0>::push_back

; 10041: 							iNumResourceTypes++;

	mov	eax, DWORD PTR _iNumResourceTypes$228751[ebp]
	add	eax, 1
	mov	DWORD PTR _iNumResourceTypes$228751[ebp], eax
$LN17@GetStatusC@2:

; 10042: 						}
; 10043: 					}
; 10044: 				}
; 10045: 			}

	jmp	$LN19@GetStatusC@2
$LN18@GetStatusC@2:

; 10046: 			// APPEND RESOURCE INFO
; 10047: 			Localization::String strResourceDetails;

	lea	ecx, DWORD PTR _strResourceDetails$228767[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 7

; 10048: 			if(iNumResourceTypes == 0)

	cmp	DWORD PTR _iNumResourceTypes$228751[ebp], 0
	jne	SHORT $LN13@GetStatusC@2

; 10049: 			{
; 10050: 				strResourceDetails = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_GAINED_BEST_RELATIONS_BONUS_NONE");

	push	OFFSET ??_C@_0DM@EDODENAG@TXT_KEY_NOTIFICATION_MINOR_GAINE@
	lea	ecx, DWORD PTR $T247844[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv195[ebp], eax
	mov	edx, DWORD PTR tv195[ebp]
	mov	DWORD PTR tv454[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	eax, DWORD PTR tv454[ebp]
	push	eax
	lea	ecx, DWORD PTR _strResourceDetails$228767[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T247844[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10051: 				strResourceDetails << strMinorsNameKey;

	lea	ecx, DWORD PTR _strMinorsNameKey$[ebp]
	push	ecx
	lea	edx, DWORD PTR _strResourceDetails$228767[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 10052: 			}
; 10053: 			else

	jmp	$LN12@GetStatusC@2
$LN13@GetStatusC@2:

; 10054: 			{
; 10055: 				CvString strResourceNames = GC.getResourceInfo(veResources[0])->GetDescription();

	xor	eax, eax
	shl	eax, 2
	add	eax, DWORD PTR _veResources$228753[ebp]
	mov	DWORD PTR $T247939[ebp], eax
	mov	ecx, DWORD PTR $T247939[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	DWORD PTR $T247943[ebp], eax
	mov	ecx, DWORD PTR $T247943[ebp]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T247944[ebp], eax
	cmp	DWORD PTR $T247944[ebp], 0
	je	SHORT $LN91@GetStatusC@2
	mov	eax, DWORD PTR $T247944[ebp]
	mov	DWORD PTR tv509[ebp], eax
	jmp	SHORT $LN92@GetStatusC@2
$LN91@GetStatusC@2:
	mov	DWORD PTR tv509[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN92@GetStatusC@2:
	mov	ecx, DWORD PTR tv509[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strResourceNames$228772[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 9

; 10056: 				int i = 1;

	mov	DWORD PTR _i$228773[ebp], 1
$LN11@GetStatusC@2:

; 10057: 				while(i < iNumResourceTypes)

	mov	edx, DWORD PTR _i$228773[ebp]
	cmp	edx, DWORD PTR _iNumResourceTypes$228751[ebp]
	jge	SHORT $LN10@GetStatusC@2

; 10058: 				{
; 10059: 					strResourceNames += ", ";

	push	OFFSET ??_C@_02KEGNLNML@?0?5?$AA@
	lea	ecx, DWORD PTR _strResourceNames$228772[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 10060: 					strResourceNames += GC.getResourceInfo(veResources[i++])->GetDescription();

	mov	eax, DWORD PTR _i$228773[ebp]
	mov	DWORD PTR $T247956[ebp], eax
	mov	ecx, DWORD PTR $T247956[ebp]
	mov	edx, DWORD PTR _veResources$228753[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR tv254[ebp], eax
	mov	ecx, DWORD PTR tv254[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	DWORD PTR $T247960[ebp], eax
	mov	edx, DWORD PTR _i$228773[ebp]
	add	edx, 1
	mov	DWORD PTR _i$228773[ebp], edx
	mov	ecx, DWORD PTR $T247960[ebp]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strResourceNames$228772[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 10061: 				}

	jmp	$LN11@GetStatusC@2
$LN10@GetStatusC@2:

; 10062: 
; 10063: 				strResourceDetails = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_GAINED_BEST_RELATIONS_BONUS_SOME");

	push	OFFSET ??_C@_0DM@NJNFKAGM@TXT_KEY_NOTIFICATION_MINOR_GAINE@
	lea	eax, DWORD PTR $T247845[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv167[ebp], eax
	mov	ecx, DWORD PTR tv167[ebp]
	mov	DWORD PTR tv457[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	edx, DWORD PTR tv457[ebp]
	push	edx
	lea	ecx, DWORD PTR _strResourceDetails$228767[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T247845[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10064: 				strResourceDetails << strResourceNames.c_str();

	lea	ecx, DWORD PTR _strResourceNames$228772[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T247846[ebp], eax
	lea	eax, DWORD PTR $T247846[ebp]
	push	eax
	lea	ecx, DWORD PTR _strResourceDetails$228767[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 10065: 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR _strResourceNames$228772[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN12@GetStatusC@2:

; 10066: 			strMessage << strResourceDetails.toUTF8();

	lea	ecx, DWORD PTR _strResourceDetails$228767[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T247847[ebp], eax
	lea	edx, DWORD PTR $T247847[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 10067: 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _strResourceDetails$228767[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _veResources$228753[ebp]
	call	??1?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum ResourceTypes,64,1,297,0>::~FStaticVector<enum ResourceTypes,64,1,297,0>
	jmp	$LN9@GetStatusC@2
$LN25@GetStatusC@2:

; 10068: 		// Went from Neutral to Friends
; 10069: 		else if(bFriends)

	movzx	ecx, BYTE PTR _bFriends$[ebp]
	test	ecx, ecx
	je	$LN9@GetStatusC@2

; 10070: 		{
; 10071: 			strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_NOW_FRIENDS_BASE");

	push	OFFSET ??_C@_0CM@EDJOBAIF@TXT_KEY_NOTIFICATION_MINOR_NOW_F@
	lea	edx, DWORD PTR $T247848[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv738[ebp], eax
	mov	eax, DWORD PTR tv738[ebp]
	mov	DWORD PTR tv459[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	ecx, DWORD PTR tv459[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T247848[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10072: 			strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_MINOR_FRIENDS_STATUS");

	push	OFFSET ??_C@_0DC@GKJCJFIC@TXT_KEY_NOTIFICATION_SUMMARY_MIN@
	lea	edx, DWORD PTR $T247849[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv702[ebp], eax
	mov	eax, DWORD PTR tv702[ebp]
	mov	DWORD PTR tv461[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	ecx, DWORD PTR tv461[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T247849[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN9@GetStatusC@2:

; 10073: 		}
; 10074: 	}
; 10075: 	// Removing/Reducing bonus
; 10076: 	else

	jmp	$LN7@GetStatusC@2
$LN26@GetStatusC@2:

; 10077: 	{
; 10078: 		// Dropped from Allies
; 10079: 		if(bAllies)

	movzx	edx, BYTE PTR _bAllies$[ebp]
	test	edx, edx
	je	$LN6@GetStatusC@2

; 10080: 		{
; 10081: 			// Normal friendship decay
; 10082: 			if(eNewAlly == NO_PLAYER)

	cmp	DWORD PTR _eNewAlly$[ebp], -1
	jne	$LN5@GetStatusC@2

; 10083: 			{
; 10084: 				strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_ALLIES_LOST");

	push	OFFSET ??_C@_0CH@NGGNOFHA@TXT_KEY_NOTIFICATION_MINOR_ALLIE@
	lea	eax, DWORD PTR $T247850[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv687[ebp], eax
	mov	ecx, DWORD PTR tv687[ebp]
	mov	DWORD PTR tv463[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	edx, DWORD PTR tv463[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T247850[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10085: 				strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_MINOR_ALLIES_STATUS_LOST");

	push	OFFSET ??_C@_0DG@GJFACJH@TXT_KEY_NOTIFICATION_SUMMARY_MIN@
	lea	eax, DWORD PTR $T247851[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv661[ebp], eax
	mov	ecx, DWORD PTR tv661[ebp]
	mov	DWORD PTR tv465[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	edx, DWORD PTR tv465[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T247851[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10086: 			}
; 10087: 			// Someone passed us up
; 10088: 			else

	jmp	$LN4@GetStatusC@2
$LN5@GetStatusC@2:

; 10089: 			{
; 10090: 				CvAssertMsg(eNewAlly != NO_PLAYER, "eNewAlly not expected to be NO_PLAYER here. Please send Anton your save file and version.");
; 10091: 				CvAssertMsg(eNewAlly != ePlayer, "eNewAlly not expected to be same as ePlayer here. Please send Anton your save file and version.");
; 10092: 				const char* strNewBestPlayersNameKey = "TXT_KEY_UNMET_PLAYER";

	mov	DWORD PTR _strNewBestPlayersNameKey$228796[ebp], OFFSET ??_C@_0BF@MGALNDKL@TXT_KEY_UNMET_PLAYER?$AA@

; 10093: 				TeamTypes eNewAllyTeam = GET_PLAYER(eNewAlly).getTeam();

	mov	eax, DWORD PTR _eNewAlly$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247995[ebp], eax
	mov	ecx, DWORD PTR $T247995[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR _eNewAllyTeam$228797[ebp], eax

; 10094: 				if(pTeam->isHasMet(eNewAllyTeam))

	mov	eax, DWORD PTR _eNewAllyTeam$228797[ebp]
	push	eax
	mov	ecx, DWORD PTR _pTeam$[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@GetStatusC@2

; 10095: 					strNewBestPlayersNameKey = GET_PLAYER(eNewAlly).getCivilizationShortDescriptionKey();

	mov	edx, DWORD PTR _eNewAlly$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T248007[ebp], edx
	mov	ecx, DWORD PTR $T248007[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR _strNewBestPlayersNameKey$228796[ebp], eax
$LN3@GetStatusC@2:

; 10096: 
; 10097: 				strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_ALLIES_PASSED");

	push	OFFSET ??_C@_0CJ@BKLINDDF@TXT_KEY_NOTIFICATION_MINOR_ALLIE@
	lea	eax, DWORD PTR $T247852[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv592[ebp], eax
	mov	ecx, DWORD PTR tv592[ebp]
	mov	DWORD PTR tv467[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	edx, DWORD PTR tv467[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T247852[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10098: 				strMessage << strNewBestPlayersNameKey;

	lea	eax, DWORD PTR _strNewBestPlayersNameKey$228796[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 10099: 				strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_MINOR_ALLIES_STATUS_PASSED");

	push	OFFSET ??_C@_0DI@DFOJBBDN@TXT_KEY_NOTIFICATION_SUMMARY_MIN@
	lea	edx, DWORD PTR $T247853[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv549[ebp], eax
	mov	eax, DWORD PTR tv549[ebp]
	mov	DWORD PTR tv469[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	ecx, DWORD PTR tv469[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T247853[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10100: 				strSummary << strNewBestPlayersNameKey;

	lea	edx, DWORD PTR _strNewBestPlayersNameKey$228796[ebp]
	push	edx
	lea	eax, DWORD PTR _strSummary$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
$LN4@GetStatusC@2:

; 10101: 			}

	jmp	$LN7@GetStatusC@2
$LN6@GetStatusC@2:

; 10102: 		}
; 10103: 		// Dropped down to Neutral from Friends (case of Allies down to Neutral not handled well... let's hope it doesn't happen often!)
; 10104: 		else if(bFriends)

	movzx	ecx, BYTE PTR _bFriends$[ebp]
	test	ecx, ecx
	je	$LN7@GetStatusC@2

; 10105: 		{
; 10106: 			strMessage = Localization::Lookup("TXT_KEY_NOTIFICATION_MINOR_FRIENDS_LOST_BASE");

	push	OFFSET ??_C@_0CN@PENACDEK@TXT_KEY_NOTIFICATION_MINOR_FRIEN@
	lea	edx, DWORD PTR $T247854[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv483[ebp], eax
	mov	eax, DWORD PTR tv483[ebp]
	mov	DWORD PTR tv471[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	ecx, DWORD PTR tv471[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T247854[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10107: 			strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_MINOR_FRIENDS_STATUS_LOST");

	push	OFFSET ??_C@_0DH@DDLMFCGP@TXT_KEY_NOTIFICATION_SUMMARY_MIN@
	lea	edx, DWORD PTR $T247855[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv782[ebp], eax
	mov	eax, DWORD PTR tv782[ebp]
	mov	DWORD PTR tv473[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	mov	ecx, DWORD PTR tv473[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T247855[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN7@GetStatusC@2:

; 10108: 		}
; 10109: 	}
; 10110: 
; 10111: 	CvString strDetailedInfo = GetStatusChangeDetails(ePlayer, bAdd, bFriends, bAllies);

	movzx	edx, BYTE PTR _bAllies$[ebp]
	push	edx
	movzx	eax, BYTE PTR _bFriends$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bAdd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	lea	eax, DWORD PTR _strDetailedInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetStatusChangeDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@_N11@Z ; CvMinorCivAI::GetStatusChangeDetails
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H

; 10112: 	strMessage << GetPlayer()->getNameKey() << strDetailedInfo;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T247856[ebp], eax
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T247856[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	push	eax
	call	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
	add	esp, 8

; 10113: 	strSummary << GetPlayer()->getNameKey();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvMinorCivAI@@QAEPAVCvPlayer@@XZ ; CvMinorCivAI::GetPlayer
	mov	ecx, eax
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	mov	DWORD PTR $T247857[ebp], eax
	lea	ecx, DWORD PTR $T247857[ebp]
	push	ecx
	lea	edx, DWORD PTR _strSummary$[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 10114: 
; 10115: 	pair<CvString, CvString> notifStrings = pair<CvString, CvString>(strMessage.toUTF8(), strSummary.toUTF8());

	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T248016[ebp], eax
	cmp	DWORD PTR $T248016[ebp], 0
	je	SHORT $LN126@GetStatusC@2
	mov	eax, DWORD PTR $T248016[ebp]
	mov	DWORD PTR tv645[ebp], eax
	jmp	SHORT $LN127@GetStatusC@2
$LN126@GetStatusC@2:
	mov	DWORD PTR tv645[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN127@GetStatusC@2:
	mov	ecx, DWORD PTR tv645[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T247858[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T248025[ebp], eax
	cmp	DWORD PTR $T248025[ebp], 0
	je	SHORT $LN131@GetStatusC@2
	mov	edx, DWORD PTR $T248025[ebp]
	mov	DWORD PTR tv663[ebp], edx
	jmp	SHORT $LN132@GetStatusC@2
$LN131@GetStatusC@2:
	mov	DWORD PTR tv663[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN132@GetStatusC@2:
	mov	eax, DWORD PTR tv663[ebp]
	push	eax
	lea	ecx, DWORD PTR $T247859[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	lea	ecx, DWORD PTR $T247859[ebp]
	push	ecx
	lea	ecx, DWORD PTR _notifStrings$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	lea	edx, DWORD PTR _notifStrings$[ebp+28]
	mov	DWORD PTR $T248037[ebp], edx
	lea	eax, DWORD PTR $T247858[ebp]
	push	eax
	mov	ecx, DWORD PTR $T248037[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	lea	ecx, DWORD PTR $T247859[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	lea	ecx, DWORD PTR $T247858[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 10116: 	return notifStrings;

	lea	ecx, DWORD PTR _notifStrings$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR $T248063[ebp], edx
	lea	eax, DWORD PTR _notifStrings$[ebp+28]
	push	eax
	mov	ecx, DWORD PTR $T248063[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	mov	ecx, DWORD PTR $T247883[ebp]
	or	ecx, 1
	mov	DWORD PTR $T247883[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	lea	edx, DWORD PTR _notifStrings$[ebp+28]
	mov	DWORD PTR $T248077[ebp], edx
	mov	ecx, DWORD PTR $T248077[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	lea	ecx, DWORD PTR _notifStrings$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 10117: }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$0:
	lea	ecx, DWORD PTR _strMessage$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$1:
	lea	ecx, DWORD PTR _strSummary$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$2:
	lea	ecx, DWORD PTR $T247841[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$3:
	lea	ecx, DWORD PTR $T247842[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$4:
	lea	ecx, DWORD PTR $T247843[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$5:
	lea	ecx, DWORD PTR _veResources$228753[ebp]
	jmp	??1?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum ResourceTypes,64,1,297,0>::~FStaticVector<enum ResourceTypes,64,1,297,0>
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$6:
	lea	ecx, DWORD PTR _strResourceDetails$228767[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$7:
	lea	ecx, DWORD PTR $T247844[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$8:
	lea	ecx, DWORD PTR _strResourceNames$228772[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$9:
	lea	ecx, DWORD PTR $T247845[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$10:
	lea	ecx, DWORD PTR $T247848[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$11:
	lea	ecx, DWORD PTR $T247849[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$12:
	lea	ecx, DWORD PTR $T247850[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$13:
	lea	ecx, DWORD PTR $T247851[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$14:
	lea	ecx, DWORD PTR $T247852[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$15:
	lea	ecx, DWORD PTR $T247853[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$16:
	lea	ecx, DWORD PTR $T247854[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$17:
	lea	ecx, DWORD PTR $T247855[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$18:
	lea	ecx, DWORD PTR _strDetailedInfo$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$19:
	lea	ecx, DWORD PTR $T247858[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$20:
	lea	ecx, DWORD PTR $T247859[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$29:
	lea	ecx, DWORD PTR _notifStrings$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$21:
	lea	ecx, DWORD PTR _notifStrings$[ebp]
	jmp	??1?$pair@VCvString@@V1@@std@@QAE@XZ
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$35:
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$22:
	mov	eax, DWORD PTR $T247883[ebp]
	and	eax, 1
	je	$LN52@GetStatusC@2
	and	DWORD PTR $T247883[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$pair@VCvString@@V1@@std@@QAE@XZ
$LN52@GetStatusC@2:
	ret	0
__unwindfunclet$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z$39:
	lea	ecx, DWORD PTR _notifStrings$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-2012]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-164]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetStatusChangeNotificationStrings@CvMinorCivAI@@QAE?AU?$pair@VCvString@@V1@@std@@W4PlayerTypes@@_N1100@Z ENDP ; CvMinorCivAI::GetStatusChangeNotificationStrings
PUBLIC	??_C@_09ODCIJKAA@?$FLNEWLINE?$FN?$AA@		; `string'
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_09ODCIJKAA@?$FLNEWLINE?$FN?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_09ODCIJKAA@?$FLNEWLINE?$FN?$AA@ DB '[NEWLINE]', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z$3
	DD	04H
	DD	FLAT:__unwindfunclet$?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z$4
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z
_TEXT	SEGMENT
tv198 = -244						; size = 4
tv164 = -240						; size = 4
tv130 = -236						; size = 4
tv180 = -232						; size = 4
_this$ = -228						; size = 4
$T248136 = -212						; size = 4
$T248126 = -208						; size = 4
$T248122 = -204						; size = 4
$T248109 = -200						; size = 4
$T248102 = -196						; size = 28
$T248101 = -168						; size = 28
_sName$228838 = -140					; size = 80
_pPlayerLoop$228836 = -56				; size = 4
_ePlayerLoop$228835 = -52				; size = 4
_ui$228831 = -48					; size = 4
_s$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_veNames$ = 12						; size = 272
?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z PROC ; CvMinorCivAI::GetNamesListAsString, COMDAT
; _this$ = ecx

; 10121: {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T248109[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 10122: 	CvString s = "";

	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
	test	eax, eax
	je	SHORT $LN17@GetNamesLi
	mov	DWORD PTR tv180[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	SHORT $LN18@GetNamesLi
$LN17@GetNamesLi:
	mov	DWORD PTR tv180[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN18@GetNamesLi:
	mov	ecx, DWORD PTR tv180[ebp]
	push	ecx
	lea	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 10123: 	if (veNames.size() > 0)

	mov	edx, DWORD PTR _veNames$[ebp+4]
	mov	DWORD PTR $T248122[ebp], edx
	cmp	DWORD PTR $T248122[ebp], 0
	jbe	$LN5@GetNamesLi

; 10124: 	{
; 10125: 		for (uint ui = 0; ui < veNames.size(); ui++)

	mov	DWORD PTR _ui$228831[ebp], 0
	jmp	SHORT $LN4@GetNamesLi
$LN3@GetNamesLi:
	mov	eax, DWORD PTR _ui$228831[ebp]
	add	eax, 1
	mov	DWORD PTR _ui$228831[ebp], eax
$LN4@GetNamesLi:
	mov	ecx, DWORD PTR _veNames$[ebp+4]
	mov	DWORD PTR $T248126[ebp], ecx
	mov	edx, DWORD PTR _ui$228831[ebp]
	cmp	edx, DWORD PTR $T248126[ebp]
	jae	$LN5@GetNamesLi

; 10126: 		{
; 10127: 			PlayerTypes ePlayerLoop = veNames[ui];

	mov	eax, DWORD PTR _ui$228831[ebp]
	mov	ecx, DWORD PTR _veNames$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _ePlayerLoop$228835[ebp], edx

; 10128: 			CvPlayer* pPlayerLoop = &GET_PLAYER(ePlayerLoop);

	mov	eax, DWORD PTR _ePlayerLoop$228835[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pPlayerLoop$228836[ebp], eax

; 10129: 			if (pPlayerLoop)

	je	$LN1@GetNamesLi

; 10130: 			{
; 10131: 				Localization::String sName = Localization::Lookup(pPlayerLoop->getCivilizationShortDescriptionKey());

	mov	ecx, DWORD PTR _pPlayerLoop$228836[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	push	eax
	lea	ecx, DWORD PTR _sName$228838[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 10132: 				s = s + "[NEWLINE]" + sName.toUTF8();

	push	OFFSET ??_C@_09ODCIJKAA@?$FLNEWLINE?$FN?$AA@
	lea	edx, DWORD PTR _s$[ebp]
	push	edx
	lea	eax, DWORD PTR $T248101[ebp]
	push	eax
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv130[ebp], eax
	mov	ecx, DWORD PTR tv130[ebp]
	mov	DWORD PTR tv164[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _sName$228838[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	mov	edx, DWORD PTR tv164[ebp]
	push	edx
	lea	eax, DWORD PTR $T248102[ebp]
	push	eax
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv198[ebp], eax
	mov	ecx, DWORD PTR tv198[ebp]
	mov	DWORD PTR $T248136[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR $T248136[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T248102[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T248101[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 10133: 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _sName$228838[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN1@GetNamesLi:

; 10134: 		}

	jmp	$LN3@GetNamesLi
$LN5@GetNamesLi:

; 10135: 	}
; 10136: 	return s;

	lea	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T248109[ebp]
	or	eax, 1
	mov	DWORD PTR $T248109[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _veNames$[ebp]
	call	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 10137: }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	276					; 00000114H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z$0:
	lea	ecx, DWORD PTR _veNames$[ebp]
	jmp	??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
__unwindfunclet$?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z$1:
	lea	ecx, DWORD PTR _s$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z$2:
	lea	ecx, DWORD PTR _sName$228838[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z$3:
	lea	ecx, DWORD PTR $T248101[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z$4:
	lea	ecx, DWORD PTR $T248102[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z$5:
	mov	eax, DWORD PTR $T248109[ebp]
	and	eax, 1
	je	$LN14@GetNamesLi
	and	DWORD PTR $T248109[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
$LN14@GetNamesLi:
	ret	0
__ehhandler$?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetNamesListAsString@CvMinorCivAI@@QAE?AVCvString@@V?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@@Z ENDP ; CvMinorCivAI::GetNamesListAsString
; Function compile flags: /Odtp
;	COMDAT ?GetMajorScratchPad@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetMajorScratchPad@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z PROC ; CvMinorCivAI::GetMajorScratchPad, COMDAT
; _this$ = ecx

; 10141: {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 10142: 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 10143: 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 10144: 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return 0; // as defined during Reset()

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@GetMajorSc
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN2@GetMajorSc
$LN1@GetMajorSc:
	xor	eax, eax
	jmp	SHORT $LN3@GetMajorSc
$LN2@GetMajorSc:

; 10145: 	return m_aiMajorScratchPad[ePlayer];

	mov	eax, DWORD PTR _ePlayer$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+6776]
$LN3@GetMajorSc:

; 10146: }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetMajorScratchPad@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ENDP ; CvMinorCivAI::GetMajorScratchPad
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?SetMajorScratchPad@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
_iNum$ = 12						; size = 4
?SetMajorScratchPad@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z PROC ; CvMinorCivAI::SetMajorScratchPad, COMDAT
; _this$ = ecx

; 10150: {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 10151: 	CvAssertMsg(ePlayer >= 0, "ePlayer is expected to be non-negative (invalid Index)");
; 10152: 	CvAssertMsg(ePlayer < MAX_MAJOR_CIVS, "ePlayer is expected to be within maximum bounds (invalid Index)");
; 10153: 	if(ePlayer < 0 || ePlayer >= MAX_MAJOR_CIVS) return;

	cmp	DWORD PTR _ePlayer$[ebp], 0
	jl	SHORT $LN1@SetMajorSc
	cmp	DWORD PTR _ePlayer$[ebp], 22		; 00000016H
	jl	SHORT $LN2@SetMajorSc
$LN1@SetMajorSc:
	jmp	SHORT $LN3@SetMajorSc
$LN2@SetMajorSc:

; 10154: 
; 10155: 	m_aiMajorScratchPad[ePlayer] = iNum;

	mov	eax, DWORD PTR _ePlayer$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _iNum$[ebp]
	mov	DWORD PTR [ecx+eax*4+6776], edx
$LN3@SetMajorSc:

; 10156: }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetMajorScratchPad@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ENDP ; CvMinorCivAI::SetMajorScratchPad
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsDisableNotifications@CvMinorCivAI@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsDisableNotifications@CvMinorCivAI@@QBE_NXZ PROC	; CvMinorCivAI::IsDisableNotifications, COMDAT
; _this$ = ecx

; 10160: {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 10161: 	return m_bDisableNotifications;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+6864]

; 10162: }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsDisableNotifications@CvMinorCivAI@@QBE_NXZ ENDP	; CvMinorCivAI::IsDisableNotifications
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?SetDisableNotifications@CvMinorCivAI@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bDisableNotifications$ = 8				; size = 1
?SetDisableNotifications@CvMinorCivAI@@QAEX_N@Z PROC	; CvMinorCivAI::SetDisableNotifications, COMDAT
; _this$ = ecx

; 10166: {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 10167: 	if (m_bDisableNotifications != bDisableNotifications)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+6864]
	movzx	edx, BYTE PTR _bDisableNotifications$[ebp]
	cmp	ecx, edx
	je	SHORT $LN2@SetDisable

; 10168: 	{
; 10169: 		m_bDisableNotifications = bDisableNotifications;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _bDisableNotifications$[ebp]
	mov	BYTE PTR [eax+6864], cl
$LN2@SetDisable:

; 10170: 	}
; 10171: }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetDisableNotifications@CvMinorCivAI@@QAEX_N@Z ENDP	; CvMinorCivAI::SetDisableNotifications
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ; std::_Vector_val<CvString,std::allocator<CvString> >::~_Vector_val<CvString,std::allocator<CvString> >
PUBLIC	??1CvBaseInfo@@QAE@XZ				; CvBaseInfo::~CvBaseInfo
PUBLIC	?_Buy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAE_NI@Z ; std::vector<CvString,std::allocator<CvString> >::_Buy
PUBLIC	??_7CvMinorCivInfo@@6B@				; CvMinorCivInfo::`vftable'
PUBLIC	??0CvMinorCivInfo@@QAE@XZ			; CvMinorCivInfo::CvMinorCivInfo
PUBLIC	?CacheResults@CvMinorCivInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z ; CvMinorCivInfo::CacheResults
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	??0CvBaseInfo@@QAE@XZ:PROC			; CvBaseInfo::CvBaseInfo
EXTRN	??8CvBaseInfo@@UBE_NABV0@@Z:PROC		; CvBaseInfo::operator==
EXTRN	?readFrom@CvBaseInfo@@UAEXAAVFDataStream@@@Z:PROC ; CvBaseInfo::readFrom
EXTRN	?writeTo@CvBaseInfo@@UBEXAAVFDataStream@@@Z:PROC ; CvBaseInfo::writeTo
EXTRN	??_ECvMinorCivInfo@@UAEPAXI@Z:PROC		; CvMinorCivInfo::`vector deleting destructor'
;	COMDAT ??_7CvMinorCivInfo@@6B@
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
CONST	SEGMENT
??_7CvMinorCivInfo@@6B@ DD FLAT:?CacheResults@CvMinorCivInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z ; CvMinorCivInfo::`vftable'
	DD	FLAT:??8CvBaseInfo@@UBE_NABV0@@Z
	DD	FLAT:?readFrom@CvBaseInfo@@UAEXAAVFDataStream@@@Z
	DD	FLAT:?writeTo@CvBaseInfo@@UBEXAAVFDataStream@@@Z
	DD	FLAT:??_ECvMinorCivInfo@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CvMinorCivInfo@@QAE@XZ DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$??0CvMinorCivInfo@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CvMinorCivInfo@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CvMinorCivInfo@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CvMinorCivInfo@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CvMinorCivInfo@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CvMinorCivInfo@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CvMinorCivInfo@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CvMinorCivInfo@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0CvMinorCivInfo@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0CvMinorCivInfo@@QAE@XZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??0CvMinorCivInfo@@QAE@XZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$??0CvMinorCivInfo@@QAE@XZ$9
	DD	09H
	DD	FLAT:__unwindfunclet$??0CvMinorCivInfo@@QAE@XZ$20
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ??0CvMinorCivInfo@@QAE@XZ
_TEXT	SEGMENT
tv310 = -172						; size = 4
tv335 = -168						; size = 4
_this$ = -164						; size = 4
$T248323 = -160						; size = 4
$T248274 = -66						; size = 1
$T248261 = -65						; size = 1
$T248257 = -64						; size = 4
$T248250 = -56						; size = 4
$T248243 = -48						; size = 4
$T248238 = -44						; size = 4
$T248233 = -40						; size = 4
$T248228 = -36						; size = 4
$T248223 = -32						; size = 4
$T248218 = -28						; size = 4
$T248213 = -24						; size = 4
$T248208 = -20						; size = 4
$T248203 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CvMinorCivInfo@@QAE@XZ PROC				; CvMinorCivInfo::CvMinorCivInfo, COMDAT
; _this$ = ecx

; 10186: {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CvMinorCivInfo@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 160				; 000000a0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CvBaseInfo@@QAE@XZ			; CvBaseInfo::CvBaseInfo
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CvMinorCivInfo@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+260], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+264], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+272], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	mov	DWORD PTR $T248203[ebp], ecx
	mov	ecx, DWORD PTR $T248203[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 308				; 00000134H
	mov	DWORD PTR $T248208[ebp], edx
	mov	ecx, DWORD PTR $T248208[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 336				; 00000150H
	mov	DWORD PTR $T248213[ebp], eax
	mov	ecx, DWORD PTR $T248213[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	mov	DWORD PTR $T248218[ebp], ecx
	mov	ecx, DWORD PTR $T248218[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 392				; 00000188H
	mov	DWORD PTR $T248223[ebp], edx
	mov	ecx, DWORD PTR $T248223[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 420				; 000001a4H
	mov	DWORD PTR $T248228[ebp], eax
	mov	ecx, DWORD PTR $T248228[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 448				; 000001c0H
	mov	DWORD PTR $T248233[ebp], ecx
	mov	ecx, DWORD PTR $T248233[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 476				; 000001dcH
	mov	DWORD PTR $T248238[ebp], edx
	mov	ecx, DWORD PTR $T248238[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 504				; 000001f8H
	mov	DWORD PTR $T248243[ebp], eax
	mov	ecx, DWORD PTR $T248243[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+532], 0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 536				; 00000218H
	mov	DWORD PTR $T248323[ebp], edx
	lea	eax, DWORD PTR $T248274[ebp]
	mov	DWORD PTR $T248250[ebp], eax
	lea	ecx, DWORD PTR $T248261[ebp]
	mov	DWORD PTR $T248257[ebp], ecx
	mov	edx, DWORD PTR $T248323[ebp]
	mov	DWORD PTR tv335[ebp], edx
	mov	eax, DWORD PTR $T248323[ebp]
	mov	DWORD PTR tv310[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	push	0
	mov	ecx, DWORD PTR $T248323[ebp]
	call	?_Buy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAE_NI@Z ; std::vector<CvString,std::allocator<CvString> >::_Buy
	mov	BYTE PTR __$EHRec$[ebp+8], 9

; 10187: }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CvMinorCivInfo@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CvBaseInfo@@QAE@XZ
__unwindfunclet$??0CvMinorCivInfo@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??0CvMinorCivInfo@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 308				; 00000134H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??0CvMinorCivInfo@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 336				; 00000150H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??0CvMinorCivInfo@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??0CvMinorCivInfo@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??0CvMinorCivInfo@@QAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 420				; 000001a4H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??0CvMinorCivInfo@@QAE@XZ$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 448				; 000001c0H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??0CvMinorCivInfo@@QAE@XZ$8:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??0CvMinorCivInfo@@QAE@XZ$9:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 504				; 000001f8H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??0CvMinorCivInfo@@QAE@XZ$20:
	mov	ecx, DWORD PTR $T248323[ebp]
	jmp	??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
__ehhandler$??0CvMinorCivInfo@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-164]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CvMinorCivInfo@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CvMinorCivInfo@@QAE@XZ ENDP				; CvMinorCivInfo::CvMinorCivInfo
PUBLIC	??1CvMinorCivInfo@@UAE@XZ			; CvMinorCivInfo::~CvMinorCivInfo
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp
;	COMDAT ??_GCvMinorCivInfo@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCvMinorCivInfo@@UAEPAXI@Z PROC			; CvMinorCivInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CvMinorCivInfo@@UAE@XZ		; CvMinorCivInfo::~CvMinorCivInfo
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCvMinorCivInfo@@UAEPAXI@Z ENDP			; CvMinorCivInfo::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CvBaseInfo@@QAE@XZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$??1CvBaseInfo@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1CvBaseInfo@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$7
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1CvBaseInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -52						; size = 4
$T248387 = -48						; size = 4
$T248382 = -44						; size = 4
$T248377 = -40						; size = 4
$T248372 = -36						; size = 4
$T248367 = -32						; size = 4
$T248362 = -28						; size = 4
$T248357 = -24						; size = 4
$T248352 = -20						; size = 4
$T248347 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CvBaseInfo@@QAE@XZ PROC				; CvBaseInfo::~CvBaseInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CvBaseInfo@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 232				; 000000e8H
	mov	DWORD PTR $T248347[ebp], eax
	mov	ecx, DWORD PTR $T248347[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	mov	DWORD PTR $T248352[ebp], ecx
	mov	ecx, DWORD PTR $T248352[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 176				; 000000b0H
	mov	DWORD PTR $T248357[ebp], edx
	mov	ecx, DWORD PTR $T248357[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 148				; 00000094H
	mov	DWORD PTR $T248362[ebp], eax
	mov	ecx, DWORD PTR $T248362[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	mov	DWORD PTR $T248367[ebp], ecx
	mov	ecx, DWORD PTR $T248367[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 92					; 0000005cH
	mov	DWORD PTR $T248372[ebp], edx
	mov	ecx, DWORD PTR $T248372[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	mov	DWORD PTR $T248377[ebp], eax
	mov	ecx, DWORD PTR $T248377[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	mov	DWORD PTR $T248382[ebp], ecx
	mov	ecx, DWORD PTR $T248382[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 8
	mov	DWORD PTR $T248387[ebp], edx
	mov	ecx, DWORD PTR $T248387[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 176				; 000000b0H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$??1CvBaseInfo@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CvBaseInfo@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CvBaseInfo@@QAE@XZ ENDP				; CvBaseInfo::~CvBaseInfo
PUBLIC	?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ ; std::vector<CvString,std::allocator<CvString> >::_Tidy
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__ehfuncinfo$??1CvMinorCivInfo@@UAE@XZ DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$??1CvMinorCivInfo@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1CvMinorCivInfo@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvMinorCivInfo@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CvMinorCivInfo@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CvMinorCivInfo@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CvMinorCivInfo@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CvMinorCivInfo@@UAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CvMinorCivInfo@@UAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1CvMinorCivInfo@@UAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??1CvMinorCivInfo@@UAE@XZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??1CvMinorCivInfo@@UAE@XZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$??1CvMinorCivInfo@@UAE@XZ$9
	DD	09H
	DD	FLAT:__unwindfunclet$??1CvMinorCivInfo@@UAE@XZ$11
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ??1CvMinorCivInfo@@UAE@XZ
_TEXT	SEGMENT
_this$ = -100						; size = 4
$T248475 = -60						; size = 4
$T248470 = -56						; size = 4
$T248465 = -52						; size = 4
$T248460 = -48						; size = 4
$T248455 = -44						; size = 4
$T248450 = -40						; size = 4
$T248445 = -36						; size = 4
$T248440 = -32						; size = 4
$T248435 = -28						; size = 4
$T248430 = -24						; size = 4
$T248412 = -20						; size = 4
$T248410 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CvMinorCivInfo@@UAE@XZ PROC				; CvMinorCivInfo::~CvMinorCivInfo, COMDAT
; _this$ = ecx

; 10190: {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CvMinorCivInfo@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CvMinorCivInfo@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 9

; 10191: 	SAFE_DELETE_ARRAY(m_piFlavorValue);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 532				; 00000214H
	mov	DWORD PTR $T248412[ebp], ecx
	mov	edx, DWORD PTR $T248412[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T248410[ebp], eax
	mov	ecx, DWORD PTR $T248410[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
	mov	edx, DWORD PTR $T248412[ebp]
	mov	DWORD PTR [edx], 0

; 10192: }

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 536				; 00000218H
	mov	DWORD PTR $T248430[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	ecx, DWORD PTR $T248430[ebp]
	call	?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ ; std::vector<CvString,std::allocator<CvString> >::_Tidy
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 504				; 000001f8H
	mov	DWORD PTR $T248435[ebp], ecx
	mov	ecx, DWORD PTR $T248435[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 476				; 000001dcH
	mov	DWORD PTR $T248440[ebp], edx
	mov	ecx, DWORD PTR $T248440[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 448				; 000001c0H
	mov	DWORD PTR $T248445[ebp], eax
	mov	ecx, DWORD PTR $T248445[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 420				; 000001a4H
	mov	DWORD PTR $T248450[ebp], ecx
	mov	ecx, DWORD PTR $T248450[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 392				; 00000188H
	mov	DWORD PTR $T248455[ebp], edx
	mov	ecx, DWORD PTR $T248455[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 364				; 0000016cH
	mov	DWORD PTR $T248460[ebp], eax
	mov	ecx, DWORD PTR $T248460[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 336				; 00000150H
	mov	DWORD PTR $T248465[ebp], ecx
	mov	ecx, DWORD PTR $T248465[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 308				; 00000134H
	mov	DWORD PTR $T248470[ebp], edx
	mov	ecx, DWORD PTR $T248470[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 280				; 00000118H
	mov	DWORD PTR $T248475[ebp], eax
	mov	ecx, DWORD PTR $T248475[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CvBaseInfo@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CvMinorCivInfo@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CvBaseInfo@@QAE@XZ
__unwindfunclet$??1CvMinorCivInfo@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvMinorCivInfo@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 308				; 00000134H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvMinorCivInfo@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 336				; 00000150H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvMinorCivInfo@@UAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvMinorCivInfo@@UAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvMinorCivInfo@@UAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 420				; 000001a4H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvMinorCivInfo@@UAE@XZ$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 448				; 000001c0H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvMinorCivInfo@@UAE@XZ$8:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvMinorCivInfo@@UAE@XZ$9:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 504				; 000001f8H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvMinorCivInfo@@UAE@XZ$11:
	mov	ecx, DWORD PTR $T248430[ebp]
	jmp	??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
__ehhandler$??1CvMinorCivInfo@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CvMinorCivInfo@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CvMinorCivInfo@@UAE@XZ ENDP				; CvMinorCivInfo::~CvMinorCivInfo
PUBLIC	?getDefaultPlayerColor@CvMinorCivInfo@@QBEHXZ	; CvMinorCivInfo::getDefaultPlayerColor
; Function compile flags: /Odtp
;	COMDAT ?getDefaultPlayerColor@CvMinorCivInfo@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getDefaultPlayerColor@CvMinorCivInfo@@QBEHXZ PROC	; CvMinorCivInfo::getDefaultPlayerColor, COMDAT
; _this$ = ecx

; 10195: {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 10196: 	return m_iDefaultPlayerColor;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+260]

; 10197: }

	mov	esp, ebp
	pop	ebp
	ret	0
?getDefaultPlayerColor@CvMinorCivInfo@@QBEHXZ ENDP	; CvMinorCivInfo::getDefaultPlayerColor
_TEXT	ENDS
PUBLIC	?getArtStyleType@CvMinorCivInfo@@QBEHXZ		; CvMinorCivInfo::getArtStyleType
; Function compile flags: /Odtp
;	COMDAT ?getArtStyleType@CvMinorCivInfo@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getArtStyleType@CvMinorCivInfo@@QBEHXZ PROC		; CvMinorCivInfo::getArtStyleType, COMDAT
; _this$ = ecx

; 10200: {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 10201: 	return m_iArtStyleType;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+264]

; 10202: }

	mov	esp, ebp
	pop	ebp
	ret	0
?getArtStyleType@CvMinorCivInfo@@QBEHXZ ENDP		; CvMinorCivInfo::getArtStyleType
_TEXT	ENDS
PUBLIC	?getArtStylePrefix@CvMinorCivInfo@@QBEPBDXZ	; CvMinorCivInfo::getArtStylePrefix
; Function compile flags: /Odtp
;	COMDAT ?getArtStylePrefix@CvMinorCivInfo@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getArtStylePrefix@CvMinorCivInfo@@QBEPBDXZ PROC	; CvMinorCivInfo::getArtStylePrefix, COMDAT
; _this$ = ecx

; 10205: {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 10206: 	return m_strArtStylePrefix.c_str();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 308				; 00000134H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 10207: }

	mov	esp, ebp
	pop	ebp
	ret	0
?getArtStylePrefix@CvMinorCivInfo@@QBEPBDXZ ENDP	; CvMinorCivInfo::getArtStylePrefix
_TEXT	ENDS
PUBLIC	?getArtStyleSuffix@CvMinorCivInfo@@QBEPBDXZ	; CvMinorCivInfo::getArtStyleSuffix
; Function compile flags: /Odtp
;	COMDAT ?getArtStyleSuffix@CvMinorCivInfo@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getArtStyleSuffix@CvMinorCivInfo@@QBEPBDXZ PROC	; CvMinorCivInfo::getArtStyleSuffix, COMDAT
; _this$ = ecx

; 10210: {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 10211: 	return m_strArtStyleSuffix.c_str();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 336				; 00000150H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 10212: }

	mov	esp, ebp
	pop	ebp
	ret	0
?getArtStyleSuffix@CvMinorCivInfo@@QBEPBDXZ ENDP	; CvMinorCivInfo::getArtStyleSuffix
_TEXT	ENDS
PUBLIC	?getNumCityNames@CvMinorCivInfo@@QBEHXZ		; CvMinorCivInfo::getNumCityNames
; Function compile flags: /Odtp
;	COMDAT ?getNumCityNames@CvMinorCivInfo@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T248550 = -4						; size = 4
?getNumCityNames@CvMinorCivInfo@@QBEHXZ PROC		; CvMinorCivInfo::getNumCityNames, COMDAT
; _this$ = ecx

; 10215: {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 10216: 	return m_vCityNames.size();

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 536				; 00000218H
	mov	DWORD PTR $T248550[ebp], eax
	mov	ecx, DWORD PTR $T248550[ebp]
	mov	edx, DWORD PTR $T248550[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx

; 10217: }

	mov	esp, ebp
	pop	ebp
	ret	0
?getNumCityNames@CvMinorCivInfo@@QBEHXZ ENDP		; CvMinorCivInfo::getNumCityNames
_TEXT	ENDS
PUBLIC	?getShortDescription@CvMinorCivInfo@@QBEPBDXZ	; CvMinorCivInfo::getShortDescription
; Function compile flags: /Odtp
;	COMDAT ?getShortDescription@CvMinorCivInfo@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getShortDescription@CvMinorCivInfo@@QBEPBDXZ PROC	; CvMinorCivInfo::getShortDescription, COMDAT
; _this$ = ecx

; 10220: {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 10221: 	return m_wstrShortDescription.c_str();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 10222: }

	mov	esp, ebp
	pop	ebp
	ret	0
?getShortDescription@CvMinorCivInfo@@QBEPBDXZ ENDP	; CvMinorCivInfo::getShortDescription
_TEXT	ENDS
PUBLIC	?getShortDescriptionKey@CvMinorCivInfo@@QBEPBDXZ ; CvMinorCivInfo::getShortDescriptionKey
; Function compile flags: /Odtp
;	COMDAT ?getShortDescriptionKey@CvMinorCivInfo@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getShortDescriptionKey@CvMinorCivInfo@@QBEPBDXZ PROC	; CvMinorCivInfo::getShortDescriptionKey, COMDAT
; _this$ = ecx

; 10225: {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 10226: 	return m_strShortDescriptionKey.c_str();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 10227: }

	mov	esp, ebp
	pop	ebp
	ret	0
?getShortDescriptionKey@CvMinorCivInfo@@QBEPBDXZ ENDP	; CvMinorCivInfo::getShortDescriptionKey
_TEXT	ENDS
PUBLIC	?getShortDescriptionKeyWide@CvMinorCivInfo@@QBEPBDXZ ; CvMinorCivInfo::getShortDescriptionKeyWide
; Function compile flags: /Odtp
;	COMDAT ?getShortDescriptionKeyWide@CvMinorCivInfo@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getShortDescriptionKeyWide@CvMinorCivInfo@@QBEPBDXZ PROC ; CvMinorCivInfo::getShortDescriptionKeyWide, COMDAT
; _this$ = ecx

; 10230: {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 10231: 	return m_wstrShortDescriptionKey.c_str();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 504				; 000001f8H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 10232: }

	mov	esp, ebp
	pop	ebp
	ret	0
?getShortDescriptionKeyWide@CvMinorCivInfo@@QBEPBDXZ ENDP ; CvMinorCivInfo::getShortDescriptionKeyWide
_TEXT	ENDS
PUBLIC	?GetLocalizedText@@YA?AVCvString@@PBD@Z		; GetLocalizedText
PUBLIC	?setShortDescriptionKey@CvMinorCivInfo@@QAEXPBD@Z ; CvMinorCivInfo::setShortDescriptionKey
EXTRN	__imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ:PROC
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?setShortDescriptionKey@CvMinorCivInfo@@QAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setShortDescriptionKey@CvMinorCivInfo@@QAEXPBD@Z$0
__ehfuncinfo$?setShortDescriptionKey@CvMinorCivInfo@@QAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setShortDescriptionKey@CvMinorCivInfo@@QAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?setShortDescriptionKey@CvMinorCivInfo@@QAEXPBD@Z
_TEXT	SEGMENT
tv83 = -64						; size = 4
_this$ = -60						; size = 4
$T248577 = -56						; size = 4
$T248576 = -52						; size = 4
$T248572 = -48						; size = 4
$T248566 = -44						; size = 4
$T248559 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_szVal$ = 8						; size = 4
?setShortDescriptionKey@CvMinorCivInfo@@QAEXPBD@Z PROC	; CvMinorCivInfo::setShortDescriptionKey, COMDAT
; _this$ = ecx

; 10235: {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setShortDescriptionKey@CvMinorCivInfo@@QAEXPBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 52					; 00000034H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 10236: 	m_strShortDescriptionKey = szVal;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 364				; 0000016cH
	mov	DWORD PTR $T248566[ebp], eax
	cmp	DWORD PTR _szVal$[ebp], 0
	je	SHORT $LN5@setShortDe
	mov	ecx, DWORD PTR _szVal$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T248566[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN6@setShortDe
$LN5@setShortDe:
	mov	ecx, DWORD PTR $T248566[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN6@setShortDe:

; 10237: 	m_wstrShortDescriptionKey = szVal;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 504				; 000001f8H
	mov	DWORD PTR $T248572[ebp], edx
	cmp	DWORD PTR _szVal$[ebp], 0
	je	SHORT $LN9@setShortDe
	mov	eax, DWORD PTR _szVal$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T248572[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN10@setShortDe
$LN9@setShortDe:
	mov	ecx, DWORD PTR $T248572[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN10@setShortDe:

; 10238: 	m_wstrShortDescription = GetLocalizedText(m_strShortDescriptionKey.c_str());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR $T248559[ebp]
	push	ecx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR tv83[ebp], eax
	mov	edx, DWORD PTR tv83[ebp]
	mov	DWORD PTR $T248577[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 392				; 00000188H
	mov	DWORD PTR $T248576[ebp], eax
	mov	ecx, DWORD PTR $T248577[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T248576[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T248559[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 10239: }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setShortDescriptionKey@CvMinorCivInfo@@QAEXPBD@Z$0:
	lea	ecx, DWORD PTR $T248559[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?setShortDescriptionKey@CvMinorCivInfo@@QAEXPBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setShortDescriptionKey@CvMinorCivInfo@@QAEXPBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setShortDescriptionKey@CvMinorCivInfo@@QAEXPBD@Z ENDP	; CvMinorCivInfo::setShortDescriptionKey
PUBLIC	__$ArrayPad$
EXTRN	__imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z:PROC
EXTRN	__imp_?toUTF8@String@Localization@@QAEPBDAAIH@Z:PROC
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?GetLocalizedText@@YA?AVCvString@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$1
__ehfuncinfo$?GetLocalizedText@@YA?AVCvString@@PBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?GetLocalizedText@@YA?AVCvString@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
xdata$x	ENDS
;	COMDAT ?GetLocalizedText@@YA?AVCvString@@PBD@Z
_TEXT	SEGMENT
$T248594 = -140						; size = 4
_str$ = -136						; size = 28
__$ArrayPad$ = -108					; size = 4
_bytes$ = -104						; size = 4
_text$ = -100						; size = 80
_szComposedString$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_szString$ = 12						; size = 4
?GetLocalizedText@@YA?AVCvString@@PBD@Z PROC		; GetLocalizedText, COMDAT

; 489  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetLocalizedText@@YA?AVCvString@@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 128				; 00000080H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T248594[ebp], 0

; 490  : 	Localization::String text = Localization::Lookup(szString);

	mov	eax, DWORD PTR _szString$[ebp]
	push	eax
	lea	ecx, DWORD PTR _text$[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 491  : 
; 492  : 	size_t bytes = 0;

	mov	DWORD PTR _bytes$[ebp], 0

; 493  : 	const char* szComposedString = text.toUTF8(bytes);

	push	1
	lea	edx, DWORD PTR _bytes$[ebp]
	push	edx
	lea	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDAAIH@Z
	mov	DWORD PTR _szComposedString$[ebp], eax

; 494  : 	CvString str;

	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 495  : 	str.assign(szComposedString, bytes);

	mov	eax, DWORD PTR _bytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szComposedString$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z

; 496  : 	return str;

	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T248594[ebp]
	or	eax, 1
	mov	DWORD PTR $T248594[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 497  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$0:
	lea	ecx, DWORD PTR _text$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$1:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$2:
	mov	eax, DWORD PTR $T248594[ebp]
	and	eax, 1
	je	$LN6@GetLocaliz
	and	DWORD PTR $T248594[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
$LN6@GetLocaliz:
	ret	0
__ehhandler$?GetLocalizedText@@YA?AVCvString@@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetLocalizedText@@YA?AVCvString@@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetLocalizedText@@YA?AVCvString@@PBD@Z ENDP		; GetLocalizedText
PUBLIC	?getAdjective@CvMinorCivInfo@@QBEPBDXZ		; CvMinorCivInfo::getAdjective
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
;	COMDAT ?getAdjective@CvMinorCivInfo@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getAdjective@CvMinorCivInfo@@QBEPBDXZ PROC		; CvMinorCivInfo::getAdjective, COMDAT
; _this$ = ecx

; 10242: {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 10243: 	return m_wstrAdjective.c_str();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 448				; 000001c0H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 10244: }

	mov	esp, ebp
	pop	ebp
	ret	0
?getAdjective@CvMinorCivInfo@@QBEPBDXZ ENDP		; CvMinorCivInfo::getAdjective
_TEXT	ENDS
PUBLIC	?getAdjectiveKey@CvMinorCivInfo@@QBEPBDXZ	; CvMinorCivInfo::getAdjectiveKey
; Function compile flags: /Odtp
;	COMDAT ?getAdjectiveKey@CvMinorCivInfo@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getAdjectiveKey@CvMinorCivInfo@@QBEPBDXZ PROC		; CvMinorCivInfo::getAdjectiveKey, COMDAT
; _this$ = ecx

; 10247: {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 10248: 	return m_strAdjectiveKey.c_str();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 420				; 000001a4H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 10249: }

	mov	esp, ebp
	pop	ebp
	ret	0
?getAdjectiveKey@CvMinorCivInfo@@QBEPBDXZ ENDP		; CvMinorCivInfo::getAdjectiveKey
_TEXT	ENDS
PUBLIC	?getAdjectiveKeyWide@CvMinorCivInfo@@QBEPBDXZ	; CvMinorCivInfo::getAdjectiveKeyWide
; Function compile flags: /Odtp
;	COMDAT ?getAdjectiveKeyWide@CvMinorCivInfo@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getAdjectiveKeyWide@CvMinorCivInfo@@QBEPBDXZ PROC	; CvMinorCivInfo::getAdjectiveKeyWide, COMDAT
; _this$ = ecx

; 10252: {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 10253: 	return m_wstrAdjectiveKey.c_str();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 10254: }

	mov	esp, ebp
	pop	ebp
	ret	0
?getAdjectiveKeyWide@CvMinorCivInfo@@QBEPBDXZ ENDP	; CvMinorCivInfo::getAdjectiveKeyWide
_TEXT	ENDS
PUBLIC	?setAdjectiveKey@CvMinorCivInfo@@QAEXPBD@Z	; CvMinorCivInfo::setAdjectiveKey
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?setAdjectiveKey@CvMinorCivInfo@@QAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setAdjectiveKey@CvMinorCivInfo@@QAEXPBD@Z$0
__ehfuncinfo$?setAdjectiveKey@CvMinorCivInfo@@QAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setAdjectiveKey@CvMinorCivInfo@@QAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?setAdjectiveKey@CvMinorCivInfo@@QAEXPBD@Z
_TEXT	SEGMENT
tv83 = -64						; size = 4
_this$ = -60						; size = 4
$T248640 = -56						; size = 4
$T248639 = -52						; size = 4
$T248635 = -48						; size = 4
$T248629 = -44						; size = 4
$T248622 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_szVal$ = 8						; size = 4
?setAdjectiveKey@CvMinorCivInfo@@QAEXPBD@Z PROC		; CvMinorCivInfo::setAdjectiveKey, COMDAT
; _this$ = ecx

; 10257: {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setAdjectiveKey@CvMinorCivInfo@@QAEXPBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 52					; 00000034H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 10258: 	m_strAdjectiveKey = szVal;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 420				; 000001a4H
	mov	DWORD PTR $T248629[ebp], eax
	cmp	DWORD PTR _szVal$[ebp], 0
	je	SHORT $LN5@setAdjecti
	mov	ecx, DWORD PTR _szVal$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T248629[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN6@setAdjecti
$LN5@setAdjecti:
	mov	ecx, DWORD PTR $T248629[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN6@setAdjecti:

; 10259: 	m_wstrAdjectiveKey = szVal;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 476				; 000001dcH
	mov	DWORD PTR $T248635[ebp], edx
	cmp	DWORD PTR _szVal$[ebp], 0
	je	SHORT $LN9@setAdjecti
	mov	eax, DWORD PTR _szVal$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T248635[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN10@setAdjecti
$LN9@setAdjecti:
	mov	ecx, DWORD PTR $T248635[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN10@setAdjecti:

; 10260: 	m_wstrAdjective = GetLocalizedText(m_strAdjectiveKey.c_str());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 420				; 000001a4H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR $T248622[ebp]
	push	ecx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR tv83[ebp], eax
	mov	edx, DWORD PTR tv83[ebp]
	mov	DWORD PTR $T248640[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 448				; 000001c0H
	mov	DWORD PTR $T248639[ebp], eax
	mov	ecx, DWORD PTR $T248640[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T248639[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T248622[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 10261: }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setAdjectiveKey@CvMinorCivInfo@@QAEXPBD@Z$0:
	lea	ecx, DWORD PTR $T248622[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?setAdjectiveKey@CvMinorCivInfo@@QAEXPBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setAdjectiveKey@CvMinorCivInfo@@QAEXPBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setAdjectiveKey@CvMinorCivInfo@@QAEXPBD@Z ENDP		; CvMinorCivInfo::setAdjectiveKey
PUBLIC	?getFlagTexture@CvMinorCivInfo@@QBEPBDXZ	; CvMinorCivInfo::getFlagTexture
; Function compile flags: /Odtp
;	COMDAT ?getFlagTexture@CvMinorCivInfo@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getFlagTexture@CvMinorCivInfo@@QBEPBDXZ PROC		; CvMinorCivInfo::getFlagTexture, COMDAT
; _this$ = ecx

; 10264: {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 10265: 	return NULL;

	xor	eax, eax

; 10266: }

	mov	esp, ebp
	pop	ebp
	ret	0
?getFlagTexture@CvMinorCivInfo@@QBEPBDXZ ENDP		; CvMinorCivInfo::getFlagTexture
_TEXT	ENDS
PUBLIC	?getArtDefineTag@CvMinorCivInfo@@QBEPBDXZ	; CvMinorCivInfo::getArtDefineTag
; Function compile flags: /Odtp
;	COMDAT ?getArtDefineTag@CvMinorCivInfo@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getArtDefineTag@CvMinorCivInfo@@QBEPBDXZ PROC		; CvMinorCivInfo::getArtDefineTag, COMDAT
; _this$ = ecx

; 10269: {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 10270: 	return m_strArtDefineTag;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 10271: }

	mov	esp, ebp
	pop	ebp
	ret	0
?getArtDefineTag@CvMinorCivInfo@@QBEPBDXZ ENDP		; CvMinorCivInfo::getArtDefineTag
_TEXT	ENDS
PUBLIC	?setArtDefineTag@CvMinorCivInfo@@QAEXPBD@Z	; CvMinorCivInfo::setArtDefineTag
; Function compile flags: /Odtp
;	COMDAT ?setArtDefineTag@CvMinorCivInfo@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T248665 = -4						; size = 4
_szVal$ = 8						; size = 4
?setArtDefineTag@CvMinorCivInfo@@QAEXPBD@Z PROC		; CvMinorCivInfo::setArtDefineTag, COMDAT
; _this$ = ecx

; 10274: {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 10275: 	m_strArtDefineTag = szVal;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 280				; 00000118H
	mov	DWORD PTR $T248665[ebp], eax
	cmp	DWORD PTR _szVal$[ebp], 0
	je	SHORT $LN4@setArtDefi
	mov	ecx, DWORD PTR _szVal$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T248665[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN1@setArtDefi
$LN4@setArtDefi:
	mov	ecx, DWORD PTR $T248665[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN1@setArtDefi:

; 10276: }

	mov	esp, ebp
	pop	ebp
	ret	4
?setArtDefineTag@CvMinorCivInfo@@QAEXPBD@Z ENDP		; CvMinorCivInfo::setArtDefineTag
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetMinorCivTrait@CvMinorCivInfo@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMinorCivTrait@CvMinorCivInfo@@QBEHXZ PROC		; CvMinorCivInfo::GetMinorCivTrait, COMDAT
; _this$ = ecx

; 10279: {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 10280: 	return m_iMinorCivTrait;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+272]

; 10281: }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetMinorCivTrait@CvMinorCivInfo@@QBEHXZ ENDP		; CvMinorCivInfo::GetMinorCivTrait
_TEXT	ENDS
PUBLIC	?getFlavorValue@CvMinorCivInfo@@QBEHH@Z		; CvMinorCivInfo::getFlavorValue
; Function compile flags: /Odtp
;	COMDAT ?getFlavorValue@CvMinorCivInfo@@QBEHH@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?getFlavorValue@CvMinorCivInfo@@QBEHH@Z PROC		; CvMinorCivInfo::getFlavorValue, COMDAT
; _this$ = ecx

; 10284: {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 10285: 	CvAssertMsg(i < GC.getNumFlavorTypes(), "Index out of bounds");
; 10286: 	CvAssertMsg(i > -1, "Index out of bounds");
; 10287: 	return m_piFlavorValue ? m_piFlavorValue[i] : 0;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+532], 0
	je	SHORT $LN3@getFlavorV
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+532]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@getFlavorV
$LN3@getFlavorV:
	mov	DWORD PTR tv69[ebp], 0
$LN4@getFlavorV:
	mov	eax, DWORD PTR tv69[ebp]

; 10288: }

	mov	esp, ebp
	pop	ebp
	ret	4
?getFlavorValue@CvMinorCivInfo@@QBEHH@Z ENDP		; CvMinorCivInfo::getFlavorValue
_TEXT	ENDS
PUBLIC	?getCityNames@CvMinorCivInfo@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; CvMinorCivInfo::getCityNames
; Function compile flags: /Odtp
;	COMDAT ?getCityNames@CvMinorCivInfo@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?getCityNames@CvMinorCivInfo@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z PROC ; CvMinorCivInfo::getCityNames, COMDAT
; _this$ = ecx

; 10291: {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 10292: 	return m_vCityNames[i];

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+540]

; 10293: }

	mov	esp, ebp
	pop	ebp
	ret	4
?getCityNames@CvMinorCivInfo@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ENDP ; CvMinorCivInfo::getCityNames
_TEXT	ENDS
PUBLIC	?setArtStylePrefix@CvMinorCivInfo@@QAEXPBD@Z	; CvMinorCivInfo::setArtStylePrefix
; Function compile flags: /Odtp
;	COMDAT ?setArtStylePrefix@CvMinorCivInfo@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T248684 = -4						; size = 4
_szVal$ = 8						; size = 4
?setArtStylePrefix@CvMinorCivInfo@@QAEXPBD@Z PROC	; CvMinorCivInfo::setArtStylePrefix, COMDAT
; _this$ = ecx

; 10296: {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 10297: 	m_strArtStylePrefix = szVal;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 308				; 00000134H
	mov	DWORD PTR $T248684[ebp], eax
	cmp	DWORD PTR _szVal$[ebp], 0
	je	SHORT $LN4@setArtStyl
	mov	ecx, DWORD PTR _szVal$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T248684[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN1@setArtStyl
$LN4@setArtStyl:
	mov	ecx, DWORD PTR $T248684[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN1@setArtStyl:

; 10298: }

	mov	esp, ebp
	pop	ebp
	ret	4
?setArtStylePrefix@CvMinorCivInfo@@QAEXPBD@Z ENDP	; CvMinorCivInfo::setArtStylePrefix
_TEXT	ENDS
PUBLIC	?setArtStyleSuffix@CvMinorCivInfo@@QAEXPBD@Z	; CvMinorCivInfo::setArtStyleSuffix
; Function compile flags: /Odtp
;	COMDAT ?setArtStyleSuffix@CvMinorCivInfo@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T248692 = -4						; size = 4
_szVal$ = 8						; size = 4
?setArtStyleSuffix@CvMinorCivInfo@@QAEXPBD@Z PROC	; CvMinorCivInfo::setArtStyleSuffix, COMDAT
; _this$ = ecx

; 10301: {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 10302: 	m_strArtStyleSuffix = szVal;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 336				; 00000150H
	mov	DWORD PTR $T248692[ebp], eax
	cmp	DWORD PTR _szVal$[ebp], 0
	je	SHORT $LN4@setArtStyl@2
	mov	ecx, DWORD PTR _szVal$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T248692[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN1@setArtStyl@2
$LN4@setArtStyl@2:
	mov	ecx, DWORD PTR $T248692[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN1@setArtStyl@2:

; 10303: }

	mov	esp, ebp
	pop	ebp
	ret	4
?setArtStyleSuffix@CvMinorCivInfo@@QAEXPBD@Z ENDP	; CvMinorCivInfo::setArtStyleSuffix
_TEXT	ENDS
PUBLIC	?push_back@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEXABVCvString@@@Z ; std::vector<CvString,std::allocator<CvString> >::push_back
PUBLIC	??_C@_0EI@MECNJGOD@select?5CityName?5from?5MinorCivili@ ; `string'
PUBLIC	??_C@_0BE@MBOKICA@MinorCiv?5?9?5CityName?$AA@	; `string'
PUBLIC	?erase@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@0@Z ; std::vector<CvString,std::allocator<CvString> >::erase
PUBLIC	??_C@_0BK@BIPBGLOH@MinorCivilization_Flavors?$AA@ ; `string'
PUBLIC	??_C@_0N@LAFCEEOK@MinorCivType?$AA@		; `string'
PUBLIC	??_C@_0O@JNFDBNFP@MinorCivTrait?$AA@		; `string'
PUBLIC	??_C@_0P@OGHDKAPM@ArtStyleSuffix?$AA@		; `string'
PUBLIC	??_C@_0P@INDOPAAJ@ArtStylePrefix?$AA@		; `string'
PUBLIC	??_C@_0N@NJJJCDLH@ArtStyleType?$AA@		; `string'
PUBLIC	??_C@_0BD@HCFAICKO@DefaultPlayerColor?$AA@	; `string'
PUBLIC	??_C@_0N@NLPPFOOH@ArtDefineTag?$AA@		; `string'
PUBLIC	??_C@_09HIMNPMPM@Adjective?$AA@			; `string'
PUBLIC	??_C@_0BB@GBLDMPKE@ShortDescription?$AA@	; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_?Reset@Results@Database@@QAE_NXZ:PROC
EXTRN	__imp_?GetText@Results@Database@@QAEPBDH@Z:PROC
EXTRN	__imp_?Step@Results@Database@@QAE_NXZ:PROC
EXTRN	__imp_?Bind@Results@Database@@QAE_NHPBDH_N@Z:PROC
EXTRN	?PrepareResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z:PROC ; CvDatabaseUtility::PrepareResults
EXTRN	?GetResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; CvDatabaseUtility::GetResults
EXTRN	?SetFlavors@CvDatabaseUtility@@QAE_NAAPAHPBD11H@Z:PROC ; CvDatabaseUtility::SetFlavors
EXTRN	__imp_?GetText@Results@Database@@QAEPBDPBD@Z:PROC
EXTRN	?CacheResults@CvBaseInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z:PROC ; CvBaseInfo::CacheResults
;	COMDAT ??_C@_0EI@MECNJGOD@select?5CityName?5from?5MinorCivili@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0EI@MECNJGOD@select?5CityName?5from?5MinorCivili@ DB 'select CityNa'
	DB	'me from MinorCivilization_CityNames where MinorCivType = ?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MBOKICA@MinorCiv?5?9?5CityName?$AA@
CONST	SEGMENT
??_C@_0BE@MBOKICA@MinorCiv?5?9?5CityName?$AA@ DB 'MinorCiv - CityName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@BIPBGLOH@MinorCivilization_Flavors?$AA@
CONST	SEGMENT
??_C@_0BK@BIPBGLOH@MinorCivilization_Flavors?$AA@ DB 'MinorCivilization_F'
	DB	'lavors', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LAFCEEOK@MinorCivType?$AA@
CONST	SEGMENT
??_C@_0N@LAFCEEOK@MinorCivType?$AA@ DB 'MinorCivType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JNFDBNFP@MinorCivTrait?$AA@
CONST	SEGMENT
??_C@_0O@JNFDBNFP@MinorCivTrait?$AA@ DB 'MinorCivTrait', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OGHDKAPM@ArtStyleSuffix?$AA@
CONST	SEGMENT
??_C@_0P@OGHDKAPM@ArtStyleSuffix?$AA@ DB 'ArtStyleSuffix', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@INDOPAAJ@ArtStylePrefix?$AA@
CONST	SEGMENT
??_C@_0P@INDOPAAJ@ArtStylePrefix?$AA@ DB 'ArtStylePrefix', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NJJJCDLH@ArtStyleType?$AA@
CONST	SEGMENT
??_C@_0N@NJJJCDLH@ArtStyleType?$AA@ DB 'ArtStyleType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HCFAICKO@DefaultPlayerColor?$AA@
CONST	SEGMENT
??_C@_0BD@HCFAICKO@DefaultPlayerColor?$AA@ DB 'DefaultPlayerColor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NLPPFOOH@ArtDefineTag?$AA@
CONST	SEGMENT
??_C@_0N@NLPPFOOH@ArtDefineTag?$AA@ DB 'ArtDefineTag', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09HIMNPMPM@Adjective?$AA@
CONST	SEGMENT
??_C@_09HIMNPMPM@Adjective?$AA@ DB 'Adjective', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GBLDMPKE@ShortDescription?$AA@
CONST	SEGMENT
??_C@_0BB@GBLDMPKE@ShortDescription?$AA@ DB 'ShortDescription', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CacheResults@CvMinorCivInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CacheResults@CvMinorCivInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?CacheResults@CvMinorCivInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$1
__ehfuncinfo$?CacheResults@CvMinorCivInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CacheResults@CvMinorCivInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvminorcivai.cpp
xdata$x	ENDS
;	COMDAT ?CacheResults@CvMinorCivInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z
_TEXT	SEGMENT
tv292 = -220						; size = 4
_this$ = -216						; size = 4
$T248904 = -156						; size = 4
$T248895 = -152						; size = 4
$T248733 = -112						; size = 4
$T248717 = -108						; size = 4
$T248882 = -104						; size = 4
$T248881 = -100						; size = 4
$T248880 = -96						; size = 4
$T248879 = -92						; size = 4
$T248878 = -88						; size = 4
$T248696 = -84						; size = 28
_pResults$228972 = -56					; size = 4
_strKey$228970 = -52					; size = 28
__$ArrayPad$ = -24					; size = 4
_szType$ = -20						; size = 4
_szTextVal$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_kResults$ = 8						; size = 4
_kUtility$ = 12						; size = 4
?CacheResults@CvMinorCivInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z PROC ; CvMinorCivInfo::CacheResults, COMDAT
; _this$ = ecx

; 10306: {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CacheResults@CvMinorCivInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 208				; 000000d0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 10307: 	if(!CvBaseInfo::CacheResults(kResults, kUtility))

	mov	eax, DWORD PTR _kUtility$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kResults$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CacheResults@CvBaseInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z ; CvBaseInfo::CacheResults
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@CacheResul

; 10308: 		return false;

	xor	al, al
	jmp	$LN5@CacheResul
$LN4@CacheResul:

; 10309: 
; 10310: 	//Basic Properties
; 10311: 	const char* szTextVal = NULL;

	mov	DWORD PTR _szTextVal$[ebp], 0

; 10312: 
; 10313: 	szTextVal = kResults.GetText("ShortDescription");

	push	OFFSET ??_C@_0BB@GBLDMPKE@ShortDescription?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetText@Results@Database@@QAEPBDPBD@Z
	mov	DWORD PTR _szTextVal$[ebp], eax

; 10314: 	setShortDescriptionKey(szTextVal);

	mov	eax, DWORD PTR _szTextVal$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setShortDescriptionKey@CvMinorCivInfo@@QAEXPBD@Z ; CvMinorCivInfo::setShortDescriptionKey

; 10315: 
; 10316: 	szTextVal = kResults.GetText("Adjective");

	push	OFFSET ??_C@_09HIMNPMPM@Adjective?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetText@Results@Database@@QAEPBDPBD@Z
	mov	DWORD PTR _szTextVal$[ebp], eax

; 10317: 	setAdjectiveKey(szTextVal);

	mov	ecx, DWORD PTR _szTextVal$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setAdjectiveKey@CvMinorCivInfo@@QAEXPBD@Z ; CvMinorCivInfo::setAdjectiveKey

; 10318: 
; 10319: 	szTextVal = kResults.GetText("ArtDefineTag");

	push	OFFSET ??_C@_0N@NLPPFOOH@ArtDefineTag?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetText@Results@Database@@QAEPBDPBD@Z
	mov	DWORD PTR _szTextVal$[ebp], eax

; 10320: 	setArtDefineTag(szTextVal);

	mov	edx, DWORD PTR _szTextVal$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setArtDefineTag@CvMinorCivInfo@@QAEXPBD@Z ; CvMinorCivInfo::setArtDefineTag

; 10321: 
; 10322: 	//References
; 10323: 	szTextVal = kResults.GetText("DefaultPlayerColor");

	push	OFFSET ??_C@_0BD@HCFAICKO@DefaultPlayerColor?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetText@Results@Database@@QAEPBDPBD@Z
	mov	DWORD PTR _szTextVal$[ebp], eax

; 10324: 	m_iDefaultPlayerColor = GC.getInfoTypeForString(szTextVal, true);

	push	1
	mov	eax, DWORD PTR _szTextVal$[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+260], eax

; 10325: 
; 10326: 	szTextVal = kResults.GetText("ArtStyleType");

	push	OFFSET ??_C@_0N@NJJJCDLH@ArtStyleType?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetText@Results@Database@@QAEPBDPBD@Z
	mov	DWORD PTR _szTextVal$[ebp], eax

; 10327: 	m_iArtStyleType = GC.getInfoTypeForString(szTextVal, true);

	push	1
	mov	edx, DWORD PTR _szTextVal$[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+264], eax

; 10328: 
; 10329: 	szTextVal = kResults.GetText("ArtStylePrefix");

	push	OFFSET ??_C@_0P@INDOPAAJ@ArtStylePrefix?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetText@Results@Database@@QAEPBDPBD@Z
	mov	DWORD PTR _szTextVal$[ebp], eax

; 10330: 	setArtStylePrefix(szTextVal);

	mov	edx, DWORD PTR _szTextVal$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setArtStylePrefix@CvMinorCivInfo@@QAEXPBD@Z ; CvMinorCivInfo::setArtStylePrefix

; 10331: 
; 10332: 	szTextVal = kResults.GetText("ArtStyleSuffix");

	push	OFFSET ??_C@_0P@OGHDKAPM@ArtStyleSuffix?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetText@Results@Database@@QAEPBDPBD@Z
	mov	DWORD PTR _szTextVal$[ebp], eax

; 10333: 	setArtStyleSuffix(szTextVal);

	mov	eax, DWORD PTR _szTextVal$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setArtStyleSuffix@CvMinorCivInfo@@QAEXPBD@Z ; CvMinorCivInfo::setArtStyleSuffix

; 10334: 
; 10335: 	szTextVal = kResults.GetText("MinorCivTrait");

	push	OFFSET ??_C@_0O@JNFDBNFP@MinorCivTrait?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetText@Results@Database@@QAEPBDPBD@Z
	mov	DWORD PTR _szTextVal$[ebp], eax

; 10336: 	m_iMinorCivTrait = GC.getInfoTypeForString(szTextVal, true);

	push	1
	mov	ecx, DWORD PTR _szTextVal$[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+272], eax

; 10337: 
; 10338: 	//Arrays
; 10339: 	const char* szType = GetType();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 176				; 000000b0H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR _szType$[ebp], eax

; 10340: 	kUtility.SetFlavors(m_piFlavorValue, "MinorCivilization_Flavors", "MinorCivType", szType, -1);

	push	-1
	mov	eax, DWORD PTR _szType$[ebp]
	push	eax
	push	OFFSET ??_C@_0N@LAFCEEOK@MinorCivType?$AA@
	push	OFFSET ??_C@_0BK@BIPBGLOH@MinorCivilization_Flavors?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 532				; 00000214H
	push	ecx
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?SetFlavors@CvDatabaseUtility@@QAE_NAAPAHPBD11H@Z ; CvDatabaseUtility::SetFlavors

; 10341: 
; 10342: 	//City Names
; 10343: 	{
; 10344: 		m_vCityNames.clear();

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 536				; 00000218H
	mov	DWORD PTR $T248895[ebp], edx
	mov	eax, DWORD PTR $T248895[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T248717[ebp], ecx
	mov	edx, DWORD PTR $T248717[ebp]
	mov	DWORD PTR $T248879[ebp], edx
	mov	eax, DWORD PTR $T248879[ebp]
	mov	DWORD PTR $T248878[ebp], eax
	mov	ecx, DWORD PTR $T248895[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T248733[ebp], edx
	mov	eax, DWORD PTR $T248733[ebp]
	mov	DWORD PTR $T248881[ebp], eax
	mov	ecx, DWORD PTR $T248881[ebp]
	mov	DWORD PTR $T248880[ebp], ecx
	mov	edx, DWORD PTR $T248878[ebp]
	push	edx
	mov	eax, DWORD PTR $T248880[ebp]
	push	eax
	lea	ecx, DWORD PTR $T248882[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T248895[ebp]
	call	?erase@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@0@Z ; std::vector<CvString,std::allocator<CvString> >::erase

; 10345: 
; 10346: 		std::string strKey = "MinorCiv - CityName";

	push	OFFSET ??_C@_0BE@MBOKICA@MinorCiv?5?9?5CityName?$AA@
	lea	ecx, DWORD PTR _strKey$228970[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 10347: 		Database::Results* pResults = kUtility.GetResults(strKey);

	lea	edx, DWORD PTR _strKey$228970[ebp]
	push	edx
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?GetResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvDatabaseUtility::GetResults
	mov	DWORD PTR _pResults$228972[ebp], eax

; 10348: 		if(pResults == NULL)

	cmp	DWORD PTR _pResults$228972[ebp], 0
	jne	SHORT $LN3@CacheResul

; 10349: 		{
; 10350: 			pResults = kUtility.PrepareResults(strKey, "select CityName from MinorCivilization_CityNames where MinorCivType = ?");

	push	OFFSET ??_C@_0EI@MECNJGOD@select?5CityName?5from?5MinorCivili@
	lea	eax, DWORD PTR _strKey$228970[ebp]
	push	eax
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?PrepareResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CvDatabaseUtility::PrepareResults
	mov	DWORD PTR _pResults$228972[ebp], eax
$LN3@CacheResul:

; 10351: 		}
; 10352: 
; 10353: 		pResults->Bind(1, szType, -1, false);

	push	0
	push	-1
	mov	ecx, DWORD PTR _szType$[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _pResults$228972[ebp]
	call	DWORD PTR __imp_?Bind@Results@Database@@QAE_NHPBDH_N@Z
$LN2@CacheResul:

; 10354: 
; 10355: 		while(pResults->Step())

	mov	ecx, DWORD PTR _pResults$228972[ebp]
	call	DWORD PTR __imp_?Step@Results@Database@@QAE_NXZ
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@CacheResul

; 10356: 		{
; 10357: 			m_vCityNames.push_back(pResults->GetText(0));

	push	0
	mov	ecx, DWORD PTR _pResults$228972[ebp]
	call	DWORD PTR __imp_?GetText@Results@Database@@QAEPBDH@Z
	mov	DWORD PTR $T248904[ebp], eax
	cmp	DWORD PTR $T248904[ebp], 0
	je	SHORT $LN67@CacheResul
	mov	eax, DWORD PTR $T248904[ebp]
	mov	DWORD PTR tv292[ebp], eax
	jmp	SHORT $LN68@CacheResul
$LN67@CacheResul:
	mov	DWORD PTR tv292[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN68@CacheResul:
	mov	ecx, DWORD PTR tv292[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T248696[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	edx, DWORD PTR $T248696[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 536				; 00000218H
	call	?push_back@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEXABVCvString@@@Z ; std::vector<CvString,std::allocator<CvString> >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T248696[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 10358: 		}

	jmp	SHORT $LN2@CacheResul
$LN1@CacheResul:

; 10359: 
; 10360: 		pResults->Reset();

	mov	ecx, DWORD PTR _pResults$228972[ebp]
	call	DWORD PTR __imp_?Reset@Results@Database@@QAE_NXZ

; 10361: 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strKey$228970[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 10362: 
; 10363: 	return true;

	mov	al, 1
$LN5@CacheResul:

; 10364: }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CacheResults@CvMinorCivInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$0:
	lea	ecx, DWORD PTR _strKey$228970[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?CacheResults@CvMinorCivInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$1:
	lea	ecx, DWORD PTR $T248696[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?CacheResults@CvMinorCivInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-212]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CacheResults@CvMinorCivInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CacheResults@CvMinorCivInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z ENDP ; CvMinorCivInfo::CacheResults
; Function compile flags: /Odtp
;	COMDAT ??6@YAAAVFDataStream@@AAV0@ABW4MinorCivStatusTypes@@@Z
_TEXT	SEGMENT
$T249033 = -4						; size = 4
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??6@YAAAVFDataStream@@AAV0@ABW4MinorCivStatusTypes@@@Z PROC ; operator<<, COMDAT

; 10367: {

	push	ebp
	mov	ebp, esp
	push	ecx

; 10368: 	saveTo << static_cast<int>(readFrom);

	mov	eax, DWORD PTR _readFrom$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T249033[ebp], ecx
	lea	edx, DWORD PTR $T249033[ebp]
	push	edx
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 10369: 	return saveTo;

	mov	eax, DWORD PTR _saveTo$[ebp]

; 10370: }

	mov	esp, ebp
	pop	ebp
	ret	0
??6@YAAAVFDataStream@@AAV0@ABW4MinorCivStatusTypes@@@Z ENDP ; operator<<
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??5@YAAAVFDataStream@@AAV0@AAW4MinorCivStatusTypes@@@Z
_TEXT	SEGMENT
_v$ = -4						; size = 4
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??5@YAAAVFDataStream@@AAV0@AAW4MinorCivStatusTypes@@@Z PROC ; operator>>, COMDAT

; 10372: {

	push	ebp
	mov	ebp, esp
	push	ecx

; 10373: 	int v;
; 10374: 	loadFrom >> v;

	lea	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 10375: 	writeTo = static_cast<MinorCivStatusTypes>(v);

	mov	ecx, DWORD PTR _writeTo$[ebp]
	mov	edx, DWORD PTR _v$[ebp]
	mov	DWORD PTR [ecx], edx

; 10376: 	return loadFrom;

	mov	eax, DWORD PTR _loadFrom$[ebp]

; 10377: }

	mov	esp, ebp
	pop	ebp
	ret	0
??5@YAAAVFDataStream@@AAV0@AAW4MinorCivStatusTypes@@@Z ENDP ; operator>>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??6@YAAAVFDataStream@@AAV0@ABW4MinorCivPersonalityTypes@@@Z
_TEXT	SEGMENT
$T249044 = -4						; size = 4
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??6@YAAAVFDataStream@@AAV0@ABW4MinorCivPersonalityTypes@@@Z PROC ; operator<<, COMDAT

; 10380: {

	push	ebp
	mov	ebp, esp
	push	ecx

; 10381: 	saveTo << static_cast<int>(readFrom);

	mov	eax, DWORD PTR _readFrom$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T249044[ebp], ecx
	lea	edx, DWORD PTR $T249044[ebp]
	push	edx
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 10382: 	return saveTo;

	mov	eax, DWORD PTR _saveTo$[ebp]

; 10383: }

	mov	esp, ebp
	pop	ebp
	ret	0
??6@YAAAVFDataStream@@AAV0@ABW4MinorCivPersonalityTypes@@@Z ENDP ; operator<<
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??5@YAAAVFDataStream@@AAV0@AAW4MinorCivPersonalityTypes@@@Z
_TEXT	SEGMENT
_v$ = -4						; size = 4
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??5@YAAAVFDataStream@@AAV0@AAW4MinorCivPersonalityTypes@@@Z PROC ; operator>>, COMDAT

; 10385: {

	push	ebp
	mov	ebp, esp
	push	ecx

; 10386: 	int v;
; 10387: 	loadFrom >> v;

	lea	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 10388: 	writeTo = static_cast<MinorCivPersonalityTypes>(v);

	mov	ecx, DWORD PTR _writeTo$[ebp]
	mov	edx, DWORD PTR _v$[ebp]
	mov	DWORD PTR [ecx], edx

; 10389: 	return loadFrom;

	mov	eax, DWORD PTR _loadFrom$[ebp]

; 10390: }

	mov	esp, ebp
	pop	ebp
	ret	0
??5@YAAAVFDataStream@@AAV0@AAW4MinorCivPersonalityTypes@@@Z ENDP ; operator>>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??6@YAAAVFDataStream@@AAV0@ABW4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
$T249055 = -4						; size = 4
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??6@YAAAVFDataStream@@AAV0@ABW4MinorCivQuestTypes@@@Z PROC ; operator<<, COMDAT

; 10393: {

	push	ebp
	mov	ebp, esp
	push	ecx

; 10394: 	saveTo << static_cast<int>(readFrom);

	mov	eax, DWORD PTR _readFrom$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T249055[ebp], ecx
	lea	edx, DWORD PTR $T249055[ebp]
	push	edx
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 10395: 	return saveTo;

	mov	eax, DWORD PTR _saveTo$[ebp]

; 10396: }

	mov	esp, ebp
	pop	ebp
	ret	0
??6@YAAAVFDataStream@@AAV0@ABW4MinorCivQuestTypes@@@Z ENDP ; operator<<
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??5@YAAAVFDataStream@@AAV0@AAW4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
_v$ = -4						; size = 4
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??5@YAAAVFDataStream@@AAV0@AAW4MinorCivQuestTypes@@@Z PROC ; operator>>, COMDAT

; 10398: {

	push	ebp
	mov	ebp, esp
	push	ecx

; 10399: 	int v;
; 10400: 	loadFrom >> v;

	lea	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 10401: 	writeTo = static_cast<MinorCivQuestTypes>(v);

	mov	ecx, DWORD PTR _writeTo$[ebp]
	mov	edx, DWORD PTR _v$[ebp]
	mov	DWORD PTR [ecx], edx

; 10402: 	return loadFrom;

	mov	eax, DWORD PTR _loadFrom$[ebp]

; 10403: }

	mov	esp, ebp
	pop	ebp
	ret	0
??5@YAAAVFDataStream@@AAV0@AAW4MinorCivQuestTypes@@@Z ENDP ; operator>>
_TEXT	ENDS
PUBLIC	?_Xran@?$vector@HV?$allocator@H@std@@@std@@KAXXZ ; std::vector<int,std::allocator<int> >::_Xran
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?at@?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z
_TEXT	SEGMENT
_this$ = -88						; size = 4
__Tmp$249117 = -84					; size = 4
$T249095 = -80						; size = 4
$T249067 = -8						; size = 4
$T249066 = -4						; size = 4
__Pos$ = 8						; size = 4
?at@?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z PROC	; std::vector<int,std::allocator<int> >::at, COMDAT
; _this$ = ecx

; 752  : 		{	// subscript mutable sequence with checking

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	mov	DWORD PTR _this$[ebp], ecx

; 753  : 		if (size() <= _Pos)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	cmp	edx, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN1@at

; 754  : 			_Xran();

	call	?_Xran@?$vector@HV?$allocator@H@std@@@std@@KAXXZ ; std::vector<int,std::allocator<int> >::_Xran
$LN1@at:

; 755  : 		return (*(begin() + _Pos));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T249095[ebp], ecx
	mov	edx, DWORD PTR $T249095[ebp]
	mov	DWORD PTR $T249066[ebp], edx
	mov	eax, DWORD PTR $T249066[ebp]
	mov	DWORD PTR __Tmp$249117[ebp], eax
	mov	ecx, DWORD PTR __Pos$[ebp]
	mov	edx, DWORD PTR __Tmp$249117[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR __Tmp$249117[ebp], eax
	mov	ecx, DWORD PTR __Tmp$249117[ebp]
	mov	DWORD PTR $T249067[ebp], ecx
	mov	eax, DWORD PTR $T249067[ebp]

; 756  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?at@?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z ENDP	; std::vector<int,std::allocator<int> >::at
_TEXT	ENDS
PUBLIC	?insert@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@ABVCvString@@@Z ; std::vector<CvString,std::allocator<CvString> >::insert
PUBLIC	??$_Uninit_fill_n@PAVCvString@@IV1@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@IABV1@AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<CvString *,unsigned int,CvString,std::allocator<CvString> >
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEXABVCvString@@@Z
_TEXT	SEGMENT
tv129 = -64						; size = 4
_this$ = -60						; size = 4
$T249177 = -32						; size = 4
$T249167 = -28						; size = 4
$T249157 = -24						; size = 4
__Cat$249164 = -19					; size = 1
$T249161 = -18						; size = 1
$T249160 = -17						; size = 1
$T249134 = -16						; size = 4
$T249130 = -12						; size = 4
$T249129 = -8						; size = 4
$T249128 = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEXABVCvString@@@Z PROC ; std::vector<CvString,std::allocator<CvString> >::push_back, COMDAT
; _this$ = ecx

; 809  : 		{	// insert element at end

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	mov	DWORD PTR _this$[ebp], ecx

; 810  : 		if (size() < capacity())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR $T249134[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], 0
	jne	SHORT $LN9@push_back
	mov	DWORD PTR tv129[ebp], 0
	jmp	SHORT $LN7@push_back
$LN9@push_back:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR tv129[ebp], eax
$LN7@push_back:
	mov	edx, DWORD PTR $T249134[ebp]
	cmp	edx, DWORD PTR tv129[ebp]
	jae	SHORT $LN2@push_back

; 811  : 
; 812  :  #if _HAS_ITERATOR_DEBUGGING
; 813  : 			{ // room at end, construct it there
; 814  : 			_Orphan_range(_Mylast, _Mylast);
; 815  : 			_Mylast = _Ufill(_Mylast, 1, _Val);
; 816  : 			}
; 817  : 
; 818  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 819  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T249167[ebp], ecx
	mov	edx, DWORD PTR $T249167[ebp]
	mov	DWORD PTR $T249157[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T249160[ebp], al
	mov	cl, BYTE PTR __Cat$249164[ebp]
	mov	BYTE PTR $T249161[ebp], cl
	movzx	edx, BYTE PTR $T249160[ebp]
	push	edx
	movzx	eax, BYTE PTR $T249161[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR $T249157[ebp]
	push	eax
	call	??$_Uninit_fill_n@PAVCvString@@IV1@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@IABV1@AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<CvString *,unsigned int,CvString,std::allocator<CvString> >
	add	esp, 24					; 00000018H
	mov	ecx, 1
	imul	ecx, 28					; 0000001cH
	add	ecx, DWORD PTR $T249167[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 820  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 821  : 
; 822  : 		else

	jmp	SHORT $LN3@push_back
$LN2@push_back:

; 823  : 			insert(end(), _Val);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T249177[ebp], ecx
	mov	edx, DWORD PTR $T249177[ebp]
	mov	DWORD PTR $T249129[ebp], edx
	mov	eax, DWORD PTR $T249129[ebp]
	mov	DWORD PTR $T249128[ebp], eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T249128[ebp]
	push	edx
	lea	eax, DWORD PTR $T249130[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@ABVCvString@@@Z ; std::vector<CvString,std::allocator<CvString> >::insert
$LN3@push_back:

; 824  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEXABVCvString@@@Z ENDP ; std::vector<CvString,std::allocator<CvString> >::push_back
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@XZ ; std::_Vector_val<enum ResourceTypes,std::allocator<enum ResourceTypes> >::~_Vector_val<enum ResourceTypes,std::allocator<enum ResourceTypes> >
PUBLIC	?_Tidy@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@IAEXXZ ; std::vector<enum ResourceTypes,std::allocator<enum ResourceTypes> >::_Tidy
PUBLIC	??$_Uninit_copy@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@PAW4ResourceTypes@@V?$allocator@W4ResourceTypes@@@2@@std@@YAPAW4ResourceTypes@@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@0@0PAW41@AAV?$allocator@W4ResourceTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<enum ResourceTypes,std::allocator<enum ResourceTypes> >,enum ResourceTypes *,std::allocator<enum ResourceTypes> >
PUBLIC	?_Buy@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@IAE_NI@Z ; std::vector<enum ResourceTypes,std::allocator<enum ResourceTypes> >::_Buy
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$??0?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@ABV01@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@ABV01@@Z$0
__tryblocktable$??0?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@ABV01@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??0?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@ABV01@@Z$5
__unwindtable$??0?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@ABV01@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??0?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??0?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv215 = -212						; size = 4
tv148 = -208						; size = 4
tv172 = -204						; size = 4
_this$ = -200						; size = 4
$T249357 = -164						; size = 4
$T249356 = -160						; size = 4
$T249355 = -156						; size = 4
$T249345 = -152						; size = 4
$T249344 = -148						; size = 4
__Cat$249353 = -143					; size = 1
$T249350 = -142						; size = 1
$T249349 = -141						; size = 1
$T249324 = -140						; size = 4
$T249315 = -136						; size = 4
$T249284 = -48						; size = 4
$T249280 = -42						; size = 1
$T249267 = -41						; size = 1
$T249263 = -40						; size = 4
$T249256 = -32						; size = 4
$T249247 = -28						; size = 4
$T249246 = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Right$ = 8						; size = 4
??0?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@ABV01@@Z PROC ; std::vector<enum ResourceTypes,std::allocator<enum ResourceTypes> >::vector<enum ResourceTypes,std::allocator<enum ResourceTypes> >, COMDAT
; _this$ = ecx

; 500  : 		{	// construct by copying _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T249280[ebp]
	mov	DWORD PTR $T249256[ebp], eax
	lea	ecx, DWORD PTR $T249267[ebp]
	mov	DWORD PTR $T249263[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv172[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv148[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 501  : 		if (_Buy(_Right.size()))

	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	mov	DWORD PTR $T249284[ebp], eax
	mov	ecx, DWORD PTR $T249284[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@IAE_NI@Z ; std::vector<enum ResourceTypes,std::allocator<enum ResourceTypes> >::_Buy
	movzx	edx, al
	test	edx, edx
	je	$LN3@vector

; 502  : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 1

; 503  : 			_Mylast = _Ucopy(_Right.begin(), _Right.end(), _Myfirst);

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T249315[ebp], ecx
	mov	edx, DWORD PTR $T249315[ebp]
	mov	DWORD PTR $T249246[ebp], edx
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T249324[ebp], ecx
	mov	edx, DWORD PTR $T249324[ebp]
	mov	DWORD PTR $T249247[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T249357[ebp], ecx
	mov	edx, DWORD PTR $T249246[ebp]
	mov	DWORD PTR $T249356[ebp], edx
	mov	eax, DWORD PTR $T249247[ebp]
	mov	DWORD PTR $T249355[ebp], eax
	mov	ecx, DWORD PTR $T249357[ebp]
	mov	DWORD PTR $T249345[ebp], ecx
	mov	edx, DWORD PTR $T249355[ebp]
	mov	DWORD PTR $T249344[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T249349[ebp], al
	mov	cl, BYTE PTR __Cat$249353[ebp]
	mov	BYTE PTR $T249350[ebp], cl
	movzx	edx, BYTE PTR $T249349[ebp]
	push	edx
	movzx	eax, BYTE PTR $T249350[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T249345[ebp]
	push	edx
	mov	eax, DWORD PTR $T249356[ebp]
	push	eax
	mov	ecx, DWORD PTR $T249344[ebp]
	push	ecx
	call	??$_Uninit_copy@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@PAW4ResourceTypes@@V?$allocator@W4ResourceTypes@@@2@@std@@YAPAW4ResourceTypes@@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@0@0PAW41@AAV?$allocator@W4ResourceTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<enum ResourceTypes,std::allocator<enum ResourceTypes> >,enum ResourceTypes *,std::allocator<enum ResourceTypes> >
	add	esp, 24					; 00000018H
	mov	DWORD PTR tv215[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv215[ebp]
	mov	DWORD PTR [edx+8], eax
	jmp	SHORT $LN5@vector
__catch$??0?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@ABV01@@Z$0:

; 504  : 			_CATCH_ALL
; 505  : 			_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@IAEXXZ ; std::vector<enum ResourceTypes,std::allocator<enum ResourceTypes> >::_Tidy

; 506  : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 507  : 			_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN3@vector
	ret	0
$LN5@vector:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN3@vector:

; 508  : 		}

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@XZ
__ehhandler$??0?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-216]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::vector<enum ResourceTypes,std::allocator<enum ResourceTypes> >::vector<enum ResourceTypes,std::allocator<enum ResourceTypes> >
PUBLIC	??1?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@QAE@XZ ; BaseVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,0>::~BaseVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,0>
PUBLIC	??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@ ; `string'
EXTRN	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z:PROC ; FireMallocAlignedNoTracking
;	COMDAT ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@ DB 'd:\sources\'
	DB	'lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\FF'
	DB	'astVector.h', 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??0?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T249447 = -20						; size = 4
_pRet$249443 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??0?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>::FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 22			; 00000016H

; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T249447[ebp], edx
	cmp	DWORD PTR $T249447[ebp], 22		; 00000016H
	jbe	SHORT $LN7@FStaticVec
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	eax, DWORD PTR $T249447[ebp]
	imul	eax, 156				; 0000009cH
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$249443[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T249447[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN8@FStaticVec
$LN7@FStaticVec:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pRet$249443[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 22			; 00000016H
$LN8@FStaticVec:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pRet$249443[ebp]
	mov	DWORD PTR [edx], eax

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@QAE@XZ ; BaseVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,0>::~BaseVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,0>
__ehhandler$??0?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>::FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>
PUBLIC	?Destroy@?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@IAEXPAV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@I@Z ; BaseVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,0>::Destroy
EXTRN	?FireFreeAlignedNoTracking@@YAXPAX@Z:PROC	; FireFreeAlignedNoTracking
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??1?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -40						; size = 4
$T249499 = -36						; size = 4
$T249498 = -32						; size = 4
__$EHRec$ = -12						; size = 12
??1?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>::~FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>, COMDAT
; _this$ = ecx

; 617  : 	~FStaticVector(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T249499[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T249498[ebp], eax
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN5@FStaticVec@2
	mov	edx, DWORD PTR $T249499[ebp]
	push	edx
	mov	eax, DWORD PTR $T249498[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Destroy@?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@IAEXPAV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@I@Z ; BaseVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,0>::Destroy
$LN5@FStaticVec@2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	cmp	DWORD PTR $T249498[ebp], ecx
	je	SHORT $LN1@FStaticVec@2
	mov	edx, DWORD PTR $T249498[ebp]
	push	edx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN1@FStaticVec@2:

; 619  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@QAE@XZ ; BaseVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,0>::~BaseVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,0>
__ehhandler$??1?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>::~FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@ABV0@@Z ; FStaticVector<CvMinorCivQuest,5,0,297,0>::FStaticVector<CvMinorCivQuest,5,0,297,0>
PUBLIC	?GrowSize@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>::GrowSize
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\new
xdata$x	SEGMENT
__unwindtable$?push_back@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAEIABV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAEIABV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@@Z$0
__ehfuncinfo$?push_back@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAEIABV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?push_back@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAEIABV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	ENDS
;	COMDAT ?push_back@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAEIABV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@@Z
_TEXT	SEGMENT
tv157 = -84						; size = 4
tv149 = -80						; size = 4
_this$ = -76						; size = 4
$T249512 = -20						; size = 4
$T249511 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_element$ = 8						; size = 4
?push_back@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAEIABV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@@Z PROC ; FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?push_back@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAEIABV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 677  : 		m_bIsResized = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+3444], 0

; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN40@push_back@2

; 679  : 			GrowSize(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GrowSize@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>::GrowSize

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

$LN40@push_back@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	mov	DWORD PTR $T249512[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T249512[ebp], 0
	je	SHORT $LN4@push_back@2
	mov	eax, DWORD PTR _element$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T249512[ebp]
	call	??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@ABV0@@Z ; FStaticVector<CvMinorCivQuest,5,0,297,0>::FStaticVector<CvMinorCivQuest,5,0,297,0>
	mov	DWORD PTR tv149[ebp], eax
	jmp	SHORT $LN5@push_back@2
$LN4@push_back@2:
	mov	DWORD PTR tv149[ebp], 0
$LN5@push_back@2:
	mov	ecx, DWORD PTR tv149[ebp]
	mov	DWORD PTR $T249511[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 681  : 		return m_uiCurrSize++;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR tv157[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR tv157[ebp]

; 682  : 	};

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?push_back@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAEIABV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@@Z$0:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 156				; 0000009cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR $T249512[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?push_back@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAEIABV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?push_back@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAEIABV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?push_back@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@QAEIABV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@@Z ENDP ; FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>::push_back
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 63   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 64   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
_TEXT	ENDS
;	COMDAT ?clear@?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
?clear@?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@QAEXXZ PROC ; BaseVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,0>::clear, COMDAT
; _this$ = ecx

; 120  : 	void clear(){

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 121  : 		Destroy(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Destroy@?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@IAEXPAV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@I@Z ; BaseVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,0>::Destroy

; 122  : 		m_uiCurrSize = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 123  : 	};

	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@QAEXXZ ENDP ; BaseVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,0>::clear
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T249629 = -20						; size = 4
_pRet$249625 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<CvMinorCivQuest,5,0,297,0>::FStaticVector<CvMinorCivQuest,5,0,297,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 5

; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T249629[ebp], edx
	cmp	DWORD PTR $T249629[ebp], 5
	jbe	SHORT $LN7@FStaticVec@3
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	eax, DWORD PTR $T249629[ebp]
	imul	eax, 28					; 0000001cH
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$249625[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T249629[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN8@FStaticVec@3
$LN7@FStaticVec@3:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pRet$249625[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 5
$LN8@FStaticVec@3:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pRet$249625[ebp]
	mov	DWORD PTR [edx], eax

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@VCvMinorCivQuest@@$0A@@@QAE@XZ ; BaseVector<CvMinorCivQuest,0>::~BaseVector<CvMinorCivQuest,0>
__ehhandler$??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<CvMinorCivQuest,5,0,297,0>::FStaticVector<CvMinorCivQuest,5,0,297,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??1?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
__$EHRec$ = -12						; size = 12
??1?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<CvMinorCivQuest,5,0,297,0>::~FStaticVector<CvMinorCivQuest,5,0,297,0>, COMDAT
; _this$ = ecx

; 617  : 	~FStaticVector(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@IAEXPAVCvMinorCivQuest@@I@Z ; FStaticVector<CvMinorCivQuest,5,0,297,0>::Free

; 619  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@VCvMinorCivQuest@@$0A@@@QAE@XZ ; BaseVector<CvMinorCivQuest,0>::~BaseVector<CvMinorCivQuest,0>
__ehhandler$??1?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<CvMinorCivQuest,5,0,297,0>::~FStaticVector<CvMinorCivQuest,5,0,297,0>
PUBLIC	?GrowSize@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvMinorCivQuest,5,0,297,0>::GrowSize
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAEIABVCvMinorCivQuest@@@Z
_TEXT	SEGMENT
tv141 = -48						; size = 4
tv132 = -44						; size = 4
_this$ = -40						; size = 4
$T249667 = -4						; size = 4
_element$ = 8						; size = 4
?push_back@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAEIABVCvMinorCivQuest@@@Z PROC ; FStaticVector<CvMinorCivQuest,5,0,297,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 677  : 		m_bIsResized = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+152], 0

; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN38@push_back@3

; 679  : 			GrowSize(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GrowSize@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvMinorCivQuest,5,0,297,0>::GrowSize

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

$LN38@push_back@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	mov	DWORD PTR $T249667[ebp], ecx
	je	SHORT $LN4@push_back@3
	mov	esi, DWORD PTR _element$[ebp]
	mov	ecx, 7
	mov	edi, DWORD PTR $T249667[ebp]
	rep movsd
	mov	eax, DWORD PTR $T249667[ebp]
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN5@push_back@3
$LN4@push_back@3:
	mov	DWORD PTR tv132[ebp], 0
$LN5@push_back@3:

; 681  : 		return m_uiCurrSize++;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv141[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR tv141[ebp]

; 682  : 	};

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAEIABVCvMinorCivQuest@@@Z ENDP ; FStaticVector<CvMinorCivQuest,5,0,297,0>::push_back
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?erase@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAEXPAVCvMinorCivQuest@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
_i$229373 = -8						; size = 4
_uIndex$ = -4						; size = 4
_it$ = 8						; size = 4
?erase@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAEXPAVCvMinorCivQuest@@@Z PROC ; FStaticVector<CvMinorCivQuest,5,0,297,0>::erase, COMDAT
; _this$ = ecx

; 702  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 703  : 		m_bIsResized = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+152], 0

; 704  : 
; 705  : 		unsigned int uIndex = it - m_pData;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _it$[ebp]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR _uIndex$[ebp], eax

; 706  : 
; 707  :         for(unsigned int i = uIndex; i + 1< m_uiCurrSize; ++i)

	mov	edx, DWORD PTR _uIndex$[ebp]
	mov	DWORD PTR _i$229373[ebp], edx
	jmp	SHORT $LN3@erase
$LN2@erase:
	mov	eax, DWORD PTR _i$229373[ebp]
	add	eax, 1
	mov	DWORD PTR _i$229373[ebp], eax
$LN3@erase:
	mov	ecx, DWORD PTR _i$229373[ebp]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+4]
	jae	SHORT $LN1@erase

; 708  :         {
; 709  :             m_pData[i] = m_pData[i+1];

	mov	eax, DWORD PTR _i$229373[ebp]
	add	eax, 1
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [ecx]
	add	esi, eax
	mov	edx, DWORD PTR _i$229373[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR [eax]
	add	edi, edx
	mov	ecx, 7
	rep movsd

; 710  :         }

	jmp	SHORT $LN2@erase
$LN1@erase:

; 711  : 		
; 712  : 		--m_uiCurrSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx

; 713  : 	}

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAEXPAVCvMinorCivQuest@@@Z ENDP ; FStaticVector<CvMinorCivQuest,5,0,297,0>::erase
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?clear@?$BaseVector@VCvMinorCivQuest@@$0A@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T249725 = -16						; size = 4
$T249724 = -12						; size = 4
$T249713 = -8						; size = 4
_i$249716 = -4						; size = 4
?clear@?$BaseVector@VCvMinorCivQuest@@$0A@@@QAEXXZ PROC	; BaseVector<CvMinorCivQuest,0>::clear, COMDAT
; _this$ = ecx

; 120  : 	void clear(){

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 121  : 		Destroy(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T249725[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T249724[ebp], eax
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN7@clear
	mov	DWORD PTR _i$249716[ebp], 0
	jmp	SHORT $LN5@clear
$LN4@clear:
	mov	edx, DWORD PTR _i$249716[ebp]
	add	edx, 1
	mov	DWORD PTR _i$249716[ebp], edx
$LN5@clear:
	mov	eax, DWORD PTR _i$249716[ebp]
	cmp	eax, DWORD PTR $T249725[ebp]
	jae	SHORT $LN7@clear
	mov	ecx, DWORD PTR _i$249716[ebp]
	imul	ecx, 28					; 0000001cH
	add	ecx, DWORD PTR $T249724[ebp]
	mov	DWORD PTR $T249713[ebp], ecx
	mov	ecx, DWORD PTR $T249713[ebp]
	call	??1CvMinorCivQuest@@QAE@XZ		; CvMinorCivQuest::~CvMinorCivQuest
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN10@clear
	mov	eax, DWORD PTR $T249713[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN10@clear:
	jmp	SHORT $LN4@clear
$LN7@clear:

; 122  : 		m_uiCurrSize = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 123  : 	};

	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$BaseVector@VCvMinorCivQuest@@$0A@@@QAEXXZ ENDP	; BaseVector<CvMinorCivQuest,0>::clear
_TEXT	ENDS
PUBLIC	??1?$BaseVector@W4PlayerTypes@@$00@@QAE@XZ	; BaseVector<enum PlayerTypes,1>::~BaseVector<enum PlayerTypes,1>
PUBLIC	?Copy@?$BaseVector@W4PlayerTypes@@$00@@IAEXABV1@@Z ; BaseVector<enum PlayerTypes,1>::Copy
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\new
xdata$x	SEGMENT
__unwindtable$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@ABV0@@Z$0
__ehfuncinfo$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@ABV0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	ENDS
;	COMDAT ??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T249738 = -20						; size = 4
_pRet$249734 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_RHS$ = 8						; size = 4
??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@ABV0@@Z PROC ; FStaticVector<enum PlayerTypes,64,1,297,0>::FStaticVector<enum PlayerTypes,64,1,297,0>, COMDAT
; _this$ = ecx

; 591  : 	FStaticVector(const THIS_TYPE& RHS)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@ABV0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 592  : 	{
; 593  : 		m_uiCurrSize = RHS.m_uiCurrSize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _RHS$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 594  : 		m_uiCurrMaxSize = RHS.m_uiCurrMaxSize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _RHS$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx

; 595  : 		m_pData = Alloc(RHS.m_uiCurrMaxSize);

	mov	eax, DWORD PTR _RHS$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T249738[ebp], ecx
	cmp	DWORD PTR $T249738[ebp], 64		; 00000040H
	jbe	SHORT $LN7@FStaticVec@4
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	edx, DWORD PTR $T249738[ebp]
	shl	edx, 2
	push	edx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$249734[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T249738[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN8@FStaticVec@4
$LN7@FStaticVec@4:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _pRet$249734[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 64			; 00000040H
$LN8@FStaticVec@4:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pRet$249734[ebp]
	mov	DWORD PTR [ecx], edx

; 596  : #ifdef BREAK_ON_STATIC_RESIZE
; 597  : 		m_iNumResized = 0;
; 598  : #endif
; 599  : 		Copy(RHS);

	mov	eax, DWORD PTR _RHS$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Copy@?$BaseVector@W4PlayerTypes@@$00@@IAEXABV1@@Z ; BaseVector<enum PlayerTypes,1>::Copy

; 600  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@ABV0@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@W4PlayerTypes@@$00@@QAE@XZ ; BaseVector<enum PlayerTypes,1>::~BaseVector<enum PlayerTypes,1>
__ehhandler$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@ABV0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@ABV0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@ABV0@@Z ENDP ; FStaticVector<enum PlayerTypes,64,1,297,0>::FStaticVector<enum PlayerTypes,64,1,297,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T249764 = -20						; size = 4
_pRet$249760 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<enum PlayerTypes,64,1,297,0>::FStaticVector<enum PlayerTypes,64,1,297,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 64			; 00000040H

; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T249764[ebp], edx
	cmp	DWORD PTR $T249764[ebp], 64		; 00000040H
	jbe	SHORT $LN7@FStaticVec@5
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	eax, DWORD PTR $T249764[ebp]
	shl	eax, 2
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$249760[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T249764[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN8@FStaticVec@5
$LN7@FStaticVec@5:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pRet$249760[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 64			; 00000040H
$LN8@FStaticVec@5:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pRet$249760[ebp]
	mov	DWORD PTR [edx], eax

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@W4PlayerTypes@@$00@@QAE@XZ ; BaseVector<enum PlayerTypes,1>::~BaseVector<enum PlayerTypes,1>
__ehhandler$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<enum PlayerTypes,64,1,297,0>::FStaticVector<enum PlayerTypes,64,1,297,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@I@Z$0
__ehfuncinfo$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T249783 = -20						; size = 4
_pRet$249779 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_uiStartingMaxSize$ = 8					; size = 4
??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@I@Z PROC ; FStaticVector<enum PlayerTypes,64,1,297,0>::FStaticVector<enum PlayerTypes,64,1,297,0>, COMDAT
; _this$ = ecx

; 609  : 	FStaticVector(unsigned int uiStartingMaxSize)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 610  : 	{
; 611  : 		m_uiCurrMaxSize = uiStartingMaxSize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _uiStartingMaxSize$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 612  : 		m_pData = Alloc(m_uiCurrMaxSize);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T249783[ebp], eax
	cmp	DWORD PTR $T249783[ebp], 64		; 00000040H
	jbe	SHORT $LN7@FStaticVec@6
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	ecx, DWORD PTR $T249783[ebp]
	shl	ecx, 2
	push	ecx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$249779[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T249783[ebp]
	mov	DWORD PTR [edx+8], eax
	jmp	SHORT $LN8@FStaticVec@6
$LN7@FStaticVec@6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	mov	DWORD PTR _pRet$249779[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 64			; 00000040H
$LN8@FStaticVec@6:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pRet$249779[ebp]
	mov	DWORD PTR [eax], ecx

; 613  : #ifdef BREAK_ON_STATIC_RESIZE
; 614  : 		m_iNumResized = 0;
; 615  : #endif
; 616  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@I@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@W4PlayerTypes@@$00@@QAE@XZ ; BaseVector<enum PlayerTypes,1>::~BaseVector<enum PlayerTypes,1>
__ehhandler$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@I@Z ENDP ; FStaticVector<enum PlayerTypes,64,1,297,0>::FStaticVector<enum PlayerTypes,64,1,297,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T249814 = -24						; size = 4
$T249813 = -20						; size = 4
_i$249808 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>, COMDAT
; _this$ = ecx

; 617  : 	~FStaticVector(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T249814[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T249813[ebp], eax
	xor	ecx, ecx
	je	SHORT $LN5@FStaticVec@7
	xor	edx, edx
	je	SHORT $LN5@FStaticVec@7
	mov	DWORD PTR _i$249808[ebp], 0
	jmp	SHORT $LN10@FStaticVec@7
$LN9@FStaticVec@7:
	mov	eax, DWORD PTR _i$249808[ebp]
	add	eax, 1
	mov	DWORD PTR _i$249808[ebp], eax
$LN10@FStaticVec@7:
	mov	ecx, DWORD PTR _i$249808[ebp]
	cmp	ecx, DWORD PTR $T249814[ebp]
	jae	SHORT $LN5@FStaticVec@7
	jmp	SHORT $LN9@FStaticVec@7
$LN5@FStaticVec@7:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	cmp	DWORD PTR $T249813[ebp], edx
	je	SHORT $LN1@FStaticVec@7
	mov	eax, DWORD PTR $T249813[ebp]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN1@FStaticVec@7:

; 619  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@W4PlayerTypes@@$00@@QAE@XZ ; BaseVector<enum PlayerTypes,1>::~BaseVector<enum PlayerTypes,1>
__ehhandler$??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<enum PlayerTypes,64,1,297,0>::~FStaticVector<enum PlayerTypes,64,1,297,0>
; Function compile flags: /Odtp
;	COMDAT ??4?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAEXABV0@@Z
_TEXT	SEGMENT
_this$ = -36						; size = 4
_i$249858 = -24						; size = 4
$T249854 = -20						; size = 4
_pRet$249850 = -16					; size = 4
$T249847 = -12						; size = 4
$T249846 = -8						; size = 4
_i$249841 = -4						; size = 4
_RHS$ = 8						; size = 4
??4?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAEXABV0@@Z PROC ; FStaticVector<enum PlayerTypes,64,1,297,0>::operator=, COMDAT
; _this$ = ecx

; 620  : 	void operator = (const THIS_TYPE& RHS){

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 621  : 		if( m_uiCurrMaxSize <= RHS.m_uiCurrSize){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _RHS$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	ja	$LN2@operator@2

; 622  : 			Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T249847[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T249846[ebp], eax
	xor	ecx, ecx
	je	SHORT $LN6@operator@2
	xor	edx, edx
	je	SHORT $LN6@operator@2
	mov	DWORD PTR _i$249841[ebp], 0
	jmp	SHORT $LN11@operator@2
$LN10@operator@2:
	mov	eax, DWORD PTR _i$249841[ebp]
	add	eax, 1
	mov	DWORD PTR _i$249841[ebp], eax
$LN11@operator@2:
	mov	ecx, DWORD PTR _i$249841[ebp]
	cmp	ecx, DWORD PTR $T249847[ebp]
	jae	SHORT $LN6@operator@2
	jmp	SHORT $LN10@operator@2
$LN6@operator@2:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	cmp	DWORD PTR $T249846[ebp], edx
	je	SHORT $LN7@operator@2
	mov	eax, DWORD PTR $T249846[ebp]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN7@operator@2:

; 623  : 			m_pData = Alloc(RHS.m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _RHS$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T249854[ebp], edx
	cmp	DWORD PTR $T249854[ebp], 64		; 00000040H
	jbe	SHORT $LN16@operator@2
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	eax, DWORD PTR $T249854[ebp]
	shl	eax, 2
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$249850[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T249854[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN17@operator@2
$LN16@operator@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pRet$249850[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 64			; 00000040H
$LN17@operator@2:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pRet$249850[ebp]
	mov	DWORD PTR [edx], eax

; 624  : 		}else{

	jmp	SHORT $LN1@operator@2
$LN2@operator@2:

; 625  : 			Destroy(m_pData, m_uiCurrSize);

	xor	ecx, ecx
	je	SHORT $LN1@operator@2
	mov	DWORD PTR _i$249858[ebp], 0
	jmp	SHORT $LN21@operator@2
$LN20@operator@2:
	mov	edx, DWORD PTR _i$249858[ebp]
	add	edx, 1
	mov	DWORD PTR _i$249858[ebp], edx
$LN21@operator@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$249858[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN1@operator@2
	jmp	SHORT $LN20@operator@2
$LN1@operator@2:

; 626  : 		}
; 627  : 		Copy(RHS);

	mov	edx, DWORD PTR _RHS$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Copy@?$BaseVector@W4PlayerTypes@@$00@@IAEXABV1@@Z ; BaseVector<enum PlayerTypes,1>::Copy

; 628  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
??4?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAEXABV0@@Z ENDP ; FStaticVector<enum PlayerTypes,64,1,297,0>::operator=
_TEXT	ENDS
PUBLIC	?GrowSize@?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<enum PlayerTypes,64,1,297,0>::GrowSize
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAEIABW4PlayerTypes@@@Z
_TEXT	SEGMENT
tv140 = -52						; size = 4
tv131 = -48						; size = 4
_this$ = -44						; size = 4
$T249872 = -4						; size = 4
_element$ = 8						; size = 4
?push_back@?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAEIABW4PlayerTypes@@@Z PROC ; FStaticVector<enum PlayerTypes,64,1,297,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	DWORD PTR _this$[ebp], ecx

; 677  : 		m_bIsResized = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+268], 0

; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN35@push_back@4

; 679  : 			GrowSize(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GrowSize@?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<enum PlayerTypes,64,1,297,0>::GrowSize

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

$LN35@push_back@4:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR $T249872[ebp], ecx
	cmp	DWORD PTR $T249872[ebp], 0
	je	SHORT $LN4@push_back@4
	mov	edx, DWORD PTR $T249872[ebp]
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T249872[ebp]
	mov	DWORD PTR tv131[ebp], edx
	jmp	SHORT $LN5@push_back@4
$LN4@push_back@4:
	mov	DWORD PTR tv131[ebp], 0
$LN5@push_back@4:

; 681  : 		return m_uiCurrSize++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv140[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv140[ebp]

; 682  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@QAEIABW4PlayerTypes@@@Z ENDP ; FStaticVector<enum PlayerTypes,64,1,297,0>::push_back
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ??1?$auto_ptr@VICvCity1@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_inst$249921 = -8					; size = 4
$T249916 = -4						; size = 4
??1?$auto_ptr@VICvCity1@@@std@@QAE@XZ PROC		; std::auto_ptr<ICvCity1>::~auto_ptr<ICvCity1>, COMDAT
; _this$ = ecx

; 720  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 721  : 		delete _Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T249916[ebp], ecx
	cmp	DWORD PTR $T249916[ebp], 0
	je	SHORT $LN1@auto_ptr
	mov	edx, DWORD PTR $T249916[ebp]
	mov	DWORD PTR _inst$249921[ebp], edx
	mov	eax, DWORD PTR _inst$249921[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$249921[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN1@auto_ptr:

; 722  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$auto_ptr@VICvCity1@@@std@@QAE@XZ ENDP		; std::auto_ptr<ICvCity1>::~auto_ptr<ICvCity1>
_TEXT	ENDS
PUBLIC	??1?$BaseVector@W4ResourceTypes@@$00@@QAE@XZ	; BaseVector<enum ResourceTypes,1>::~BaseVector<enum ResourceTypes,1>
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$??0?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??0?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T249934 = -20						; size = 4
_pRet$249931 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??0?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<enum ResourceTypes,64,1,297,0>::FStaticVector<enum ResourceTypes,64,1,297,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 64			; 00000040H

; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T249934[ebp], edx
	cmp	DWORD PTR $T249934[ebp], 64		; 00000040H
	jbe	SHORT $LN7@FStaticVec@8
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	eax, DWORD PTR $T249934[ebp]
	shl	eax, 2
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$249931[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T249934[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN8@FStaticVec@8
$LN7@FStaticVec@8:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pRet$249931[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 64			; 00000040H
$LN8@FStaticVec@8:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pRet$249931[ebp]
	mov	DWORD PTR [edx], eax

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@W4ResourceTypes@@$00@@QAE@XZ ; BaseVector<enum ResourceTypes,1>::~BaseVector<enum ResourceTypes,1>
__ehhandler$??0?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<enum ResourceTypes,64,1,297,0>::FStaticVector<enum ResourceTypes,64,1,297,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??1?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T249965 = -24						; size = 4
$T249964 = -20						; size = 4
_i$249957 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<enum ResourceTypes,64,1,297,0>::~FStaticVector<enum ResourceTypes,64,1,297,0>, COMDAT
; _this$ = ecx

; 617  : 	~FStaticVector(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T249965[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T249964[ebp], eax
	xor	ecx, ecx
	je	SHORT $LN5@FStaticVec@9
	xor	edx, edx
	je	SHORT $LN5@FStaticVec@9
	mov	DWORD PTR _i$249957[ebp], 0
	jmp	SHORT $LN10@FStaticVec@9
$LN9@FStaticVec@9:
	mov	eax, DWORD PTR _i$249957[ebp]
	add	eax, 1
	mov	DWORD PTR _i$249957[ebp], eax
$LN10@FStaticVec@9:
	mov	ecx, DWORD PTR _i$249957[ebp]
	cmp	ecx, DWORD PTR $T249965[ebp]
	jae	SHORT $LN5@FStaticVec@9
	jmp	SHORT $LN9@FStaticVec@9
$LN5@FStaticVec@9:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	cmp	DWORD PTR $T249964[ebp], edx
	je	SHORT $LN1@FStaticVec@9
	mov	eax, DWORD PTR $T249964[ebp]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN1@FStaticVec@9:

; 619  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@W4ResourceTypes@@$00@@QAE@XZ ; BaseVector<enum ResourceTypes,1>::~BaseVector<enum ResourceTypes,1>
__ehhandler$??1?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<enum ResourceTypes,64,1,297,0>::~FStaticVector<enum ResourceTypes,64,1,297,0>
PUBLIC	?GrowSize@?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<enum ResourceTypes,64,1,297,0>::GrowSize
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAEIABW4ResourceTypes@@@Z
_TEXT	SEGMENT
tv140 = -52						; size = 4
tv131 = -48						; size = 4
_this$ = -44						; size = 4
$T249977 = -4						; size = 4
_element$ = 8						; size = 4
?push_back@?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAEIABW4ResourceTypes@@@Z PROC ; FStaticVector<enum ResourceTypes,64,1,297,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	DWORD PTR _this$[ebp], ecx

; 677  : 		m_bIsResized = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+268], 0

; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN35@push_back@5

; 679  : 			GrowSize(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GrowSize@?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<enum ResourceTypes,64,1,297,0>::GrowSize

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

$LN35@push_back@5:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR $T249977[ebp], ecx
	cmp	DWORD PTR $T249977[ebp], 0
	je	SHORT $LN4@push_back@5
	mov	edx, DWORD PTR $T249977[ebp]
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T249977[ebp]
	mov	DWORD PTR tv131[ebp], edx
	jmp	SHORT $LN5@push_back@5
$LN4@push_back@5:
	mov	DWORD PTR tv131[ebp], 0
$LN5@push_back@5:

; 681  : 		return m_uiCurrSize++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv140[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv140[ebp]

; 682  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@QAEIABW4ResourceTypes@@@Z ENDP ; FStaticVector<enum ResourceTypes,64,1,297,0>::push_back
_TEXT	ENDS
PUBLIC	??1?$BaseVector@W4MinorCivQuestTypes@@$00@@QAE@XZ ; BaseVector<enum MinorCivQuestTypes,1>::~BaseVector<enum MinorCivQuestTypes,1>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??0?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T250031 = -20						; size = 4
_pRet$250028 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??0?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<enum MinorCivQuestTypes,18,1,297,0>::FStaticVector<enum MinorCivQuestTypes,18,1,297,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 18			; 00000012H

; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T250031[ebp], edx
	cmp	DWORD PTR $T250031[ebp], 18		; 00000012H
	jbe	SHORT $LN7@FStaticVec@10
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	eax, DWORD PTR $T250031[ebp]
	shl	eax, 2
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$250028[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T250031[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN8@FStaticVec@10
$LN7@FStaticVec@10:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pRet$250028[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 18			; 00000012H
$LN8@FStaticVec@10:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pRet$250028[ebp]
	mov	DWORD PTR [edx], eax

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@W4MinorCivQuestTypes@@$00@@QAE@XZ ; BaseVector<enum MinorCivQuestTypes,1>::~BaseVector<enum MinorCivQuestTypes,1>
__ehhandler$??0?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<enum MinorCivQuestTypes,18,1,297,0>::FStaticVector<enum MinorCivQuestTypes,18,1,297,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??1?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T250062 = -24						; size = 4
$T250061 = -20						; size = 4
_i$250053 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<enum MinorCivQuestTypes,18,1,297,0>::~FStaticVector<enum MinorCivQuestTypes,18,1,297,0>, COMDAT
; _this$ = ecx

; 617  : 	~FStaticVector(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T250062[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T250061[ebp], eax
	xor	ecx, ecx
	je	SHORT $LN5@FStaticVec@11
	xor	edx, edx
	je	SHORT $LN5@FStaticVec@11
	mov	DWORD PTR _i$250053[ebp], 0
	jmp	SHORT $LN10@FStaticVec@11
$LN9@FStaticVec@11:
	mov	eax, DWORD PTR _i$250053[ebp]
	add	eax, 1
	mov	DWORD PTR _i$250053[ebp], eax
$LN10@FStaticVec@11:
	mov	ecx, DWORD PTR _i$250053[ebp]
	cmp	ecx, DWORD PTR $T250062[ebp]
	jae	SHORT $LN5@FStaticVec@11
	jmp	SHORT $LN9@FStaticVec@11
$LN5@FStaticVec@11:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	cmp	DWORD PTR $T250061[ebp], edx
	je	SHORT $LN1@FStaticVec@11
	mov	eax, DWORD PTR $T250061[ebp]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN1@FStaticVec@11:

; 619  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@W4MinorCivQuestTypes@@$00@@QAE@XZ ; BaseVector<enum MinorCivQuestTypes,1>::~BaseVector<enum MinorCivQuestTypes,1>
__ehhandler$??1?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<enum MinorCivQuestTypes,18,1,297,0>::~FStaticVector<enum MinorCivQuestTypes,18,1,297,0>
PUBLIC	?GrowSize@?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<enum MinorCivQuestTypes,18,1,297,0>::GrowSize
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAEIABW4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
tv140 = -52						; size = 4
tv131 = -48						; size = 4
_this$ = -44						; size = 4
$T250074 = -4						; size = 4
_element$ = 8						; size = 4
?push_back@?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAEIABW4MinorCivQuestTypes@@@Z PROC ; FStaticVector<enum MinorCivQuestTypes,18,1,297,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	DWORD PTR _this$[ebp], ecx

; 677  : 		m_bIsResized = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+84], 0

; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN35@push_back@6

; 679  : 			GrowSize(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GrowSize@?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<enum MinorCivQuestTypes,18,1,297,0>::GrowSize

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

$LN35@push_back@6:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR $T250074[ebp], ecx
	cmp	DWORD PTR $T250074[ebp], 0
	je	SHORT $LN4@push_back@6
	mov	edx, DWORD PTR $T250074[ebp]
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T250074[ebp]
	mov	DWORD PTR tv131[ebp], edx
	jmp	SHORT $LN5@push_back@6
$LN4@push_back@6:
	mov	DWORD PTR tv131[ebp], 0
$LN5@push_back@6:

; 681  : 		return m_uiCurrSize++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv140[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv140[ebp]

; 682  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@QAEIABW4MinorCivQuestTypes@@@Z ENDP ; FStaticVector<enum MinorCivQuestTypes,18,1,297,0>::push_back
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE@ABU?$less@W4MinorCivQuestTypes@@@1@ABV?$allocator@W4MinorCivQuestTypes@@@1@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\set
;	COMDAT ??0?$set@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -48						; size = 4
$T250119 = -2						; size = 1
$T250118 = -1						; size = 1
??0?$set@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@@std@@QAE@XZ PROC ; std::set<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes> >::set<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes> >, COMDAT
; _this$ = ecx

; 80   : 		{	// construct empty set from defaults

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T250118[ebp]
	push	eax
	lea	ecx, DWORD PTR $T250119[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE@ABU?$less@W4MinorCivQuestTypes@@@1@ABV?$allocator@W4MinorCivQuestTypes@@@1@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >

; 81   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$set@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@@std@@QAE@XZ ENDP ; std::set<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes> >::set<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes> >
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::const_iterator::_Dec
PUBLIC	?_Insert@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@ABW4MinorCivQuestTypes@@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Insert
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?insert@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@_N@2@ABW4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
tv90 = -156						; size = 4
_this$ = -152						; size = 4
$T250369 = -148						; size = 4
$T250349 = -144						; size = 4
$T250334 = -140						; size = 4
$T250317 = -136						; size = 4
$T250304 = -132						; size = 4
$T250290 = -128						; size = 4
$T250246 = -45						; size = 1
$T250245 = -44						; size = 4
$T250244 = -37						; size = 1
$T250243 = -36						; size = 4
$T250242 = -29						; size = 1
$T250241 = -28						; size = 4
$T250240 = -24						; size = 4
$T250239 = -17						; size = 1
__Where$229483 = -16					; size = 4
__Trynode$ = -12					; size = 4
__Wherenode$ = -8					; size = 4
__Addleft$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@_N@2@ABW4MinorCivQuestTypes@@@Z PROC ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::insert, COMDAT
; _this$ = ecx

; 630  : 		{	// try to insert node with value _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 156				; 0000009cH
	mov	DWORD PTR _this$[ebp], ecx

; 631  : 		_Nodeptr _Trynode = _Root();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Trynode$[ebp], edx

; 632  : 		_Nodeptr _Wherenode = _Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Wherenode$[ebp], ecx

; 633  : 		bool _Addleft = true;	// add to left of head if tree empty

	mov	BYTE PTR __Addleft$[ebp], 1

; 634  : 		while (!_Isnil(_Trynode))

$LN19@insert:
	mov	edx, DWORD PTR __Trynode$[ebp]
	movsx	eax, BYTE PTR [edx+17]
	test	eax, eax
	jne	SHORT $LN9@insert

; 635  : 			{	// look for leaf to insert before (_Addleft) or after
; 636  : 			_Wherenode = _Trynode;

	mov	ecx, DWORD PTR __Trynode$[ebp]
	mov	DWORD PTR __Wherenode$[ebp], ecx

; 637  : 			_Addleft = _DEBUG_LT_PRED(this->comp,

	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR __Trynode$[ebp]
	mov	ecx, DWORD PTR [edx]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+12]
	setl	dl
	mov	BYTE PTR __Addleft$[ebp], dl

; 638  : 				this->_Kfn(_Val), _Key(_Trynode));
; 639  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

	movzx	eax, BYTE PTR __Addleft$[ebp]
	test	eax, eax
	je	SHORT $LN33@insert
	mov	ecx, DWORD PTR __Trynode$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv90[ebp], edx
	jmp	SHORT $LN14@insert
$LN33@insert:
	mov	eax, DWORD PTR __Trynode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR tv90[ebp], ecx
$LN14@insert:
	mov	edx, DWORD PTR tv90[ebp]
	mov	DWORD PTR __Trynode$[ebp], edx

; 640  : 			}

	jmp	SHORT $LN19@insert
$LN9@insert:

; 641  : 
; 642  : 		if (this->_Multi)

	xor	eax, eax
	je	SHORT $LN8@insert

; 643  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

	mov	BYTE PTR $T250239[ebp], 1
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	movzx	eax, BYTE PTR __Addleft$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T250240[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@ABW4MinorCivQuestTypes@@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Insert
	mov	DWORD PTR $T250290[ebp], eax
	mov	edx, DWORD PTR $T250290[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	al, BYTE PTR $T250239[ebp]
	mov	BYTE PTR [edx+4], al
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN11@insert

; 644  : 		else

	jmp	$LN11@insert
$LN8@insert:

; 645  : 			{	// insert only if unique
; 646  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);

	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR __Where$229483[ebp], ecx

; 647  : 			if (!_Addleft)

	movzx	edx, BYTE PTR __Addleft$[ebp]
	test	edx, edx
	jne	SHORT $LN6@insert
	jmp	$LN79@insert
$LN6@insert:

; 648  : 				;	// need to test if insert after is okay
; 649  : 			else if (_Where == begin())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T250304[ebp], ecx
	mov	edx, DWORD PTR $T250304[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T250317[ebp], eax
	mov	ecx, DWORD PTR $T250317[ebp]
	mov	DWORD PTR $T250241[ebp], ecx
	mov	edx, DWORD PTR __Where$229483[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR $T250241[ebp]
	sete	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@insert

; 650  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

	mov	BYTE PTR $T250242[ebp], 1
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	push	1
	lea	ecx, DWORD PTR $T250243[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@ABW4MinorCivQuestTypes@@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Insert
	mov	DWORD PTR $T250334[ebp], eax
	mov	edx, DWORD PTR $T250334[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	al, BYTE PTR $T250242[ebp]
	mov	BYTE PTR [edx+4], al
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN11@insert

; 651  : 			else

	jmp	SHORT $LN79@insert
$LN4@insert:

; 652  : 				--_Where;	// need to test if insert before is okay

	lea	ecx, DWORD PTR __Where$229483[ebp]
	call	?_Dec@const_iterator@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::const_iterator::_Dec

; 653  : 
; 654  : 			if (_DEBUG_LT_PRED(this->comp,

$LN79@insert:
	mov	ecx, DWORD PTR __Where$229483[ebp]
	mov	DWORD PTR $T250349[ebp], ecx
	mov	edx, DWORD PTR $T250349[ebp]
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax]
	setl	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN2@insert

; 655  : 				_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 656  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

	mov	BYTE PTR $T250244[ebp], 1
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	movzx	eax, BYTE PTR __Addleft$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T250245[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@ABW4MinorCivQuestTypes@@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Insert
	mov	DWORD PTR $T250369[ebp], eax
	mov	edx, DWORD PTR $T250369[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	al, BYTE PTR $T250244[ebp]
	mov	BYTE PTR [edx+4], al
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN11@insert

; 657  : 			else

	jmp	SHORT $LN11@insert
$LN2@insert:

; 658  : 				return (_Pairib(_Where, false));

	mov	BYTE PTR $T250246[ebp], 0
	mov	ecx, DWORD PTR __Where$229483[ebp]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR $T250246[ebp]
	mov	BYTE PTR [eax+4], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN11@insert:

; 659  : 			}
; 660  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?insert@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@_N@2@ABW4MinorCivQuestTypes@@@Z ENDP ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::insert
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@ABW4MinorCivQuestTypes@@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Lbound
; Function compile flags: /Odtp
;	COMDAT ?find@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABW4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
tv137 = -48						; size = 4
_this$ = -44						; size = 4
$T250478 = -40						; size = 4
$T250452 = -36						; size = 4
$T250439 = -32						; size = 4
$T250423 = -28						; size = 4
$T250378 = -16						; size = 4
$T250376 = -12						; size = 4
$T250375 = -8						; size = 4
__Where$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABW4MinorCivQuestTypes@@@Z PROC ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::find, COMDAT
; _this$ = ecx

; 977  : 		{	// find an element in mutable sequence that matches _Keyval

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	mov	DWORD PTR _this$[ebp], ecx

; 978  : 		iterator _Where = lower_bound(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lbound@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@ABW4MinorCivQuestTypes@@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Lbound
	mov	DWORD PTR $T250423[ebp], eax
	mov	ecx, DWORD PTR $T250423[ebp]
	mov	DWORD PTR __Where$[ebp], ecx

; 979  : 		return (_Where == end()
; 980  : 			|| _DEBUG_LT_PRED(this->comp,
; 981  : 				_Keyval, _Key(_Where._Mynode()))
; 982  : 					? end() : _Where);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T250439[ebp], eax
	mov	ecx, DWORD PTR $T250439[ebp]
	mov	DWORD PTR $T250376[ebp], ecx
	mov	edx, DWORD PTR __Where$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR $T250376[ebp]
	sete	al
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@find
	mov	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T250452[ebp], edx
	mov	eax, DWORD PTR __Keyval$[ebp]
	mov	ecx, DWORD PTR $T250452[ebp]
	mov	edx, DWORD PTR [eax]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+12]
	setl	al
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@find
	lea	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR tv137[ebp], edx
	jmp	SHORT $LN4@find
$LN3@find:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T250478[ebp], ecx
	mov	edx, DWORD PTR $T250478[ebp]
	mov	DWORD PTR $T250378[ebp], edx
	lea	eax, DWORD PTR $T250378[ebp]
	mov	DWORD PTR tv137[ebp], eax
$LN4@find:
	mov	ecx, DWORD PTR tv137[ebp]
	mov	DWORD PTR $T250375[ebp], ecx
	mov	edx, DWORD PTR $T250375[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 983  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?find@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABW4MinorCivQuestTypes@@@Z ENDP ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::find
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvweightedvector.h
_TEXT	ENDS
;	COMDAT ??1?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
??1?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@QAE@XZ PROC ; CvWeightedVector<enum PlayerTypes,64,1>::~CvWeightedVector<enum PlayerTypes,64,1>, COMDAT
; _this$ = ecx

; 58   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 59   : 	};

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>::~FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@QAE@XZ ENDP ; CvWeightedVector<enum PlayerTypes,64,1>::~CvWeightedVector<enum PlayerTypes,64,1>
_TEXT	ENDS
PUBLIC	??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@0H@Z ; std::_Sort<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *,int>
; Function compile flags: /Odtp
;	COMDAT ?SortItems@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@QAEXXZ
_TEXT	SEGMENT
_this$ = -156						; size = 4
$T250524 = -8						; size = 4
$T250520 = -4						; size = 4
?SortItems@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@QAEXXZ PROC ; CvWeightedVector<enum PlayerTypes,64,1>::SortItems, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 156				; 0000009cH
	mov	DWORD PTR _this$[ebp], ecx

; 140  : 		std::sort(m_pItems.begin(), m_pItems.end());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR $T250520[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T250524[ebp], eax
	mov	ecx, DWORD PTR $T250520[ebp]
	sub	ecx, DWORD PTR $T250524[ebp]
	sar	ecx, 3
	push	ecx
	mov	edx, DWORD PTR $T250520[ebp]
	push	edx
	mov	eax, DWORD PTR $T250524[ebp]
	push	eax
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@0H@Z ; std::_Sort<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *,int>
	add	esp, 12					; 0000000cH

; 141  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?SortItems@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@QAEXXZ ENDP ; CvWeightedVector<enum PlayerTypes,64,1>::SortItems
_TEXT	ENDS
PUBLIC	??1?$BaseVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$00@@QAE@XZ ; BaseVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,1>
PUBLIC	?Copy@?$BaseVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$00@@IAEXABV1@@Z ; BaseVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,1>::Copy
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@ABV0@@Z$0
__ehfuncinfo$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@ABV0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	ENDS
;	COMDAT ??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -40						; size = 4
$T250715 = -20						; size = 4
_pRet$250711 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_RHS$ = 8						; size = 4
??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@ABV0@@Z PROC ; FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>::FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>, COMDAT
; _this$ = ecx

; 591  : 	FStaticVector(const THIS_TYPE& RHS)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@ABV0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 592  : 	{
; 593  : 		m_uiCurrSize = RHS.m_uiCurrSize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _RHS$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 594  : 		m_uiCurrMaxSize = RHS.m_uiCurrMaxSize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _RHS$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx

; 595  : 		m_pData = Alloc(RHS.m_uiCurrMaxSize);

	mov	eax, DWORD PTR _RHS$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T250715[ebp], ecx
	cmp	DWORD PTR $T250715[ebp], 64		; 00000040H
	jbe	SHORT $LN7@FStaticVec@12
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	edx, DWORD PTR $T250715[ebp]
	shl	edx, 3
	push	edx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$250711[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T250715[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN8@FStaticVec@12
$LN7@FStaticVec@12:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _pRet$250711[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 64			; 00000040H
$LN8@FStaticVec@12:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pRet$250711[ebp]
	mov	DWORD PTR [ecx], edx

; 596  : #ifdef BREAK_ON_STATIC_RESIZE
; 597  : 		m_iNumResized = 0;
; 598  : #endif
; 599  : 		Copy(RHS);

	mov	eax, DWORD PTR _RHS$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Copy@?$BaseVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$00@@IAEXABV1@@Z ; BaseVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,1>::Copy

; 600  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@ABV0@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$00@@QAE@XZ ; BaseVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,1>
__ehhandler$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@ABV0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@ABV0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@ABV0@@Z ENDP ; FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>::FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ$0
__ehfuncinfo$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T250759 = -24						; size = 4
$T250758 = -20						; size = 4
_i$250753 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ PROC ; FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>::~FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>, COMDAT
; _this$ = ecx

; 617  : 	~FStaticVector(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T250759[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T250758[ebp], eax
	xor	ecx, ecx
	je	SHORT $LN5@FStaticVec@13
	xor	edx, edx
	je	SHORT $LN5@FStaticVec@13
	mov	DWORD PTR _i$250753[ebp], 0
	jmp	SHORT $LN10@FStaticVec@13
$LN9@FStaticVec@13:
	mov	eax, DWORD PTR _i$250753[ebp]
	add	eax, 1
	mov	DWORD PTR _i$250753[ebp], eax
$LN10@FStaticVec@13:
	mov	ecx, DWORD PTR _i$250753[ebp]
	cmp	ecx, DWORD PTR $T250759[ebp]
	jae	SHORT $LN5@FStaticVec@13
	jmp	SHORT $LN9@FStaticVec@13
$LN5@FStaticVec@13:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	cmp	DWORD PTR $T250758[ebp], edx
	je	SHORT $LN1@FStaticVec@13
	mov	eax, DWORD PTR $T250758[ebp]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN1@FStaticVec@13:

; 619  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$00@@QAE@XZ ; BaseVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,1>
__ehhandler$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ ENDP ; FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>::~FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvweightedvector.h
;	COMDAT ??1?$CvWeightedVector@H$0EA@$00@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
??1?$CvWeightedVector@H$0EA@$00@@QAE@XZ PROC		; CvWeightedVector<int,64,1>::~CvWeightedVector<int,64,1>, COMDAT
; _this$ = ecx

; 58   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 59   : 	};

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>::~FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CvWeightedVector@H$0EA@$00@@QAE@XZ ENDP		; CvWeightedVector<int,64,1>::~CvWeightedVector<int,64,1>
_TEXT	ENDS
PUBLIC	??$_Sort@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@0H@Z ; std::_Sort<CvWeightedVector<int,64,1>::WeightedElement *,int>
; Function compile flags: /Odtp
;	COMDAT ?SortItems@?$CvWeightedVector@H$0EA@$00@@QAEXXZ
_TEXT	SEGMENT
_this$ = -156						; size = 4
$T250808 = -8						; size = 4
$T250804 = -4						; size = 4
?SortItems@?$CvWeightedVector@H$0EA@$00@@QAEXXZ PROC	; CvWeightedVector<int,64,1>::SortItems, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 156				; 0000009cH
	mov	DWORD PTR _this$[ebp], ecx

; 140  : 		std::sort(m_pItems.begin(), m_pItems.end());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR $T250804[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T250808[ebp], eax
	mov	ecx, DWORD PTR $T250804[ebp]
	sub	ecx, DWORD PTR $T250808[ebp]
	sar	ecx, 3
	push	ecx
	mov	edx, DWORD PTR $T250804[ebp]
	push	edx
	mov	eax, DWORD PTR $T250808[ebp]
	push	eax
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@0H@Z ; std::_Sort<CvWeightedVector<int,64,1>::WeightedElement *,int>
	add	esp, 12					; 0000000cH

; 141  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?SortItems@?$CvWeightedVector@H$0EA@$00@@QAEXXZ ENDP	; CvWeightedVector<int,64,1>::SortItems
_TEXT	ENDS
PUBLIC	??1?$BaseVector@W4BuildingTypes@@$00@@QAE@XZ	; BaseVector<enum BuildingTypes,1>::~BaseVector<enum BuildingTypes,1>
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$??0?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??0?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T250999 = -20						; size = 4
_pRet$250996 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??0?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<enum BuildingTypes,50,1,297,0>::FStaticVector<enum BuildingTypes,50,1,297,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 50			; 00000032H

; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T250999[ebp], edx
	cmp	DWORD PTR $T250999[ebp], 50		; 00000032H
	jbe	SHORT $LN7@FStaticVec@14
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	eax, DWORD PTR $T250999[ebp]
	shl	eax, 2
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$250996[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T250999[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN8@FStaticVec@14
$LN7@FStaticVec@14:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pRet$250996[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 50			; 00000032H
$LN8@FStaticVec@14:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pRet$250996[ebp]
	mov	DWORD PTR [edx], eax

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@W4BuildingTypes@@$00@@QAE@XZ ; BaseVector<enum BuildingTypes,1>::~BaseVector<enum BuildingTypes,1>
__ehhandler$??0?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<enum BuildingTypes,50,1,297,0>::FStaticVector<enum BuildingTypes,50,1,297,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??1?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T251030 = -24						; size = 4
$T251029 = -20						; size = 4
_i$251021 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<enum BuildingTypes,50,1,297,0>::~FStaticVector<enum BuildingTypes,50,1,297,0>, COMDAT
; _this$ = ecx

; 617  : 	~FStaticVector(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T251030[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T251029[ebp], eax
	xor	ecx, ecx
	je	SHORT $LN5@FStaticVec@15
	xor	edx, edx
	je	SHORT $LN5@FStaticVec@15
	mov	DWORD PTR _i$251021[ebp], 0
	jmp	SHORT $LN10@FStaticVec@15
$LN9@FStaticVec@15:
	mov	eax, DWORD PTR _i$251021[ebp]
	add	eax, 1
	mov	DWORD PTR _i$251021[ebp], eax
$LN10@FStaticVec@15:
	mov	ecx, DWORD PTR _i$251021[ebp]
	cmp	ecx, DWORD PTR $T251030[ebp]
	jae	SHORT $LN5@FStaticVec@15
	jmp	SHORT $LN9@FStaticVec@15
$LN5@FStaticVec@15:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	cmp	DWORD PTR $T251029[ebp], edx
	je	SHORT $LN1@FStaticVec@15
	mov	eax, DWORD PTR $T251029[ebp]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN1@FStaticVec@15:

; 619  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@W4BuildingTypes@@$00@@QAE@XZ ; BaseVector<enum BuildingTypes,1>::~BaseVector<enum BuildingTypes,1>
__ehhandler$??1?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<enum BuildingTypes,50,1,297,0>::~FStaticVector<enum BuildingTypes,50,1,297,0>
PUBLIC	?GrowSize@?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<enum BuildingTypes,50,1,297,0>::GrowSize
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAEIABW4BuildingTypes@@@Z
_TEXT	SEGMENT
tv140 = -52						; size = 4
tv131 = -48						; size = 4
_this$ = -44						; size = 4
$T251042 = -4						; size = 4
_element$ = 8						; size = 4
?push_back@?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAEIABW4BuildingTypes@@@Z PROC ; FStaticVector<enum BuildingTypes,50,1,297,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	DWORD PTR _this$[ebp], ecx

; 677  : 		m_bIsResized = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+212], 0

; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN35@push_back@7

; 679  : 			GrowSize(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GrowSize@?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<enum BuildingTypes,50,1,297,0>::GrowSize

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

$LN35@push_back@7:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR $T251042[ebp], ecx
	cmp	DWORD PTR $T251042[ebp], 0
	je	SHORT $LN4@push_back@7
	mov	edx, DWORD PTR $T251042[ebp]
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T251042[ebp]
	mov	DWORD PTR tv131[ebp], edx
	jmp	SHORT $LN5@push_back@7
$LN4@push_back@7:
	mov	DWORD PTR tv131[ebp], 0
$LN5@push_back@7:

; 681  : 		return m_uiCurrSize++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv140[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv140[ebp]

; 682  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@QAEIABW4BuildingTypes@@@Z ENDP ; FStaticVector<enum BuildingTypes,50,1,297,0>::push_back
_TEXT	ENDS
PUBLIC	??1?$BaseVector@W4UnitTypes@@$00@@QAE@XZ	; BaseVector<enum UnitTypes,1>::~BaseVector<enum UnitTypes,1>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??0?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T251096 = -20						; size = 4
_pRet$251093 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??0?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<enum UnitTypes,8,1,297,0>::FStaticVector<enum UnitTypes,8,1,297,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 8

; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T251096[ebp], edx
	cmp	DWORD PTR $T251096[ebp], 8
	jbe	SHORT $LN7@FStaticVec@16
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	eax, DWORD PTR $T251096[ebp]
	shl	eax, 2
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$251093[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T251096[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN8@FStaticVec@16
$LN7@FStaticVec@16:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pRet$251093[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 8
$LN8@FStaticVec@16:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pRet$251093[ebp]
	mov	DWORD PTR [edx], eax

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@W4UnitTypes@@$00@@QAE@XZ ; BaseVector<enum UnitTypes,1>::~BaseVector<enum UnitTypes,1>
__ehhandler$??0?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<enum UnitTypes,8,1,297,0>::FStaticVector<enum UnitTypes,8,1,297,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??1?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T251127 = -24						; size = 4
$T251126 = -20						; size = 4
_i$251119 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<enum UnitTypes,8,1,297,0>::~FStaticVector<enum UnitTypes,8,1,297,0>, COMDAT
; _this$ = ecx

; 617  : 	~FStaticVector(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T251127[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T251126[ebp], eax
	xor	ecx, ecx
	je	SHORT $LN5@FStaticVec@17
	xor	edx, edx
	je	SHORT $LN5@FStaticVec@17
	mov	DWORD PTR _i$251119[ebp], 0
	jmp	SHORT $LN10@FStaticVec@17
$LN9@FStaticVec@17:
	mov	eax, DWORD PTR _i$251119[ebp]
	add	eax, 1
	mov	DWORD PTR _i$251119[ebp], eax
$LN10@FStaticVec@17:
	mov	ecx, DWORD PTR _i$251119[ebp]
	cmp	ecx, DWORD PTR $T251127[ebp]
	jae	SHORT $LN5@FStaticVec@17
	jmp	SHORT $LN9@FStaticVec@17
$LN5@FStaticVec@17:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	cmp	DWORD PTR $T251126[ebp], edx
	je	SHORT $LN1@FStaticVec@17
	mov	eax, DWORD PTR $T251126[ebp]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN1@FStaticVec@17:

; 619  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@W4UnitTypes@@$00@@QAE@XZ ; BaseVector<enum UnitTypes,1>::~BaseVector<enum UnitTypes,1>
__ehhandler$??1?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<enum UnitTypes,8,1,297,0>::~FStaticVector<enum UnitTypes,8,1,297,0>
PUBLIC	?GrowSize@?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<enum UnitTypes,8,1,297,0>::GrowSize
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAEIABW4UnitTypes@@@Z
_TEXT	SEGMENT
tv140 = -52						; size = 4
tv131 = -48						; size = 4
_this$ = -44						; size = 4
$T251139 = -4						; size = 4
_element$ = 8						; size = 4
?push_back@?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAEIABW4UnitTypes@@@Z PROC ; FStaticVector<enum UnitTypes,8,1,297,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	DWORD PTR _this$[ebp], ecx

; 677  : 		m_bIsResized = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+44], 0

; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN35@push_back@8

; 679  : 			GrowSize(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GrowSize@?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<enum UnitTypes,8,1,297,0>::GrowSize

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

$LN35@push_back@8:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR $T251139[ebp], ecx
	cmp	DWORD PTR $T251139[ebp], 0
	je	SHORT $LN4@push_back@8
	mov	edx, DWORD PTR $T251139[ebp]
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T251139[ebp]
	mov	DWORD PTR tv131[ebp], edx
	jmp	SHORT $LN5@push_back@8
$LN4@push_back@8:
	mov	DWORD PTR tv131[ebp], 0
$LN5@push_back@8:

; 681  : 		return m_uiCurrSize++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv140[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv140[ebp]

; 682  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@QAEIABW4UnitTypes@@@Z ENDP ; FStaticVector<enum UnitTypes,8,1,297,0>::push_back
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??0?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T251193 = -20						; size = 4
_pRet$251190 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??0?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<enum PlayerTypes,63,1,297,0>::FStaticVector<enum PlayerTypes,63,1,297,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 63			; 0000003fH

; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T251193[ebp], edx
	cmp	DWORD PTR $T251193[ebp], 63		; 0000003fH
	jbe	SHORT $LN7@FStaticVec@18
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	eax, DWORD PTR $T251193[ebp]
	shl	eax, 2
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$251190[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T251193[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN8@FStaticVec@18
$LN7@FStaticVec@18:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pRet$251190[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 63			; 0000003fH
$LN8@FStaticVec@18:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pRet$251190[ebp]
	mov	DWORD PTR [edx], eax

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@W4PlayerTypes@@$00@@QAE@XZ ; BaseVector<enum PlayerTypes,1>::~BaseVector<enum PlayerTypes,1>
__ehhandler$??0?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<enum PlayerTypes,63,1,297,0>::FStaticVector<enum PlayerTypes,63,1,297,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??1?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T251224 = -24						; size = 4
$T251223 = -20						; size = 4
_i$251216 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<enum PlayerTypes,63,1,297,0>::~FStaticVector<enum PlayerTypes,63,1,297,0>, COMDAT
; _this$ = ecx

; 617  : 	~FStaticVector(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T251224[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T251223[ebp], eax
	xor	ecx, ecx
	je	SHORT $LN5@FStaticVec@19
	xor	edx, edx
	je	SHORT $LN5@FStaticVec@19
	mov	DWORD PTR _i$251216[ebp], 0
	jmp	SHORT $LN10@FStaticVec@19
$LN9@FStaticVec@19:
	mov	eax, DWORD PTR _i$251216[ebp]
	add	eax, 1
	mov	DWORD PTR _i$251216[ebp], eax
$LN10@FStaticVec@19:
	mov	ecx, DWORD PTR _i$251216[ebp]
	cmp	ecx, DWORD PTR $T251224[ebp]
	jae	SHORT $LN5@FStaticVec@19
	jmp	SHORT $LN9@FStaticVec@19
$LN5@FStaticVec@19:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	cmp	DWORD PTR $T251223[ebp], edx
	je	SHORT $LN1@FStaticVec@19
	mov	eax, DWORD PTR $T251223[ebp]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN1@FStaticVec@19:

; 619  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@W4PlayerTypes@@$00@@QAE@XZ ; BaseVector<enum PlayerTypes,1>::~BaseVector<enum PlayerTypes,1>
__ehhandler$??1?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<enum PlayerTypes,63,1,297,0>::~FStaticVector<enum PlayerTypes,63,1,297,0>
PUBLIC	?GrowSize@?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<enum PlayerTypes,63,1,297,0>::GrowSize
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAEIABW4PlayerTypes@@@Z
_TEXT	SEGMENT
tv140 = -52						; size = 4
tv131 = -48						; size = 4
_this$ = -44						; size = 4
$T251236 = -4						; size = 4
_element$ = 8						; size = 4
?push_back@?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAEIABW4PlayerTypes@@@Z PROC ; FStaticVector<enum PlayerTypes,63,1,297,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	DWORD PTR _this$[ebp], ecx

; 677  : 		m_bIsResized = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+264], 0

; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN35@push_back@9

; 679  : 			GrowSize(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GrowSize@?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<enum PlayerTypes,63,1,297,0>::GrowSize

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

$LN35@push_back@9:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR $T251236[ebp], ecx
	cmp	DWORD PTR $T251236[ebp], 0
	je	SHORT $LN4@push_back@9
	mov	edx, DWORD PTR $T251236[ebp]
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T251236[ebp]
	mov	DWORD PTR tv131[ebp], edx
	jmp	SHORT $LN5@push_back@9
$LN4@push_back@9:
	mov	DWORD PTR tv131[ebp], 0
$LN5@push_back@9:

; 681  : 		return m_uiCurrSize++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv140[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv140[ebp]

; 682  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@QAEIABW4PlayerTypes@@@Z ENDP ; FStaticVector<enum PlayerTypes,63,1,297,0>::push_back
_TEXT	ENDS
PUBLIC	??1?$BaseVector@PAVCvCity@@$0A@@@QAE@XZ		; BaseVector<CvCity *,0>::~BaseVector<CvCity *,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??0?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T251290 = -20						; size = 4
_pRet$251287 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??0?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<CvCity *,16,0,297,0>::FStaticVector<CvCity *,16,0,297,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T251290[ebp], edx
	cmp	DWORD PTR $T251290[ebp], 16		; 00000010H
	jbe	SHORT $LN7@FStaticVec@20
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	eax, DWORD PTR $T251290[ebp]
	shl	eax, 2
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$251287[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T251290[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN8@FStaticVec@20
$LN7@FStaticVec@20:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pRet$251287[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 16			; 00000010H
$LN8@FStaticVec@20:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pRet$251287[ebp]
	mov	DWORD PTR [edx], eax

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@PAVCvCity@@$0A@@@QAE@XZ	; BaseVector<CvCity *,0>::~BaseVector<CvCity *,0>
__ehhandler$??0?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<CvCity *,16,0,297,0>::FStaticVector<CvCity *,16,0,297,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??1?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T251321 = -24						; size = 4
$T251320 = -20						; size = 4
_i$251312 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<CvCity *,16,0,297,0>::~FStaticVector<CvCity *,16,0,297,0>, COMDAT
; _this$ = ecx

; 617  : 	~FStaticVector(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T251321[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T251320[ebp], eax
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN5@FStaticVec@21
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@FStaticVec@21
	mov	DWORD PTR _i$251312[ebp], 0
	jmp	SHORT $LN10@FStaticVec@21
$LN9@FStaticVec@21:
	mov	eax, DWORD PTR _i$251312[ebp]
	add	eax, 1
	mov	DWORD PTR _i$251312[ebp], eax
$LN10@FStaticVec@21:
	mov	ecx, DWORD PTR _i$251312[ebp]
	cmp	ecx, DWORD PTR $T251321[ebp]
	jae	SHORT $LN5@FStaticVec@21
	jmp	SHORT $LN9@FStaticVec@21
$LN5@FStaticVec@21:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	cmp	DWORD PTR $T251320[ebp], edx
	je	SHORT $LN1@FStaticVec@21
	mov	eax, DWORD PTR $T251320[ebp]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN1@FStaticVec@21:

; 619  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@PAVCvCity@@$0A@@@QAE@XZ	; BaseVector<CvCity *,0>::~BaseVector<CvCity *,0>
__ehhandler$??1?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<CvCity *,16,0,297,0>::~FStaticVector<CvCity *,16,0,297,0>
PUBLIC	?GrowSize@?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvCity *,16,0,297,0>::GrowSize
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAEIABQAVCvCity@@@Z
_TEXT	SEGMENT
tv140 = -52						; size = 4
tv131 = -48						; size = 4
_this$ = -44						; size = 4
$T251333 = -4						; size = 4
_element$ = 8						; size = 4
?push_back@?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAEIABQAVCvCity@@@Z PROC ; FStaticVector<CvCity *,16,0,297,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	DWORD PTR _this$[ebp], ecx

; 677  : 		m_bIsResized = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+76], 0

; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN35@push_back@10

; 679  : 			GrowSize(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GrowSize@?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvCity *,16,0,297,0>::GrowSize

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

$LN35@push_back@10:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR $T251333[ebp], ecx
	cmp	DWORD PTR $T251333[ebp], 0
	je	SHORT $LN4@push_back@10
	mov	edx, DWORD PTR $T251333[ebp]
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T251333[ebp]
	mov	DWORD PTR tv131[ebp], edx
	jmp	SHORT $LN5@push_back@10
$LN4@push_back@10:
	mov	DWORD PTR tv131[ebp], 0
$LN5@push_back@10:

; 681  : 		return m_uiCurrSize++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv140[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv140[ebp]

; 682  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@QAEIABQAVCvCity@@@Z ENDP ; FStaticVector<CvCity *,16,0,297,0>::push_back
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvweightedvector.h
_TEXT	ENDS
;	COMDAT ??1?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
??1?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@QAE@XZ PROC ; CvWeightedVector<enum PlayerTypes,22,1>::~CvWeightedVector<enum PlayerTypes,22,1>, COMDAT
; _this$ = ecx

; 58   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 59   : 	};

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>::~FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@QAE@XZ ENDP ; CvWeightedVector<enum PlayerTypes,22,1>::~CvWeightedVector<enum PlayerTypes,22,1>
_TEXT	ENDS
PUBLIC	??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@0H@Z ; std::_Sort<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *,int>
; Function compile flags: /Odtp
;	COMDAT ?SortItems@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@QAEXXZ
_TEXT	SEGMENT
_this$ = -156						; size = 4
$T251414 = -8						; size = 4
$T251410 = -4						; size = 4
?SortItems@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@QAEXXZ PROC ; CvWeightedVector<enum PlayerTypes,22,1>::SortItems, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 156				; 0000009cH
	mov	DWORD PTR _this$[ebp], ecx

; 140  : 		std::sort(m_pItems.begin(), m_pItems.end());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR $T251410[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T251414[ebp], eax
	mov	ecx, DWORD PTR $T251410[ebp]
	sub	ecx, DWORD PTR $T251414[ebp]
	sar	ecx, 3
	push	ecx
	mov	edx, DWORD PTR $T251410[ebp]
	push	edx
	mov	eax, DWORD PTR $T251414[ebp]
	push	eax
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@0H@Z ; std::_Sort<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *,int>
	add	esp, 12					; 0000000cH

; 141  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?SortItems@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@QAEXXZ ENDP ; CvWeightedVector<enum PlayerTypes,22,1>::SortItems
_TEXT	ENDS
PUBLIC	?GetTotalWeight@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@QAEHXZ ; CvWeightedVector<enum PlayerTypes,22,1>::GetTotalWeight
; Function compile flags: /Odtp
;	COMDAT ?ChooseByWeight@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@QAE?AW4PlayerTypes@@PAV?$FastDelegate2@HPBDH@fastdelegate@@PBD@Z
_TEXT	SEGMENT
_this$ = -60						; size = 4
$T251629 = -56						; size = 4
$T251625 = -52						; size = 4
$T251618 = -48						; size = 4
$T251614 = -44						; size = 4
_i$229623 = -16						; size = 4
_iChoice$ = -12						; size = 4
_elem$ = -8						; size = 8
_rndFcn$ = 8						; size = 4
_szRollName$ = 12					; size = 4
?ChooseByWeight@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@QAE?AW4PlayerTypes@@PAV?$FastDelegate2@HPBDH@fastdelegate@@PBD@Z PROC ; CvWeightedVector<enum PlayerTypes,22,1>::ChooseByWeight, COMDAT
; _this$ = ecx

; 197  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	mov	DWORD PTR _this$[ebp], ecx

; 198  : 		WeightedElement elem;

	mov	DWORD PTR _elem$[ebp], 0
	mov	DWORD PTR _elem$[ebp+4], 0

; 199  : 		int iChoice;
; 200  : 
; 201  : 		// Random roll up to total weight
; 202  : 		iChoice = (*rndFcn)(GetTotalWeight(), szRollName);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTotalWeight@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@QAEHXZ ; CvWeightedVector<enum PlayerTypes,22,1>::GetTotalWeight
	mov	DWORD PTR $T251625[ebp], eax
	mov	eax, DWORD PTR _rndFcn$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T251614[ebp], ecx
	mov	edx, DWORD PTR _rndFcn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T251618[ebp], eax
	mov	ecx, DWORD PTR _szRollName$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T251625[ebp]
	push	edx
	mov	ecx, DWORD PTR $T251618[ebp]
	call	DWORD PTR $T251614[ebp]
	mov	DWORD PTR _iChoice$[ebp], eax

; 203  : 
; 204  : 		// Loop through until we find the item that is in the range for this roll
; 205  : 		for (unsigned int i = 0; i < m_pItems.size(); i++)

	mov	DWORD PTR _i$229623[ebp], 0
	jmp	SHORT $LN4@ChooseByWe
$LN3@ChooseByWe:
	mov	eax, DWORD PTR _i$229623[ebp]
	add	eax, 1
	mov	DWORD PTR _i$229623[ebp], eax
$LN4@ChooseByWe:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T251629[ebp], edx
	mov	eax, DWORD PTR _i$229623[ebp]
	cmp	eax, DWORD PTR $T251629[ebp]
	jae	SHORT $LN2@ChooseByWe

; 206  : 		{
; 207  : 			elem = m_pItems[i];

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _i$229623[ebp]
	mov	ecx, DWORD PTR [edx+eax*8]
	mov	edx, DWORD PTR [edx+eax*8+4]
	mov	DWORD PTR _elem$[ebp], ecx
	mov	DWORD PTR _elem$[ebp+4], edx

; 208  : 			iChoice -= elem.m_iWeight;

	mov	eax, DWORD PTR _iChoice$[ebp]
	sub	eax, DWORD PTR _elem$[ebp+4]
	mov	DWORD PTR _iChoice$[ebp], eax

; 209  : 			if (iChoice < 0)

	jns	SHORT $LN1@ChooseByWe

; 210  : 			{
; 211  : 				return elem.m_Element;

	mov	eax, DWORD PTR _elem$[ebp]
	jmp	SHORT $LN5@ChooseByWe
$LN1@ChooseByWe:

; 212  : 			}
; 213  : 		}

	jmp	SHORT $LN3@ChooseByWe
$LN2@ChooseByWe:

; 214  : 
; 215  : 		// We should have found something, so reaching here is an error
; 216  : 		//    Just return last thing accessed
; 217  : 		FAssertMsg (true, "Internal error in CvWeightedVector.");
; 218  : 		return elem.m_Element;

	mov	eax, DWORD PTR _elem$[ebp]
$LN5@ChooseByWe:

; 219  : 	};

	mov	esp, ebp
	pop	ebp
	ret	8
?ChooseByWeight@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@QAE?AW4PlayerTypes@@PAV?$FastDelegate2@HPBDH@fastdelegate@@PBD@Z ENDP ; CvWeightedVector<enum PlayerTypes,22,1>::ChooseByWeight
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ??1?$auto_ptr@VICvPlot1@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_inst$251640 = -8					; size = 4
$T251635 = -4						; size = 4
??1?$auto_ptr@VICvPlot1@@@std@@QAE@XZ PROC		; std::auto_ptr<ICvPlot1>::~auto_ptr<ICvPlot1>, COMDAT
; _this$ = ecx

; 720  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 721  : 		delete _Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T251635[ebp], ecx
	cmp	DWORD PTR $T251635[ebp], 0
	je	SHORT $LN1@auto_ptr@2
	mov	edx, DWORD PTR $T251635[ebp]
	mov	DWORD PTR _inst$251640[ebp], edx
	mov	eax, DWORD PTR _inst$251640[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$251640[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN1@auto_ptr@2:

; 722  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$auto_ptr@VICvPlot1@@@std@@QAE@XZ ENDP		; std::auto_ptr<ICvPlot1>::~auto_ptr<ICvPlot1>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvweightedvector.h
_TEXT	ENDS
;	COMDAT ??1?$CvWeightedVector@H$0GE@$00@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
??1?$CvWeightedVector@H$0GE@$00@@QAE@XZ PROC		; CvWeightedVector<int,100,1>::~CvWeightedVector<int,100,1>, COMDAT
; _this$ = ecx

; 58   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 59   : 	};

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>::~FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CvWeightedVector@H$0GE@$00@@QAE@XZ ENDP		; CvWeightedVector<int,100,1>::~CvWeightedVector<int,100,1>
_TEXT	ENDS
PUBLIC	??$_Sort@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@0H@Z ; std::_Sort<CvWeightedVector<int,100,1>::WeightedElement *,int>
; Function compile flags: /Odtp
;	COMDAT ?SortItems@?$CvWeightedVector@H$0GE@$00@@QAEXXZ
_TEXT	SEGMENT
_this$ = -156						; size = 4
$T251680 = -8						; size = 4
$T251676 = -4						; size = 4
?SortItems@?$CvWeightedVector@H$0GE@$00@@QAEXXZ PROC	; CvWeightedVector<int,100,1>::SortItems, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 156				; 0000009cH
	mov	DWORD PTR _this$[ebp], ecx

; 140  : 		std::sort(m_pItems.begin(), m_pItems.end());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR $T251676[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T251680[ebp], eax
	mov	ecx, DWORD PTR $T251676[ebp]
	sub	ecx, DWORD PTR $T251680[ebp]
	sar	ecx, 3
	push	ecx
	mov	edx, DWORD PTR $T251676[ebp]
	push	edx
	mov	eax, DWORD PTR $T251680[ebp]
	push	eax
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@0H@Z ; std::_Sort<CvWeightedVector<int,100,1>::WeightedElement *,int>
	add	esp, 12					; 0000000cH

; 141  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?SortItems@?$CvWeightedVector@H$0GE@$00@@QAEXXZ ENDP	; CvWeightedVector<int,100,1>::SortItems
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<CvString,std::allocator<CvString> >::~_Vector_val<CvString,std::allocator<CvString> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<CvString,std::allocator<CvString> >::~_Vector_val<CvString,std::allocator<CvString> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<enum ResourceTypes,std::allocator<enum ResourceTypes> >::~_Vector_val<enum ResourceTypes,std::allocator<enum ResourceTypes> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<enum ResourceTypes,std::allocator<enum ResourceTypes> >::~_Vector_val<enum ResourceTypes,std::allocator<enum ResourceTypes> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Tree_val@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_val@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::~_Tree_val<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_val@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::~_Tree_val<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >
_TEXT	ENDS
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@ ; `string'
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
EXTRN	__imp_??0exception@std@@QAE@XZ:PROC
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:PROC		; std::out_of_range::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_Eout_of_range@std@@UAEPAXI@Z ; std::out_of_range::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_Elogic_error@std@@UAEPAXI@Z ; std::logic_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
CONST	SEGMENT
??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@ DB 'invalid v'
	DB	'ector<T> subscript', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Xran@?$vector@HV?$allocator@H@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xran@?$vector@HV?$allocator@H@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xran@?$vector@HV?$allocator@H@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xran@?$vector@HV?$allocator@H@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xran@?$vector@HV?$allocator@H@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xran@?$vector@HV?$allocator@H@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T251904 = -80						; size = 28
$T251903 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xran@?$vector@HV?$allocator@H@std@@@std@@KAXXZ PROC	; std::vector<int,std::allocator<int> >::_Xran, COMDAT

; 1264 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Xran@?$vector@HV?$allocator@H@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1265 : 		_THROW(out_of_range, "invalid vector<T> subscript");

	push	OFFSET ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
	lea	ecx, DWORD PTR $T251904[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T251903[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR $T251903[ebp], OFFSET ??_7logic_error@std@@6B@
	lea	eax, DWORD PTR $T251904[ebp]
	push	eax
	lea	ecx, DWORD PTR $T251903[ebp+12]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T251903[ebp], OFFSET ??_7out_of_range@std@@6B@
	push	OFFSET __TI3?AVout_of_range@std@@
	lea	ecx, DWORD PTR $T251903[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T251904[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@Xran:

; 1266 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xran@?$vector@HV?$allocator@H@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T251904[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xran@?$vector@HV?$allocator@H@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T251903[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xran@?$vector@HV?$allocator@H@std@@@std@@KAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Xran@?$vector@HV?$allocator@H@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xran@?$vector@HV?$allocator@H@std@@@std@@KAXXZ ENDP	; std::vector<int,std::allocator<int> >::_Xran
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?what@logic_error@std@@UBEPBDXZ PROC			; std::logic_error::what, COMDAT
; _this$ = ecx

; 34   : 		{	// return pointer to message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 35   : 		return (_Str.c_str());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 36   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN1@scalar@2
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1out_of_range@std@@UAE@XZ PROC			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx

; 133  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7out_of_range@std@@6B@

; 134  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC			; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7out_of_range@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	edx, DWORD PTR ___flags$[ebp]
	and	edx, 1
	je	SHORT $LN1@scalar@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0out_of_range@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0out_of_range@std@@QAE@ABV01@@Z$1
__ehfuncinfo$??0out_of_range@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0out_of_range@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC			; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0out_of_range@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7out_of_range@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0out_of_range@std@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0out_of_range@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0out_of_range@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
PUBLIC	?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z ; std::vector<CvString,std::allocator<CvString> >::_Insert_n
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?insert@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@ABVCvString@@@Z
_TEXT	SEGMENT
tv77 = -32						; size = 4
_this$ = -28						; size = 4
__Tmp$252028 = -24					; size = 4
$T252006 = -20						; size = 4
$T251987 = -16						; size = 4
$T251974 = -12						; size = 4
$T251971 = -8						; size = 4
__Off$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@ABVCvString@@@Z PROC ; std::vector<CvString,std::allocator<CvString> >::insert, COMDAT
; _this$ = ecx

; 875  : 		{	// insert _Val at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	test	eax, eax
	jne	SHORT $LN3@insert@2
	mov	DWORD PTR tv77[ebp], 0
	jmp	SHORT $LN4@insert@2
$LN3@insert@2:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T251987[ebp], eax
	mov	ecx, DWORD PTR $T251987[ebp]
	mov	DWORD PTR $T251971[ebp], ecx
	mov	eax, DWORD PTR __Where$[ebp]
	sub	eax, DWORD PTR $T251971[ebp]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR tv77[ebp], eax
$LN4@insert@2:
	mov	edx, DWORD PTR tv77[ebp]
	mov	DWORD PTR __Off$[ebp], edx

; 877  : 		_Insert_n(_Where, (size_type)1, _Val);

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z ; std::vector<CvString,std::allocator<CvString> >::_Insert_n

; 878  : 		return (begin() + _Off);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T252006[ebp], eax
	mov	ecx, DWORD PTR $T252006[ebp]
	mov	DWORD PTR $T251974[ebp], ecx
	mov	edx, DWORD PTR $T251974[ebp]
	mov	DWORD PTR __Tmp$252028[ebp], edx
	mov	eax, DWORD PTR __Off$[ebp]
	imul	eax, 28					; 0000001cH
	add	eax, DWORD PTR __Tmp$252028[ebp]
	mov	DWORD PTR __Tmp$252028[ebp], eax
	mov	ecx, DWORD PTR __Tmp$252028[ebp]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 879  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insert@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@ABVCvString@@@Z ENDP ; std::vector<CvString,std::allocator<CvString> >::insert
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?erase@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@0@Z
_TEXT	SEGMENT
_this$ = -72						; size = 4
$T252213 = -68						; size = 4
$T252190 = -64						; size = 4
$T252189 = -60						; size = 4
$T252168 = -56						; size = 4
$T252167 = -52						; size = 4
__Cat$252197 = -46					; size = 1
$T252194 = -45						; size = 1
$T252116 = -44						; size = 4
$T252115 = -40						; size = 4
$T252114 = -36						; size = 4
$T252095 = -30						; size = 1
$T252094 = -29						; size = 1
$T252093 = -28						; size = 4
$T252092 = -24						; size = 4
__Cat$252102 = -16					; size = 1
$T252099 = -15						; size = 1
$T252098 = -14						; size = 1
$T252097 = -13						; size = 1
__Ptr$229712 = -12					; size = 4
__Last$ = -8						; size = 4
__First$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@0@Z PROC ; std::vector<CvString,std::allocator<CvString> >::erase, COMDAT
; _this$ = ecx

; 1028 : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	mov	DWORD PTR _this$[ebp], ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);

	mov	eax, DWORD PTR __First_arg$[ebp]
	mov	DWORD PTR __First$[ebp], eax

; 1030 : 		iterator _Last = _Make_iter(_Last_arg);

	mov	ecx, DWORD PTR __Last_arg$[ebp]
	mov	DWORD PTR __Last$[ebp], ecx

; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	edx, DWORD PTR __First$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR __Last$[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	$LN1@erase@2

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T252116[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T252115[ebp], edx
	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T252114[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T252097[ebp], cl
	mov	dl, BYTE PTR __Cat$252102[ebp]
	mov	BYTE PTR $T252098[ebp], dl
	mov	al, BYTE PTR $T252097[ebp]
	mov	BYTE PTR $T252095[ebp], al
	mov	cl, BYTE PTR $T252099[ebp]
	mov	BYTE PTR $T252094[ebp], cl
	mov	edx, DWORD PTR $T252116[ebp]
	mov	DWORD PTR $T252093[ebp], edx
	mov	eax, DWORD PTR $T252114[ebp]
	mov	DWORD PTR $T252092[ebp], eax
	jmp	SHORT $LN28@erase@2
$LN27@erase@2:
	mov	ecx, DWORD PTR $T252093[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR $T252093[ebp], ecx
	mov	edx, DWORD PTR $T252092[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR $T252092[ebp], edx
$LN28@erase@2:
	mov	eax, DWORD PTR $T252092[ebp]
	cmp	eax, DWORD PTR $T252115[ebp]
	je	SHORT $LN20@erase@2
	mov	ecx, DWORD PTR $T252092[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T252093[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	jmp	SHORT $LN27@erase@2
$LN20@erase@2:
	mov	edx, DWORD PTR $T252093[ebp]
	mov	DWORD PTR __Ptr$229712[ebp], edx

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T252213[ebp], ecx
	mov	edx, DWORD PTR $T252213[ebp]
	mov	DWORD PTR $T252190[ebp], edx
	mov	eax, DWORD PTR __Ptr$229712[ebp]
	mov	DWORD PTR $T252189[ebp], eax
	mov	cl, BYTE PTR __Cat$252197[ebp]
	mov	BYTE PTR $T252194[ebp], cl
	mov	edx, DWORD PTR $T252190[ebp]
	mov	DWORD PTR $T252168[ebp], edx
	mov	eax, DWORD PTR $T252189[ebp]
	mov	DWORD PTR $T252167[ebp], eax
	jmp	SHORT $LN41@erase@2
$LN40@erase@2:
	mov	ecx, DWORD PTR $T252167[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR $T252167[ebp], ecx
$LN41@erase@2:
	mov	edx, DWORD PTR $T252167[ebp]
	cmp	edx, DWORD PTR $T252168[ebp]
	je	SHORT $LN33@erase@2
	mov	ecx, DWORD PTR $T252167[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	xor	eax, eax
	and	eax, 1
	je	SHORT $LN44@erase@2
	mov	ecx, DWORD PTR $T252167[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN44@erase@2:
	jmp	SHORT $LN40@erase@2
$LN33@erase@2:

; 1049 : 			_Mylast = _Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$229712[ebp]
	mov	DWORD PTR [edx+8], eax
$LN1@erase@2:

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1055 : #endif
; 1056 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@0@Z ENDP ; std::vector<CvString,std::allocator<CvString> >::erase
_TEXT	ENDS
PUBLIC	??$_Allocate@VCvString@@@std@@YAPAVCvString@@IPAV1@@Z ; std::_Allocate<CvString>
PUBLIC	?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ ; std::vector<CvString,std::allocator<CvString> >::_Xlen
; Function compile flags: /Odtp
;	COMDAT ?_Buy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
tv94 = -96						; size = 4
_this$ = -92						; size = 4
__Count$252231 = -4					; size = 4
__Capacity$ = 8						; size = 4
?_Buy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAE_NI@Z PROC ; std::vector<CvString,std::allocator<CvString> >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	mov	DWORD PTR _this$[ebp], ecx

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 1104 : 		if (_Capacity == 0)

	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN4@Buy

; 1105 : 			return (false);

	xor	al, al
	jmp	SHORT $LN5@Buy
	jmp	SHORT $LN3@Buy
$LN4@Buy:

; 1106 : 		else if (max_size() < _Capacity)

	mov	DWORD PTR __Count$252231[ebp], 153391689 ; 09249249H
	cmp	DWORD PTR __Count$252231[ebp], 0
	jbe	SHORT $LN11@Buy
	mov	eax, DWORD PTR __Count$252231[ebp]
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN7@Buy
$LN11@Buy:
	mov	DWORD PTR tv94[ebp], 1
$LN7@Buy:
	mov	ecx, DWORD PTR tv94[ebp]
	cmp	ecx, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN23@Buy

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ ; std::vector<CvString,std::allocator<CvString> >::_Xlen

; 1108 : 		else

	jmp	SHORT $LN3@Buy

; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

$LN23@Buy:
	push	0
	mov	edx, DWORD PTR __Capacity$[ebp]
	push	edx
	call	??$_Allocate@VCvString@@@std@@YAPAVCvString@@IPAV1@@Z ; std::_Allocate<CvString>
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+8], ecx

; 1112 : 			_Myend = _Myfirst + _Capacity;

	mov	edx, DWORD PTR __Capacity$[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], edx
$LN3@Buy:

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
$LN5@Buy:

; 1115 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<CvString,std::allocator<CvString> >::_Buy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -40						; size = 4
$T252360 = -36						; size = 4
$T252359 = -32						; size = 4
$T252355 = -28						; size = 4
$T252354 = -24						; size = 4
$T252331 = -20						; size = 4
$T252330 = -16						; size = 4
$T252309 = -12						; size = 4
$T252308 = -8						; size = 4
__Cat$252338 = -2					; size = 1
$T252335 = -1						; size = 1
?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ PROC ; std::vector<CvString,std::allocator<CvString> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	DWORD PTR _this$[ebp], ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	$LN1@Tidy

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T252355[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T252354[ebp], ecx
	mov	edx, DWORD PTR $T252355[ebp]
	mov	DWORD PTR $T252331[ebp], edx
	mov	eax, DWORD PTR $T252354[ebp]
	mov	DWORD PTR $T252330[ebp], eax
	mov	cl, BYTE PTR __Cat$252338[ebp]
	mov	BYTE PTR $T252335[ebp], cl
	mov	edx, DWORD PTR $T252331[ebp]
	mov	DWORD PTR $T252309[ebp], edx
	mov	eax, DWORD PTR $T252330[ebp]
	mov	DWORD PTR $T252308[ebp], eax
	jmp	SHORT $LN12@Tidy
$LN11@Tidy:
	mov	ecx, DWORD PTR $T252308[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR $T252308[ebp], ecx
$LN12@Tidy:
	mov	edx, DWORD PTR $T252308[ebp]
	cmp	edx, DWORD PTR $T252309[ebp]
	je	SHORT $LN4@Tidy
	mov	ecx, DWORD PTR $T252308[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	xor	eax, eax
	and	eax, 1
	je	SHORT $LN15@Tidy
	mov	ecx, DWORD PTR $T252308[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN15@Tidy:
	jmp	SHORT $LN11@Tidy
$LN4@Tidy:

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	mov	eax, ecx
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR $T252360[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T252359[ebp], eax
	mov	ecx, DWORD PTR $T252359[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@Tidy:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 1135 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ ENDP ; std::vector<CvString,std::allocator<CvString> >::_Tidy
_TEXT	ENDS
PUBLIC	??$_Allocate@W4ResourceTypes@@@std@@YAPAW4ResourceTypes@@IPAW41@@Z ; std::_Allocate<enum ResourceTypes>
PUBLIC	?_Xlen@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@KAXXZ ; std::vector<enum ResourceTypes,std::allocator<enum ResourceTypes> >::_Xlen
; Function compile flags: /Odtp
;	COMDAT ?_Buy@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
tv94 = -96						; size = 4
_this$ = -92						; size = 4
__Count$252375 = -4					; size = 4
__Capacity$ = 8						; size = 4
?_Buy@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@IAE_NI@Z PROC ; std::vector<enum ResourceTypes,std::allocator<enum ResourceTypes> >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	mov	DWORD PTR _this$[ebp], ecx

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 1104 : 		if (_Capacity == 0)

	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN4@Buy@2

; 1105 : 			return (false);

	xor	al, al
	jmp	SHORT $LN5@Buy@2
	jmp	SHORT $LN3@Buy@2
$LN4@Buy@2:

; 1106 : 		else if (max_size() < _Capacity)

	mov	DWORD PTR __Count$252375[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$252375[ebp], 0
	jbe	SHORT $LN11@Buy@2
	mov	eax, DWORD PTR __Count$252375[ebp]
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN7@Buy@2
$LN11@Buy@2:
	mov	DWORD PTR tv94[ebp], 1
$LN7@Buy@2:
	mov	ecx, DWORD PTR tv94[ebp]
	cmp	ecx, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN23@Buy@2

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@KAXXZ ; std::vector<enum ResourceTypes,std::allocator<enum ResourceTypes> >::_Xlen

; 1108 : 		else

	jmp	SHORT $LN3@Buy@2

; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

$LN23@Buy@2:
	push	0
	mov	edx, DWORD PTR __Capacity$[ebp]
	push	edx
	call	??$_Allocate@W4ResourceTypes@@@std@@YAPAW4ResourceTypes@@IPAW41@@Z ; std::_Allocate<enum ResourceTypes>
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+8], ecx

; 1112 : 			_Myend = _Myfirst + _Capacity;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Capacity$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
$LN3@Buy@2:

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
$LN5@Buy@2:

; 1115 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<enum ResourceTypes,std::allocator<enum ResourceTypes> >::_Buy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -36						; size = 4
$T252471 = -32						; size = 4
$T252470 = -28						; size = 4
$T252466 = -24						; size = 4
$T252465 = -20						; size = 4
$T252447 = -16						; size = 4
$T252446 = -12						; size = 4
$T252430 = -8						; size = 4
__Cat$252454 = -2					; size = 1
$T252451 = -1						; size = 1
?_Tidy@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@IAEXXZ PROC ; std::vector<enum ResourceTypes,std::allocator<enum ResourceTypes> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Tidy@2

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T252466[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T252465[ebp], ecx
	mov	edx, DWORD PTR $T252466[ebp]
	mov	DWORD PTR $T252447[ebp], edx
	mov	eax, DWORD PTR $T252465[ebp]
	mov	DWORD PTR $T252446[ebp], eax
	mov	cl, BYTE PTR __Cat$252454[ebp]
	mov	BYTE PTR $T252451[ebp], cl
	mov	edx, DWORD PTR $T252446[ebp]
	mov	DWORD PTR $T252430[ebp], edx
	jmp	SHORT $LN12@Tidy@2
$LN11@Tidy@2:
	mov	eax, DWORD PTR $T252430[ebp]
	add	eax, 4
	mov	DWORD PTR $T252430[ebp], eax
$LN12@Tidy@2:
	mov	ecx, DWORD PTR $T252430[ebp]
	cmp	ecx, DWORD PTR $T252447[ebp]
	je	SHORT $LN4@Tidy@2
	jmp	SHORT $LN11@Tidy@2
$LN4@Tidy@2:

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	mov	DWORD PTR $T252471[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T252470[ebp], eax
	mov	ecx, DWORD PTR $T252470[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@Tidy@2:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 1135 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@IAEXXZ ENDP ; std::vector<enum ResourceTypes,std::allocator<enum ResourceTypes> >::_Tidy
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
_TEXT	ENDS
;	COMDAT ??1?$BaseVector@W4BuildingTypes@@$00@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$BaseVector@W4BuildingTypes@@$00@@QAE@XZ PROC	; BaseVector<enum BuildingTypes,1>::~BaseVector<enum BuildingTypes,1>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$BaseVector@W4BuildingTypes@@$00@@QAE@XZ ENDP	; BaseVector<enum BuildingTypes,1>::~BaseVector<enum BuildingTypes,1>
_TEXT	ENDS
EXTRN	_memcpy:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GrowSize@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@IAEXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GrowSize@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@IAEXI@Z$0
__ehfuncinfo$?GrowSize@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@IAEXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GrowSize@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@IAEXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?GrowSize@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@IAEXI@Z
_TEXT	SEGMENT
tv186 = -88						; size = 4
_this$ = -84						; size = 4
$T252552 = -80						; size = 4
$T252551 = -76						; size = 4
$T252487 = -40						; size = 4
_pRet$252483 = -36					; size = 4
$T252477 = -32						; size = 4
$T252476 = -28						; size = 4
_i$229798 = -24						; size = 4
_uiNewSize$229790 = -20					; size = 4
_pTemp$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@IAEXI@Z PROC ; FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GrowSize@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN8@GrowSize
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1
$LN8@GrowSize:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jb	SHORT $LN7@GrowSize

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shl	edx, 1
	mov	DWORD PTR _uiNewSize$229790[ebp], edx

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _uiNewSize$229790[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN6@GrowSize

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	mov	DWORD PTR [edx+8], eax

; 754  : 				break;

	jmp	SHORT $LN7@GrowSize
$LN6@GrowSize:

; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _uiNewSize$229790[ebp]
	mov	DWORD PTR [ecx+8], edx

; 759  : 		}

	jmp	SHORT $LN8@GrowSize
$LN7@GrowSize:

; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T252487[ebp], ecx
	cmp	DWORD PTR $T252487[ebp], 22		; 00000016H
	jbe	SHORT $LN16@GrowSize
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	edx, DWORD PTR $T252487[ebp]
	imul	edx, 156				; 0000009cH
	push	edx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$252483[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T252487[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN17@GrowSize
$LN16@GrowSize:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _pRet$252483[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 22			; 00000016H
$LN17@GrowSize:
	mov	ecx, DWORD PTR _pRet$252483[ebp]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 762  : 		if( bPODType ){

	xor	edx, edx
	je	SHORT $LN5@GrowSize

; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 156				; 0000009cH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pTemp$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 764  : 		}else{

	jmp	SHORT $LN4@GrowSize
$LN5@GrowSize:

; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	mov	DWORD PTR _i$229798[ebp], 0
	jmp	SHORT $LN3@GrowSize
$LN2@GrowSize:
	mov	edx, DWORD PTR _i$229798[ebp]
	add	edx, 1
	mov	DWORD PTR _i$229798[ebp], edx
$LN3@GrowSize:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$229798[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN4@GrowSize

; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);

	mov	edx, DWORD PTR _i$229798[ebp]
	imul	edx, 156				; 0000009cH
	add	edx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR $T252477[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T252477[ebp], 0
	je	SHORT $LN12@GrowSize
	mov	eax, DWORD PTR _i$229798[ebp]
	imul	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	mov	ecx, DWORD PTR $T252477[ebp]
	call	??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@ABV0@@Z ; FStaticVector<CvMinorCivQuest,5,0,297,0>::FStaticVector<CvMinorCivQuest,5,0,297,0>
	mov	DWORD PTR tv186[ebp], eax
	jmp	SHORT $LN13@GrowSize
$LN12@GrowSize:
	mov	DWORD PTR tv186[ebp], 0
$LN13@GrowSize:
	mov	edx, DWORD PTR tv186[ebp]
	mov	DWORD PTR $T252476[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	jmp	SHORT $LN2@GrowSize
$LN4@GrowSize:

; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T252552[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T252551[ebp], eax
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN42@GrowSize
	mov	edx, DWORD PTR $T252552[ebp]
	push	edx
	mov	eax, DWORD PTR $T252551[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Destroy@?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@IAEXPAV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@I@Z ; BaseVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,0>::Destroy
$LN42@GrowSize:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	cmp	DWORD PTR $T252551[ebp], ecx
	je	SHORT $LN43@GrowSize
	mov	edx, DWORD PTR $T252551[ebp]
	push	edx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN43@GrowSize:

; 769  : 		m_pData = pTemp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR [eax], ecx

; 770  : 
; 771  : 		m_bIsResized = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+3444], 1

; 772  : 	};

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GrowSize@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@IAEXI@Z$0:
	mov	eax, DWORD PTR _i$229798[ebp]
	imul	eax, 156				; 0000009cH
	add	eax, DWORD PTR _pTemp$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T252477[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?GrowSize@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GrowSize@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GrowSize@?$FStaticVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0BG@$0A@$0BCJ@$0A@@@IAEXI@Z ENDP ; FStaticVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,22,0,297,0>::GrowSize
; Function compile flags: /Odtp
;	COMDAT ??1?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@QAE@XZ PROC ; BaseVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,0>::~BaseVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,0>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@QAE@XZ ENDP ; BaseVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,0>::~BaseVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,0>
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Destroy@?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@IAEXPAV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Destroy@?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@IAEXPAV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@I@Z$0
__ehfuncinfo$?Destroy@?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@IAEXPAV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Destroy@?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@IAEXPAV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?Destroy@?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@IAEXPAV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@I@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T252598 = -28						; size = 4
_i$229830 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Destroy@?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@IAEXPAV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@I@Z PROC ; BaseVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,0>::Destroy, COMDAT
; _this$ = ecx

; 220  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Destroy@?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@IAEXPAV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 221  : 		if( !bPODType){

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN5@Destroy

; 222  : 			for(unsigned int i = 0; i < uiNumElements; ++i){

	mov	DWORD PTR _i$229830[ebp], 0
	jmp	SHORT $LN3@Destroy
$LN2@Destroy:
	mov	ecx, DWORD PTR _i$229830[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$229830[ebp], ecx
$LN3@Destroy:
	mov	edx, DWORD PTR _i$229830[ebp]
	cmp	edx, DWORD PTR _uiNumElements$[ebp]
	jae	SHORT $LN5@Destroy

; 223  : 				pVal[i].~T();

	mov	eax, DWORD PTR _i$229830[ebp]
	imul	eax, 156				; 0000009cH
	add	eax, DWORD PTR _pVal$[ebp]
	mov	DWORD PTR $T252598[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T252598[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR $T252598[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR $T252598[ebp]
	call	?Free@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@IAEXPAVCvMinorCivQuest@@I@Z ; FStaticVector<CvMinorCivQuest,5,0,297,0>::Free
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN8@Destroy
	mov	eax, DWORD PTR $T252598[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@Destroy:

; 224  : 			}

	jmp	SHORT $LN2@Destroy
$LN5@Destroy:

; 225  : 		}
; 226  : 	};

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Destroy@?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@IAEXPAV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@I@Z$0:
	mov	ecx, DWORD PTR $T252598[ebp]
	jmp	??1?$BaseVector@VCvMinorCivQuest@@$0A@@@QAE@XZ ; BaseVector<CvMinorCivQuest,0>::~BaseVector<CvMinorCivQuest,0>
__ehhandler$?Destroy@?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@IAEXPAV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Destroy@?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@IAEXPAV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Destroy@?$BaseVector@V?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@$0A@@@IAEXPAV?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@I@Z ENDP ; BaseVector<FStaticVector<CvMinorCivQuest,5,0,297,0>,0>::Destroy
PUBLIC	?Copy@?$BaseVector@VCvMinorCivQuest@@$0A@@@IAEXABV1@@Z ; BaseVector<CvMinorCivQuest,0>::Copy
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\new
xdata$x	SEGMENT
__unwindtable$??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@ABV0@@Z$0
__ehfuncinfo$??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@ABV0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	ENDS
;	COMDAT ??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T252617 = -20						; size = 4
_pRet$252613 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_RHS$ = 8						; size = 4
??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@ABV0@@Z PROC ; FStaticVector<CvMinorCivQuest,5,0,297,0>::FStaticVector<CvMinorCivQuest,5,0,297,0>, COMDAT
; _this$ = ecx

; 591  : 	FStaticVector(const THIS_TYPE& RHS)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@ABV0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 592  : 	{
; 593  : 		m_uiCurrSize = RHS.m_uiCurrSize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _RHS$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 594  : 		m_uiCurrMaxSize = RHS.m_uiCurrMaxSize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _RHS$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx

; 595  : 		m_pData = Alloc(RHS.m_uiCurrMaxSize);

	mov	eax, DWORD PTR _RHS$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T252617[ebp], ecx
	cmp	DWORD PTR $T252617[ebp], 5
	jbe	SHORT $LN7@FStaticVec@22
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	edx, DWORD PTR $T252617[ebp]
	imul	edx, 28					; 0000001cH
	push	edx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$252613[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T252617[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN8@FStaticVec@22
$LN7@FStaticVec@22:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _pRet$252613[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 5
$LN8@FStaticVec@22:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pRet$252613[ebp]
	mov	DWORD PTR [ecx], edx

; 596  : #ifdef BREAK_ON_STATIC_RESIZE
; 597  : 		m_iNumResized = 0;
; 598  : #endif
; 599  : 		Copy(RHS);

	mov	eax, DWORD PTR _RHS$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Copy@?$BaseVector@VCvMinorCivQuest@@$0A@@@IAEXABV1@@Z ; BaseVector<CvMinorCivQuest,0>::Copy

; 600  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@ABV0@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@VCvMinorCivQuest@@$0A@@@QAE@XZ ; BaseVector<CvMinorCivQuest,0>::~BaseVector<CvMinorCivQuest,0>
__ehhandler$??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@ABV0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@ABV0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@QAE@ABV0@@Z ENDP ; FStaticVector<CvMinorCivQuest,5,0,297,0>::FStaticVector<CvMinorCivQuest,5,0,297,0>
; Function compile flags: /Odtp
;	COMDAT ?GrowSize@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@IAEXI@Z
_TEXT	SEGMENT
tv179 = -40						; size = 4
_this$ = -36						; size = 4
$T252642 = -24						; size = 4
_pRet$252638 = -20					; size = 4
$T252633 = -16						; size = 4
_i$229850 = -12						; size = 4
_uiNewSize$229842 = -8					; size = 4
_pTemp$ = -4						; size = 4
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@IAEXI@Z PROC ; FStaticVector<CvMinorCivQuest,5,0,297,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN8@GrowSize@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1
$LN8@GrowSize@2:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jb	SHORT $LN7@GrowSize@2

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shl	edx, 1
	mov	DWORD PTR _uiNewSize$229842[ebp], edx

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _uiNewSize$229842[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN6@GrowSize@2

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	mov	DWORD PTR [edx+8], eax

; 754  : 				break;

	jmp	SHORT $LN7@GrowSize@2
$LN6@GrowSize@2:

; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _uiNewSize$229842[ebp]
	mov	DWORD PTR [ecx+8], edx

; 759  : 		}

	jmp	SHORT $LN8@GrowSize@2
$LN7@GrowSize@2:

; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T252642[ebp], ecx
	cmp	DWORD PTR $T252642[ebp], 5
	jbe	SHORT $LN15@GrowSize@2
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	edx, DWORD PTR $T252642[ebp]
	imul	edx, 28					; 0000001cH
	push	edx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$252638[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T252642[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN16@GrowSize@2
$LN15@GrowSize@2:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _pRet$252638[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 5
$LN16@GrowSize@2:
	mov	ecx, DWORD PTR _pRet$252638[ebp]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 762  : 		if( bPODType ){

	xor	edx, edx
	je	SHORT $LN5@GrowSize@2

; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 28					; 0000001cH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pTemp$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 764  : 		}else{

	jmp	SHORT $LN4@GrowSize@2
$LN5@GrowSize@2:

; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	mov	DWORD PTR _i$229850[ebp], 0
	jmp	SHORT $LN3@GrowSize@2
$LN2@GrowSize@2:
	mov	edx, DWORD PTR _i$229850[ebp]
	add	edx, 1
	mov	DWORD PTR _i$229850[ebp], edx
$LN3@GrowSize@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$229850[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN4@GrowSize@2

; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);

	mov	edx, DWORD PTR _i$229850[ebp]
	imul	edx, 28					; 0000001cH
	add	edx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR $T252633[ebp], edx
	je	SHORT $LN12@GrowSize@2
	mov	eax, DWORD PTR _i$229850[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [ecx]
	add	esi, eax
	mov	ecx, 7
	mov	edi, DWORD PTR $T252633[ebp]
	rep movsd
	mov	edx, DWORD PTR $T252633[ebp]
	mov	DWORD PTR tv179[ebp], edx
	jmp	SHORT $LN13@GrowSize@2
$LN12@GrowSize@2:
	mov	DWORD PTR tv179[ebp], 0
$LN13@GrowSize@2:
	jmp	SHORT $LN2@GrowSize@2
$LN4@GrowSize@2:

; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@IAEXPAVCvMinorCivQuest@@I@Z ; FStaticVector<CvMinorCivQuest,5,0,297,0>::Free

; 769  : 		m_pData = pTemp;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR [ecx], edx

; 770  : 
; 771  : 		m_bIsResized = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+152], 1

; 772  : 	};

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?GrowSize@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@IAEXI@Z ENDP ; FStaticVector<CvMinorCivQuest,5,0,297,0>::GrowSize
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Free@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@IAEXPAVCvMinorCivQuest@@I@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T252670 = -8						; size = 4
_i$252673 = -4						; size = 4
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Free@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@IAEXPAVCvMinorCivQuest@@I@Z PROC ; FStaticVector<CvMinorCivQuest,5,0,297,0>::Free, COMDAT
; _this$ = ecx

; 809  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 810  : 		if( !bPODType) Destroy(pVal, uiNumElements);

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@Free
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN2@Free
	mov	DWORD PTR _i$252673[ebp], 0
	jmp	SHORT $LN7@Free
$LN6@Free:
	mov	edx, DWORD PTR _i$252673[ebp]
	add	edx, 1
	mov	DWORD PTR _i$252673[ebp], edx
$LN7@Free:
	mov	eax, DWORD PTR _i$252673[ebp]
	cmp	eax, DWORD PTR _uiNumElements$[ebp]
	jae	SHORT $LN2@Free
	mov	ecx, DWORD PTR _i$252673[ebp]
	imul	ecx, 28					; 0000001cH
	add	ecx, DWORD PTR _pVal$[ebp]
	mov	DWORD PTR $T252670[ebp], ecx
	mov	ecx, DWORD PTR $T252670[ebp]
	call	??1CvMinorCivQuest@@QAE@XZ		; CvMinorCivQuest::~CvMinorCivQuest
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN12@Free
	mov	eax, DWORD PTR $T252670[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN12@Free:
	jmp	SHORT $LN6@Free
$LN2@Free:

; 811  : 		if( pVal != (T*)m_aData )

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	cmp	DWORD PTR _pVal$[ebp], ecx
	je	SHORT $LN3@Free

; 812  : 			FFREEALIGNED( (unsigned char*)pVal );

	mov	edx, DWORD PTR _pVal$[ebp]
	push	edx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN3@Free:

; 813  : 	};

	mov	esp, ebp
	pop	ebp
	ret	8
?Free@?$FStaticVector@VCvMinorCivQuest@@$04$0A@$0BCJ@$0A@@@IAEXPAVCvMinorCivQuest@@I@Z ENDP ; FStaticVector<CvMinorCivQuest,5,0,297,0>::Free
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$BaseVector@VCvMinorCivQuest@@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$BaseVector@VCvMinorCivQuest@@$0A@@@QAE@XZ PROC	; BaseVector<CvMinorCivQuest,0>::~BaseVector<CvMinorCivQuest,0>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$BaseVector@VCvMinorCivQuest@@$0A@@@QAE@XZ ENDP	; BaseVector<CvMinorCivQuest,0>::~BaseVector<CvMinorCivQuest,0>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GrowSize@?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@IAEXI@Z
_TEXT	SEGMENT
tv178 = -44						; size = 4
_this$ = -40						; size = 4
$T252719 = -36						; size = 4
$T252718 = -32						; size = 4
_i$252713 = -28						; size = 4
$T252694 = -24						; size = 4
_pRet$252690 = -20					; size = 4
$T252685 = -16						; size = 4
_i$229897 = -12						; size = 4
_uiNewSize$229889 = -8					; size = 4
_pTemp$ = -4						; size = 4
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@IAEXI@Z PROC ; FStaticVector<enum PlayerTypes,64,1,297,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN8@GrowSize@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1
$LN8@GrowSize@3:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jb	SHORT $LN7@GrowSize@3

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shl	edx, 1
	mov	DWORD PTR _uiNewSize$229889[ebp], edx

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _uiNewSize$229889[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN6@GrowSize@3

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	mov	DWORD PTR [edx+8], eax

; 754  : 				break;

	jmp	SHORT $LN7@GrowSize@3
$LN6@GrowSize@3:

; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _uiNewSize$229889[ebp]
	mov	DWORD PTR [ecx+8], edx

; 759  : 		}

	jmp	SHORT $LN8@GrowSize@3
$LN7@GrowSize@3:

; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T252694[ebp], ecx
	cmp	DWORD PTR $T252694[ebp], 64		; 00000040H
	jbe	SHORT $LN15@GrowSize@3
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	edx, DWORD PTR $T252694[ebp]
	shl	edx, 2
	push	edx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$252690[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T252694[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN16@GrowSize@3
$LN15@GrowSize@3:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _pRet$252690[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 64			; 00000040H
$LN16@GrowSize@3:
	mov	ecx, DWORD PTR _pRet$252690[ebp]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 762  : 		if( bPODType ){

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@GrowSize@3

; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pTemp$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 764  : 		}else{

	jmp	SHORT $LN4@GrowSize@3
$LN5@GrowSize@3:

; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	mov	DWORD PTR _i$229897[ebp], 0
	jmp	SHORT $LN3@GrowSize@3
$LN2@GrowSize@3:
	mov	edx, DWORD PTR _i$229897[ebp]
	add	edx, 1
	mov	DWORD PTR _i$229897[ebp], edx
$LN3@GrowSize@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$229897[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN4@GrowSize@3

; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);

	mov	edx, DWORD PTR _i$229897[ebp]
	mov	eax, DWORD PTR _pTemp$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T252685[ebp], ecx
	cmp	DWORD PTR $T252685[ebp], 0
	je	SHORT $LN12@GrowSize@3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T252685[ebp]
	mov	edx, DWORD PTR _i$229897[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR $T252685[ebp]
	mov	DWORD PTR tv178[ebp], ecx
	jmp	SHORT $LN13@GrowSize@3
$LN12@GrowSize@3:
	mov	DWORD PTR tv178[ebp], 0
$LN13@GrowSize@3:
	jmp	SHORT $LN2@GrowSize@3
$LN4@GrowSize@3:

; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T252719[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T252718[ebp], edx
	xor	eax, eax
	je	SHORT $LN21@GrowSize@3
	xor	ecx, ecx
	je	SHORT $LN21@GrowSize@3
	mov	DWORD PTR _i$252713[ebp], 0
	jmp	SHORT $LN26@GrowSize@3
$LN25@GrowSize@3:
	mov	edx, DWORD PTR _i$252713[ebp]
	add	edx, 1
	mov	DWORD PTR _i$252713[ebp], edx
$LN26@GrowSize@3:
	mov	eax, DWORD PTR _i$252713[ebp]
	cmp	eax, DWORD PTR $T252719[ebp]
	jae	SHORT $LN21@GrowSize@3
	jmp	SHORT $LN25@GrowSize@3
$LN21@GrowSize@3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	cmp	DWORD PTR $T252718[ebp], ecx
	je	SHORT $LN22@GrowSize@3
	mov	edx, DWORD PTR $T252718[ebp]
	push	edx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN22@GrowSize@3:

; 769  : 		m_pData = pTemp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR [eax], ecx

; 770  : 
; 771  : 		m_bIsResized = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+268], 1

; 772  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?GrowSize@?$FStaticVector@W4PlayerTypes@@$0EA@$00$0BCJ@$0A@@@IAEXI@Z ENDP ; FStaticVector<enum PlayerTypes,64,1,297,0>::GrowSize
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$BaseVector@W4PlayerTypes@@$00@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$BaseVector@W4PlayerTypes@@$00@@QAE@XZ PROC		; BaseVector<enum PlayerTypes,1>::~BaseVector<enum PlayerTypes,1>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$BaseVector@W4PlayerTypes@@$00@@QAE@XZ ENDP		; BaseVector<enum PlayerTypes,1>::~BaseVector<enum PlayerTypes,1>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Copy@?$BaseVector@W4PlayerTypes@@$00@@IAEXABV1@@Z
_TEXT	SEGMENT
tv83 = -16						; size = 4
_this$ = -12						; size = 4
$T252724 = -8						; size = 4
_i$229937 = -4						; size = 4
_RHS$ = 8						; size = 4
?Copy@?$BaseVector@W4PlayerTypes@@$00@@IAEXABV1@@Z PROC	; BaseVector<enum PlayerTypes,1>::Copy, COMDAT
; _this$ = ecx

; 229  : 	void Copy(const THIS_TYPE& RHS){

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 230  : 		m_uiCurrSize = RHS.m_uiCurrSize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _RHS$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 231  : 		if( bPODType ){

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN5@Copy

; 232  : 			memcpy( (void*)m_pData, (void*)RHS.m_pData, sizeof(T)*RHS.m_uiCurrSize);

	mov	ecx, DWORD PTR _RHS$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	shl	edx, 2
	push	edx
	mov	eax, DWORD PTR _RHS$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 233  : 		}else{

	jmp	SHORT $LN6@Copy
$LN5@Copy:

; 234  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i){

	mov	DWORD PTR _i$229937[ebp], 0
	jmp	SHORT $LN3@Copy
$LN2@Copy:
	mov	ecx, DWORD PTR _i$229937[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$229937[ebp], ecx
$LN3@Copy:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _i$229937[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jae	SHORT $LN6@Copy

; 235  : 				new( (void*)&m_pData[i] )T( RHS.m_pData[i] );

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _i$229937[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR $T252724[ebp], ecx
	cmp	DWORD PTR $T252724[ebp], 0
	je	SHORT $LN8@Copy
	mov	edx, DWORD PTR _RHS$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T252724[ebp]
	mov	edx, DWORD PTR _i$229937[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR $T252724[ebp]
	mov	DWORD PTR tv83[ebp], ecx
	jmp	SHORT $LN9@Copy
$LN8@Copy:
	mov	DWORD PTR tv83[ebp], 0
$LN9@Copy:

; 236  : 			}

	jmp	SHORT $LN2@Copy
$LN6@Copy:

; 237  : 		}
; 238  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?Copy@?$BaseVector@W4PlayerTypes@@$00@@IAEXABV1@@Z ENDP	; BaseVector<enum PlayerTypes,1>::Copy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GrowSize@?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@IAEXI@Z
_TEXT	SEGMENT
tv178 = -44						; size = 4
_this$ = -40						; size = 4
$T252766 = -36						; size = 4
$T252765 = -32						; size = 4
_i$252760 = -28						; size = 4
$T252741 = -24						; size = 4
_pRet$252737 = -20					; size = 4
$T252732 = -16						; size = 4
_i$229958 = -12						; size = 4
_uiNewSize$229950 = -8					; size = 4
_pTemp$ = -4						; size = 4
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@IAEXI@Z PROC ; FStaticVector<enum ResourceTypes,64,1,297,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN8@GrowSize@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1
$LN8@GrowSize@4:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jb	SHORT $LN7@GrowSize@4

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shl	edx, 1
	mov	DWORD PTR _uiNewSize$229950[ebp], edx

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _uiNewSize$229950[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN6@GrowSize@4

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	mov	DWORD PTR [edx+8], eax

; 754  : 				break;

	jmp	SHORT $LN7@GrowSize@4
$LN6@GrowSize@4:

; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _uiNewSize$229950[ebp]
	mov	DWORD PTR [ecx+8], edx

; 759  : 		}

	jmp	SHORT $LN8@GrowSize@4
$LN7@GrowSize@4:

; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T252741[ebp], ecx
	cmp	DWORD PTR $T252741[ebp], 64		; 00000040H
	jbe	SHORT $LN15@GrowSize@4
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	edx, DWORD PTR $T252741[ebp]
	shl	edx, 2
	push	edx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$252737[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T252741[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN16@GrowSize@4
$LN15@GrowSize@4:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _pRet$252737[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 64			; 00000040H
$LN16@GrowSize@4:
	mov	ecx, DWORD PTR _pRet$252737[ebp]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 762  : 		if( bPODType ){

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@GrowSize@4

; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pTemp$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 764  : 		}else{

	jmp	SHORT $LN4@GrowSize@4
$LN5@GrowSize@4:

; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	mov	DWORD PTR _i$229958[ebp], 0
	jmp	SHORT $LN3@GrowSize@4
$LN2@GrowSize@4:
	mov	edx, DWORD PTR _i$229958[ebp]
	add	edx, 1
	mov	DWORD PTR _i$229958[ebp], edx
$LN3@GrowSize@4:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$229958[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN4@GrowSize@4

; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);

	mov	edx, DWORD PTR _i$229958[ebp]
	mov	eax, DWORD PTR _pTemp$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T252732[ebp], ecx
	cmp	DWORD PTR $T252732[ebp], 0
	je	SHORT $LN12@GrowSize@4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T252732[ebp]
	mov	edx, DWORD PTR _i$229958[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR $T252732[ebp]
	mov	DWORD PTR tv178[ebp], ecx
	jmp	SHORT $LN13@GrowSize@4
$LN12@GrowSize@4:
	mov	DWORD PTR tv178[ebp], 0
$LN13@GrowSize@4:
	jmp	SHORT $LN2@GrowSize@4
$LN4@GrowSize@4:

; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T252766[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T252765[ebp], edx
	xor	eax, eax
	je	SHORT $LN21@GrowSize@4
	xor	ecx, ecx
	je	SHORT $LN21@GrowSize@4
	mov	DWORD PTR _i$252760[ebp], 0
	jmp	SHORT $LN26@GrowSize@4
$LN25@GrowSize@4:
	mov	edx, DWORD PTR _i$252760[ebp]
	add	edx, 1
	mov	DWORD PTR _i$252760[ebp], edx
$LN26@GrowSize@4:
	mov	eax, DWORD PTR _i$252760[ebp]
	cmp	eax, DWORD PTR $T252766[ebp]
	jae	SHORT $LN21@GrowSize@4
	jmp	SHORT $LN25@GrowSize@4
$LN21@GrowSize@4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	cmp	DWORD PTR $T252765[ebp], ecx
	je	SHORT $LN22@GrowSize@4
	mov	edx, DWORD PTR $T252765[ebp]
	push	edx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN22@GrowSize@4:

; 769  : 		m_pData = pTemp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR [eax], ecx

; 770  : 
; 771  : 		m_bIsResized = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+268], 1

; 772  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?GrowSize@?$FStaticVector@W4ResourceTypes@@$0EA@$00$0BCJ@$0A@@@IAEXI@Z ENDP ; FStaticVector<enum ResourceTypes,64,1,297,0>::GrowSize
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$BaseVector@W4ResourceTypes@@$00@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$BaseVector@W4ResourceTypes@@$00@@QAE@XZ PROC	; BaseVector<enum ResourceTypes,1>::~BaseVector<enum ResourceTypes,1>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$BaseVector@W4ResourceTypes@@$00@@QAE@XZ ENDP	; BaseVector<enum ResourceTypes,1>::~BaseVector<enum ResourceTypes,1>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GrowSize@?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@IAEXI@Z
_TEXT	SEGMENT
tv178 = -44						; size = 4
_this$ = -40						; size = 4
$T252805 = -36						; size = 4
$T252804 = -32						; size = 4
_i$252799 = -28						; size = 4
$T252780 = -24						; size = 4
_pRet$252776 = -20					; size = 4
$T252771 = -16						; size = 4
_i$229998 = -12						; size = 4
_uiNewSize$229990 = -8					; size = 4
_pTemp$ = -4						; size = 4
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@IAEXI@Z PROC ; FStaticVector<enum MinorCivQuestTypes,18,1,297,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN8@GrowSize@5
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1
$LN8@GrowSize@5:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jb	SHORT $LN7@GrowSize@5

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shl	edx, 1
	mov	DWORD PTR _uiNewSize$229990[ebp], edx

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _uiNewSize$229990[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN6@GrowSize@5

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	mov	DWORD PTR [edx+8], eax

; 754  : 				break;

	jmp	SHORT $LN7@GrowSize@5
$LN6@GrowSize@5:

; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _uiNewSize$229990[ebp]
	mov	DWORD PTR [ecx+8], edx

; 759  : 		}

	jmp	SHORT $LN8@GrowSize@5
$LN7@GrowSize@5:

; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T252780[ebp], ecx
	cmp	DWORD PTR $T252780[ebp], 18		; 00000012H
	jbe	SHORT $LN15@GrowSize@5
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	edx, DWORD PTR $T252780[ebp]
	shl	edx, 2
	push	edx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$252776[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T252780[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN16@GrowSize@5
$LN15@GrowSize@5:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _pRet$252776[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 18			; 00000012H
$LN16@GrowSize@5:
	mov	ecx, DWORD PTR _pRet$252776[ebp]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 762  : 		if( bPODType ){

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@GrowSize@5

; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pTemp$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 764  : 		}else{

	jmp	SHORT $LN4@GrowSize@5
$LN5@GrowSize@5:

; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	mov	DWORD PTR _i$229998[ebp], 0
	jmp	SHORT $LN3@GrowSize@5
$LN2@GrowSize@5:
	mov	edx, DWORD PTR _i$229998[ebp]
	add	edx, 1
	mov	DWORD PTR _i$229998[ebp], edx
$LN3@GrowSize@5:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$229998[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN4@GrowSize@5

; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);

	mov	edx, DWORD PTR _i$229998[ebp]
	mov	eax, DWORD PTR _pTemp$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T252771[ebp], ecx
	cmp	DWORD PTR $T252771[ebp], 0
	je	SHORT $LN12@GrowSize@5
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T252771[ebp]
	mov	edx, DWORD PTR _i$229998[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR $T252771[ebp]
	mov	DWORD PTR tv178[ebp], ecx
	jmp	SHORT $LN13@GrowSize@5
$LN12@GrowSize@5:
	mov	DWORD PTR tv178[ebp], 0
$LN13@GrowSize@5:
	jmp	SHORT $LN2@GrowSize@5
$LN4@GrowSize@5:

; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T252805[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T252804[ebp], edx
	xor	eax, eax
	je	SHORT $LN21@GrowSize@5
	xor	ecx, ecx
	je	SHORT $LN21@GrowSize@5
	mov	DWORD PTR _i$252799[ebp], 0
	jmp	SHORT $LN26@GrowSize@5
$LN25@GrowSize@5:
	mov	edx, DWORD PTR _i$252799[ebp]
	add	edx, 1
	mov	DWORD PTR _i$252799[ebp], edx
$LN26@GrowSize@5:
	mov	eax, DWORD PTR _i$252799[ebp]
	cmp	eax, DWORD PTR $T252805[ebp]
	jae	SHORT $LN21@GrowSize@5
	jmp	SHORT $LN25@GrowSize@5
$LN21@GrowSize@5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	cmp	DWORD PTR $T252804[ebp], ecx
	je	SHORT $LN22@GrowSize@5
	mov	edx, DWORD PTR $T252804[ebp]
	push	edx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN22@GrowSize@5:

; 769  : 		m_pData = pTemp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR [eax], ecx

; 770  : 
; 771  : 		m_bIsResized = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+84], 1

; 772  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?GrowSize@?$FStaticVector@W4MinorCivQuestTypes@@$0BC@$00$0BCJ@$0A@@@IAEXI@Z ENDP ; FStaticVector<enum MinorCivQuestTypes,18,1,297,0>::GrowSize
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$BaseVector@W4MinorCivQuestTypes@@$00@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$BaseVector@W4MinorCivQuestTypes@@$00@@QAE@XZ PROC	; BaseVector<enum MinorCivQuestTypes,1>::~BaseVector<enum MinorCivQuestTypes,1>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$BaseVector@W4MinorCivQuestTypes@@$00@@QAE@XZ ENDP	; BaseVector<enum MinorCivQuestTypes,1>::~BaseVector<enum MinorCivQuestTypes,1>
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Init
PUBLIC	??0?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@QAE@U?$less@W4MinorCivQuestTypes@@@1@V?$allocator@W4MinorCivQuestTypes@@@1@@Z ; std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0>::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$??0?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE@ABU?$less@W4MinorCivQuestTypes@@@1@ABV?$allocator@W4MinorCivQuestTypes@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE@ABU?$less@W4MinorCivQuestTypes@@@1@ABV?$allocator@W4MinorCivQuestTypes@@@1@@Z$0
__ehfuncinfo$??0?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE@ABU?$less@W4MinorCivQuestTypes@@@1@ABV?$allocator@W4MinorCivQuestTypes@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE@ABU?$less@W4MinorCivQuestTypes@@@1@ABV?$allocator@W4MinorCivQuestTypes@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE@ABU?$less@W4MinorCivQuestTypes@@@1@ABV?$allocator@W4MinorCivQuestTypes@@@1@@Z
_TEXT	SEGMENT
tv89 = -72						; size = 4
tv147 = -68						; size = 4
tv173 = -64						; size = 4
tv199 = -60						; size = 4
_this$ = -56						; size = 4
$T252890 = -47						; size = 1
$T252865 = -46						; size = 1
$T252847 = -45						; size = 1
$T252836 = -44						; size = 4
$T252881 = -40						; size = 4
$T252829 = -36						; size = 4
$T252822 = -28						; size = 4
$T252815 = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE@ABU?$less@W4MinorCivQuestTypes@@@1@ABV?$allocator@W4MinorCivQuestTypes@@@1@@Z PROC ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >, COMDAT
; _this$ = ecx

; 509  : 		{	// construct empty tree

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE@ABU?$less@W4MinorCivQuestTypes@@@1@ABV?$allocator@W4MinorCivQuestTypes@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 60					; 0000003cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T252890[ebp]
	mov	DWORD PTR $T252815[ebp], eax
	lea	ecx, DWORD PTR $T252865[ebp]
	mov	DWORD PTR $T252822[ebp], ecx
	lea	edx, DWORD PTR $T252847[ebp]
	mov	DWORD PTR $T252829[ebp], edx
	push	ecx
	mov	eax, esp
	mov	DWORD PTR $T252881[ebp], esp
	mov	DWORD PTR $T252836[ebp], eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	movzx	edx, BYTE PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@QAE@U?$less@W4MinorCivQuestTypes@@@1@V?$allocator@W4MinorCivQuestTypes@@@1@@Z ; std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0>::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0>
	mov	DWORD PTR tv199[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv173[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv147[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv89[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 510  : 		_Init();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Init

; 511  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE@ABU?$less@W4MinorCivQuestTypes@@@1@ABV?$allocator@W4MinorCivQuestTypes@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_val@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE@ABU?$less@W4MinorCivQuestTypes@@@1@ABV?$allocator@W4MinorCivQuestTypes@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE@ABU?$less@W4MinorCivQuestTypes@@@1@ABV?$allocator@W4MinorCivQuestTypes@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE@ABU?$less@W4MinorCivQuestTypes@@@1@ABV?$allocator@W4MinorCivQuestTypes@@@1@@Z ENDP ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >
PUBLIC	?_Rrotate@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Rrotate
PUBLIC	?_Lrotate@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Lrotate
PUBLIC	?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@PAU342@00ABW4MinorCivQuestTypes@@D@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Buynode
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
EXTRN	??_Elength_error@std@@UAEPAXI@Z:PROC		; std::length_error::`vector deleting destructor'
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_Elength_error@std@@UAEPAXI@Z ; std::length_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Insert@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@ABW4MinorCivQuestTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@ABW4MinorCivQuestTypes@@@Z$0
__ehfuncinfo$?_Insert@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@ABW4MinorCivQuestTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Insert@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@ABW4MinorCivQuestTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@ABW4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
tv277 = -196						; size = 4
_this$ = -192						; size = 4
$T253462 = -188						; size = 4
$T253374 = -172						; size = 4
$T253289 = -160						; size = 4
$T253273 = -156						; size = 4
$T253254 = -152						; size = 4
$T253250 = -148						; size = 4
$T253165 = -136						; size = 4
$T253064 = -120						; size = 4
$T253042 = -116						; size = 4
$T253035 = -112						; size = 4
$T253031 = -108						; size = 4
$T252992 = -104						; size = 4
$T252983 = -100						; size = 4
$T252963 = -96						; size = 4
__Count$252945 = -92					; size = 4
$T252929 = -88						; size = 28
$T252928 = -60						; size = 40
__Pnode$230078 = -20					; size = 4
__Newnode$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@ABW4MinorCivQuestTypes@@@Z PROC ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Insert, COMDAT
; _this$ = ecx

; 1187 : 		{	// add node with value next to _Wherenode, to left if _Addnode

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@ABW4MinorCivQuestTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 184				; 000000b8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1188 : 		if (max_size() - 1 <= _Mysize)

	mov	DWORD PTR __Count$252945[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$252945[ebp], 0
	jbe	SHORT $LN25@Insert
	mov	eax, DWORD PTR __Count$252945[ebp]
	mov	DWORD PTR tv277[ebp], eax
	jmp	SHORT $LN21@Insert
$LN25@Insert:
	mov	DWORD PTR tv277[ebp], 1
$LN21@Insert:
	mov	ecx, DWORD PTR tv277[ebp]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+8]
	ja	SHORT $LN17@Insert

; 1189 : 			_THROW(length_error, "map/set<T> too long");

	push	OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T252929[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR $T252929[ebp]
	push	eax
	lea	ecx, DWORD PTR $T252928[ebp]
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	mov	DWORD PTR $T252928[ebp], OFFSET ??_7length_error@std@@6B@
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T252928[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T252929[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN17@Insert:

; 1190 : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 1191 : 			_Val, _Red);

	push	0
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@PAU342@00ABW4MinorCivQuestTypes@@D@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Buynode
	mov	DWORD PTR __Newnode$[ebp], eax

; 1192 : 
; 1193 : 		++_Mysize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 1194 : 		if (_Wherenode == _Myhead)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Wherenode$[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jne	SHORT $LN16@Insert

; 1195 : 			{	// first node in tree, just set head values
; 1196 : 			_Root() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [edx+4], eax

; 1197 : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T252963[ebp], edx
	mov	eax, DWORD PTR $T252963[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN15@Insert
$LN16@Insert:

; 1198 : 			}
; 1199 : 		else if (_Addleft)

	movzx	edx, BYTE PTR __Addleft$[ebp]
	test	edx, edx
	je	SHORT $LN52@Insert

; 1200 : 			{	// add to left of _Wherenode
; 1201 : 			_Left(_Wherenode) = _Newnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1202 : 			if (_Wherenode == _Lmost())

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T252983[ebp], eax
	mov	ecx, DWORD PTR $T252983[ebp]
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN13@Insert

; 1203 : 				_Lmost() = _Newnode;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T252992[ebp], ecx
	mov	edx, DWORD PTR $T252992[ebp]
	mov	eax, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [edx], eax
$LN13@Insert:

; 1204 : 			}
; 1205 : 		else

	jmp	SHORT $LN15@Insert

; 1206 : 			{	// add to right of _Wherenode
; 1207 : 			_Right(_Wherenode) = _Newnode;

$LN52@Insert:
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [ecx+8], edx

; 1208 : 			if (_Wherenode == _Rmost())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN15@Insert

; 1209 : 				_Rmost() = _Newnode;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [ecx+8], edx
$LN15@Insert:

; 1210 : 			}
; 1211 : 
; 1212 : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

	mov	eax, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR __Pnode$230078[ebp], eax
$LN64@Insert:
	mov	ecx, DWORD PTR __Pnode$230078[ebp]
	mov	edx, DWORD PTR [ecx+4]
	movsx	eax, BYTE PTR [edx+16]
	test	eax, eax
	jne	$LN360@Insert

; 1213 : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

	mov	ecx, DWORD PTR __Pnode$230078[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 4
	mov	DWORD PTR $T253031[ebp], edx
	mov	eax, DWORD PTR $T253031[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T253035[ebp], ecx
	mov	edx, DWORD PTR __Pnode$230078[ebp]
	mov	eax, DWORD PTR $T253035[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN216@Insert

; 1214 : 				{	// fixup red-red in left subtree
; 1215 : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

	mov	edx, DWORD PTR __Pnode$230078[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 4
	mov	DWORD PTR $T253042[ebp], eax
	mov	ecx, DWORD PTR $T253042[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR __Wherenode$[ebp], eax

; 1216 : 				if (_Color(_Wherenode) == _Red)

	mov	ecx, DWORD PTR __Wherenode$[ebp]
	movsx	edx, BYTE PTR [ecx+16]
	test	edx, edx
	jne	SHORT $LN100@Insert

; 1217 : 					{	// parent has two red children, blacken both
; 1218 : 					_Color(_Parent(_Pnode)) = _Black;

	mov	eax, DWORD PTR __Pnode$230078[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	BYTE PTR [ecx+16], 1

; 1219 : 					_Color(_Wherenode) = _Black;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	BYTE PTR [edx+16], 1

; 1220 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	eax, DWORD PTR __Pnode$230078[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 4
	mov	DWORD PTR $T253064[ebp], ecx
	mov	edx, DWORD PTR $T253064[ebp]
	mov	eax, DWORD PTR [edx]
	mov	BYTE PTR [eax+16], 0

; 1221 : 					_Pnode = _Parent(_Parent(_Pnode));

	mov	ecx, DWORD PTR __Pnode$230078[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Pnode$230078[ebp], eax

; 1222 : 					}
; 1223 : 				else

	jmp	SHORT $LN6@Insert

; 1224 : 					{	// parent has red and black children
; 1225 : 					if (_Pnode == _Right(_Parent(_Pnode)))

$LN100@Insert:
	mov	ecx, DWORD PTR __Pnode$230078[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR __Pnode$230078[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN155@Insert

; 1226 : 						{	// rotate right child to left
; 1227 : 						_Pnode = _Parent(_Pnode);

	mov	ecx, DWORD PTR __Pnode$230078[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Pnode$230078[ebp], edx

; 1228 : 						_Lrotate(_Pnode);

	mov	eax, DWORD PTR __Pnode$230078[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Lrotate

; 1229 : 						}
; 1230 : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

$LN155@Insert:
	mov	ecx, DWORD PTR __Pnode$230078[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	BYTE PTR [edx+16], 1

; 1231 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	eax, DWORD PTR __Pnode$230078[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 4
	mov	DWORD PTR $T253165[ebp], ecx
	mov	edx, DWORD PTR $T253165[ebp]
	mov	eax, DWORD PTR [edx]
	mov	BYTE PTR [eax+16], 0

; 1232 : 					_Rrotate(_Parent(_Parent(_Pnode)));

	mov	ecx, DWORD PTR __Pnode$230078[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Rrotate
$LN6@Insert:

; 1233 : 					}
; 1234 : 				}
; 1235 : 			else

	jmp	$LN4@Insert

; 1236 : 				{	// fixup red-red in right subtree
; 1237 : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));

$LN216@Insert:
	mov	ecx, DWORD PTR __Pnode$230078[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 4
	mov	DWORD PTR $T253250[ebp], edx
	mov	eax, DWORD PTR $T253250[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T253254[ebp], ecx
	mov	edx, DWORD PTR $T253254[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Wherenode$[ebp], eax

; 1238 : 				if (_Color(_Wherenode) == _Red)

	mov	ecx, DWORD PTR __Wherenode$[ebp]
	movsx	edx, BYTE PTR [ecx+16]
	test	edx, edx
	jne	SHORT $LN240@Insert

; 1239 : 					{	// parent has two red children, blacken both
; 1240 : 					_Color(_Parent(_Pnode)) = _Black;

	mov	eax, DWORD PTR __Pnode$230078[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	BYTE PTR [ecx+16], 1

; 1241 : 					_Color(_Wherenode) = _Black;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	BYTE PTR [edx+16], 1

; 1242 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	eax, DWORD PTR __Pnode$230078[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 4
	mov	DWORD PTR $T253273[ebp], ecx
	mov	edx, DWORD PTR $T253273[ebp]
	mov	eax, DWORD PTR [edx]
	mov	BYTE PTR [eax+16], 0

; 1243 : 					_Pnode = _Parent(_Parent(_Pnode));

	mov	ecx, DWORD PTR __Pnode$230078[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Pnode$230078[ebp], eax

; 1244 : 					}
; 1245 : 				else

	jmp	SHORT $LN4@Insert

; 1246 : 					{	// parent has red and black children
; 1247 : 					if (_Pnode == _Left(_Parent(_Pnode)))

$LN240@Insert:
	mov	ecx, DWORD PTR __Pnode$230078[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T253289[ebp], edx
	mov	eax, DWORD PTR $T253289[ebp]
	mov	ecx, DWORD PTR __Pnode$230078[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN297@Insert

; 1248 : 						{	// rotate left child to right
; 1249 : 						_Pnode = _Parent(_Pnode);

	mov	edx, DWORD PTR __Pnode$230078[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Pnode$230078[ebp], eax

; 1250 : 						_Rrotate(_Pnode);

	mov	ecx, DWORD PTR __Pnode$230078[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Rrotate

; 1251 : 						}
; 1252 : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

$LN297@Insert:
	mov	edx, DWORD PTR __Pnode$230078[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	BYTE PTR [eax+16], 1

; 1253 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	ecx, DWORD PTR __Pnode$230078[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 4
	mov	DWORD PTR $T253374[ebp], edx
	mov	eax, DWORD PTR $T253374[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+16], 0

; 1254 : 					_Lrotate(_Parent(_Parent(_Pnode)));

	mov	edx, DWORD PTR __Pnode$230078[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Lrotate
$LN4@Insert:

; 1255 : 					}
; 1256 : 				}

	jmp	$LN64@Insert

; 1257 : 
; 1258 : 		_Color(_Root()) = _Black;	// root is always black

$LN360@Insert:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 4
	mov	DWORD PTR $T253462[ebp], eax
	mov	ecx, DWORD PTR $T253462[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	BYTE PTR [edx+16], 1

; 1259 : 		return (_TREE_ITERATOR(_Newnode));

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN19@Insert:

; 1260 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Insert@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@ABW4MinorCivQuestTypes@@@Z$0:
	lea	ecx, DWORD PTR $T252929[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?_Insert@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@ABW4MinorCivQuestTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-188]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Insert@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@ABW4MinorCivQuestTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@ABW4MinorCivQuestTypes@@@Z ENDP ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Insert
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 26   : 		{	// construct from message string

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR __Message$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z

; 27   : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
; Function compile flags: /Odtp
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1length_error@std@@UAE@XZ PROC			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 109  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@

; 110  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC			; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	edx, DWORD PTR ___flags$[ebp]
	and	edx, 1
	je	SHORT $LN1@scalar@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::erase
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?_Tidy@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -92						; size = 4
$T253747 = -88						; size = 4
$T253713 = -84						; size = 4
$T253546 = -32						; size = 4
$T253533 = -28						; size = 4
$T253521 = -24						; size = 4
$T253511 = -20						; size = 4
$T253510 = -16						; size = 4
$T253509 = -12						; size = 4
$T253508 = -8						; size = 4
$T253507 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1420 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	mov	DWORD PTR _this$[ebp], ecx

; 1421 : 		erase(begin(), end());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T253521[ebp], ecx
	mov	edx, DWORD PTR $T253521[ebp]
	mov	DWORD PTR $T253508[ebp], edx
	mov	eax, DWORD PTR $T253508[ebp]
	mov	DWORD PTR $T253507[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T253533[ebp], edx
	mov	eax, DWORD PTR $T253533[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T253546[ebp], ecx
	mov	edx, DWORD PTR $T253546[ebp]
	mov	DWORD PTR $T253510[ebp], edx
	mov	eax, DWORD PTR $T253510[ebp]
	mov	DWORD PTR $T253509[ebp], eax
	mov	ecx, DWORD PTR $T253507[ebp]
	push	ecx
	mov	edx, DWORD PTR $T253509[ebp]
	push	edx
	lea	eax, DWORD PTR $T253511[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::erase

; 1422 : 		this->_Alptr.destroy(&_Left(_Myhead));

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T253713[ebp], edx

; 1423 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1424 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1425 : 		this->_Alnod.deallocate(_Myhead, 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T253747[ebp], ecx
	mov	edx, DWORD PTR $T253747[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1426 : 		_Myhead = 0, _Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0

; 1427 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Tidy
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ$0
__ehfuncinfo$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T253760 = -20						; size = 4
_pRet$253756 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ PROC ; FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>::FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 64			; 00000040H

; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T253760[ebp], edx
	cmp	DWORD PTR $T253760[ebp], 64		; 00000040H
	jbe	SHORT $LN7@FStaticVec@23
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	eax, DWORD PTR $T253760[ebp]
	shl	eax, 3
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$253756[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T253760[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN8@FStaticVec@23
$LN7@FStaticVec@23:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pRet$253756[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 64			; 00000040H
$LN8@FStaticVec@23:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pRet$253756[ebp]
	mov	DWORD PTR [edx], eax

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$00@@QAE@XZ ; BaseVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,1>
__ehhandler$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ ENDP ; FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>::FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>
PUBLIC	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>::GrowSize
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@Z
_TEXT	SEGMENT
tv157 = -64						; size = 4
tv149 = -60						; size = 4
_this$ = -56						; size = 4
$T253770 = -8						; size = 4
$T253769 = -4						; size = 4
_element$ = 8						; size = 4
?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@Z PROC ; FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	mov	DWORD PTR _this$[ebp], ecx

; 677  : 		m_bIsResized = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+524], 0

; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN39@push_back@11

; 679  : 			GrowSize(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>::GrowSize

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

$LN39@push_back@11:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR $T253770[ebp], ecx
	cmp	DWORD PTR $T253770[ebp], 0
	je	SHORT $LN4@push_back@11
	mov	edx, DWORD PTR $T253770[ebp]
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T253770[ebp]
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	edx, DWORD PTR $T253770[ebp]
	mov	DWORD PTR tv149[ebp], edx
	jmp	SHORT $LN5@push_back@11
$LN4@push_back@11:
	mov	DWORD PTR tv149[ebp], 0
$LN5@push_back@11:
	mov	eax, DWORD PTR tv149[ebp]
	mov	DWORD PTR $T253769[ebp], eax

; 681  : 		return m_uiCurrSize++;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv157[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR tv157[ebp]

; 682  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@Z ENDP ; FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>::push_back
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$BaseVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$00@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$BaseVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$00@@QAE@XZ PROC ; BaseVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,1>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$BaseVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$00@@QAE@XZ ENDP ; BaseVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,1>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Copy@?$BaseVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$00@@IAEXABV1@@Z
_TEXT	SEGMENT
tv91 = -24						; size = 4
_this$ = -20						; size = 4
$T253837 = -16						; size = 4
$T253827 = -12						; size = 4
$T253826 = -8						; size = 4
_i$230161 = -4						; size = 4
_RHS$ = 8						; size = 4
?Copy@?$BaseVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$00@@IAEXABV1@@Z PROC ; BaseVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,1>::Copy, COMDAT
; _this$ = ecx

; 229  : 	void Copy(const THIS_TYPE& RHS){

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 230  : 		m_uiCurrSize = RHS.m_uiCurrSize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _RHS$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 231  : 		if( bPODType ){

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN5@Copy@2

; 232  : 			memcpy( (void*)m_pData, (void*)RHS.m_pData, sizeof(T)*RHS.m_uiCurrSize);

	mov	ecx, DWORD PTR _RHS$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	shl	edx, 3
	push	edx
	mov	eax, DWORD PTR _RHS$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 233  : 		}else{

	jmp	SHORT $LN6@Copy@2
$LN5@Copy@2:

; 234  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i){

	mov	DWORD PTR _i$230161[ebp], 0
	jmp	SHORT $LN3@Copy@2
$LN2@Copy@2:
	mov	ecx, DWORD PTR _i$230161[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$230161[ebp], ecx
$LN3@Copy@2:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _i$230161[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jae	SHORT $LN6@Copy@2

; 235  : 				new( (void*)&m_pData[i] )T( RHS.m_pData[i] );

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _i$230161[ebp]
	lea	ecx, DWORD PTR [edx+eax*8]
	mov	DWORD PTR $T253827[ebp], ecx
	cmp	DWORD PTR $T253827[ebp], 0
	je	SHORT $LN8@Copy@2
	mov	edx, DWORD PTR _RHS$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _i$230161[ebp]
	lea	edx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR $T253837[ebp], edx
	mov	eax, DWORD PTR $T253827[ebp]
	mov	ecx, DWORD PTR $T253837[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR $T253827[ebp]
	mov	ecx, DWORD PTR $T253837[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR $T253827[ebp]
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN9@Copy@2
$LN8@Copy@2:
	mov	DWORD PTR tv91[ebp], 0
$LN9@Copy@2:
	mov	ecx, DWORD PTR tv91[ebp]
	mov	DWORD PTR $T253826[ebp], ecx

; 236  : 			}

	jmp	SHORT $LN2@Copy@2
$LN6@Copy@2:

; 237  : 		}
; 238  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?Copy@?$BaseVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$00@@IAEXABV1@@Z ENDP ; BaseVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,1>::Copy
_TEXT	ENDS
PUBLIC	??1?$BaseVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$00@@QAE@XZ ; BaseVector<CvWeightedVector<int,64,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<int,64,1>::WeightedElement,1>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ$0
__ehfuncinfo$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T253850 = -20						; size = 4
_pRet$253846 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ PROC ; FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>::FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 64			; 00000040H

; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T253850[ebp], edx
	cmp	DWORD PTR $T253850[ebp], 64		; 00000040H
	jbe	SHORT $LN7@FStaticVec@24
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	eax, DWORD PTR $T253850[ebp]
	shl	eax, 3
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$253846[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T253850[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN8@FStaticVec@24
$LN7@FStaticVec@24:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pRet$253846[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 64			; 00000040H
$LN8@FStaticVec@24:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pRet$253846[ebp]
	mov	DWORD PTR [edx], eax

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$00@@QAE@XZ ; BaseVector<CvWeightedVector<int,64,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<int,64,1>::WeightedElement,1>
__ehhandler$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ ENDP ; FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>::FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ$0
__ehfuncinfo$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T253881 = -24						; size = 4
$T253880 = -20						; size = 4
_i$253875 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ PROC ; FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>::~FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>, COMDAT
; _this$ = ecx

; 617  : 	~FStaticVector(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T253881[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T253880[ebp], eax
	xor	ecx, ecx
	je	SHORT $LN5@FStaticVec@25
	xor	edx, edx
	je	SHORT $LN5@FStaticVec@25
	mov	DWORD PTR _i$253875[ebp], 0
	jmp	SHORT $LN10@FStaticVec@25
$LN9@FStaticVec@25:
	mov	eax, DWORD PTR _i$253875[ebp]
	add	eax, 1
	mov	DWORD PTR _i$253875[ebp], eax
$LN10@FStaticVec@25:
	mov	ecx, DWORD PTR _i$253875[ebp]
	cmp	ecx, DWORD PTR $T253881[ebp]
	jae	SHORT $LN5@FStaticVec@25
	jmp	SHORT $LN9@FStaticVec@25
$LN5@FStaticVec@25:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	cmp	DWORD PTR $T253880[ebp], edx
	je	SHORT $LN1@FStaticVec@25
	mov	eax, DWORD PTR $T253880[ebp]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN1@FStaticVec@25:

; 619  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$00@@QAE@XZ ; BaseVector<CvWeightedVector<int,64,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<int,64,1>::WeightedElement,1>
__ehhandler$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAE@XZ ENDP ; FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>::~FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>
PUBLIC	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>::GrowSize
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@Z
_TEXT	SEGMENT
tv157 = -64						; size = 4
tv149 = -60						; size = 4
_this$ = -56						; size = 4
$T253894 = -8						; size = 4
$T253893 = -4						; size = 4
_element$ = 8						; size = 4
?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@Z PROC ; FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	mov	DWORD PTR _this$[ebp], ecx

; 677  : 		m_bIsResized = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+524], 0

; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN39@push_back@12

; 679  : 			GrowSize(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>::GrowSize

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

$LN39@push_back@12:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR $T253894[ebp], ecx
	cmp	DWORD PTR $T253894[ebp], 0
	je	SHORT $LN4@push_back@12
	mov	edx, DWORD PTR $T253894[ebp]
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T253894[ebp]
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	edx, DWORD PTR $T253894[ebp]
	mov	DWORD PTR tv149[ebp], edx
	jmp	SHORT $LN5@push_back@12
$LN4@push_back@12:
	mov	DWORD PTR tv149[ebp], 0
$LN5@push_back@12:
	mov	eax, DWORD PTR tv149[ebp]
	mov	DWORD PTR $T253893[ebp], eax

; 681  : 		return m_uiCurrSize++;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv157[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR tv157[ebp]

; 682  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@Z ENDP ; FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>::push_back
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GrowSize@?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@IAEXI@Z
_TEXT	SEGMENT
tv178 = -44						; size = 4
_this$ = -40						; size = 4
$T253982 = -36						; size = 4
$T253981 = -32						; size = 4
_i$253974 = -28						; size = 4
$T253957 = -24						; size = 4
_pRet$253953 = -20					; size = 4
$T253948 = -16						; size = 4
_i$230210 = -12						; size = 4
_uiNewSize$230202 = -8					; size = 4
_pTemp$ = -4						; size = 4
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@IAEXI@Z PROC ; FStaticVector<enum BuildingTypes,50,1,297,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN8@GrowSize@6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1
$LN8@GrowSize@6:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jb	SHORT $LN7@GrowSize@6

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shl	edx, 1
	mov	DWORD PTR _uiNewSize$230202[ebp], edx

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _uiNewSize$230202[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN6@GrowSize@6

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	mov	DWORD PTR [edx+8], eax

; 754  : 				break;

	jmp	SHORT $LN7@GrowSize@6
$LN6@GrowSize@6:

; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _uiNewSize$230202[ebp]
	mov	DWORD PTR [ecx+8], edx

; 759  : 		}

	jmp	SHORT $LN8@GrowSize@6
$LN7@GrowSize@6:

; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T253957[ebp], ecx
	cmp	DWORD PTR $T253957[ebp], 50		; 00000032H
	jbe	SHORT $LN15@GrowSize@6
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	edx, DWORD PTR $T253957[ebp]
	shl	edx, 2
	push	edx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$253953[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T253957[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN16@GrowSize@6
$LN15@GrowSize@6:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _pRet$253953[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 50			; 00000032H
$LN16@GrowSize@6:
	mov	ecx, DWORD PTR _pRet$253953[ebp]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 762  : 		if( bPODType ){

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@GrowSize@6

; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pTemp$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 764  : 		}else{

	jmp	SHORT $LN4@GrowSize@6
$LN5@GrowSize@6:

; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	mov	DWORD PTR _i$230210[ebp], 0
	jmp	SHORT $LN3@GrowSize@6
$LN2@GrowSize@6:
	mov	edx, DWORD PTR _i$230210[ebp]
	add	edx, 1
	mov	DWORD PTR _i$230210[ebp], edx
$LN3@GrowSize@6:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$230210[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN4@GrowSize@6

; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);

	mov	edx, DWORD PTR _i$230210[ebp]
	mov	eax, DWORD PTR _pTemp$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T253948[ebp], ecx
	cmp	DWORD PTR $T253948[ebp], 0
	je	SHORT $LN12@GrowSize@6
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T253948[ebp]
	mov	edx, DWORD PTR _i$230210[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR $T253948[ebp]
	mov	DWORD PTR tv178[ebp], ecx
	jmp	SHORT $LN13@GrowSize@6
$LN12@GrowSize@6:
	mov	DWORD PTR tv178[ebp], 0
$LN13@GrowSize@6:
	jmp	SHORT $LN2@GrowSize@6
$LN4@GrowSize@6:

; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T253982[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T253981[ebp], edx
	xor	eax, eax
	je	SHORT $LN21@GrowSize@6
	xor	ecx, ecx
	je	SHORT $LN21@GrowSize@6
	mov	DWORD PTR _i$253974[ebp], 0
	jmp	SHORT $LN26@GrowSize@6
$LN25@GrowSize@6:
	mov	edx, DWORD PTR _i$253974[ebp]
	add	edx, 1
	mov	DWORD PTR _i$253974[ebp], edx
$LN26@GrowSize@6:
	mov	eax, DWORD PTR _i$253974[ebp]
	cmp	eax, DWORD PTR $T253982[ebp]
	jae	SHORT $LN21@GrowSize@6
	jmp	SHORT $LN25@GrowSize@6
$LN21@GrowSize@6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	cmp	DWORD PTR $T253981[ebp], ecx
	je	SHORT $LN22@GrowSize@6
	mov	edx, DWORD PTR $T253981[ebp]
	push	edx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN22@GrowSize@6:

; 769  : 		m_pData = pTemp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR [eax], ecx

; 770  : 
; 771  : 		m_bIsResized = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+212], 1

; 772  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?GrowSize@?$FStaticVector@W4BuildingTypes@@$0DC@$00$0BCJ@$0A@@@IAEXI@Z ENDP ; FStaticVector<enum BuildingTypes,50,1,297,0>::GrowSize
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GrowSize@?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@IAEXI@Z
_TEXT	SEGMENT
tv178 = -44						; size = 4
_this$ = -40						; size = 4
$T254019 = -36						; size = 4
$T254018 = -32						; size = 4
_i$254011 = -28						; size = 4
$T253994 = -24						; size = 4
_pRet$253991 = -20					; size = 4
$T253985 = -16						; size = 4
_i$230246 = -12						; size = 4
_uiNewSize$230238 = -8					; size = 4
_pTemp$ = -4						; size = 4
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@IAEXI@Z PROC ; FStaticVector<enum UnitTypes,8,1,297,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN8@GrowSize@7
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1
$LN8@GrowSize@7:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jb	SHORT $LN7@GrowSize@7

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shl	edx, 1
	mov	DWORD PTR _uiNewSize$230238[ebp], edx

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _uiNewSize$230238[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN6@GrowSize@7

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	mov	DWORD PTR [edx+8], eax

; 754  : 				break;

	jmp	SHORT $LN7@GrowSize@7
$LN6@GrowSize@7:

; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _uiNewSize$230238[ebp]
	mov	DWORD PTR [ecx+8], edx

; 759  : 		}

	jmp	SHORT $LN8@GrowSize@7
$LN7@GrowSize@7:

; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T253994[ebp], ecx
	cmp	DWORD PTR $T253994[ebp], 8
	jbe	SHORT $LN15@GrowSize@7
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	edx, DWORD PTR $T253994[ebp]
	shl	edx, 2
	push	edx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$253991[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T253994[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN16@GrowSize@7
$LN15@GrowSize@7:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _pRet$253991[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 8
$LN16@GrowSize@7:
	mov	ecx, DWORD PTR _pRet$253991[ebp]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 762  : 		if( bPODType ){

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@GrowSize@7

; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pTemp$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 764  : 		}else{

	jmp	SHORT $LN4@GrowSize@7
$LN5@GrowSize@7:

; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	mov	DWORD PTR _i$230246[ebp], 0
	jmp	SHORT $LN3@GrowSize@7
$LN2@GrowSize@7:
	mov	edx, DWORD PTR _i$230246[ebp]
	add	edx, 1
	mov	DWORD PTR _i$230246[ebp], edx
$LN3@GrowSize@7:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$230246[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN4@GrowSize@7

; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);

	mov	edx, DWORD PTR _i$230246[ebp]
	mov	eax, DWORD PTR _pTemp$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T253985[ebp], ecx
	cmp	DWORD PTR $T253985[ebp], 0
	je	SHORT $LN12@GrowSize@7
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T253985[ebp]
	mov	edx, DWORD PTR _i$230246[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR $T253985[ebp]
	mov	DWORD PTR tv178[ebp], ecx
	jmp	SHORT $LN13@GrowSize@7
$LN12@GrowSize@7:
	mov	DWORD PTR tv178[ebp], 0
$LN13@GrowSize@7:
	jmp	SHORT $LN2@GrowSize@7
$LN4@GrowSize@7:

; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T254019[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T254018[ebp], edx
	xor	eax, eax
	je	SHORT $LN21@GrowSize@7
	xor	ecx, ecx
	je	SHORT $LN21@GrowSize@7
	mov	DWORD PTR _i$254011[ebp], 0
	jmp	SHORT $LN26@GrowSize@7
$LN25@GrowSize@7:
	mov	edx, DWORD PTR _i$254011[ebp]
	add	edx, 1
	mov	DWORD PTR _i$254011[ebp], edx
$LN26@GrowSize@7:
	mov	eax, DWORD PTR _i$254011[ebp]
	cmp	eax, DWORD PTR $T254019[ebp]
	jae	SHORT $LN21@GrowSize@7
	jmp	SHORT $LN25@GrowSize@7
$LN21@GrowSize@7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	cmp	DWORD PTR $T254018[ebp], ecx
	je	SHORT $LN22@GrowSize@7
	mov	edx, DWORD PTR $T254018[ebp]
	push	edx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN22@GrowSize@7:

; 769  : 		m_pData = pTemp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR [eax], ecx

; 770  : 
; 771  : 		m_bIsResized = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+44], 1

; 772  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?GrowSize@?$FStaticVector@W4UnitTypes@@$07$00$0BCJ@$0A@@@IAEXI@Z ENDP ; FStaticVector<enum UnitTypes,8,1,297,0>::GrowSize
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$BaseVector@W4UnitTypes@@$00@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$BaseVector@W4UnitTypes@@$00@@QAE@XZ PROC		; BaseVector<enum UnitTypes,1>::~BaseVector<enum UnitTypes,1>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$BaseVector@W4UnitTypes@@$00@@QAE@XZ ENDP		; BaseVector<enum UnitTypes,1>::~BaseVector<enum UnitTypes,1>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GrowSize@?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@IAEXI@Z
_TEXT	SEGMENT
tv178 = -44						; size = 4
_this$ = -40						; size = 4
$T254058 = -36						; size = 4
$T254057 = -32						; size = 4
_i$254050 = -28						; size = 4
$T254033 = -24						; size = 4
_pRet$254030 = -20					; size = 4
$T254024 = -16						; size = 4
_i$230286 = -12						; size = 4
_uiNewSize$230278 = -8					; size = 4
_pTemp$ = -4						; size = 4
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@IAEXI@Z PROC ; FStaticVector<enum PlayerTypes,63,1,297,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN8@GrowSize@8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1
$LN8@GrowSize@8:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jb	SHORT $LN7@GrowSize@8

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shl	edx, 1
	mov	DWORD PTR _uiNewSize$230278[ebp], edx

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _uiNewSize$230278[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN6@GrowSize@8

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	mov	DWORD PTR [edx+8], eax

; 754  : 				break;

	jmp	SHORT $LN7@GrowSize@8
$LN6@GrowSize@8:

; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _uiNewSize$230278[ebp]
	mov	DWORD PTR [ecx+8], edx

; 759  : 		}

	jmp	SHORT $LN8@GrowSize@8
$LN7@GrowSize@8:

; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T254033[ebp], ecx
	cmp	DWORD PTR $T254033[ebp], 63		; 0000003fH
	jbe	SHORT $LN15@GrowSize@8
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	edx, DWORD PTR $T254033[ebp]
	shl	edx, 2
	push	edx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$254030[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T254033[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN16@GrowSize@8
$LN15@GrowSize@8:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _pRet$254030[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 63			; 0000003fH
$LN16@GrowSize@8:
	mov	ecx, DWORD PTR _pRet$254030[ebp]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 762  : 		if( bPODType ){

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@GrowSize@8

; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pTemp$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 764  : 		}else{

	jmp	SHORT $LN4@GrowSize@8
$LN5@GrowSize@8:

; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	mov	DWORD PTR _i$230286[ebp], 0
	jmp	SHORT $LN3@GrowSize@8
$LN2@GrowSize@8:
	mov	edx, DWORD PTR _i$230286[ebp]
	add	edx, 1
	mov	DWORD PTR _i$230286[ebp], edx
$LN3@GrowSize@8:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$230286[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN4@GrowSize@8

; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);

	mov	edx, DWORD PTR _i$230286[ebp]
	mov	eax, DWORD PTR _pTemp$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T254024[ebp], ecx
	cmp	DWORD PTR $T254024[ebp], 0
	je	SHORT $LN12@GrowSize@8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T254024[ebp]
	mov	edx, DWORD PTR _i$230286[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR $T254024[ebp]
	mov	DWORD PTR tv178[ebp], ecx
	jmp	SHORT $LN13@GrowSize@8
$LN12@GrowSize@8:
	mov	DWORD PTR tv178[ebp], 0
$LN13@GrowSize@8:
	jmp	SHORT $LN2@GrowSize@8
$LN4@GrowSize@8:

; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T254058[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T254057[ebp], edx
	xor	eax, eax
	je	SHORT $LN21@GrowSize@8
	xor	ecx, ecx
	je	SHORT $LN21@GrowSize@8
	mov	DWORD PTR _i$254050[ebp], 0
	jmp	SHORT $LN26@GrowSize@8
$LN25@GrowSize@8:
	mov	edx, DWORD PTR _i$254050[ebp]
	add	edx, 1
	mov	DWORD PTR _i$254050[ebp], edx
$LN26@GrowSize@8:
	mov	eax, DWORD PTR _i$254050[ebp]
	cmp	eax, DWORD PTR $T254058[ebp]
	jae	SHORT $LN21@GrowSize@8
	jmp	SHORT $LN25@GrowSize@8
$LN21@GrowSize@8:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	cmp	DWORD PTR $T254057[ebp], ecx
	je	SHORT $LN22@GrowSize@8
	mov	edx, DWORD PTR $T254057[ebp]
	push	edx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN22@GrowSize@8:

; 769  : 		m_pData = pTemp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR [eax], ecx

; 770  : 
; 771  : 		m_bIsResized = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+264], 1

; 772  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?GrowSize@?$FStaticVector@W4PlayerTypes@@$0DP@$00$0BCJ@$0A@@@IAEXI@Z ENDP ; FStaticVector<enum PlayerTypes,63,1,297,0>::GrowSize
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GrowSize@?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z
_TEXT	SEGMENT
tv178 = -44						; size = 4
_this$ = -40						; size = 4
$T254095 = -36						; size = 4
$T254094 = -32						; size = 4
_i$254087 = -28						; size = 4
$T254070 = -24						; size = 4
_pRet$254067 = -20					; size = 4
$T254061 = -16						; size = 4
_i$230322 = -12						; size = 4
_uiNewSize$230314 = -8					; size = 4
_pTemp$ = -4						; size = 4
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z PROC ; FStaticVector<CvCity *,16,0,297,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN8@GrowSize@9
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1
$LN8@GrowSize@9:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jb	SHORT $LN7@GrowSize@9

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shl	edx, 1
	mov	DWORD PTR _uiNewSize$230314[ebp], edx

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _uiNewSize$230314[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN6@GrowSize@9

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	mov	DWORD PTR [edx+8], eax

; 754  : 				break;

	jmp	SHORT $LN7@GrowSize@9
$LN6@GrowSize@9:

; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _uiNewSize$230314[ebp]
	mov	DWORD PTR [ecx+8], edx

; 759  : 		}

	jmp	SHORT $LN8@GrowSize@9
$LN7@GrowSize@9:

; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T254070[ebp], ecx
	cmp	DWORD PTR $T254070[ebp], 16		; 00000010H
	jbe	SHORT $LN15@GrowSize@9
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	edx, DWORD PTR $T254070[ebp]
	shl	edx, 2
	push	edx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$254067[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T254070[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN16@GrowSize@9
$LN15@GrowSize@9:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _pRet$254067[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H
$LN16@GrowSize@9:
	mov	ecx, DWORD PTR _pRet$254067[ebp]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 762  : 		if( bPODType ){

	xor	edx, edx
	je	SHORT $LN5@GrowSize@9

; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pTemp$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 764  : 		}else{

	jmp	SHORT $LN4@GrowSize@9
$LN5@GrowSize@9:

; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	mov	DWORD PTR _i$230322[ebp], 0
	jmp	SHORT $LN3@GrowSize@9
$LN2@GrowSize@9:
	mov	edx, DWORD PTR _i$230322[ebp]
	add	edx, 1
	mov	DWORD PTR _i$230322[ebp], edx
$LN3@GrowSize@9:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$230322[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN4@GrowSize@9

; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);

	mov	edx, DWORD PTR _i$230322[ebp]
	mov	eax, DWORD PTR _pTemp$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T254061[ebp], ecx
	cmp	DWORD PTR $T254061[ebp], 0
	je	SHORT $LN12@GrowSize@9
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T254061[ebp]
	mov	edx, DWORD PTR _i$230322[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR $T254061[ebp]
	mov	DWORD PTR tv178[ebp], ecx
	jmp	SHORT $LN13@GrowSize@9
$LN12@GrowSize@9:
	mov	DWORD PTR tv178[ebp], 0
$LN13@GrowSize@9:
	jmp	SHORT $LN2@GrowSize@9
$LN4@GrowSize@9:

; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T254095[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T254094[ebp], edx
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN21@GrowSize@9
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN21@GrowSize@9
	mov	DWORD PTR _i$254087[ebp], 0
	jmp	SHORT $LN26@GrowSize@9
$LN25@GrowSize@9:
	mov	edx, DWORD PTR _i$254087[ebp]
	add	edx, 1
	mov	DWORD PTR _i$254087[ebp], edx
$LN26@GrowSize@9:
	mov	eax, DWORD PTR _i$254087[ebp]
	cmp	eax, DWORD PTR $T254095[ebp]
	jae	SHORT $LN21@GrowSize@9
	jmp	SHORT $LN25@GrowSize@9
$LN21@GrowSize@9:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	cmp	DWORD PTR $T254094[ebp], ecx
	je	SHORT $LN22@GrowSize@9
	mov	edx, DWORD PTR $T254094[ebp]
	push	edx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN22@GrowSize@9:

; 769  : 		m_pData = pTemp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR [eax], ecx

; 770  : 
; 771  : 		m_bIsResized = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+76], 1

; 772  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?GrowSize@?$FStaticVector@PAVCvCity@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z ENDP ; FStaticVector<CvCity *,16,0,297,0>::GrowSize
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$BaseVector@PAVCvCity@@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$BaseVector@PAVCvCity@@$0A@@@QAE@XZ PROC		; BaseVector<CvCity *,0>::~BaseVector<CvCity *,0>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$BaseVector@PAVCvCity@@$0A@@@QAE@XZ ENDP		; BaseVector<CvCity *,0>::~BaseVector<CvCity *,0>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvweightedvector.h
_TEXT	ENDS
;	COMDAT ?GetTotalWeight@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@QAEHXZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T254110 = -24						; size = 4
$T254103 = -20						; size = 4
_elem$230355 = -16					; size = 8
_i$230351 = -8						; size = 4
_rtnValue$ = -4						; size = 4
?GetTotalWeight@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@QAEHXZ PROC ; CvWeightedVector<enum PlayerTypes,22,1>::GetTotalWeight, COMDAT
; _this$ = ecx

; 89   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 90   : 		int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 91   : 
; 92   : 		for (unsigned int i = 0; i < m_pItems.size(); i++)

	mov	DWORD PTR _i$230351[ebp], 0
	jmp	SHORT $LN3@GetTotalWe
$LN2@GetTotalWe:
	mov	eax, DWORD PTR _i$230351[ebp]
	add	eax, 1
	mov	DWORD PTR _i$230351[ebp], eax
$LN3@GetTotalWe:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T254103[ebp], edx
	mov	eax, DWORD PTR _i$230351[ebp]
	cmp	eax, DWORD PTR $T254103[ebp]
	jae	SHORT $LN1@GetTotalWe

; 93   : 		{
; 94   : 			WeightedElement elem = m_pItems[i];

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _i$230351[ebp]
	lea	ecx, DWORD PTR [edx+eax*8]
	mov	DWORD PTR $T254110[ebp], ecx
	mov	edx, DWORD PTR $T254110[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _elem$230355[ebp], eax
	mov	ecx, DWORD PTR $T254110[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _elem$230355[ebp+4], edx

; 95   : 			rtnValue += elem.m_iWeight;

	mov	eax, DWORD PTR _rtnValue$[ebp]
	add	eax, DWORD PTR _elem$230355[ebp+4]
	mov	DWORD PTR _rtnValue$[ebp], eax

; 96   : 		}

	jmp	SHORT $LN2@GetTotalWe
$LN1@GetTotalWe:

; 97   : 
; 98   : 		return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 99   : 	};

	mov	esp, ebp
	pop	ebp
	ret	0
?GetTotalWeight@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@QAEHXZ ENDP ; CvWeightedVector<enum PlayerTypes,22,1>::GetTotalWeight
_TEXT	ENDS
PUBLIC	??1?$BaseVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$00@@QAE@XZ ; BaseVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,1>
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ$0
__ehfuncinfo$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T254123 = -20						; size = 4
_pRet$254120 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ PROC ; FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>::FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 22			; 00000016H

; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T254123[ebp], edx
	cmp	DWORD PTR $T254123[ebp], 22		; 00000016H
	jbe	SHORT $LN7@FStaticVec@26
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	eax, DWORD PTR $T254123[ebp]
	shl	eax, 3
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$254120[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T254123[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN8@FStaticVec@26
$LN7@FStaticVec@26:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pRet$254120[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 22			; 00000016H
$LN8@FStaticVec@26:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pRet$254120[ebp]
	mov	DWORD PTR [edx], eax

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$00@@QAE@XZ ; BaseVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,1>
__ehhandler$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ ENDP ; FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>::FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ$0
__ehfuncinfo$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T254154 = -24						; size = 4
$T254153 = -20						; size = 4
_i$254146 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ PROC ; FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>::~FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>, COMDAT
; _this$ = ecx

; 617  : 	~FStaticVector(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T254154[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T254153[ebp], eax
	xor	ecx, ecx
	je	SHORT $LN5@FStaticVec@27
	xor	edx, edx
	je	SHORT $LN5@FStaticVec@27
	mov	DWORD PTR _i$254146[ebp], 0
	jmp	SHORT $LN10@FStaticVec@27
$LN9@FStaticVec@27:
	mov	eax, DWORD PTR _i$254146[ebp]
	add	eax, 1
	mov	DWORD PTR _i$254146[ebp], eax
$LN10@FStaticVec@27:
	mov	ecx, DWORD PTR _i$254146[ebp]
	cmp	ecx, DWORD PTR $T254154[ebp]
	jae	SHORT $LN5@FStaticVec@27
	jmp	SHORT $LN9@FStaticVec@27
$LN5@FStaticVec@27:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	cmp	DWORD PTR $T254153[ebp], edx
	je	SHORT $LN1@FStaticVec@27
	mov	eax, DWORD PTR $T254153[ebp]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN1@FStaticVec@27:

; 619  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$00@@QAE@XZ ; BaseVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,1>
__ehhandler$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAE@XZ ENDP ; FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>::~FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>
PUBLIC	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>::GrowSize
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@Z
_TEXT	SEGMENT
tv157 = -64						; size = 4
tv149 = -60						; size = 4
_this$ = -56						; size = 4
$T254167 = -8						; size = 4
$T254166 = -4						; size = 4
_element$ = 8						; size = 4
?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@Z PROC ; FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	mov	DWORD PTR _this$[ebp], ecx

; 677  : 		m_bIsResized = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+188], 0

; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN39@push_back@13

; 679  : 			GrowSize(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>::GrowSize

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

$LN39@push_back@13:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR $T254167[ebp], ecx
	cmp	DWORD PTR $T254167[ebp], 0
	je	SHORT $LN4@push_back@13
	mov	edx, DWORD PTR $T254167[ebp]
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T254167[ebp]
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	edx, DWORD PTR $T254167[ebp]
	mov	DWORD PTR tv149[ebp], edx
	jmp	SHORT $LN5@push_back@13
$LN4@push_back@13:
	mov	DWORD PTR tv149[ebp], 0
$LN5@push_back@13:
	mov	eax, DWORD PTR tv149[ebp]
	mov	DWORD PTR $T254166[ebp], eax

; 681  : 		return m_uiCurrSize++;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv157[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR tv157[ebp]

; 682  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@Z ENDP ; FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>::push_back
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ$0
__ehfuncinfo$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T254231 = -20						; size = 4
_pRet$254228 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ PROC ; FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>::FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 100			; 00000064H

; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T254231[ebp], edx
	cmp	DWORD PTR $T254231[ebp], 100		; 00000064H
	jbe	SHORT $LN7@FStaticVec@28
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	eax, DWORD PTR $T254231[ebp]
	shl	eax, 3
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$254228[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T254231[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN8@FStaticVec@28
$LN7@FStaticVec@28:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pRet$254228[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 100			; 00000064H
$LN8@FStaticVec@28:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pRet$254228[ebp]
	mov	DWORD PTR [edx], eax

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$00@@QAE@XZ ; BaseVector<CvWeightedVector<int,100,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<int,100,1>::WeightedElement,1>
__ehhandler$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ENDP ; FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>::FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ$0
__ehfuncinfo$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T254262 = -24						; size = 4
$T254261 = -20						; size = 4
_i$254254 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ PROC ; FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>::~FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>, COMDAT
; _this$ = ecx

; 617  : 	~FStaticVector(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T254262[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T254261[ebp], eax
	xor	ecx, ecx
	je	SHORT $LN5@FStaticVec@29
	xor	edx, edx
	je	SHORT $LN5@FStaticVec@29
	mov	DWORD PTR _i$254254[ebp], 0
	jmp	SHORT $LN10@FStaticVec@29
$LN9@FStaticVec@29:
	mov	eax, DWORD PTR _i$254254[ebp]
	add	eax, 1
	mov	DWORD PTR _i$254254[ebp], eax
$LN10@FStaticVec@29:
	mov	ecx, DWORD PTR _i$254254[ebp]
	cmp	ecx, DWORD PTR $T254262[ebp]
	jae	SHORT $LN5@FStaticVec@29
	jmp	SHORT $LN9@FStaticVec@29
$LN5@FStaticVec@29:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	cmp	DWORD PTR $T254261[ebp], edx
	je	SHORT $LN1@FStaticVec@29
	mov	eax, DWORD PTR $T254261[ebp]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN1@FStaticVec@29:

; 619  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$00@@QAE@XZ ; BaseVector<CvWeightedVector<int,100,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<int,100,1>::WeightedElement,1>
__ehhandler$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ENDP ; FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>::~FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>
PUBLIC	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>::GrowSize
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@Z
_TEXT	SEGMENT
tv157 = -64						; size = 4
tv149 = -60						; size = 4
_this$ = -56						; size = 4
$T254275 = -8						; size = 4
$T254274 = -4						; size = 4
_element$ = 8						; size = 4
?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@Z PROC ; FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	mov	DWORD PTR _this$[ebp], ecx

; 677  : 		m_bIsResized = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+812], 0

; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN39@push_back@14

; 679  : 			GrowSize(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>::GrowSize

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

$LN39@push_back@14:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR $T254275[ebp], ecx
	cmp	DWORD PTR $T254275[ebp], 0
	je	SHORT $LN4@push_back@14
	mov	edx, DWORD PTR $T254275[ebp]
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T254275[ebp]
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	edx, DWORD PTR $T254275[ebp]
	mov	DWORD PTR tv149[ebp], edx
	jmp	SHORT $LN5@push_back@14
$LN4@push_back@14:
	mov	DWORD PTR tv149[ebp], 0
$LN5@push_back@14:
	mov	eax, DWORD PTR tv149[ebp]
	mov	DWORD PTR $T254274[ebp], eax

; 681  : 		return m_uiCurrSize++;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv157[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR tv157[ebp]

; 682  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@Z ENDP ; FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>::push_back
_TEXT	ENDS
PUBLIC	??$_Unchecked_move_backward@PAVCvString@@PAV1@@stdext@@YAPAVCvString@@PAV1@00@Z ; stdext::_Unchecked_move_backward<CvString *,CvString *>
PUBLIC	??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<CvString *,CvString *,std::allocator<CvString> >
PUBLIC	??$unchecked_uninitialized_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@stdext@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@std@@@Z ; stdext::unchecked_uninitialized_copy<CvString *,CvString *,std::allocator<CvString> >
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z$16 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z$2
__catchsym$?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z$15 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z$0
__ehfuncinfo$?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z$15
	DD	03H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z$16
__unwindtable$?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z$4
	DD	02H
	DD	00H
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z$5
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z
_TEXT	SEGMENT
tv84 = -460						; size = 4
tv312 = -456						; size = 4
tv298 = -452						; size = 4
tv290 = -448						; size = 4
_this$ = -444						; size = 4
$T255125 = -440						; size = 4
$T255062 = -400						; size = 4
$T255043 = -396						; size = 4
$T255026 = -389						; size = 1
$T255025 = -388						; size = 4
$T255015 = -384						; size = 4
$T255014 = -380						; size = 4
__Cat$255057 = -374					; size = 1
$T255054 = -373						; size = 1
$T255053 = -372						; size = 1
__Cat$255050 = -371					; size = 1
$T255047 = -370						; size = 1
$T255046 = -369						; size = 1
$T254982 = -368						; size = 4
$T254972 = -364						; size = 4
$T254959 = -360						; size = 4
$T254936 = -356						; size = 4
$T254935 = -352						; size = 4
$T254914 = -348						; size = 4
$T254913 = -344						; size = 4
__Cat$254943 = -338					; size = 1
$T254941 = -337						; size = 1
$T254862 = -336						; size = 4
$T254861 = -332						; size = 4
$T254851 = -328						; size = 4
__Cat$254859 = -323					; size = 1
$T254857 = -322						; size = 1
$T254856 = -321						; size = 1
$T254835 = -320						; size = 4
$T254823 = -316						; size = 4
$T254813 = -309						; size = 1
$T254812 = -308						; size = 4
__Cat$254830 = -303					; size = 1
$T254828 = -302						; size = 1
$T254827 = -301						; size = 1
$T254796 = -300						; size = 4
$T254795 = -296						; size = 4
$T254791 = -292						; size = 4
$T254790 = -288						; size = 4
$T254767 = -284						; size = 4
$T254766 = -280						; size = 4
$T254745 = -276						; size = 4
$T254744 = -272						; size = 4
__Cat$254773 = -266					; size = 1
$T254771 = -265						; size = 1
$T254665 = -264						; size = 4
$T254664 = -260						; size = 4
$T254643 = -256						; size = 4
$T254642 = -252						; size = 4
__Cat$254671 = -246					; size = 1
$T254669 = -245						; size = 1
$T254569 = -244						; size = 4
$T254568 = -240						; size = 4
$T254547 = -236						; size = 4
$T254546 = -232						; size = 4
__Cat$254575 = -226					; size = 1
$T254573 = -225						; size = 1
$T254495 = -224						; size = 4
$T254483 = -220						; size = 4
$T254473 = -213						; size = 1
$T254472 = -212						; size = 4
__Cat$254490 = -207					; size = 1
$T254488 = -206						; size = 1
$T254487 = -205						; size = 1
$T254460 = -204						; size = 4
$T254448 = -200						; size = 4
$T254438 = -193						; size = 1
$T254437 = -192						; size = 4
__Cat$254456 = -187					; size = 1
$T254452 = -186						; size = 1
$T254451 = -185						; size = 1
$T254425 = -184						; size = 4
$T254415 = -180						; size = 4
__Cat$254423 = -175					; size = 1
$T254420 = -174						; size = 1
$T254419 = -173						; size = 1
__Count$254390 = -172					; size = 4
__Count$254364 = -100					; size = 4
__Tmp$230464 = -96					; size = 28
__Oldend$230465 = -68					; size = 4
__Tmp$230454 = -64					; size = 28
__$ArrayPad$ = -36					; size = 4
__Ncopied$230441 = -32					; size = 4
__Newvec$230439 = -28					; size = 4
__Whereoff$230440 = -24					; size = 4
__Capacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Where$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z PROC ; std::vector<CvString,std::allocator<CvString> >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 444				; 000001bcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN31@Insert_n
	mov	DWORD PTR tv290[ebp], 0
	jmp	SHORT $LN29@Insert_n
$LN31@Insert_n:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR tv290[ebp], eax
$LN29@Insert_n:
	mov	edx, DWORD PTR tv290[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx

; 1162 : 
; 1163 : 		if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN14@Insert_n
	jmp	$LN16@Insert_n
$LN14@Insert_n:

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	DWORD PTR __Count$254364[ebp], 153391689 ; 09249249H
	cmp	DWORD PTR __Count$254364[ebp], 0
	jbe	SHORT $LN37@Insert_n
	mov	eax, DWORD PTR __Count$254364[ebp]
	mov	DWORD PTR tv298[ebp], eax
	jmp	SHORT $LN39@Insert_n
$LN37@Insert_n:
	mov	DWORD PTR tv298[ebp], 1
$LN39@Insert_n:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	edx, DWORD PTR tv298[ebp]
	sub	edx, eax
	cmp	edx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN44@Insert_n

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ ; std::vector<CvString,std::allocator<CvString> >::_Xlen
	jmp	$LN16@Insert_n

; 1167 : 		else if (_Capacity < size() + _Count)

$LN44@Insert_n:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	add	eax, DWORD PTR __Count$[ebp]
	cmp	DWORD PTR __Capacity$[ebp], eax
	jae	$LN10@Insert_n

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	DWORD PTR __Count$254390[ebp], 153391689 ; 09249249H
	cmp	DWORD PTR __Count$254390[ebp], 0
	jbe	SHORT $LN50@Insert_n
	mov	edx, DWORD PTR __Count$254390[ebp]
	mov	DWORD PTR tv312[ebp], edx
	jmp	SHORT $LN46@Insert_n
$LN50@Insert_n:
	mov	DWORD PTR tv312[ebp], 1
$LN46@Insert_n:
	mov	eax, DWORD PTR __Capacity$[ebp]
	shr	eax, 1
	mov	ecx, DWORD PTR tv312[ebp]
	sub	ecx, eax
	cmp	ecx, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN17@Insert_n
	mov	DWORD PTR tv84[ebp], 0
	jmp	SHORT $LN18@Insert_n
$LN17@Insert_n:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv84[ebp], edx
$LN18@Insert_n:
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax

; 1171 : 			if (_Capacity < size() + _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	add	eax, DWORD PTR __Count$[ebp]
	cmp	DWORD PTR __Capacity$[ebp], eax
	jae	SHORT $LN56@Insert_n

; 1172 : 				_Capacity = size() + _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax+4]
	mov	eax, ecx
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

$LN56@Insert_n:
	push	0
	mov	edx, DWORD PTR __Capacity$[ebp]
	push	edx
	call	??$_Allocate@VCvString@@@std@@YAPAVCvString@@IPAV1@@Z ; std::_Allocate<CvString>
	add	esp, 8
	mov	DWORD PTR __Newvec$230439[ebp], eax

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp]
	sub	ecx, DWORD PTR [eax+4]
	mov	eax, ecx
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR __Whereoff$230440[ebp], eax

; 1175 : 			int _Ncopied = 0;

	mov	DWORD PTR __Ncopied$230441[ebp], 0

; 1176 : 
; 1177 : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	edx, DWORD PTR __Whereoff$230440[ebp]
	imul	edx, 28					; 0000001cH
	add	edx, DWORD PTR __Newvec$230439[ebp]
	mov	DWORD PTR $T254425[ebp], edx
	mov	eax, DWORD PTR $T254425[ebp]
	mov	DWORD PTR $T254415[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T254419[ebp], cl
	mov	dl, BYTE PTR __Cat$254423[ebp]
	mov	BYTE PTR $T254420[ebp], dl
	movzx	eax, BYTE PTR $T254419[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T254420[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T254415[ebp]
	push	edx
	call	??$_Uninit_fill_n@PAVCvString@@IV1@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@IABV1@AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<CvString *,unsigned int,CvString,std::allocator<CvString> >
	add	esp, 24					; 00000018H

; 1179 : 			++_Ncopied;

	mov	eax, DWORD PTR __Ncopied$230441[ebp]
	add	eax, 1
	mov	DWORD PTR __Ncopied$230441[ebp], eax

; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T254460[ebp], edx
	mov	eax, DWORD PTR __Newvec$230439[ebp]
	mov	DWORD PTR $T254448[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T254451[ebp], cl
	mov	dl, BYTE PTR __Cat$254456[ebp]
	mov	BYTE PTR $T254452[ebp], dl
	mov	al, BYTE PTR $T254451[ebp]
	mov	BYTE PTR $T254438[ebp], al
	mov	ecx, DWORD PTR $T254448[ebp]
	mov	DWORD PTR $T254437[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR $T254437[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T254460[ebp]
	push	edx
	call	??$unchecked_uninitialized_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@stdext@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@std@@@Z ; stdext::unchecked_uninitialized_copy<CvString *,CvString *,std::allocator<CvString> >
	add	esp, 16					; 00000010H

; 1182 : 			++_Ncopied;

	mov	eax, DWORD PTR __Ncopied$230441[ebp]
	add	eax, 1
	mov	DWORD PTR __Ncopied$230441[ebp], eax

; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T254495[ebp], edx
	mov	eax, DWORD PTR __Whereoff$230440[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	imul	eax, 28					; 0000001cH
	add	eax, DWORD PTR __Newvec$230439[ebp]
	mov	DWORD PTR $T254483[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T254487[ebp], cl
	mov	dl, BYTE PTR __Cat$254490[ebp]
	mov	BYTE PTR $T254488[ebp], dl
	mov	al, BYTE PTR $T254487[ebp]
	mov	BYTE PTR $T254473[ebp], al
	mov	ecx, DWORD PTR $T254483[ebp]
	mov	DWORD PTR $T254472[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR $T254472[ebp]
	push	eax
	mov	ecx, DWORD PTR $T254495[ebp]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??$unchecked_uninitialized_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@stdext@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@std@@@Z ; stdext::unchecked_uninitialized_copy<CvString *,CvString *,std::allocator<CvString> >
	add	esp, 16					; 00000010H
	jmp	$LN19@Insert_n
__catch$?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)

	cmp	DWORD PTR __Ncopied$230441[ebp], 1
	jle	SHORT $LN7@Insert_n

; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);

	mov	eax, DWORD PTR __Whereoff$230440[ebp]
	imul	eax, 28					; 0000001cH
	add	eax, DWORD PTR __Newvec$230439[ebp]
	mov	DWORD PTR $T254569[ebp], eax
	mov	ecx, DWORD PTR __Newvec$230439[ebp]
	mov	DWORD PTR $T254568[ebp], ecx
	mov	dl, BYTE PTR __Cat$254575[ebp]
	mov	BYTE PTR $T254573[ebp], dl
	mov	eax, DWORD PTR $T254569[ebp]
	mov	DWORD PTR $T254547[ebp], eax
	mov	ecx, DWORD PTR $T254568[ebp]
	mov	DWORD PTR $T254546[ebp], ecx
	jmp	SHORT $LN88@Insert_n
$LN87@Insert_n:
	mov	edx, DWORD PTR $T254546[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR $T254546[ebp], edx
$LN88@Insert_n:
	mov	eax, DWORD PTR $T254546[ebp]
	cmp	eax, DWORD PTR $T254547[ebp]
	je	SHORT $LN7@Insert_n
	mov	ecx, DWORD PTR $T254546[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	xor	ecx, ecx
	and	ecx, 1
	je	SHORT $LN91@Insert_n
	mov	edx, DWORD PTR $T254546[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN91@Insert_n:
	jmp	SHORT $LN87@Insert_n
$LN7@Insert_n:

; 1188 : 			if (0 < _Ncopied)

	cmp	DWORD PTR __Ncopied$230441[ebp], 0
	jle	$LN6@Insert_n

; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR __Whereoff$230440[ebp]
	imul	ecx, 28					; 0000001cH
	add	ecx, DWORD PTR __Newvec$230439[ebp]
	add	ecx, eax
	mov	DWORD PTR $T254665[ebp], ecx
	mov	edx, DWORD PTR __Whereoff$230440[ebp]
	imul	edx, 28					; 0000001cH
	add	edx, DWORD PTR __Newvec$230439[ebp]
	mov	DWORD PTR $T254664[ebp], edx
	mov	al, BYTE PTR __Cat$254671[ebp]
	mov	BYTE PTR $T254669[ebp], al
	mov	ecx, DWORD PTR $T254665[ebp]
	mov	DWORD PTR $T254643[ebp], ecx
	mov	edx, DWORD PTR $T254664[ebp]
	mov	DWORD PTR $T254642[ebp], edx
	jmp	SHORT $LN109@Insert_n
$LN108@Insert_n:
	mov	eax, DWORD PTR $T254642[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR $T254642[ebp], eax
$LN109@Insert_n:
	mov	ecx, DWORD PTR $T254642[ebp]
	cmp	ecx, DWORD PTR $T254643[ebp]
	je	SHORT $LN6@Insert_n
	mov	ecx, DWORD PTR $T254642[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN112@Insert_n
	mov	eax, DWORD PTR $T254642[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN112@Insert_n:
	jmp	SHORT $LN108@Insert_n
$LN6@Insert_n:

; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	mov	ecx, DWORD PTR __Newvec$230439[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1192 : 			_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN124@Insert_n
	ret	0
$LN19@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 1193 : 
; 1194 : 			_Count += size();

$LN124@Insert_n:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax+4]
	mov	eax, ecx
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Count$[ebp], eax

; 1195 : 			if (_Myfirst != 0)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	$LN5@Insert_n

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T254791[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T254790[ebp], eax
	mov	ecx, DWORD PTR $T254791[ebp]
	mov	DWORD PTR $T254767[ebp], ecx
	mov	edx, DWORD PTR $T254790[ebp]
	mov	DWORD PTR $T254766[ebp], edx
	mov	al, BYTE PTR __Cat$254773[ebp]
	mov	BYTE PTR $T254771[ebp], al
	mov	ecx, DWORD PTR $T254767[ebp]
	mov	DWORD PTR $T254745[ebp], ecx
	mov	edx, DWORD PTR $T254766[ebp]
	mov	DWORD PTR $T254744[ebp], edx
	jmp	SHORT $LN134@Insert_n
$LN133@Insert_n:
	mov	eax, DWORD PTR $T254744[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR $T254744[ebp], eax
$LN134@Insert_n:
	mov	ecx, DWORD PTR $T254744[ebp]
	cmp	ecx, DWORD PTR $T254745[ebp]
	je	SHORT $LN126@Insert_n
	mov	ecx, DWORD PTR $T254744[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN137@Insert_n
	mov	eax, DWORD PTR $T254744[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN137@Insert_n:
	jmp	SHORT $LN133@Insert_n
$LN126@Insert_n:

; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR $T254796[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T254795[ebp], eax
	mov	ecx, DWORD PTR $T254795[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN5@Insert_n:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	edx, DWORD PTR __Capacity$[ebp]
	imul	edx, 28					; 0000001cH
	add	edx, DWORD PTR __Newvec$230439[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx

; 1206 : 			_Mylast = _Newvec + _Count;

	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 28					; 0000001cH
	add	ecx, DWORD PTR __Newvec$230439[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 1207 : 			_Myfirst = _Newvec;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newvec$230439[ebp]
	mov	DWORD PTR [eax+4], ecx
	jmp	$LN16@Insert_n
$LN10@Insert_n:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, DWORD PTR __Where$[ebp]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	$LN3@Insert_n

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Tmp$230454[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+12], 2

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T254835[ebp], ecx
	mov	edx, DWORD PTR __Count$[ebp]
	imul	edx, 28					; 0000001cH
	add	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T254823[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T254827[ebp], al
	mov	cl, BYTE PTR __Cat$254830[ebp]
	mov	BYTE PTR $T254828[ebp], cl
	mov	dl, BYTE PTR $T254827[ebp]
	mov	BYTE PTR $T254813[ebp], dl
	mov	eax, DWORD PTR $T254823[ebp]
	mov	DWORD PTR $T254812[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T254812[ebp]
	push	edx
	mov	eax, DWORD PTR $T254835[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	call	??$unchecked_uninitialized_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@stdext@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@std@@@Z ; stdext::unchecked_uninitialized_copy<CvString *,CvString *,std::allocator<CvString> >
	add	esp, 16					; 00000010H

; 1215 : 
; 1216 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 3

; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, DWORD PTR __Where$[ebp]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	sub	edx, eax
	mov	DWORD PTR $T254862[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T254861[ebp], ecx
	mov	edx, DWORD PTR $T254861[ebp]
	mov	DWORD PTR $T254851[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T254856[ebp], al
	mov	cl, BYTE PTR __Cat$254859[ebp]
	mov	BYTE PTR $T254857[ebp], cl
	movzx	edx, BYTE PTR $T254856[ebp]
	push	edx
	movzx	eax, BYTE PTR $T254857[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR __Tmp$230454[ebp]
	push	edx
	mov	eax, DWORD PTR $T254862[ebp]
	push	eax
	mov	ecx, DWORD PTR $T254851[ebp]
	push	ecx
	call	??$_Uninit_fill_n@PAVCvString@@IV1@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@IABV1@AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<CvString *,unsigned int,CvString,std::allocator<CvString> >
	add	esp, 24					; 00000018H
	jmp	$LN21@Insert_n
__catch$?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z$2:

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T254959[ebp], edx
	mov	ecx, DWORD PTR $T254959[ebp]
	mov	DWORD PTR $T254936[ebp], ecx
	mov	edx, DWORD PTR __Count$[ebp]
	imul	edx, 28					; 0000001cH
	add	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T254935[ebp], edx
	mov	al, BYTE PTR __Cat$254943[ebp]
	mov	BYTE PTR $T254941[ebp], al
	mov	ecx, DWORD PTR $T254936[ebp]
	mov	DWORD PTR $T254914[ebp], ecx
	mov	edx, DWORD PTR $T254935[ebp]
	mov	DWORD PTR $T254913[ebp], edx
	jmp	SHORT $LN174@Insert_n
$LN173@Insert_n:
	mov	eax, DWORD PTR $T254913[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR $T254913[ebp], eax
$LN174@Insert_n:
	mov	ecx, DWORD PTR $T254913[ebp]
	cmp	ecx, DWORD PTR $T254914[ebp]
	je	SHORT $LN166@Insert_n
	mov	ecx, DWORD PTR $T254913[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN177@Insert_n
	mov	eax, DWORD PTR $T254913[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN177@Insert_n:
	jmp	SHORT $LN173@Insert_n
$LN166@Insert_n:

; 1221 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1222 : 			_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], 2
	mov	eax, __tryend$?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z$3
	ret	0
$LN21@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], 2
__tryend$?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z$3:

; 1223 : 
; 1224 : 			_Mylast += _Count;

	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, ecx
	mov	DWORD PTR $T254982[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T254972[ebp], ecx
	jmp	SHORT $LN191@Insert_n
$LN190@Insert_n:
	mov	edx, DWORD PTR $T254972[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR $T254972[ebp], edx
$LN191@Insert_n:
	mov	eax, DWORD PTR $T254972[ebp]
	cmp	eax, DWORD PTR $T254982[ebp]
	je	SHORT $LN187@Insert_n
	lea	ecx, DWORD PTR __Tmp$230454[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T254972[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	jmp	SHORT $LN190@Insert_n
$LN187@Insert_n:

; 1232 : 			}

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Tmp$230454[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1233 : 		else

	jmp	$LN16@Insert_n
$LN3@Insert_n:

; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Tmp$230464[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+12], 5

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Oldend$230465[ebp], ecx

; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T255062[ebp], eax
	mov	ecx, DWORD PTR $T255062[ebp]
	mov	DWORD PTR $T255043[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T255046[ebp], dl
	mov	al, BYTE PTR __Cat$255050[ebp]
	mov	BYTE PTR $T255047[ebp], al
	mov	cl, BYTE PTR $T255046[ebp]
	mov	BYTE PTR $T255026[ebp], cl
	mov	edx, DWORD PTR $T255043[ebp]
	mov	DWORD PTR $T255025[ebp], edx
	mov	eax, DWORD PTR $T255025[ebp]
	mov	DWORD PTR $T255015[ebp], eax
	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR __Oldend$230465[ebp]
	sub	edx, ecx
	mov	DWORD PTR $T255014[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T255053[ebp], al
	mov	cl, BYTE PTR __Cat$255057[ebp]
	mov	BYTE PTR $T255054[ebp], cl
	movzx	edx, BYTE PTR $T255053[ebp]
	push	edx
	movzx	eax, BYTE PTR $T255054[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T255015[ebp]
	push	edx
	mov	eax, DWORD PTR __Oldend$230465[ebp]
	push	eax
	mov	ecx, DWORD PTR $T255014[ebp]
	push	ecx
	call	??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<CvString *,CvString *,std::allocator<CvString> >
	add	esp, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	mov	eax, DWORD PTR __Oldend$230465[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR __Oldend$230465[ebp]
	sub	edx, ecx
	push	edx
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??$_Unchecked_move_backward@PAVCvString@@PAV1@@stdext@@YAPAVCvString@@PAV1@00@Z ; stdext::_Unchecked_move_backward<CvString *,CvString *>
	add	esp, 12					; 0000000cH

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T255125[ebp], ecx
	jmp	SHORT $LN234@Insert_n
$LN233@Insert_n:
	mov	edx, DWORD PTR $T255125[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR $T255125[ebp], edx
$LN234@Insert_n:
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 28					; 0000001cH
	add	eax, DWORD PTR __Where$[ebp]
	cmp	DWORD PTR $T255125[ebp], eax
	je	SHORT $LN230@Insert_n
	lea	ecx, DWORD PTR __Tmp$230464[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T255125[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	jmp	SHORT $LN233@Insert_n
$LN230@Insert_n:

; 1249 : 			}

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Tmp$230464[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN16@Insert_n:

; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z$4:
	lea	ecx, DWORD PTR __Tmp$230454[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z$5:
	lea	ecx, DWORD PTR __Tmp$230464[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-464]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXV?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@IABVCvString@@@Z ENDP ; std::vector<CvString,std::allocator<CvString> >::_Insert_n
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T255153 = -80						; size = 28
$T255152 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ PROC ; std::vector<CvString,std::allocator<CvString> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T255153[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T255152[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR $T255152[ebp], OFFSET ??_7logic_error@std@@6B@
	lea	eax, DWORD PTR $T255153[ebp]
	push	eax
	lea	ecx, DWORD PTR $T255152[ebp+12]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T255152[ebp], OFFSET ??_7length_error@std@@6B@
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T255152[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T255153[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@Xlen:

; 1261 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T255153[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T255152[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ ENDP ; std::vector<CvString,std::allocator<CvString> >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T255175 = -80						; size = 28
$T255174 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@KAXXZ PROC ; std::vector<enum ResourceTypes,std::allocator<enum ResourceTypes> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Xlen@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T255175[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T255174[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR $T255174[ebp], OFFSET ??_7logic_error@std@@6B@
	lea	eax, DWORD PTR $T255175[ebp]
	push	eax
	lea	ecx, DWORD PTR $T255174[ebp+12]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T255174[ebp], OFFSET ??_7length_error@std@@6B@
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T255174[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T255175[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@Xlen@2:

; 1261 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T255175[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T255174[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@KAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@KAXXZ ENDP ; std::vector<enum ResourceTypes,std::allocator<enum ResourceTypes> >::_Xlen
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?Copy@?$BaseVector@VCvMinorCivQuest@@$0A@@@IAEXABV1@@Z
_TEXT	SEGMENT
tv84 = -16						; size = 4
_this$ = -12						; size = 4
$T255196 = -8						; size = 4
_i$230531 = -4						; size = 4
_RHS$ = 8						; size = 4
?Copy@?$BaseVector@VCvMinorCivQuest@@$0A@@@IAEXABV1@@Z PROC ; BaseVector<CvMinorCivQuest,0>::Copy, COMDAT
; _this$ = ecx

; 229  : 	void Copy(const THIS_TYPE& RHS){

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 230  : 		m_uiCurrSize = RHS.m_uiCurrSize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _RHS$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 231  : 		if( bPODType ){

	xor	eax, eax
	je	SHORT $LN5@Copy@3

; 232  : 			memcpy( (void*)m_pData, (void*)RHS.m_pData, sizeof(T)*RHS.m_uiCurrSize);

	mov	ecx, DWORD PTR _RHS$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 28					; 0000001cH
	push	edx
	mov	eax, DWORD PTR _RHS$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 233  : 		}else{

	jmp	SHORT $LN6@Copy@3
$LN5@Copy@3:

; 234  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i){

	mov	DWORD PTR _i$230531[ebp], 0
	jmp	SHORT $LN3@Copy@3
$LN2@Copy@3:
	mov	ecx, DWORD PTR _i$230531[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$230531[ebp], ecx
$LN3@Copy@3:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _i$230531[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jae	SHORT $LN6@Copy@3

; 235  : 				new( (void*)&m_pData[i] )T( RHS.m_pData[i] );

	mov	ecx, DWORD PTR _i$230531[ebp]
	imul	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	mov	DWORD PTR $T255196[ebp], ecx
	je	SHORT $LN8@Copy@3
	mov	eax, DWORD PTR _i$230531[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _RHS$[ebp]
	mov	esi, DWORD PTR [ecx]
	add	esi, eax
	mov	ecx, 7
	mov	edi, DWORD PTR $T255196[ebp]
	rep movsd
	mov	edx, DWORD PTR $T255196[ebp]
	mov	DWORD PTR tv84[ebp], edx
	jmp	SHORT $LN9@Copy@3
$LN8@Copy@3:
	mov	DWORD PTR tv84[ebp], 0
$LN9@Copy@3:

; 236  : 			}

	jmp	SHORT $LN2@Copy@3
$LN6@Copy@3:

; 237  : 		}
; 238  : 	};

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?Copy@?$BaseVector@VCvMinorCivQuest@@$0A@@@IAEXABV1@@Z ENDP ; BaseVector<CvMinorCivQuest,0>::Copy
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::erase
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::const_iterator::_Inc
PUBLIC	?clear@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::clear
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z
_TEXT	SEGMENT
_this$ = -76						; size = 4
$T255422 = -72						; size = 4
$T255416 = -68						; size = 4
__Tmp$255404 = -48					; size = 4
$T255332 = -44						; size = 4
$T255319 = -40						; size = 4
$T255249 = -28						; size = 4
$T255226 = -24						; size = 4
$T255213 = -20						; size = 4
$T255207 = -16						; size = 4
$T255206 = -12						; size = 4
$T255205 = -8						; size = 4
$T255204 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z PROC ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::erase, COMDAT
; _this$ = ecx

; 934  : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	mov	DWORD PTR _this$[ebp], ecx

; 935  : 		if (_First == begin() && _Last == end())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T255213[ebp], ecx
	mov	edx, DWORD PTR $T255213[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T255226[ebp], eax
	mov	ecx, DWORD PTR $T255226[ebp]
	mov	DWORD PTR $T255204[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR $T255204[ebp]
	sete	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN72@erase@3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T255249[ebp], eax
	mov	ecx, DWORD PTR $T255249[ebp]
	mov	DWORD PTR $T255205[ebp], ecx
	mov	edx, DWORD PTR __Last$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR $T255205[ebp]
	sete	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN72@erase@3

; 936  : 			{	// erase all
; 937  : 			clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::clear

; 938  : 			return (begin());

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T255319[ebp], eax
	mov	ecx, DWORD PTR $T255319[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T255332[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR $T255332[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@erase@3

; 939  : 			}
; 940  : 		else

	jmp	SHORT $LN5@erase@3

; 941  : 			{	// partial erase, one at a time
; 942  : 			while (_First != _Last)

$LN72@erase@3:
	mov	edx, DWORD PTR __First$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR __Last$[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN1@erase@3

; 943  : 				erase(_First++);

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Tmp$255404[ebp], eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Inc@const_iterator@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::const_iterator::_Inc
	mov	ecx, DWORD PTR __Tmp$255404[ebp]
	mov	DWORD PTR $T255206[ebp], ecx
	mov	edx, DWORD PTR $T255206[ebp]
	push	edx
	lea	eax, DWORD PTR $T255207[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::erase
	jmp	SHORT $LN72@erase@3
$LN1@erase@3:

; 944  : 			return (_Make_iter(_First));

	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T255422[ebp], ecx
	mov	edx, DWORD PTR $T255422[ebp]
	mov	DWORD PTR $T255416[ebp], edx
	mov	eax, DWORD PTR $T255416[ebp]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@erase@3:

; 945  : 			}
; 946  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ENDP ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::erase
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Buynode
; Function compile flags: /Odtp
;	COMDAT ?_Init@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T255440 = -4						; size = 4
?_Init@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Init, COMDAT
; _this$ = ecx

; 1177 : 		{	// create head/nil node and make tree empty

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1178 : 		_Myhead = _Buynode();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Buynode
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1179 : 		_Isnil(_Myhead) = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	BYTE PTR [eax+17], 1

; 1180 : 		_Root() = _Myhead;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 1181 : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T255440[ebp], eax
	mov	ecx, DWORD PTR $T255440[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+8], ecx

; 1182 : 		_Mysize = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 1183 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Init@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Init
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@ABW4MinorCivQuestTypes@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Pnode$ = -8						; size = 4
__Wherenode$ = -4					; size = 4
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@ABW4MinorCivQuestTypes@@@Z PROC ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Lbound, COMDAT
; _this$ = ecx

; 1263 : 		{	// find leftmost node not less than _Keyval

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1264 : 		_Nodeptr _Pnode = _Root();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Pnode$[ebp], edx

; 1265 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Wherenode$[ebp], ecx

; 1266 : 
; 1267 : 		while (!_Isnil(_Pnode))

$LN11@Lbound:
	mov	edx, DWORD PTR __Pnode$[ebp]
	movsx	eax, BYTE PTR [edx+17]
	test	eax, eax
	jne	SHORT $LN3@Lbound

; 1268 : 			if (_DEBUG_LT_PRED(this->comp, _Key(_Pnode), _Keyval))

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR __Keyval$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setl	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN2@Lbound

; 1269 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1270 : 			else

	jmp	SHORT $LN1@Lbound
$LN2@Lbound:

; 1271 : 				{	// _Pnode not less than _Keyval, remember it
; 1272 : 				_Wherenode = _Pnode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Wherenode$[ebp], edx

; 1273 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN1@Lbound:

; 1274 : 				}

	jmp	SHORT $LN11@Lbound
$LN3@Lbound:

; 1275 : 
; 1276 : 		return (_Wherenode);	// return best remembered candidate

	mov	eax, DWORD PTR __Wherenode$[ebp]

; 1277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Lbound@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@ABW4MinorCivQuestTypes@@@Z ENDP ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Lbound
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T255546 = -12						; size = 4
$T255539 = -8						; size = 4
__Pnode$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1285 : 		{	// promote right node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1286 : 		_Nodeptr _Pnode = _Right(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1287 : 		_Right(_Wherenode) = _Left(_Pnode);

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], ecx

; 1288 : 
; 1289 : 		if (!_Isnil(_Left(_Pnode)))

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	jne	SHORT $LN24@Lrotate

; 1290 : 			_Parent(_Left(_Pnode)) = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1291 : 		_Parent(_Pnode) = _Parent(_Wherenode);

$LN24@Lrotate:
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 1292 : 
; 1293 : 		if (_Wherenode == _Root())

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN34@Lrotate

; 1294 : 			_Root() = _Pnode;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+4], ecx
	jmp	SHORT $LN46@Lrotate

; 1295 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

$LN34@Lrotate:
	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T255539[ebp], eax
	mov	ecx, DWORD PTR $T255539[ebp]
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN44@Lrotate

; 1296 : 			_Left(_Parent(_Wherenode)) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T255546[ebp], ecx
	mov	edx, DWORD PTR $T255546[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [edx], eax

; 1297 : 		else

	jmp	SHORT $LN46@Lrotate

; 1298 : 			_Right(_Parent(_Wherenode)) = _Pnode;

$LN44@Lrotate:
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [edx+8], eax

; 1299 : 
; 1300 : 		_Left(_Pnode) = _Wherenode;

$LN46@Lrotate:
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [ecx], edx

; 1301 : 		_Parent(_Wherenode) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1302 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Lrotate@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Lrotate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T255622 = -8						; size = 4
__Pnode$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1329 : 		{	// promote left node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1330 : 		_Nodeptr _Pnode = _Left(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1331 : 		_Left(_Wherenode) = _Right(_Pnode);

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx], ecx

; 1332 : 
; 1333 : 		if (!_Isnil(_Right(_Pnode)))

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	jne	SHORT $LN24@Rrotate

; 1334 : 			_Parent(_Right(_Pnode)) = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1335 : 		_Parent(_Pnode) = _Parent(_Wherenode);

$LN24@Rrotate:
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 1336 : 
; 1337 : 		if (_Wherenode == _Root())

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN36@Rrotate

; 1338 : 			_Root() = _Pnode;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+4], ecx
	jmp	SHORT $LN46@Rrotate

; 1339 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

$LN36@Rrotate:
	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN42@Rrotate

; 1340 : 			_Right(_Parent(_Wherenode)) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 1341 : 		else

	jmp	SHORT $LN46@Rrotate

; 1342 : 			_Left(_Parent(_Wherenode)) = _Pnode;

$LN42@Rrotate:
	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T255622[ebp], eax
	mov	ecx, DWORD PTR $T255622[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], edx

; 1343 : 
; 1344 : 		_Right(_Pnode) = _Wherenode;

$LN46@Rrotate:
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 1345 : 		_Parent(_Wherenode) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [edx+4], eax

; 1346 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Rrotate@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Node>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@PAU342@00ABW4MinorCivQuestTypes@@D@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@PAU342@00ABW4MinorCivQuestTypes@@D@Z$0
__unwindtable$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@PAU342@00ABW4MinorCivQuestTypes@@D@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@PAU342@00ABW4MinorCivQuestTypes@@D@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@PAU342@00ABW4MinorCivQuestTypes@@D@Z$3
__ehfuncinfo$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@PAU342@00ABW4MinorCivQuestTypes@@D@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@PAU342@00ABW4MinorCivQuestTypes@@D@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@PAU342@00ABW4MinorCivQuestTypes@@D@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@PAU342@00ABW4MinorCivQuestTypes@@D@Z
_TEXT	SEGMENT
tv86 = -52						; size = 4
_this$ = -48						; size = 4
$T255632 = -28						; size = 4
$T255631 = -24						; size = 4
__Wherenode$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@PAU342@00ABW4MinorCivQuestTypes@@D@Z PROC ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1408 : 		{	// allocate a node with pointers, value, and color

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@PAU342@00ABW4MinorCivQuestTypes@@D@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1409 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

	push	0
	push	1
	call	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Node>
	add	esp, 8
	mov	DWORD PTR __Wherenode$[ebp], eax

; 1410 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1411 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR $T255632[ebp], eax
	cmp	DWORD PTR $T255632[ebp], 0
	je	SHORT $LN4@Buynode
	mov	ecx, DWORD PTR $T255632[ebp]
	mov	edx, DWORD PTR __Larg$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T255632[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR $T255632[ebp]
	mov	eax, DWORD PTR __Rarg$[ebp]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR $T255632[ebp]
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, DWORD PTR $T255632[ebp]
	mov	dl, BYTE PTR __Carg$[ebp]
	mov	BYTE PTR [ecx+16], dl
	mov	eax, DWORD PTR $T255632[ebp]
	mov	BYTE PTR [eax+17], 0
	mov	ecx, DWORD PTR $T255632[ebp]
	mov	DWORD PTR tv86[ebp], ecx
	jmp	SHORT $LN5@Buynode
$LN4@Buynode:
	mov	DWORD PTR tv86[ebp], 0
$LN5@Buynode:
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR $T255631[ebp], edx
	jmp	SHORT $LN6@Buynode
__catch$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@PAU342@00ABW4MinorCivQuestTypes@@D@Z$0:

; 1412 : 		_CATCH_ALL
; 1413 : 		this->_Alnod.deallocate(_Wherenode, 1);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1414 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1415 : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@PAU342@00ABW4MinorCivQuestTypes@@D@Z$1
	ret	0
$LN6@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@PAU342@00ABW4MinorCivQuestTypes@@D@Z$1:

; 1416 : 		return (_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
$LN3@Buynode:

; 1417 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@PAU342@00ABW4MinorCivQuestTypes@@D@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@PAU342@00ABW4MinorCivQuestTypes@@D@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@PAU342@00ABW4MinorCivQuestTypes@@D@Z ENDP ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Buynode
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@IAEXI@Z
_TEXT	SEGMENT
tv186 = -52						; size = 4
_this$ = -48						; size = 4
$T255709 = -44						; size = 4
$T255708 = -40						; size = 4
_i$255700 = -36						; size = 4
$T255687 = -32						; size = 4
$T255680 = -28						; size = 4
_pRet$255677 = -24					; size = 4
$T255670 = -20						; size = 4
$T255669 = -16						; size = 4
_i$230646 = -12						; size = 4
_uiNewSize$230638 = -8					; size = 4
_pTemp$ = -4						; size = 4
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@IAEXI@Z PROC ; FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	DWORD PTR _this$[ebp], ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN8@GrowSize@10
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1
$LN8@GrowSize@10:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jb	SHORT $LN7@GrowSize@10

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shl	edx, 1
	mov	DWORD PTR _uiNewSize$230638[ebp], edx

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _uiNewSize$230638[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN6@GrowSize@10

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	mov	DWORD PTR [edx+8], eax

; 754  : 				break;

	jmp	SHORT $LN7@GrowSize@10
$LN6@GrowSize@10:

; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _uiNewSize$230638[ebp]
	mov	DWORD PTR [ecx+8], edx

; 759  : 		}

	jmp	SHORT $LN8@GrowSize@10
$LN7@GrowSize@10:

; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T255680[ebp], ecx
	cmp	DWORD PTR $T255680[ebp], 64		; 00000040H
	jbe	SHORT $LN16@GrowSize@10
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	edx, DWORD PTR $T255680[ebp]
	shl	edx, 3
	push	edx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$255677[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T255680[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN17@GrowSize@10
$LN16@GrowSize@10:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _pRet$255677[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 64			; 00000040H
$LN17@GrowSize@10:
	mov	ecx, DWORD PTR _pRet$255677[ebp]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 762  : 		if( bPODType ){

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@GrowSize@10

; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pTemp$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 764  : 		}else{

	jmp	SHORT $LN4@GrowSize@10
$LN5@GrowSize@10:

; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	mov	DWORD PTR _i$230646[ebp], 0
	jmp	SHORT $LN3@GrowSize@10
$LN2@GrowSize@10:
	mov	edx, DWORD PTR _i$230646[ebp]
	add	edx, 1
	mov	DWORD PTR _i$230646[ebp], edx
$LN3@GrowSize@10:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$230646[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN4@GrowSize@10

; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);

	mov	edx, DWORD PTR _i$230646[ebp]
	mov	eax, DWORD PTR _pTemp$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	mov	DWORD PTR $T255670[ebp], ecx
	cmp	DWORD PTR $T255670[ebp], 0
	je	SHORT $LN12@GrowSize@10
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _i$230646[ebp]
	lea	edx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR $T255687[ebp], edx
	mov	eax, DWORD PTR $T255670[ebp]
	mov	ecx, DWORD PTR $T255687[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR $T255670[ebp]
	mov	ecx, DWORD PTR $T255687[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR $T255670[ebp]
	mov	DWORD PTR tv186[ebp], eax
	jmp	SHORT $LN13@GrowSize@10
$LN12@GrowSize@10:
	mov	DWORD PTR tv186[ebp], 0
$LN13@GrowSize@10:
	mov	ecx, DWORD PTR tv186[ebp]
	mov	DWORD PTR $T255669[ebp], ecx
	jmp	SHORT $LN2@GrowSize@10
$LN4@GrowSize@10:

; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T255709[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T255708[ebp], edx
	xor	eax, eax
	je	SHORT $LN24@GrowSize@10
	xor	ecx, ecx
	je	SHORT $LN24@GrowSize@10
	mov	DWORD PTR _i$255700[ebp], 0
	jmp	SHORT $LN29@GrowSize@10
$LN28@GrowSize@10:
	mov	edx, DWORD PTR _i$255700[ebp]
	add	edx, 1
	mov	DWORD PTR _i$255700[ebp], edx
$LN29@GrowSize@10:
	mov	eax, DWORD PTR _i$255700[ebp]
	cmp	eax, DWORD PTR $T255709[ebp]
	jae	SHORT $LN24@GrowSize@10
	jmp	SHORT $LN28@GrowSize@10
$LN24@GrowSize@10:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	cmp	DWORD PTR $T255708[ebp], ecx
	je	SHORT $LN25@GrowSize@10
	mov	edx, DWORD PTR $T255708[ebp]
	push	edx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN25@GrowSize@10:

; 769  : 		m_pData = pTemp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR [eax], ecx

; 770  : 
; 771  : 		m_bIsResized = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+524], 1

; 772  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@$0EA@$00$0A@$0A@@@IAEXI@Z ENDP ; FStaticVector<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement,64,1,0,0>::GrowSize
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@IAEXI@Z
_TEXT	SEGMENT
tv186 = -52						; size = 4
_this$ = -48						; size = 4
$T255752 = -44						; size = 4
$T255751 = -40						; size = 4
_i$255746 = -36						; size = 4
$T255730 = -32						; size = 4
$T255723 = -28						; size = 4
_pRet$255719 = -24					; size = 4
$T255713 = -20						; size = 4
$T255712 = -16						; size = 4
_i$230679 = -12						; size = 4
_uiNewSize$230671 = -8					; size = 4
_pTemp$ = -4						; size = 4
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@IAEXI@Z PROC ; FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	DWORD PTR _this$[ebp], ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN8@GrowSize@11
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1
$LN8@GrowSize@11:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jb	SHORT $LN7@GrowSize@11

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shl	edx, 1
	mov	DWORD PTR _uiNewSize$230671[ebp], edx

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _uiNewSize$230671[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN6@GrowSize@11

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	mov	DWORD PTR [edx+8], eax

; 754  : 				break;

	jmp	SHORT $LN7@GrowSize@11
$LN6@GrowSize@11:

; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _uiNewSize$230671[ebp]
	mov	DWORD PTR [ecx+8], edx

; 759  : 		}

	jmp	SHORT $LN8@GrowSize@11
$LN7@GrowSize@11:

; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T255723[ebp], ecx
	cmp	DWORD PTR $T255723[ebp], 64		; 00000040H
	jbe	SHORT $LN16@GrowSize@11
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	edx, DWORD PTR $T255723[ebp]
	shl	edx, 3
	push	edx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$255719[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T255723[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN17@GrowSize@11
$LN16@GrowSize@11:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _pRet$255719[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 64			; 00000040H
$LN17@GrowSize@11:
	mov	ecx, DWORD PTR _pRet$255719[ebp]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 762  : 		if( bPODType ){

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@GrowSize@11

; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pTemp$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 764  : 		}else{

	jmp	SHORT $LN4@GrowSize@11
$LN5@GrowSize@11:

; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	mov	DWORD PTR _i$230679[ebp], 0
	jmp	SHORT $LN3@GrowSize@11
$LN2@GrowSize@11:
	mov	edx, DWORD PTR _i$230679[ebp]
	add	edx, 1
	mov	DWORD PTR _i$230679[ebp], edx
$LN3@GrowSize@11:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$230679[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN4@GrowSize@11

; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);

	mov	edx, DWORD PTR _i$230679[ebp]
	mov	eax, DWORD PTR _pTemp$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	mov	DWORD PTR $T255713[ebp], ecx
	cmp	DWORD PTR $T255713[ebp], 0
	je	SHORT $LN12@GrowSize@11
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _i$230679[ebp]
	lea	edx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR $T255730[ebp], edx
	mov	eax, DWORD PTR $T255713[ebp]
	mov	ecx, DWORD PTR $T255730[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR $T255713[ebp]
	mov	ecx, DWORD PTR $T255730[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR $T255713[ebp]
	mov	DWORD PTR tv186[ebp], eax
	jmp	SHORT $LN13@GrowSize@11
$LN12@GrowSize@11:
	mov	DWORD PTR tv186[ebp], 0
$LN13@GrowSize@11:
	mov	ecx, DWORD PTR tv186[ebp]
	mov	DWORD PTR $T255712[ebp], ecx
	jmp	SHORT $LN2@GrowSize@11
$LN4@GrowSize@11:

; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T255752[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T255751[ebp], edx
	xor	eax, eax
	je	SHORT $LN24@GrowSize@11
	xor	ecx, ecx
	je	SHORT $LN24@GrowSize@11
	mov	DWORD PTR _i$255746[ebp], 0
	jmp	SHORT $LN29@GrowSize@11
$LN28@GrowSize@11:
	mov	edx, DWORD PTR _i$255746[ebp]
	add	edx, 1
	mov	DWORD PTR _i$255746[ebp], edx
$LN29@GrowSize@11:
	mov	eax, DWORD PTR _i$255746[ebp]
	cmp	eax, DWORD PTR $T255752[ebp]
	jae	SHORT $LN24@GrowSize@11
	jmp	SHORT $LN28@GrowSize@11
$LN24@GrowSize@11:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	cmp	DWORD PTR $T255751[ebp], ecx
	je	SHORT $LN25@GrowSize@11
	mov	edx, DWORD PTR $T255751[ebp]
	push	edx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN25@GrowSize@11:

; 769  : 		m_pData = pTemp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR [eax], ecx

; 770  : 
; 771  : 		m_bIsResized = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+524], 1

; 772  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$0EA@$00$0A@$0A@@@IAEXI@Z ENDP ; FStaticVector<CvWeightedVector<int,64,1>::WeightedElement,64,1,0,0>::GrowSize
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$BaseVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$00@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$BaseVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$00@@QAE@XZ PROC ; BaseVector<CvWeightedVector<int,64,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<int,64,1>::WeightedElement,1>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$BaseVector@UWeightedElement@?$CvWeightedVector@H$0EA@$00@@$00@@QAE@XZ ENDP ; BaseVector<CvWeightedVector<int,64,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<int,64,1>::WeightedElement,1>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@IAEXI@Z
_TEXT	SEGMENT
tv186 = -52						; size = 4
_this$ = -48						; size = 4
$T255797 = -44						; size = 4
$T255796 = -40						; size = 4
_i$255791 = -36						; size = 4
$T255775 = -32						; size = 4
$T255768 = -28						; size = 4
_pRet$255764 = -24					; size = 4
$T255758 = -20						; size = 4
$T255757 = -16						; size = 4
_i$230738 = -12						; size = 4
_uiNewSize$230730 = -8					; size = 4
_pTemp$ = -4						; size = 4
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@IAEXI@Z PROC ; FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	DWORD PTR _this$[ebp], ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN8@GrowSize@12
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1
$LN8@GrowSize@12:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jb	SHORT $LN7@GrowSize@12

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shl	edx, 1
	mov	DWORD PTR _uiNewSize$230730[ebp], edx

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _uiNewSize$230730[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN6@GrowSize@12

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	mov	DWORD PTR [edx+8], eax

; 754  : 				break;

	jmp	SHORT $LN7@GrowSize@12
$LN6@GrowSize@12:

; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _uiNewSize$230730[ebp]
	mov	DWORD PTR [ecx+8], edx

; 759  : 		}

	jmp	SHORT $LN8@GrowSize@12
$LN7@GrowSize@12:

; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T255768[ebp], ecx
	cmp	DWORD PTR $T255768[ebp], 22		; 00000016H
	jbe	SHORT $LN16@GrowSize@12
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	edx, DWORD PTR $T255768[ebp]
	shl	edx, 3
	push	edx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$255764[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T255768[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN17@GrowSize@12
$LN16@GrowSize@12:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _pRet$255764[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 22			; 00000016H
$LN17@GrowSize@12:
	mov	ecx, DWORD PTR _pRet$255764[ebp]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 762  : 		if( bPODType ){

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@GrowSize@12

; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pTemp$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 764  : 		}else{

	jmp	SHORT $LN4@GrowSize@12
$LN5@GrowSize@12:

; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	mov	DWORD PTR _i$230738[ebp], 0
	jmp	SHORT $LN3@GrowSize@12
$LN2@GrowSize@12:
	mov	edx, DWORD PTR _i$230738[ebp]
	add	edx, 1
	mov	DWORD PTR _i$230738[ebp], edx
$LN3@GrowSize@12:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$230738[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN4@GrowSize@12

; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);

	mov	edx, DWORD PTR _i$230738[ebp]
	mov	eax, DWORD PTR _pTemp$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	mov	DWORD PTR $T255758[ebp], ecx
	cmp	DWORD PTR $T255758[ebp], 0
	je	SHORT $LN12@GrowSize@12
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _i$230738[ebp]
	lea	edx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR $T255775[ebp], edx
	mov	eax, DWORD PTR $T255758[ebp]
	mov	ecx, DWORD PTR $T255775[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR $T255758[ebp]
	mov	ecx, DWORD PTR $T255775[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR $T255758[ebp]
	mov	DWORD PTR tv186[ebp], eax
	jmp	SHORT $LN13@GrowSize@12
$LN12@GrowSize@12:
	mov	DWORD PTR tv186[ebp], 0
$LN13@GrowSize@12:
	mov	ecx, DWORD PTR tv186[ebp]
	mov	DWORD PTR $T255757[ebp], ecx
	jmp	SHORT $LN2@GrowSize@12
$LN4@GrowSize@12:

; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T255797[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T255796[ebp], edx
	xor	eax, eax
	je	SHORT $LN24@GrowSize@12
	xor	ecx, ecx
	je	SHORT $LN24@GrowSize@12
	mov	DWORD PTR _i$255791[ebp], 0
	jmp	SHORT $LN29@GrowSize@12
$LN28@GrowSize@12:
	mov	edx, DWORD PTR _i$255791[ebp]
	add	edx, 1
	mov	DWORD PTR _i$255791[ebp], edx
$LN29@GrowSize@12:
	mov	eax, DWORD PTR _i$255791[ebp]
	cmp	eax, DWORD PTR $T255797[ebp]
	jae	SHORT $LN24@GrowSize@12
	jmp	SHORT $LN28@GrowSize@12
$LN24@GrowSize@12:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	cmp	DWORD PTR $T255796[ebp], ecx
	je	SHORT $LN25@GrowSize@12
	mov	edx, DWORD PTR $T255796[ebp]
	push	edx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN25@GrowSize@12:

; 769  : 		m_pData = pTemp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR [eax], ecx

; 770  : 
; 771  : 		m_bIsResized = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+188], 1

; 772  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$0BG@$00$0A@$0A@@@IAEXI@Z ENDP ; FStaticVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,22,1,0,0>::GrowSize
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$BaseVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$00@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$BaseVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$00@@QAE@XZ PROC ; BaseVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,1>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$BaseVector@UWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@$00@@QAE@XZ ENDP ; BaseVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement,1>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXI@Z
_TEXT	SEGMENT
tv186 = -52						; size = 4
_this$ = -48						; size = 4
$T255842 = -44						; size = 4
$T255841 = -40						; size = 4
_i$255836 = -36						; size = 4
$T255820 = -32						; size = 4
$T255813 = -28						; size = 4
_pRet$255809 = -24					; size = 4
$T255803 = -20						; size = 4
$T255802 = -16						; size = 4
_i$230788 = -12						; size = 4
_uiNewSize$230780 = -8					; size = 4
_pTemp$ = -4						; size = 4
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXI@Z PROC ; FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	DWORD PTR _this$[ebp], ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN8@GrowSize@13
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1
$LN8@GrowSize@13:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jb	SHORT $LN7@GrowSize@13

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shl	edx, 1
	mov	DWORD PTR _uiNewSize$230780[ebp], edx

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _uiNewSize$230780[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN6@GrowSize@13

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	mov	DWORD PTR [edx+8], eax

; 754  : 				break;

	jmp	SHORT $LN7@GrowSize@13
$LN6@GrowSize@13:

; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _uiNewSize$230780[ebp]
	mov	DWORD PTR [ecx+8], edx

; 759  : 		}

	jmp	SHORT $LN8@GrowSize@13
$LN7@GrowSize@13:

; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T255813[ebp], ecx
	cmp	DWORD PTR $T255813[ebp], 100		; 00000064H
	jbe	SHORT $LN16@GrowSize@13
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	edx, DWORD PTR $T255813[ebp]
	shl	edx, 3
	push	edx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$255809[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T255813[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN17@GrowSize@13
$LN16@GrowSize@13:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _pRet$255809[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 100			; 00000064H
$LN17@GrowSize@13:
	mov	ecx, DWORD PTR _pRet$255809[ebp]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 762  : 		if( bPODType ){

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@GrowSize@13

; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pTemp$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 764  : 		}else{

	jmp	SHORT $LN4@GrowSize@13
$LN5@GrowSize@13:

; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	mov	DWORD PTR _i$230788[ebp], 0
	jmp	SHORT $LN3@GrowSize@13
$LN2@GrowSize@13:
	mov	edx, DWORD PTR _i$230788[ebp]
	add	edx, 1
	mov	DWORD PTR _i$230788[ebp], edx
$LN3@GrowSize@13:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$230788[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN4@GrowSize@13

; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);

	mov	edx, DWORD PTR _i$230788[ebp]
	mov	eax, DWORD PTR _pTemp$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	mov	DWORD PTR $T255803[ebp], ecx
	cmp	DWORD PTR $T255803[ebp], 0
	je	SHORT $LN12@GrowSize@13
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _i$230788[ebp]
	lea	edx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR $T255820[ebp], edx
	mov	eax, DWORD PTR $T255803[ebp]
	mov	ecx, DWORD PTR $T255820[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR $T255803[ebp]
	mov	ecx, DWORD PTR $T255820[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR $T255803[ebp]
	mov	DWORD PTR tv186[ebp], eax
	jmp	SHORT $LN13@GrowSize@13
$LN12@GrowSize@13:
	mov	DWORD PTR tv186[ebp], 0
$LN13@GrowSize@13:
	mov	ecx, DWORD PTR tv186[ebp]
	mov	DWORD PTR $T255802[ebp], ecx
	jmp	SHORT $LN2@GrowSize@13
$LN4@GrowSize@13:

; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T255842[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T255841[ebp], edx
	xor	eax, eax
	je	SHORT $LN24@GrowSize@13
	xor	ecx, ecx
	je	SHORT $LN24@GrowSize@13
	mov	DWORD PTR _i$255836[ebp], 0
	jmp	SHORT $LN29@GrowSize@13
$LN28@GrowSize@13:
	mov	edx, DWORD PTR _i$255836[ebp]
	add	edx, 1
	mov	DWORD PTR _i$255836[ebp], edx
$LN29@GrowSize@13:
	mov	eax, DWORD PTR _i$255836[ebp]
	cmp	eax, DWORD PTR $T255842[ebp]
	jae	SHORT $LN24@GrowSize@13
	jmp	SHORT $LN28@GrowSize@13
$LN24@GrowSize@13:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	cmp	DWORD PTR $T255841[ebp], ecx
	je	SHORT $LN25@GrowSize@13
	mov	edx, DWORD PTR $T255841[ebp]
	push	edx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN25@GrowSize@13:

; 769  : 		m_pData = pTemp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR [eax], ecx

; 770  : 
; 771  : 		m_bIsResized = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+812], 1

; 772  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXI@Z ENDP ; FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>::GrowSize
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Free@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$255848 = -4						; size = 4
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Free@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@I@Z PROC ; FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>::Free, COMDAT
; _this$ = ecx

; 809  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 810  : 		if( !bPODType) Destroy(pVal, uiNumElements);

	xor	eax, eax
	je	SHORT $LN2@Free@2
	xor	ecx, ecx
	je	SHORT $LN2@Free@2
	mov	DWORD PTR _i$255848[ebp], 0
	jmp	SHORT $LN7@Free@2
$LN6@Free@2:
	mov	edx, DWORD PTR _i$255848[ebp]
	add	edx, 1
	mov	DWORD PTR _i$255848[ebp], edx
$LN7@Free@2:
	mov	eax, DWORD PTR _i$255848[ebp]
	cmp	eax, DWORD PTR _uiNumElements$[ebp]
	jae	SHORT $LN2@Free@2
	jmp	SHORT $LN6@Free@2
$LN2@Free@2:

; 811  : 		if( pVal != (T*)m_aData )

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	cmp	DWORD PTR _pVal$[ebp], ecx
	je	SHORT $LN3@Free@2

; 812  : 			FFREEALIGNED( (unsigned char*)pVal );

	mov	edx, DWORD PTR _pVal$[ebp]
	push	edx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN3@Free@2:

; 813  : 	};

	mov	esp, ebp
	pop	ebp
	ret	8
?Free@?$FStaticVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@I@Z ENDP ; FStaticVector<CvWeightedVector<int,100,1>::WeightedElement,100,1,0,0>::Free
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$BaseVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$00@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$BaseVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$00@@QAE@XZ PROC ; BaseVector<CvWeightedVector<int,100,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<int,100,1>::WeightedElement,1>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$BaseVector@UWeightedElement@?$CvWeightedVector@H$0GE@$00@@$00@@QAE@XZ ENDP ; BaseVector<CvWeightedVector<int,100,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<int,100,1>::WeightedElement,1>
_TEXT	ENDS
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z$0
__ehfuncinfo$?erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
_TEXT	SEGMENT
tv177 = -216						; size = 4
tv165 = -212						; size = 4
_this$ = -208						; size = 4
$T256715 = -204						; size = 4
$T256710 = -200						; size = 4
$T256114 = -136						; size = 4
$T256113 = -132						; size = 4
__Tmp$256112 = -125					; size = 1
$T256089 = -124						; size = 4
$T256082 = -120						; size = 4
$T256012 = -116						; size = 4
$T255976 = -112						; size = 4
$T255971 = -108						; size = 4
$T255943 = -104						; size = 4
$T255867 = -100						; size = 4
$T255858 = -96						; size = 28
$T255857 = -68						; size = 40
__Fixnodeparent$ = -28					; size = 4
__Pnode$ = -24						; size = 4
__Fixnode$ = -20					; size = 4
__Erasednode$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z PROC ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::erase, COMDAT
; _this$ = ecx

; 764  : 		{	// erase element at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 765  : 
; 766  :  #if _HAS_ITERATOR_DEBUGGING
; 767  : 		if (_Where._Mycont != this || _Isnil(_Where._Mynode()))
; 768  : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 769  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 770  : 		++_Where;	// save successor iterator for return
; 771  : 		_Orphan_ptr(*this, _Erasednode);
; 772  : 
; 773  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 774  : 		if (_Isnil(_Where._Mynode()))

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T255867[ebp], eax
	mov	ecx, DWORD PTR $T255867[ebp]
	movsx	edx, BYTE PTR [ecx+17]
	test	edx, edx
	je	SHORT $LN55@erase@4

; 775  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

	push	OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
	lea	ecx, DWORD PTR $T255858[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR $T255858[ebp]
	push	eax
	lea	ecx, DWORD PTR $T255857[ebp]
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	mov	DWORD PTR $T255857[ebp], OFFSET ??_7out_of_range@std@@6B@
	push	OFFSET __TI3?AVout_of_range@std@@
	lea	ecx, DWORD PTR $T255857[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T255858[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 776  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

$LN55@erase@4:
	mov	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Erasednode$[ebp], edx

; 777  : 		++_Where;	// save successor iterator for return

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Inc@const_iterator@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::const_iterator::_Inc

; 778  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 779  : 
; 780  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 781  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 782  : 		_Nodeptr _Pnode = _Erasednode;

	mov	eax, DWORD PTR __Erasednode$[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax

; 783  : 
; 784  : 		if (_Isnil(_Left(_Pnode)))

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR [ecx]
	movsx	eax, BYTE PTR [edx+17]
	test	eax, eax
	je	SHORT $LN67@erase@4

; 785  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR __Fixnode$[ebp], edx
	jmp	SHORT $LN38@erase@4

; 786  : 		else if (_Isnil(_Right(_Pnode)))

$LN67@erase@4:
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	movsx	edx, BYTE PTR [ecx+17]
	test	edx, edx
	je	SHORT $LN71@erase@4

; 787  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], ecx

; 788  : 		else

	jmp	SHORT $LN38@erase@4

; 789  : 			{	// two subtrees, must lift successor node to replace erased
; 790  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

$LN71@erase@4:
	mov	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Pnode$[ebp], edx

; 791  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Fixnode$[ebp], ecx
$LN38@erase@4:

; 792  : 			}
; 793  : 
; 794  : 		if (_Pnode == _Erasednode)

	mov	edx, DWORD PTR __Pnode$[ebp]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	$LN137@erase@4

; 795  : 			{	// at most one subtree, relink it
; 796  : 			_Fixnodeparent = _Parent(_Erasednode);

	mov	eax, DWORD PTR __Erasednode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx

; 797  : 			if (!_Isnil(_Fixnode))

	mov	edx, DWORD PTR __Fixnode$[ebp]
	movsx	eax, BYTE PTR [edx+17]
	test	eax, eax
	jne	SHORT $LN81@erase@4

; 798  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 799  : 
; 800  : 			if (_Root() == _Erasednode)

$LN81@erase@4:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN89@erase@4

; 801  : 				_Root() = _Fixnode;	// link down from root

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [ecx+4], edx
	jmp	SHORT $LN32@erase@4

; 802  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

$LN89@erase@4:
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN93@erase@4

; 803  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	eax, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [edx], eax

; 804  : 			else

	jmp	SHORT $LN32@erase@4

; 805  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

$LN93@erase@4:
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	edx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [ecx+8], edx
$LN32@erase@4:

; 806  : 
; 807  : 			if (_Lmost() == _Erasednode)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T255943[ebp], ecx
	mov	edx, DWORD PTR $T255943[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN115@erase@4

; 808  : 				_Lmost() = _Isnil(_Fixnode)
; 809  : 					? _Fixnodeparent	// smallest is parent of erased node
; 810  : 					: _Min(_Fixnode);	// smallest in relinked subtree

	mov	ecx, DWORD PTR __Fixnode$[ebp]
	movsx	edx, BYTE PTR [ecx+17]
	test	edx, edx
	je	SHORT $LN43@erase@4
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv165[ebp], eax
	jmp	SHORT $LN44@erase@4
$LN43@erase@4:
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR $T255971[ebp], ecx
$LN107@erase@4:
	mov	edx, DWORD PTR $T255971[ebp]
	mov	eax, DWORD PTR [edx]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	jne	SHORT $LN103@erase@4
	mov	edx, DWORD PTR $T255971[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T255971[ebp], eax
	jmp	SHORT $LN107@erase@4
$LN103@erase@4:
	mov	ecx, DWORD PTR $T255971[ebp]
	mov	DWORD PTR tv165[ebp], ecx
$LN44@erase@4:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T255976[ebp], eax
	mov	ecx, DWORD PTR $T255976[ebp]
	mov	edx, DWORD PTR tv165[ebp]
	mov	DWORD PTR [ecx], edx

; 811  : 
; 812  : 			if (_Rmost() == _Erasednode)

$LN115@erase@4:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN28@erase@4

; 813  : 				_Rmost() = _Isnil(_Fixnode)
; 814  : 					? _Fixnodeparent	// largest is parent of erased node
; 815  : 					: _Max(_Fixnode);	// largest in relinked subtree

	mov	eax, DWORD PTR __Fixnode$[ebp]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN45@erase@4
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv177[ebp], edx
	jmp	SHORT $LN131@erase@4
$LN45@erase@4:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR $T256012[ebp], eax
$LN127@erase@4:
	mov	ecx, DWORD PTR $T256012[ebp]
	mov	edx, DWORD PTR [ecx+8]
	movsx	eax, BYTE PTR [edx+17]
	test	eax, eax
	jne	SHORT $LN123@erase@4
	mov	ecx, DWORD PTR $T256012[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T256012[ebp], edx
	jmp	SHORT $LN127@erase@4
$LN123@erase@4:
	mov	eax, DWORD PTR $T256012[ebp]
	mov	DWORD PTR tv177[ebp], eax
$LN131@erase@4:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR tv177[ebp]
	mov	DWORD PTR [edx+8], eax
$LN28@erase@4:

; 816  : 			}
; 817  : 		else

	jmp	$LN192@erase@4

; 818  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 819  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

$LN137@erase@4:
	mov	ecx, DWORD PTR __Erasednode$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [edx+4], eax

; 820  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR __Erasednode$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 821  : 
; 822  : 			if (_Pnode == _Right(_Erasednode))

	mov	ecx, DWORD PTR __Erasednode$[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN145@erase@4

; 823  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Fixnodeparent$[ebp], eax

; 824  : 			else

	jmp	SHORT $LN161@erase@4

; 825  : 				{	// successor further down, link in place of erased
; 826  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's

$LN145@erase@4:
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Fixnodeparent$[ebp], edx

; 827  : 				if (!_Isnil(_Fixnode))

	mov	eax, DWORD PTR __Fixnode$[ebp]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	jne	SHORT $LN151@erase@4

; 828  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

	mov	edx, DWORD PTR __Fixnode$[ebp]
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [edx+4], eax

; 829  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

$LN151@erase@4:
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	edx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [ecx], edx

; 830  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR __Erasednode$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx

; 831  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

	mov	eax, DWORD PTR __Erasednode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 832  : 				}
; 833  : 
; 834  : 			if (_Root() == _Erasednode)

$LN161@erase@4:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN169@erase@4

; 835  : 				_Root() = _Pnode;	// link down from root

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx+4], edx
	jmp	SHORT $LN183@erase@4

; 836  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

$LN169@erase@4:
	mov	eax, DWORD PTR __Erasednode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T256082[ebp], ecx
	mov	edx, DWORD PTR $T256082[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN179@erase@4

; 837  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

	mov	ecx, DWORD PTR __Erasednode$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T256089[ebp], edx
	mov	eax, DWORD PTR $T256089[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 838  : 			else

	jmp	SHORT $LN183@erase@4

; 839  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

$LN179@erase@4:
	mov	edx, DWORD PTR __Erasednode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 840  : 
; 841  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

$LN183@erase@4:
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR __Erasednode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 842  : 			_STD swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

	mov	edx, DWORD PTR __Erasednode$[ebp]
	add	edx, 16					; 00000010H
	mov	DWORD PTR $T256114[ebp], edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR $T256113[ebp], eax
	mov	ecx, DWORD PTR $T256113[ebp]
	cmp	ecx, DWORD PTR $T256114[ebp]
	je	SHORT $LN192@erase@4
	mov	edx, DWORD PTR $T256113[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR __Tmp$256112[ebp], al
	mov	ecx, DWORD PTR $T256113[ebp]
	mov	edx, DWORD PTR $T256114[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR [ecx], al
	mov	ecx, DWORD PTR $T256114[ebp]
	mov	dl, BYTE PTR __Tmp$256112[ebp]
	mov	BYTE PTR [ecx], dl

; 843  : 			}
; 844  : 
; 845  : 		if (_Color(_Erasednode) == _Black)

$LN192@erase@4:
	mov	eax, DWORD PTR __Erasednode$[ebp]
	movsx	ecx, BYTE PTR [eax+16]
	cmp	ecx, 1
	jne	$LN588@erase@4

; 846  : 			{	// erasing black link, must recolor/rebalance tree
; 847  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 848  : 				_Fixnodeparent = _Parent(_Fixnode))

	jmp	SHORT $LN196@erase@4
$LN194@erase@4:
	mov	edx, DWORD PTR __Fixnode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Fixnodeparent$[ebp], eax
$LN196@erase@4:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR __Fixnode$[ebp]
	cmp	eax, DWORD PTR [edx+4]
	je	$LN586@erase@4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	movsx	edx, BYTE PTR [ecx+16]
	cmp	edx, 1
	jne	$LN586@erase@4

; 849  : 				if (_Fixnode == _Left(_Fixnodeparent))

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN395@erase@4

; 850  : 					{	// fixup left subtree
; 851  : 					_Pnode = _Right(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR __Pnode$[ebp], eax

; 852  : 					if (_Color(_Pnode) == _Red)

	mov	ecx, DWORD PTR __Pnode$[ebp]
	movsx	edx, BYTE PTR [ecx+16]
	test	edx, edx
	jne	SHORT $LN263@erase@4

; 853  : 						{	// rotate red up from right subtree
; 854  : 						_Color(_Pnode) = _Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	BYTE PTR [eax+16], 1

; 855  : 						_Color(_Fixnodeparent) = _Red;

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	BYTE PTR [ecx+16], 0

; 856  : 						_Lrotate(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Lrotate

; 857  : 						_Pnode = _Right(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 858  : 						}
; 859  : 
; 860  : 					if (_Isnil(_Pnode))

$LN263@erase@4:
	mov	edx, DWORD PTR __Pnode$[ebp]
	movsx	eax, BYTE PTR [edx+17]
	test	eax, eax
	je	SHORT $LN267@erase@4

; 861  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], ecx

; 862  : 					else if (_Color(_Left(_Pnode)) == _Black

	jmp	$LN12@erase@4

; 863  : 						&& _Color(_Right(_Pnode)) == _Black)

$LN267@erase@4:
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx]
	movsx	ecx, BYTE PTR [eax+16]
	cmp	ecx, 1
	jne	SHORT $LN277@erase@4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	ecx, BYTE PTR [eax+16]
	cmp	ecx, 1
	jne	SHORT $LN277@erase@4

; 864  : 						{	// redden right subtree with black children
; 865  : 						_Color(_Pnode) = _Red;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	BYTE PTR [edx+16], 0

; 866  : 						_Fixnode = _Fixnodeparent;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], eax

; 867  : 						}
; 868  : 					else

	jmp	SHORT $LN12@erase@4

; 869  : 						{	// must rearrange right subtree
; 870  : 						if (_Color(_Right(_Pnode)) == _Black)

$LN277@erase@4:
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	movsx	eax, BYTE PTR [edx+16]
	cmp	eax, 1
	jne	SHORT $LN338@erase@4

; 871  : 							{	// rotate red up from left sub-subtree
; 872  : 							_Color(_Left(_Pnode)) = _Black;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	BYTE PTR [edx+16], 1

; 873  : 							_Color(_Pnode) = _Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	BYTE PTR [eax+16], 0

; 874  : 							_Rrotate(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Rrotate

; 875  : 							_Pnode = _Right(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR __Pnode$[ebp], eax

; 876  : 							}
; 877  : 
; 878  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

$LN338@erase@4:
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	al, BYTE PTR [edx+16]
	mov	BYTE PTR [ecx+16], al

; 879  : 						_Color(_Fixnodeparent) = _Black;

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	BYTE PTR [ecx+16], 1

; 880  : 						_Color(_Right(_Pnode)) = _Black;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	BYTE PTR [eax+16], 1

; 881  : 						_Lrotate(_Fixnodeparent);

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Lrotate

; 882  : 						break;	// tree now recolored/rebalanced

	jmp	$LN586@erase@4
$LN12@erase@4:

; 883  : 						}
; 884  : 					}
; 885  : 				else

	jmp	$LN8@erase@4

; 886  : 					{	// fixup right subtree
; 887  : 					_Pnode = _Left(_Fixnodeparent);

$LN395@erase@4:
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Pnode$[ebp], eax

; 888  : 					if (_Color(_Pnode) == _Red)

	mov	ecx, DWORD PTR __Pnode$[ebp]
	movsx	edx, BYTE PTR [ecx+16]
	test	edx, edx
	jne	SHORT $LN454@erase@4

; 889  : 						{	// rotate red up from left subtree
; 890  : 						_Color(_Pnode) = _Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	BYTE PTR [eax+16], 1

; 891  : 						_Color(_Fixnodeparent) = _Red;

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	BYTE PTR [ecx+16], 0

; 892  : 						_Rrotate(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Rrotate

; 893  : 						_Pnode = _Left(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 894  : 						}
; 895  : 					if (_Isnil(_Pnode))

$LN454@erase@4:
	mov	edx, DWORD PTR __Pnode$[ebp]
	movsx	eax, BYTE PTR [edx+17]
	test	eax, eax
	je	SHORT $LN458@erase@4

; 896  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], ecx

; 897  : 					else if (_Color(_Right(_Pnode)) == _Black

	jmp	$LN8@erase@4

; 898  : 						&& _Color(_Left(_Pnode)) == _Black)

$LN458@erase@4:
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	ecx, BYTE PTR [eax+16]
	cmp	ecx, 1
	jne	SHORT $LN468@erase@4
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx]
	movsx	ecx, BYTE PTR [eax+16]
	cmp	ecx, 1
	jne	SHORT $LN468@erase@4

; 899  : 						{	// redden left subtree with black children
; 900  : 						_Color(_Pnode) = _Red;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	BYTE PTR [edx+16], 0

; 901  : 						_Fixnode = _Fixnodeparent;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], eax

; 902  : 						}
; 903  : 					else

	jmp	SHORT $LN8@erase@4

; 904  : 						{	// must rearrange left subtree
; 905  : 						if (_Color(_Left(_Pnode)) == _Black)

$LN468@erase@4:
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR [ecx]
	movsx	eax, BYTE PTR [edx+16]
	cmp	eax, 1
	jne	SHORT $LN529@erase@4

; 906  : 							{	// rotate red up from right sub-subtree
; 907  : 							_Color(_Right(_Pnode)) = _Black;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	BYTE PTR [edx+16], 1

; 908  : 							_Color(_Pnode) = _Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	BYTE PTR [eax+16], 0

; 909  : 							_Lrotate(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Lrotate

; 910  : 							_Pnode = _Left(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Pnode$[ebp], eax

; 911  : 							}
; 912  : 
; 913  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

$LN529@erase@4:
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	al, BYTE PTR [edx+16]
	mov	BYTE PTR [ecx+16], al

; 914  : 						_Color(_Fixnodeparent) = _Black;

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	BYTE PTR [ecx+16], 1

; 915  : 						_Color(_Left(_Pnode)) = _Black;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	BYTE PTR [eax+16], 1

; 916  : 						_Rrotate(_Fixnodeparent);

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Rrotate

; 917  : 						break;	// tree now recolored/rebalanced

	jmp	SHORT $LN586@erase@4
$LN8@erase@4:

; 918  : 						}
; 919  : 					}

	jmp	$LN194@erase@4

; 920  : 
; 921  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

$LN586@erase@4:
	mov	edx, DWORD PTR __Fixnode$[ebp]
	mov	BYTE PTR [edx+16], 1

; 922  : 			}
; 923  : 
; 924  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node

$LN588@erase@4:

; 925  : 		this->_Alnod.deallocate(_Erasednode, 1);

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 926  : 
; 927  : 		if (0 < _Mysize)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jbe	SHORT $LN1@erase@4

; 928  : 			--_Mysize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN1@erase@4:

; 929  : 
; 930  : 		return (_Make_iter(_Where));	// return successor iterator

	mov	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T256715[ebp], edx
	mov	eax, DWORD PTR $T256715[ebp]
	mov	DWORD PTR $T256710[ebp], eax
	mov	ecx, DWORD PTR $T256710[ebp]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN42@erase@4:

; 931  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z$0:
	lea	ecx, DWORD PTR $T255858[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z ENDP ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::erase
PUBLIC	?_Erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Erase
; Function compile flags: /Odtp
;	COMDAT ?clear@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T256765 = -8						; size = 4
?clear@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::clear, COMDAT
; _this$ = ecx

; 965  : 		{	// erase all

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 966  : 
; 967  :  #if _HAS_ITERATOR_DEBUGGING
; 968  : 		this->_Orphan_ptr(*this, 0);
; 969  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 970  : 
; 971  : 		_Erase(_Root());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Erase

; 972  : 		_Root() = _Myhead, _Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0

; 973  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T256765[ebp], eax
	mov	ecx, DWORD PTR $T256765[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+8], ecx

; 974  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::clear
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Node>::allocate
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@XZ$0
__unwindtable$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@XZ$2
__ehfuncinfo$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
tv72 = -96						; size = 4
tv182 = -92						; size = 4
tv177 = -88						; size = 4
_this$ = -84						; size = 4
$T256880 = -80						; size = 4
__Vptr$256878 = -76					; size = 4
$T256851 = -72						; size = 4
__Vptr$256849 = -68					; size = 4
$T256822 = -64						; size = 4
__Vptr$256820 = -60					; size = 4
$T256782 = -36						; size = 4
$T256781 = -32						; size = 4
$T256780 = -28						; size = 4
__Wherenode$ = -24					; size = 4
__Linkcnt$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1383 : 		{	// allocate a head/nil node

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1384 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1
	call	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Node>::allocate
	mov	DWORD PTR __Wherenode$[ebp], eax

; 1385 : 		int _Linkcnt = 0;

	mov	DWORD PTR __Linkcnt$[ebp], 0

; 1386 : 
; 1387 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1388 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

	mov	DWORD PTR $T256780[ebp], 0
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR __Vptr$256820[ebp], eax
	mov	ecx, DWORD PTR __Vptr$256820[ebp]
	mov	DWORD PTR $T256822[ebp], ecx
	cmp	DWORD PTR $T256822[ebp], 0
	je	SHORT $LN23@Buynode@2
	mov	edx, DWORD PTR $T256822[ebp]
	mov	eax, DWORD PTR $T256780[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T256822[ebp]
	mov	DWORD PTR tv177[ebp], ecx
	jmp	SHORT $LN19@Buynode@2
$LN23@Buynode@2:
	mov	DWORD PTR tv177[ebp], 0
$LN19@Buynode@2:

; 1389 : 		++_Linkcnt;

	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx

; 1390 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

	mov	DWORD PTR $T256781[ebp], 0
	mov	eax, DWORD PTR __Wherenode$[ebp]
	add	eax, 4
	mov	DWORD PTR __Vptr$256849[ebp], eax
	mov	ecx, DWORD PTR __Vptr$256849[ebp]
	mov	DWORD PTR $T256851[ebp], ecx
	cmp	DWORD PTR $T256851[ebp], 0
	je	SHORT $LN33@Buynode@2
	mov	edx, DWORD PTR $T256851[ebp]
	mov	eax, DWORD PTR $T256781[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T256851[ebp]
	mov	DWORD PTR tv182[ebp], ecx
	jmp	SHORT $LN29@Buynode@2
$LN33@Buynode@2:
	mov	DWORD PTR tv182[ebp], 0
$LN29@Buynode@2:

; 1391 : 		++_Linkcnt;

	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx

; 1392 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

	mov	DWORD PTR $T256782[ebp], 0
	mov	eax, DWORD PTR __Wherenode$[ebp]
	add	eax, 8
	mov	DWORD PTR __Vptr$256878[ebp], eax
	mov	ecx, DWORD PTR __Vptr$256878[ebp]
	mov	DWORD PTR $T256880[ebp], ecx
	cmp	DWORD PTR $T256880[ebp], 0
	je	SHORT $LN43@Buynode@2
	mov	edx, DWORD PTR $T256880[ebp]
	mov	eax, DWORD PTR $T256782[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T256880[ebp]
	mov	DWORD PTR tv72[ebp], ecx
	jmp	SHORT $LN39@Buynode@2
$LN43@Buynode@2:
	mov	DWORD PTR tv72[ebp], 0
$LN39@Buynode@2:
	jmp	SHORT $LN6@Buynode@2
__catch$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@XZ$0:

; 1393 : 		_CATCH_ALL
; 1394 : 		if (1 < _Linkcnt)
; 1395 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1396 : 		if (0 < _Linkcnt)
; 1397 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1398 : 		this->_Alnod.deallocate(_Wherenode, 1);

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1399 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1400 : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN61@Buynode@2
	ret	0
$LN6@Buynode@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 1401 : 		_Color(_Wherenode) = _Black;

$LN61@Buynode@2:
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	BYTE PTR [eax+16], 1

; 1402 : 		_Isnil(_Wherenode) = false;

	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	BYTE PTR [ecx+17], 0

; 1403 : 		return (_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
$LN5@Buynode@2:

; 1404 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-100]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Buynode
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 144  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Node>
	add	esp, 8

; 146  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Node>::allocate
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T256975 = -16						; size = 4
$T256954 = -12						; size = 4
$T256947 = -8						; size = 4
__Pnode$230944 = -4					; size = 4
?_Dec@const_iterator@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 320  : 			{	// move to node with next smaller value

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 321  : 
; 322  :  #if _HAS_ITERATOR_DEBUGGING
; 323  : 			if (this->_Mycont == 0
; 324  : 				|| _Ptr == 0)
; 325  : 				{
; 326  : 				_DEBUG_ERROR("map/set iterator not decrementable");
; 327  : 				_SCL_SECURE_INVALID_ARGUMENT;
; 328  : 				}
; 329  :  #else
; 330  : 			_SCL_SECURE_VALIDATE(this->_Has_container());
; 331  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 332  : 
; 333  : 			if (_Isnil(_Ptr))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx+17]
	test	edx, edx
	je	SHORT $LN9@Dec

; 334  : 			{
; 335  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx], eax

; 336  :    				if (_Isnil(_Ptr))

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	movsx	eax, BYTE PTR [edx+17]
	test	eax, eax
	je	SHORT $LN8@Dec

; 337  : #if _HAS_ITERATOR_DEBUGGING
; 338  : 				{
; 339  : 					_DEBUG_ERROR("map/set iterator not decrementable");
; 340  : 					_SCL_SECURE_OUT_OF_RANGE;
; 341  : 				}
; 342  : #elif _SECURE_SCL
; 343  : 				{
; 344  :     				_SCL_SECURE_OUT_OF_RANGE;
; 345  : 				}
; 346  : #else
; 347  : 				return;	// begin() shouldn't be incremented, don't move

	jmp	$LN10@Dec
$LN8@Dec:

; 348  : #endif
; 349  : 			}

	jmp	$LN10@Dec
$LN9@Dec:

; 350  : 			else if (!_Isnil(_Left(_Ptr)))

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T256947[ebp], edx
	mov	eax, DWORD PTR $T256947[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx+17]
	test	edx, edx
	jne	SHORT $LN34@Dec

; 351  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T256954[ebp], ecx
	mov	edx, DWORD PTR $T256954[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T256975[ebp], eax
$LN30@Dec:
	mov	ecx, DWORD PTR $T256975[ebp]
	mov	edx, DWORD PTR [ecx+8]
	movsx	eax, BYTE PTR [edx+17]
	test	eax, eax
	jne	SHORT $LN26@Dec
	mov	ecx, DWORD PTR $T256975[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T256975[ebp], edx
	jmp	SHORT $LN30@Dec
$LN26@Dec:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T256975[ebp]
	mov	DWORD PTR [eax], ecx

; 352  : 			else

	jmp	SHORT $LN10@Dec

; 353  : 				{	// climb looking for left subtree
; 354  : 				_Nodeptr _Pnode;
; 355  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 356  : 					&& _Ptr == _Left(_Pnode))

$LN34@Dec:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Pnode$230944[ebp], ecx
	mov	edx, DWORD PTR __Pnode$230944[ebp]
	movsx	eax, BYTE PTR [edx+17]
	test	eax, eax
	jne	SHORT $LN40@Dec
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$230944[ebp]
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN40@Dec

; 357  : 					_Ptr = _Pnode;	// ==> parent while left subtree

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$230944[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	SHORT $LN34@Dec

; 358  : 				if (_Isnil(_Ptr))

$LN40@Dec:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx+17]
	test	edx, edx
	je	SHORT $LN2@Dec

; 359  :  #if _HAS_ITERATOR_DEBUGGING
; 360  :  					{
; 361  : 					_DEBUG_ERROR("map/set iterator not decrementable");
; 362  : 					_SCL_SECURE_OUT_OF_RANGE;
; 363  : 					}
; 364  :  #elif _SECURE_SCL
; 365  : 					{
; 366  : 					_SCL_SECURE_OUT_OF_RANGE;
; 367  : 					}
; 368  :  #else
; 369  : 					return;	// begin() shouldn't be incremented, don't move

	jmp	SHORT $LN10@Dec

; 370  :  #endif
; 371  : 				else

	jmp	SHORT $LN10@Dec
$LN2@Dec:

; 372  : 					_Ptr = _Pnode;	// ==> parent if not head

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$230944[ebp]
	mov	DWORD PTR [eax], ecx
$LN10@Dec:

; 373  : 				}
; 374  : 			}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Dec@const_iterator@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::const_iterator::_Dec
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$230982 = -4					; size = 4
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Erase, COMDAT
; _this$ = ecx

; 1166 : 		{	// free entire subtree, recursively

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1167 : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

	mov	eax, DWORD PTR __Rootnode$[ebp]
	mov	DWORD PTR __Pnode$230982[ebp], eax
	jmp	SHORT $LN6@Erase
$LN2@Erase:
	mov	ecx, DWORD PTR __Pnode$230982[ebp]
	mov	DWORD PTR __Rootnode$[ebp], ecx
$LN6@Erase:
	mov	edx, DWORD PTR __Pnode$230982[ebp]
	movsx	eax, BYTE PTR [edx+17]
	test	eax, eax
	jne	SHORT $LN4@Erase

; 1168 : 			{	// free subtrees, then node
; 1169 : 			_Erase(_Right(_Pnode));

	mov	ecx, DWORD PTR __Pnode$230982[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Erase

; 1170 : 			_Pnode = _Left(_Pnode);

	mov	eax, DWORD PTR __Pnode$230982[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$230982[ebp], ecx

; 1171 : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 1172 : 			this->_Alnod.deallocate(_Rootnode, 1);

	mov	edx, DWORD PTR __Rootnode$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1173 : 			}

	jmp	SHORT $LN2@Erase
$LN4@Erase:

; 1174 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Erase@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Erase
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\set
_TEXT	ENDS
;	COMDAT ??0?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@QAE@U?$less@W4MinorCivQuestTypes@@@1@V?$allocator@W4MinorCivQuestTypes@@@1@@Z
_TEXT	SEGMENT
tv87 = -20						; size = 4
_this$ = -16						; size = 4
$T257021 = -9						; size = 1
$T257017 = -8						; size = 4
__Parg$ = 8						; size = 1
__Al$ = 12						; size = 1
??0?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@QAE@U?$less@W4MinorCivQuestTypes@@@1@V?$allocator@W4MinorCivQuestTypes@@@1@@Z PROC ; std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0>::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T257021[ebp]
	mov	DWORD PTR $T257017[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv87[ebp], ecx

; 39   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@QAE@U?$less@W4MinorCivQuestTypes@@@1@V?$allocator@W4MinorCivQuestTypes@@@1@@Z ENDP ; std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0>::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T257058 = -16						; size = 4
$T257037 = -12						; size = 4
$T257030 = -8						; size = 4
__Pnode$231030 = -4					; size = 4
?_Inc@const_iterator@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 377  : 			{	// move to node with next larger value

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 378  : 
; 379  :  #if _HAS_ITERATOR_DEBUGGING
; 380  : 			if (this->_Mycont == 0
; 381  : 				|| _Ptr == 0
; 382  : 				|| _Isnil(_Ptr))
; 383  : 				{
; 384  : 				_DEBUG_ERROR("map/set iterator not incrementable");
; 385  : 				_SCL_SECURE_OUT_OF_RANGE;
; 386  : 				}
; 387  :  #else
; 388  : 			_SCL_SECURE_VALIDATE(this->_Has_container());
; 389  : 			if (_Isnil(_Ptr))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx+17]
	test	edx, edx
	je	SHORT $LN6@Inc
	jmp	$LN7@Inc
$LN6@Inc:

; 390  : 				{
; 391  : 				_SCL_SECURE_OUT_OF_RANGE;
; 392  : 				// end() shouldn't be incremented, don't move if _SCL_SECURE is not turned on
; 393  : 				}
; 394  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 395  : 
; 396  : 			else if (!_Isnil(_Right(_Ptr)))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 8
	mov	DWORD PTR $T257030[ebp], ecx
	mov	edx, DWORD PTR $T257030[ebp]
	mov	eax, DWORD PTR [edx]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	jne	SHORT $LN27@Inc

; 397  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 8
	mov	DWORD PTR $T257037[ebp], eax
	mov	ecx, DWORD PTR $T257037[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T257058[ebp], edx
$LN23@Inc:
	mov	eax, DWORD PTR $T257058[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx+17]
	test	edx, edx
	jne	SHORT $LN19@Inc
	mov	eax, DWORD PTR $T257058[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T257058[ebp], ecx
	jmp	SHORT $LN23@Inc
$LN19@Inc:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T257058[ebp]
	mov	DWORD PTR [edx], eax

; 398  : 			else

	jmp	SHORT $LN7@Inc

; 399  : 				{	// climb looking for right subtree
; 400  : 				_Nodeptr _Pnode;
; 401  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 402  : 					&& _Ptr == _Right(_Pnode))

$LN27@Inc:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Pnode$231030[ebp], eax
	mov	ecx, DWORD PTR __Pnode$231030[ebp]
	movsx	edx, BYTE PTR [ecx+17]
	test	edx, edx
	jne	SHORT $LN1@Inc
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$231030[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN1@Inc

; 403  : 					_Ptr = _Pnode;	// ==> parent while right subtree

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$231030[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN27@Inc
$LN1@Inc:

; 404  : 				_Ptr = _Pnode;	// ==> parent (head if end())

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$231030[ebp]
	mov	DWORD PTR [edx], eax
$LN7@Inc:

; 405  : 				}
; 406  : 			}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Inc@const_iterator@?$_Tree@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::const_iterator::_Inc
_TEXT	ENDS
EXTRN	__imp_?PushArgument@String@Localization@@QAE_NPBD@Z:PROC
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvlocalization\include\cvlocalization.h
;	COMDAT ??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z PROC	; operator<<<char const *>, COMDAT

; 490  : {

	push	ebp
	mov	ebp, esp

; 491  : 	s.PushArgument(val);

	mov	eax, DWORD PTR _val$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z

; 492  : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 493  : }

	pop	ebp
	ret	0
??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ENDP	; operator<<<char const *>
_TEXT	ENDS
EXTRN	__imp_?PushArgument@String@Localization@@QAE_NH@Z:PROC
; Function compile flags: /Odtp
;	COMDAT ??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z PROC	; operator<<<int>, COMDAT

; 490  : {

	push	ebp
	mov	ebp, esp

; 491  : 	s.PushArgument(val);

	mov	eax, DWORD PTR _val$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 492  : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 493  : }

	pop	ebp
	ret	0
??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ENDP	; operator<<<int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z PROC ; operator<<<CvString>, COMDAT

; 490  : {

	push	ebp
	mov	ebp, esp

; 491  : 	s.PushArgument(val);

	mov	ecx, DWORD PTR _val$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z

; 492  : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 493  : }

	pop	ebp
	ret	0
??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ENDP ; operator<<<CvString>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fdatastream.h
_TEXT	ENDS
;	COMDAT ??$?5_N$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@_N@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??$?5_N$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@_N@Z PROC	; operator>><bool,22>, COMDAT

; 234  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 235  : 	size_t i = 0;

	mov	DWORD PTR _i$[ebp], 0

; 236  : 	for(i = 0; i < count; ++i)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@operator@3
$LN2@operator@3:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@operator@3:
	cmp	DWORD PTR _i$[ebp], 22			; 00000016H
	jae	SHORT $LN1@operator@3

; 237  : 	{
; 238  : 		loadFrom >> writeTo[i];

	mov	ecx, DWORD PTR _writeTo$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 239  : 	}

	jmp	SHORT $LN2@operator@3
$LN1@operator@3:

; 240  : 	return loadFrom;

	mov	eax, DWORD PTR _loadFrom$[ebp]

; 241  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$?5_N$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@_N@Z ENDP	; operator>><bool,22>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?5$$BY0BG@H$0BG@@@YAAAVFDataStream@@AAV0@AAY1BG@BG@H@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??$?5$$BY0BG@H$0BG@@@YAAAVFDataStream@@AAV0@AAY1BG@BG@H@Z PROC ; operator>><int [22],22>, COMDAT

; 234  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 235  : 	size_t i = 0;

	mov	DWORD PTR _i$[ebp], 0

; 236  : 	for(i = 0; i < count; ++i)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@operator@4
$LN2@operator@4:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@operator@4:
	cmp	DWORD PTR _i$[ebp], 22			; 00000016H
	jae	SHORT $LN1@operator@4

; 237  : 	{
; 238  : 		loadFrom >> writeTo[i];

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 88					; 00000058H
	add	ecx, DWORD PTR _writeTo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _loadFrom$[ebp]
	push	edx
	call	??$?5H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@H@Z ; operator>><int,22>
	add	esp, 8

; 239  : 	}

	jmp	SHORT $LN2@operator@4
$LN1@operator@4:

; 240  : 	return loadFrom;

	mov	eax, DWORD PTR _loadFrom$[ebp]

; 241  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$?5$$BY0BG@H$0BG@@@YAAAVFDataStream@@AAV0@AAY1BG@BG@H@Z ENDP ; operator>><int [22],22>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?5H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@H@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??$?5H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@H@Z PROC	; operator>><int,22>, COMDAT

; 234  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 235  : 	size_t i = 0;

	mov	DWORD PTR _i$[ebp], 0

; 236  : 	for(i = 0; i < count; ++i)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@operator@5
$LN2@operator@5:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@operator@5:
	cmp	DWORD PTR _i$[ebp], 22			; 00000016H
	jae	SHORT $LN1@operator@5

; 237  : 	{
; 238  : 		loadFrom >> writeTo[i];

	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _writeTo$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 239  : 	}

	jmp	SHORT $LN2@operator@5
$LN1@operator@5:

; 240  : 	return loadFrom;

	mov	eax, DWORD PTR _loadFrom$[ebp]

; 241  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$?5H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@H@Z ENDP	; operator>><int,22>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?5_N$0FA@@@YAAAVFDataStream@@AAV0@AAY0FA@_N@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??$?5_N$0FA@@@YAAAVFDataStream@@AAV0@AAY0FA@_N@Z PROC	; operator>><bool,80>, COMDAT

; 234  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 235  : 	size_t i = 0;

	mov	DWORD PTR _i$[ebp], 0

; 236  : 	for(i = 0; i < count; ++i)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@operator@6
$LN2@operator@6:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@operator@6:
	cmp	DWORD PTR _i$[ebp], 80			; 00000050H
	jae	SHORT $LN1@operator@6

; 237  : 	{
; 238  : 		loadFrom >> writeTo[i];

	mov	ecx, DWORD PTR _writeTo$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 239  : 	}

	jmp	SHORT $LN2@operator@6
$LN1@operator@6:

; 240  : 	return loadFrom;

	mov	eax, DWORD PTR _loadFrom$[ebp]

; 241  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$?5_N$0FA@@@YAAAVFDataStream@@AAV0@AAY0FA@_N@Z ENDP	; operator>><bool,80>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?6_N$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CB_N@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??$?6_N$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CB_N@Z PROC ; operator<<<bool,22>, COMDAT

; 223  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 224  : 	size_t i = 0;

	mov	DWORD PTR _i$[ebp], 0

; 225  : 	for(i = 0; i < count; ++i)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@operator@7
$LN2@operator@7:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@operator@7:
	cmp	DWORD PTR _i$[ebp], 22			; 00000016H
	jae	SHORT $LN1@operator@7

; 226  : 	{
; 227  : 		saveTo << readFrom[i];

	mov	ecx, DWORD PTR _readFrom$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 228  : 	}

	jmp	SHORT $LN2@operator@7
$LN1@operator@7:

; 229  : 	return saveTo;

	mov	eax, DWORD PTR _saveTo$[ebp]

; 230  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$?6_N$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CB_N@Z ENDP ; operator<<<bool,22>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?6$$BY0BG@$$CBH$0BG@@@YAAAVFDataStream@@AAV0@AAY1BG@BG@$$CBH@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??$?6$$BY0BG@$$CBH$0BG@@@YAAAVFDataStream@@AAV0@AAY1BG@BG@$$CBH@Z PROC ; operator<<<int const [22],22>, COMDAT

; 223  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 224  : 	size_t i = 0;

	mov	DWORD PTR _i$[ebp], 0

; 225  : 	for(i = 0; i < count; ++i)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@operator@8
$LN2@operator@8:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@operator@8:
	cmp	DWORD PTR _i$[ebp], 22			; 00000016H
	jae	SHORT $LN1@operator@8

; 226  : 	{
; 227  : 		saveTo << readFrom[i];

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 88					; 00000058H
	add	ecx, DWORD PTR _readFrom$[ebp]
	push	ecx
	mov	edx, DWORD PTR _saveTo$[ebp]
	push	edx
	call	??$?6H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CBH@Z ; operator<<<int,22>
	add	esp, 8

; 228  : 	}

	jmp	SHORT $LN2@operator@8
$LN1@operator@8:

; 229  : 	return saveTo;

	mov	eax, DWORD PTR _saveTo$[ebp]

; 230  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$?6$$BY0BG@$$CBH$0BG@@@YAAAVFDataStream@@AAV0@AAY1BG@BG@$$CBH@Z ENDP ; operator<<<int const [22],22>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?6H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CBH@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??$?6H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CBH@Z PROC	; operator<<<int,22>, COMDAT

; 223  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 224  : 	size_t i = 0;

	mov	DWORD PTR _i$[ebp], 0

; 225  : 	for(i = 0; i < count; ++i)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@operator@9
$LN2@operator@9:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@operator@9:
	cmp	DWORD PTR _i$[ebp], 22			; 00000016H
	jae	SHORT $LN1@operator@9

; 226  : 	{
; 227  : 		saveTo << readFrom[i];

	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _readFrom$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	push	eax
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 228  : 	}

	jmp	SHORT $LN2@operator@9
$LN1@operator@9:

; 229  : 	return saveTo;

	mov	eax, DWORD PTR _saveTo$[ebp]

; 230  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$?6H$0BG@@@YAAAVFDataStream@@AAV0@AAY0BG@$$CBH@Z ENDP	; operator<<<int,22>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?6_N$0FA@@@YAAAVFDataStream@@AAV0@AAY0FA@$$CB_N@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??$?6_N$0FA@@@YAAAVFDataStream@@AAV0@AAY0FA@$$CB_N@Z PROC ; operator<<<bool,80>, COMDAT

; 223  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 224  : 	size_t i = 0;

	mov	DWORD PTR _i$[ebp], 0

; 225  : 	for(i = 0; i < count; ++i)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@operator@10
$LN2@operator@10:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@operator@10:
	cmp	DWORD PTR _i$[ebp], 80			; 00000050H
	jae	SHORT $LN1@operator@10

; 226  : 	{
; 227  : 		saveTo << readFrom[i];

	mov	ecx, DWORD PTR _readFrom$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 228  : 	}

	jmp	SHORT $LN2@operator@10
$LN1@operator@10:

; 229  : 	return saveTo;

	mov	eax, DWORD PTR _saveTo$[ebp]

; 230  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$?6_N$0FA@@@YAAAVFDataStream@@AAV0@AAY0FA@$$CB_N@Z ENDP ; operator<<<bool,80>
_TEXT	ENDS
EXTRN	__imp_?PushArgument@String@Localization@@QAE_NPBDI@Z:PROC
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvlocalization\include\cvlocalization.h
;	COMDAT ??$?6$0DA@@@YAAAVString@Localization@@AAV01@AAY0DA@$$CBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6$0DA@@@YAAAVString@Localization@@AAV01@AAY0DA@$$CBD@Z PROC ; operator<<<48>, COMDAT

; 497  : {

	push	ebp
	mov	ebp, esp

; 498  : 	s.PushArgument(val, N - 1);

	push	47					; 0000002fH
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBDI@Z

; 499  : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 500  : }

	pop	ebp
	ret	0
??$?6$0DA@@@YAAAVString@Localization@@AAV01@AAY0DA@$$CBD@Z ENDP ; operator<<<48>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?6$0DC@@@YAAAVString@Localization@@AAV01@AAY0DC@$$CBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6$0DC@@@YAAAVString@Localization@@AAV01@AAY0DC@$$CBD@Z PROC ; operator<<<50>, COMDAT

; 497  : {

	push	ebp
	mov	ebp, esp

; 498  : 	s.PushArgument(val, N - 1);

	push	49					; 00000031H
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBDI@Z

; 499  : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 500  : }

	pop	ebp
	ret	0
??$?6$0DC@@@YAAAVString@Localization@@AAV01@AAY0DC@$$CBD@Z ENDP ; operator<<<50>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?6$0CO@@@YAAAVString@Localization@@AAV01@AAY0CO@$$CBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6$0CO@@@YAAAVString@Localization@@AAV01@AAY0CO@$$CBD@Z PROC ; operator<<<46>, COMDAT

; 497  : {

	push	ebp
	mov	ebp, esp

; 498  : 	s.PushArgument(val, N - 1);

	push	45					; 0000002dH
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBDI@Z

; 499  : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 500  : }

	pop	ebp
	ret	0
??$?6$0CO@@@YAAAVString@Localization@@AAV01@AAY0CO@$$CBD@Z ENDP ; operator<<<46>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?6$0DG@@@YAAAVString@Localization@@AAV01@AAY0DG@$$CBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6$0DG@@@YAAAVString@Localization@@AAV01@AAY0DG@$$CBD@Z PROC ; operator<<<54>, COMDAT

; 497  : {

	push	ebp
	mov	ebp, esp

; 498  : 	s.PushArgument(val, N - 1);

	push	53					; 00000035H
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBDI@Z

; 499  : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 500  : }

	pop	ebp
	ret	0
??$?6$0DG@@@YAAAVString@Localization@@AAV01@AAY0DG@$$CBD@Z ENDP ; operator<<<54>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?6$0DB@@@YAAAVString@Localization@@AAV01@AAY0DB@$$CBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6$0DB@@@YAAAVString@Localization@@AAV01@AAY0DB@$$CBD@Z PROC ; operator<<<49>, COMDAT

; 497  : {

	push	ebp
	mov	ebp, esp

; 498  : 	s.PushArgument(val, N - 1);

	push	48					; 00000030H
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBDI@Z

; 499  : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 500  : }

	pop	ebp
	ret	0
??$?6$0DB@@@YAAAVString@Localization@@AAV01@AAY0DB@$$CBD@Z ENDP ; operator<<<49>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?6$0CP@@@YAAAVString@Localization@@AAV01@AAY0CP@$$CBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6$0CP@@@YAAAVString@Localization@@AAV01@AAY0CP@$$CBD@Z PROC ; operator<<<47>, COMDAT

; 497  : {

	push	ebp
	mov	ebp, esp

; 498  : 	s.PushArgument(val, N - 1);

	push	46					; 0000002eH
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBDI@Z

; 499  : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 500  : }

	pop	ebp
	ret	0
??$?6$0CP@@@YAAAVString@Localization@@AAV01@AAY0CP@$$CBD@Z ENDP ; operator<<<47>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?6$0CH@@@YAAAVString@Localization@@AAV01@AAY0CH@$$CBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6$0CH@@@YAAAVString@Localization@@AAV01@AAY0CH@$$CBD@Z PROC ; operator<<<39>, COMDAT

; 497  : {

	push	ebp
	mov	ebp, esp

; 498  : 	s.PushArgument(val, N - 1);

	push	38					; 00000026H
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBDI@Z

; 499  : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 500  : }

	pop	ebp
	ret	0
??$?6$0CH@@@YAAAVString@Localization@@AAV01@AAY0CH@$$CBD@Z ENDP ; operator<<<39>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?6$0DD@@@YAAAVString@Localization@@AAV01@AAY0DD@$$CBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6$0DD@@@YAAAVString@Localization@@AAV01@AAY0DD@$$CBD@Z PROC ; operator<<<51>, COMDAT

; 497  : {

	push	ebp
	mov	ebp, esp

; 498  : 	s.PushArgument(val, N - 1);

	push	50					; 00000032H
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBDI@Z

; 499  : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 500  : }

	pop	ebp
	ret	0
??$?6$0DD@@@YAAAVString@Localization@@AAV01@AAY0DD@$$CBD@Z ENDP ; operator<<<51>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?6$0CI@@@YAAAVString@Localization@@AAV01@AAY0CI@$$CBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6$0CI@@@YAAAVString@Localization@@AAV01@AAY0CI@$$CBD@Z PROC ; operator<<<40>, COMDAT

; 497  : {

	push	ebp
	mov	ebp, esp

; 498  : 	s.PushArgument(val, N - 1);

	push	39					; 00000027H
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBDI@Z

; 499  : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 500  : }

	pop	ebp
	ret	0
??$?6$0CI@@@YAAAVString@Localization@@AAV01@AAY0CI@$$CBD@Z ENDP ; operator<<<40>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?6$0CN@@@YAAAVString@Localization@@AAV01@AAY0CN@$$CBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6$0CN@@@YAAAVString@Localization@@AAV01@AAY0CN@$$CBD@Z PROC ; operator<<<45>, COMDAT

; 497  : {

	push	ebp
	mov	ebp, esp

; 498  : 	s.PushArgument(val, N - 1);

	push	44					; 0000002cH
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBDI@Z

; 499  : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 500  : }

	pop	ebp
	ret	0
??$?6$0CN@@@YAAAVString@Localization@@AAV01@AAY0CN@$$CBD@Z ENDP ; operator<<<45>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\eventsystem\fastdelegate.h
_TEXT	ENDS
;	COMDAT ??$MakeDelegate@VCvGame@@V1@HPBDH@fastdelegate@@YA?AV?$FastDelegate2@HPBDH@0@PAVCvGame@@P82@AEHHPBD@Z@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
_func$ = 16						; size = 4
??$MakeDelegate@VCvGame@@V1@HPBDH@fastdelegate@@YA?AV?$FastDelegate2@HPBDH@0@PAVCvGame@@P82@AEHHPBD@Z@Z PROC ; fastdelegate::MakeDelegate<CvGame,CvGame,int,char const *,int>, COMDAT

; 2030 : FastDelegate2<Param1, Param2, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2)) { 

	push	ebp
	mov	ebp, esp

; 2031 : 	return FastDelegate2<Param1, Param2, FASTDLGT_RETTYPE>(x, func);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR _func$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2032 : }

	pop	ebp
	ret	0
??$MakeDelegate@VCvGame@@V1@HPBDH@fastdelegate@@YA?AV?$FastDelegate2@HPBDH@0@PAVCvGame@@P82@AEHHPBD@Z@Z ENDP ; fastdelegate::MakeDelegate<CvGame,CvGame,int,char const *,int>
_TEXT	ENDS
EXTRN	__imp_?PushArgument@String@Localization@@QAE_NM@Z:PROC
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvlocalization\include\cvlocalization.h
;	COMDAT ??$?6M@@YAAAVString@Localization@@AAV01@ABM@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6M@@YAAAVString@Localization@@AAV01@ABM@Z PROC	; operator<<<float>, COMDAT

; 490  : {

	push	ebp
	mov	ebp, esp

; 491  : 	s.PushArgument(val);

	mov	eax, DWORD PTR _val$[ebp]
	push	ecx
	fld	DWORD PTR [eax]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NM@Z

; 492  : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 493  : }

	pop	ebp
	ret	0
??$?6M@@YAAAVString@Localization@@AAV01@ABM@Z ENDP	; operator<<<float>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Unchecked_move_backward@PAVCvString@@PAV1@@stdext@@YAPAVCvString@@PAV1@00@Z
_TEXT	SEGMENT
$T257217 = -34						; size = 1
$T257216 = -33						; size = 1
$T257215 = -32						; size = 4
$T257214 = -28						; size = 4
$T257200 = -21						; size = 1
$T257199 = -20						; size = 4
$T257198 = -16						; size = 4
$T257197 = -12						; size = 4
__Cat$257206 = -8					; size = 1
$T257203 = -7						; size = 1
$T257202 = -6						; size = 1
__Cat$257175 = -4					; size = 1
$T257171 = -3						; size = 1
$T257170 = -2						; size = 1
$T257169 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAVCvString@@PAV1@@stdext@@YAPAVCvString@@PAV1@00@Z PROC ; stdext::_Unchecked_move_backward<CvString *,CvString *>, COMDAT

; 3694 : 	{	// move [_First, _Last) backwards to [..., _Dest)

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	xor	eax, eax
	mov	BYTE PTR $T257169[ebp], al
	mov	cl, BYTE PTR __Cat$257175[ebp]
	mov	BYTE PTR $T257170[ebp], cl
	mov	dl, BYTE PTR $T257169[ebp]
	mov	BYTE PTR $T257217[ebp], dl
	mov	al, BYTE PTR $T257171[ebp]
	mov	BYTE PTR $T257216[ebp], al
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T257215[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T257214[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T257202[ebp], al
	mov	cl, BYTE PTR __Cat$257206[ebp]
	mov	BYTE PTR $T257203[ebp], cl
	mov	dl, BYTE PTR $T257202[ebp]
	mov	BYTE PTR $T257200[ebp], dl
	mov	eax, DWORD PTR $T257215[ebp]
	mov	DWORD PTR $T257199[ebp], eax
	mov	ecx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T257198[ebp], ecx
	mov	edx, DWORD PTR $T257214[ebp]
	mov	DWORD PTR $T257197[ebp], edx
$LN12@Unchecked_:
	mov	eax, DWORD PTR $T257197[ebp]
	cmp	eax, DWORD PTR $T257198[ebp]
	je	SHORT $LN7@Unchecked_
	mov	ecx, DWORD PTR $T257198[ebp]
	sub	ecx, 28					; 0000001cH
	mov	DWORD PTR $T257198[ebp], ecx
	mov	edx, DWORD PTR $T257199[ebp]
	sub	edx, 28					; 0000001cH
	mov	DWORD PTR $T257199[ebp], edx
	mov	eax, DWORD PTR $T257198[ebp]
	push	eax
	mov	ecx, DWORD PTR $T257199[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	jmp	SHORT $LN12@Unchecked_
$LN7@Unchecked_:
	mov	eax, DWORD PTR $T257199[ebp]

; 3697 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unchecked_move_backward@PAVCvString@@PAV1@@stdext@@YAPAVCvString@@PAV1@00@Z ENDP ; stdext::_Unchecked_move_backward<CvString *,CvString *>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R0?AVbad_alloc@std@@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
xdata$x	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_Ebad_alloc@std@@UAEPAXI@Z ; std::bad_alloc::`vftable'
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
CONST	ENDS
;	COMDAT ??$_Allocate@VCvString@@@std@@YAPAVCvString@@IPAV1@@Z
_TEXT	SEGMENT
$T257224 = -16						; size = 4
$T257220 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@VCvString@@@std@@YAPAVCvString@@IPAV1@@Z PROC ; std::_Allocate<CvString>, COMDAT

; 36   : 	{	// check for integer overflow

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 37   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate

; 38   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate
$LN3@Allocate:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 28					; 0000001cH
	jae	SHORT $LN2@Allocate

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	mov	DWORD PTR $T257224[ebp], 0
	lea	eax, DWORD PTR $T257224[ebp]
	push	eax
	lea	ecx, DWORD PTR $T257220[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR $T257220[ebp], OFFSET ??_7bad_alloc@std@@6B@
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T257220[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@Allocate:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	mov	edx, DWORD PTR __Count$[ebp]
	imul	edx, 28					; 0000001cH
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate:

; 44   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@VCvString@@@std@@YAPAVCvString@@IPAV1@@Z ENDP ; std::_Allocate<CvString>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
_TEXT	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 380  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 381  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN1@scalar@5
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Allocate@W4ResourceTypes@@@std@@YAPAW4ResourceTypes@@IPAW41@@Z
_TEXT	SEGMENT
$T257238 = -16						; size = 4
$T257234 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@W4ResourceTypes@@@std@@YAPAW4ResourceTypes@@IPAW41@@Z PROC ; std::_Allocate<enum ResourceTypes>, COMDAT

; 36   : 	{	// check for integer overflow

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 37   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate@2

; 38   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate@2
$LN3@Allocate@2:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 4
	jae	SHORT $LN2@Allocate@2

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	mov	DWORD PTR $T257238[ebp], 0
	lea	eax, DWORD PTR $T257238[ebp]
	push	eax
	lea	ecx, DWORD PTR $T257234[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR $T257234[ebp], OFFSET ??_7bad_alloc@std@@6B@
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T257234[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@Allocate@2:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	mov	edx, DWORD PTR __Count$[ebp]
	shl	edx, 2
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate@2:

; 44   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@W4ResourceTypes@@@std@@YAPAW4ResourceTypes@@IPAW41@@Z ENDP ; std::_Allocate<enum ResourceTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T257245 = -16						; size = 4
$T257241 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Node>, COMDAT

; 36   : 	{	// check for integer overflow

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 37   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate@3

; 38   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate@3
$LN3@Allocate@3:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 20					; 00000014H
	jae	SHORT $LN2@Allocate@3

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	mov	DWORD PTR $T257245[ebp], 0
	lea	eax, DWORD PTR $T257245[ebp]
	push	eax
	lea	ecx, DWORD PTR $T257241[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR $T257241[ebp], OFFSET ??_7bad_alloc@std@@6B@
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T257241[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@Allocate@3:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	mov	edx, DWORD PTR __Count$[ebp]
	imul	edx, 20					; 00000014H
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate@3:

; 44   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tset_traits@W4MinorCivQuestTypes@@U?$less@W4MinorCivQuestTypes@@@std@@V?$allocator@W4MinorCivQuestTypes@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tset_traits<enum MinorCivQuestTypes,std::less<enum MinorCivQuestTypes>,std::allocator<enum MinorCivQuestTypes>,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z ; std::_Insertion_sort1<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *,CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement>
PUBLIC	??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z ; std::_Pop_heap_0<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *,CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement>
PUBLIC	??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@0PAH0@Z ; std::_Make_heap<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *,int,CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement>
PUBLIC	??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@0@Z ; std::_Unguarded_partition<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@0H@Z
_TEXT	SEGMENT
$T257372 = -128						; size = 4
__Mid$231623 = -12					; size = 8
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@0H@Z PROC ; std::_Sort<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *,int>, COMDAT

; 3082 : 	{	// order [_First, _Last), using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 180				; 000000b4H
$LN7@Sort:

; 3083 : 	_Diff _Count;
; 3084 : 	for (; _ISORT_MAX < (_Count = _Last - _First) && 0 < _Ideal; )

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	mov	DWORD PTR __Count$[ebp], eax
	cmp	DWORD PTR __Count$[ebp], 32		; 00000020H
	jle	$LN6@Sort
	cmp	DWORD PTR __Ideal$[ebp], 0
	jle	SHORT $LN6@Sort

; 3085 : 		{	// divide and conquer by quicksort
; 3086 : 		pair<_RanIt, _RanIt> _Mid =
; 3087 : 			std::_Unguarded_partition(_First, _Last);

	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	eax, DWORD PTR __Mid$231623[ebp]
	push	eax
	call	??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@0@Z ; std::_Unguarded_partition<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3088 : 		_Ideal /= 2, _Ideal += _Ideal / 2;	// allow 1.5 log2(N) divisions

	mov	eax, DWORD PTR __Ideal$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Ideal$[ebp], eax
	mov	eax, DWORD PTR __Ideal$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR __Ideal$[ebp]
	mov	DWORD PTR __Ideal$[ebp], eax

; 3089 : 
; 3090 : 		if (_Mid.first - _First < _Last - _Mid.second)

	mov	ecx, DWORD PTR __Mid$231623[ebp]
	sub	ecx, DWORD PTR __First$[ebp]
	sar	ecx, 3
	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, DWORD PTR __Mid$231623[ebp+4]
	sar	edx, 3
	cmp	ecx, edx
	jge	SHORT $LN5@Sort

; 3091 : 			{	// loop on second half
; 3092 : 			std::_Sort(_First, _Mid.first, _Ideal);

	mov	eax, DWORD PTR __Ideal$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mid$231623[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@0H@Z ; std::_Sort<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *,int>
	add	esp, 12					; 0000000cH

; 3093 : 			_First = _Mid.second;

	mov	eax, DWORD PTR __Mid$231623[ebp+4]
	mov	DWORD PTR __First$[ebp], eax

; 3094 : 			}
; 3095 : 		else

	jmp	SHORT $LN4@Sort
$LN5@Sort:

; 3096 : 			{	// loop on first half
; 3097 : 			std::_Sort(_Mid.second, _Last, _Ideal);

	mov	ecx, DWORD PTR __Ideal$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __Mid$231623[ebp+4]
	push	eax
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@0H@Z ; std::_Sort<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *,int>
	add	esp, 12					; 0000000cH

; 3098 : 			_Last = _Mid.first;

	mov	ecx, DWORD PTR __Mid$231623[ebp]
	mov	DWORD PTR __Last$[ebp], ecx
$LN4@Sort:

; 3099 : 			}
; 3100 : 		}

	jmp	$LN7@Sort
$LN6@Sort:

; 3101 : 
; 3102 : 	if (_ISORT_MAX < _Count)

	cmp	DWORD PTR __Count$[ebp], 32		; 00000020H
	jle	SHORT $LN3@Sort

; 3103 : 		{	// heap sort if too many divisions
; 3104 : 		std::make_heap(_First, _Last);

	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, DWORD PTR __First$[ebp]
	sar	edx, 3
	cmp	edx, 1
	jle	SHORT $LN76@Sort
	push	0
	push	0
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@0PAH0@Z ; std::_Make_heap<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *,int,CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement>
	add	esp, 16					; 00000010H
$LN76@Sort:

; 3105 : 		std::sort_heap(_First, _Last);

	mov	edx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T257372[ebp], edx
	jmp	SHORT $LN92@Sort
$LN91@Sort:
	mov	eax, DWORD PTR $T257372[ebp]
	sub	eax, 8
	mov	DWORD PTR $T257372[ebp], eax
$LN92@Sort:
	mov	ecx, DWORD PTR $T257372[ebp]
	sub	ecx, DWORD PTR __First$[ebp]
	sar	ecx, 3
	cmp	ecx, 1
	jle	SHORT $LN88@Sort
	mov	edx, DWORD PTR $T257372[ebp]
	sub	edx, DWORD PTR __First$[ebp]
	sar	edx, 3
	cmp	edx, 1
	jle	SHORT $LN96@Sort
	push	0
	mov	eax, DWORD PTR $T257372[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z ; std::_Pop_heap_0<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *,CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement>
	add	esp, 12					; 0000000cH
$LN96@Sort:
	jmp	SHORT $LN91@Sort
$LN88@Sort:

; 3106 : 		}
; 3107 : 	else if (1 < _Count)

	jmp	SHORT $LN8@Sort
$LN3@Sort:
	cmp	DWORD PTR __Count$[ebp], 1
	jle	SHORT $LN8@Sort

; 3108 : 		std::_Insertion_sort(_First, _Last);	// small

	push	0
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z ; std::_Insertion_sort1<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *,CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement>
	add	esp, 12					; 0000000cH
$LN8@Sort:

; 3109 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@0H@Z ENDP ; std::_Sort<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *,int>
_TEXT	ENDS
PUBLIC	??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z ; std::_Insertion_sort1<CvWeightedVector<int,64,1>::WeightedElement *,CvWeightedVector<int,64,1>::WeightedElement>
PUBLIC	??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z ; std::_Pop_heap_0<CvWeightedVector<int,64,1>::WeightedElement *,CvWeightedVector<int,64,1>::WeightedElement>
PUBLIC	??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@0PAH0@Z ; std::_Make_heap<CvWeightedVector<int,64,1>::WeightedElement *,int,CvWeightedVector<int,64,1>::WeightedElement>
PUBLIC	??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@0@Z ; std::_Unguarded_partition<CvWeightedVector<int,64,1>::WeightedElement *>
; Function compile flags: /Odtp
;	COMDAT ??$_Sort@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@0H@Z
_TEXT	SEGMENT
$T257568 = -128						; size = 4
__Mid$231694 = -12					; size = 8
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
??$_Sort@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@0H@Z PROC ; std::_Sort<CvWeightedVector<int,64,1>::WeightedElement *,int>, COMDAT

; 3082 : 	{	// order [_First, _Last), using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 180				; 000000b4H
$LN7@Sort@2:

; 3083 : 	_Diff _Count;
; 3084 : 	for (; _ISORT_MAX < (_Count = _Last - _First) && 0 < _Ideal; )

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	mov	DWORD PTR __Count$[ebp], eax
	cmp	DWORD PTR __Count$[ebp], 32		; 00000020H
	jle	$LN6@Sort@2
	cmp	DWORD PTR __Ideal$[ebp], 0
	jle	SHORT $LN6@Sort@2

; 3085 : 		{	// divide and conquer by quicksort
; 3086 : 		pair<_RanIt, _RanIt> _Mid =
; 3087 : 			std::_Unguarded_partition(_First, _Last);

	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	eax, DWORD PTR __Mid$231694[ebp]
	push	eax
	call	??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@0@Z ; std::_Unguarded_partition<CvWeightedVector<int,64,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3088 : 		_Ideal /= 2, _Ideal += _Ideal / 2;	// allow 1.5 log2(N) divisions

	mov	eax, DWORD PTR __Ideal$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Ideal$[ebp], eax
	mov	eax, DWORD PTR __Ideal$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR __Ideal$[ebp]
	mov	DWORD PTR __Ideal$[ebp], eax

; 3089 : 
; 3090 : 		if (_Mid.first - _First < _Last - _Mid.second)

	mov	ecx, DWORD PTR __Mid$231694[ebp]
	sub	ecx, DWORD PTR __First$[ebp]
	sar	ecx, 3
	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, DWORD PTR __Mid$231694[ebp+4]
	sar	edx, 3
	cmp	ecx, edx
	jge	SHORT $LN5@Sort@2

; 3091 : 			{	// loop on second half
; 3092 : 			std::_Sort(_First, _Mid.first, _Ideal);

	mov	eax, DWORD PTR __Ideal$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mid$231694[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@0H@Z ; std::_Sort<CvWeightedVector<int,64,1>::WeightedElement *,int>
	add	esp, 12					; 0000000cH

; 3093 : 			_First = _Mid.second;

	mov	eax, DWORD PTR __Mid$231694[ebp+4]
	mov	DWORD PTR __First$[ebp], eax

; 3094 : 			}
; 3095 : 		else

	jmp	SHORT $LN4@Sort@2
$LN5@Sort@2:

; 3096 : 			{	// loop on first half
; 3097 : 			std::_Sort(_Mid.second, _Last, _Ideal);

	mov	ecx, DWORD PTR __Ideal$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __Mid$231694[ebp+4]
	push	eax
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@0H@Z ; std::_Sort<CvWeightedVector<int,64,1>::WeightedElement *,int>
	add	esp, 12					; 0000000cH

; 3098 : 			_Last = _Mid.first;

	mov	ecx, DWORD PTR __Mid$231694[ebp]
	mov	DWORD PTR __Last$[ebp], ecx
$LN4@Sort@2:

; 3099 : 			}
; 3100 : 		}

	jmp	$LN7@Sort@2
$LN6@Sort@2:

; 3101 : 
; 3102 : 	if (_ISORT_MAX < _Count)

	cmp	DWORD PTR __Count$[ebp], 32		; 00000020H
	jle	SHORT $LN3@Sort@2

; 3103 : 		{	// heap sort if too many divisions
; 3104 : 		std::make_heap(_First, _Last);

	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, DWORD PTR __First$[ebp]
	sar	edx, 3
	cmp	edx, 1
	jle	SHORT $LN76@Sort@2
	push	0
	push	0
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@0PAH0@Z ; std::_Make_heap<CvWeightedVector<int,64,1>::WeightedElement *,int,CvWeightedVector<int,64,1>::WeightedElement>
	add	esp, 16					; 00000010H
$LN76@Sort@2:

; 3105 : 		std::sort_heap(_First, _Last);

	mov	edx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T257568[ebp], edx
	jmp	SHORT $LN92@Sort@2
$LN91@Sort@2:
	mov	eax, DWORD PTR $T257568[ebp]
	sub	eax, 8
	mov	DWORD PTR $T257568[ebp], eax
$LN92@Sort@2:
	mov	ecx, DWORD PTR $T257568[ebp]
	sub	ecx, DWORD PTR __First$[ebp]
	sar	ecx, 3
	cmp	ecx, 1
	jle	SHORT $LN88@Sort@2
	mov	edx, DWORD PTR $T257568[ebp]
	sub	edx, DWORD PTR __First$[ebp]
	sar	edx, 3
	cmp	edx, 1
	jle	SHORT $LN96@Sort@2
	push	0
	mov	eax, DWORD PTR $T257568[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z ; std::_Pop_heap_0<CvWeightedVector<int,64,1>::WeightedElement *,CvWeightedVector<int,64,1>::WeightedElement>
	add	esp, 12					; 0000000cH
$LN96@Sort@2:
	jmp	SHORT $LN91@Sort@2
$LN88@Sort@2:

; 3106 : 		}
; 3107 : 	else if (1 < _Count)

	jmp	SHORT $LN8@Sort@2
$LN3@Sort@2:
	cmp	DWORD PTR __Count$[ebp], 1
	jle	SHORT $LN8@Sort@2

; 3108 : 		std::_Insertion_sort(_First, _Last);	// small

	push	0
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z ; std::_Insertion_sort1<CvWeightedVector<int,64,1>::WeightedElement *,CvWeightedVector<int,64,1>::WeightedElement>
	add	esp, 12					; 0000000cH
$LN8@Sort@2:

; 3109 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Sort@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@0H@Z ENDP ; std::_Sort<CvWeightedVector<int,64,1>::WeightedElement *,int>
_TEXT	ENDS
PUBLIC	??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z ; std::_Insertion_sort1<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *,CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement>
PUBLIC	??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z ; std::_Pop_heap_0<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *,CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement>
PUBLIC	??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@0PAH0@Z ; std::_Make_heap<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *,int,CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement>
PUBLIC	??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@0@Z ; std::_Unguarded_partition<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *>
; Function compile flags: /Odtp
;	COMDAT ??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@0H@Z
_TEXT	SEGMENT
$T257764 = -128						; size = 4
__Mid$231765 = -12					; size = 8
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@0H@Z PROC ; std::_Sort<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *,int>, COMDAT

; 3082 : 	{	// order [_First, _Last), using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 180				; 000000b4H
$LN7@Sort@3:

; 3083 : 	_Diff _Count;
; 3084 : 	for (; _ISORT_MAX < (_Count = _Last - _First) && 0 < _Ideal; )

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	mov	DWORD PTR __Count$[ebp], eax
	cmp	DWORD PTR __Count$[ebp], 32		; 00000020H
	jle	$LN6@Sort@3
	cmp	DWORD PTR __Ideal$[ebp], 0
	jle	SHORT $LN6@Sort@3

; 3085 : 		{	// divide and conquer by quicksort
; 3086 : 		pair<_RanIt, _RanIt> _Mid =
; 3087 : 			std::_Unguarded_partition(_First, _Last);

	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	eax, DWORD PTR __Mid$231765[ebp]
	push	eax
	call	??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@0@Z ; std::_Unguarded_partition<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3088 : 		_Ideal /= 2, _Ideal += _Ideal / 2;	// allow 1.5 log2(N) divisions

	mov	eax, DWORD PTR __Ideal$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Ideal$[ebp], eax
	mov	eax, DWORD PTR __Ideal$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR __Ideal$[ebp]
	mov	DWORD PTR __Ideal$[ebp], eax

; 3089 : 
; 3090 : 		if (_Mid.first - _First < _Last - _Mid.second)

	mov	ecx, DWORD PTR __Mid$231765[ebp]
	sub	ecx, DWORD PTR __First$[ebp]
	sar	ecx, 3
	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, DWORD PTR __Mid$231765[ebp+4]
	sar	edx, 3
	cmp	ecx, edx
	jge	SHORT $LN5@Sort@3

; 3091 : 			{	// loop on second half
; 3092 : 			std::_Sort(_First, _Mid.first, _Ideal);

	mov	eax, DWORD PTR __Ideal$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mid$231765[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@0H@Z ; std::_Sort<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *,int>
	add	esp, 12					; 0000000cH

; 3093 : 			_First = _Mid.second;

	mov	eax, DWORD PTR __Mid$231765[ebp+4]
	mov	DWORD PTR __First$[ebp], eax

; 3094 : 			}
; 3095 : 		else

	jmp	SHORT $LN4@Sort@3
$LN5@Sort@3:

; 3096 : 			{	// loop on first half
; 3097 : 			std::_Sort(_Mid.second, _Last, _Ideal);

	mov	ecx, DWORD PTR __Ideal$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __Mid$231765[ebp+4]
	push	eax
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@0H@Z ; std::_Sort<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *,int>
	add	esp, 12					; 0000000cH

; 3098 : 			_Last = _Mid.first;

	mov	ecx, DWORD PTR __Mid$231765[ebp]
	mov	DWORD PTR __Last$[ebp], ecx
$LN4@Sort@3:

; 3099 : 			}
; 3100 : 		}

	jmp	$LN7@Sort@3
$LN6@Sort@3:

; 3101 : 
; 3102 : 	if (_ISORT_MAX < _Count)

	cmp	DWORD PTR __Count$[ebp], 32		; 00000020H
	jle	SHORT $LN3@Sort@3

; 3103 : 		{	// heap sort if too many divisions
; 3104 : 		std::make_heap(_First, _Last);

	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, DWORD PTR __First$[ebp]
	sar	edx, 3
	cmp	edx, 1
	jle	SHORT $LN76@Sort@3
	push	0
	push	0
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@0PAH0@Z ; std::_Make_heap<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *,int,CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement>
	add	esp, 16					; 00000010H
$LN76@Sort@3:

; 3105 : 		std::sort_heap(_First, _Last);

	mov	edx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T257764[ebp], edx
	jmp	SHORT $LN92@Sort@3
$LN91@Sort@3:
	mov	eax, DWORD PTR $T257764[ebp]
	sub	eax, 8
	mov	DWORD PTR $T257764[ebp], eax
$LN92@Sort@3:
	mov	ecx, DWORD PTR $T257764[ebp]
	sub	ecx, DWORD PTR __First$[ebp]
	sar	ecx, 3
	cmp	ecx, 1
	jle	SHORT $LN88@Sort@3
	mov	edx, DWORD PTR $T257764[ebp]
	sub	edx, DWORD PTR __First$[ebp]
	sar	edx, 3
	cmp	edx, 1
	jle	SHORT $LN96@Sort@3
	push	0
	mov	eax, DWORD PTR $T257764[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z ; std::_Pop_heap_0<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *,CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement>
	add	esp, 12					; 0000000cH
$LN96@Sort@3:
	jmp	SHORT $LN91@Sort@3
$LN88@Sort@3:

; 3106 : 		}
; 3107 : 	else if (1 < _Count)

	jmp	SHORT $LN8@Sort@3
$LN3@Sort@3:
	cmp	DWORD PTR __Count$[ebp], 1
	jle	SHORT $LN8@Sort@3

; 3108 : 		std::_Insertion_sort(_First, _Last);	// small

	push	0
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z ; std::_Insertion_sort1<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *,CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement>
	add	esp, 12					; 0000000cH
$LN8@Sort@3:

; 3109 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@0H@Z ENDP ; std::_Sort<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *,int>
_TEXT	ENDS
PUBLIC	??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z ; std::_Insertion_sort1<CvWeightedVector<int,100,1>::WeightedElement *,CvWeightedVector<int,100,1>::WeightedElement>
PUBLIC	??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z ; std::_Pop_heap_0<CvWeightedVector<int,100,1>::WeightedElement *,CvWeightedVector<int,100,1>::WeightedElement>
PUBLIC	??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@0PAH0@Z ; std::_Make_heap<CvWeightedVector<int,100,1>::WeightedElement *,int,CvWeightedVector<int,100,1>::WeightedElement>
PUBLIC	??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@0@Z ; std::_Unguarded_partition<CvWeightedVector<int,100,1>::WeightedElement *>
; Function compile flags: /Odtp
;	COMDAT ??$_Sort@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@0H@Z
_TEXT	SEGMENT
$T257960 = -128						; size = 4
__Mid$231836 = -12					; size = 8
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
??$_Sort@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@0H@Z PROC ; std::_Sort<CvWeightedVector<int,100,1>::WeightedElement *,int>, COMDAT

; 3082 : 	{	// order [_First, _Last), using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 180				; 000000b4H
$LN7@Sort@4:

; 3083 : 	_Diff _Count;
; 3084 : 	for (; _ISORT_MAX < (_Count = _Last - _First) && 0 < _Ideal; )

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	mov	DWORD PTR __Count$[ebp], eax
	cmp	DWORD PTR __Count$[ebp], 32		; 00000020H
	jle	$LN6@Sort@4
	cmp	DWORD PTR __Ideal$[ebp], 0
	jle	SHORT $LN6@Sort@4

; 3085 : 		{	// divide and conquer by quicksort
; 3086 : 		pair<_RanIt, _RanIt> _Mid =
; 3087 : 			std::_Unguarded_partition(_First, _Last);

	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	eax, DWORD PTR __Mid$231836[ebp]
	push	eax
	call	??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@0@Z ; std::_Unguarded_partition<CvWeightedVector<int,100,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3088 : 		_Ideal /= 2, _Ideal += _Ideal / 2;	// allow 1.5 log2(N) divisions

	mov	eax, DWORD PTR __Ideal$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Ideal$[ebp], eax
	mov	eax, DWORD PTR __Ideal$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR __Ideal$[ebp]
	mov	DWORD PTR __Ideal$[ebp], eax

; 3089 : 
; 3090 : 		if (_Mid.first - _First < _Last - _Mid.second)

	mov	ecx, DWORD PTR __Mid$231836[ebp]
	sub	ecx, DWORD PTR __First$[ebp]
	sar	ecx, 3
	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, DWORD PTR __Mid$231836[ebp+4]
	sar	edx, 3
	cmp	ecx, edx
	jge	SHORT $LN5@Sort@4

; 3091 : 			{	// loop on second half
; 3092 : 			std::_Sort(_First, _Mid.first, _Ideal);

	mov	eax, DWORD PTR __Ideal$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mid$231836[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@0H@Z ; std::_Sort<CvWeightedVector<int,100,1>::WeightedElement *,int>
	add	esp, 12					; 0000000cH

; 3093 : 			_First = _Mid.second;

	mov	eax, DWORD PTR __Mid$231836[ebp+4]
	mov	DWORD PTR __First$[ebp], eax

; 3094 : 			}
; 3095 : 		else

	jmp	SHORT $LN4@Sort@4
$LN5@Sort@4:

; 3096 : 			{	// loop on first half
; 3097 : 			std::_Sort(_Mid.second, _Last, _Ideal);

	mov	ecx, DWORD PTR __Ideal$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __Mid$231836[ebp+4]
	push	eax
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@0H@Z ; std::_Sort<CvWeightedVector<int,100,1>::WeightedElement *,int>
	add	esp, 12					; 0000000cH

; 3098 : 			_Last = _Mid.first;

	mov	ecx, DWORD PTR __Mid$231836[ebp]
	mov	DWORD PTR __Last$[ebp], ecx
$LN4@Sort@4:

; 3099 : 			}
; 3100 : 		}

	jmp	$LN7@Sort@4
$LN6@Sort@4:

; 3101 : 
; 3102 : 	if (_ISORT_MAX < _Count)

	cmp	DWORD PTR __Count$[ebp], 32		; 00000020H
	jle	SHORT $LN3@Sort@4

; 3103 : 		{	// heap sort if too many divisions
; 3104 : 		std::make_heap(_First, _Last);

	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, DWORD PTR __First$[ebp]
	sar	edx, 3
	cmp	edx, 1
	jle	SHORT $LN76@Sort@4
	push	0
	push	0
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@0PAH0@Z ; std::_Make_heap<CvWeightedVector<int,100,1>::WeightedElement *,int,CvWeightedVector<int,100,1>::WeightedElement>
	add	esp, 16					; 00000010H
$LN76@Sort@4:

; 3105 : 		std::sort_heap(_First, _Last);

	mov	edx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T257960[ebp], edx
	jmp	SHORT $LN92@Sort@4
$LN91@Sort@4:
	mov	eax, DWORD PTR $T257960[ebp]
	sub	eax, 8
	mov	DWORD PTR $T257960[ebp], eax
$LN92@Sort@4:
	mov	ecx, DWORD PTR $T257960[ebp]
	sub	ecx, DWORD PTR __First$[ebp]
	sar	ecx, 3
	cmp	ecx, 1
	jle	SHORT $LN88@Sort@4
	mov	edx, DWORD PTR $T257960[ebp]
	sub	edx, DWORD PTR __First$[ebp]
	sar	edx, 3
	cmp	edx, 1
	jle	SHORT $LN96@Sort@4
	push	0
	mov	eax, DWORD PTR $T257960[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z ; std::_Pop_heap_0<CvWeightedVector<int,100,1>::WeightedElement *,CvWeightedVector<int,100,1>::WeightedElement>
	add	esp, 12					; 0000000cH
$LN96@Sort@4:
	jmp	SHORT $LN91@Sort@4
$LN88@Sort@4:

; 3106 : 		}
; 3107 : 	else if (1 < _Count)

	jmp	SHORT $LN8@Sort@4
$LN3@Sort@4:
	cmp	DWORD PTR __Count$[ebp], 1
	jle	SHORT $LN8@Sort@4

; 3108 : 		std::_Insertion_sort(_First, _Last);	// small

	push	0
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z ; std::_Insertion_sort1<CvWeightedVector<int,100,1>::WeightedElement *,CvWeightedVector<int,100,1>::WeightedElement>
	add	esp, 12					; 0000000cH
$LN8@Sort@4:

; 3109 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Sort@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@0H@Z ENDP ; std::_Sort<CvWeightedVector<int,100,1>::WeightedElement *,int>
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__catchsym$??$_Uninit_fill_n@PAVCvString@@IV1@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@IABV1@AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_fill_n@PAVCvString@@IV1@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@IABV1@AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_fill_n@PAVCvString@@IV1@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@IABV1@AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_fill_n@PAVCvString@@IV1@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@IABV1@AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$5
__unwindtable$??$_Uninit_fill_n@PAVCvString@@IV1@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@IABV1@AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_fill_n@PAVCvString@@IV1@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@IABV1@AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Uninit_fill_n@PAVCvString@@IV1@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@IABV1@AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_fill_n@PAVCvString@@IV1@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@IABV1@AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_fill_n@PAVCvString@@IV1@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@IABV1@AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_fill_n@PAVCvString@@IV1@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@IABV1@AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
tv89 = -36						; size = 4
$T258067 = -32						; size = 4
$T258066 = -28						; size = 4
__Vptr$258064 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAVCvString@@IV1@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@IABV1@AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<CvString *,unsigned int,CvString,std::allocator<CvString> >, COMDAT

; 393  : 	{	// copy _Count *_Val to raw _First, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_fill_n@PAVCvString@@IV1@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@IABV1@AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 394  : 
; 395  :  #if _HAS_ITERATOR_DEBUGGING
; 396  : //	if (_Count < 0)
; 397  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 398  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 399  : 
; 400  : 	_FwdIt _Next = _First;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 401  : 
; 402  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 403  : 	for (; 0 < _Count; --_Count, ++_First)

	jmp	SHORT $LN6@Uninit_fil
$LN5@Uninit_fil:
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Count$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_fil:
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN4@Uninit_fil

; 404  : 		_Al.construct(_First, _Val);

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Vptr$258064[ebp], eax
	mov	ecx, DWORD PTR __Vptr$258064[ebp]
	mov	DWORD PTR $T258067[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	DWORD PTR $T258067[ebp], 0
	je	SHORT $LN18@Uninit_fil
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T258067[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T258067[ebp]
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN19@Uninit_fil
$LN18@Uninit_fil:
	mov	DWORD PTR tv89[ebp], 0
$LN19@Uninit_fil:
	mov	ecx, DWORD PTR tv89[ebp]
	mov	DWORD PTR $T258066[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN5@Uninit_fil
$LN4@Uninit_fil:
	jmp	SHORT $LN10@Uninit_fil
__catch$??$_Uninit_fill_n@PAVCvString@@IV1@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@IABV1@AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 405  : 	_CATCH_ALL
; 406  : 	for (; _Next != _First; ++_Next)

	jmp	SHORT $LN3@Uninit_fil
$LN2@Uninit_fil:
	mov	edx, DWORD PTR __Next$[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR __Next$[ebp], edx
$LN3@Uninit_fil:
	mov	eax, DWORD PTR __Next$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	je	SHORT $LN1@Uninit_fil

; 407  : 		_Al.destroy(_Next);

	mov	ecx, DWORD PTR __Next$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	xor	ecx, ecx
	and	ecx, 1
	je	SHORT $LN26@Uninit_fil
	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN26@Uninit_fil:
	jmp	SHORT $LN2@Uninit_fil
$LN1@Uninit_fil:

; 408  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 409  : 	_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN9@Uninit_fil
	ret	0
$LN10@Uninit_fil:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN9@Uninit_fil:

; 410  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_fill_n@PAVCvString@@IV1@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@IABV1@AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Vptr$258064[ebp]
	push	eax
	mov	ecx, DWORD PTR $T258067[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_fill_n@PAVCvString@@IV1@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@IABV1@AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_fill_n@PAVCvString@@IV1@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@IABV1@AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_fill_n@PAVCvString@@IV1@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@IABV1@AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<CvString *,unsigned int,CvString,std::allocator<CvString> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$??$_Uninit_copy@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@PAW4ResourceTypes@@V?$allocator@W4ResourceTypes@@@2@@std@@YAPAW4ResourceTypes@@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@0@0PAW41@AAV?$allocator@W4ResourceTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@PAW4ResourceTypes@@V?$allocator@W4ResourceTypes@@@2@@std@@YAPAW4ResourceTypes@@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@0@0PAW41@AAV?$allocator@W4ResourceTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_copy@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@PAW4ResourceTypes@@V?$allocator@W4ResourceTypes@@@2@@std@@YAPAW4ResourceTypes@@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@0@0PAW41@AAV?$allocator@W4ResourceTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_copy@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@PAW4ResourceTypes@@V?$allocator@W4ResourceTypes@@@2@@std@@YAPAW4ResourceTypes@@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@0@0PAW41@AAV?$allocator@W4ResourceTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@PAW4ResourceTypes@@V?$allocator@W4ResourceTypes@@@2@@std@@YAPAW4ResourceTypes@@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@0@0PAW41@AAV?$allocator@W4ResourceTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_copy@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@PAW4ResourceTypes@@V?$allocator@W4ResourceTypes@@@2@@std@@YAPAW4ResourceTypes@@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@0@0PAW41@AAV?$allocator@W4ResourceTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_copy@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@PAW4ResourceTypes@@V?$allocator@W4ResourceTypes@@@2@@std@@YAPAW4ResourceTypes@@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@0@0PAW41@AAV?$allocator@W4ResourceTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@PAW4ResourceTypes@@V?$allocator@W4ResourceTypes@@@2@@std@@YAPAW4ResourceTypes@@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@0@0PAW41@AAV?$allocator@W4ResourceTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@PAW4ResourceTypes@@V?$allocator@W4ResourceTypes@@@2@@std@@YAPAW4ResourceTypes@@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@0@0PAW41@AAV?$allocator@W4ResourceTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
tv94 = -36						; size = 4
$T258157 = -32						; size = 4
$T258149 = -28						; size = 4
__Vptr$258155 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@PAW4ResourceTypes@@V?$allocator@W4ResourceTypes@@@2@@std@@YAPAW4ResourceTypes@@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@0@0PAW41@AAV?$allocator@W4ResourceTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::_Vector_const_iterator<enum ResourceTypes,std::allocator<enum ResourceTypes> >,enum ResourceTypes *,std::allocator<enum ResourceTypes> >, COMDAT

; 124  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@PAW4ResourceTypes@@V?$allocator@W4ResourceTypes@@@2@@std@@YAPAW4ResourceTypes@@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@0@0PAW41@AAV?$allocator@W4ResourceTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 128  : 
; 129  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	jmp	SHORT $LN16@Uninit_cop
$LN5@Uninit_cop:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 4
	mov	DWORD PTR __First$[ebp], edx
$LN16@Uninit_cop:
	mov	eax, DWORD PTR __First$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR __Last$[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN4@Uninit_cop

; 131  : 		_Al.construct(_Dest, *_First);

	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T258157[ebp], ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Vptr$258155[ebp], edx
	mov	eax, DWORD PTR __Vptr$258155[ebp]
	mov	DWORD PTR $T258149[ebp], eax
	cmp	DWORD PTR $T258149[ebp], 0
	je	SHORT $LN26@Uninit_cop
	mov	ecx, DWORD PTR $T258149[ebp]
	mov	edx, DWORD PTR $T258157[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR $T258149[ebp]
	mov	DWORD PTR tv94[ebp], ecx
	jmp	SHORT $LN22@Uninit_cop
$LN26@Uninit_cop:
	mov	DWORD PTR tv94[ebp], 0
$LN22@Uninit_cop:
	jmp	SHORT $LN5@Uninit_cop
$LN4@Uninit_cop:
	jmp	SHORT $LN10@Uninit_cop
__catch$??$_Uninit_copy@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@PAW4ResourceTypes@@V?$allocator@W4ResourceTypes@@@2@@std@@YAPAW4ResourceTypes@@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@0@0PAW41@AAV?$allocator@W4ResourceTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)

	jmp	SHORT $LN3@Uninit_cop
$LN2@Uninit_cop:
	mov	edx, DWORD PTR __Next$[ebp]
	add	edx, 4
	mov	DWORD PTR __Next$[ebp], edx
$LN3@Uninit_cop:
	mov	eax, DWORD PTR __Next$[ebp]
	cmp	eax, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_cop

; 134  : 		_Al.destroy(_Next);

	jmp	SHORT $LN2@Uninit_cop
$LN1@Uninit_cop:

; 135  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 136  : 	_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Uninit_copy@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@PAW4ResourceTypes@@V?$allocator@W4ResourceTypes@@@2@@std@@YAPAW4ResourceTypes@@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@0@0PAW41@AAV?$allocator@W4ResourceTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1
	ret	0
$LN10@Uninit_cop:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_copy@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@PAW4ResourceTypes@@V?$allocator@W4ResourceTypes@@@2@@std@@YAPAW4ResourceTypes@@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@0@0PAW41@AAV?$allocator@W4ResourceTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1:

; 137  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_cop:

; 138  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_copy@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@PAW4ResourceTypes@@V?$allocator@W4ResourceTypes@@@2@@std@@YAPAW4ResourceTypes@@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@0@0PAW41@AAV?$allocator@W4ResourceTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@PAW4ResourceTypes@@V?$allocator@W4ResourceTypes@@@2@@std@@YAPAW4ResourceTypes@@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@0@0PAW41@AAV?$allocator@W4ResourceTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@std@@PAW4ResourceTypes@@V?$allocator@W4ResourceTypes@@@2@@std@@YAPAW4ResourceTypes@@V?$_Vector_const_iterator@W4ResourceTypes@@V?$allocator@W4ResourceTypes@@@std@@@0@0PAW41@AAV?$allocator@W4ResourceTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::_Vector_const_iterator<enum ResourceTypes,std::allocator<enum ResourceTypes> >,enum ResourceTypes *,std::allocator<enum ResourceTypes> >
PUBLIC	??$_Median@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z ; std::_Median<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@0@Z
_TEXT	SEGMENT
$T258348 = -124						; size = 4
__Tmp$258347 = -120					; size = 8
$T258328 = -112						; size = 4
$T258327 = -108						; size = 4
__Tmp$258326 = -104					; size = 8
$T258307 = -96						; size = 4
__Tmp$258306 = -92					; size = 8
$T258287 = -84						; size = 4
$T258286 = -80						; size = 4
__Tmp$258285 = -76					; size = 8
$T258266 = -68						; size = 4
$T258265 = -64						; size = 4
__Tmp$258264 = -60					; size = 8
$T258242 = -52						; size = 4
$T258241 = -48						; size = 4
__Tmp$258240 = -44					; size = 8
$T258215 = -36						; size = 4
__Tmp$258214 = -32					; size = 8
__Plast$ = -20						; size = 4
__Glast$ = -16						; size = 4
__Pfirst$ = -12						; size = 4
__Gfirst$ = -8						; size = 4
__Mid$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@0@Z PROC ; std::_Unguarded_partition<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *>, COMDAT

; 3024 : 	{	// partition [_First, _Last), using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 124				; 0000007cH

; 3025 : 	_RanIt _Mid = _First + (_Last - _First) / 2;	// sort median to _Mid

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR __First$[ebp]
	lea	edx, DWORD PTR [ecx+eax*8]
	mov	DWORD PTR __Mid$[ebp], edx

; 3026 : 	std::_Median(_First, _Mid, _Last - 1);

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, 8
	push	eax
	mov	ecx, DWORD PTR __Mid$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Median@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z ; std::_Median<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3027 : 	_RanIt _Pfirst = _Mid;

	mov	eax, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR __Pfirst$[ebp], eax

; 3028 : 	_RanIt _Plast = _Pfirst + 1;

	mov	ecx, DWORD PTR __Pfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Plast$[ebp], ecx
$LN27@Unguarded_:

; 3029 : 
; 3030 : 	while (_First < _Pfirst
; 3031 : 		&& !_DEBUG_LT(*(_Pfirst - 1), *_Pfirst)
; 3032 : 		&& !(*_Pfirst < *(_Pfirst - 1)))

	mov	edx, DWORD PTR __First$[ebp]
	cmp	edx, DWORD PTR __Pfirst$[ebp]
	jae	SHORT $LN25@Unguarded_
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	edx, DWORD PTR [eax-4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN25@Unguarded_
	mov	edx, DWORD PTR __Pfirst$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax-4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	jne	SHORT $LN25@Unguarded_

; 3033 : 		--_Pfirst;

	mov	ecx, DWORD PTR __Pfirst$[ebp]
	sub	ecx, 8
	mov	DWORD PTR __Pfirst$[ebp], ecx
	jmp	SHORT $LN27@Unguarded_
$LN25@Unguarded_:

; 3034 : 	while (_Plast < _Last
; 3035 : 		&& !_DEBUG_LT(*_Plast, *_Pfirst)
; 3036 : 		&& !(*_Pfirst < *_Plast))

	mov	edx, DWORD PTR __Plast$[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	jae	SHORT $LN24@Unguarded_
	mov	eax, DWORD PTR __Plast$[ebp]
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN24@Unguarded_
	mov	edx, DWORD PTR __Pfirst$[ebp]
	mov	eax, DWORD PTR __Plast$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	jne	SHORT $LN24@Unguarded_

; 3037 : 		++_Plast;

	mov	ecx, DWORD PTR __Plast$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Plast$[ebp], ecx
	jmp	SHORT $LN25@Unguarded_
$LN24@Unguarded_:

; 3038 : 
; 3039 : 	_RanIt _Gfirst = _Plast;

	mov	edx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR __Gfirst$[ebp], edx

; 3040 : 	_RanIt _Glast = _Pfirst;

	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR __Glast$[ebp], eax
$LN23@Unguarded_:

; 3041 : 
; 3042 : 	for (; ; )
; 3043 : 		{	// partition
; 3044 : 		for (; _Gfirst < _Last; ++_Gfirst)

	jmp	SHORT $LN21@Unguarded_
$LN20@Unguarded_:
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Gfirst$[ebp], ecx
$LN21@Unguarded_:
	mov	edx, DWORD PTR __Gfirst$[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	jae	$LN19@Unguarded_

; 3045 : 			if (_DEBUG_LT(*_Pfirst, *_Gfirst))

	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN44@Unguarded_
	jmp	SHORT $LN17@Unguarded_

; 3046 : 				;
; 3047 : 			else if (*_Gfirst < *_Pfirst)

$LN44@Unguarded_:
	mov	edx, DWORD PTR __Gfirst$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN16@Unguarded_

; 3048 : 				break;

	jmp	SHORT $LN19@Unguarded_

; 3049 : 			else

	jmp	SHORT $LN17@Unguarded_
$LN16@Unguarded_:

; 3050 : 				std::iter_swap(_Plast++, _Gfirst);

	mov	ecx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR $T258215[ebp], ecx
	mov	edx, DWORD PTR __Plast$[ebp]
	add	edx, 8
	mov	DWORD PTR __Plast$[ebp], edx
	mov	eax, DWORD PTR $T258215[ebp]
	cmp	eax, DWORD PTR __Gfirst$[ebp]
	je	SHORT $LN17@Unguarded_
	mov	ecx, DWORD PTR $T258215[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$258214[ebp], edx
	mov	eax, DWORD PTR $T258215[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$258214[ebp+4], ecx
	mov	edx, DWORD PTR __Gfirst$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T258215[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR __Gfirst$[ebp]
	mov	ecx, DWORD PTR __Tmp$258214[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$258214[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN17@Unguarded_:
	jmp	$LN20@Unguarded_
$LN19@Unguarded_:

; 3051 : 		for (; _First < _Glast; --_Glast)

	jmp	SHORT $LN14@Unguarded_
$LN13@Unguarded_:
	mov	eax, DWORD PTR __Glast$[ebp]
	sub	eax, 8
	mov	DWORD PTR __Glast$[ebp], eax
$LN14@Unguarded_:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Glast$[ebp]
	jae	$LN12@Unguarded_

; 3052 : 			if (_DEBUG_LT(*(_Glast - 1), *_Pfirst))

	mov	edx, DWORD PTR __Glast$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR [edx-4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN55@Unguarded_
	jmp	SHORT $LN10@Unguarded_

; 3053 : 				;
; 3054 : 			else if (*_Pfirst < *(_Glast - 1))

$LN55@Unguarded_:
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	edx, DWORD PTR __Glast$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx-4]
	setg	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN9@Unguarded_

; 3055 : 				break;

	jmp	SHORT $LN12@Unguarded_

; 3056 : 			else

	jmp	SHORT $LN10@Unguarded_
$LN9@Unguarded_:

; 3057 : 				std::iter_swap(--_Pfirst, _Glast - 1);

	mov	eax, DWORD PTR __Pfirst$[ebp]
	sub	eax, 8
	mov	DWORD PTR __Pfirst$[ebp], eax
	mov	ecx, DWORD PTR __Glast$[ebp]
	sub	ecx, 8
	mov	DWORD PTR $T258242[ebp], ecx
	mov	edx, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T258241[ebp], edx
	mov	eax, DWORD PTR $T258241[ebp]
	cmp	eax, DWORD PTR $T258242[ebp]
	je	SHORT $LN10@Unguarded_
	mov	ecx, DWORD PTR $T258241[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$258240[ebp], edx
	mov	eax, DWORD PTR $T258241[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$258240[ebp+4], ecx
	mov	edx, DWORD PTR $T258242[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T258241[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR $T258242[ebp]
	mov	ecx, DWORD PTR __Tmp$258240[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$258240[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN10@Unguarded_:
	jmp	$LN13@Unguarded_
$LN12@Unguarded_:

; 3058 : 		if (_Glast == _First && _Gfirst == _Last)

	mov	eax, DWORD PTR __Glast$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	jne	SHORT $LN7@Unguarded_
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	jne	SHORT $LN7@Unguarded_

; 3059 : 			return (pair<_RanIt, _RanIt>(_Pfirst, _Plast));

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN28@Unguarded_
$LN7@Unguarded_:

; 3060 : 
; 3061 : 		if (_Glast == _First)

	mov	eax, DWORD PTR __Glast$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	jne	$LN6@Unguarded_

; 3062 : 			{	// no room at bottom, rotate pivot upward
; 3063 : 			if (_Plast != _Gfirst)

	mov	ecx, DWORD PTR __Plast$[ebp]
	cmp	ecx, DWORD PTR __Gfirst$[ebp]
	je	SHORT $LN5@Unguarded_

; 3064 : 				std::iter_swap(_Pfirst, _Plast);

	mov	edx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR $T258266[ebp], edx
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T258265[ebp], eax
	mov	ecx, DWORD PTR $T258265[ebp]
	cmp	ecx, DWORD PTR $T258266[ebp]
	je	SHORT $LN5@Unguarded_
	mov	edx, DWORD PTR $T258265[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$258264[ebp], eax
	mov	ecx, DWORD PTR $T258265[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$258264[ebp+4], edx
	mov	eax, DWORD PTR $T258266[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR $T258265[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T258266[ebp]
	mov	edx, DWORD PTR __Tmp$258264[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Tmp$258264[ebp+4]
	mov	DWORD PTR [ecx+4], eax
$LN5@Unguarded_:

; 3065 : 			++_Plast;

	mov	ecx, DWORD PTR __Plast$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Plast$[ebp], ecx

; 3066 : 			std::iter_swap(_Pfirst++, _Gfirst++);

	mov	edx, DWORD PTR __Gfirst$[ebp]
	mov	DWORD PTR $T258287[ebp], edx
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T258286[ebp], eax
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Pfirst$[ebp], ecx
	mov	edx, DWORD PTR __Gfirst$[ebp]
	add	edx, 8
	mov	DWORD PTR __Gfirst$[ebp], edx
	mov	eax, DWORD PTR $T258286[ebp]
	cmp	eax, DWORD PTR $T258287[ebp]
	je	SHORT $LN73@Unguarded_
	mov	ecx, DWORD PTR $T258286[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$258285[ebp], edx
	mov	eax, DWORD PTR $T258286[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$258285[ebp+4], ecx
	mov	edx, DWORD PTR $T258287[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T258286[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR $T258287[ebp]
	mov	ecx, DWORD PTR __Tmp$258285[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$258285[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN73@Unguarded_:

; 3067 : 			}
; 3068 : 		else if (_Gfirst == _Last)

	jmp	$LN4@Unguarded_
$LN6@Unguarded_:
	mov	eax, DWORD PTR __Gfirst$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	jne	$LN3@Unguarded_

; 3069 : 			{	// no room at top, rotate pivot downward
; 3070 : 			if (--_Glast != --_Pfirst)

	mov	ecx, DWORD PTR __Glast$[ebp]
	sub	ecx, 8
	mov	DWORD PTR __Glast$[ebp], ecx
	mov	edx, DWORD PTR __Pfirst$[ebp]
	sub	edx, 8
	mov	DWORD PTR __Pfirst$[ebp], edx
	mov	eax, DWORD PTR __Glast$[ebp]
	cmp	eax, DWORD PTR __Pfirst$[ebp]
	je	SHORT $LN2@Unguarded_

; 3071 : 				std::iter_swap(_Glast, _Pfirst);

	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T258307[ebp], ecx
	mov	edx, DWORD PTR __Glast$[ebp]
	cmp	edx, DWORD PTR $T258307[ebp]
	je	SHORT $LN2@Unguarded_
	mov	eax, DWORD PTR __Glast$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$258306[ebp], ecx
	mov	edx, DWORD PTR __Glast$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Tmp$258306[ebp+4], eax
	mov	ecx, DWORD PTR $T258307[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Glast$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T258307[ebp]
	mov	eax, DWORD PTR __Tmp$258306[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Tmp$258306[ebp+4]
	mov	DWORD PTR [edx+4], ecx
$LN2@Unguarded_:

; 3072 : 			std::iter_swap(_Pfirst, --_Plast);

	mov	edx, DWORD PTR __Plast$[ebp]
	sub	edx, 8
	mov	DWORD PTR __Plast$[ebp], edx
	mov	eax, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR $T258328[ebp], eax
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T258327[ebp], ecx
	mov	edx, DWORD PTR $T258327[ebp]
	cmp	edx, DWORD PTR $T258328[ebp]
	je	SHORT $LN87@Unguarded_
	mov	eax, DWORD PTR $T258327[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$258326[ebp], ecx
	mov	edx, DWORD PTR $T258327[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Tmp$258326[ebp+4], eax
	mov	ecx, DWORD PTR $T258328[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR $T258327[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T258328[ebp]
	mov	eax, DWORD PTR __Tmp$258326[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Tmp$258326[ebp+4]
	mov	DWORD PTR [edx+4], ecx
$LN87@Unguarded_:

; 3073 : 			}
; 3074 : 		else

	jmp	SHORT $LN4@Unguarded_
$LN3@Unguarded_:

; 3075 : 			std::iter_swap(_Gfirst++, --_Glast);

	mov	edx, DWORD PTR __Glast$[ebp]
	sub	edx, 8
	mov	DWORD PTR __Glast$[ebp], edx
	mov	eax, DWORD PTR __Gfirst$[ebp]
	mov	DWORD PTR $T258348[ebp], eax
	mov	ecx, DWORD PTR $T258348[ebp]
	cmp	ecx, DWORD PTR __Glast$[ebp]
	je	SHORT $LN94@Unguarded_
	mov	edx, DWORD PTR $T258348[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$258347[ebp], eax
	mov	ecx, DWORD PTR $T258348[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$258347[ebp+4], edx
	mov	eax, DWORD PTR __Glast$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR $T258348[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR __Glast$[ebp]
	mov	edx, DWORD PTR __Tmp$258347[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Tmp$258347[ebp+4]
	mov	DWORD PTR [ecx+4], eax
$LN94@Unguarded_:
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Gfirst$[ebp], ecx
$LN4@Unguarded_:

; 3076 : 		}

	jmp	$LN23@Unguarded_
$LN28@Unguarded_:

; 3077 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@0@Z ENDP ; std::_Unguarded_partition<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Median@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z ; std::_Median<CvWeightedVector<int,64,1>::WeightedElement *>
; Function compile flags: /Odtp
;	COMDAT ??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@0@Z
_TEXT	SEGMENT
$T258522 = -124						; size = 4
__Tmp$258518 = -120					; size = 8
$T258502 = -112						; size = 4
$T258501 = -108						; size = 4
__Tmp$258500 = -104					; size = 8
$T258481 = -96						; size = 4
__Tmp$258480 = -92					; size = 8
$T258461 = -84						; size = 4
$T258460 = -80						; size = 4
__Tmp$258459 = -76					; size = 8
$T258440 = -68						; size = 4
$T258439 = -64						; size = 4
__Tmp$258438 = -60					; size = 8
$T258416 = -52						; size = 4
$T258415 = -48						; size = 4
__Tmp$258414 = -44					; size = 8
$T258389 = -36						; size = 4
__Tmp$258388 = -32					; size = 8
__Plast$ = -20						; size = 4
__Glast$ = -16						; size = 4
__Pfirst$ = -12						; size = 4
__Gfirst$ = -8						; size = 4
__Mid$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@0@Z PROC ; std::_Unguarded_partition<CvWeightedVector<int,64,1>::WeightedElement *>, COMDAT

; 3024 : 	{	// partition [_First, _Last), using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 124				; 0000007cH

; 3025 : 	_RanIt _Mid = _First + (_Last - _First) / 2;	// sort median to _Mid

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR __First$[ebp]
	lea	edx, DWORD PTR [ecx+eax*8]
	mov	DWORD PTR __Mid$[ebp], edx

; 3026 : 	std::_Median(_First, _Mid, _Last - 1);

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, 8
	push	eax
	mov	ecx, DWORD PTR __Mid$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Median@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z ; std::_Median<CvWeightedVector<int,64,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3027 : 	_RanIt _Pfirst = _Mid;

	mov	eax, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR __Pfirst$[ebp], eax

; 3028 : 	_RanIt _Plast = _Pfirst + 1;

	mov	ecx, DWORD PTR __Pfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Plast$[ebp], ecx
$LN27@Unguarded_@2:

; 3029 : 
; 3030 : 	while (_First < _Pfirst
; 3031 : 		&& !_DEBUG_LT(*(_Pfirst - 1), *_Pfirst)
; 3032 : 		&& !(*_Pfirst < *(_Pfirst - 1)))

	mov	edx, DWORD PTR __First$[ebp]
	cmp	edx, DWORD PTR __Pfirst$[ebp]
	jae	SHORT $LN25@Unguarded_@2
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	edx, DWORD PTR [eax-4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN25@Unguarded_@2
	mov	edx, DWORD PTR __Pfirst$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax-4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	jne	SHORT $LN25@Unguarded_@2

; 3033 : 		--_Pfirst;

	mov	ecx, DWORD PTR __Pfirst$[ebp]
	sub	ecx, 8
	mov	DWORD PTR __Pfirst$[ebp], ecx
	jmp	SHORT $LN27@Unguarded_@2
$LN25@Unguarded_@2:

; 3034 : 	while (_Plast < _Last
; 3035 : 		&& !_DEBUG_LT(*_Plast, *_Pfirst)
; 3036 : 		&& !(*_Pfirst < *_Plast))

	mov	edx, DWORD PTR __Plast$[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	jae	SHORT $LN24@Unguarded_@2
	mov	eax, DWORD PTR __Plast$[ebp]
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN24@Unguarded_@2
	mov	edx, DWORD PTR __Pfirst$[ebp]
	mov	eax, DWORD PTR __Plast$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	jne	SHORT $LN24@Unguarded_@2

; 3037 : 		++_Plast;

	mov	ecx, DWORD PTR __Plast$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Plast$[ebp], ecx
	jmp	SHORT $LN25@Unguarded_@2
$LN24@Unguarded_@2:

; 3038 : 
; 3039 : 	_RanIt _Gfirst = _Plast;

	mov	edx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR __Gfirst$[ebp], edx

; 3040 : 	_RanIt _Glast = _Pfirst;

	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR __Glast$[ebp], eax
$LN23@Unguarded_@2:

; 3041 : 
; 3042 : 	for (; ; )
; 3043 : 		{	// partition
; 3044 : 		for (; _Gfirst < _Last; ++_Gfirst)

	jmp	SHORT $LN21@Unguarded_@2
$LN20@Unguarded_@2:
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Gfirst$[ebp], ecx
$LN21@Unguarded_@2:
	mov	edx, DWORD PTR __Gfirst$[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	jae	$LN19@Unguarded_@2

; 3045 : 			if (_DEBUG_LT(*_Pfirst, *_Gfirst))

	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN44@Unguarded_@2
	jmp	SHORT $LN17@Unguarded_@2

; 3046 : 				;
; 3047 : 			else if (*_Gfirst < *_Pfirst)

$LN44@Unguarded_@2:
	mov	edx, DWORD PTR __Gfirst$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN16@Unguarded_@2

; 3048 : 				break;

	jmp	SHORT $LN19@Unguarded_@2

; 3049 : 			else

	jmp	SHORT $LN17@Unguarded_@2
$LN16@Unguarded_@2:

; 3050 : 				std::iter_swap(_Plast++, _Gfirst);

	mov	ecx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR $T258389[ebp], ecx
	mov	edx, DWORD PTR __Plast$[ebp]
	add	edx, 8
	mov	DWORD PTR __Plast$[ebp], edx
	mov	eax, DWORD PTR $T258389[ebp]
	cmp	eax, DWORD PTR __Gfirst$[ebp]
	je	SHORT $LN17@Unguarded_@2
	mov	ecx, DWORD PTR $T258389[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$258388[ebp], edx
	mov	eax, DWORD PTR $T258389[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$258388[ebp+4], ecx
	mov	edx, DWORD PTR __Gfirst$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T258389[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR __Gfirst$[ebp]
	mov	ecx, DWORD PTR __Tmp$258388[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$258388[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN17@Unguarded_@2:
	jmp	$LN20@Unguarded_@2
$LN19@Unguarded_@2:

; 3051 : 		for (; _First < _Glast; --_Glast)

	jmp	SHORT $LN14@Unguarded_@2
$LN13@Unguarded_@2:
	mov	eax, DWORD PTR __Glast$[ebp]
	sub	eax, 8
	mov	DWORD PTR __Glast$[ebp], eax
$LN14@Unguarded_@2:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Glast$[ebp]
	jae	$LN12@Unguarded_@2

; 3052 : 			if (_DEBUG_LT(*(_Glast - 1), *_Pfirst))

	mov	edx, DWORD PTR __Glast$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR [edx-4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN55@Unguarded_@2
	jmp	SHORT $LN10@Unguarded_@2

; 3053 : 				;
; 3054 : 			else if (*_Pfirst < *(_Glast - 1))

$LN55@Unguarded_@2:
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	edx, DWORD PTR __Glast$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx-4]
	setg	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN9@Unguarded_@2

; 3055 : 				break;

	jmp	SHORT $LN12@Unguarded_@2

; 3056 : 			else

	jmp	SHORT $LN10@Unguarded_@2
$LN9@Unguarded_@2:

; 3057 : 				std::iter_swap(--_Pfirst, _Glast - 1);

	mov	eax, DWORD PTR __Pfirst$[ebp]
	sub	eax, 8
	mov	DWORD PTR __Pfirst$[ebp], eax
	mov	ecx, DWORD PTR __Glast$[ebp]
	sub	ecx, 8
	mov	DWORD PTR $T258416[ebp], ecx
	mov	edx, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T258415[ebp], edx
	mov	eax, DWORD PTR $T258415[ebp]
	cmp	eax, DWORD PTR $T258416[ebp]
	je	SHORT $LN10@Unguarded_@2
	mov	ecx, DWORD PTR $T258415[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$258414[ebp], edx
	mov	eax, DWORD PTR $T258415[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$258414[ebp+4], ecx
	mov	edx, DWORD PTR $T258416[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T258415[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR $T258416[ebp]
	mov	ecx, DWORD PTR __Tmp$258414[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$258414[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN10@Unguarded_@2:
	jmp	$LN13@Unguarded_@2
$LN12@Unguarded_@2:

; 3058 : 		if (_Glast == _First && _Gfirst == _Last)

	mov	eax, DWORD PTR __Glast$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	jne	SHORT $LN7@Unguarded_@2
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	jne	SHORT $LN7@Unguarded_@2

; 3059 : 			return (pair<_RanIt, _RanIt>(_Pfirst, _Plast));

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN28@Unguarded_@2
$LN7@Unguarded_@2:

; 3060 : 
; 3061 : 		if (_Glast == _First)

	mov	eax, DWORD PTR __Glast$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	jne	$LN6@Unguarded_@2

; 3062 : 			{	// no room at bottom, rotate pivot upward
; 3063 : 			if (_Plast != _Gfirst)

	mov	ecx, DWORD PTR __Plast$[ebp]
	cmp	ecx, DWORD PTR __Gfirst$[ebp]
	je	SHORT $LN5@Unguarded_@2

; 3064 : 				std::iter_swap(_Pfirst, _Plast);

	mov	edx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR $T258440[ebp], edx
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T258439[ebp], eax
	mov	ecx, DWORD PTR $T258439[ebp]
	cmp	ecx, DWORD PTR $T258440[ebp]
	je	SHORT $LN5@Unguarded_@2
	mov	edx, DWORD PTR $T258439[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$258438[ebp], eax
	mov	ecx, DWORD PTR $T258439[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$258438[ebp+4], edx
	mov	eax, DWORD PTR $T258440[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR $T258439[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T258440[ebp]
	mov	edx, DWORD PTR __Tmp$258438[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Tmp$258438[ebp+4]
	mov	DWORD PTR [ecx+4], eax
$LN5@Unguarded_@2:

; 3065 : 			++_Plast;

	mov	ecx, DWORD PTR __Plast$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Plast$[ebp], ecx

; 3066 : 			std::iter_swap(_Pfirst++, _Gfirst++);

	mov	edx, DWORD PTR __Gfirst$[ebp]
	mov	DWORD PTR $T258461[ebp], edx
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T258460[ebp], eax
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Pfirst$[ebp], ecx
	mov	edx, DWORD PTR __Gfirst$[ebp]
	add	edx, 8
	mov	DWORD PTR __Gfirst$[ebp], edx
	mov	eax, DWORD PTR $T258460[ebp]
	cmp	eax, DWORD PTR $T258461[ebp]
	je	SHORT $LN73@Unguarded_@2
	mov	ecx, DWORD PTR $T258460[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$258459[ebp], edx
	mov	eax, DWORD PTR $T258460[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$258459[ebp+4], ecx
	mov	edx, DWORD PTR $T258461[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T258460[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR $T258461[ebp]
	mov	ecx, DWORD PTR __Tmp$258459[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$258459[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN73@Unguarded_@2:

; 3067 : 			}
; 3068 : 		else if (_Gfirst == _Last)

	jmp	$LN4@Unguarded_@2
$LN6@Unguarded_@2:
	mov	eax, DWORD PTR __Gfirst$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	jne	$LN3@Unguarded_@2

; 3069 : 			{	// no room at top, rotate pivot downward
; 3070 : 			if (--_Glast != --_Pfirst)

	mov	ecx, DWORD PTR __Glast$[ebp]
	sub	ecx, 8
	mov	DWORD PTR __Glast$[ebp], ecx
	mov	edx, DWORD PTR __Pfirst$[ebp]
	sub	edx, 8
	mov	DWORD PTR __Pfirst$[ebp], edx
	mov	eax, DWORD PTR __Glast$[ebp]
	cmp	eax, DWORD PTR __Pfirst$[ebp]
	je	SHORT $LN2@Unguarded_@2

; 3071 : 				std::iter_swap(_Glast, _Pfirst);

	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T258481[ebp], ecx
	mov	edx, DWORD PTR __Glast$[ebp]
	cmp	edx, DWORD PTR $T258481[ebp]
	je	SHORT $LN2@Unguarded_@2
	mov	eax, DWORD PTR __Glast$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$258480[ebp], ecx
	mov	edx, DWORD PTR __Glast$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Tmp$258480[ebp+4], eax
	mov	ecx, DWORD PTR $T258481[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Glast$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T258481[ebp]
	mov	eax, DWORD PTR __Tmp$258480[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Tmp$258480[ebp+4]
	mov	DWORD PTR [edx+4], ecx
$LN2@Unguarded_@2:

; 3072 : 			std::iter_swap(_Pfirst, --_Plast);

	mov	edx, DWORD PTR __Plast$[ebp]
	sub	edx, 8
	mov	DWORD PTR __Plast$[ebp], edx
	mov	eax, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR $T258502[ebp], eax
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T258501[ebp], ecx
	mov	edx, DWORD PTR $T258501[ebp]
	cmp	edx, DWORD PTR $T258502[ebp]
	je	SHORT $LN87@Unguarded_@2
	mov	eax, DWORD PTR $T258501[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$258500[ebp], ecx
	mov	edx, DWORD PTR $T258501[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Tmp$258500[ebp+4], eax
	mov	ecx, DWORD PTR $T258502[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR $T258501[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T258502[ebp]
	mov	eax, DWORD PTR __Tmp$258500[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Tmp$258500[ebp+4]
	mov	DWORD PTR [edx+4], ecx
$LN87@Unguarded_@2:

; 3073 : 			}
; 3074 : 		else

	jmp	SHORT $LN4@Unguarded_@2
$LN3@Unguarded_@2:

; 3075 : 			std::iter_swap(_Gfirst++, --_Glast);

	mov	edx, DWORD PTR __Glast$[ebp]
	sub	edx, 8
	mov	DWORD PTR __Glast$[ebp], edx
	mov	eax, DWORD PTR __Gfirst$[ebp]
	mov	DWORD PTR $T258522[ebp], eax
	mov	ecx, DWORD PTR $T258522[ebp]
	cmp	ecx, DWORD PTR __Glast$[ebp]
	je	SHORT $LN94@Unguarded_@2
	mov	edx, DWORD PTR $T258522[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$258518[ebp], eax
	mov	ecx, DWORD PTR $T258522[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$258518[ebp+4], edx
	mov	eax, DWORD PTR __Glast$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR $T258522[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR __Glast$[ebp]
	mov	edx, DWORD PTR __Tmp$258518[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Tmp$258518[ebp+4]
	mov	DWORD PTR [ecx+4], eax
$LN94@Unguarded_@2:
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Gfirst$[ebp], ecx
$LN4@Unguarded_@2:

; 3076 : 		}

	jmp	$LN23@Unguarded_@2
$LN28@Unguarded_@2:

; 3077 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@0@Z ENDP ; std::_Unguarded_partition<CvWeightedVector<int,64,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Median@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z ; std::_Median<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *>
; Function compile flags: /Odtp
;	COMDAT ??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@0@Z
_TEXT	SEGMENT
$T258696 = -124						; size = 4
__Tmp$258692 = -120					; size = 8
$T258676 = -112						; size = 4
$T258675 = -108						; size = 4
__Tmp$258671 = -104					; size = 8
$T258655 = -96						; size = 4
__Tmp$258651 = -92					; size = 8
$T258635 = -84						; size = 4
$T258634 = -80						; size = 4
__Tmp$258633 = -76					; size = 8
$T258614 = -68						; size = 4
$T258613 = -64						; size = 4
__Tmp$258612 = -60					; size = 8
$T258590 = -52						; size = 4
$T258589 = -48						; size = 4
__Tmp$258588 = -44					; size = 8
$T258563 = -36						; size = 4
__Tmp$258562 = -32					; size = 8
__Plast$ = -20						; size = 4
__Glast$ = -16						; size = 4
__Pfirst$ = -12						; size = 4
__Gfirst$ = -8						; size = 4
__Mid$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@0@Z PROC ; std::_Unguarded_partition<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *>, COMDAT

; 3024 : 	{	// partition [_First, _Last), using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 124				; 0000007cH

; 3025 : 	_RanIt _Mid = _First + (_Last - _First) / 2;	// sort median to _Mid

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR __First$[ebp]
	lea	edx, DWORD PTR [ecx+eax*8]
	mov	DWORD PTR __Mid$[ebp], edx

; 3026 : 	std::_Median(_First, _Mid, _Last - 1);

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, 8
	push	eax
	mov	ecx, DWORD PTR __Mid$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Median@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z ; std::_Median<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3027 : 	_RanIt _Pfirst = _Mid;

	mov	eax, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR __Pfirst$[ebp], eax

; 3028 : 	_RanIt _Plast = _Pfirst + 1;

	mov	ecx, DWORD PTR __Pfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Plast$[ebp], ecx
$LN27@Unguarded_@3:

; 3029 : 
; 3030 : 	while (_First < _Pfirst
; 3031 : 		&& !_DEBUG_LT(*(_Pfirst - 1), *_Pfirst)
; 3032 : 		&& !(*_Pfirst < *(_Pfirst - 1)))

	mov	edx, DWORD PTR __First$[ebp]
	cmp	edx, DWORD PTR __Pfirst$[ebp]
	jae	SHORT $LN25@Unguarded_@3
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	edx, DWORD PTR [eax-4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN25@Unguarded_@3
	mov	edx, DWORD PTR __Pfirst$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax-4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	jne	SHORT $LN25@Unguarded_@3

; 3033 : 		--_Pfirst;

	mov	ecx, DWORD PTR __Pfirst$[ebp]
	sub	ecx, 8
	mov	DWORD PTR __Pfirst$[ebp], ecx
	jmp	SHORT $LN27@Unguarded_@3
$LN25@Unguarded_@3:

; 3034 : 	while (_Plast < _Last
; 3035 : 		&& !_DEBUG_LT(*_Plast, *_Pfirst)
; 3036 : 		&& !(*_Pfirst < *_Plast))

	mov	edx, DWORD PTR __Plast$[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	jae	SHORT $LN24@Unguarded_@3
	mov	eax, DWORD PTR __Plast$[ebp]
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN24@Unguarded_@3
	mov	edx, DWORD PTR __Pfirst$[ebp]
	mov	eax, DWORD PTR __Plast$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	jne	SHORT $LN24@Unguarded_@3

; 3037 : 		++_Plast;

	mov	ecx, DWORD PTR __Plast$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Plast$[ebp], ecx
	jmp	SHORT $LN25@Unguarded_@3
$LN24@Unguarded_@3:

; 3038 : 
; 3039 : 	_RanIt _Gfirst = _Plast;

	mov	edx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR __Gfirst$[ebp], edx

; 3040 : 	_RanIt _Glast = _Pfirst;

	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR __Glast$[ebp], eax
$LN23@Unguarded_@3:

; 3041 : 
; 3042 : 	for (; ; )
; 3043 : 		{	// partition
; 3044 : 		for (; _Gfirst < _Last; ++_Gfirst)

	jmp	SHORT $LN21@Unguarded_@3
$LN20@Unguarded_@3:
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Gfirst$[ebp], ecx
$LN21@Unguarded_@3:
	mov	edx, DWORD PTR __Gfirst$[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	jae	$LN19@Unguarded_@3

; 3045 : 			if (_DEBUG_LT(*_Pfirst, *_Gfirst))

	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN44@Unguarded_@3
	jmp	SHORT $LN17@Unguarded_@3

; 3046 : 				;
; 3047 : 			else if (*_Gfirst < *_Pfirst)

$LN44@Unguarded_@3:
	mov	edx, DWORD PTR __Gfirst$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN16@Unguarded_@3

; 3048 : 				break;

	jmp	SHORT $LN19@Unguarded_@3

; 3049 : 			else

	jmp	SHORT $LN17@Unguarded_@3
$LN16@Unguarded_@3:

; 3050 : 				std::iter_swap(_Plast++, _Gfirst);

	mov	ecx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR $T258563[ebp], ecx
	mov	edx, DWORD PTR __Plast$[ebp]
	add	edx, 8
	mov	DWORD PTR __Plast$[ebp], edx
	mov	eax, DWORD PTR $T258563[ebp]
	cmp	eax, DWORD PTR __Gfirst$[ebp]
	je	SHORT $LN17@Unguarded_@3
	mov	ecx, DWORD PTR $T258563[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$258562[ebp], edx
	mov	eax, DWORD PTR $T258563[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$258562[ebp+4], ecx
	mov	edx, DWORD PTR __Gfirst$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T258563[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR __Gfirst$[ebp]
	mov	ecx, DWORD PTR __Tmp$258562[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$258562[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN17@Unguarded_@3:
	jmp	$LN20@Unguarded_@3
$LN19@Unguarded_@3:

; 3051 : 		for (; _First < _Glast; --_Glast)

	jmp	SHORT $LN14@Unguarded_@3
$LN13@Unguarded_@3:
	mov	eax, DWORD PTR __Glast$[ebp]
	sub	eax, 8
	mov	DWORD PTR __Glast$[ebp], eax
$LN14@Unguarded_@3:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Glast$[ebp]
	jae	$LN12@Unguarded_@3

; 3052 : 			if (_DEBUG_LT(*(_Glast - 1), *_Pfirst))

	mov	edx, DWORD PTR __Glast$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR [edx-4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN55@Unguarded_@3
	jmp	SHORT $LN10@Unguarded_@3

; 3053 : 				;
; 3054 : 			else if (*_Pfirst < *(_Glast - 1))

$LN55@Unguarded_@3:
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	edx, DWORD PTR __Glast$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx-4]
	setg	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN9@Unguarded_@3

; 3055 : 				break;

	jmp	SHORT $LN12@Unguarded_@3

; 3056 : 			else

	jmp	SHORT $LN10@Unguarded_@3
$LN9@Unguarded_@3:

; 3057 : 				std::iter_swap(--_Pfirst, _Glast - 1);

	mov	eax, DWORD PTR __Pfirst$[ebp]
	sub	eax, 8
	mov	DWORD PTR __Pfirst$[ebp], eax
	mov	ecx, DWORD PTR __Glast$[ebp]
	sub	ecx, 8
	mov	DWORD PTR $T258590[ebp], ecx
	mov	edx, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T258589[ebp], edx
	mov	eax, DWORD PTR $T258589[ebp]
	cmp	eax, DWORD PTR $T258590[ebp]
	je	SHORT $LN10@Unguarded_@3
	mov	ecx, DWORD PTR $T258589[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$258588[ebp], edx
	mov	eax, DWORD PTR $T258589[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$258588[ebp+4], ecx
	mov	edx, DWORD PTR $T258590[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T258589[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR $T258590[ebp]
	mov	ecx, DWORD PTR __Tmp$258588[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$258588[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN10@Unguarded_@3:
	jmp	$LN13@Unguarded_@3
$LN12@Unguarded_@3:

; 3058 : 		if (_Glast == _First && _Gfirst == _Last)

	mov	eax, DWORD PTR __Glast$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	jne	SHORT $LN7@Unguarded_@3
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	jne	SHORT $LN7@Unguarded_@3

; 3059 : 			return (pair<_RanIt, _RanIt>(_Pfirst, _Plast));

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN28@Unguarded_@3
$LN7@Unguarded_@3:

; 3060 : 
; 3061 : 		if (_Glast == _First)

	mov	eax, DWORD PTR __Glast$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	jne	$LN6@Unguarded_@3

; 3062 : 			{	// no room at bottom, rotate pivot upward
; 3063 : 			if (_Plast != _Gfirst)

	mov	ecx, DWORD PTR __Plast$[ebp]
	cmp	ecx, DWORD PTR __Gfirst$[ebp]
	je	SHORT $LN5@Unguarded_@3

; 3064 : 				std::iter_swap(_Pfirst, _Plast);

	mov	edx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR $T258614[ebp], edx
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T258613[ebp], eax
	mov	ecx, DWORD PTR $T258613[ebp]
	cmp	ecx, DWORD PTR $T258614[ebp]
	je	SHORT $LN5@Unguarded_@3
	mov	edx, DWORD PTR $T258613[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$258612[ebp], eax
	mov	ecx, DWORD PTR $T258613[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$258612[ebp+4], edx
	mov	eax, DWORD PTR $T258614[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR $T258613[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T258614[ebp]
	mov	edx, DWORD PTR __Tmp$258612[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Tmp$258612[ebp+4]
	mov	DWORD PTR [ecx+4], eax
$LN5@Unguarded_@3:

; 3065 : 			++_Plast;

	mov	ecx, DWORD PTR __Plast$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Plast$[ebp], ecx

; 3066 : 			std::iter_swap(_Pfirst++, _Gfirst++);

	mov	edx, DWORD PTR __Gfirst$[ebp]
	mov	DWORD PTR $T258635[ebp], edx
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T258634[ebp], eax
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Pfirst$[ebp], ecx
	mov	edx, DWORD PTR __Gfirst$[ebp]
	add	edx, 8
	mov	DWORD PTR __Gfirst$[ebp], edx
	mov	eax, DWORD PTR $T258634[ebp]
	cmp	eax, DWORD PTR $T258635[ebp]
	je	SHORT $LN73@Unguarded_@3
	mov	ecx, DWORD PTR $T258634[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$258633[ebp], edx
	mov	eax, DWORD PTR $T258634[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$258633[ebp+4], ecx
	mov	edx, DWORD PTR $T258635[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T258634[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR $T258635[ebp]
	mov	ecx, DWORD PTR __Tmp$258633[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$258633[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN73@Unguarded_@3:

; 3067 : 			}
; 3068 : 		else if (_Gfirst == _Last)

	jmp	$LN4@Unguarded_@3
$LN6@Unguarded_@3:
	mov	eax, DWORD PTR __Gfirst$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	jne	$LN3@Unguarded_@3

; 3069 : 			{	// no room at top, rotate pivot downward
; 3070 : 			if (--_Glast != --_Pfirst)

	mov	ecx, DWORD PTR __Glast$[ebp]
	sub	ecx, 8
	mov	DWORD PTR __Glast$[ebp], ecx
	mov	edx, DWORD PTR __Pfirst$[ebp]
	sub	edx, 8
	mov	DWORD PTR __Pfirst$[ebp], edx
	mov	eax, DWORD PTR __Glast$[ebp]
	cmp	eax, DWORD PTR __Pfirst$[ebp]
	je	SHORT $LN2@Unguarded_@3

; 3071 : 				std::iter_swap(_Glast, _Pfirst);

	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T258655[ebp], ecx
	mov	edx, DWORD PTR __Glast$[ebp]
	cmp	edx, DWORD PTR $T258655[ebp]
	je	SHORT $LN2@Unguarded_@3
	mov	eax, DWORD PTR __Glast$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$258651[ebp], ecx
	mov	edx, DWORD PTR __Glast$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Tmp$258651[ebp+4], eax
	mov	ecx, DWORD PTR $T258655[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Glast$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T258655[ebp]
	mov	eax, DWORD PTR __Tmp$258651[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Tmp$258651[ebp+4]
	mov	DWORD PTR [edx+4], ecx
$LN2@Unguarded_@3:

; 3072 : 			std::iter_swap(_Pfirst, --_Plast);

	mov	edx, DWORD PTR __Plast$[ebp]
	sub	edx, 8
	mov	DWORD PTR __Plast$[ebp], edx
	mov	eax, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR $T258676[ebp], eax
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T258675[ebp], ecx
	mov	edx, DWORD PTR $T258675[ebp]
	cmp	edx, DWORD PTR $T258676[ebp]
	je	SHORT $LN87@Unguarded_@3
	mov	eax, DWORD PTR $T258675[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$258671[ebp], ecx
	mov	edx, DWORD PTR $T258675[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Tmp$258671[ebp+4], eax
	mov	ecx, DWORD PTR $T258676[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR $T258675[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T258676[ebp]
	mov	eax, DWORD PTR __Tmp$258671[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Tmp$258671[ebp+4]
	mov	DWORD PTR [edx+4], ecx
$LN87@Unguarded_@3:

; 3073 : 			}
; 3074 : 		else

	jmp	SHORT $LN4@Unguarded_@3
$LN3@Unguarded_@3:

; 3075 : 			std::iter_swap(_Gfirst++, --_Glast);

	mov	edx, DWORD PTR __Glast$[ebp]
	sub	edx, 8
	mov	DWORD PTR __Glast$[ebp], edx
	mov	eax, DWORD PTR __Gfirst$[ebp]
	mov	DWORD PTR $T258696[ebp], eax
	mov	ecx, DWORD PTR $T258696[ebp]
	cmp	ecx, DWORD PTR __Glast$[ebp]
	je	SHORT $LN94@Unguarded_@3
	mov	edx, DWORD PTR $T258696[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$258692[ebp], eax
	mov	ecx, DWORD PTR $T258696[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$258692[ebp+4], edx
	mov	eax, DWORD PTR __Glast$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR $T258696[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR __Glast$[ebp]
	mov	edx, DWORD PTR __Tmp$258692[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Tmp$258692[ebp+4]
	mov	DWORD PTR [ecx+4], eax
$LN94@Unguarded_@3:
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Gfirst$[ebp], ecx
$LN4@Unguarded_@3:

; 3076 : 		}

	jmp	$LN23@Unguarded_@3
$LN28@Unguarded_@3:

; 3077 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@0@Z ENDP ; std::_Unguarded_partition<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Median@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z ; std::_Median<CvWeightedVector<int,100,1>::WeightedElement *>
; Function compile flags: /Odtp
;	COMDAT ??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@0@Z
_TEXT	SEGMENT
$T258870 = -124						; size = 4
__Tmp$258866 = -120					; size = 8
$T258850 = -112						; size = 4
$T258849 = -108						; size = 4
__Tmp$258845 = -104					; size = 8
$T258829 = -96						; size = 4
__Tmp$258825 = -92					; size = 8
$T258809 = -84						; size = 4
$T258808 = -80						; size = 4
__Tmp$258804 = -76					; size = 8
$T258788 = -68						; size = 4
$T258787 = -64						; size = 4
__Tmp$258783 = -60					; size = 8
$T258764 = -52						; size = 4
$T258763 = -48						; size = 4
__Tmp$258762 = -44					; size = 8
$T258737 = -36						; size = 4
__Tmp$258736 = -32					; size = 8
__Plast$ = -20						; size = 4
__Glast$ = -16						; size = 4
__Pfirst$ = -12						; size = 4
__Gfirst$ = -8						; size = 4
__Mid$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@0@Z PROC ; std::_Unguarded_partition<CvWeightedVector<int,100,1>::WeightedElement *>, COMDAT

; 3024 : 	{	// partition [_First, _Last), using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 124				; 0000007cH

; 3025 : 	_RanIt _Mid = _First + (_Last - _First) / 2;	// sort median to _Mid

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR __First$[ebp]
	lea	edx, DWORD PTR [ecx+eax*8]
	mov	DWORD PTR __Mid$[ebp], edx

; 3026 : 	std::_Median(_First, _Mid, _Last - 1);

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, 8
	push	eax
	mov	ecx, DWORD PTR __Mid$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Median@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z ; std::_Median<CvWeightedVector<int,100,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3027 : 	_RanIt _Pfirst = _Mid;

	mov	eax, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR __Pfirst$[ebp], eax

; 3028 : 	_RanIt _Plast = _Pfirst + 1;

	mov	ecx, DWORD PTR __Pfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Plast$[ebp], ecx
$LN27@Unguarded_@4:

; 3029 : 
; 3030 : 	while (_First < _Pfirst
; 3031 : 		&& !_DEBUG_LT(*(_Pfirst - 1), *_Pfirst)
; 3032 : 		&& !(*_Pfirst < *(_Pfirst - 1)))

	mov	edx, DWORD PTR __First$[ebp]
	cmp	edx, DWORD PTR __Pfirst$[ebp]
	jae	SHORT $LN25@Unguarded_@4
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	edx, DWORD PTR [eax-4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN25@Unguarded_@4
	mov	edx, DWORD PTR __Pfirst$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax-4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	jne	SHORT $LN25@Unguarded_@4

; 3033 : 		--_Pfirst;

	mov	ecx, DWORD PTR __Pfirst$[ebp]
	sub	ecx, 8
	mov	DWORD PTR __Pfirst$[ebp], ecx
	jmp	SHORT $LN27@Unguarded_@4
$LN25@Unguarded_@4:

; 3034 : 	while (_Plast < _Last
; 3035 : 		&& !_DEBUG_LT(*_Plast, *_Pfirst)
; 3036 : 		&& !(*_Pfirst < *_Plast))

	mov	edx, DWORD PTR __Plast$[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	jae	SHORT $LN24@Unguarded_@4
	mov	eax, DWORD PTR __Plast$[ebp]
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN24@Unguarded_@4
	mov	edx, DWORD PTR __Pfirst$[ebp]
	mov	eax, DWORD PTR __Plast$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	jne	SHORT $LN24@Unguarded_@4

; 3037 : 		++_Plast;

	mov	ecx, DWORD PTR __Plast$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Plast$[ebp], ecx
	jmp	SHORT $LN25@Unguarded_@4
$LN24@Unguarded_@4:

; 3038 : 
; 3039 : 	_RanIt _Gfirst = _Plast;

	mov	edx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR __Gfirst$[ebp], edx

; 3040 : 	_RanIt _Glast = _Pfirst;

	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR __Glast$[ebp], eax
$LN23@Unguarded_@4:

; 3041 : 
; 3042 : 	for (; ; )
; 3043 : 		{	// partition
; 3044 : 		for (; _Gfirst < _Last; ++_Gfirst)

	jmp	SHORT $LN21@Unguarded_@4
$LN20@Unguarded_@4:
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Gfirst$[ebp], ecx
$LN21@Unguarded_@4:
	mov	edx, DWORD PTR __Gfirst$[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	jae	$LN19@Unguarded_@4

; 3045 : 			if (_DEBUG_LT(*_Pfirst, *_Gfirst))

	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN44@Unguarded_@4
	jmp	SHORT $LN17@Unguarded_@4

; 3046 : 				;
; 3047 : 			else if (*_Gfirst < *_Pfirst)

$LN44@Unguarded_@4:
	mov	edx, DWORD PTR __Gfirst$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN16@Unguarded_@4

; 3048 : 				break;

	jmp	SHORT $LN19@Unguarded_@4

; 3049 : 			else

	jmp	SHORT $LN17@Unguarded_@4
$LN16@Unguarded_@4:

; 3050 : 				std::iter_swap(_Plast++, _Gfirst);

	mov	ecx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR $T258737[ebp], ecx
	mov	edx, DWORD PTR __Plast$[ebp]
	add	edx, 8
	mov	DWORD PTR __Plast$[ebp], edx
	mov	eax, DWORD PTR $T258737[ebp]
	cmp	eax, DWORD PTR __Gfirst$[ebp]
	je	SHORT $LN17@Unguarded_@4
	mov	ecx, DWORD PTR $T258737[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$258736[ebp], edx
	mov	eax, DWORD PTR $T258737[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$258736[ebp+4], ecx
	mov	edx, DWORD PTR __Gfirst$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T258737[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR __Gfirst$[ebp]
	mov	ecx, DWORD PTR __Tmp$258736[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$258736[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN17@Unguarded_@4:
	jmp	$LN20@Unguarded_@4
$LN19@Unguarded_@4:

; 3051 : 		for (; _First < _Glast; --_Glast)

	jmp	SHORT $LN14@Unguarded_@4
$LN13@Unguarded_@4:
	mov	eax, DWORD PTR __Glast$[ebp]
	sub	eax, 8
	mov	DWORD PTR __Glast$[ebp], eax
$LN14@Unguarded_@4:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Glast$[ebp]
	jae	$LN12@Unguarded_@4

; 3052 : 			if (_DEBUG_LT(*(_Glast - 1), *_Pfirst))

	mov	edx, DWORD PTR __Glast$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR [edx-4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN55@Unguarded_@4
	jmp	SHORT $LN10@Unguarded_@4

; 3053 : 				;
; 3054 : 			else if (*_Pfirst < *(_Glast - 1))

$LN55@Unguarded_@4:
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	edx, DWORD PTR __Glast$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx-4]
	setg	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN9@Unguarded_@4

; 3055 : 				break;

	jmp	SHORT $LN12@Unguarded_@4

; 3056 : 			else

	jmp	SHORT $LN10@Unguarded_@4
$LN9@Unguarded_@4:

; 3057 : 				std::iter_swap(--_Pfirst, _Glast - 1);

	mov	eax, DWORD PTR __Pfirst$[ebp]
	sub	eax, 8
	mov	DWORD PTR __Pfirst$[ebp], eax
	mov	ecx, DWORD PTR __Glast$[ebp]
	sub	ecx, 8
	mov	DWORD PTR $T258764[ebp], ecx
	mov	edx, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T258763[ebp], edx
	mov	eax, DWORD PTR $T258763[ebp]
	cmp	eax, DWORD PTR $T258764[ebp]
	je	SHORT $LN10@Unguarded_@4
	mov	ecx, DWORD PTR $T258763[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$258762[ebp], edx
	mov	eax, DWORD PTR $T258763[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$258762[ebp+4], ecx
	mov	edx, DWORD PTR $T258764[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T258763[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR $T258764[ebp]
	mov	ecx, DWORD PTR __Tmp$258762[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$258762[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN10@Unguarded_@4:
	jmp	$LN13@Unguarded_@4
$LN12@Unguarded_@4:

; 3058 : 		if (_Glast == _First && _Gfirst == _Last)

	mov	eax, DWORD PTR __Glast$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	jne	SHORT $LN7@Unguarded_@4
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	jne	SHORT $LN7@Unguarded_@4

; 3059 : 			return (pair<_RanIt, _RanIt>(_Pfirst, _Plast));

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN28@Unguarded_@4
$LN7@Unguarded_@4:

; 3060 : 
; 3061 : 		if (_Glast == _First)

	mov	eax, DWORD PTR __Glast$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	jne	$LN6@Unguarded_@4

; 3062 : 			{	// no room at bottom, rotate pivot upward
; 3063 : 			if (_Plast != _Gfirst)

	mov	ecx, DWORD PTR __Plast$[ebp]
	cmp	ecx, DWORD PTR __Gfirst$[ebp]
	je	SHORT $LN5@Unguarded_@4

; 3064 : 				std::iter_swap(_Pfirst, _Plast);

	mov	edx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR $T258788[ebp], edx
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T258787[ebp], eax
	mov	ecx, DWORD PTR $T258787[ebp]
	cmp	ecx, DWORD PTR $T258788[ebp]
	je	SHORT $LN5@Unguarded_@4
	mov	edx, DWORD PTR $T258787[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$258783[ebp], eax
	mov	ecx, DWORD PTR $T258787[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$258783[ebp+4], edx
	mov	eax, DWORD PTR $T258788[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR $T258787[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T258788[ebp]
	mov	edx, DWORD PTR __Tmp$258783[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Tmp$258783[ebp+4]
	mov	DWORD PTR [ecx+4], eax
$LN5@Unguarded_@4:

; 3065 : 			++_Plast;

	mov	ecx, DWORD PTR __Plast$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Plast$[ebp], ecx

; 3066 : 			std::iter_swap(_Pfirst++, _Gfirst++);

	mov	edx, DWORD PTR __Gfirst$[ebp]
	mov	DWORD PTR $T258809[ebp], edx
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T258808[ebp], eax
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Pfirst$[ebp], ecx
	mov	edx, DWORD PTR __Gfirst$[ebp]
	add	edx, 8
	mov	DWORD PTR __Gfirst$[ebp], edx
	mov	eax, DWORD PTR $T258808[ebp]
	cmp	eax, DWORD PTR $T258809[ebp]
	je	SHORT $LN73@Unguarded_@4
	mov	ecx, DWORD PTR $T258808[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$258804[ebp], edx
	mov	eax, DWORD PTR $T258808[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$258804[ebp+4], ecx
	mov	edx, DWORD PTR $T258809[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T258808[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR $T258809[ebp]
	mov	ecx, DWORD PTR __Tmp$258804[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$258804[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN73@Unguarded_@4:

; 3067 : 			}
; 3068 : 		else if (_Gfirst == _Last)

	jmp	$LN4@Unguarded_@4
$LN6@Unguarded_@4:
	mov	eax, DWORD PTR __Gfirst$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	jne	$LN3@Unguarded_@4

; 3069 : 			{	// no room at top, rotate pivot downward
; 3070 : 			if (--_Glast != --_Pfirst)

	mov	ecx, DWORD PTR __Glast$[ebp]
	sub	ecx, 8
	mov	DWORD PTR __Glast$[ebp], ecx
	mov	edx, DWORD PTR __Pfirst$[ebp]
	sub	edx, 8
	mov	DWORD PTR __Pfirst$[ebp], edx
	mov	eax, DWORD PTR __Glast$[ebp]
	cmp	eax, DWORD PTR __Pfirst$[ebp]
	je	SHORT $LN2@Unguarded_@4

; 3071 : 				std::iter_swap(_Glast, _Pfirst);

	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T258829[ebp], ecx
	mov	edx, DWORD PTR __Glast$[ebp]
	cmp	edx, DWORD PTR $T258829[ebp]
	je	SHORT $LN2@Unguarded_@4
	mov	eax, DWORD PTR __Glast$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$258825[ebp], ecx
	mov	edx, DWORD PTR __Glast$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Tmp$258825[ebp+4], eax
	mov	ecx, DWORD PTR $T258829[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Glast$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T258829[ebp]
	mov	eax, DWORD PTR __Tmp$258825[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Tmp$258825[ebp+4]
	mov	DWORD PTR [edx+4], ecx
$LN2@Unguarded_@4:

; 3072 : 			std::iter_swap(_Pfirst, --_Plast);

	mov	edx, DWORD PTR __Plast$[ebp]
	sub	edx, 8
	mov	DWORD PTR __Plast$[ebp], edx
	mov	eax, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR $T258850[ebp], eax
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T258849[ebp], ecx
	mov	edx, DWORD PTR $T258849[ebp]
	cmp	edx, DWORD PTR $T258850[ebp]
	je	SHORT $LN87@Unguarded_@4
	mov	eax, DWORD PTR $T258849[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$258845[ebp], ecx
	mov	edx, DWORD PTR $T258849[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Tmp$258845[ebp+4], eax
	mov	ecx, DWORD PTR $T258850[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR $T258849[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T258850[ebp]
	mov	eax, DWORD PTR __Tmp$258845[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Tmp$258845[ebp+4]
	mov	DWORD PTR [edx+4], ecx
$LN87@Unguarded_@4:

; 3073 : 			}
; 3074 : 		else

	jmp	SHORT $LN4@Unguarded_@4
$LN3@Unguarded_@4:

; 3075 : 			std::iter_swap(_Gfirst++, --_Glast);

	mov	edx, DWORD PTR __Glast$[ebp]
	sub	edx, 8
	mov	DWORD PTR __Glast$[ebp], edx
	mov	eax, DWORD PTR __Gfirst$[ebp]
	mov	DWORD PTR $T258870[ebp], eax
	mov	ecx, DWORD PTR $T258870[ebp]
	cmp	ecx, DWORD PTR __Glast$[ebp]
	je	SHORT $LN94@Unguarded_@4
	mov	edx, DWORD PTR $T258870[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$258866[ebp], eax
	mov	ecx, DWORD PTR $T258870[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$258866[ebp+4], edx
	mov	eax, DWORD PTR __Glast$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR $T258870[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR __Glast$[ebp]
	mov	edx, DWORD PTR __Tmp$258866[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Tmp$258866[ebp+4]
	mov	DWORD PTR [ecx+4], eax
$LN94@Unguarded_@4:
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Gfirst$[ebp], ecx
$LN4@Unguarded_@4:

; 3076 : 		}

	jmp	$LN23@Unguarded_@4
$LN28@Unguarded_@4:

; 3077 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@0@Z ENDP ; std::_Unguarded_partition<CvWeightedVector<int,100,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z ; std::_Med3<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *>
; Function compile flags: /Odtp
;	COMDAT ??$_Median@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z
_TEXT	SEGMENT
__Step$232479 = -4					; size = 4
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Median@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z PROC ; std::_Median<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *>, COMDAT

; 3009 : 	{	// sort median element to middle

	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH

; 3010 : 	if (40 < _Last - _First)

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	cmp	eax, 40					; 00000028H
	jle	$LN2@Median

; 3011 : 		{	// median of nine
; 3012 : 		size_t _Step = (_Last - _First + 1) / 8;

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	add	eax, 1
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR __Step$232479[ebp], eax

; 3013 : 		std::_Med3(_First, _First + _Step, _First + 2 * _Step);

	mov	ecx, DWORD PTR __Step$232479[ebp]
	shl	ecx, 1
	mov	edx, DWORD PTR __First$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
	push	eax
	mov	ecx, DWORD PTR __Step$232479[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z ; std::_Med3<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3014 : 		std::_Med3(_Mid - _Step, _Mid, _Mid + _Step);

	mov	edx, DWORD PTR __Step$232479[ebp]
	mov	eax, DWORD PTR __Mid$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	push	ecx
	mov	edx, DWORD PTR __Mid$[ebp]
	push	edx
	mov	eax, DWORD PTR __Step$232479[ebp]
	shl	eax, 3
	mov	ecx, DWORD PTR __Mid$[ebp]
	sub	ecx, eax
	push	ecx
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z ; std::_Med3<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3015 : 		std::_Med3(_Last - 2 * _Step, _Last - _Step, _Last);

	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __Step$232479[ebp]
	shl	eax, 3
	mov	ecx, DWORD PTR __Last$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR __Step$232479[ebp]
	shl	edx, 1
	shl	edx, 3
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, edx
	push	eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z ; std::_Med3<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3016 : 		std::_Med3(_First + _Step, _Mid, _Last - _Step);

	mov	ecx, DWORD PTR __Step$232479[ebp]
	shl	ecx, 3
	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, ecx
	push	edx
	mov	eax, DWORD PTR __Mid$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Step$232479[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
	push	eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z ; std::_Med3<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3017 : 		}
; 3018 : 	else

	jmp	SHORT $LN3@Median
$LN2@Median:

; 3019 : 		std::_Med3(_First, _Mid, _Last);

	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Mid$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z ; std::_Med3<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *>
	add	esp, 12					; 0000000cH
$LN3@Median:

; 3020 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Median@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z ENDP ; std::_Median<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *,int,CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement>
; Function compile flags: /Odtp
;	COMDAT ??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@0PAH0@Z
_TEXT	SEGMENT
$T259183 = -20						; size = 4
$T259182 = -16						; size = 4
__Hole$232497 = -8					; size = 4
__Bottom$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@0PAH0@Z PROC ; std::_Make_heap<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *,int,CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement>, COMDAT

; 2164 : 	{	// make nontrivial [_First, _Last) into a heap, using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H

; 2165 : 	_Diff _Bottom = _Last - _First;

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	mov	DWORD PTR __Bottom$[ebp], eax

; 2166 : 
; 2167 : 	for (_Diff _Hole = _Bottom / 2; 0 < _Hole; )

	mov	eax, DWORD PTR __Bottom$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Hole$232497[ebp], eax
$LN2@Make_heap:
	cmp	DWORD PTR __Hole$232497[ebp], 0
	jle	SHORT $LN3@Make_heap

; 2168 : 		{	// reheap top half, bottom to top
; 2169 : 		--_Hole;

	mov	ecx, DWORD PTR __Hole$232497[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Hole$232497[ebp], ecx

; 2170 : 		std::_Adjust_heap(_First, _Hole, _Bottom,
; 2171 : 			_Ty(*(_First + _Hole)));

	mov	edx, DWORD PTR __Hole$232497[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	mov	DWORD PTR $T259183[ebp], ecx
	sub	esp, 8
	mov	DWORD PTR $T259182[ebp], esp
	mov	edx, DWORD PTR $T259182[ebp]
	mov	eax, DWORD PTR $T259183[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T259182[ebp]
	mov	eax, DWORD PTR $T259183[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	edx, DWORD PTR __Bottom$[ebp]
	push	edx
	mov	eax, DWORD PTR __Hole$232497[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *,int,CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement>
	add	esp, 20					; 00000014H

; 2172 : 		}

	jmp	SHORT $LN2@Make_heap
$LN3@Make_heap:

; 2173 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@0PAH0@Z ENDP ; std::_Make_heap<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *,int,CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z
_TEXT	SEGMENT
$T259253 = -52						; size = 4
$T259252 = -48						; size = 4
$T259236 = -42						; size = 1
$T259235 = -41						; size = 1
$T259234 = -40						; size = 4
$T259233 = -36						; size = 4
$T259232 = -32						; size = 4
__Cat$259243 = -24					; size = 1
$T259240 = -23						; size = 1
$T259239 = -22						; size = 1
$T259238 = -21						; size = 1
__First1$232538 = -20					; size = 4
__Val$232528 = -16					; size = 8
__Next1$232527 = -8					; size = 4
__Next$232523 = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z PROC ; std::_Insertion_sort1<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *,CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement>, COMDAT

; 2967 : 	{	// insertion sort [_First, _Last), using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H

; 2968 : 	if (_First != _Last)

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	$LN9@Insertion_

; 2969 : 		for (_BidIt _Next = _First; ++_Next != _Last; )

	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$232523[ebp], ecx
$LN7@Insertion_:
	mov	edx, DWORD PTR __Next$232523[ebp]
	add	edx, 8
	mov	DWORD PTR __Next$232523[ebp], edx
	mov	eax, DWORD PTR __Next$232523[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	$LN9@Insertion_

; 2970 : 			{	// order next element
; 2971 : 			_BidIt _Next1 = _Next;

	mov	ecx, DWORD PTR __Next$232523[ebp]
	mov	DWORD PTR __Next1$232527[ebp], ecx

; 2972 : 			_Ty _Val = *_Next;

	mov	edx, DWORD PTR __Next$232523[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Val$232528[ebp], eax
	mov	ecx, DWORD PTR __Next$232523[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Val$232528[ebp+4], edx

; 2973 : 
; 2974 : 			if (_DEBUG_LT(_Val, *_First))

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Val$232528[ebp+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN5@Insertion_

; 2975 : 				{	// found new earliest element, move to front
; 2976 : 				_STDEXT unchecked_copy_backward(_First, _Next, ++_Next1);

	mov	ecx, DWORD PTR __Next1$232527[ebp]
	add	ecx, 8
	mov	DWORD PTR __Next1$232527[ebp], ecx
	mov	edx, DWORD PTR __Next1$232527[ebp]
	mov	DWORD PTR $T259253[ebp], edx
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T259252[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T259238[ebp], cl
	mov	dl, BYTE PTR __Cat$259243[ebp]
	mov	BYTE PTR $T259239[ebp], dl
	mov	al, BYTE PTR $T259238[ebp]
	mov	BYTE PTR $T259236[ebp], al
	mov	cl, BYTE PTR $T259240[ebp]
	mov	BYTE PTR $T259235[ebp], cl
	mov	edx, DWORD PTR $T259253[ebp]
	mov	DWORD PTR $T259234[ebp], edx
	mov	eax, DWORD PTR __Next$232523[ebp]
	mov	DWORD PTR $T259233[ebp], eax
	mov	ecx, DWORD PTR $T259252[ebp]
	mov	DWORD PTR $T259232[ebp], ecx
$LN22@Insertion_:
	mov	edx, DWORD PTR $T259232[ebp]
	cmp	edx, DWORD PTR $T259233[ebp]
	je	SHORT $LN15@Insertion_
	mov	eax, DWORD PTR $T259233[ebp]
	sub	eax, 8
	mov	DWORD PTR $T259233[ebp], eax
	mov	ecx, DWORD PTR $T259234[ebp]
	sub	ecx, 8
	mov	DWORD PTR $T259234[ebp], ecx
	mov	edx, DWORD PTR $T259233[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T259234[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	jmp	SHORT $LN22@Insertion_
$LN15@Insertion_:

; 2977 : 				*_First = _Val;

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Val$232528[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Val$232528[ebp+4]
	mov	DWORD PTR [eax+4], edx

; 2978 : 				}
; 2979 : 			else

	jmp	SHORT $LN4@Insertion_
$LN5@Insertion_:

; 2980 : 				{	// look for insertion point after first
; 2981 : 				for (_BidIt _First1 = _Next1;

	mov	eax, DWORD PTR __Next1$232527[ebp]
	mov	DWORD PTR __First1$232538[ebp], eax

; 2982 : 					_DEBUG_LT(_Val, *--_First1);
; 2983 : 					_Next1 = _First1)

	jmp	SHORT $LN3@Insertion_
$LN2@Insertion_:
	mov	ecx, DWORD PTR __First1$232538[ebp]
	mov	DWORD PTR __Next1$232527[ebp], ecx
$LN3@Insertion_:
	mov	edx, DWORD PTR __First1$232538[ebp]
	sub	edx, 8
	mov	DWORD PTR __First1$232538[ebp], edx
	mov	eax, DWORD PTR __First1$232538[ebp]
	mov	ecx, DWORD PTR __Val$232528[ebp+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN1@Insertion_

; 2984 : 					*_Next1 = *_First1;	// move hole down

	mov	ecx, DWORD PTR __First1$232538[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Next1$232527[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	jmp	SHORT $LN2@Insertion_
$LN1@Insertion_:

; 2985 : 				*_Next1 = _Val;	// insert element in hole

	mov	edx, DWORD PTR __Next1$232527[ebp]
	mov	eax, DWORD PTR __Val$232528[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Val$232528[ebp+4]
	mov	DWORD PTR [edx+4], ecx
$LN4@Insertion_:

; 2986 : 				}
; 2987 : 			}

	jmp	$LN7@Insertion_
$LN9@Insertion_:

; 2988 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z ENDP ; std::_Insertion_sort1<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *,CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement>
_TEXT	ENDS
PUBLIC	??$_Med3@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z ; std::_Med3<CvWeightedVector<int,64,1>::WeightedElement *>
; Function compile flags: /Odtp
;	COMDAT ??$_Median@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z
_TEXT	SEGMENT
__Step$232544 = -4					; size = 4
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Median@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z PROC ; std::_Median<CvWeightedVector<int,64,1>::WeightedElement *>, COMDAT

; 3009 : 	{	// sort median element to middle

	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH

; 3010 : 	if (40 < _Last - _First)

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	cmp	eax, 40					; 00000028H
	jle	$LN2@Median@2

; 3011 : 		{	// median of nine
; 3012 : 		size_t _Step = (_Last - _First + 1) / 8;

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	add	eax, 1
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR __Step$232544[ebp], eax

; 3013 : 		std::_Med3(_First, _First + _Step, _First + 2 * _Step);

	mov	ecx, DWORD PTR __Step$232544[ebp]
	shl	ecx, 1
	mov	edx, DWORD PTR __First$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
	push	eax
	mov	ecx, DWORD PTR __Step$232544[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z ; std::_Med3<CvWeightedVector<int,64,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3014 : 		std::_Med3(_Mid - _Step, _Mid, _Mid + _Step);

	mov	edx, DWORD PTR __Step$232544[ebp]
	mov	eax, DWORD PTR __Mid$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	push	ecx
	mov	edx, DWORD PTR __Mid$[ebp]
	push	edx
	mov	eax, DWORD PTR __Step$232544[ebp]
	shl	eax, 3
	mov	ecx, DWORD PTR __Mid$[ebp]
	sub	ecx, eax
	push	ecx
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z ; std::_Med3<CvWeightedVector<int,64,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3015 : 		std::_Med3(_Last - 2 * _Step, _Last - _Step, _Last);

	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __Step$232544[ebp]
	shl	eax, 3
	mov	ecx, DWORD PTR __Last$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR __Step$232544[ebp]
	shl	edx, 1
	shl	edx, 3
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, edx
	push	eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z ; std::_Med3<CvWeightedVector<int,64,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3016 : 		std::_Med3(_First + _Step, _Mid, _Last - _Step);

	mov	ecx, DWORD PTR __Step$232544[ebp]
	shl	ecx, 3
	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, ecx
	push	edx
	mov	eax, DWORD PTR __Mid$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Step$232544[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
	push	eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z ; std::_Med3<CvWeightedVector<int,64,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3017 : 		}
; 3018 : 	else

	jmp	SHORT $LN3@Median@2
$LN2@Median@2:

; 3019 : 		std::_Med3(_First, _Mid, _Last);

	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Mid$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z ; std::_Med3<CvWeightedVector<int,64,1>::WeightedElement *>
	add	esp, 12					; 0000000cH
$LN3@Median@2:

; 3020 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Median@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z ENDP ; std::_Median<CvWeightedVector<int,64,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<int,64,1>::WeightedElement *,int,CvWeightedVector<int,64,1>::WeightedElement>
; Function compile flags: /Odtp
;	COMDAT ??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@0PAH0@Z
_TEXT	SEGMENT
$T259569 = -20						; size = 4
$T259568 = -16						; size = 4
__Hole$232562 = -8					; size = 4
__Bottom$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@0PAH0@Z PROC ; std::_Make_heap<CvWeightedVector<int,64,1>::WeightedElement *,int,CvWeightedVector<int,64,1>::WeightedElement>, COMDAT

; 2164 : 	{	// make nontrivial [_First, _Last) into a heap, using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H

; 2165 : 	_Diff _Bottom = _Last - _First;

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	mov	DWORD PTR __Bottom$[ebp], eax

; 2166 : 
; 2167 : 	for (_Diff _Hole = _Bottom / 2; 0 < _Hole; )

	mov	eax, DWORD PTR __Bottom$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Hole$232562[ebp], eax
$LN2@Make_heap@2:
	cmp	DWORD PTR __Hole$232562[ebp], 0
	jle	SHORT $LN3@Make_heap@2

; 2168 : 		{	// reheap top half, bottom to top
; 2169 : 		--_Hole;

	mov	ecx, DWORD PTR __Hole$232562[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Hole$232562[ebp], ecx

; 2170 : 		std::_Adjust_heap(_First, _Hole, _Bottom,
; 2171 : 			_Ty(*(_First + _Hole)));

	mov	edx, DWORD PTR __Hole$232562[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	mov	DWORD PTR $T259569[ebp], ecx
	sub	esp, 8
	mov	DWORD PTR $T259568[ebp], esp
	mov	edx, DWORD PTR $T259568[ebp]
	mov	eax, DWORD PTR $T259569[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T259568[ebp]
	mov	eax, DWORD PTR $T259569[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	edx, DWORD PTR __Bottom$[ebp]
	push	edx
	mov	eax, DWORD PTR __Hole$232562[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<int,64,1>::WeightedElement *,int,CvWeightedVector<int,64,1>::WeightedElement>
	add	esp, 20					; 00000014H

; 2172 : 		}

	jmp	SHORT $LN2@Make_heap@2
$LN3@Make_heap@2:

; 2173 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@0PAH0@Z ENDP ; std::_Make_heap<CvWeightedVector<int,64,1>::WeightedElement *,int,CvWeightedVector<int,64,1>::WeightedElement>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z
_TEXT	SEGMENT
$T259639 = -52						; size = 4
$T259638 = -48						; size = 4
$T259622 = -42						; size = 1
$T259621 = -41						; size = 1
$T259620 = -40						; size = 4
$T259619 = -36						; size = 4
$T259618 = -32						; size = 4
__Cat$259630 = -24					; size = 1
$T259627 = -23						; size = 1
$T259626 = -22						; size = 1
$T259625 = -21						; size = 1
__First1$232603 = -20					; size = 4
__Val$232593 = -16					; size = 8
__Next1$232592 = -8					; size = 4
__Next$232588 = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z PROC ; std::_Insertion_sort1<CvWeightedVector<int,64,1>::WeightedElement *,CvWeightedVector<int,64,1>::WeightedElement>, COMDAT

; 2967 : 	{	// insertion sort [_First, _Last), using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H

; 2968 : 	if (_First != _Last)

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	$LN9@Insertion_@2

; 2969 : 		for (_BidIt _Next = _First; ++_Next != _Last; )

	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$232588[ebp], ecx
$LN7@Insertion_@2:
	mov	edx, DWORD PTR __Next$232588[ebp]
	add	edx, 8
	mov	DWORD PTR __Next$232588[ebp], edx
	mov	eax, DWORD PTR __Next$232588[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	$LN9@Insertion_@2

; 2970 : 			{	// order next element
; 2971 : 			_BidIt _Next1 = _Next;

	mov	ecx, DWORD PTR __Next$232588[ebp]
	mov	DWORD PTR __Next1$232592[ebp], ecx

; 2972 : 			_Ty _Val = *_Next;

	mov	edx, DWORD PTR __Next$232588[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Val$232593[ebp], eax
	mov	ecx, DWORD PTR __Next$232588[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Val$232593[ebp+4], edx

; 2973 : 
; 2974 : 			if (_DEBUG_LT(_Val, *_First))

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Val$232593[ebp+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN5@Insertion_@2

; 2975 : 				{	// found new earliest element, move to front
; 2976 : 				_STDEXT unchecked_copy_backward(_First, _Next, ++_Next1);

	mov	ecx, DWORD PTR __Next1$232592[ebp]
	add	ecx, 8
	mov	DWORD PTR __Next1$232592[ebp], ecx
	mov	edx, DWORD PTR __Next1$232592[ebp]
	mov	DWORD PTR $T259639[ebp], edx
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T259638[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T259625[ebp], cl
	mov	dl, BYTE PTR __Cat$259630[ebp]
	mov	BYTE PTR $T259626[ebp], dl
	mov	al, BYTE PTR $T259625[ebp]
	mov	BYTE PTR $T259622[ebp], al
	mov	cl, BYTE PTR $T259627[ebp]
	mov	BYTE PTR $T259621[ebp], cl
	mov	edx, DWORD PTR $T259639[ebp]
	mov	DWORD PTR $T259620[ebp], edx
	mov	eax, DWORD PTR __Next$232588[ebp]
	mov	DWORD PTR $T259619[ebp], eax
	mov	ecx, DWORD PTR $T259638[ebp]
	mov	DWORD PTR $T259618[ebp], ecx
$LN22@Insertion_@2:
	mov	edx, DWORD PTR $T259618[ebp]
	cmp	edx, DWORD PTR $T259619[ebp]
	je	SHORT $LN15@Insertion_@2
	mov	eax, DWORD PTR $T259619[ebp]
	sub	eax, 8
	mov	DWORD PTR $T259619[ebp], eax
	mov	ecx, DWORD PTR $T259620[ebp]
	sub	ecx, 8
	mov	DWORD PTR $T259620[ebp], ecx
	mov	edx, DWORD PTR $T259619[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T259620[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	jmp	SHORT $LN22@Insertion_@2
$LN15@Insertion_@2:

; 2977 : 				*_First = _Val;

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Val$232593[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Val$232593[ebp+4]
	mov	DWORD PTR [eax+4], edx

; 2978 : 				}
; 2979 : 			else

	jmp	SHORT $LN4@Insertion_@2
$LN5@Insertion_@2:

; 2980 : 				{	// look for insertion point after first
; 2981 : 				for (_BidIt _First1 = _Next1;

	mov	eax, DWORD PTR __Next1$232592[ebp]
	mov	DWORD PTR __First1$232603[ebp], eax

; 2982 : 					_DEBUG_LT(_Val, *--_First1);
; 2983 : 					_Next1 = _First1)

	jmp	SHORT $LN3@Insertion_@2
$LN2@Insertion_@2:
	mov	ecx, DWORD PTR __First1$232603[ebp]
	mov	DWORD PTR __Next1$232592[ebp], ecx
$LN3@Insertion_@2:
	mov	edx, DWORD PTR __First1$232603[ebp]
	sub	edx, 8
	mov	DWORD PTR __First1$232603[ebp], edx
	mov	eax, DWORD PTR __First1$232603[ebp]
	mov	ecx, DWORD PTR __Val$232593[ebp+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN1@Insertion_@2

; 2984 : 					*_Next1 = *_First1;	// move hole down

	mov	ecx, DWORD PTR __First1$232603[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Next1$232592[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	jmp	SHORT $LN2@Insertion_@2
$LN1@Insertion_@2:

; 2985 : 				*_Next1 = _Val;	// insert element in hole

	mov	edx, DWORD PTR __Next1$232592[ebp]
	mov	eax, DWORD PTR __Val$232593[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Val$232593[ebp+4]
	mov	DWORD PTR [edx+4], ecx
$LN4@Insertion_@2:

; 2986 : 				}
; 2987 : 			}

	jmp	$LN7@Insertion_@2
$LN9@Insertion_@2:

; 2988 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z ENDP ; std::_Insertion_sort1<CvWeightedVector<int,64,1>::WeightedElement *,CvWeightedVector<int,64,1>::WeightedElement>
_TEXT	ENDS
PUBLIC	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z ; std::_Med3<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *>
; Function compile flags: /Odtp
;	COMDAT ??$_Median@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z
_TEXT	SEGMENT
__Step$232609 = -4					; size = 4
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Median@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z PROC ; std::_Median<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *>, COMDAT

; 3009 : 	{	// sort median element to middle

	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH

; 3010 : 	if (40 < _Last - _First)

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	cmp	eax, 40					; 00000028H
	jle	$LN2@Median@3

; 3011 : 		{	// median of nine
; 3012 : 		size_t _Step = (_Last - _First + 1) / 8;

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	add	eax, 1
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR __Step$232609[ebp], eax

; 3013 : 		std::_Med3(_First, _First + _Step, _First + 2 * _Step);

	mov	ecx, DWORD PTR __Step$232609[ebp]
	shl	ecx, 1
	mov	edx, DWORD PTR __First$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
	push	eax
	mov	ecx, DWORD PTR __Step$232609[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z ; std::_Med3<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3014 : 		std::_Med3(_Mid - _Step, _Mid, _Mid + _Step);

	mov	edx, DWORD PTR __Step$232609[ebp]
	mov	eax, DWORD PTR __Mid$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	push	ecx
	mov	edx, DWORD PTR __Mid$[ebp]
	push	edx
	mov	eax, DWORD PTR __Step$232609[ebp]
	shl	eax, 3
	mov	ecx, DWORD PTR __Mid$[ebp]
	sub	ecx, eax
	push	ecx
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z ; std::_Med3<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3015 : 		std::_Med3(_Last - 2 * _Step, _Last - _Step, _Last);

	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __Step$232609[ebp]
	shl	eax, 3
	mov	ecx, DWORD PTR __Last$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR __Step$232609[ebp]
	shl	edx, 1
	shl	edx, 3
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, edx
	push	eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z ; std::_Med3<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3016 : 		std::_Med3(_First + _Step, _Mid, _Last - _Step);

	mov	ecx, DWORD PTR __Step$232609[ebp]
	shl	ecx, 3
	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, ecx
	push	edx
	mov	eax, DWORD PTR __Mid$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Step$232609[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
	push	eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z ; std::_Med3<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3017 : 		}
; 3018 : 	else

	jmp	SHORT $LN3@Median@3
$LN2@Median@3:

; 3019 : 		std::_Med3(_First, _Mid, _Last);

	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Mid$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z ; std::_Med3<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *>
	add	esp, 12					; 0000000cH
$LN3@Median@3:

; 3020 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Median@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z ENDP ; std::_Median<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *,int,CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement>
; Function compile flags: /Odtp
;	COMDAT ??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@0PAH0@Z
_TEXT	SEGMENT
$T259955 = -20						; size = 4
$T259954 = -16						; size = 4
__Hole$232627 = -8					; size = 4
__Bottom$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@0PAH0@Z PROC ; std::_Make_heap<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *,int,CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement>, COMDAT

; 2164 : 	{	// make nontrivial [_First, _Last) into a heap, using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H

; 2165 : 	_Diff _Bottom = _Last - _First;

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	mov	DWORD PTR __Bottom$[ebp], eax

; 2166 : 
; 2167 : 	for (_Diff _Hole = _Bottom / 2; 0 < _Hole; )

	mov	eax, DWORD PTR __Bottom$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Hole$232627[ebp], eax
$LN2@Make_heap@3:
	cmp	DWORD PTR __Hole$232627[ebp], 0
	jle	SHORT $LN3@Make_heap@3

; 2168 : 		{	// reheap top half, bottom to top
; 2169 : 		--_Hole;

	mov	ecx, DWORD PTR __Hole$232627[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Hole$232627[ebp], ecx

; 2170 : 		std::_Adjust_heap(_First, _Hole, _Bottom,
; 2171 : 			_Ty(*(_First + _Hole)));

	mov	edx, DWORD PTR __Hole$232627[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	mov	DWORD PTR $T259955[ebp], ecx
	sub	esp, 8
	mov	DWORD PTR $T259954[ebp], esp
	mov	edx, DWORD PTR $T259954[ebp]
	mov	eax, DWORD PTR $T259955[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T259954[ebp]
	mov	eax, DWORD PTR $T259955[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	edx, DWORD PTR __Bottom$[ebp]
	push	edx
	mov	eax, DWORD PTR __Hole$232627[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *,int,CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement>
	add	esp, 20					; 00000014H

; 2172 : 		}

	jmp	SHORT $LN2@Make_heap@3
$LN3@Make_heap@3:

; 2173 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@0PAH0@Z ENDP ; std::_Make_heap<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *,int,CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z
_TEXT	SEGMENT
$T260025 = -52						; size = 4
$T260024 = -48						; size = 4
$T260008 = -42						; size = 1
$T260007 = -41						; size = 1
$T260006 = -40						; size = 4
$T260005 = -36						; size = 4
$T260004 = -32						; size = 4
__Cat$260016 = -24					; size = 1
$T260013 = -23						; size = 1
$T260012 = -22						; size = 1
$T260011 = -21						; size = 1
__First1$232668 = -20					; size = 4
__Val$232658 = -16					; size = 8
__Next1$232657 = -8					; size = 4
__Next$232653 = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z PROC ; std::_Insertion_sort1<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *,CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement>, COMDAT

; 2967 : 	{	// insertion sort [_First, _Last), using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H

; 2968 : 	if (_First != _Last)

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	$LN9@Insertion_@3

; 2969 : 		for (_BidIt _Next = _First; ++_Next != _Last; )

	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$232653[ebp], ecx
$LN7@Insertion_@3:
	mov	edx, DWORD PTR __Next$232653[ebp]
	add	edx, 8
	mov	DWORD PTR __Next$232653[ebp], edx
	mov	eax, DWORD PTR __Next$232653[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	$LN9@Insertion_@3

; 2970 : 			{	// order next element
; 2971 : 			_BidIt _Next1 = _Next;

	mov	ecx, DWORD PTR __Next$232653[ebp]
	mov	DWORD PTR __Next1$232657[ebp], ecx

; 2972 : 			_Ty _Val = *_Next;

	mov	edx, DWORD PTR __Next$232653[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Val$232658[ebp], eax
	mov	ecx, DWORD PTR __Next$232653[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Val$232658[ebp+4], edx

; 2973 : 
; 2974 : 			if (_DEBUG_LT(_Val, *_First))

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Val$232658[ebp+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN5@Insertion_@3

; 2975 : 				{	// found new earliest element, move to front
; 2976 : 				_STDEXT unchecked_copy_backward(_First, _Next, ++_Next1);

	mov	ecx, DWORD PTR __Next1$232657[ebp]
	add	ecx, 8
	mov	DWORD PTR __Next1$232657[ebp], ecx
	mov	edx, DWORD PTR __Next1$232657[ebp]
	mov	DWORD PTR $T260025[ebp], edx
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T260024[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T260011[ebp], cl
	mov	dl, BYTE PTR __Cat$260016[ebp]
	mov	BYTE PTR $T260012[ebp], dl
	mov	al, BYTE PTR $T260011[ebp]
	mov	BYTE PTR $T260008[ebp], al
	mov	cl, BYTE PTR $T260013[ebp]
	mov	BYTE PTR $T260007[ebp], cl
	mov	edx, DWORD PTR $T260025[ebp]
	mov	DWORD PTR $T260006[ebp], edx
	mov	eax, DWORD PTR __Next$232653[ebp]
	mov	DWORD PTR $T260005[ebp], eax
	mov	ecx, DWORD PTR $T260024[ebp]
	mov	DWORD PTR $T260004[ebp], ecx
$LN22@Insertion_@3:
	mov	edx, DWORD PTR $T260004[ebp]
	cmp	edx, DWORD PTR $T260005[ebp]
	je	SHORT $LN15@Insertion_@3
	mov	eax, DWORD PTR $T260005[ebp]
	sub	eax, 8
	mov	DWORD PTR $T260005[ebp], eax
	mov	ecx, DWORD PTR $T260006[ebp]
	sub	ecx, 8
	mov	DWORD PTR $T260006[ebp], ecx
	mov	edx, DWORD PTR $T260005[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T260006[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	jmp	SHORT $LN22@Insertion_@3
$LN15@Insertion_@3:

; 2977 : 				*_First = _Val;

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Val$232658[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Val$232658[ebp+4]
	mov	DWORD PTR [eax+4], edx

; 2978 : 				}
; 2979 : 			else

	jmp	SHORT $LN4@Insertion_@3
$LN5@Insertion_@3:

; 2980 : 				{	// look for insertion point after first
; 2981 : 				for (_BidIt _First1 = _Next1;

	mov	eax, DWORD PTR __Next1$232657[ebp]
	mov	DWORD PTR __First1$232668[ebp], eax

; 2982 : 					_DEBUG_LT(_Val, *--_First1);
; 2983 : 					_Next1 = _First1)

	jmp	SHORT $LN3@Insertion_@3
$LN2@Insertion_@3:
	mov	ecx, DWORD PTR __First1$232668[ebp]
	mov	DWORD PTR __Next1$232657[ebp], ecx
$LN3@Insertion_@3:
	mov	edx, DWORD PTR __First1$232668[ebp]
	sub	edx, 8
	mov	DWORD PTR __First1$232668[ebp], edx
	mov	eax, DWORD PTR __First1$232668[ebp]
	mov	ecx, DWORD PTR __Val$232658[ebp+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN1@Insertion_@3

; 2984 : 					*_Next1 = *_First1;	// move hole down

	mov	ecx, DWORD PTR __First1$232668[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Next1$232657[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	jmp	SHORT $LN2@Insertion_@3
$LN1@Insertion_@3:

; 2985 : 				*_Next1 = _Val;	// insert element in hole

	mov	edx, DWORD PTR __Next1$232657[ebp]
	mov	eax, DWORD PTR __Val$232658[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Val$232658[ebp+4]
	mov	DWORD PTR [edx+4], ecx
$LN4@Insertion_@3:

; 2986 : 				}
; 2987 : 			}

	jmp	$LN7@Insertion_@3
$LN9@Insertion_@3:

; 2988 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z ENDP ; std::_Insertion_sort1<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *,CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement>
_TEXT	ENDS
PUBLIC	??$_Med3@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z ; std::_Med3<CvWeightedVector<int,100,1>::WeightedElement *>
; Function compile flags: /Odtp
;	COMDAT ??$_Median@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z
_TEXT	SEGMENT
__Step$232674 = -4					; size = 4
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Median@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z PROC ; std::_Median<CvWeightedVector<int,100,1>::WeightedElement *>, COMDAT

; 3009 : 	{	// sort median element to middle

	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH

; 3010 : 	if (40 < _Last - _First)

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	cmp	eax, 40					; 00000028H
	jle	$LN2@Median@4

; 3011 : 		{	// median of nine
; 3012 : 		size_t _Step = (_Last - _First + 1) / 8;

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	add	eax, 1
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR __Step$232674[ebp], eax

; 3013 : 		std::_Med3(_First, _First + _Step, _First + 2 * _Step);

	mov	ecx, DWORD PTR __Step$232674[ebp]
	shl	ecx, 1
	mov	edx, DWORD PTR __First$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
	push	eax
	mov	ecx, DWORD PTR __Step$232674[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z ; std::_Med3<CvWeightedVector<int,100,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3014 : 		std::_Med3(_Mid - _Step, _Mid, _Mid + _Step);

	mov	edx, DWORD PTR __Step$232674[ebp]
	mov	eax, DWORD PTR __Mid$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	push	ecx
	mov	edx, DWORD PTR __Mid$[ebp]
	push	edx
	mov	eax, DWORD PTR __Step$232674[ebp]
	shl	eax, 3
	mov	ecx, DWORD PTR __Mid$[ebp]
	sub	ecx, eax
	push	ecx
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z ; std::_Med3<CvWeightedVector<int,100,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3015 : 		std::_Med3(_Last - 2 * _Step, _Last - _Step, _Last);

	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __Step$232674[ebp]
	shl	eax, 3
	mov	ecx, DWORD PTR __Last$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR __Step$232674[ebp]
	shl	edx, 1
	shl	edx, 3
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, edx
	push	eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z ; std::_Med3<CvWeightedVector<int,100,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3016 : 		std::_Med3(_First + _Step, _Mid, _Last - _Step);

	mov	ecx, DWORD PTR __Step$232674[ebp]
	shl	ecx, 3
	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, ecx
	push	edx
	mov	eax, DWORD PTR __Mid$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Step$232674[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
	push	eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z ; std::_Med3<CvWeightedVector<int,100,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3017 : 		}
; 3018 : 	else

	jmp	SHORT $LN3@Median@4
$LN2@Median@4:

; 3019 : 		std::_Med3(_First, _Mid, _Last);

	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Mid$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z ; std::_Med3<CvWeightedVector<int,100,1>::WeightedElement *>
	add	esp, 12					; 0000000cH
$LN3@Median@4:

; 3020 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Median@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z ENDP ; std::_Median<CvWeightedVector<int,100,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<int,100,1>::WeightedElement *,int,CvWeightedVector<int,100,1>::WeightedElement>
; Function compile flags: /Odtp
;	COMDAT ??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@0PAH0@Z
_TEXT	SEGMENT
$T260341 = -20						; size = 4
$T260340 = -16						; size = 4
__Hole$232692 = -8					; size = 4
__Bottom$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@0PAH0@Z PROC ; std::_Make_heap<CvWeightedVector<int,100,1>::WeightedElement *,int,CvWeightedVector<int,100,1>::WeightedElement>, COMDAT

; 2164 : 	{	// make nontrivial [_First, _Last) into a heap, using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H

; 2165 : 	_Diff _Bottom = _Last - _First;

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	mov	DWORD PTR __Bottom$[ebp], eax

; 2166 : 
; 2167 : 	for (_Diff _Hole = _Bottom / 2; 0 < _Hole; )

	mov	eax, DWORD PTR __Bottom$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Hole$232692[ebp], eax
$LN2@Make_heap@4:
	cmp	DWORD PTR __Hole$232692[ebp], 0
	jle	SHORT $LN3@Make_heap@4

; 2168 : 		{	// reheap top half, bottom to top
; 2169 : 		--_Hole;

	mov	ecx, DWORD PTR __Hole$232692[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Hole$232692[ebp], ecx

; 2170 : 		std::_Adjust_heap(_First, _Hole, _Bottom,
; 2171 : 			_Ty(*(_First + _Hole)));

	mov	edx, DWORD PTR __Hole$232692[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	mov	DWORD PTR $T260341[ebp], ecx
	sub	esp, 8
	mov	DWORD PTR $T260340[ebp], esp
	mov	edx, DWORD PTR $T260340[ebp]
	mov	eax, DWORD PTR $T260341[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T260340[ebp]
	mov	eax, DWORD PTR $T260341[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	edx, DWORD PTR __Bottom$[ebp]
	push	edx
	mov	eax, DWORD PTR __Hole$232692[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<int,100,1>::WeightedElement *,int,CvWeightedVector<int,100,1>::WeightedElement>
	add	esp, 20					; 00000014H

; 2172 : 		}

	jmp	SHORT $LN2@Make_heap@4
$LN3@Make_heap@4:

; 2173 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@0PAH0@Z ENDP ; std::_Make_heap<CvWeightedVector<int,100,1>::WeightedElement *,int,CvWeightedVector<int,100,1>::WeightedElement>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z
_TEXT	SEGMENT
$T260411 = -52						; size = 4
$T260410 = -48						; size = 4
$T260394 = -42						; size = 1
$T260393 = -41						; size = 1
$T260392 = -40						; size = 4
$T260391 = -36						; size = 4
$T260390 = -32						; size = 4
__Cat$260401 = -24					; size = 1
$T260398 = -23						; size = 1
$T260397 = -22						; size = 1
$T260396 = -21						; size = 1
__First1$232733 = -20					; size = 4
__Val$232723 = -16					; size = 8
__Next1$232722 = -8					; size = 4
__Next$232718 = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z PROC ; std::_Insertion_sort1<CvWeightedVector<int,100,1>::WeightedElement *,CvWeightedVector<int,100,1>::WeightedElement>, COMDAT

; 2967 : 	{	// insertion sort [_First, _Last), using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H

; 2968 : 	if (_First != _Last)

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	$LN9@Insertion_@4

; 2969 : 		for (_BidIt _Next = _First; ++_Next != _Last; )

	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$232718[ebp], ecx
$LN7@Insertion_@4:
	mov	edx, DWORD PTR __Next$232718[ebp]
	add	edx, 8
	mov	DWORD PTR __Next$232718[ebp], edx
	mov	eax, DWORD PTR __Next$232718[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	$LN9@Insertion_@4

; 2970 : 			{	// order next element
; 2971 : 			_BidIt _Next1 = _Next;

	mov	ecx, DWORD PTR __Next$232718[ebp]
	mov	DWORD PTR __Next1$232722[ebp], ecx

; 2972 : 			_Ty _Val = *_Next;

	mov	edx, DWORD PTR __Next$232718[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Val$232723[ebp], eax
	mov	ecx, DWORD PTR __Next$232718[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Val$232723[ebp+4], edx

; 2973 : 
; 2974 : 			if (_DEBUG_LT(_Val, *_First))

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Val$232723[ebp+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN5@Insertion_@4

; 2975 : 				{	// found new earliest element, move to front
; 2976 : 				_STDEXT unchecked_copy_backward(_First, _Next, ++_Next1);

	mov	ecx, DWORD PTR __Next1$232722[ebp]
	add	ecx, 8
	mov	DWORD PTR __Next1$232722[ebp], ecx
	mov	edx, DWORD PTR __Next1$232722[ebp]
	mov	DWORD PTR $T260411[ebp], edx
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T260410[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T260396[ebp], cl
	mov	dl, BYTE PTR __Cat$260401[ebp]
	mov	BYTE PTR $T260397[ebp], dl
	mov	al, BYTE PTR $T260396[ebp]
	mov	BYTE PTR $T260394[ebp], al
	mov	cl, BYTE PTR $T260398[ebp]
	mov	BYTE PTR $T260393[ebp], cl
	mov	edx, DWORD PTR $T260411[ebp]
	mov	DWORD PTR $T260392[ebp], edx
	mov	eax, DWORD PTR __Next$232718[ebp]
	mov	DWORD PTR $T260391[ebp], eax
	mov	ecx, DWORD PTR $T260410[ebp]
	mov	DWORD PTR $T260390[ebp], ecx
$LN22@Insertion_@4:
	mov	edx, DWORD PTR $T260390[ebp]
	cmp	edx, DWORD PTR $T260391[ebp]
	je	SHORT $LN15@Insertion_@4
	mov	eax, DWORD PTR $T260391[ebp]
	sub	eax, 8
	mov	DWORD PTR $T260391[ebp], eax
	mov	ecx, DWORD PTR $T260392[ebp]
	sub	ecx, 8
	mov	DWORD PTR $T260392[ebp], ecx
	mov	edx, DWORD PTR $T260391[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T260392[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	jmp	SHORT $LN22@Insertion_@4
$LN15@Insertion_@4:

; 2977 : 				*_First = _Val;

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Val$232723[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Val$232723[ebp+4]
	mov	DWORD PTR [eax+4], edx

; 2978 : 				}
; 2979 : 			else

	jmp	SHORT $LN4@Insertion_@4
$LN5@Insertion_@4:

; 2980 : 				{	// look for insertion point after first
; 2981 : 				for (_BidIt _First1 = _Next1;

	mov	eax, DWORD PTR __Next1$232722[ebp]
	mov	DWORD PTR __First1$232733[ebp], eax

; 2982 : 					_DEBUG_LT(_Val, *--_First1);
; 2983 : 					_Next1 = _First1)

	jmp	SHORT $LN3@Insertion_@4
$LN2@Insertion_@4:
	mov	ecx, DWORD PTR __First1$232733[ebp]
	mov	DWORD PTR __Next1$232722[ebp], ecx
$LN3@Insertion_@4:
	mov	edx, DWORD PTR __First1$232733[ebp]
	sub	edx, 8
	mov	DWORD PTR __First1$232733[ebp], edx
	mov	eax, DWORD PTR __First1$232733[ebp]
	mov	ecx, DWORD PTR __Val$232723[ebp+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN1@Insertion_@4

; 2984 : 					*_Next1 = *_First1;	// move hole down

	mov	ecx, DWORD PTR __First1$232733[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Next1$232722[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	jmp	SHORT $LN2@Insertion_@4
$LN1@Insertion_@4:

; 2985 : 				*_Next1 = _Val;	// insert element in hole

	mov	edx, DWORD PTR __Next1$232722[ebp]
	mov	eax, DWORD PTR __Val$232723[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Val$232723[ebp+4]
	mov	DWORD PTR [edx+4], ecx
$LN4@Insertion_@4:

; 2986 : 				}
; 2987 : 			}

	jmp	$LN7@Insertion_@4
$LN9@Insertion_@4:

; 2988 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z ENDP ; std::_Insertion_sort1<CvWeightedVector<int,100,1>::WeightedElement *,CvWeightedVector<int,100,1>::WeightedElement>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ??$unchecked_uninitialized_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@stdext@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@std@@@Z
_TEXT	SEGMENT
__Cat$260422 = -3					; size = 1
$T260418 = -2						; size = 1
$T260417 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@stdext@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@std@@@Z PROC ; stdext::unchecked_uninitialized_copy<CvString *,CvString *,std::allocator<CvString> >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	xor	eax, eax
	mov	BYTE PTR $T260417[ebp], al
	mov	cl, BYTE PTR __Cat$260422[ebp]
	mov	BYTE PTR $T260418[ebp], cl
	movzx	edx, BYTE PTR $T260417[ebp]
	push	edx
	movzx	eax, BYTE PTR $T260418[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<CvString *,CvString *,std::allocator<CvString> >
	add	esp, 24					; 00000018H

; 823  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$unchecked_uninitialized_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@stdext@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_copy<CvString *,CvString *,std::allocator<CvString> >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
_TEXT	ENDS
;	COMDAT ??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z
_TEXT	SEGMENT
__Tmp$260487 = -24					; size = 8
__Tmp$260465 = -16					; size = 8
__Tmp$260443 = -8					; size = 8
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z PROC ; std::_Med3<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *>, COMDAT

; 2998 : 	{	// sort median of three elements to middle

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 2999 : 	if (_DEBUG_LT(*_Mid, *_First))

	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN15@Med3

; 3000 : 		std::iter_swap(_Mid, _First);

	mov	edx, DWORD PTR __Mid$[ebp]
	cmp	edx, DWORD PTR __First$[ebp]
	je	SHORT $LN15@Med3
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$260443[ebp], ecx
	mov	edx, DWORD PTR __Mid$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Tmp$260443[ebp+4], eax
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR __Tmp$260443[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Tmp$260443[ebp+4]
	mov	DWORD PTR [edx+4], ecx

; 3001 : 	if (_DEBUG_LT(*_Last, *_Mid))

$LN15@Med3:
	mov	edx, DWORD PTR __Last$[ebp]
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN24@Med3

; 3002 : 		std::iter_swap(_Last, _Mid);

	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __Mid$[ebp]
	je	SHORT $LN24@Med3
	mov	edx, DWORD PTR __Last$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$260465[ebp], eax
	mov	ecx, DWORD PTR __Last$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$260465[ebp+4], edx
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	edx, DWORD PTR __Tmp$260465[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Tmp$260465[ebp+4]
	mov	DWORD PTR [ecx+4], eax

; 3003 : 	if (_DEBUG_LT(*_Mid, *_First))

$LN24@Med3:
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx+4]
	setg	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN4@Med3

; 3004 : 		std::iter_swap(_Mid, _First);

	mov	eax, DWORD PTR __Mid$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	je	SHORT $LN4@Med3
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$260487[ebp], edx
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$260487[ebp+4], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Tmp$260487[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$260487[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN4@Med3:

; 3005 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z ENDP ; std::_Med3<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@HHU12@@Z
_TEXT	SEGMENT
$T260514 = -32						; size = 4
$T260513 = -28						; size = 8
__Idx$260509 = -20					; size = 4
$T260500 = -16						; size = 4
__Idx$ = -8						; size = 4
__Top$ = -4						; size = 4
__First$ = 8						; size = 4
__Hole$ = 12						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 8
??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@HHU12@@Z PROC ; std::_Adjust_heap<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *,int,CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement>, COMDAT

; 2055 : 	{	// percolate _Hole to _Bottom, then push _Val, using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi

; 2056 : 	_Diff _Top = _Hole;

	mov	eax, DWORD PTR __Hole$[ebp]
	mov	DWORD PTR __Top$[ebp], eax

; 2057 : 	_Diff _Idx = 2 * _Hole + 2;

	mov	ecx, DWORD PTR __Hole$[ebp]
	lea	edx, DWORD PTR [ecx+ecx+2]
	mov	DWORD PTR __Idx$[ebp], edx

; 2058 : 
; 2059 : 	for (; _Idx < _Bottom; _Idx = 2 * _Idx + 2)

	jmp	SHORT $LN5@Adjust_hea
$LN4@Adjust_hea:
	mov	eax, DWORD PTR __Idx$[ebp]
	lea	ecx, DWORD PTR [eax+eax+2]
	mov	DWORD PTR __Idx$[ebp], ecx
$LN5@Adjust_hea:
	mov	edx, DWORD PTR __Idx$[ebp]
	cmp	edx, DWORD PTR __Bottom$[ebp]
	jge	SHORT $LN3@Adjust_hea

; 2060 : 		{	// move _Hole down to larger child
; 2061 : 		if (_DEBUG_LT(*(_First + _Idx), *(_First + (_Idx - 1))))

	mov	eax, DWORD PTR __Idx$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR __Idx$[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [ecx+eax*8+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [esi+edx*8-4]
	setg	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN2@Adjust_hea

; 2062 : 			--_Idx;

	mov	eax, DWORD PTR __Idx$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Idx$[ebp], eax
$LN2@Adjust_hea:

; 2063 : 		*(_First + _Hole) = *(_First + _Idx), _Hole = _Idx;

	mov	ecx, DWORD PTR __Idx$[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx+ecx*8]
	mov	ecx, DWORD PTR [edx+ecx*8+4]
	mov	edx, DWORD PTR __Hole$[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	DWORD PTR [esi+edx*8], eax
	mov	DWORD PTR [esi+edx*8+4], ecx
	mov	eax, DWORD PTR __Idx$[ebp]
	mov	DWORD PTR __Hole$[ebp], eax

; 2064 : 		}

	jmp	SHORT $LN4@Adjust_hea
$LN3@Adjust_hea:

; 2065 : 
; 2066 : 	if (_Idx == _Bottom)

	mov	ecx, DWORD PTR __Idx$[ebp]
	cmp	ecx, DWORD PTR __Bottom$[ebp]
	jne	SHORT $LN1@Adjust_hea

; 2067 : 		{	// only child at bottom, move _Hole down to it
; 2068 : 		*(_First + _Hole) = *(_First + (_Bottom - 1));

	mov	edx, DWORD PTR __Bottom$[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+edx*8-8]
	mov	edx, DWORD PTR [eax+edx*8-4]
	mov	eax, DWORD PTR __Hole$[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	DWORD PTR [esi+eax*8], ecx
	mov	DWORD PTR [esi+eax*8+4], edx

; 2069 : 		_Hole = _Bottom - 1;

	mov	ecx, DWORD PTR __Bottom$[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Hole$[ebp], ecx
$LN1@Adjust_hea:

; 2070 : 		}
; 2071 : 	std::_Push_heap(_First, _Hole, _Top, _Val);

	lea	edx, DWORD PTR $T260513[ebp]
	mov	DWORD PTR $T260500[ebp], edx
	mov	eax, DWORD PTR $T260500[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T260500[ebp]
	mov	eax, DWORD PTR __Val$[ebp+4]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR __Hole$[ebp]
	mov	DWORD PTR $T260514[ebp], ecx
	mov	eax, DWORD PTR $T260514[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Idx$260509[ebp], eax
	jmp	SHORT $LN14@Adjust_hea
$LN13@Adjust_hea:
	mov	eax, DWORD PTR $T260514[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Idx$260509[ebp], eax
$LN14@Adjust_hea:
	mov	edx, DWORD PTR __Top$[ebp]
	cmp	edx, DWORD PTR $T260514[ebp]
	jge	SHORT $LN12@Adjust_hea
	mov	eax, DWORD PTR __Idx$260509[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+4]
	xor	eax, eax
	cmp	edx, DWORD PTR $T260513[ebp+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@Adjust_hea
	mov	edx, DWORD PTR __Idx$260509[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+edx*8]
	mov	edx, DWORD PTR [eax+edx*8+4]
	mov	eax, DWORD PTR $T260514[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	DWORD PTR [esi+eax*8], ecx
	mov	DWORD PTR [esi+eax*8+4], edx
	mov	ecx, DWORD PTR __Idx$260509[ebp]
	mov	DWORD PTR $T260514[ebp], ecx
	jmp	SHORT $LN13@Adjust_hea
$LN12@Adjust_hea:
	mov	edx, DWORD PTR $T260514[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR $T260513[ebp]
	mov	DWORD PTR [eax+edx*8], ecx
	mov	ecx, DWORD PTR $T260513[ebp+4]
	mov	DWORD PTR [eax+edx*8+4], ecx

; 2072 : 	}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@HHU12@@Z ENDP ; std::_Adjust_heap<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *,int,CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Med3@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z
_TEXT	SEGMENT
__Tmp$260579 = -24					; size = 8
__Tmp$260560 = -16					; size = 8
__Tmp$260538 = -8					; size = 8
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Med3@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z PROC ; std::_Med3<CvWeightedVector<int,64,1>::WeightedElement *>, COMDAT

; 2998 : 	{	// sort median of three elements to middle

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 2999 : 	if (_DEBUG_LT(*_Mid, *_First))

	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN15@Med3@2

; 3000 : 		std::iter_swap(_Mid, _First);

	mov	edx, DWORD PTR __Mid$[ebp]
	cmp	edx, DWORD PTR __First$[ebp]
	je	SHORT $LN15@Med3@2
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$260538[ebp], ecx
	mov	edx, DWORD PTR __Mid$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Tmp$260538[ebp+4], eax
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR __Tmp$260538[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Tmp$260538[ebp+4]
	mov	DWORD PTR [edx+4], ecx

; 3001 : 	if (_DEBUG_LT(*_Last, *_Mid))

$LN15@Med3@2:
	mov	edx, DWORD PTR __Last$[ebp]
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN24@Med3@2

; 3002 : 		std::iter_swap(_Last, _Mid);

	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __Mid$[ebp]
	je	SHORT $LN24@Med3@2
	mov	edx, DWORD PTR __Last$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$260560[ebp], eax
	mov	ecx, DWORD PTR __Last$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$260560[ebp+4], edx
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	edx, DWORD PTR __Tmp$260560[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Tmp$260560[ebp+4]
	mov	DWORD PTR [ecx+4], eax

; 3003 : 	if (_DEBUG_LT(*_Mid, *_First))

$LN24@Med3@2:
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx+4]
	setg	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN4@Med3@2

; 3004 : 		std::iter_swap(_Mid, _First);

	mov	eax, DWORD PTR __Mid$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	je	SHORT $LN4@Med3@2
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$260579[ebp], edx
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$260579[ebp+4], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Tmp$260579[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$260579[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN4@Med3@2:

; 3005 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Med3@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z ENDP ; std::_Med3<CvWeightedVector<int,64,1>::WeightedElement *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@HHU12@@Z
_TEXT	SEGMENT
$T260606 = -32						; size = 4
$T260605 = -28						; size = 8
__Idx$260601 = -20					; size = 4
$T260592 = -16						; size = 4
__Idx$ = -8						; size = 4
__Top$ = -4						; size = 4
__First$ = 8						; size = 4
__Hole$ = 12						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 8
??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@HHU12@@Z PROC ; std::_Adjust_heap<CvWeightedVector<int,64,1>::WeightedElement *,int,CvWeightedVector<int,64,1>::WeightedElement>, COMDAT

; 2055 : 	{	// percolate _Hole to _Bottom, then push _Val, using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi

; 2056 : 	_Diff _Top = _Hole;

	mov	eax, DWORD PTR __Hole$[ebp]
	mov	DWORD PTR __Top$[ebp], eax

; 2057 : 	_Diff _Idx = 2 * _Hole + 2;

	mov	ecx, DWORD PTR __Hole$[ebp]
	lea	edx, DWORD PTR [ecx+ecx+2]
	mov	DWORD PTR __Idx$[ebp], edx

; 2058 : 
; 2059 : 	for (; _Idx < _Bottom; _Idx = 2 * _Idx + 2)

	jmp	SHORT $LN5@Adjust_hea@2
$LN4@Adjust_hea@2:
	mov	eax, DWORD PTR __Idx$[ebp]
	lea	ecx, DWORD PTR [eax+eax+2]
	mov	DWORD PTR __Idx$[ebp], ecx
$LN5@Adjust_hea@2:
	mov	edx, DWORD PTR __Idx$[ebp]
	cmp	edx, DWORD PTR __Bottom$[ebp]
	jge	SHORT $LN3@Adjust_hea@2

; 2060 : 		{	// move _Hole down to larger child
; 2061 : 		if (_DEBUG_LT(*(_First + _Idx), *(_First + (_Idx - 1))))

	mov	eax, DWORD PTR __Idx$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR __Idx$[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [ecx+eax*8+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [esi+edx*8-4]
	setg	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN2@Adjust_hea@2

; 2062 : 			--_Idx;

	mov	eax, DWORD PTR __Idx$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Idx$[ebp], eax
$LN2@Adjust_hea@2:

; 2063 : 		*(_First + _Hole) = *(_First + _Idx), _Hole = _Idx;

	mov	ecx, DWORD PTR __Idx$[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx+ecx*8]
	mov	ecx, DWORD PTR [edx+ecx*8+4]
	mov	edx, DWORD PTR __Hole$[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	DWORD PTR [esi+edx*8], eax
	mov	DWORD PTR [esi+edx*8+4], ecx
	mov	eax, DWORD PTR __Idx$[ebp]
	mov	DWORD PTR __Hole$[ebp], eax

; 2064 : 		}

	jmp	SHORT $LN4@Adjust_hea@2
$LN3@Adjust_hea@2:

; 2065 : 
; 2066 : 	if (_Idx == _Bottom)

	mov	ecx, DWORD PTR __Idx$[ebp]
	cmp	ecx, DWORD PTR __Bottom$[ebp]
	jne	SHORT $LN1@Adjust_hea@2

; 2067 : 		{	// only child at bottom, move _Hole down to it
; 2068 : 		*(_First + _Hole) = *(_First + (_Bottom - 1));

	mov	edx, DWORD PTR __Bottom$[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+edx*8-8]
	mov	edx, DWORD PTR [eax+edx*8-4]
	mov	eax, DWORD PTR __Hole$[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	DWORD PTR [esi+eax*8], ecx
	mov	DWORD PTR [esi+eax*8+4], edx

; 2069 : 		_Hole = _Bottom - 1;

	mov	ecx, DWORD PTR __Bottom$[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Hole$[ebp], ecx
$LN1@Adjust_hea@2:

; 2070 : 		}
; 2071 : 	std::_Push_heap(_First, _Hole, _Top, _Val);

	lea	edx, DWORD PTR $T260605[ebp]
	mov	DWORD PTR $T260592[ebp], edx
	mov	eax, DWORD PTR $T260592[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T260592[ebp]
	mov	eax, DWORD PTR __Val$[ebp+4]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR __Hole$[ebp]
	mov	DWORD PTR $T260606[ebp], ecx
	mov	eax, DWORD PTR $T260606[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Idx$260601[ebp], eax
	jmp	SHORT $LN14@Adjust_hea@2
$LN13@Adjust_hea@2:
	mov	eax, DWORD PTR $T260606[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Idx$260601[ebp], eax
$LN14@Adjust_hea@2:
	mov	edx, DWORD PTR __Top$[ebp]
	cmp	edx, DWORD PTR $T260606[ebp]
	jge	SHORT $LN12@Adjust_hea@2
	mov	eax, DWORD PTR __Idx$260601[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+4]
	xor	eax, eax
	cmp	edx, DWORD PTR $T260605[ebp+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@Adjust_hea@2
	mov	edx, DWORD PTR __Idx$260601[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+edx*8]
	mov	edx, DWORD PTR [eax+edx*8+4]
	mov	eax, DWORD PTR $T260606[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	DWORD PTR [esi+eax*8], ecx
	mov	DWORD PTR [esi+eax*8+4], edx
	mov	ecx, DWORD PTR __Idx$260601[ebp]
	mov	DWORD PTR $T260606[ebp], ecx
	jmp	SHORT $LN13@Adjust_hea@2
$LN12@Adjust_hea@2:
	mov	edx, DWORD PTR $T260606[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR $T260605[ebp]
	mov	DWORD PTR [eax+edx*8], ecx
	mov	ecx, DWORD PTR $T260605[ebp+4]
	mov	DWORD PTR [eax+edx*8+4], ecx

; 2072 : 	}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@HHU12@@Z ENDP ; std::_Adjust_heap<CvWeightedVector<int,64,1>::WeightedElement *,int,CvWeightedVector<int,64,1>::WeightedElement>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z
_TEXT	SEGMENT
__Tmp$260674 = -24					; size = 8
__Tmp$260652 = -16					; size = 8
__Tmp$260630 = -8					; size = 8
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z PROC ; std::_Med3<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *>, COMDAT

; 2998 : 	{	// sort median of three elements to middle

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 2999 : 	if (_DEBUG_LT(*_Mid, *_First))

	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN15@Med3@3

; 3000 : 		std::iter_swap(_Mid, _First);

	mov	edx, DWORD PTR __Mid$[ebp]
	cmp	edx, DWORD PTR __First$[ebp]
	je	SHORT $LN15@Med3@3
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$260630[ebp], ecx
	mov	edx, DWORD PTR __Mid$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Tmp$260630[ebp+4], eax
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR __Tmp$260630[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Tmp$260630[ebp+4]
	mov	DWORD PTR [edx+4], ecx

; 3001 : 	if (_DEBUG_LT(*_Last, *_Mid))

$LN15@Med3@3:
	mov	edx, DWORD PTR __Last$[ebp]
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN24@Med3@3

; 3002 : 		std::iter_swap(_Last, _Mid);

	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __Mid$[ebp]
	je	SHORT $LN24@Med3@3
	mov	edx, DWORD PTR __Last$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$260652[ebp], eax
	mov	ecx, DWORD PTR __Last$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$260652[ebp+4], edx
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	edx, DWORD PTR __Tmp$260652[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Tmp$260652[ebp+4]
	mov	DWORD PTR [ecx+4], eax

; 3003 : 	if (_DEBUG_LT(*_Mid, *_First))

$LN24@Med3@3:
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx+4]
	setg	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN4@Med3@3

; 3004 : 		std::iter_swap(_Mid, _First);

	mov	eax, DWORD PTR __Mid$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	je	SHORT $LN4@Med3@3
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$260674[ebp], edx
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$260674[ebp+4], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Tmp$260674[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$260674[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN4@Med3@3:

; 3005 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z ENDP ; std::_Med3<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@HHU12@@Z
_TEXT	SEGMENT
$T260698 = -32						; size = 4
$T260697 = -28						; size = 8
__Idx$260693 = -20					; size = 4
$T260684 = -16						; size = 4
__Idx$ = -8						; size = 4
__Top$ = -4						; size = 4
__First$ = 8						; size = 4
__Hole$ = 12						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 8
??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@HHU12@@Z PROC ; std::_Adjust_heap<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *,int,CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement>, COMDAT

; 2055 : 	{	// percolate _Hole to _Bottom, then push _Val, using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi

; 2056 : 	_Diff _Top = _Hole;

	mov	eax, DWORD PTR __Hole$[ebp]
	mov	DWORD PTR __Top$[ebp], eax

; 2057 : 	_Diff _Idx = 2 * _Hole + 2;

	mov	ecx, DWORD PTR __Hole$[ebp]
	lea	edx, DWORD PTR [ecx+ecx+2]
	mov	DWORD PTR __Idx$[ebp], edx

; 2058 : 
; 2059 : 	for (; _Idx < _Bottom; _Idx = 2 * _Idx + 2)

	jmp	SHORT $LN5@Adjust_hea@3
$LN4@Adjust_hea@3:
	mov	eax, DWORD PTR __Idx$[ebp]
	lea	ecx, DWORD PTR [eax+eax+2]
	mov	DWORD PTR __Idx$[ebp], ecx
$LN5@Adjust_hea@3:
	mov	edx, DWORD PTR __Idx$[ebp]
	cmp	edx, DWORD PTR __Bottom$[ebp]
	jge	SHORT $LN3@Adjust_hea@3

; 2060 : 		{	// move _Hole down to larger child
; 2061 : 		if (_DEBUG_LT(*(_First + _Idx), *(_First + (_Idx - 1))))

	mov	eax, DWORD PTR __Idx$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR __Idx$[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [ecx+eax*8+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [esi+edx*8-4]
	setg	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN2@Adjust_hea@3

; 2062 : 			--_Idx;

	mov	eax, DWORD PTR __Idx$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Idx$[ebp], eax
$LN2@Adjust_hea@3:

; 2063 : 		*(_First + _Hole) = *(_First + _Idx), _Hole = _Idx;

	mov	ecx, DWORD PTR __Idx$[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx+ecx*8]
	mov	ecx, DWORD PTR [edx+ecx*8+4]
	mov	edx, DWORD PTR __Hole$[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	DWORD PTR [esi+edx*8], eax
	mov	DWORD PTR [esi+edx*8+4], ecx
	mov	eax, DWORD PTR __Idx$[ebp]
	mov	DWORD PTR __Hole$[ebp], eax

; 2064 : 		}

	jmp	SHORT $LN4@Adjust_hea@3
$LN3@Adjust_hea@3:

; 2065 : 
; 2066 : 	if (_Idx == _Bottom)

	mov	ecx, DWORD PTR __Idx$[ebp]
	cmp	ecx, DWORD PTR __Bottom$[ebp]
	jne	SHORT $LN1@Adjust_hea@3

; 2067 : 		{	// only child at bottom, move _Hole down to it
; 2068 : 		*(_First + _Hole) = *(_First + (_Bottom - 1));

	mov	edx, DWORD PTR __Bottom$[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+edx*8-8]
	mov	edx, DWORD PTR [eax+edx*8-4]
	mov	eax, DWORD PTR __Hole$[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	DWORD PTR [esi+eax*8], ecx
	mov	DWORD PTR [esi+eax*8+4], edx

; 2069 : 		_Hole = _Bottom - 1;

	mov	ecx, DWORD PTR __Bottom$[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Hole$[ebp], ecx
$LN1@Adjust_hea@3:

; 2070 : 		}
; 2071 : 	std::_Push_heap(_First, _Hole, _Top, _Val);

	lea	edx, DWORD PTR $T260697[ebp]
	mov	DWORD PTR $T260684[ebp], edx
	mov	eax, DWORD PTR $T260684[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T260684[ebp]
	mov	eax, DWORD PTR __Val$[ebp+4]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR __Hole$[ebp]
	mov	DWORD PTR $T260698[ebp], ecx
	mov	eax, DWORD PTR $T260698[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Idx$260693[ebp], eax
	jmp	SHORT $LN14@Adjust_hea@3
$LN13@Adjust_hea@3:
	mov	eax, DWORD PTR $T260698[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Idx$260693[ebp], eax
$LN14@Adjust_hea@3:
	mov	edx, DWORD PTR __Top$[ebp]
	cmp	edx, DWORD PTR $T260698[ebp]
	jge	SHORT $LN12@Adjust_hea@3
	mov	eax, DWORD PTR __Idx$260693[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+4]
	xor	eax, eax
	cmp	edx, DWORD PTR $T260697[ebp+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@Adjust_hea@3
	mov	edx, DWORD PTR __Idx$260693[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+edx*8]
	mov	edx, DWORD PTR [eax+edx*8+4]
	mov	eax, DWORD PTR $T260698[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	DWORD PTR [esi+eax*8], ecx
	mov	DWORD PTR [esi+eax*8+4], edx
	mov	ecx, DWORD PTR __Idx$260693[ebp]
	mov	DWORD PTR $T260698[ebp], ecx
	jmp	SHORT $LN13@Adjust_hea@3
$LN12@Adjust_hea@3:
	mov	edx, DWORD PTR $T260698[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR $T260697[ebp]
	mov	DWORD PTR [eax+edx*8], ecx
	mov	ecx, DWORD PTR $T260697[ebp+4]
	mov	DWORD PTR [eax+edx*8+4], ecx

; 2072 : 	}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@HHU12@@Z ENDP ; std::_Adjust_heap<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *,int,CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Med3@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z
_TEXT	SEGMENT
__Tmp$260766 = -24					; size = 8
__Tmp$260744 = -16					; size = 8
__Tmp$260722 = -8					; size = 8
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Med3@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z PROC ; std::_Med3<CvWeightedVector<int,100,1>::WeightedElement *>, COMDAT

; 2998 : 	{	// sort median of three elements to middle

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 2999 : 	if (_DEBUG_LT(*_Mid, *_First))

	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN15@Med3@4

; 3000 : 		std::iter_swap(_Mid, _First);

	mov	edx, DWORD PTR __Mid$[ebp]
	cmp	edx, DWORD PTR __First$[ebp]
	je	SHORT $LN15@Med3@4
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$260722[ebp], ecx
	mov	edx, DWORD PTR __Mid$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Tmp$260722[ebp+4], eax
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR __Tmp$260722[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Tmp$260722[ebp+4]
	mov	DWORD PTR [edx+4], ecx

; 3001 : 	if (_DEBUG_LT(*_Last, *_Mid))

$LN15@Med3@4:
	mov	edx, DWORD PTR __Last$[ebp]
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN24@Med3@4

; 3002 : 		std::iter_swap(_Last, _Mid);

	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __Mid$[ebp]
	je	SHORT $LN24@Med3@4
	mov	edx, DWORD PTR __Last$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$260744[ebp], eax
	mov	ecx, DWORD PTR __Last$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$260744[ebp+4], edx
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	edx, DWORD PTR __Tmp$260744[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Tmp$260744[ebp+4]
	mov	DWORD PTR [ecx+4], eax

; 3003 : 	if (_DEBUG_LT(*_Mid, *_First))

$LN24@Med3@4:
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx+4]
	setg	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN4@Med3@4

; 3004 : 		std::iter_swap(_Mid, _First);

	mov	eax, DWORD PTR __Mid$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	je	SHORT $LN4@Med3@4
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$260766[ebp], edx
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$260766[ebp+4], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Tmp$260766[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$260766[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN4@Med3@4:

; 3005 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Med3@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z ENDP ; std::_Med3<CvWeightedVector<int,100,1>::WeightedElement *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@HHU12@@Z
_TEXT	SEGMENT
$T260790 = -32						; size = 4
$T260789 = -28						; size = 8
__Idx$260785 = -20					; size = 4
$T260776 = -16						; size = 4
__Idx$ = -8						; size = 4
__Top$ = -4						; size = 4
__First$ = 8						; size = 4
__Hole$ = 12						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 8
??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@HHU12@@Z PROC ; std::_Adjust_heap<CvWeightedVector<int,100,1>::WeightedElement *,int,CvWeightedVector<int,100,1>::WeightedElement>, COMDAT

; 2055 : 	{	// percolate _Hole to _Bottom, then push _Val, using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi

; 2056 : 	_Diff _Top = _Hole;

	mov	eax, DWORD PTR __Hole$[ebp]
	mov	DWORD PTR __Top$[ebp], eax

; 2057 : 	_Diff _Idx = 2 * _Hole + 2;

	mov	ecx, DWORD PTR __Hole$[ebp]
	lea	edx, DWORD PTR [ecx+ecx+2]
	mov	DWORD PTR __Idx$[ebp], edx

; 2058 : 
; 2059 : 	for (; _Idx < _Bottom; _Idx = 2 * _Idx + 2)

	jmp	SHORT $LN5@Adjust_hea@4
$LN4@Adjust_hea@4:
	mov	eax, DWORD PTR __Idx$[ebp]
	lea	ecx, DWORD PTR [eax+eax+2]
	mov	DWORD PTR __Idx$[ebp], ecx
$LN5@Adjust_hea@4:
	mov	edx, DWORD PTR __Idx$[ebp]
	cmp	edx, DWORD PTR __Bottom$[ebp]
	jge	SHORT $LN3@Adjust_hea@4

; 2060 : 		{	// move _Hole down to larger child
; 2061 : 		if (_DEBUG_LT(*(_First + _Idx), *(_First + (_Idx - 1))))

	mov	eax, DWORD PTR __Idx$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR __Idx$[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [ecx+eax*8+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [esi+edx*8-4]
	setg	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN2@Adjust_hea@4

; 2062 : 			--_Idx;

	mov	eax, DWORD PTR __Idx$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Idx$[ebp], eax
$LN2@Adjust_hea@4:

; 2063 : 		*(_First + _Hole) = *(_First + _Idx), _Hole = _Idx;

	mov	ecx, DWORD PTR __Idx$[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx+ecx*8]
	mov	ecx, DWORD PTR [edx+ecx*8+4]
	mov	edx, DWORD PTR __Hole$[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	DWORD PTR [esi+edx*8], eax
	mov	DWORD PTR [esi+edx*8+4], ecx
	mov	eax, DWORD PTR __Idx$[ebp]
	mov	DWORD PTR __Hole$[ebp], eax

; 2064 : 		}

	jmp	SHORT $LN4@Adjust_hea@4
$LN3@Adjust_hea@4:

; 2065 : 
; 2066 : 	if (_Idx == _Bottom)

	mov	ecx, DWORD PTR __Idx$[ebp]
	cmp	ecx, DWORD PTR __Bottom$[ebp]
	jne	SHORT $LN1@Adjust_hea@4

; 2067 : 		{	// only child at bottom, move _Hole down to it
; 2068 : 		*(_First + _Hole) = *(_First + (_Bottom - 1));

	mov	edx, DWORD PTR __Bottom$[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+edx*8-8]
	mov	edx, DWORD PTR [eax+edx*8-4]
	mov	eax, DWORD PTR __Hole$[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	DWORD PTR [esi+eax*8], ecx
	mov	DWORD PTR [esi+eax*8+4], edx

; 2069 : 		_Hole = _Bottom - 1;

	mov	ecx, DWORD PTR __Bottom$[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Hole$[ebp], ecx
$LN1@Adjust_hea@4:

; 2070 : 		}
; 2071 : 	std::_Push_heap(_First, _Hole, _Top, _Val);

	lea	edx, DWORD PTR $T260789[ebp]
	mov	DWORD PTR $T260776[ebp], edx
	mov	eax, DWORD PTR $T260776[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T260776[ebp]
	mov	eax, DWORD PTR __Val$[ebp+4]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR __Hole$[ebp]
	mov	DWORD PTR $T260790[ebp], ecx
	mov	eax, DWORD PTR $T260790[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Idx$260785[ebp], eax
	jmp	SHORT $LN14@Adjust_hea@4
$LN13@Adjust_hea@4:
	mov	eax, DWORD PTR $T260790[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Idx$260785[ebp], eax
$LN14@Adjust_hea@4:
	mov	edx, DWORD PTR __Top$[ebp]
	cmp	edx, DWORD PTR $T260790[ebp]
	jge	SHORT $LN12@Adjust_hea@4
	mov	eax, DWORD PTR __Idx$260785[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+4]
	xor	eax, eax
	cmp	edx, DWORD PTR $T260789[ebp+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@Adjust_hea@4
	mov	edx, DWORD PTR __Idx$260785[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+edx*8]
	mov	edx, DWORD PTR [eax+edx*8+4]
	mov	eax, DWORD PTR $T260790[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	DWORD PTR [esi+eax*8], ecx
	mov	DWORD PTR [esi+eax*8+4], edx
	mov	ecx, DWORD PTR __Idx$260785[ebp]
	mov	DWORD PTR $T260790[ebp], ecx
	jmp	SHORT $LN13@Adjust_hea@4
$LN12@Adjust_hea@4:
	mov	edx, DWORD PTR $T260790[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR $T260789[ebp]
	mov	DWORD PTR [eax+edx*8], ecx
	mov	ecx, DWORD PTR $T260789[ebp+4]
	mov	DWORD PTR [eax+edx*8+4], ecx

; 2072 : 	}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@HHU12@@Z ENDP ; std::_Adjust_heap<CvWeightedVector<int,100,1>::WeightedElement *,int,CvWeightedVector<int,100,1>::WeightedElement>
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__catchsym$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$5
__unwindtable$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
tv89 = -36						; size = 4
$T260826 = -32						; size = 4
$T260825 = -28						; size = 4
__Vptr$260834 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<CvString *,CvString *,std::allocator<CvString> >, COMDAT

; 124  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 128  : 
; 129  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	jmp	SHORT $LN6@Uninit_cop@2
$LN5@Uninit_cop@2:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_cop@2:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_cop@2

; 131  : 		_Al.construct(_Dest, *_First);

	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Vptr$260834[ebp], ecx
	mov	edx, DWORD PTR __Vptr$260834[ebp]
	mov	DWORD PTR $T260826[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	DWORD PTR $T260826[ebp], 0
	je	SHORT $LN18@Uninit_cop@2
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T260826[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T260826[ebp]
	mov	DWORD PTR tv89[ebp], ecx
	jmp	SHORT $LN19@Uninit_cop@2
$LN18@Uninit_cop@2:
	mov	DWORD PTR tv89[ebp], 0
$LN19@Uninit_cop@2:
	mov	edx, DWORD PTR tv89[ebp]
	mov	DWORD PTR $T260825[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN5@Uninit_cop@2
$LN4@Uninit_cop@2:
	jmp	SHORT $LN10@Uninit_cop@2
__catch$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)

	jmp	SHORT $LN3@Uninit_cop@2
$LN2@Uninit_cop@2:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_cop@2:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_cop@2

; 134  : 		_Al.destroy(_Next);

	mov	ecx, DWORD PTR __Next$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN26@Uninit_cop@2
	mov	eax, DWORD PTR __Next$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN26@Uninit_cop@2:
	jmp	SHORT $LN2@Uninit_cop@2
$LN1@Uninit_cop@2:

; 135  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 136  : 	_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1
	ret	0
$LN10@Uninit_cop@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1:

; 137  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_cop@2:

; 138  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Vptr$260834[ebp]
	push	eax
	mov	ecx, DWORD PTR $T260826[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<CvString *,CvString *,std::allocator<CvString> >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z
_TEXT	SEGMENT
$T260917 = -60						; size = 8
$T260888 = -20						; size = 4
$T260882 = -12						; size = 4
$T260881 = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z PROC ; std::_Pop_heap_0<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *,CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement>, COMDAT

; 2087 : 	{	// pop *_First to *(_Last - 1) and reheap, using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH

; 2088 : 	_Pop_heap(_First, _Last - 1, _Last - 1,
; 2089 : 		_Ty(*(_Last - 1)), _Dist_type(_First));

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, 8
	mov	DWORD PTR $T260882[ebp], eax
	lea	ecx, DWORD PTR $T260917[ebp]
	mov	DWORD PTR $T260881[ebp], ecx
	mov	edx, DWORD PTR $T260881[ebp]
	mov	eax, DWORD PTR $T260882[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T260881[ebp]
	mov	eax, DWORD PTR $T260882[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR [edx-8], eax
	mov	DWORD PTR [edx-4], ecx
	sub	esp, 8
	mov	DWORD PTR $T260888[ebp], esp
	mov	eax, DWORD PTR $T260888[ebp]
	mov	ecx, DWORD PTR $T260917[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T260888[ebp]
	mov	eax, DWORD PTR $T260917[ebp+4]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR __Last$[ebp]
	sub	ecx, 8
	sub	ecx, DWORD PTR __First$[ebp]
	sar	ecx, 3
	push	ecx
	push	0
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *,int,CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement>
	add	esp, 20					; 00000014H

; 2090 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0EA@$00@@00@Z ENDP ; std::_Pop_heap_0<CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement *,CvWeightedVector<enum PlayerTypes,64,1>::WeightedElement>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z
_TEXT	SEGMENT
$T260963 = -60						; size = 8
$T260934 = -20						; size = 4
$T260928 = -12						; size = 4
$T260927 = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z PROC ; std::_Pop_heap_0<CvWeightedVector<int,64,1>::WeightedElement *,CvWeightedVector<int,64,1>::WeightedElement>, COMDAT

; 2087 : 	{	// pop *_First to *(_Last - 1) and reheap, using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH

; 2088 : 	_Pop_heap(_First, _Last - 1, _Last - 1,
; 2089 : 		_Ty(*(_Last - 1)), _Dist_type(_First));

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, 8
	mov	DWORD PTR $T260928[ebp], eax
	lea	ecx, DWORD PTR $T260963[ebp]
	mov	DWORD PTR $T260927[ebp], ecx
	mov	edx, DWORD PTR $T260927[ebp]
	mov	eax, DWORD PTR $T260928[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T260927[ebp]
	mov	eax, DWORD PTR $T260928[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR [edx-8], eax
	mov	DWORD PTR [edx-4], ecx
	sub	esp, 8
	mov	DWORD PTR $T260934[ebp], esp
	mov	eax, DWORD PTR $T260934[ebp]
	mov	ecx, DWORD PTR $T260963[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T260934[ebp]
	mov	eax, DWORD PTR $T260963[ebp+4]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR __Last$[ebp]
	sub	ecx, 8
	sub	ecx, DWORD PTR __First$[ebp]
	sar	ecx, 3
	push	ecx
	push	0
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<int,64,1>::WeightedElement *,int,CvWeightedVector<int,64,1>::WeightedElement>
	add	esp, 20					; 00000014H

; 2090 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0EA@$00@@00@Z ENDP ; std::_Pop_heap_0<CvWeightedVector<int,64,1>::WeightedElement *,CvWeightedVector<int,64,1>::WeightedElement>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z
_TEXT	SEGMENT
$T261009 = -60						; size = 8
$T260980 = -20						; size = 4
$T260974 = -12						; size = 4
$T260973 = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z PROC ; std::_Pop_heap_0<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *,CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement>, COMDAT

; 2087 : 	{	// pop *_First to *(_Last - 1) and reheap, using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH

; 2088 : 	_Pop_heap(_First, _Last - 1, _Last - 1,
; 2089 : 		_Ty(*(_Last - 1)), _Dist_type(_First));

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, 8
	mov	DWORD PTR $T260974[ebp], eax
	lea	ecx, DWORD PTR $T261009[ebp]
	mov	DWORD PTR $T260973[ebp], ecx
	mov	edx, DWORD PTR $T260973[ebp]
	mov	eax, DWORD PTR $T260974[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T260973[ebp]
	mov	eax, DWORD PTR $T260974[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR [edx-8], eax
	mov	DWORD PTR [edx-4], ecx
	sub	esp, 8
	mov	DWORD PTR $T260980[ebp], esp
	mov	eax, DWORD PTR $T260980[ebp]
	mov	ecx, DWORD PTR $T261009[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T260980[ebp]
	mov	eax, DWORD PTR $T261009[ebp+4]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR __Last$[ebp]
	sub	ecx, 8
	sub	ecx, DWORD PTR __First$[ebp]
	sar	ecx, 3
	push	ecx
	push	0
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *,int,CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement>
	add	esp, 20					; 00000014H

; 2090 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4PlayerTypes@@$0BG@$00@@00@Z ENDP ; std::_Pop_heap_0<CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement *,CvWeightedVector<enum PlayerTypes,22,1>::WeightedElement>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z
_TEXT	SEGMENT
$T261055 = -60						; size = 8
$T261026 = -20						; size = 4
$T261020 = -12						; size = 4
$T261019 = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z PROC ; std::_Pop_heap_0<CvWeightedVector<int,100,1>::WeightedElement *,CvWeightedVector<int,100,1>::WeightedElement>, COMDAT

; 2087 : 	{	// pop *_First to *(_Last - 1) and reheap, using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH

; 2088 : 	_Pop_heap(_First, _Last - 1, _Last - 1,
; 2089 : 		_Ty(*(_Last - 1)), _Dist_type(_First));

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, 8
	mov	DWORD PTR $T261020[ebp], eax
	lea	ecx, DWORD PTR $T261055[ebp]
	mov	DWORD PTR $T261019[ebp], ecx
	mov	edx, DWORD PTR $T261019[ebp]
	mov	eax, DWORD PTR $T261020[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T261019[ebp]
	mov	eax, DWORD PTR $T261020[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR [edx-8], eax
	mov	DWORD PTR [edx-4], ecx
	sub	esp, 8
	mov	DWORD PTR $T261026[ebp], esp
	mov	eax, DWORD PTR $T261026[ebp]
	mov	ecx, DWORD PTR $T261055[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T261026[ebp]
	mov	eax, DWORD PTR $T261055[ebp+4]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR __Last$[ebp]
	sub	ecx, 8
	sub	ecx, DWORD PTR __First$[ebp]
	sar	ecx, 3
	push	ecx
	push	0
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<int,100,1>::WeightedElement *,int,CvWeightedVector<int,100,1>::WeightedElement>
	add	esp, 20					; 00000014H

; 2090 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@H$0GE@$00@@00@Z ENDP ; std::_Pop_heap_0<CvWeightedVector<int,100,1>::WeightedElement *,CvWeightedVector<int,100,1>::WeightedElement>
_TEXT	ENDS
EXTRN	?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B:DWORD ; CvPreGame::sr_TeamTypes
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvpregame.h
;	COMDAT ?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z PROC ; CvPreGame::teamType, COMDAT

; 298  : {

	push	ebp
	mov	ebp, esp

; 299  : 	if(p >= 0 && p < MAX_PLAYERS)

	cmp	DWORD PTR _p$[ebp], 0
	jl	SHORT $LN1@teamType
	cmp	DWORD PTR _p$[ebp], 64			; 00000040H
	jge	SHORT $LN1@teamType

; 300  : 		return sr_TeamTypes[p];

	mov	eax, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	jmp	SHORT $LN2@teamType
$LN1@teamType:

; 301  : 	return NO_TEAM;

	or	eax, -1
$LN2@teamType:

; 302  : }

	pop	ebp
	ret	0
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ENDP ; CvPreGame::teamType
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
_TEXT	ENDS
;	COMDAT ?coordRange@@YAHHH_N@Z
_TEXT	SEGMENT
_iCoord$ = 8						; size = 4
_iRange$ = 12						; size = 4
_bWrap$ = 16						; size = 1
?coordRange@@YAHHH_N@Z PROC				; coordRange, COMDAT

; 87   : {

	push	ebp
	mov	ebp, esp

; 88   : 	if(bWrap)

	movzx	eax, BYTE PTR _bWrap$[ebp]
	test	eax, eax
	je	SHORT $LN4@coordRange

; 89   : 	{
; 90   : 		if(iCoord < 0)

	cmp	DWORD PTR _iCoord$[ebp], 0
	jge	SHORT $LN3@coordRange

; 91   : 		{
; 92   : 			return (iRange + (iCoord % iRange));

	mov	eax, DWORD PTR _iCoord$[ebp]
	cdq
	idiv	DWORD PTR _iRange$[ebp]
	add	edx, DWORD PTR _iRange$[ebp]
	mov	eax, edx
	jmp	SHORT $LN5@coordRange
	jmp	SHORT $LN4@coordRange
$LN3@coordRange:

; 93   : 		}
; 94   : 		else if(iCoord >= iRange)

	mov	ecx, DWORD PTR _iCoord$[ebp]
	cmp	ecx, DWORD PTR _iRange$[ebp]
	jl	SHORT $LN4@coordRange

; 95   : 		{
; 96   : 			return (iCoord % iRange);

	mov	eax, DWORD PTR _iCoord$[ebp]
	cdq
	idiv	DWORD PTR _iRange$[ebp]
	mov	eax, edx
	jmp	SHORT $LN5@coordRange
$LN4@coordRange:

; 97   : 		}
; 98   : 	}
; 99   : 
; 100  : 	return iCoord;

	mov	eax, DWORD PTR _iCoord$[ebp]
$LN5@coordRange:

; 101  : }

	pop	ebp
	ret	0
?coordRange@@YAHHH_N@Z ENDP				; coordRange
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?isPlot@CvMap@@QBEHHH@Z
_TEXT	SEGMENT
tv72 = -16						; size = 4
_this$ = -12						; size = 4
$T261074 = -8						; size = 4
$T261070 = -4						; size = 4
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?isPlot@CvMap@@QBEHHH@Z PROC				; CvMap::isPlot, COMDAT
; _this$ = ecx

; 156  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 157  : #ifdef AUI_WARNING_FIXES
; 158  : 		return ((iX >= 0) && (uint(iX) < getGridWidth()) && (iY >= 0) && (uint(iY) < getGridHeight()));
; 159  : #else
; 160  : 		return ((iX >= 0) && (iX < getGridWidth()) && (iY >= 0) && (iY < getGridHeight()));

	cmp	DWORD PTR _iX$[ebp], 0
	jl	SHORT $LN3@isPlot
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T261070[ebp], ecx
	mov	edx, DWORD PTR _iX$[ebp]
	cmp	edx, DWORD PTR $T261070[ebp]
	jge	SHORT $LN3@isPlot
	cmp	DWORD PTR _iY$[ebp], 0
	jl	SHORT $LN3@isPlot
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T261074[ebp], ecx
	mov	edx, DWORD PTR _iY$[ebp]
	cmp	edx, DWORD PTR $T261074[ebp]
	jge	SHORT $LN3@isPlot
	mov	DWORD PTR tv72[ebp], 1
	jmp	SHORT $LN4@isPlot
$LN3@isPlot:
	mov	DWORD PTR tv72[ebp], 0
$LN4@isPlot:
	mov	eax, DWORD PTR tv72[ebp]

; 161  : #endif
; 162  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?isPlot@CvMap@@QBEHHH@Z ENDP				; CvMap::isPlot
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z ; std::vector<int,std::allocator<int> >::_Buy
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
xdata$x	SEGMENT
__unwindtable$??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv88 = -132						; size = 4
tv145 = -128						; size = 4
_this$ = -124						; size = 4
$T261106 = -30						; size = 1
$T261093 = -29						; size = 1
$T261089 = -28						; size = 4
$T261082 = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 120				; 00000078H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T261106[ebp]
	mov	DWORD PTR $T261082[ebp], eax
	lea	ecx, DWORD PTR $T261093[ebp]
	mov	DWORD PTR $T261089[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv145[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv88[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 471  : 		_Buy(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z ; std::vector<int,std::allocator<int> >::_Buy

; 472  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ
__ehhandler$??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-124]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -44						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 559  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy

; 560  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ
__ehhandler$??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??$_Allocate@H@std@@YAPAHIPAH@Z			; std::_Allocate<int>
PUBLIC	?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ ; std::vector<int,std::allocator<int> >::_Xlen
; Function compile flags: /Odtp
;	COMDAT ?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
tv94 = -96						; size = 4
_this$ = -92						; size = 4
__Count$261232 = -4					; size = 4
__Capacity$ = 8						; size = 4
?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z PROC	; std::vector<int,std::allocator<int> >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	mov	DWORD PTR _this$[ebp], ecx

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 1104 : 		if (_Capacity == 0)

	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN4@Buy@3

; 1105 : 			return (false);

	xor	al, al
	jmp	SHORT $LN5@Buy@3
	jmp	SHORT $LN3@Buy@3
$LN4@Buy@3:

; 1106 : 		else if (max_size() < _Capacity)

	mov	DWORD PTR __Count$261232[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$261232[ebp], 0
	jbe	SHORT $LN11@Buy@3
	mov	eax, DWORD PTR __Count$261232[ebp]
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN7@Buy@3
$LN11@Buy@3:
	mov	DWORD PTR tv94[ebp], 1
$LN7@Buy@3:
	mov	ecx, DWORD PTR tv94[ebp]
	cmp	ecx, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN23@Buy@3

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ ; std::vector<int,std::allocator<int> >::_Xlen

; 1108 : 		else

	jmp	SHORT $LN3@Buy@3

; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

$LN23@Buy@3:
	push	0
	mov	edx, DWORD PTR __Capacity$[ebp]
	push	edx
	call	??$_Allocate@H@std@@YAPAHIPAH@Z		; std::_Allocate<int>
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+8], ecx

; 1112 : 			_Myend = _Myfirst + _Capacity;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Capacity$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
$LN3@Buy@3:

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
$LN5@Buy@3:

; 1115 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z ENDP	; std::vector<int,std::allocator<int> >::_Buy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T261296 = -28						; size = 4
$T261295 = -24						; size = 4
$T261291 = -20						; size = 4
$T261290 = -16						; size = 4
$T261279 = -12						; size = 4
$T261278 = -8						; size = 4
__Cat$261285 = -2					; size = 1
$T261283 = -1						; size = 1
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ PROC	; std::vector<int,std::allocator<int> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Tidy@3

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T261291[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T261290[ebp], ecx
	mov	edx, DWORD PTR $T261291[ebp]
	mov	DWORD PTR $T261279[ebp], edx
	mov	eax, DWORD PTR $T261290[ebp]
	mov	DWORD PTR $T261278[ebp], eax
	mov	cl, BYTE PTR __Cat$261285[ebp]
	mov	BYTE PTR $T261283[ebp], cl

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	mov	DWORD PTR $T261296[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T261295[ebp], eax
	mov	ecx, DWORD PTR $T261295[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@Tidy@3:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 1135 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ENDP	; std::vector<int,std::allocator<int> >::_Tidy
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0length_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$1
__ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0length_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC			; std::length_error::length_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0length_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0length_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T261314 = -80						; size = 28
$T261313 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ PROC	; std::vector<int,std::allocator<int> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T261314[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T261313[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR $T261313[ebp], OFFSET ??_7logic_error@std@@6B@
	lea	eax, DWORD PTR $T261314[ebp]
	push	eax
	lea	ecx, DWORD PTR $T261313[ebp+12]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T261313[ebp], OFFSET ??_7length_error@std@@6B@
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T261313[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T261314[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@Xlen@3:

; 1261 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T261314[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T261313[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ ENDP	; std::vector<int,std::allocator<int> >::_Xlen
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Allocate@H@std@@YAPAHIPAH@Z
_TEXT	SEGMENT
$T261339 = -16						; size = 4
$T261335 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@H@std@@YAPAHIPAH@Z PROC			; std::_Allocate<int>, COMDAT

; 36   : 	{	// check for integer overflow

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 37   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate@4

; 38   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate@4
$LN3@Allocate@4:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 4
	jae	SHORT $LN2@Allocate@4

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	mov	DWORD PTR $T261339[ebp], 0
	lea	eax, DWORD PTR $T261339[ebp]
	push	eax
	lea	ecx, DWORD PTR $T261335[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR $T261335[ebp], OFFSET ??_7bad_alloc@std@@6B@
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T261335[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@Allocate@4:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	mov	edx, DWORD PTR __Count$[ebp]
	shl	edx, 2
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate@4:

; 44   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@H@std@@YAPAHIPAH@Z ENDP			; std::_Allocate<int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	?insert@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@ABH@Z ; std::vector<int,std::allocator<int> >::insert
PUBLIC	??$unchecked_fill_n@PAHIH@stdext@@YAXPAHIABH@Z	; stdext::unchecked_fill_n<int *,unsigned int,int>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEXABH@Z
_TEXT	SEGMENT
tv129 = -96						; size = 4
_this$ = -92						; size = 4
$T261432 = -64						; size = 4
$T261422 = -60						; size = 4
$T261410 = -56						; size = 4
$T261400 = -49						; size = 1
$T261399 = -48						; size = 4
__Cat$261416 = -19					; size = 1
$T261414 = -18						; size = 1
$T261413 = -17						; size = 1
$T261351 = -16						; size = 4
$T261347 = -12						; size = 4
$T261346 = -8						; size = 4
$T261345 = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEXABH@Z PROC ; std::vector<int,std::allocator<int> >::push_back, COMDAT
; _this$ = ecx

; 809  : 		{	// insert element at end

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	mov	DWORD PTR _this$[ebp], ecx

; 810  : 		if (size() < capacity())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	mov	DWORD PTR $T261351[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN9@push_back@15
	mov	DWORD PTR tv129[ebp], 0
	jmp	SHORT $LN7@push_back@15
$LN9@push_back@15:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	mov	DWORD PTR tv129[ebp], eax
$LN7@push_back@15:
	mov	ecx, DWORD PTR $T261351[ebp]
	cmp	ecx, DWORD PTR tv129[ebp]
	jae	SHORT $LN2@push_back@15

; 811  : 
; 812  :  #if _HAS_ITERATOR_DEBUGGING
; 813  : 			{ // room at end, construct it there
; 814  : 			_Orphan_range(_Mylast, _Mylast);
; 815  : 			_Mylast = _Ufill(_Mylast, 1, _Val);
; 816  : 			}
; 817  : 
; 818  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 819  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T261422[ebp], eax
	mov	ecx, DWORD PTR $T261422[ebp]
	mov	DWORD PTR $T261410[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T261413[ebp], dl
	mov	al, BYTE PTR __Cat$261416[ebp]
	mov	BYTE PTR $T261414[ebp], al
	mov	cl, BYTE PTR $T261413[ebp]
	mov	BYTE PTR $T261400[ebp], cl
	mov	edx, DWORD PTR $T261410[ebp]
	mov	DWORD PTR $T261399[ebp], edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR $T261399[ebp]
	push	ecx
	call	??$unchecked_fill_n@PAHIH@stdext@@YAXPAHIABH@Z ; stdext::unchecked_fill_n<int *,unsigned int,int>
	add	esp, 12					; 0000000cH
	mov	edx, 1
	shl	edx, 2
	add	edx, DWORD PTR $T261422[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx

; 820  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 821  : 
; 822  : 		else

	jmp	SHORT $LN3@push_back@15
$LN2@push_back@15:

; 823  : 			insert(end(), _Val);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T261432[ebp], edx
	mov	eax, DWORD PTR $T261432[ebp]
	mov	DWORD PTR $T261346[ebp], eax
	mov	ecx, DWORD PTR $T261346[ebp]
	mov	DWORD PTR $T261345[ebp], ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR $T261345[ebp]
	push	eax
	lea	ecx, DWORD PTR $T261347[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@ABH@Z ; std::vector<int,std::allocator<int> >::insert
$LN3@push_back@15:

; 824  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEXABH@Z ENDP ; std::vector<int,std::allocator<int> >::push_back
_TEXT	ENDS
PUBLIC	?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z ; std::vector<int,std::allocator<int> >::_Insert_n
; Function compile flags: /Odtp
;	COMDAT ?insert@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@ABH@Z
_TEXT	SEGMENT
tv77 = -32						; size = 4
_this$ = -28						; size = 4
__Tmp$261557 = -24					; size = 4
$T261535 = -20						; size = 4
$T261516 = -16						; size = 4
$T261503 = -12						; size = 4
$T261500 = -8						; size = 4
__Off$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@ABH@Z PROC ; std::vector<int,std::allocator<int> >::insert, COMDAT
; _this$ = ecx

; 875  : 		{	// insert _Val at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	test	edx, edx
	jne	SHORT $LN3@insert@3
	mov	DWORD PTR tv77[ebp], 0
	jmp	SHORT $LN4@insert@3
$LN3@insert@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T261516[ebp], ecx
	mov	edx, DWORD PTR $T261516[ebp]
	mov	DWORD PTR $T261500[ebp], edx
	mov	eax, DWORD PTR __Where$[ebp]
	sub	eax, DWORD PTR $T261500[ebp]
	sar	eax, 2
	mov	DWORD PTR tv77[ebp], eax
$LN4@insert@3:
	mov	ecx, DWORD PTR tv77[ebp]
	mov	DWORD PTR __Off$[ebp], ecx

; 877  : 		_Insert_n(_Where, (size_type)1, _Val);

	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z ; std::vector<int,std::allocator<int> >::_Insert_n

; 878  : 		return (begin() + _Off);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T261535[ebp], edx
	mov	eax, DWORD PTR $T261535[ebp]
	mov	DWORD PTR $T261503[ebp], eax
	mov	ecx, DWORD PTR $T261503[ebp]
	mov	DWORD PTR __Tmp$261557[ebp], ecx
	mov	edx, DWORD PTR __Off$[ebp]
	mov	eax, DWORD PTR __Tmp$261557[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR __Tmp$261557[ebp], ecx
	mov	edx, DWORD PTR __Tmp$261557[ebp]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 879  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insert@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@ABH@Z ENDP ; std::vector<int,std::allocator<int> >::insert
_TEXT	ENDS
PUBLIC	??$_Unchecked_move_backward@PAHPAH@stdext@@YAPAHPAH00@Z ; stdext::_Unchecked_move_backward<int *,int *>
PUBLIC	?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAHIABH@Z ; std::vector<int,std::allocator<int> >::_Ufill
PUBLIC	??$_Uninit_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<int *,int *,std::allocator<int> >
PUBLIC	??$unchecked_uninitialized_copy@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z ; stdext::unchecked_uninitialized_copy<int *,int *,std::allocator<int> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z$6 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z$2
__catchsym$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z$0
__unwindtable$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z$5
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z$6
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z
_TEXT	SEGMENT
tv84 = -432						; size = 4
tv302 = -428						; size = 4
tv288 = -424						; size = 4
tv280 = -420						; size = 4
_this$ = -416						; size = 4
$T262111 = -412						; size = 4
$T262059 = -368						; size = 4
$T262047 = -364						; size = 4
$T262037 = -357						; size = 1
$T262036 = -356						; size = 4
__Cat$262055 = -327					; size = 1
$T262052 = -326						; size = 1
$T262051 = -325						; size = 1
$T262008 = -324						; size = 4
$T262000 = -320						; size = 4
$T261992 = -316						; size = 4
$T261981 = -312						; size = 4
$T261980 = -308						; size = 4
__Cat$261988 = -302					; size = 1
$T261986 = -301						; size = 1
$T261909 = -276						; size = 4
$T261890 = -272						; size = 4
$T261873 = -265						; size = 1
$T261872 = -264						; size = 4
$T261862 = -260						; size = 4
$T261861 = -256						; size = 4
__Cat$261906 = -250					; size = 1
$T261904 = -249						; size = 1
$T261903 = -248						; size = 1
__Cat$261898 = -247					; size = 1
$T261895 = -246						; size = 1
$T261894 = -245						; size = 1
$T261837 = -244						; size = 4
$T261836 = -240						; size = 4
$T261832 = -236						; size = 4
$T261831 = -232						; size = 4
$T261820 = -228						; size = 4
$T261819 = -224						; size = 4
__Cat$261827 = -218					; size = 1
$T261825 = -217						; size = 1
$T261784 = -216						; size = 4
$T261783 = -212						; size = 4
__Cat$261791 = -206					; size = 1
$T261789 = -205						; size = 1
$T261754 = -204						; size = 4
$T261753 = -200						; size = 4
__Cat$261761 = -194					; size = 1
$T261759 = -193						; size = 1
$T261734 = -192						; size = 4
$T261722 = -188						; size = 4
$T261712 = -181						; size = 1
$T261711 = -180						; size = 4
__Cat$261730 = -175					; size = 1
$T261727 = -174						; size = 1
$T261726 = -173						; size = 1
$T261699 = -172						; size = 4
$T261687 = -168						; size = 4
$T261677 = -161						; size = 1
$T261676 = -160						; size = 4
__Cat$261695 = -155					; size = 1
$T261692 = -154						; size = 1
$T261691 = -153						; size = 1
$T261664 = -152						; size = 4
$T261652 = -148						; size = 4
$T261642 = -141						; size = 1
$T261641 = -140						; size = 4
__Cat$261659 = -135					; size = 1
$T261657 = -134						; size = 1
$T261656 = -133						; size = 1
__Count$261618 = -120					; size = 4
__Count$261592 = -48					; size = 4
__Tmp$214818 = -44					; size = 4
__Oldend$214819 = -40					; size = 4
__Tmp$214808 = -36					; size = 4
__Ncopied$214795 = -32					; size = 4
__Newvec$214793 = -28					; size = 4
__Whereoff$214794 = -24					; size = 4
__Capacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Where$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z PROC ; std::vector<int,std::allocator<int> >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 416				; 000001a0H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN29@Insert_n@2
	mov	DWORD PTR tv280[ebp], 0
	jmp	SHORT $LN27@Insert_n@2
$LN29@Insert_n@2:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	mov	DWORD PTR tv280[ebp], eax
$LN27@Insert_n@2:
	mov	ecx, DWORD PTR tv280[ebp]
	mov	DWORD PTR __Capacity$[ebp], ecx

; 1162 : 
; 1163 : 		if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN14@Insert_n@2
	jmp	$LN16@Insert_n@2
$LN14@Insert_n@2:

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	DWORD PTR __Count$261592[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$261592[ebp], 0
	jbe	SHORT $LN35@Insert_n@2
	mov	edx, DWORD PTR __Count$261592[ebp]
	mov	DWORD PTR tv288[ebp], edx
	jmp	SHORT $LN37@Insert_n@2
$LN35@Insert_n@2:
	mov	DWORD PTR tv288[ebp], 1
$LN37@Insert_n@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	mov	eax, DWORD PTR tv288[ebp]
	sub	eax, edx
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN42@Insert_n@2

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ ; std::vector<int,std::allocator<int> >::_Xlen
	jmp	$LN16@Insert_n@2

; 1167 : 		else if (_Capacity < size() + _Count)

$LN42@Insert_n@2:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	add	eax, DWORD PTR __Count$[ebp]
	cmp	DWORD PTR __Capacity$[ebp], eax
	jae	$LN10@Insert_n@2

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	DWORD PTR __Count$261618[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$261618[ebp], 0
	jbe	SHORT $LN48@Insert_n@2
	mov	ecx, DWORD PTR __Count$261618[ebp]
	mov	DWORD PTR tv302[ebp], ecx
	jmp	SHORT $LN44@Insert_n@2
$LN48@Insert_n@2:
	mov	DWORD PTR tv302[ebp], 1
$LN44@Insert_n@2:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	mov	eax, DWORD PTR tv302[ebp]
	sub	eax, edx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN17@Insert_n@2
	mov	DWORD PTR tv84[ebp], 0
	jmp	SHORT $LN18@Insert_n@2
$LN17@Insert_n@2:
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	add	ecx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv84[ebp], ecx
$LN18@Insert_n@2:
	mov	edx, DWORD PTR tv84[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx

; 1171 : 			if (_Capacity < size() + _Count)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	add	edx, DWORD PTR __Count$[ebp]
	cmp	DWORD PTR __Capacity$[ebp], edx
	jae	SHORT $LN54@Insert_n@2

; 1172 : 				_Capacity = size() + _Count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	add	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

$LN54@Insert_n@2:
	push	0
	mov	eax, DWORD PTR __Capacity$[ebp]
	push	eax
	call	??$_Allocate@H@std@@YAPAHIPAH@Z		; std::_Allocate<int>
	add	esp, 8
	mov	DWORD PTR __Newvec$214793[ebp], eax

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Where$[ebp]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	mov	DWORD PTR __Whereoff$214794[ebp], edx

; 1175 : 			int _Ncopied = 0;

	mov	DWORD PTR __Ncopied$214795[ebp], 0

; 1176 : 
; 1177 : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	eax, DWORD PTR __Whereoff$214794[ebp]
	mov	ecx, DWORD PTR __Newvec$214793[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR $T261664[ebp], edx
	mov	eax, DWORD PTR $T261664[ebp]
	mov	DWORD PTR $T261652[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T261656[ebp], cl
	mov	dl, BYTE PTR __Cat$261659[ebp]
	mov	BYTE PTR $T261657[ebp], dl
	mov	al, BYTE PTR $T261656[ebp]
	mov	BYTE PTR $T261642[ebp], al
	mov	ecx, DWORD PTR $T261652[ebp]
	mov	DWORD PTR $T261641[ebp], ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T261641[ebp]
	push	ecx
	call	??$unchecked_fill_n@PAHIH@stdext@@YAXPAHIABH@Z ; stdext::unchecked_fill_n<int *,unsigned int,int>
	add	esp, 12					; 0000000cH

; 1179 : 			++_Ncopied;

	mov	edx, DWORD PTR __Ncopied$214795[ebp]
	add	edx, 1
	mov	DWORD PTR __Ncopied$214795[ebp], edx

; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T261699[ebp], ecx
	mov	edx, DWORD PTR __Newvec$214793[ebp]
	mov	DWORD PTR $T261687[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T261691[ebp], al
	mov	cl, BYTE PTR __Cat$261695[ebp]
	mov	BYTE PTR $T261692[ebp], cl
	mov	dl, BYTE PTR $T261691[ebp]
	mov	BYTE PTR $T261677[ebp], dl
	mov	eax, DWORD PTR $T261687[ebp]
	mov	DWORD PTR $T261676[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T261676[ebp]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T261699[ebp]
	push	ecx
	call	??$unchecked_uninitialized_copy@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z ; stdext::unchecked_uninitialized_copy<int *,int *,std::allocator<int> >
	add	esp, 16					; 00000010H

; 1182 : 			++_Ncopied;

	mov	edx, DWORD PTR __Ncopied$214795[ebp]
	add	edx, 1
	mov	DWORD PTR __Ncopied$214795[ebp], edx

; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T261734[ebp], ecx
	mov	edx, DWORD PTR __Whereoff$214794[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Newvec$214793[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T261722[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T261726[ebp], dl
	mov	al, BYTE PTR __Cat$261730[ebp]
	mov	BYTE PTR $T261727[ebp], al
	mov	cl, BYTE PTR $T261726[ebp]
	mov	BYTE PTR $T261712[ebp], cl
	mov	edx, DWORD PTR $T261722[ebp]
	mov	DWORD PTR $T261711[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T261711[ebp]
	push	ecx
	mov	edx, DWORD PTR $T261734[ebp]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??$unchecked_uninitialized_copy@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z ; stdext::unchecked_uninitialized_copy<int *,int *,std::allocator<int> >
	add	esp, 16					; 00000010H
	jmp	$LN19@Insert_n@2
__catch$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)

	cmp	DWORD PTR __Ncopied$214795[ebp], 1
	jle	SHORT $LN7@Insert_n@2

; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);

	mov	ecx, DWORD PTR __Whereoff$214794[ebp]
	mov	edx, DWORD PTR __Newvec$214793[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR $T261754[ebp], eax
	mov	ecx, DWORD PTR __Newvec$214793[ebp]
	mov	DWORD PTR $T261753[ebp], ecx
	mov	dl, BYTE PTR __Cat$261761[ebp]
	mov	BYTE PTR $T261759[ebp], dl
$LN7@Insert_n@2:

; 1188 : 			if (0 < _Ncopied)

	cmp	DWORD PTR __Ncopied$214795[ebp], 0
	jle	SHORT $LN6@Insert_n@2

; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);

	mov	eax, DWORD PTR __Whereoff$214794[ebp]
	mov	ecx, DWORD PTR __Newvec$214793[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR __Count$[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR $T261784[ebp], ecx
	mov	edx, DWORD PTR __Whereoff$214794[ebp]
	mov	eax, DWORD PTR __Newvec$214793[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T261783[ebp], ecx
	mov	dl, BYTE PTR __Cat$261791[ebp]
	mov	BYTE PTR $T261789[ebp], dl
$LN6@Insert_n@2:

; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	mov	eax, DWORD PTR __Newvec$214793[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1192 : 			_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN103@Insert_n@2
	ret	0
$LN19@Insert_n@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 1193 : 
; 1194 : 			_Count += size();

$LN103@Insert_n@2:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Count$[ebp], eax

; 1195 : 			if (_Myfirst != 0)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN5@Insert_n@2

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T261832[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T261831[ebp], edx
	mov	eax, DWORD PTR $T261832[ebp]
	mov	DWORD PTR $T261820[ebp], eax
	mov	ecx, DWORD PTR $T261831[ebp]
	mov	DWORD PTR $T261819[ebp], ecx
	mov	dl, BYTE PTR __Cat$261827[ebp]
	mov	BYTE PTR $T261825[ebp], dl

; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	mov	DWORD PTR $T261837[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T261836[ebp], ecx
	mov	edx, DWORD PTR $T261836[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN5@Insert_n@2:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	eax, DWORD PTR __Capacity$[ebp]
	mov	ecx, DWORD PTR __Newvec$214793[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx

; 1206 : 			_Mylast = _Newvec + _Count;

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Newvec$214793[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 1207 : 			_Myfirst = _Newvec;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newvec$214793[ebp]
	mov	DWORD PTR [edx+4], eax
	jmp	$LN16@Insert_n@2
$LN10@Insert_n@2:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, DWORD PTR __Where$[ebp]
	sar	edx, 2
	cmp	edx, DWORD PTR __Count$[ebp]
	jae	$LN3@Insert_n@2

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$214808[ebp], ecx

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T261909[ebp], eax
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Where$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR $T261890[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T261894[ebp], cl
	mov	dl, BYTE PTR __Cat$261898[ebp]
	mov	BYTE PTR $T261895[ebp], dl
	mov	al, BYTE PTR $T261894[ebp]
	mov	BYTE PTR $T261873[ebp], al
	mov	ecx, DWORD PTR $T261890[ebp]
	mov	DWORD PTR $T261872[ebp], ecx
	mov	edx, DWORD PTR $T261872[ebp]
	mov	DWORD PTR $T261862[ebp], edx
	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T261861[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T261903[ebp], cl
	mov	dl, BYTE PTR __Cat$261906[ebp]
	mov	BYTE PTR $T261904[ebp], dl
	movzx	eax, BYTE PTR $T261903[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T261904[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR $T261862[ebp]
	push	eax
	mov	ecx, DWORD PTR $T261909[ebp]
	push	ecx
	mov	edx, DWORD PTR $T261861[ebp]
	push	edx
	call	??$_Uninit_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<int *,int *,std::allocator<int> >
	add	esp, 24					; 00000018H

; 1215 : 
; 1216 : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 2

; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	lea	eax, DWORD PTR __Tmp$214808[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, DWORD PTR __Where$[ebp]
	sar	edx, 2
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAHIABH@Z ; std::vector<int,std::allocator<int> >::_Ufill
	jmp	SHORT $LN21@Insert_n@2
__catch$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z$2:

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR $T261992[ebp], eax
	mov	ecx, DWORD PTR $T261992[ebp]
	mov	DWORD PTR $T261981[ebp], ecx
	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Where$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T261980[ebp], ecx
	mov	dl, BYTE PTR __Cat$261988[ebp]
	mov	BYTE PTR $T261986[ebp], dl

; 1221 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1222 : 			_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z$3
	ret	0
$LN21@Insert_n@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z$3:

; 1223 : 
; 1224 : 			_Mylast += _Count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	mov	edx, DWORD PTR __Count$[ebp]
	shl	edx, 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, edx
	mov	DWORD PTR $T262008[ebp], ecx
	mov	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T262000[ebp], edx
	jmp	SHORT $LN151@Insert_n@2
$LN150@Insert_n@2:
	mov	eax, DWORD PTR $T262000[ebp]
	add	eax, 4
	mov	DWORD PTR $T262000[ebp], eax
$LN151@Insert_n@2:
	mov	ecx, DWORD PTR $T262000[ebp]
	cmp	ecx, DWORD PTR $T262008[ebp]
	je	SHORT $LN147@Insert_n@2
	mov	edx, DWORD PTR $T262000[ebp]
	mov	eax, DWORD PTR __Tmp$214808[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN150@Insert_n@2
$LN147@Insert_n@2:

; 1232 : 			}
; 1233 : 		else

	jmp	$LN16@Insert_n@2
$LN3@Insert_n@2:

; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$214818[ebp], edx

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Oldend$214819[ebp], ecx

; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T262059[ebp], eax
	mov	ecx, DWORD PTR $T262059[ebp]
	mov	DWORD PTR $T262047[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T262051[ebp], dl
	mov	al, BYTE PTR __Cat$262055[ebp]
	mov	BYTE PTR $T262052[ebp], al
	mov	cl, BYTE PTR $T262051[ebp]
	mov	BYTE PTR $T262037[ebp], cl
	mov	edx, DWORD PTR $T262047[ebp]
	mov	DWORD PTR $T262036[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T262036[ebp]
	push	ecx
	mov	edx, DWORD PTR __Oldend$214819[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	mov	ecx, DWORD PTR __Oldend$214819[ebp]
	sub	ecx, eax
	push	ecx
	call	??$unchecked_uninitialized_copy@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z ; stdext::unchecked_uninitialized_copy<int *,int *,std::allocator<int> >
	add	esp, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	mov	eax, DWORD PTR __Oldend$214819[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	mov	edx, DWORD PTR __Oldend$214819[ebp]
	sub	edx, ecx
	push	edx
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??$_Unchecked_move_backward@PAHPAH@stdext@@YAPAHPAH00@Z ; stdext::_Unchecked_move_backward<int *,int *>
	add	esp, 12					; 0000000cH

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T262111[ebp], ecx
	jmp	SHORT $LN186@Insert_n@2
$LN185@Insert_n@2:
	mov	edx, DWORD PTR $T262111[ebp]
	add	edx, 4
	mov	DWORD PTR $T262111[ebp], edx
$LN186@Insert_n@2:
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	cmp	DWORD PTR $T262111[ebp], edx
	je	SHORT $LN16@Insert_n@2
	mov	eax, DWORD PTR $T262111[ebp]
	mov	ecx, DWORD PTR __Tmp$214818[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN185@Insert_n@2
$LN16@Insert_n@2:

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-436]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z ENDP ; std::vector<int,std::allocator<int> >::_Insert_n
; Function compile flags: /Odtp
;	COMDAT ?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAHIABH@Z
_TEXT	SEGMENT
_this$ = -44						; size = 4
$T262182 = -40						; size = 4
$T262172 = -33						; size = 1
$T262171 = -32						; size = 4
__Cat$262180 = -3					; size = 1
$T262178 = -2						; size = 1
$T262177 = -1						; size = 1
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAHIABH@Z PROC ; std::vector<int,std::allocator<int> >::_Ufill, COMDAT
; _this$ = ecx

; 1253 : 		{	// copy initializing _Count * _Val, using allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 1254 : 		_STDEXT unchecked_uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR $T262182[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T262177[ebp], cl
	mov	dl, BYTE PTR __Cat$262180[ebp]
	mov	BYTE PTR $T262178[ebp], dl
	mov	al, BYTE PTR $T262177[ebp]
	mov	BYTE PTR $T262172[ebp], al
	mov	ecx, DWORD PTR $T262182[ebp]
	mov	DWORD PTR $T262171[ebp], ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T262171[ebp]
	push	ecx
	call	??$unchecked_fill_n@PAHIH@stdext@@YAXPAHIABH@Z ; stdext::unchecked_fill_n<int *,unsigned int,int>
	add	esp, 12					; 0000000cH

; 1255 : 		return (_Ptr + _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	lea	eax, DWORD PTR [eax+edx*4]

; 1256 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAHIABH@Z ENDP ; std::vector<int,std::allocator<int> >::_Ufill
_TEXT	ENDS
EXTRN	__imp__memmove_s:PROC
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Unchecked_move_backward@PAHPAH@stdext@@YAPAHPAH00@Z
_TEXT	SEGMENT
$T262227 = -38						; size = 1
$T262226 = -37						; size = 1
$T262225 = -36						; size = 4
$T262224 = -32						; size = 4
$T262211 = -25						; size = 1
$T262210 = -24						; size = 4
$T262209 = -20						; size = 4
__Off$262220 = -16					; size = 4
__Result$262221 = -12					; size = 4
__Cat$262217 = -8					; size = 1
$T262214 = -7						; size = 1
$T262213 = -6						; size = 1
__Cat$262191 = -4					; size = 1
$T262187 = -3						; size = 1
$T262186 = -2						; size = 1
$T262185 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAHPAH@stdext@@YAPAHPAH00@Z PROC ; stdext::_Unchecked_move_backward<int *,int *>, COMDAT

; 3694 : 	{	// move [_First, _Last) backwards to [..., _Dest)

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	xor	eax, eax
	mov	BYTE PTR $T262185[ebp], al
	mov	cl, BYTE PTR __Cat$262191[ebp]
	mov	BYTE PTR $T262186[ebp], cl
	mov	dl, BYTE PTR $T262185[ebp]
	mov	BYTE PTR $T262227[ebp], dl
	mov	al, BYTE PTR $T262187[ebp]
	mov	BYTE PTR $T262226[ebp], al
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T262225[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T262224[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T262213[ebp], al
	mov	cl, BYTE PTR __Cat$262217[ebp]
	mov	BYTE PTR $T262214[ebp], cl
	mov	dl, BYTE PTR $T262213[ebp]
	mov	BYTE PTR $T262211[ebp], dl
	mov	eax, DWORD PTR $T262225[ebp]
	mov	DWORD PTR $T262210[ebp], eax
	mov	ecx, DWORD PTR $T262224[ebp]
	mov	DWORD PTR $T262209[ebp], ecx
	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, DWORD PTR $T262209[ebp]
	sar	edx, 2
	mov	DWORD PTR __Off$262220[ebp], edx
	mov	eax, DWORD PTR __Off$262220[ebp]
	shl	eax, 2
	mov	ecx, DWORD PTR $T262210[ebp]
	sub	ecx, eax
	mov	DWORD PTR __Result$262221[ebp], ecx
	cmp	DWORD PTR __Off$262220[ebp], 0
	jle	SHORT $LN7@Unchecked_@2
	mov	edx, DWORD PTR __Off$262220[ebp]
	shl	edx, 2
	push	edx
	mov	eax, DWORD PTR $T262209[ebp]
	push	eax
	mov	ecx, DWORD PTR __Off$262220[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __Result$262221[ebp]
	push	edx
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN7@Unchecked_@2:
	mov	eax, DWORD PTR __Result$262221[ebp]

; 3697 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unchecked_move_backward@PAHPAH@stdext@@YAPAHPAH00@Z ENDP ; stdext::_Unchecked_move_backward<int *,int *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$unchecked_fill_n@PAHIH@stdext@@YAXPAHIABH@Z
_TEXT	SEGMENT
$T262257 = -22						; size = 1
$T262256 = -21						; size = 1
$T262255 = -20						; size = 4
$T262246 = -13						; size = 1
$T262245 = -12						; size = 4
$T262244 = -8						; size = 4
$T262248 = -4						; size = 1
$T262231 = -2						; size = 1
$T262230 = -1						; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
??$unchecked_fill_n@PAHIH@stdext@@YAXPAHIABH@Z PROC	; stdext::unchecked_fill_n<int *,unsigned int,int>, COMDAT

; 3720 : 	{	// copy _Val _Count times through [_First, ...)

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 3721 : 		_STD _Fill_n(_First, _Count, _Val, _STD _Iter_cat(_First), _STD _Range_checked_iterator_tag());

	xor	eax, eax
	mov	BYTE PTR $T262230[ebp], al
	mov	cl, BYTE PTR $T262230[ebp]
	mov	BYTE PTR $T262257[ebp], cl
	mov	dl, BYTE PTR $T262231[ebp]
	mov	BYTE PTR $T262256[ebp], dl
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T262255[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T262248[ebp], cl
	mov	dl, BYTE PTR $T262248[ebp]
	mov	BYTE PTR $T262246[ebp], dl
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR $T262245[ebp], eax
	mov	ecx, DWORD PTR $T262255[ebp]
	mov	DWORD PTR $T262244[ebp], ecx
	jmp	SHORT $LN9@unchecked_
$LN8@unchecked_:
	mov	edx, DWORD PTR $T262245[ebp]
	sub	edx, 1
	mov	DWORD PTR $T262245[ebp], edx
	mov	eax, DWORD PTR $T262244[ebp]
	add	eax, 4
	mov	DWORD PTR $T262244[ebp], eax
$LN9@unchecked_:
	cmp	DWORD PTR $T262245[ebp], 0
	jbe	SHORT $LN1@unchecked_
	mov	ecx, DWORD PTR $T262244[ebp]
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	jmp	SHORT $LN8@unchecked_
$LN1@unchecked_:

; 3722 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$unchecked_fill_n@PAHIH@stdext@@YAXPAHIABH@Z ENDP	; stdext::unchecked_fill_n<int *,unsigned int,int>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ??$unchecked_uninitialized_copy@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z
_TEXT	SEGMENT
$T262274 = -21						; size = 1
$T262273 = -20						; size = 4
$T262272 = -16						; size = 4
__Result$262270 = -12					; size = 4
__Count$262269 = -8					; size = 4
__Cat$262265 = -3					; size = 1
$T262261 = -2						; size = 1
$T262260 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z PROC ; stdext::unchecked_uninitialized_copy<int *,int *,std::allocator<int> >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	xor	eax, eax
	mov	BYTE PTR $T262260[ebp], al
	mov	cl, BYTE PTR __Cat$262265[ebp]
	mov	BYTE PTR $T262261[ebp], cl
	mov	dl, BYTE PTR $T262260[ebp]
	mov	BYTE PTR $T262274[ebp], dl
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T262273[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T262272[ebp], ecx
	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, DWORD PTR $T262272[ebp]
	sar	edx, 2
	mov	DWORD PTR __Count$262269[ebp], edx
	mov	eax, DWORD PTR __Count$262269[ebp]
	mov	ecx, DWORD PTR $T262273[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR __Result$262270[ebp], edx
	cmp	DWORD PTR __Count$262269[ebp], 0
	jbe	SHORT $LN6@unchecked_@2
	mov	eax, DWORD PTR __Count$262269[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR $T262272[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$262269[ebp]
	shl	edx, 2
	push	edx
	mov	eax, DWORD PTR $T262273[ebp]
	push	eax
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN6@unchecked_@2:
	mov	eax, DWORD PTR __Result$262270[ebp]

; 823  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$unchecked_uninitialized_copy@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z ENDP ; stdext::unchecked_uninitialized_copy<int *,int *,std::allocator<int> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<int *,int *,std::allocator<int> >, COMDAT

; 145  : 	{	// copy [_First, _Last) to raw _Dest, scalar type

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 146  : 	_DEBUG_RANGE(_First, _Last);
; 147  : 	_DEBUG_POINTER(_Dest);
; 148  : 	size_t _Count = (size_t)(_Last - _First);

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax

; 149  : 	_FwdIt _Result = _Dest + _Count;

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Dest$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR __Result$[ebp], eax

; 150  : 	if (_Count > 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@Uninit_cop@3

; 151  : 		_CRT_SECURE_MEMMOVE(&*_Dest, _Count * sizeof (*_First), &*_First, _Count * sizeof (*_First));	// NB: non-overlapping move

	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN1@Uninit_cop@3:

; 152  : 	return (_Result);

	mov	eax, DWORD PTR __Result$[ebp]

; 153  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<int *,int *,std::allocator<int> >
_TEXT	ENDS
END
