; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\Lua\CvLuaPlayer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?NO_QUEST_DATA@CvMinorCivQuest@@2HB		; CvMinorCivQuest::NO_QUEST_DATA
PUBLIC	?NO_TURN@CvMinorCivQuest@@2HB			; CvMinorCivQuest::NO_TURN
CONST	SEGMENT
_guidICvUnit1 DD 09f157e04H
	DW	04b2dH
	DW	04797H
	DB	09aH
	DB	0a5H
	DB	013H
	DB	025H
	DB	0deH
	DB	022H
	DB	016H
	DB	07H
CONST	ENDS
;	COMDAT ?NO_TURN@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_TURN@CvMinorCivQuest@@2HB DD 0ffffffffH		; CvMinorCivQuest::NO_TURN
CONST	ENDS
;	COMDAT ?NO_QUEST_DATA@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_QUEST_DATA@CvMinorCivQuest@@2HB DD 0ffffffffH	; CvMinorCivQuest::NO_QUEST_DATA
CONST	ENDS
PUBLIC	?pRegister@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::pRegister
PUBLIC	?Register@CvLuaPlayer@@SAXPAUlua_State@@@Z	; CvLuaPlayer::Register
EXTRN	?CCallWithErrorHandling@Details@FLua@@YA_NPAUlua_State@@P6AH0@ZPAX@Z:PROC ; FLua::Details::CCallWithErrorHandling
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
;	COMDAT ?Register@CvLuaPlayer@@SAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?Register@CvLuaPlayer@@SAXPAUlua_State@@@Z PROC		; CvLuaPlayer::Register, COMDAT

; 41   : {

	push	ebp
	mov	ebp, esp

; 42   : 	FLua::Details::CCallWithErrorHandling(L, pRegister);

	push	0
	push	OFFSET ?pRegister@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::pRegister
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?CCallWithErrorHandling@Details@FLua@@YA_NPAUlua_State@@P6AH0@ZPAX@Z ; FLua::Details::CCallWithErrorHandling
	add	esp, 12					; 0000000cH

; 43   : }

	pop	ebp
	ret	0
?Register@CvLuaPlayer@@SAXPAUlua_State@@@Z ENDP		; CvLuaPlayer::Register
_TEXT	ENDS
PUBLIC	??_C@_0BL@KAGDCCOH@GetLiberationPreviewString?$AA@ ; `string'
PUBLIC	?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLiberationPreviewString
PUBLIC	??_C@_0BK@CEKNHANK@GetWarmongerPreviewString?$AA@ ; `string'
PUBLIC	?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWarmongerPreviewString
PUBLIC	??_C@_0BD@PFIGNMFO@HasUnitOfClassType?$AA@	; `string'
PUBLIC	?lHasUnitOfClassType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasUnitOfClassType
PUBLIC	??_C@_0BE@BDGHDECE@HasTurnTimerExpired?$AA@	; `string'
PUBLIC	?lHasTurnTimerExpired@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasTurnTimerExpired
PUBLIC	??_C@_0L@KMAMDGPN@IsObserver?$AA@		; `string'
PUBLIC	?lIsObserver@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsObserver
PUBLIC	??_C@_0M@ILOEPEDD@IsConnected?$AA@		; `string'
PUBLIC	?lIsConnected@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsConnected
PUBLIC	??_C@_0BF@DPDBEIAE@GetCommitVoteDetails?$AA@	; `string'
PUBLIC	?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCommitVoteDetails
PUBLIC	??_C@_0O@JJOHNPOE@CanCommitVote?$AA@		; `string'
PUBLIC	?lCanCommitVote@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanCommitVote
PUBLIC	??_C@_0BE@LLGEBKGE@GetOthersGreatWorks?$AA@	; `string'
PUBLIC	?lGetOthersGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOthersGreatWorks
PUBLIC	??_C@_0BH@GJFHNIHJ@GetSwappableGreatMusic?$AA@	; `string'
PUBLIC	?lGetSwappableGreatMusic@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSwappableGreatMusic
PUBLIC	??_C@_0BK@IECAMKOI@GetSwappableGreatArtifact?$AA@ ; `string'
PUBLIC	?lGetSwappableGreatArtifact@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSwappableGreatArtifact
PUBLIC	??_C@_0BF@PADBEPFE@GetSwappableGreatArt?$AA@	; `string'
PUBLIC	?lGetSwappableGreatArt@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSwappableGreatArt
PUBLIC	??_C@_0BJ@GDFMGLID@GetSwappableGreatWriting?$AA@ ; `string'
PUBLIC	?lGetSwappableGreatWriting@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSwappableGreatWriting
PUBLIC	??_C@_0O@KKLCHPMA@GetGreatWorks?$AA@		; `string'
PUBLIC	?lGetGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatWorks
PUBLIC	??_C@_0BF@BBFCHHGL@GetNumTechDifference?$AA@	; `string'
PUBLIC	?lGetNumTechDifference@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTechDifference
PUBLIC	??_C@_0BE@GPJCHJIN@GetTradeRoutesToYou?$AA@	; `string'
PUBLIC	?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeRoutesToYou
PUBLIC	??_C@_0BI@GGJGPFJM@GetTradeRoutesAvailable?$AA@	; `string'
PUBLIC	?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeRoutesAvailable
PUBLIC	??_C@_0P@OHPONKMK@GetTradeRoutes?$AA@		; `string'
PUBLIC	?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeRoutes
PUBLIC	??_C@_0BM@JIFAFEOA@GetTradeToYouRoutesTTString?$AA@ ; `string'
PUBLIC	?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeToYouRoutesTTString
PUBLIC	??_C@_0BL@IIMJBBCO@GetTradeYourRoutesTTString?$AA@ ; `string'
PUBLIC	?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeYourRoutesTTString
PUBLIC	??_C@_0BB@OACBPOPN@GetTradeUnitType?$AA@	; `string'
PUBLIC	?lGetTradeUnitType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeUnitType
PUBLIC	??_C@_0BK@EADFLLPD@GetNumAvailableTradeUnits?$AA@ ; `string'
PUBLIC	?lGetNumAvailableTradeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumAvailableTradeUnits
PUBLIC	??_C@_0BL@JENMMKCA@GetPotentialAdmiralNewPort?$AA@ ; `string'
PUBLIC	?lGetPotentialAdmiralNewPort@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPotentialAdmiralNewPort
PUBLIC	??_C@_0CB@MAKPAJHJ@GetPotentialTradeUnitNewHomeCity@ ; `string'
PUBLIC	?lGetPotentialTradeUnitNewHomeCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPotentialTradeUnitNewHomeCity
PUBLIC	??_C@_0CC@KHDPEDFE@GetInternationalTradeRouteScienc@ ; `string'
PUBLIC	?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteScience
PUBLIC	??_C@_0CA@JGHLFNBP@GetInternationalTradeRouteTotal?$AA@ ; `string'
PUBLIC	?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteTotal
PUBLIC	??_C@_0CJ@CENOPJDM@GetInternationalTradeRouteDomain@ ; `string'
PUBLIC	?lGetInternationalTradeRouteDomainModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteDomainModifier
PUBLIC	??_C@_0CI@JAMFAEJH@GetInternationalTradeRouteRiverM@ ; `string'
PUBLIC	?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteRiverModifier
PUBLIC	??_C@_0CK@BFEEANCK@GetInternationalTradeRouteOtherT@ ; `string'
PUBLIC	?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteOtherTraitBonus
PUBLIC	??_C@_0CG@IPPHMMIB@GetInternationalTradeRoutePolicy@ ; `string'
PUBLIC	?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRoutePolicyBonus
PUBLIC	??_C@_0CN@BEGIPDME@GetInternationalTradeRouteTheirB@ ; `string'
PUBLIC	?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteTheirBuildingBonus
PUBLIC	??_C@_0CM@ELNCKEMC@GetInternationalTradeRouteYourBu@ ; `string'
PUBLIC	?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteYourBuildingBonus
PUBLIC	??_C@_0CJ@GOKACKGF@GetInternationalTradeRouteExclus@ ; `string'
PUBLIC	?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteExclusiveBonus
PUBLIC	??_C@_0DA@DMPNEJHJ@GetInternationalTradeRouteResour@ ; `string'
PUBLIC	?lGetInternationalTradeRouteResourceTraitModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteResourceTraitModifier
PUBLIC	??_C@_0CI@GKGOKFHF@GetInternationalTradeRouteResour@ ; `string'
PUBLIC	?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteResourceBonus
PUBLIC	??_C@_0CD@JCOMGEHJ@GetInternationalTradeRouteGPTBon@ ; `string'
PUBLIC	?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteGPTBonus
PUBLIC	??_C@_0CE@OFEOPDF@GetInternationalTradeRouteBaseBo@ ; `string'
PUBLIC	?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteBaseBonus
PUBLIC	??_C@_0DA@PAFOHMJF@GetPotentialInternationalTradeRo@ ; `string'
PUBLIC	?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPotentialInternationalTradeRouteDestinations
PUBLIC	??_C@_0CI@HDPEKAFE@GetNumInternationalTradeRoutesAv@ ; `string'
PUBLIC	?lGetNumInternationalTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumInternationalTradeRoutesAvailable
PUBLIC	??_C@_0CD@JKDKNEEH@GetNumInternationalTradeRoutesUs@ ; `string'
PUBLIC	?lGetNumInternationalTradeRoutesUsed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumInternationalTradeRoutesUsed
PUBLIC	??_C@_0CP@LOLBOHGG@GetInternationalTradeRoutePlotMo@ ; `string'
PUBLIC	?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRoutePlotMouseoverToolTip
PUBLIC	??_C@_0CG@HGLODKBP@GetInternationalTradeRoutePlotTo@ ; `string'
PUBLIC	?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRoutePlotToolTip
PUBLIC	??_C@_0BD@MLPGEPHF@GetTradeRouteRange?$AA@	; `string'
PUBLIC	?lGetTradeRouteRange@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeRouteRange
PUBLIC	??_C@_0BK@GHALEPGN@IsOtherDiplomatVisitingMe?$AA@ ; `string'
PUBLIC	?lIsOtherDiplomatVisitingMe@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsOtherDiplomatVisitingMe
PUBLIC	??_C@_0BJ@GILOHAAJ@IsMyDiplomatVisitingThem?$AA@ ; `string'
PUBLIC	?lIsMyDiplomatVisitingThem@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMyDiplomatVisitingThem
PUBLIC	??_C@_0BH@MDDGLPM@GetCoupChanceOfSuccess?$AA@	; `string'
PUBLIC	?lGetCoupChanceOfSuccess@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCoupChanceOfSuccess
PUBLIC	??_C@_0BG@CKNMJMAJ@GetRecentIntrigueInfo?$AA@	; `string'
PUBLIC	?lGetRecentIntrigueInfo@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRecentIntrigueInfo
PUBLIC	??_C@_0BH@DEPJBAFK@HasRecentIntrigueAbout?$AA@	; `string'
PUBLIC	?lHasRecentIntrigueAbout@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasRecentIntrigueAbout
PUBLIC	??_C@_0BE@NDBIENEG@GetIntrigueMessages?$AA@	; `string'
PUBLIC	?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetIntrigueMessages
PUBLIC	??_C@_0BD@CLNJPIEF@GetNumTechsToSteal?$AA@	; `string'
PUBLIC	?lGetNumTechsToSteal@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTechsToSteal
PUBLIC	??_C@_0CA@NNHIHMJL@GetAvailableSpyRelocationCities?$AA@ ; `string'
PUBLIC	?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAvailableSpyRelocationCities
PUBLIC	??_C@_0BA@EJACPBIJ@CanSpyStageCoup?$AA@		; `string'
PUBLIC	?lCanSpyStageCoup@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanSpyStageCoup
PUBLIC	??_C@_0BA@MBCBJNFC@IsSpySchmoozing?$AA@		; `string'
PUBLIC	?lIsSpySchmoozing@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsSpySchmoozing
PUBLIC	??_C@_0O@HGOCMOKI@IsSpyDiplomat?$AA@		; `string'
PUBLIC	?lIsSpyDiplomat@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsSpyDiplomat
PUBLIC	??_C@_0BO@KFGBCJOJ@HasSpyEstablishedSurveillance?$AA@ ; `string'
PUBLIC	?lHasSpyEstablishedSurveillance@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasSpyEstablishedSurveillance
PUBLIC	??_C@_0BC@BEHEHPAE@GetEspionageSpies?$AA@	; `string'
PUBLIC	?lGetEspionageSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEspionageSpies
PUBLIC	??_C@_0BG@EOLELIEH@GetNumUnassignedSpies?$AA@	; `string'
PUBLIC	?lGetNumUnassignedSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnassignedSpies
PUBLIC	??_C@_0M@HJJJBDNC@GetNumSpies?$AA@		; `string'
PUBLIC	?lGetNumSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetNumSpies
PUBLIC	??_C@_0BH@PBHFHBIL@GetEspionageCityStatus?$AA@	; `string'
PUBLIC	?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEspionageCityStatus
PUBLIC	??_C@_0BI@BIGNFBBK@IsAllowPuppetPurchasing?$AA@	; `string'
PUBLIC	?lIsAllowPuppetPurchasing@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAllowPuppetPurchasing
PUBLIC	??_C@_0M@CGFJJMHO@MayNotAnnex?$AA@		; `string'
PUBLIC	?lMayNotAnnex@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lMayNotAnnex
PUBLIC	??_C@_0BD@PELLMMPJ@GetDealTheyreValue?$AA@	; `string'
PUBLIC	?lGetDealTheyreValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDealTheyreValue
PUBLIC	??_C@_0P@BDNMFOBD@GetDealMyValue?$AA@		; `string'
PUBLIC	?lGetDealMyValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDealMyValue
PUBLIC	??_C@_0N@FKEIDJJH@GetDealValue?$AA@		; `string'
PUBLIC	?lGetDealValue@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetDealValue
PUBLIC	??_C@_0BA@MBBOBAGF@GetOpinionTable?$AA@		; `string'
PUBLIC	?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOpinionTable
PUBLIC	??_C@_0BJ@LBBAGBOM@WasResurrectedThisTurnBy?$AA@ ; `string'
PUBLIC	?lWasResurrectedThisTurnBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lWasResurrectedThisTurnBy
PUBLIC	??_C@_0BB@CDPPODHF@WasResurrectedBy?$AA@	; `string'
PUBLIC	?lWasResurrectedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lWasResurrectedBy
PUBLIC	??_C@_0CA@ILDNKAHC@GetPlayerBuildingClassHappiness?$AA@ ; `string'
PUBLIC	?lGetPlayerBuildingClassHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlayerBuildingClassHappiness
PUBLIC	??_C@_0CC@JGCNPAK@GetPlayerBuildingClassYieldChang@ ; `string'
PUBLIC	?lGetPlayerBuildingClassYieldChange@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlayerBuildingClassYieldChange
PUBLIC	??_C@_0CF@JKDHJBPO@GetPolicyEspionageCatchSpiesModi@ ; `string'
PUBLIC	?lGetPolicyEspionageCatchSpiesModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyEspionageCatchSpiesModifier
PUBLIC	??_C@_0BL@OPPCJPCB@GetPolicyEspionageModifier?$AA@ ; `string'
PUBLIC	?lGetPolicyEspionageModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyEspionageModifier
PUBLIC	??_C@_0CC@NHAOMIBG@GetPolicyBuildingClassYieldChang@ ; `string'
PUBLIC	?lGetPolicyBuildingClassYieldChange@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyBuildingClassYieldChange
PUBLIC	??_C@_0CE@CALOGBHI@GetPolicyBuildingClassYieldModif@ ; `string'
PUBLIC	?lGetPolicyBuildingClassYieldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyBuildingClassYieldModifier
PUBLIC	??_C@_0BO@LFAMHIME@GetNaturalWonderYieldModifier?$AA@ ; `string'
PUBLIC	?lGetNaturalWonderYieldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNaturalWonderYieldModifier
PUBLIC	??_C@_0BK@HADFEIC@AddTemporaryDominanceZone?$AA@ ; `string'
PUBLIC	?lAddTemporaryDominanceZone@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAddTemporaryDominanceZone
PUBLIC	??_C@_0BL@OACLDGB@SetEmbarkedGraphicOverride?$AA@ ; `string'
PUBLIC	?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetEmbarkedGraphicOverride
PUBLIC	??_C@_0BL@DBDHHDHB@GetEmbarkedGraphicOverride?$AA@ ; `string'
PUBLIC	?lGetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEmbarkedGraphicOverride
PUBLIC	??_C@_0BJ@JCAMHNPA@ChangeFreePromotionCount?$AA@ ; `string'
PUBLIC	?lChangeFreePromotionCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeFreePromotionCount
PUBLIC	??_C@_0BA@IKABNDKF@IsFreePromotion?$AA@		; `string'
PUBLIC	?lIsFreePromotion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsFreePromotion
PUBLIC	??_C@_0BG@IMOAGJCF@GetFreePromotionCount?$AA@	; `string'
PUBLIC	?lGetFreePromotionCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFreePromotionCount
PUBLIC	??_C@_0M@HCFKLKFB@GetPrevCity?$AA@		; `string'
PUBLIC	?lGetPrevCity@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetPrevCity
PUBLIC	??_C@_0M@CLOHEHIF@GetNextCity?$AA@		; `string'
PUBLIC	?lGetNextCity@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetNextCity
PUBLIC	??_C@_0CG@KMIEOMED@GetExtraBuildingHappinessFromPol@ ; `string'
PUBLIC	?lGetExtraBuildingHappinessFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExtraBuildingHappinessFromPolicies
PUBLIC	??_C@_0BK@DLAHPJGM@GetMayaCalendarLongString?$AA@ ; `string'
PUBLIC	?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMayaCalendarLongString
PUBLIC	??_C@_0BG@MJJNOJKC@GetMayaCalendarString?$AA@	; `string'
PUBLIC	?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMayaCalendarString
PUBLIC	??_C@_0BE@NIFMMLEP@IsUsingMayaCalendar?$AA@	; `string'
PUBLIC	?lIsUsingMayaCalendar@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsUsingMayaCalendar
PUBLIC	??_C@_0CJ@NEKJJLBB@GetNumTurnsBeforeMinorAlliesRefu@ ; `string'
PUBLIC	?lGetNumTurnsBeforeMinorAlliesRefuseBribes@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTurnsBeforeMinorAlliesRefuseBribes
PUBLIC	??_C@_0BI@CNCMJHLM@IsAbleToAnnexCityStates?$AA@	; `string'
PUBLIC	?lIsAbleToAnnexCityStates@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAbleToAnnexCityStates
PUBLIC	??_C@_0BH@IDMIFDOJ@GetHappinessFromLuxury?$AA@	; `string'
PUBLIC	?lGetHappinessFromLuxury@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromLuxury
PUBLIC	??_C@_0BM@IMDAONMJ@IsTraitBonusReligiousBelief?$AA@ ; `string'
PUBLIC	?lIsTraitBonusReligiousBelief@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsTraitBonusReligiousBelief
PUBLIC	??_C@_0CD@LMBAJOCL@GetTraitGreatScientistRateModifi@ ; `string'
PUBLIC	?lGetTraitGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitGreatScientistRateModifier
PUBLIC	??_C@_0BP@MDEOMKGO@GetTraitGreatGeneralExtraBonus?$AA@ ; `string'
PUBLIC	?lGetTraitGreatGeneralExtraBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitGreatGeneralExtraBonus
PUBLIC	??_C@_0CA@EMLNFCFE@GetTraitCityStateCombatModifier?$AA@ ; `string'
PUBLIC	?lGetTraitCityStateCombatModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitCityStateCombatModifier
PUBLIC	??_C@_0CA@DCDDHCMD@GetTraitGoldenAgeCombatModifier?$AA@ ; `string'
PUBLIC	?lGetTraitGoldenAgeCombatModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitGoldenAgeCombatModifier
PUBLIC	??_C@_0BM@EMKOFIFL@IsFreeMayaGreatPersonChoice?$AA@ ; `string'
PUBLIC	?lIsFreeMayaGreatPersonChoice@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsFreeMayaGreatPersonChoice
PUBLIC	??_C@_0O@JDHKMAFF@GetUnitBaktun?$AA@		; `string'
PUBLIC	?lGetUnitBaktun@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitBaktun
PUBLIC	??_C@_0BK@FPGICLJB@ChangeNumFaithGreatPeople?$AA@ ; `string'
PUBLIC	?lChangeNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumFaithGreatPeople
PUBLIC	??_C@_0BH@KIOBMGAB@SetNumFaithGreatPeople?$AA@	; `string'
PUBLIC	?lSetNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumFaithGreatPeople
PUBLIC	??_C@_0BH@KJMPOBNO@GetNumFaithGreatPeople?$AA@	; `string'
PUBLIC	?lGetNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFaithGreatPeople
PUBLIC	??_C@_0BE@GAIHGDCB@ChangeNumMayaBoosts?$AA@	; `string'
PUBLIC	?lChangeNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumMayaBoosts
PUBLIC	??_C@_0BB@HCNHEJE@SetNumMayaBoosts?$AA@		; `string'
PUBLIC	?lSetNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumMayaBoosts
PUBLIC	??_C@_0BB@GDHEMKCG@GetNumMayaBoosts?$AA@	; `string'
PUBLIC	?lGetNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumMayaBoosts
PUBLIC	??_C@_0BJ@DACMHFAL@ChangeNumFreeGreatPeople?$AA@ ; `string'
PUBLIC	?lChangeNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumFreeGreatPeople
PUBLIC	??_C@_0BG@NLJGLIJP@SetNumFreeGreatPeople?$AA@	; `string'
PUBLIC	?lSetNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumFreeGreatPeople
PUBLIC	??_C@_0BG@COMAGBNO@GetNumFreeGreatPeople?$AA@	; `string'
PUBLIC	?lGetNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFreeGreatPeople
PUBLIC	??_C@_0BE@KMAGMKHA@ChangeNumFreeTenets?$AA@	; `string'
PUBLIC	?lChangeNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumFreeTenets
PUBLIC	??_C@_0BB@MLKMNNMF@SetNumFreeTenets?$AA@	; `string'
PUBLIC	?lSetNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumFreeTenets
PUBLIC	??_C@_0BB@KPPFGDHH@GetNumFreeTenets?$AA@	; `string'
PUBLIC	?lGetNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFreeTenets
PUBLIC	??_C@_0BG@NPJFLNFP@ChangeNumFreePolicies?$AA@	; `string'
PUBLIC	?lChangeNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumFreePolicies
PUBLIC	??_C@_0BD@MFPEAFMP@SetNumFreePolicies?$AA@	; `string'
PUBLIC	?lSetNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumFreePolicies
PUBLIC	??_C@_0BD@DPNODDCH@GetNumFreePolicies?$AA@	; `string'
PUBLIC	?lGetNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFreePolicies
PUBLIC	??_C@_0BA@LBJBLEHP@SetNumFreeTechs?$AA@		; `string'
PUBLIC	?lSetNumFreeTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumFreeTechs
PUBLIC	??_C@_0BA@IDIHMGGG@GetNumFreeTechs?$AA@		; `string'
PUBLIC	?lGetNumFreeTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFreeTechs
PUBLIC	??_C@_0BG@OAGGOFCC@GetEverTrainedBuilder?$AA@	; `string'
PUBLIC	?lGetEverTrainedBuilder@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEverTrainedBuilder
PUBLIC	??_C@_0BK@EHCBLBBJ@GetAnyUnitHasOrderToGoody?$AA@ ; `string'
PUBLIC	?lGetAnyUnitHasOrderToGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAnyUnitHasOrderToGoody
PUBLIC	??_C@_0BA@GECDJOIG@GetPlotHasOrder?$AA@		; `string'
PUBLIC	?lGetPlotHasOrder@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlotHasOrder
PUBLIC	??_C@_0BJ@ELMHMJBB@IsAnyGoodyPlotAccessible?$AA@ ; `string'
PUBLIC	?lIsAnyGoodyPlotAccessible@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAnyGoodyPlotAccessible
PUBLIC	??_C@_0BE@EJDMDOAD@GetClosestGoodyPlot?$AA@	; `string'
PUBLIC	?lGetClosestGoodyPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetClosestGoodyPlot
PUBLIC	??_C@_0BD@FBANDIAJ@GetEverPoppedGoody?$AA@	; `string'
PUBLIC	?lGetEverPoppedGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEverPoppedGoody
PUBLIC	??_C@_0BF@CDGMGBGG@GetPlayerVisiblePlot?$AA@	; `string'
PUBLIC	?lGetPlayerVisiblePlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlayerVisiblePlot
PUBLIC	??_C@_0BC@BHJMCOLH@IsAnyPlotImproved?$AA@	; `string'
PUBLIC	?lIsAnyPlotImproved@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAnyPlotImproved
PUBLIC	??_C@_0CF@NDFOBFBD@GetUnimprovedAvailableLuxuryReso@ ; `string'
PUBLIC	?lGetUnimprovedAvailableLuxuryResource@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnimprovedAvailableLuxuryResource
PUBLIC	??_C@_0BN@NABAJGIG@GetRecommendedFoundCityPlots?$AA@ ; `string'
PUBLIC	?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRecommendedFoundCityPlots
PUBLIC	??_C@_0BK@IEOBAACD@GetRecommendedWorkerPlots?$AA@ ; `string'
PUBLIC	?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRecommendedWorkerPlots
PUBLIC	??_C@_0BA@NLGHGOFB@AddNotification?$AA@		; `string'
PUBLIC	?lAddNotification@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAddNotification
PUBLIC	??_C@_0BJ@HFINLBBC@GetNotificationDismissed?$AA@ ; `string'
PUBLIC	?lGetNotificationDismissed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNotificationDismissed
PUBLIC	??_C@_0BE@EKFOPKPG@GetNotificationTurn?$AA@	; `string'
PUBLIC	?lGetNotificationTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNotificationTurn
PUBLIC	??_C@_0BF@GCCNKKFJ@GetNotificationIndex?$AA@	; `string'
PUBLIC	?lGetNotificationIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNotificationIndex
PUBLIC	??_C@_0BK@ELPNEPCO@GetNotificationSummaryStr?$AA@ ; `string'
PUBLIC	?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNotificationSummaryStr
PUBLIC	??_C@_0BD@LHEAKJLF@GetNotificationStr?$AA@	; `string'
PUBLIC	?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNotificationStr
PUBLIC	??_C@_0BE@GFFKJPPB@GetNumNotifications?$AA@	; `string'
PUBLIC	?lGetNumNotifications@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumNotifications
PUBLIC	??_C@_0BA@NIECGIBE@DoForceDenounce?$AA@		; `string'
PUBLIC	?lDoForceDenounce@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoForceDenounce
PUBLIC	??_C@_0L@CDNNFMCG@DoForceDoF?$AA@		; `string'
PUBLIC	?lDoForceDoF@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lDoForceDoF
PUBLIC	??_C@_0BM@GOJPPKLC@GetNumTimesIntrigueSharedBy?$AA@ ; `string'
PUBLIC	?lGetNumTimesIntrigueSharedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTimesIntrigueSharedBy
PUBLIC	??_C@_0BE@ONPDCEII@GetNumTimesRobbedBy?$AA@	; `string'
PUBLIC	?lGetNumTimesRobbedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTimesRobbedBy
PUBLIC	??_C@_0CJ@HNAICDID@IsAngryAboutSidedWithTheirProtec@ ; `string'
PUBLIC	?lIsAngryAboutSidedWithTheirProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAngryAboutSidedWithTheirProtectedMinor
PUBLIC	??_C@_0CC@CKPNELPJ@IsAngryAboutProtectedMinorBullie@ ; `string'
PUBLIC	?lIsAngryAboutProtectedMinorBullied@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAngryAboutProtectedMinorBullied
PUBLIC	??_C@_0CD@HDPPOBNJ@IsAngryAboutProtectedMinorAttack@ ; `string'
PUBLIC	?lIsAngryAboutProtectedMinorAttacked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAngryAboutProtectedMinorAttacked
PUBLIC	??_C@_0CB@CJDCIHKM@IsAngryAboutProtectedMinorKilled@ ; `string'
PUBLIC	?lIsAngryAboutProtectedMinorKilled@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAngryAboutProtectedMinorKilled
PUBLIC	??_C@_0BE@JNJDNMPI@IsCapitalCapturedBy?$AA@	; `string'
PUBLIC	?lIsCapitalCapturedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsCapitalCapturedBy
PUBLIC	??_C@_09DPPFJHEB@IsNukedBy?$AA@			; `string'
PUBLIC	?lIsNukedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsNukedBy
PUBLIC	??_C@_0BD@GACGPEPG@IsHasPaidTributeTo?$AA@	; `string'
PUBLIC	?lIsHasPaidTributeTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsHasPaidTributeTo
PUBLIC	??_C@_0BD@IPDLFGDH@IsGaveAssistanceTo?$AA@	; `string'
PUBLIC	?lIsGaveAssistanceTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsGaveAssistanceTo
PUBLIC	??_C@_0BF@KCNKODGD@GetRecentAssistValue?$AA@	; `string'
PUBLIC	?lGetRecentAssistValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRecentAssistValue
PUBLIC	??_C@_0BC@IFLMMGKH@GetCommonFoeValue?$AA@	; `string'
PUBLIC	?lGetCommonFoeValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCommonFoeValue
PUBLIC	??_C@_0BE@FPCOMDEJ@GetRecentTradeValue?$AA@	; `string'
PUBLIC	?lGetRecentTradeValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRecentTradeValue
PUBLIC	??_C@_0BJ@DMOODLIP@IsPlayerRecklessExpander?$AA@ ; `string'
PUBLIC	?lIsPlayerRecklessExpander@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerRecklessExpander
PUBLIC	??_C@_0BD@PMGAKDPI@IsDenouncingPlayer?$AA@	; `string'
PUBLIC	?lIsDenouncingPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsDenouncingPlayer
PUBLIC	??_C@_0BK@FHGEGONP@GetDenouncedPlayerCounter?$AA@ ; `string'
PUBLIC	?lGetDenouncedPlayerCounter@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDenouncedPlayerCounter
PUBLIC	??_C@_0BC@HDCKECNO@IsDenouncedPlayer?$AA@	; `string'
PUBLIC	?lIsDenouncedPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsDenouncedPlayer
PUBLIC	??_C@_0CB@PGJLPOEE@IsHasPlayerBulliedProtectedMinor@ ; `string'
PUBLIC	?lIsHasPlayerBulliedProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsHasPlayerBulliedProtectedMinor
PUBLIC	??_C@_0CJ@DIAPIEBB@GetTurnsSincePlayerBulliedProtec@ ; `string'
PUBLIC	?lGetTurnsSincePlayerBulliedProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnsSincePlayerBulliedProtectedMinor
PUBLIC	??_C@_0CJ@OFLJGKFO@GetOtherPlayerNumProtectedMinors@ ; `string'
PUBLIC	?lGetOtherPlayerNumProtectedMinorsAttacked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOtherPlayerNumProtectedMinorsAttacked
PUBLIC	??_C@_0CH@NFMJJPAP@GetOtherPlayerNumProtectedMinors@ ; `string'
PUBLIC	?lGetOtherPlayerNumProtectedMinorsKilled@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOtherPlayerNumProtectedMinorsKilled
PUBLIC	??_C@_0BN@HMMNHODE@IsPlayerBrokenCoopWarPromise?$AA@ ; `string'
PUBLIC	?lIsPlayerBrokenCoopWarPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenCoopWarPromise
PUBLIC	??_C@_0CA@CMEPJCFP@IsPlayerIgnoredNoDiggingPromise?$AA@ ; `string'
PUBLIC	?lIsPlayerIgnoredNoDiggingPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredNoDiggingPromise
PUBLIC	??_C@_0BP@LFBLAEPB@IsPlayerBrokenNoDiggingPromise?$AA@ ; `string'
PUBLIC	?lIsPlayerBrokenNoDiggingPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenNoDiggingPromise
PUBLIC	??_C@_0CA@PNGBPAJN@IsPlayerIgnoredNoConvertPromise?$AA@ ; `string'
PUBLIC	?lIsPlayerIgnoredNoConvertPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredNoConvertPromise
PUBLIC	??_C@_0BP@GEDFGGDD@IsPlayerBrokenNoConvertPromise?$AA@ ; `string'
PUBLIC	?lIsPlayerBrokenNoConvertPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenNoConvertPromise
PUBLIC	??_C@_0BK@OGDKEICG@IsPlayerForgivenForSpying?$AA@ ; `string'
PUBLIC	?lIsPlayerForgivenForSpying@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerForgivenForSpying
PUBLIC	??_C@_0BK@JEDEIMK@IsPlayerIgnoredSpyPromise?$AA@ ; `string'
PUBLIC	?lIsPlayerIgnoredSpyPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredSpyPromise
PUBLIC	??_C@_0BJ@JNJJEOK@IsPlayerBrokenSpyPromise?$AA@	; `string'
PUBLIC	?lIsPlayerBrokenSpyPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenSpyPromise
PUBLIC	??_C@_0CF@KFJMCHGJ@IsPlayerIgnoredBullyCityStatePro@ ; `string'
PUBLIC	?lIsPlayerIgnoredBullyCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredBullyCityStatePromise
PUBLIC	??_C@_0CE@DJJGAPNJ@IsPlayerBrokenBullyCityStateProm@ ; `string'
PUBLIC	?lIsPlayerBrokenBullyCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenBullyCityStatePromise
PUBLIC	??_C@_0CG@KKPEMKMO@IsPlayerIgnoredAttackCityStatePr@ ; `string'
PUBLIC	?lIsPlayerIgnoredAttackCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredAttackCityStatePromise
PUBLIC	??_C@_0CF@GBAJHDGK@IsPlayerBrokenAttackCityStatePro@ ; `string'
PUBLIC	?lIsPlayerBrokenAttackCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenAttackCityStatePromise
PUBLIC	??_C@_0BN@GFDNDNLB@IsPlayerIgnoredBorderPromise?$AA@ ; `string'
PUBLIC	?lIsPlayerIgnoredBorderPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredBorderPromise
PUBLIC	??_C@_0BM@GACHILBI@IsPlayerBrokenBorderPromise?$AA@ ; `string'
PUBLIC	?lIsPlayerBrokenBorderPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenBorderPromise
PUBLIC	??_C@_0CA@DMHDJLCE@IsPlayerIgnoredExpansionPromise?$AA@ ; `string'
PUBLIC	?lIsPlayerIgnoredExpansionPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredExpansionPromise
PUBLIC	??_C@_0BP@KFCHANIK@IsPlayerBrokenExpansionPromise?$AA@ ; `string'
PUBLIC	?lIsPlayerBrokenExpansionPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenExpansionPromise
PUBLIC	??_C@_0BP@EKOONDLN@IsPlayerIgnoredMilitaryPromise?$AA@ ; `string'
PUBLIC	?lIsPlayerIgnoredMilitaryPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredMilitaryPromise
PUBLIC	??_C@_0BO@BHCJMHLO@IsPlayerBrokenMilitaryPromise?$AA@ ; `string'
PUBLIC	?lIsPlayerBrokenMilitaryPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenMilitaryPromise
PUBLIC	??_C@_0BO@FJLIBNNG@HasOthersReligionInMostCities?$AA@ ; `string'
PUBLIC	?lHasOthersReligionInMostCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasOthersReligionInMostCities
PUBLIC	??_C@_0BN@OAEOBIFG@GetNegativeArchaeologyPoints?$AA@ ; `string'
PUBLIC	?lGetNegativeArchaeologyPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNegativeArchaeologyPoints
PUBLIC	??_C@_0CF@NJLECOGK@GetNegativeReligiousConversionPo@ ; `string'
PUBLIC	?lGetNegativeReligiousConversionPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNegativeReligiousConversionPoints
PUBLIC	??_C@_0BJ@MPACPFAF@GetNumTimesCultureBombed?$AA@ ; `string'
PUBLIC	?lGetNumTimesCultureBombed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTimesCultureBombed
PUBLIC	??_C@_0BK@BIEGDACJ@GetNumLandmarksBuiltForMe?$AA@ ; `string'
PUBLIC	?lGetNumLandmarksBuiltForMe@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumLandmarksBuiltForMe
PUBLIC	??_C@_0BM@GINOMEII@GetNumCiviliansReturnedToMe?$AA@ ; `string'
PUBLIC	?lGetNumCiviliansReturnedToMe@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumCiviliansReturnedToMe
PUBLIC	??_C@_0BB@IBMCHFPO@IsDemandEverMade?$AA@	; `string'
PUBLIC	?lIsDemandEverMade@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsDemandEverMade
PUBLIC	??_C@_0CD@CHPAFEIM@IsPlayerStopSpyingRequestEverAsk@ ; `string'
PUBLIC	?lIsPlayerStopSpyingRequestEverAsked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerStopSpyingRequestEverAsked
PUBLIC	??_C@_0CB@GCCLPOAG@IsPlayerNoSettleRequestEverAsked@ ; `string'
PUBLIC	?lIsPlayerNoSettleRequestEverAsked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerNoSettleRequestEverAsked
PUBLIC	??_C@_0BD@JHLIJIIK@GetWarmongerThreat?$AA@	; `string'
PUBLIC	?lGetWarmongerThreat@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWarmongerThreat
PUBLIC	??_C@_0BI@GGMBMANL@GetMinorCivDisputeLevel?$AA@	; `string'
PUBLIC	?lGetMinorCivDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivDisputeLevel
PUBLIC	??_C@_0BG@MFADFIMK@GetWonderDisputeLevel?$AA@	; `string'
PUBLIC	?lGetWonderDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWonderDisputeLevel
PUBLIC	??_C@_0BH@JMIFEEOF@GetVictoryDisputeLevel?$AA@	; `string'
PUBLIC	?lGetVictoryDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetVictoryDisputeLevel
PUBLIC	??_C@_0BE@CELFPMFO@GetLandDisputeLevel?$AA@	; `string'
PUBLIC	?lGetLandDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLandDisputeLevel
PUBLIC	??_C@_0BB@MIPPFJMJ@GetNumWarsFought?$AA@	; `string'
PUBLIC	?lGetNumWarsFought@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumWarsFought
PUBLIC	??_C@_0BI@ONIAOIGJ@GetCoopWarAcceptedState?$AA@	; `string'
PUBLIC	?lGetCoopWarAcceptedState@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCoopWarAcceptedState
PUBLIC	??_C@_0BO@EBKDJHNI@GetWeDeclaredWarOnFriendCount?$AA@ ; `string'
PUBLIC	?lGetWeDeclaredWarOnFriendCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWeDeclaredWarOnFriendCount
PUBLIC	??_C@_0BI@MGHNFKKL@IsFriendDeclaredWarOnUs?$AA@	; `string'
PUBLIC	?lIsFriendDeclaredWarOnUs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsFriendDeclaredWarOnUs
PUBLIC	??_C@_0BK@IDKHACJI@GetWeDenouncedFriendCount?$AA@ ; `string'
PUBLIC	?lGetWeDenouncedFriendCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWeDenouncedFriendCount
PUBLIC	??_C@_0BE@JKLIMJPC@IsFriendDenouncedUs?$AA@	; `string'
PUBLIC	?lIsFriendDenouncedUs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsFriendDenouncedUs
PUBLIC	??_C@_0BJ@JPDNMDCJ@GetNumFriendsDenouncedBy?$AA@ ; `string'
PUBLIC	?lGetNumFriendsDenouncedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFriendsDenouncedBy
PUBLIC	??_C@_0BG@HIMKCHLJ@IsUntrustworthyFriend?$AA@	; `string'
PUBLIC	?lIsUntrustworthyFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsUntrustworthyFriend
PUBLIC	??_C@_0BH@DPEOLAFH@IsPlayerDenouncedEnemy?$AA@	; `string'
PUBLIC	?lIsPlayerDenouncedEnemy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerDenouncedEnemy
PUBLIC	??_C@_0BI@KIHAIMCC@IsPlayerDenouncedFriend?$AA@	; `string'
PUBLIC	?lIsPlayerDenouncedFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerDenouncedFriend
PUBLIC	??_C@_0BI@CEGOAGDE@IsPlayerDoFwithAnyEnemy?$AA@	; `string'
PUBLIC	?lIsPlayerDoFwithAnyEnemy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerDoFwithAnyEnemy
PUBLIC	??_C@_0BJ@HMNAJMHG@IsPlayerDoFwithAnyFriend?$AA@ ; `string'
PUBLIC	?lIsPlayerDoFwithAnyFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerDoFwithAnyFriend
PUBLIC	??_C@_0O@MFBMMOPK@GetDoFCounter?$AA@		; `string'
PUBLIC	?lGetDoFCounter@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDoFCounter
PUBLIC	??_C@_05CJMGDEBD@IsDoF?$AA@			; `string'
PUBLIC	?lIsDoF@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsDoF
PUBLIC	??_C@_0BE@LAJMIPAI@IsDoFMessageTooSoon?$AA@	; `string'
PUBLIC	?lIsDoFMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsDoFMessageTooSoon
PUBLIC	??_C@_0BF@FNMHBNF@IsAskedToStopDigging?$AA@	; `string'
PUBLIC	?lIsAskedToStopDigging@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAskedToStopDigging
PUBLIC	??_C@_0BI@LALLCFLJ@IsAskedToStopConverting?$AA@	; `string'
PUBLIC	?lIsAskedToStopConverting@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAskedToStopConverting
PUBLIC	??_C@_0BL@BBLJBNNC@IsStopSpyingMessageTooSoon?$AA@ ; `string'
PUBLIC	?lIsStopSpyingMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsStopSpyingMessageTooSoon
PUBLIC	??_C@_0BL@MHKHJIDJ@IsDontSettleMessageTooSoon?$AA@ ; `string'
PUBLIC	?lIsDontSettleMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsDontSettleMessageTooSoon
PUBLIC	??_C@_0BC@HEIJGBFF@IsProtectingMinor?$AA@	; `string'
PUBLIC	?lIsProtectingMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProtectingMinor
PUBLIC	??_C@_0BM@LHDCKAOD@IsWillAcceptPeaceWithPlayer?$AA@ ; `string'
PUBLIC	?lIsWillAcceptPeaceWithPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsWillAcceptPeaceWithPlayer
PUBLIC	??_C@_0BK@GFGFENAL@GetApproachTowardsUsGuess?$AA@ ; `string'
PUBLIC	?lGetApproachTowardsUsGuess@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetApproachTowardsUsGuess
PUBLIC	??_C@_0BE@GJBEAAFB@GetMajorCivApproach?$AA@	; `string'
PUBLIC	?lGetMajorCivApproach@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMajorCivApproach
PUBLIC	??_C@_0BE@FFBOAELH@DoTradeScreenClosed?$AA@	; `string'
PUBLIC	?lDoTradeScreenClosed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoTradeScreenClosed
PUBLIC	??_C@_0BE@OGJDLMA@DoTradeScreenOpened?$AA@	; `string'
PUBLIC	?lDoTradeScreenOpened@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoTradeScreenOpened
PUBLIC	??_C@_0BG@ONJJPLPE@DoBeginDiploWithHuman?$AA@	; `string'
PUBLIC	?lDoBeginDiploWithHuman@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoBeginDiploWithHuman
PUBLIC	??_C@_0O@IGAPHJLG@GetPlotDanger?$AA@		; `string'
PUBLIC	?lGetPlotDanger@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlotDanger
PUBLIC	??_C@_0P@CLDNCOML@GetBuyPlotCost?$AA@		; `string'
PUBLIC	?lGetBuyPlotCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuyPlotCost
PUBLIC	??_C@_0BF@KIAMDGLE@ChangeNumPlotsBought?$AA@	; `string'
PUBLIC	?lChangeNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumPlotsBought
PUBLIC	??_C@_0BC@BDGANLKA@SetNumPlotsBought?$AA@	; `string'
PUBLIC	?lSetNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumPlotsBought
PUBLIC	??_C@_0BC@DGGLFALO@GetNumPlotsBought?$AA@	; `string'
PUBLIC	?lGetNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPlotsBought
PUBLIC	??_C@_0M@GCJCINGE@GetNumPlots?$AA@		; `string'
PUBLIC	?lGetNumPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetNumPlots
PUBLIC	??_C@_0O@PGOPIEFE@SetScriptData?$AA@		; `string'
PUBLIC	?lSetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetScriptData
PUBLIC	??_C@_0O@IJPBDHCD@GetScriptData?$AA@		; `string'
PUBLIC	?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScriptData
PUBLIC	??_C@_0BD@CGMPIPHN@SetReplayDataValue?$AA@	; `string'
PUBLIC	?lSetReplayDataValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetReplayDataValue
PUBLIC	??_C@_0O@FOEADKOC@GetReplayData?$AA@		; `string'
PUBLIC	?lGetReplayData@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetReplayData
PUBLIC	??_C@_0BA@IAAIKKNG@GetPowerHistory?$AA@		; `string'
PUBLIC	?lGetPowerHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPowerHistory
PUBLIC	??_C@_0BG@BFBBELOF@GetAgricultureHistory?$AA@	; `string'
PUBLIC	?lGetAgricultureHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAgricultureHistory
PUBLIC	??_C@_0BD@EEECFJGL@GetIndustryHistory?$AA@	; `string'
PUBLIC	?lGetIndustryHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetIndustryHistory
PUBLIC	??_C@_0BC@LKDBDJLJ@GetEconomyHistory?$AA@	; `string'
PUBLIC	?lGetEconomyHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEconomyHistory
PUBLIC	??_C@_0BA@CBCOBLDO@GetScoreHistory?$AA@		; `string'
PUBLIC	?lGetScoreHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreHistory
PUBLIC	??_C@_0O@FLOBFJBH@AI_foundValue?$AA@		; `string'
PUBLIC	?lAI_foundValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAI_foundValue
PUBLIC	??_C@_0BF@LPEPOKPK@AI_updateFoundValues?$AA@	; `string'
PUBLIC	?lAI_updateFoundValues@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAI_updateFoundValues
PUBLIC	??_C@_0M@LCJDFAFH@GetUnitByID?$AA@		; `string'
PUBLIC	?lGetUnitByID@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetUnitByID
PUBLIC	??_C@_0M@GNPEBAGL@GetNumUnits?$AA@		; `string'
PUBLIC	?lGetNumUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetNumUnits
PUBLIC	??_C@_05CFLIFMAE@Units?$AA@			; `string'
PUBLIC	?lUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lUnits
PUBLIC	??_C@_0M@NNBLIMGF@GetCityByID?$AA@		; `string'
PUBLIC	?lGetCityByID@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetCityByID
PUBLIC	??_C@_0N@OFLMPMAK@GetNumCities?$AA@		; `string'
PUBLIC	?lGetNumCities@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetNumCities
PUBLIC	??_C@_06DIPJMMIP@Cities?$AA@			; `string'
PUBLIC	?lCities@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCities
PUBLIC	??_C@_0M@DOJNOFML@GetCityName?$AA@		; `string'
PUBLIC	?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetCityName
PUBLIC	??_C@_0BA@OEJOHFNM@GetNumCityNames?$AA@		; `string'
PUBLIC	?lGetNumCityNames@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumCityNames
PUBLIC	??_C@_0M@DHIABOAD@AddCityName?$AA@		; `string'
PUBLIC	?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lAddCityName
PUBLIC	??_C@_0BH@EEPCMHMD@GetLengthResearchQueue?$AA@	; `string'
PUBLIC	?lGetLengthResearchQueue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLengthResearchQueue
PUBLIC	??_C@_0M@EOPDLFLG@PopResearch?$AA@		; `string'
PUBLIC	?lPopResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lPopResearch
PUBLIC	??_C@_0N@CDNPDJNC@PushResearch?$AA@		; `string'
PUBLIC	?lPushResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lPushResearch
PUBLIC	??_C@_0BD@JPCIIJKD@ClearResearchQueue?$AA@	; `string'
PUBLIC	?lClearResearchQueue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lClearResearchQueue
PUBLIC	??_C@_0BB@OKACGELF@GetQueuePosition?$AA@	; `string'
PUBLIC	?lGetQueuePosition@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetQueuePosition
PUBLIC	??_C@_0P@HAIAJPIL@FindPathLength?$AA@		; `string'
PUBLIC	?lFindPathLength@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lFindPathLength
PUBLIC	??_C@_0BI@GMNKFHNO@GetSpecialistExtraYield?$AA@	; `string'
PUBLIC	?lGetSpecialistExtraYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSpecialistExtraYield
PUBLIC	??_C@_0BJ@DPLFOOGM@SetNavalCombatExperience?$AA@ ; `string'
PUBLIC	?lSetNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNavalCombatExperience
PUBLIC	??_C@_0BM@JAEPANDK@ChangeNavalCombatExperience?$AA@ ; `string'
PUBLIC	?lChangeNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNavalCombatExperience
PUBLIC	??_C@_0BJ@JMBPIDPJ@GetNavalCombatExperience?$AA@ ; `string'
PUBLIC	?lGetNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNavalCombatExperience
PUBLIC	??_C@_0BM@ECGBFEGH@GetLifetimeCombatExperience?$AA@ ; `string'
PUBLIC	?lGetLifetimeCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLifetimeCombatExperience
PUBLIC	??_C@_0BE@CFLDHHHI@SetCombatExperience?$AA@	; `string'
PUBLIC	?lSetCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetCombatExperience
PUBLIC	??_C@_0BH@NFKGIFIE@ChangeCombatExperience?$AA@	; `string'
PUBLIC	?lChangeCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeCombatExperience
PUBLIC	??_C@_0BE@ILJIDHAE@GetCombatExperience?$AA@	; `string'
PUBLIC	?lGetCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCombatExperience
PUBLIC	??_C@_0BD@JICENABA@SetResearchingTech?$AA@	; `string'
PUBLIC	?lSetResearchingTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetResearchingTech
PUBLIC	??_C@_0BC@LJAGDKMI@IsResearchingTech?$AA@	; `string'
PUBLIC	?lIsResearchingTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsResearchingTech
PUBLIC	??_C@_0BB@DIBNJMML@GetHurryGoldCost?$AA@	; `string'
PUBLIC	?lGetHurryGoldCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHurryGoldCost
PUBLIC	??_C@_0L@LOFDAOJF@IsCanHurry?$AA@		; `string'
PUBLIC	?lIsCanHurry@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsCanHurry
PUBLIC	??_C@_0BD@HNIJFNOA@IsHasAccessToHurry?$AA@	; `string'
PUBLIC	?lIsHasAccessToHurry@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsHasAccessToHurry
PUBLIC	??_C@_0O@MMMOMENH@GetHurryCount?$AA@		; `string'
PUBLIC	?lGetHurryCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHurryCount
PUBLIC	??_C@_0CA@NDNHGCMM@GetBuildingClassCountPlusMaking?$AA@ ; `string'
PUBLIC	?lGetBuildingClassCountPlusMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingClassCountPlusMaking
PUBLIC	??_C@_0BH@IOFHKIED@GetBuildingClassMaking?$AA@	; `string'
PUBLIC	?lGetBuildingClassMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingClassMaking
PUBLIC	??_C@_0BI@BIOFBBJB@IsBuildingClassMaxedOut?$AA@	; `string'
PUBLIC	?lIsBuildingClassMaxedOut@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsBuildingClassMaxedOut
PUBLIC	??_C@_0BG@LKAPFNIF@GetBuildingClassCount?$AA@	; `string'
PUBLIC	?lGetBuildingClassCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingClassCount
PUBLIC	??_C@_0BM@JKNGMGFK@GetUnitClassCountPlusMaking?$AA@ ; `string'
PUBLIC	?lGetUnitClassCountPlusMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitClassCountPlusMaking
PUBLIC	??_C@_0BD@JNGNHFGM@GetUnitClassMaking?$AA@	; `string'
PUBLIC	?lGetUnitClassMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitClassMaking
PUBLIC	??_C@_0BE@KOKPIAGA@IsUnitClassMaxedOut?$AA@	; `string'
PUBLIC	?lIsUnitClassMaxedOut@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsUnitClassMaxedOut
PUBLIC	??_C@_0BC@OMEKCEJN@GetUnitClassCount?$AA@	; `string'
PUBLIC	?lGetUnitClassCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitClassCount
PUBLIC	??_C@_0P@MDJBKIGG@IsBuildingFree?$AA@		; `string'
PUBLIC	?lIsBuildingFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsBuildingFree
PUBLIC	??_C@_0BE@FJHPDLDL@GetImprovementCount?$AA@	; `string'
PUBLIC	?lGetImprovementCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetImprovementCount
PUBLIC	??_C@_0BG@BLEODKND@GetResourceFromMinors?$AA@	; `string'
PUBLIC	?lGetResourceFromMinors@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResourceFromMinors
PUBLIC	??_C@_0BC@FPKGMKKM@GetResourceImport?$AA@	; `string'
PUBLIC	?lGetResourceImport@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResourceImport
PUBLIC	??_C@_0BC@MLBNDDPA@GetResourceExport?$AA@	; `string'
PUBLIC	?lGetResourceExport@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResourceExport
PUBLIC	??_C@_0BI@CAJMJPHL@GetNumResourceAvailable?$AA@	; `string'
PUBLIC	?lGetNumResourceAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumResourceAvailable
PUBLIC	??_C@_0BH@OOAGOCF@ChangeNumResourceTotal?$AA@	; `string'
PUBLIC	?lChangeNumResourceTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumResourceTotal
PUBLIC	??_C@_0BE@FANONMKF@GetNumResourceTotal?$AA@	; `string'
PUBLIC	?lGetNumResourceTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumResourceTotal
PUBLIC	??_C@_0BD@NIJFEIJG@GetNumResourceUsed?$AA@	; `string'
PUBLIC	?lGetNumResourceUsed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumResourceUsed
PUBLIC	??_C@_0M@IJCOINPN@SetPlayable?$AA@		; `string'
PUBLIC	?lSetPlayable@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lSetPlayable
PUBLIC	??_C@_0L@LMMDHEOL@IsPlayable?$AA@		; `string'
PUBLIC	?lIsPlayable@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsPlayable
PUBLIC	??_C@_09DLFAMNKA@SetOption?$AA@			; `string'
PUBLIC	?lSetOption@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lSetOption
PUBLIC	??_C@_08CPAPEJN@IsOption?$AA@			; `string'
PUBLIC	?lIsOption@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsOption
PUBLIC	??_C@_0BJ@LPIABFHI@GetIncomingUnitCountdown?$AA@ ; `string'
PUBLIC	?lGetIncomingUnitCountdown@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetIncomingUnitCountdown
PUBLIC	??_C@_0BE@DGDCHHAP@GetIncomingUnitType?$AA@	; `string'
PUBLIC	?lGetIncomingUnitType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetIncomingUnitType
PUBLIC	??_C@_0BK@INFADDEM@DoUpdateProximityToPlayer?$AA@ ; `string'
PUBLIC	?lDoUpdateProximityToPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoUpdateProximityToPlayer
PUBLIC	??_C@_0BF@ONODMHAN@GetProximityToPlayer?$AA@	; `string'
PUBLIC	?lGetProximityToPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetProximityToPlayer
PUBLIC	??_C@_0CE@MDGAFNCA@GetScienceFromBudgetDeficitTimes@ ; `string'
PUBLIC	?lGetScienceFromBudgetDeficitTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromBudgetDeficitTimes100
PUBLIC	??_C@_0CJ@KCEGADFP@GetScienceFromResearchAgreements@ ; `string'
PUBLIC	?lGetScienceFromResearchAgreementsTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromResearchAgreementsTimes100
PUBLIC	??_C@_0CH@GKJHBADA@GetMinorFriendshipGainBullyGoldS@ ; `string'
PUBLIC	?lGetMinorFriendshipGainBullyGoldSuccess@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorFriendshipGainBullyGoldSuccess
PUBLIC	??_C@_0BL@PMENDKHK@GetScienceFromGoldTimes100?$AA@ ; `string'
PUBLIC	?lGetScienceFromGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromGoldTimes100
PUBLIC	??_C@_0CA@LOIBLNOM@GetScienceFromHappinessTimes100?$AA@ ; `string'
PUBLIC	?lGetScienceFromHappinessTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromHappinessTimes100
PUBLIC	??_C@_0CD@FKFPBOPI@GetScienceFromOtherPlayersTimes1@ ; `string'
PUBLIC	?lGetScienceFromOtherPlayersTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromOtherPlayersTimes100
PUBLIC	??_C@_0BN@OBKADDNJ@GetScienceFromCitiesTimes100?$AA@ ; `string'
PUBLIC	?lGetScienceFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromCitiesTimes100
PUBLIC	??_C@_0BD@NFNIBFFF@GetScienceTimes100?$AA@	; `string'
PUBLIC	?lGetScienceTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceTimes100
PUBLIC	??_C@_0L@GHLGHBML@GetScience?$AA@		; `string'
PUBLIC	?lGetScience@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetScience
PUBLIC	??_C@_0BH@CEIHEJPD@GetExtraYieldThreshold?$AA@	; `string'
PUBLIC	?lGetExtraYieldThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExtraYieldThreshold
PUBLIC	??_C@_0BM@HDDIOHJE@GetCapitalYieldRateModifier?$AA@ ; `string'
PUBLIC	?lGetCapitalYieldRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCapitalYieldRateModifier
PUBLIC	??_C@_0BF@MPEACCAJ@GetYieldRateModifier?$AA@	; `string'
PUBLIC	?lGetYieldRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetYieldRateModifier
PUBLIC	??_C@_0BA@DGPKBBEO@GetSeaPlotYield?$AA@		; `string'
PUBLIC	?lGetSeaPlotYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSeaPlotYield
PUBLIC	??_C@_0BA@OFENOHDO@GetPlayerColors?$AA@		; `string'
PUBLIC	?lGetPlayerColors@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlayerColors
PUBLIC	??_C@_0P@FBFFBDEL@GetPlayerColor?$AA@		; `string'
PUBLIC	?lGetPlayerColor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlayerColor
PUBLIC	??_C@_07KIJFBNDA@GetTeam?$AA@			; `string'
PUBLIC	?lGetTeam@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetTeam
PUBLIC	??_C@_0O@DBDBEBPD@GetCurrentEra?$AA@		; `string'
PUBLIC	?lGetCurrentEra@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentEra
PUBLIC	??_C@_0BD@MJNOECAJ@SetPersonalityType?$AA@	; `string'
PUBLIC	?lSetPersonalityType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetPersonalityType
PUBLIC	??_C@_0BD@DDPEHEOB@GetPersonalityType?$AA@	; `string'
PUBLIC	?lGetPersonalityType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPersonalityType
PUBLIC	??_C@_0O@MCDOMJFC@GetLeaderType?$AA@		; `string'
PUBLIC	?lGetLeaderType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLeaderType
PUBLIC	??_C@_0BE@OGLFKPOE@GetCivilizationType?$AA@	; `string'
PUBLIC	?lGetCivilizationType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationType
PUBLIC	??_C@_0BA@NDPGKNBO@GetHandicapType?$AA@		; `string'
PUBLIC	?lGetHandicapType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHandicapType
PUBLIC	??_C@_05CLBJHDA@GetID?$AA@			; `string'
PUBLIC	?lGetID@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetID
PUBLIC	??_C@_08FCKCMEIG@IsStrike?$AA@			; `string'
PUBLIC	?lIsStrike@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsStrike
PUBLIC	??_C@_0BL@HDPFLDOD@HasReceivedNetTurnComplete?$AA@ ; `string'
PUBLIC	?lHasReceivedNetTurnComplete@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasReceivedNetTurnComplete
PUBLIC	??_C@_0CE@HBJKGGIN@GetEndTurnBlockingNotificationIn@ ; `string'
PUBLIC	?lGetEndTurnBlockingNotificationIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEndTurnBlockingNotificationIndex
PUBLIC	??_C@_0BH@PEFMIAEP@GetEndTurnBlockingType?$AA@	; `string'
PUBLIC	?lGetEndTurnBlockingType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEndTurnBlockingType
PUBLIC	??_C@_0BD@PKANFN@IsFoundedFirstCity?$AA@	; `string'
PUBLIC	?lIsFoundedFirstCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsFoundedFirstCity
PUBLIC	??_C@_0P@ECFNDELE@IsExtendedGame?$AA@		; `string'
PUBLIC	?lIsExtendedGame@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsExtendedGame
PUBLIC	??_C@_0M@MAOIOJGJ@IsEverAlive?$AA@		; `string'
PUBLIC	?lIsEverAlive@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsEverAlive
PUBLIC	??_C@_07OHJBEDOK@IsAlive?$AA@			; `string'
PUBLIC	?lIsAlive@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsAlive
PUBLIC	??_C@_0BK@HNINKCDB@GetFriendshipFromUnitGift?$AA@ ; `string'
PUBLIC	?lGetFriendshipFromUnitGift@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFriendshipFromUnitGift
PUBLIC	??_C@_0BH@OGOPFFHJ@AddMinorCivQuestIfAble?$AA@	; `string'
PUBLIC	?lAddMinorCivQuestIfAble@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAddMinorCivQuestIfAble
PUBLIC	??_C@_0BL@HBAOBIEN@GetGiftTileImprovementCost?$AA@ ; `string'
PUBLIC	?lGetGiftTileImprovementCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGiftTileImprovementCost
PUBLIC	??_C@_0CC@BOODLOOC@CanMajorGiftTileImprovementAtPlo@ ; `string'
PUBLIC	?lCanMajorGiftTileImprovementAtPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorGiftTileImprovementAtPlot
PUBLIC	??_C@_0BM@MPFJMPJM@CanMajorGiftTileImprovement?$AA@ ; `string'
PUBLIC	?lCanMajorGiftTileImprovement@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorGiftTileImprovement
PUBLIC	??_C@_0O@LKDODOMI@GetBuyoutCost?$AA@		; `string'
PUBLIC	?lGetBuyoutCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuyoutCost
PUBLIC	??_C@_0P@IEAEGNOK@CanMajorBuyout?$AA@		; `string'
PUBLIC	?lCanMajorBuyout@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorBuyout
PUBLIC	??_C@_0BJ@NIOFMNNO@GetMajorBullyUnitDetails?$AA@ ; `string'
PUBLIC	?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMajorBullyUnitDetails
PUBLIC	??_C@_0BC@CKDHKLHB@CanMajorBullyUnit?$AA@	; `string'
PUBLIC	?lCanMajorBullyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorBullyUnit
PUBLIC	??_C@_0BJ@LDKBOIEI@GetMajorBullyGoldDetails?$AA@ ; `string'
PUBLIC	?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMajorBullyGoldDetails
PUBLIC	??_C@_0BC@MEKCNIEM@CanMajorBullyGold?$AA@	; `string'
PUBLIC	?lCanMajorBullyGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorBullyGold
PUBLIC	??_C@_0BL@JEOPCMFE@GetMinorCivBullyGoldAmount?$AA@ ; `string'
PUBLIC	?lGetMinorCivBullyGoldAmount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivBullyGoldAmount
PUBLIC	??_C@_0BP@INDFDHEG@GetTurnLastPledgeBrokenByMajor?$AA@ ; `string'
PUBLIC	?lGetTurnLastPledgeBrokenByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnLastPledgeBrokenByMajor
PUBLIC	??_C@_0CE@GOKJOBNC@GetTurnLastPledgedProtectionByMa@ ; `string'
PUBLIC	?lGetTurnLastPledgedProtectionByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnLastPledgedProtectionByMajor
PUBLIC	??_C@_0BL@PJCMBOGB@CanMajorWithdrawProtection?$AA@ ; `string'
PUBLIC	?lCanMajorWithdrawProtection@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorWithdrawProtection
PUBLIC	??_C@_0BI@JDBHECFP@CanMajorStartProtection?$AA@	; `string'
PUBLIC	?lCanMajorStartProtection@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorStartProtection
PUBLIC	??_C@_0BA@HLPOBOFO@CanMajorProtect?$AA@		; `string'
PUBLIC	?lCanMajorProtect@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorProtect
PUBLIC	??_C@_0BD@FJJJKAON@IsProtectedByMajor?$AA@	; `string'
PUBLIC	?lIsProtectedByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProtectedByMajor
PUBLIC	??_C@_0BJ@OEBIPDFB@DoMinorLiberationByMajor?$AA@ ; `string'
PUBLIC	?lDoMinorLiberationByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoMinorLiberationByMajor
PUBLIC	??_C@_0BD@DDAJKJAC@GetNumMinorCivsMet?$AA@	; `string'
PUBLIC	?lGetNumMinorCivsMet@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumMinorCivsMet
PUBLIC	??_C@_0BE@OJEGEBAH@IsMinorPermanentWar?$AA@	; `string'
PUBLIC	?lIsMinorPermanentWar@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorPermanentWar
PUBLIC	??_C@_0BK@NBPHMKCC@IsInfluenceTooLowForPeace?$AA@ ; `string'
PUBLIC	?lIsInfluenceTooLowForPeace@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsInfluenceTooLowForPeace
PUBLIC	??_C@_0P@KFJKJMOE@IsPeaceBlocked?$AA@		; `string'
PUBLIC	?lIsPeaceBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPeaceBlocked
PUBLIC	??_C@_0CJ@ODBIOBOL@GetCurrentScienceFriendshipBonus@ ; `string'
PUBLIC	?lGetCurrentScienceFriendshipBonusTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentScienceFriendshipBonusTimes100
PUBLIC	??_C@_0BI@LLLGGKJM@GetCurrentSpawnEstimate?$AA@	; `string'
PUBLIC	?lGetCurrentSpawnEstimate@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentSpawnEstimate
PUBLIC	??_C@_0BN@ILJMHMPP@GetCurrentOtherCityFoodBonus?$AA@ ; `string'
PUBLIC	?lGetCurrentOtherCityFoodBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentOtherCityFoodBonus
PUBLIC	??_C@_0BL@PEJFCAAO@GetCurrentCapitalFoodBonus?$AA@ ; `string'
PUBLIC	?lGetCurrentCapitalFoodBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentCapitalFoodBonus
PUBLIC	??_C@_0BN@DJDMDNOO@GetMinorCivCurrentFaithBonus?$AA@ ; `string'
PUBLIC	?lGetMinorCivCurrentFaithBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentFaithBonus
PUBLIC	??_C@_0CB@DHDIKNON@GetMinorCivCurrentHappinessBonus@ ; `string'
PUBLIC	?lGetMinorCivCurrentHappinessBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentHappinessBonus
PUBLIC	??_C@_0CK@BFJFGONF@GetMinorCivCurrentHappinessPerLu@ ; `string'
PUBLIC	?lGetMinorCivCurrentHappinessPerLuxuryBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentHappinessPerLuxuryBonus
PUBLIC	??_C@_0CF@EMDDPPKP@GetMinorCivCurrentHappinessFlatB@ ; `string'
PUBLIC	?lGetMinorCivCurrentHappinessFlatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentHappinessFlatBonus
PUBLIC	??_C@_0CE@CMFODDAA@GetMinorCivHappinessFriendshipBo@ ; `string'
PUBLIC	?lGetMinorCivHappinessFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivHappinessFriendshipBonus
PUBLIC	??_C@_0BP@CJKEIOCK@GetMinorCivCurrentCultureBonus?$AA@ ; `string'
PUBLIC	?lGetMinorCivCurrentCultureBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentCultureBonus
PUBLIC	??_C@_0BH@DCNJCBAF@GetCurrentCultureBonus?$AA@	; `string'
PUBLIC	?lGetCurrentCultureBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentCultureBonus
PUBLIC	??_C@_0CK@DJDLKNM@GetMinorCivCurrentCulturePerBuil@ ; `string'
PUBLIC	?lGetMinorCivCurrentCulturePerBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentCulturePerBuildingBonus
PUBLIC	??_C@_0CD@LKFJCJNM@GetMinorCivCurrentCultureFlatBon@ ; `string'
PUBLIC	?lGetMinorCivCurrentCultureFlatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentCultureFlatBonus
PUBLIC	??_C@_0CC@CGHKAAGO@GetMinorCivCultureFriendshipBonu@ ; `string'
PUBLIC	?lGetMinorCivCultureFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCultureFriendshipBonus
PUBLIC	??_C@_0CC@IMMIMLHK@GetMinorCivScienceFriendshipBonu@ ; `string'
PUBLIC	?lGetMinorCivScienceFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivScienceFriendshipBonus
PUBLIC	??_C@_0BJ@CENDBAFG@GetMinorCivFavoriteMajor?$AA@ ; `string'
PUBLIC	?lGetMinorCivFavoriteMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivFavoriteMajor
PUBLIC	??_C@_0CA@DKEFHJFC@GetFriendshipNeededForNextLevel?$AA@ ; `string'
PUBLIC	?lGetFriendshipNeededForNextLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFriendshipNeededForNextLevel
PUBLIC	??_C@_0BG@MCNIAIDC@IsSameReligionAsMajor?$AA@	; `string'
PUBLIC	?lIsSameReligionAsMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsSameReligionAsMajor
PUBLIC	??_C@_0BL@MGBKIFJO@GetFriendshipFromFaithGift?$AA@ ; `string'
PUBLIC	?lGetFriendshipFromFaithGift@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFriendshipFromFaithGift
PUBLIC	??_C@_0BK@GCPPOFGE@GetFriendshipFromGoldGift?$AA@ ; `string'
PUBLIC	?lGetFriendshipFromGoldGift@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFriendshipFromGoldGift
PUBLIC	??_C@_0CE@DNCLIGFM@GetTurnsSinceThreatenedAnnouncem@ ; `string'
PUBLIC	?lGetTurnsSinceThreatenedAnnouncement@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnsSinceThreatenedAnnouncement
PUBLIC	??_C@_0CE@OFAPDPJO@GetTurnsSinceThreatenedByBarbari@ ; `string'
PUBLIC	?lGetTurnsSinceThreatenedByBarbarians@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnsSinceThreatenedByBarbarians
PUBLIC	??_C@_0CM@DCJJEBFI@IsThreateningBarbariansEventActi@ ; `string'
PUBLIC	?lIsThreateningBarbariansEventActiveForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsThreateningBarbariansEventActiveForPlayer
PUBLIC	??_C@_0BJ@LHGLLPKP@IsProxyWarActiveForMajor?$AA@ ; `string'
PUBLIC	?lIsProxyWarActiveForMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProxyWarActiveForMajor
PUBLIC	??_C@_0CI@JOPJIGPD@GetMinorWarQuestWithMajorRemaini@ ; `string'
PUBLIC	?lGetMinorWarQuestWithMajorRemainingCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorWarQuestWithMajorRemainingCount
PUBLIC	??_C@_0BP@DLEJMNIA@IsMinorWarQuestWithMajorActive?$AA@ ; `string'
PUBLIC	?lIsMinorWarQuestWithMajorActive@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorWarQuestWithMajorActive
PUBLIC	??_C@_0CE@BALAKNNH@IsMinorCivRouteEstablishedWithMa@ ; `string'
PUBLIC	?lIsMinorCivRouteEstablishedWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivRouteEstablishedWithMajor
PUBLIC	??_C@_0BP@LGBJCMOD@IsMinorCivUnitSpawningDisabled?$AA@ ; `string'
PUBLIC	?lIsMinorCivUnitSpawningDisabled@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivUnitSpawningDisabled
PUBLIC	??_C@_0CB@LCACKAGB@GetMinorCivContestValueForPlayer@ ; `string'
PUBLIC	?lGetMinorCivContestValueForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivContestValueForPlayer
PUBLIC	??_C@_0CB@JHAAIIFB@GetMinorCivContestValueForLeader@ ; `string'
PUBLIC	?lGetMinorCivContestValueForLeader@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivContestValueForLeader
PUBLIC	??_C@_0BI@HBEMJGEC@IsMinorCivContestLeader?$AA@	; `string'
PUBLIC	?lIsMinorCivContestLeader@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivContestLeader
PUBLIC	??_C@_0BH@PICPPHDC@GetQuestTurnsRemaining?$AA@	; `string'
PUBLIC	?lGetQuestTurnsRemaining@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetQuestTurnsRemaining
PUBLIC	??_C@_0O@MLFPDGHN@GetQuestData2?$AA@		; `string'
PUBLIC	?lGetQuestData2@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetQuestData2
PUBLIC	??_C@_0O@OAHCGFLO@GetQuestData1?$AA@		; `string'
PUBLIC	?lGetQuestData1@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetQuestData1
PUBLIC	??_C@_0CH@IINPAFPL@GetMinorCivNumDisplayedQuestsFor@ ; `string'
PUBLIC	?lGetMinorCivNumDisplayedQuestsForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivNumDisplayedQuestsForPlayer
PUBLIC	??_C@_0CC@KOLLDJBJ@IsMinorCivDisplayedQuestForPlaye@ ; `string'
PUBLIC	?lIsMinorCivDisplayedQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivDisplayedQuestForPlayer
PUBLIC	??_C@_0CE@KOGHDCCE@GetMinorCivNumActiveQuestsForPla@ ; `string'
PUBLIC	?lGetMinorCivNumActiveQuestsForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivNumActiveQuestsForPlayer
PUBLIC	??_C@_0BP@HJOPHLLE@IsMinorCivActiveQuestForPlayer?$AA@ ; `string'
PUBLIC	?lIsMinorCivActiveQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivActiveQuestForPlayer
PUBLIC	??_C@_0BI@JBNIDLPL@GetActiveQuestForPlayer?$AA@	; `string'
PUBLIC	?lGetActiveQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetActiveQuestForPlayer
PUBLIC	??_C@_0CE@DCIALBHJ@GetMinorCivFriendshipLevelWithMa@ ; `string'
PUBLIC	?lGetMinorCivFriendshipLevelWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivFriendshipLevelWithMajor
PUBLIC	??_C@_0CF@HPIOGEFP@GetMinorCivFriendshipAnchorWithM@ ; `string'
PUBLIC	?lGetMinorCivFriendshipAnchorWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivFriendshipAnchorWithMajor
PUBLIC	??_C@_0CC@NGMCJIKI@ChangeMinorCivFriendshipWithMajo@ ; `string'
PUBLIC	?lChangeMinorCivFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeMinorCivFriendshipWithMajor
PUBLIC	??_C@_0CD@IFPAMFCO@GetMinorCivBaseFriendshipWithMaj@ ; `string'
PUBLIC	?lGetMinorCivBaseFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivBaseFriendshipWithMajor
PUBLIC	??_C@_0BP@INHPAMIH@GetMinorCivFriendshipWithMajor?$AA@ ; `string'
PUBLIC	?lGetMinorCivFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivFriendshipWithMajor
PUBLIC	??_C@_0CD@IKFMLNBF@GetFriendshipChangePerTurnTimes1@ ; `string'
PUBLIC	?lGetFriendshipChangePerTurnTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFriendshipChangePerTurnTimes100
PUBLIC	??_C@_0CE@BFKJKFHN@IsPlayerHasOpenBordersAutomatica@ ; `string'
PUBLIC	?lIsPlayerHasOpenBordersAutomatically@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerHasOpenBordersAutomatically
PUBLIC	??_C@_0BH@LPBLCHNA@IsPlayerHasOpenBorders?$AA@	; `string'
PUBLIC	?lIsPlayerHasOpenBorders@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerHasOpenBorders
PUBLIC	??_C@_08IELAHIKJ@IsAllies?$AA@			; `string'
PUBLIC	?lIsAllies@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsAllies
PUBLIC	??_C@_09MNONCBMN@IsFriends?$AA@			; `string'
PUBLIC	?lIsFriends@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsFriends
PUBLIC	??_C@_0P@HEEBEDH@GetAlliedTurns?$AA@		; `string'
PUBLIC	?lGetAlliedTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAlliedTurns
PUBLIC	??_C@_07FLOLAOEO@GetAlly?$AA@			; `string'
PUBLIC	?lGetAlly@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetAlly
PUBLIC	??_C@_0BG@MEGLHPGJ@SetMinorCivUniqueUnit?$AA@	; `string'
PUBLIC	?lSetMinorCivUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetMinorCivUniqueUnit
PUBLIC	??_C@_0BG@DBDNKGCI@GetMinorCivUniqueUnit?$AA@	; `string'
PUBLIC	?lGetMinorCivUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivUniqueUnit
PUBLIC	??_C@_0BI@MBHOGACH@IsMinorCivHasUniqueUnit?$AA@	; `string'
PUBLIC	?lIsMinorCivHasUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivHasUniqueUnit
PUBLIC	??_C@_0P@ILIMMMEM@GetPersonality?$AA@		; `string'
PUBLIC	?lGetPersonality@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPersonality
PUBLIC	??_C@_0BB@DHOLGDME@GetMinorCivTrait?$AA@	; `string'
PUBLIC	?lGetMinorCivTrait@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivTrait
PUBLIC	??_C@_0BA@CGAIAIE@GetMinorCivType?$AA@		; `string'
PUBLIC	?lGetMinorCivType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivType
PUBLIC	??_C@_0L@NCIBOILG@IsMinorCiv?$AA@		; `string'
PUBLIC	?lIsMinorCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsMinorCiv
PUBLIC	??_C@_0CA@NBFDEDOJ@IsGoldenAgeCultureBonusDisabled?$AA@ ; `string'
PUBLIC	?lIsGoldenAgeCultureBonusDisabled@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsGoldenAgeCultureBonusDisabled
PUBLIC	??_C@_0BJ@MNOOLJOA@ChangeScoreFromScenario4?$AA@ ; `string'
PUBLIC	?lChangeScoreFromScenario4@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeScoreFromScenario4
PUBLIC	??_C@_0BG@NDACKNDF@GetScoreFromScenario4?$AA@	; `string'
PUBLIC	?lGetScoreFromScenario4@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromScenario4
PUBLIC	??_C@_0BJ@ICKPCPCH@ChangeScoreFromScenario3?$AA@ ; `string'
PUBLIC	?lChangeScoreFromScenario3@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeScoreFromScenario3
PUBLIC	??_C@_0BG@JMEDDLPC@GetScoreFromScenario3?$AA@	; `string'
PUBLIC	?lGetScoreFromScenario3@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromScenario3
PUBLIC	??_C@_0BJ@JLLEBOGG@ChangeScoreFromScenario2?$AA@ ; `string'
PUBLIC	?lChangeScoreFromScenario2@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeScoreFromScenario2
PUBLIC	??_C@_0BG@IFFIAKLD@GetScoreFromScenario2?$AA@	; `string'
PUBLIC	?lGetScoreFromScenario2@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromScenario2
PUBLIC	??_C@_0BJ@LAJJENKF@ChangeScoreFromScenario1?$AA@ ; `string'
PUBLIC	?lChangeScoreFromScenario1@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeScoreFromScenario1
PUBLIC	??_C@_0BG@KOHFFJHA@GetScoreFromScenario1?$AA@	; `string'
PUBLIC	?lGetScoreFromScenario1@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromScenario1
PUBLIC	??_C@_0BF@LJKKDKLA@GetScoreFromReligion?$AA@	; `string'
PUBLIC	?lGetScoreFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromReligion
PUBLIC	??_C@_0BH@HFEFJHAL@GetScoreFromGreatWorks?$AA@	; `string'
PUBLIC	?lGetScoreFromGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromGreatWorks
PUBLIC	??_C@_0BF@BOHEBPE@GetScoreFromPolicies?$AA@	; `string'
PUBLIC	?lGetScoreFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromPolicies
PUBLIC	??_C@_0BK@HFICBPBB@ChangeScoreFromFutureTech?$AA@ ; `string'
PUBLIC	?lChangeScoreFromFutureTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeScoreFromFutureTech
PUBLIC	??_C@_0BH@IDCFNFFO@GetScoreFromFutureTech?$AA@	; `string'
PUBLIC	?lGetScoreFromFutureTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromFutureTech
PUBLIC	??_C@_0BC@ODKBFJHD@GetScoreFromTechs?$AA@	; `string'
PUBLIC	?lGetScoreFromTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromTechs
PUBLIC	??_C@_0BE@GDCBBIPO@GetScoreFromWonders?$AA@	; `string'
PUBLIC	?lGetScoreFromWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromWonders
PUBLIC	??_C@_0BB@HAMBNGEF@GetScoreFromLand?$AA@	; `string'
PUBLIC	?lGetScoreFromLand@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromLand
PUBLIC	??_C@_0BH@NACBPACA@GetScoreFromPopulation?$AA@	; `string'
PUBLIC	?lGetScoreFromPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromPopulation
PUBLIC	??_C@_0BD@GKJBDKOE@GetScoreFromCities?$AA@	; `string'
PUBLIC	?lGetScoreFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromCities
PUBLIC	??_C@_08FLBLGMDF@GetScore?$AA@			; `string'
PUBLIC	?lGetScore@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetScore
PUBLIC	??_C@_0BD@EANFHEEM@GetTotalTimePlayed?$AA@	; `string'
PUBLIC	?lGetTotalTimePlayed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalTimePlayed
PUBLIC	??_C@_0BB@FCKFHAMF@GetMilitaryMight?$AA@	; `string'
PUBLIC	?lGetMilitaryMight@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMilitaryMight
PUBLIC	??_C@_08JBDILNIJ@GetPower?$AA@			; `string'
PUBLIC	?lGetPower@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetPower
PUBLIC	??_C@_0O@IJIJFFBJ@GetCitiesLost?$AA@		; `string'
PUBLIC	?lGetCitiesLost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCitiesLost
PUBLIC	??_C@_0BB@NIHHDNHH@IsHasLostCapital?$AA@	; `string'
PUBLIC	?lIsHasLostCapital@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsHasLostCapital
PUBLIC	??_C@_0P@FFFOGOIP@GetCapitalCity?$AA@		; `string'
PUBLIC	?lGetCapitalCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCapitalCity
PUBLIC	??_C@_0BD@MKDMLCCD@GetConversionTimer?$AA@	; `string'
PUBLIC	?lGetConversionTimer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetConversionTimer
PUBLIC	??_C@_0BE@HFKEEPGN@GetCultureBombTimer?$AA@	; `string'
PUBLIC	?lGetCultureBombTimer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCultureBombTimer
PUBLIC	??_C@_0BL@GOLIOFPO@GetLevelExperienceModifier?$AA@ ; `string'
PUBLIC	?lGetLevelExperienceModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLevelExperienceModifier
PUBLIC	??_C@_0BH@KBKMOIME@GetExpInBorderModifier?$AA@	; `string'
PUBLIC	?lGetExpInBorderModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExpInBorderModifier
PUBLIC	??_C@_0BE@EJOLNPDK@GetOverflowResearch?$AA@	; `string'
PUBLIC	?lGetOverflowResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOverflowResearch
PUBLIC	??_C@_0BA@PFEGDHIO@GetMaxConscript?$AA@		; `string'
PUBLIC	?lGetMaxConscript@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMaxConscript
PUBLIC	??_C@_0BF@MPFKKCHC@ChangeConscriptCount?$AA@	; `string'
PUBLIC	?lChangeConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeConscriptCount
PUBLIC	??_C@_0BC@HEDGEPGG@SetConscriptCount?$AA@	; `string'
PUBLIC	?lSetConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetConscriptCount
PUBLIC	??_C@_0BC@FBDNMEHI@GetConscriptCount?$AA@	; `string'
PUBLIC	?lGetConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetConscriptCount
PUBLIC	??_C@_0BE@HICDOHEK@GetHighestUnitLevel?$AA@	; `string'
PUBLIC	?lGetHighestUnitLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHighestUnitLevel
PUBLIC	??_C@_0BJ@KOGLACFH@IsMilitaryFoodProduction?$AA@ ; `string'
PUBLIC	?lIsMilitaryFoodProduction@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMilitaryFoodProduction
PUBLIC	??_C@_0BI@EKFNFHH@GetHappyPerMilitaryUnit?$AA@	; `string'
PUBLIC	?lGetHappyPerMilitaryUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappyPerMilitaryUnit
PUBLIC	??_C@_0BE@IFGDJNNN@GetNumMilitaryUnits?$AA@	; `string'
PUBLIC	?lGetNumMilitaryUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumMilitaryUnits
PUBLIC	??_C@_0BB@MPNKPEH@GetExtraUnitCost?$AA@		; `string'
PUBLIC	?lGetExtraUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExtraUnitCost
PUBLIC	??_C@_0BH@IBDMECLP@GetGoldPerMilitaryUnit?$AA@	; `string'
PUBLIC	?lGetGoldPerMilitaryUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerMilitaryUnit
PUBLIC	??_C@_0BK@NAABFPGN@ChangeGoldPerUnitTimes100?$AA@ ; `string'
PUBLIC	?lChangeGoldPerUnitTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeGoldPerUnitTimes100
PUBLIC	??_C@_0P@KLHLMHGG@GetGoldPerUnit?$AA@		; `string'
PUBLIC	?lGetGoldPerUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerUnit
PUBLIC	??_C@_0BD@FFLHNPMI@GetNumOutsideUnits?$AA@	; `string'
PUBLIC	?lGetNumOutsideUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumOutsideUnits
PUBLIC	??_C@_0BA@CHLGKBKN@GetNumNukeUnits?$AA@		; `string'
PUBLIC	?lGetNumNukeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumNukeUnits
PUBLIC	??_C@_0BH@CNBJGBKN@GetCityDefenseModifier?$AA@	; `string'
PUBLIC	?lGetCityDefenseModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityDefenseModifier
PUBLIC	??_C@_0BH@JFCPPOKA@GetNumUnitsOutOfSupply?$AA@	; `string'
PUBLIC	?lGetNumUnitsOutOfSupply@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitsOutOfSupply
PUBLIC	??_C@_0CA@CBHKKKOG@GetNumUnitsSuppliedByPopulation?$AA@ ; `string'
PUBLIC	?lGetNumUnitsSuppliedByPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitsSuppliedByPopulation
PUBLIC	??_C@_0BM@IPDKBGHK@GetNumUnitsSuppliedByCities?$AA@ ; `string'
PUBLIC	?lGetNumUnitsSuppliedByCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitsSuppliedByCities
PUBLIC	??_C@_0BO@PMEHJMFO@GetNumUnitsSuppliedByHandicap?$AA@ ; `string'
PUBLIC	?lGetNumUnitsSuppliedByHandicap@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitsSuppliedByHandicap
PUBLIC	??_C@_0BE@BILKHCNA@GetNumUnitsSupplied?$AA@	; `string'
PUBLIC	?lGetNumUnitsSupplied@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitsSupplied
PUBLIC	??_C@_0CA@MEMPLKAL@GetUnitProductionMaintenanceMod?$AA@ ; `string'
PUBLIC	?lGetUnitProductionMaintenanceMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitProductionMaintenanceMod
PUBLIC	??_C@_0BM@HMIHDNFC@GetWonderProductionModifier?$AA@ ; `string'
PUBLIC	?lGetWonderProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWonderProductionModifier
PUBLIC	??_C@_0CE@OBJBHEJM@GetCapitalSettlerProductionModif@ ; `string'
PUBLIC	?lGetCapitalSettlerProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCapitalSettlerProductionModifier
PUBLIC	??_C@_0BN@PJHHAPCJ@GetSettlerProductionModifier?$AA@ ; `string'
PUBLIC	?lGetSettlerProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSettlerProductionModifier
PUBLIC	??_C@_0BL@EMAHKCFF@GetSpaceProductionModifier?$AA@ ; `string'
PUBLIC	?lGetSpaceProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSpaceProductionModifier
PUBLIC	??_C@_0BO@FAMIPBGF@GetMilitaryProductionModifier?$AA@ ; `string'
PUBLIC	?lGetMilitaryProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMilitaryProductionModifier
PUBLIC	??_C@_0CC@EGHOKLNO@GetImprovementUpgradeRateModifie@ ; `string'
PUBLIC	?lGetImprovementUpgradeRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetImprovementUpgradeRateModifier
PUBLIC	??_C@_0BH@OLIFBLOM@GetWorkerSpeedModifier?$AA@	; `string'
PUBLIC	?lGetWorkerSpeedModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWorkerSpeedModifier
PUBLIC	??_C@_0BN@CNPJHBNO@GetFeatureProductionModifier?$AA@ ; `string'
PUBLIC	?lGetFeatureProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFeatureProductionModifier
PUBLIC	??_C@_0BC@KJGDLEFF@GetFreeExperience?$AA@	; `string'
PUBLIC	?lGetFreeExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFreeExperience
PUBLIC	??_C@_0CH@IPPDDFAE@GetMaxPlayerBuildingProductionMo@ ; `string'
PUBLIC	?lGetMaxPlayerBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMaxPlayerBuildingProductionModifier
PUBLIC	??_C@_0CF@IEGALNMD@GetMaxTeamBuildingProductionModi@ ; `string'
PUBLIC	?lGetMaxTeamBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMaxTeamBuildingProductionModifier
PUBLIC	??_C@_0CH@MPJDKCLN@GetMaxGlobalBuildingProductionMo@ ; `string'
PUBLIC	?lGetMaxGlobalBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMaxGlobalBuildingProductionModifier
PUBLIC	??_C@_0CA@IIOBOOCG@GetSpecialistProductionModifier?$AA@ ; `string'
PUBLIC	?lGetSpecialistProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSpecialistProductionModifier
PUBLIC	??_C@_0BN@FIGLLOHP@GetProjectProductionModifier?$AA@ ; `string'
PUBLIC	?lGetProjectProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetProjectProductionModifier
PUBLIC	??_C@_0BO@BOIFPPNB@GetBuildingProductionModifier?$AA@ ; `string'
PUBLIC	?lGetBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingProductionModifier
PUBLIC	??_C@_0BK@CAONOBAD@GetUnitProductionModifier?$AA@ ; `string'
PUBLIC	?lGetUnitProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitProductionModifier
PUBLIC	??_C@_0BG@COALBBFM@GetProductionModifier?$AA@	; `string'
PUBLIC	?lGetProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetProductionModifier
PUBLIC	??_C@_0CD@HOFMMBHK@GetPolicyGreatEngineerRateModifi@ ; `string'
PUBLIC	?lGetPolicyGreatEngineerRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatEngineerRateModifier
PUBLIC	??_C@_0CD@DKCDGIM@GetPolicyGreatMerchantRateModifi@ ; `string'
PUBLIC	?lGetPolicyGreatMerchantRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatMerchantRateModifier
PUBLIC	??_C@_0CE@DBDAMIKN@GetPolicyGreatScientistRateModif@ ; `string'
PUBLIC	?lGetPolicyGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatScientistRateModifier
PUBLIC	??_C@_0CD@JHHGEB@GetPolicyGreatMusicianRateModifi@ ; `string'
PUBLIC	?lGetPolicyGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatMusicianRateModifier
PUBLIC	??_C@_0CB@MMGEIAFA@GetPolicyGreatArtistRateModifier@ ; `string'
PUBLIC	?lGetPolicyGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatArtistRateModifier
PUBLIC	??_C@_0CB@DGCCPGOK@GetPolicyGreatWriterRateModifier@ ; `string'
PUBLIC	?lGetPolicyGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatWriterRateModifier
PUBLIC	??_C@_0CB@LFJJFBJB@GetPolicyGreatPeopleRateModifier@ ; `string'
PUBLIC	?lGetPolicyGreatPeopleRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatPeopleRateModifier
PUBLIC	??_C@_0BN@GFFELKAF@GetGreatEngineerRateModifier?$AA@ ; `string'
PUBLIC	?lGetGreatEngineerRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatEngineerRateModifier
PUBLIC	??_C@_0BN@BIKKENPD@GetGreatMerchantRateModifier?$AA@ ; `string'
PUBLIC	?lGetGreatMerchantRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatMerchantRateModifier
PUBLIC	??_C@_0BO@PBJBKMHL@GetGreatScientistRateModifier?$AA@ ; `string'
PUBLIC	?lGetGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatScientistRateModifier
PUBLIC	??_C@_0BN@BLJPANDO@GetGreatMusicianRateModifier?$AA@ ; `string'
PUBLIC	?lGetGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatMusicianRateModifier
PUBLIC	??_C@_0BL@KECMPOFM@GetGreatArtistRateModifier?$AA@ ; `string'
PUBLIC	?lGetGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatArtistRateModifier
PUBLIC	??_C@_0BL@FOGKIIOG@GetGreatWriterRateModifier?$AA@ ; `string'
PUBLIC	?lGetGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatWriterRateModifier
PUBLIC	??_C@_0CE@NBFMLJOA@GetDomesticGreatGeneralRateModif@ ; `string'
PUBLIC	?lGetDomesticGreatGeneralRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDomesticGreatGeneralRateModifier
PUBLIC	??_C@_0BM@BPCIOMLO@GetGreatGeneralRateModifier?$AA@ ; `string'
PUBLIC	?lGetGreatGeneralRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatGeneralRateModifier
PUBLIC	??_C@_0BL@NNNBCPJN@GetGreatPeopleRateModifier?$AA@ ; `string'
PUBLIC	?lGetGreatPeopleRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatPeopleRateModifier
PUBLIC	??_C@_0CC@GGFJPDKI@GetGreatAdmiralsThresholdModifie@ ; `string'
PUBLIC	?lGetGreatAdmiralsThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatAdmiralsThresholdModifier
PUBLIC	??_C@_0CC@KEPHPFIK@GetGreatGeneralsThresholdModifie@ ; `string'
PUBLIC	?lGetGreatGeneralsThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatGeneralsThresholdModifier
PUBLIC	??_C@_0CA@CKCODGOH@GetGreatPeopleThresholdModifier?$AA@ ; `string'
PUBLIC	?lGetGreatPeopleThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatPeopleThresholdModifier
PUBLIC	??_C@_0BI@JEHAPHOE@GetGreatGeneralsCreated?$AA@	; `string'
PUBLIC	?lGetGreatGeneralsCreated@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatGeneralsCreated
PUBLIC	??_C@_0BG@GOOPLPC@GetGreatPeopleCreated?$AA@	; `string'
PUBLIC	?lGetGreatPeopleCreated@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatPeopleCreated
PUBLIC	??_C@_0BD@PBNOMGLK@CreateGreatGeneral?$AA@	; `string'
PUBLIC	?lCreateGreatGeneral@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCreateGreatGeneral
PUBLIC	??_C@_0BB@EAPJMMAA@GetHurryModifier?$AA@	; `string'
PUBLIC	?lGetHurryModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHurryModifier
PUBLIC	??_C@_0CG@HCINBNOL@GetGoldenAgeGreatMusicianRateMod@ ; `string'
PUBLIC	?lGetGoldenAgeGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeGreatMusicianRateModifier
PUBLIC	??_C@_0CE@HHFLCCEA@GetGoldenAgeGreatArtistRateModif@ ; `string'
PUBLIC	?lGetGoldenAgeGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeGreatArtistRateModifier
PUBLIC	??_C@_0CE@INBNFEPK@GetGoldenAgeGreatWriterRateModif@ ; `string'
PUBLIC	?lGetGoldenAgeGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeGreatWriterRateModifier
PUBLIC	??_C@_0BM@GFBIOEFN@GetGoldenAgeTourismModifier?$AA@ ; `string'
PUBLIC	?lGetGoldenAgeTourismModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeTourismModifier
PUBLIC	??_C@_0BF@GCOBNFFJ@GetGoldenAgeModifier?$AA@	; `string'
PUBLIC	?lGetGoldenAgeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeModifier
PUBLIC	??_C@_0P@HJMIOKAH@GetStrikeTurns?$AA@		; `string'
PUBLIC	?lGetStrikeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetStrikeTurns
PUBLIC	??_C@_0BI@FPIFLKMJ@ChangeNumUnitGoldenAges?$AA@	; `string'
PUBLIC	?lChangeNumUnitGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumUnitGoldenAges
PUBLIC	??_C@_0BF@LCGDAHFL@GetNumUnitGoldenAges?$AA@	; `string'
PUBLIC	?lGetNumUnitGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitGoldenAges
PUBLIC	??_C@_0BF@OADGEBIB@ChangeGoldenAgeTurns?$AA@	; `string'
PUBLIC	?lChangeGoldenAgeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeGoldenAgeTurns
PUBLIC	??_C@_0M@EBKACFHH@IsGoldenAge?$AA@		; `string'
PUBLIC	?lIsGoldenAge@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsGoldenAge
PUBLIC	??_C@_0BD@FNIABJJO@GetGoldenAgeLength?$AA@	; `string'
PUBLIC	?lGetGoldenAgeLength@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeLength
PUBLIC	??_C@_0BC@HOFBCHIL@GetGoldenAgeTurns?$AA@	; `string'
PUBLIC	?lGetGoldenAgeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeTurns
PUBLIC	??_C@_0BE@EPHOEOBB@ChangeNumGoldenAges?$AA@	; `string'
PUBLIC	?lChangeNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumGoldenAges
PUBLIC	??_C@_0BB@CINEFJKE@SetNumGoldenAges?$AA@	; `string'
PUBLIC	?lSetNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumGoldenAges
PUBLIC	??_C@_0BB@EMINOHBG@GetNumGoldenAges?$AA@	; `string'
PUBLIC	?lGetNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumGoldenAges
PUBLIC	??_C@_0BN@FJAKLENJ@ChangeGoldenAgeProgressMeter?$AA@ ; `string'
PUBLIC	?lChangeGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeGoldenAgeProgressMeter
PUBLIC	??_C@_0BK@NLKNLKPL@SetGoldenAgeProgressMeter?$AA@ ; `string'
PUBLIC	?lSetGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetGoldenAgeProgressMeter
PUBLIC	??_C@_0BK@FLGLHHFN@GetGoldenAgeProgressMeter?$AA@ ; `string'
PUBLIC	?lGetGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeProgressMeter
PUBLIC	??_C@_0BO@LPPFEDND@GetGoldenAgeProgressThreshold?$AA@ ; `string'
PUBLIC	?lGetGoldenAgeProgressThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeProgressThreshold
PUBLIC	??_C@_0BF@CGIAJLKI@GetTourismBonusTurns?$AA@	; `string'
PUBLIC	?lGetTourismBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTourismBonusTurns
PUBLIC	??_C@_0BF@ECALGNHI@GetCultureBonusTurns?$AA@	; `string'
PUBLIC	?lGetCultureBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCultureBonusTurns
PUBLIC	??_C@_0BE@DHPFLJOB@GetAttackBonusTurns?$AA@	; `string'
PUBLIC	?lGetAttackBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAttackBonusTurns
PUBLIC	??_C@_0BP@EFPNHEAL@GetAdvancedStartVisibilityCost?$AA@ ; `string'
PUBLIC	?lGetAdvancedStartVisibilityCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartVisibilityCost
PUBLIC	??_C@_0BJ@BIBNNGIB@GetAdvancedStartTechCost?$AA@ ; `string'
PUBLIC	?lGetAdvancedStartTechCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartTechCost
PUBLIC	??_C@_0BK@JJCKPMNB@GetAdvancedStartRouteCost?$AA@ ; `string'
PUBLIC	?lGetAdvancedStartRouteCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartRouteCost
PUBLIC	??_C@_0CA@DCEELAJ@GetAdvancedStartImprovementCost?$AA@ ; `string'
PUBLIC	?lGetAdvancedStartImprovementCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartImprovementCost
PUBLIC	??_C@_0BN@BBJMEHC@GetAdvancedStartBuildingCost?$AA@ ; `string'
PUBLIC	?lGetAdvancedStartBuildingCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartBuildingCost
PUBLIC	??_C@_0BI@FOAJKADD@GetAdvancedStartPopCost?$AA@	; `string'
PUBLIC	?lGetAdvancedStartPopCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartPopCost
PUBLIC	??_C@_0BJ@ONOAJPAI@GetAdvancedStartCityCost?$AA@ ; `string'
PUBLIC	?lGetAdvancedStartCityCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartCityCost
PUBLIC	??_C@_0BJ@ICGIEDDK@GetAdvancedStartUnitCost?$AA@ ; `string'
PUBLIC	?lGetAdvancedStartUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartUnitCost
PUBLIC	??_C@_0BK@FJENIMJD@ChangeAdvancedStartPoints?$AA@ ; `string'
PUBLIC	?lChangeAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeAdvancedStartPoints
PUBLIC	??_C@_0BH@KOMEGBAD@SetAdvancedStartPoints?$AA@	; `string'
PUBLIC	?lSetAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetAdvancedStartPoints
PUBLIC	??_C@_0BH@KPOKEGNM@GetAdvancedStartPoints?$AA@	; `string'
PUBLIC	?lGetAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartPoints
PUBLIC	??_C@_0BG@LEGAIOCI@ChangeAnarchyNumTurns?$AA@	; `string'
PUBLIC	?lChangeAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeAnarchyNumTurns
PUBLIC	??_C@_0BD@KOABDGLI@SetAnarchyNumTurns?$AA@	; `string'
PUBLIC	?lSetAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetAnarchyNumTurns
PUBLIC	??_C@_0BD@FECLAAFA@GetAnarchyNumTurns?$AA@	; `string'
PUBLIC	?lGetAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAnarchyNumTurns
PUBLIC	??_C@_09FIFKNOKC@IsAnarchy?$AA@			; `string'
PUBLIC	?lIsAnarchy@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsAnarchy
PUBLIC	??_C@_08DLFCFIKN@GetTenet?$AA@			; `string'
PUBLIC	?lGetTenet@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetTenet
PUBLIC	??_C@_0BD@LDLHNBJO@GetAvailableTenets?$AA@	; `string'
PUBLIC	?lGetAvailableTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAvailableTenets
PUBLIC	??_C@_0BH@HCDPPGCO@IsPolicyBranchFinished?$AA@	; `string'
PUBLIC	?lIsPolicyBranchFinished@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPolicyBranchFinished
PUBLIC	??_C@_0BN@PJMELKMJ@GetNumPolicyBranchesFinished?$AA@ ; `string'
PUBLIC	?lGetNumPolicyBranchesFinished@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPolicyBranchesFinished
PUBLIC	??_C@_0BM@KBCLIFBL@GetPolicyCatchSpiesModifier?$AA@ ; `string'
PUBLIC	?lGetPolicyCatchSpiesModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyCatchSpiesModifier
PUBLIC	??_C@_0BB@OHKMDAD@GetBranchPicked3?$AA@		; `string'
PUBLIC	?lGetBranchPicked3@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBranchPicked3
PUBLIC	??_C@_0BB@BHGBPCEC@GetBranchPicked2?$AA@	; `string'
PUBLIC	?lGetBranchPicked2@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBranchPicked2
PUBLIC	??_C@_0BB@DMEMKBIB@GetBranchPicked1?$AA@	; `string'
PUBLIC	?lGetBranchPicked1@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBranchPicked1
PUBLIC	??_C@_0BG@DOHPFKJL@GetLateGamePolicyTree?$AA@	; `string'
PUBLIC	?lGetLateGamePolicyTree@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLateGamePolicyTree
PUBLIC	??_C@_0CA@DEKBLMFE@GetDominantPolicyBranchForTitle?$AA@ ; `string'
PUBLIC	?lGetDominantPolicyBranchForTitle@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDominantPolicyBranchForTitle
PUBLIC	??_C@_0BG@MONIAELO@CanUnlockPolicyBranch?$AA@	; `string'
PUBLIC	?lCanUnlockPolicyBranch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanUnlockPolicyBranch
PUBLIC	??_C@_0O@JILLCNOF@DoAdoptPolicy?$AA@		; `string'
PUBLIC	?lDoAdoptPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoAdoptPolicy
PUBLIC	??_C@_0P@NBAEIJPB@CanAdoptPolicy?$AA@		; `string'
PUBLIC	?lCanAdoptPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanAdoptPolicy
PUBLIC	??_C@_0BC@HNDGHHDL@GetNextPolicyCost?$AA@	; `string'
PUBLIC	?lGetNextPolicyCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNextPolicyCost
PUBLIC	??_C@_0N@CKJMFNFA@SetHasPolicy?$AA@		; `string'
PUBLIC	?lSetHasPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lSetHasPolicy
PUBLIC	??_C@_09IMCIBCHC@HasPolicy?$AA@			; `string'
PUBLIC	?lHasPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lHasPolicy
PUBLIC	??_C@_0BH@OLJHEJDP@GetNumPoliciesInBranch?$AA@	; `string'
PUBLIC	?lGetNumPoliciesInBranch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPoliciesInBranch
PUBLIC	??_C@_0P@LDBNHHDO@GetNumPolicies?$AA@		; `string'
PUBLIC	?lGetNumPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPolicies
PUBLIC	??_C@_0BM@DDGOEEIN@GetNumPolicyBranchesAllowed?$AA@ ; `string'
PUBLIC	?lGetNumPolicyBranchesAllowed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPolicyBranchesAllowed
PUBLIC	??_C@_0BG@KGNNGKHG@GetPolicyBranchChosen?$AA@	; `string'
PUBLIC	?lGetPolicyBranchChosen@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyBranchChosen
PUBLIC	??_C@_0BN@FFNPAHDM@GetNumPolicyBranchesUnlocked?$AA@ ; `string'
PUBLIC	?lGetNumPolicyBranchesUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPolicyBranchesUnlocked
PUBLIC	??_C@_0BI@GJDFFJHC@SetPolicyBranchUnlocked?$AA@	; `string'
PUBLIC	?lSetPolicyBranchUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetPolicyBranchUnlocked
PUBLIC	??_C@_0BH@NOCEELNL@IsPolicyBranchUnlocked?$AA@	; `string'
PUBLIC	?lIsPolicyBranchUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPolicyBranchUnlocked
PUBLIC	??_C@_0BG@KBLODJLM@IsPolicyBranchBlocked?$AA@	; `string'
PUBLIC	?lIsPolicyBranchBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPolicyBranchBlocked
PUBLIC	??_C@_0BA@DKMNPPBN@IsPolicyBlocked?$AA@		; `string'
PUBLIC	?lIsPolicyBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPolicyBlocked
PUBLIC	??_C@_0BO@NCGBNEJP@ChangeAlwaysSeeBarbCampsCount?$AA@ ; `string'
PUBLIC	?lChangeAlwaysSeeBarbCampsCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeAlwaysSeeBarbCampsCount
PUBLIC	??_C@_0BL@HIDDCHF@SetAlwaysSeeBarbCampsCount?$AA@ ; `string'
PUBLIC	?lSetAlwaysSeeBarbCampsCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetAlwaysSeeBarbCampsCount
PUBLIC	??_C@_0BF@HGKGHLME@IsAlwaysSeeBarbCamps?$AA@	; `string'
PUBLIC	?lIsAlwaysSeeBarbCamps@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAlwaysSeeBarbCamps
PUBLIC	??_C@_0CI@CPNKMMFB@ChangeGarrisonedCityRangeStrikeM@ ; `string'
PUBLIC	?lChangeGarrisonedCityRangeStrikeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeGarrisonedCityRangeStrikeModifier
PUBLIC	??_C@_0CF@HCFHKNHE@GetGarrisonedCityRangeStrikeModi@ ; `string'
PUBLIC	?lGetGarrisonedCityRangeStrikeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGarrisonedCityRangeStrikeModifier
PUBLIC	??_C@_0BL@DLHHGHDO@GetCombatBonusVsSmallerCiv?$AA@ ; `string'
PUBLIC	?lGetCombatBonusVsSmallerCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCombatBonusVsSmallerCiv
PUBLIC	??_C@_0BK@CFFLCBFM@GetCombatBonusVsLargerCiv?$AA@ ; `string'
PUBLIC	?lGetCombatBonusVsLargerCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCombatBonusVsLargerCiv
PUBLIC	??_C@_0BL@NBFOBEAE@GetCombatBonusVsHigherTech?$AA@ ; `string'
PUBLIC	?lGetCombatBonusVsHigherTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCombatBonusVsHigherTech
PUBLIC	??_C@_0BL@ENNNGIPB@ChangeBarbarianCombatBonus?$AA@ ; `string'
PUBLIC	?lChangeBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeBarbarianCombatBonus
PUBLIC	??_C@_0BI@LNCFHCFI@SetBarbarianCombatBonus?$AA@	; `string'
PUBLIC	?lSetBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetBarbarianCombatBonus
PUBLIC	??_C@_0BI@KLEIJDDK@GetBarbarianCombatBonus?$AA@	; `string'
PUBLIC	?lGetBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBarbarianCombatBonus
PUBLIC	??_C@_0BG@DIIAGAEM@GetHappinessFromMinor?$AA@	; `string'
PUBLIC	?lGetHappinessFromMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromMinor
PUBLIC	??_C@_0BK@IHIHKILH@GetHappinessFromMinorCivs?$AA@ ; `string'
PUBLIC	?lGetHappinessFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromMinorCivs
PUBLIC	??_C@_0CI@JLDDCPMO@GetCityConnectionTradeRouteGoldM@ ; `string'
PUBLIC	?lGetCityConnectionTradeRouteGoldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityConnectionTradeRouteGoldModifier
PUBLIC	??_C@_0BN@CKMFDGG@ChangeHappinessPerTradeRoute?$AA@ ; `string'
PUBLIC	?lChangeHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeHappinessPerTradeRoute
PUBLIC	??_C@_0BK@IAALFNEE@SetHappinessPerTradeRoute?$AA@ ; `string'
PUBLIC	?lSetHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetHappinessPerTradeRoute
PUBLIC	??_C@_0BK@MNJAOC@GetHappinessPerTradeRoute?$AA@	; `string'
PUBLIC	?lGetHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessPerTradeRoute
PUBLIC	??_C@_0BM@ONEGOIFC@GetHappinessFromTradeRoutes?$AA@ ; `string'
PUBLIC	?lGetHappinessFromTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromTradeRoutes
PUBLIC	??_C@_0CB@JPNBNLCL@ChangeHappinessPerGarrisonedUnit@ ; `string'
PUBLIC	?lChangeHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeHappinessPerGarrisonedUnit
PUBLIC	??_C@_0BO@HNIEFJLG@SetHappinessPerGarrisonedUnit?$AA@ ; `string'
PUBLIC	?lSetHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetHappinessPerGarrisonedUnit
PUBLIC	??_C@_0BO@PMOLOJJE@GetHappinessPerGarrisonedUnit?$AA@ ; `string'
PUBLIC	?lGetHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessPerGarrisonedUnit
PUBLIC	??_C@_0BM@HAKOEBKA@IsHalfSpecialistUnhappiness?$AA@ ; `string'
PUBLIC	?lIsHalfSpecialistUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsHalfSpecialistUnhappiness
PUBLIC	??_C@_0BK@LDLDMFJK@GetTraitPopUnhappinessMod?$AA@ ; `string'
PUBLIC	?lGetTraitPopUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitPopUnhappinessMod
PUBLIC	??_C@_0BL@GIPNPCHI@GetTraitCityUnhappinessMod?$AA@ ; `string'
PUBLIC	?lGetTraitCityUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitCityUnhappinessMod
PUBLIC	??_C@_0BJ@GJPGDMHB@GetCapitalUnhappinessMod?$AA@ ; `string'
PUBLIC	?lGetCapitalUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCapitalUnhappinessMod
PUBLIC	??_C@_0CE@OKFBELDK@GetOccupiedPopulationUnhappiness@ ; `string'
PUBLIC	?lGetOccupiedPopulationUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOccupiedPopulationUnhappinessMod
PUBLIC	??_C@_0BL@DLGEPDKJ@GetCityCountUnhappinessMod?$AA@ ; `string'
PUBLIC	?lGetCityCountUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityCountUnhappinessMod
PUBLIC	??_C@_0BC@KOOANBJP@GetUnhappinessMod?$AA@	; `string'
PUBLIC	?lGetUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessMod
PUBLIC	??_C@_0BL@MCEIFFBM@ChangeUnhappinessFromUnits?$AA@ ; `string'
PUBLIC	?lChangeUnhappinessFromUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeUnhappinessFromUnits
PUBLIC	??_C@_0BI@CENNKONH@GetUnhappinessFromUnits?$AA@	; `string'
PUBLIC	?lGetUnhappinessFromUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromUnits
PUBLIC	??_C@_0CA@INPCOOLO@GetUnhappinessFromPublicOpinion?$AA@ ; `string'
PUBLIC	?lGetUnhappinessFromPublicOpinion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromPublicOpinion
PUBLIC	??_C@_0CH@CLBIAMK@GetUnhappinessFromPuppetCityPopu@ ; `string'
PUBLIC	?lGetUnhappinessFromPuppetCityPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromPuppetCityPopulation
PUBLIC	??_C@_0CB@MKILLP@GetUnhappinessFromOccupiedCities@ ; `string'
PUBLIC	?lGetUnhappinessFromOccupiedCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromOccupiedCities
PUBLIC	??_C@_0CC@BMLAPPGM@GetUnhappinessFromCitySpecialist@ ; `string'
PUBLIC	?lGetUnhappinessFromCitySpecialists@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromCitySpecialists
PUBLIC	??_C@_0CB@KBOPPOAK@GetUnhappinessFromCityPopulation@ ; `string'
PUBLIC	?lGetUnhappinessFromCityPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromCityPopulation
PUBLIC	??_C@_0CE@ECLIBGEO@GetUnhappinessFromCapturedCityCo@ ; `string'
PUBLIC	?lGetUnhappinessFromCapturedCityCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromCapturedCityCount
PUBLIC	??_C@_0BM@OCKLJKNC@GetUnhappinessFromCityCount?$AA@ ; `string'
PUBLIC	?lGetUnhappinessFromCityCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromCityCount
PUBLIC	??_C@_0BM@GNGHHBBH@GetUnhappinessFromCityForUI?$AA@ ; `string'
PUBLIC	?lGetUnhappinessFromCityForUI@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromCityForUI
PUBLIC	??_C@_0BH@MKFGHBDK@GetUnhappinessForecast?$AA@	; `string'
PUBLIC	?lGetUnhappinessForecast@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessForecast
PUBLIC	??_C@_0P@DDCLBDGA@GetUnhappiness?$AA@		; `string'
PUBLIC	?lGetUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappiness
PUBLIC	??_C@_0BI@MILNBGI@GetHappinessFromLeagues?$AA@	; `string'
PUBLIC	?lGetHappinessFromLeagues@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromLeagues
PUBLIC	??_C@_0BP@GFJNHLAE@GetHappinessFromNaturalWonders?$AA@ ; `string'
PUBLIC	?lGetHappinessFromNaturalWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromNaturalWonders
PUBLIC	??_C@_0BJ@MCAOJMIP@GetHappinessFromReligion?$AA@ ; `string'
PUBLIC	?lGetHappinessFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromReligion
PUBLIC	??_C@_0BL@EEBALAOF@GetExtraHappinessPerLuxury?$AA@ ; `string'
PUBLIC	?lGetExtraHappinessPerLuxury@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExtraHappinessPerLuxury
PUBLIC	??_C@_0CA@NPGNMMND@GetHappinessFromResourceVariety?$AA@ ; `string'
PUBLIC	?lGetHappinessFromResourceVariety@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromResourceVariety
PUBLIC	??_C@_0BK@KADBPJPP@GetHappinessFromResources?$AA@ ; `string'
PUBLIC	?lGetHappinessFromResources@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromResources
PUBLIC	??_C@_0BM@BDKBHECI@ChangeExtraHappinessPerCity?$AA@ ; `string'
PUBLIC	?lChangeExtraHappinessPerCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeExtraHappinessPerCity
PUBLIC	??_C@_0BJ@BPPBPKOL@GetExtraHappinessPerCity?$AA@ ; `string'
PUBLIC	?lGetExtraHappinessPerCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExtraHappinessPerCity
PUBLIC	??_C@_0BK@NJJIHGAG@GetHappinessFromBuildings?$AA@ ; `string'
PUBLIC	?lGetHappinessFromBuildings@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromBuildings
PUBLIC	??_C@_0BH@DNCNLJLJ@GetHappinessFromCities?$AA@	; `string'
PUBLIC	?lGetHappinessFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromCities
PUBLIC	??_C@_0BJ@HKEDOHML@GetHappinessFromPolicies?$AA@ ; `string'
PUBLIC	?lGetHappinessFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromPolicies
PUBLIC	??_C@_0BF@IJAIICIJ@IsEmpireSuperUnhappy?$AA@	; `string'
PUBLIC	?lIsEmpireSuperUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsEmpireSuperUnhappy
PUBLIC	??_C@_0BE@DBNNOCLK@IsEmpireVeryUnhappy?$AA@	; `string'
PUBLIC	?lIsEmpireVeryUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsEmpireVeryUnhappy
PUBLIC	??_C@_0BA@NHLHHEED@IsEmpireUnhappy?$AA@		; `string'
PUBLIC	?lIsEmpireUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsEmpireUnhappy
PUBLIC	??_C@_0BD@KNCDHHMN@GetExcessHappiness?$AA@	; `string'
PUBLIC	?lGetExcessHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExcessHappiness
PUBLIC	??_C@_0N@GLCICHBA@SetHappiness?$AA@		; `string'
PUBLIC	?lSetHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lSetHappiness
PUBLIC	??_C@_0N@BPJGOLFM@GetHappiness?$AA@		; `string'
PUBLIC	?lGetHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetHappiness
PUBLIC	??_C@_0BP@KDEEONIG@DoesUnitPassFaithPurchaseCheck?$AA@ ; `string'
PUBLIC	?lDoesUnitPassFaithPurchaseCheck@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoesUnitPassFaithPurchaseCheck
PUBLIC	??_C@_0BI@LGIHCJNG@HasReligionInMostCities?$AA@	; `string'
PUBLIC	?lHasReligionInMostCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasReligionInMostCities
PUBLIC	??_C@_0CA@BOJACAPD@GetMinimumFaithNextGreatProphet?$AA@ ; `string'
PUBLIC	?lGetMinimumFaithNextGreatProphet@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinimumFaithNextGreatProphet
PUBLIC	??_C@_0CI@IMONNDBE@GetFoundedReligionFriendlyCityCo@ ; `string'
PUBLIC	?lGetFoundedReligionFriendlyCityCombatMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFoundedReligionFriendlyCityCombatMod
PUBLIC	??_C@_0CF@LIFLPEAN@GetFoundedReligionEnemyCityComba@ ; `string'
PUBLIC	?lGetFoundedReligionEnemyCityCombatMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFoundedReligionEnemyCityCombatMod
PUBLIC	??_C@_0BL@NDMELHHP@GetReligionCreatedByPlayer?$AA@ ; `string'
PUBLIC	?lGetReligionCreatedByPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetReligionCreatedByPlayer
PUBLIC	??_C@_0BC@BEJANDOH@CanCreatePantheon?$AA@	; `string'
PUBLIC	?lCanCreatePantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanCreatePantheon
PUBLIC	??_C@_0BD@IANGKFOG@HasCreatedReligion?$AA@	; `string'
PUBLIC	?lHasCreatedReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasCreatedReligion
PUBLIC	??_C@_0BE@NCIMNEEK@GetBeliefInPantheon?$AA@	; `string'
PUBLIC	?lGetBeliefInPantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBeliefInPantheon
PUBLIC	??_C@_0BD@MKDLKLJP@HasCreatedPantheon?$AA@	; `string'
PUBLIC	?lHasCreatedPantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasCreatedPantheon
PUBLIC	??_C@_0BD@MIKGEGGL@CanFaithGiftMinors?$AA@	; `string'
PUBLIC	?lCanFaithGiftMinors@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanFaithGiftMinors
PUBLIC	??_C@_0BM@FBEILFDB@GetFaithPerTurnFromReligion?$AA@ ; `string'
PUBLIC	?lGetFaithPerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFaithPerTurnFromReligion
PUBLIC	??_C@_0BN@KLMNHABF@GetFaithPerTurnFromMinorCivs?$AA@ ; `string'
PUBLIC	?lGetFaithPerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFaithPerTurnFromMinorCivs
PUBLIC	??_C@_0BK@DEPMGGBK@GetFaithPerTurnFromCities?$AA@ ; `string'
PUBLIC	?lGetFaithPerTurnFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFaithPerTurnFromCities
PUBLIC	??_C@_0BF@KAKKKCDB@GetTotalFaithPerTurn?$AA@	; `string'
PUBLIC	?lGetTotalFaithPerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalFaithPerTurn
PUBLIC	??_C@_0M@EFEFPKFD@ChangeFaith?$AA@		; `string'
PUBLIC	?lChangeFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lChangeFaith
PUBLIC	??_C@_08BHKEOCCD@SetFaith?$AA@			; `string'
PUBLIC	?lSetFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lSetFaith
PUBLIC	??_C@_08OGIIPBFO@GetFaith?$AA@			; `string'
PUBLIC	?lGetFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetFaith
PUBLIC	??_C@_0BF@FMOOCJFI@GetNumGreatWorkSlots?$AA@	; `string'
PUBLIC	?lGetNumGreatWorkSlots@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumGreatWorkSlots
PUBLIC	??_C@_0BB@ILOKIPKM@GetNumGreatWorks?$AA@	; `string'
PUBLIC	?lGetNumGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumGreatWorks
PUBLIC	??_C@_0BK@HEKMPHCD@GetWrittenArtifactCulture?$AA@ ; `string'
PUBLIC	?lGetWrittenArtifactCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWrittenArtifactCulture
PUBLIC	??_C@_0BH@EOCBNBBC@GetNextDigCompletePlot?$AA@	; `string'
PUBLIC	?lGetNextDigCompletePlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNextDigCompletePlot
PUBLIC	??_C@_0CC@OKDECLG@GetBuildingOfClosestGreatWorkSlo@ ; `string'
PUBLIC	?lGetBuildingOfClosestGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingOfClosestGreatWorkSlot
PUBLIC	??_C@_0BO@NCOJGFIE@GetCityOfClosestGreatWorkSlot?$AA@ ; `string'
PUBLIC	?lGetCityOfClosestGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityOfClosestGreatWorkSlot
PUBLIC	??_C@_0BK@FHJPCAFI@HasAvailableGreatWorkSlot?$AA@ ; `string'
PUBLIC	?lHasAvailableGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasAvailableGreatWorkSlot
PUBLIC	??_C@_0CD@JOPJDOGM@GetPublicOpinionUnhappinessToolt@ ; `string'
PUBLIC	?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPublicOpinionUnhappinessTooltip
PUBLIC	??_C@_0BM@JKFIJPGB@GetPublicOpinionUnhappiness?$AA@ ; `string'
PUBLIC	?lGetPublicOpinionUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPublicOpinionUnhappiness
PUBLIC	??_C@_0BI@PLLLEMKO@GetPublicOpinionTooltip?$AA@	; `string'
PUBLIC	?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPublicOpinionTooltip
PUBLIC	??_C@_0CC@MILACHKP@GetPublicOpinionPreferredIdeolog@ ; `string'
PUBLIC	?lGetPublicOpinionPreferredIdeology@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPublicOpinionPreferredIdeology
PUBLIC	??_C@_0BF@IIIEGGHB@GetPublicOpinionType?$AA@	; `string'
PUBLIC	?lGetPublicOpinionType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPublicOpinionType
PUBLIC	??_C@_0BO@KBFACNE@GetTourismModifierWithTooltip?$AA@ ; `string'
PUBLIC	?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTourismModifierWithTooltip
PUBLIC	??_C@_0BH@LEGCHAJ@GetTourismModifierWith?$AA@	; `string'
PUBLIC	?lGetTourismModifierWith@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTourismModifierWith
PUBLIC	??_C@_0L@EFCPIKBF@GetTourism?$AA@		; `string'
PUBLIC	?lGetTourism@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetTourism
PUBLIC	??_C@_0BL@PBMHLJLN@GetInfluenceSpyRankTooltip?$AA@ ; `string'
PUBLIC	?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceSpyRankTooltip
PUBLIC	??_C@_0CB@OGCLKEOM@GetInfluenceMajorCivSpyRankBonus@ ; `string'
PUBLIC	?lGetInfluenceMajorCivSpyRankBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceMajorCivSpyRankBonus
PUBLIC	??_C@_0CC@GKICPACC@GetInfluenceCityStateSpyRankBonu@ ; `string'
PUBLIC	?lGetInfluenceCityStateSpyRankBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceCityStateSpyRankBonus
PUBLIC	??_C@_0CD@JDKNKPMO@GetInfluenceTradeRouteScienceBon@ ; `string'
PUBLIC	?lGetInfluenceTradeRouteScienceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceTradeRouteScienceBonus
PUBLIC	??_C@_0BM@IMBBHDIP@GetNumCivsToBeInfluentialOn?$AA@ ; `string'
PUBLIC	?lGetNumCivsToBeInfluentialOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumCivsToBeInfluentialOn
PUBLIC	??_C@_0BI@BFKABOF@GetNumCivsInfluentialOn?$AA@	; `string'
PUBLIC	?lGetNumCivsInfluentialOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumCivsInfluentialOn
PUBLIC	??_C@_0BG@KILNCCEE@GetTurnsToInfluential?$AA@	; `string'
PUBLIC	?lGetTurnsToInfluential@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnsToInfluential
PUBLIC	??_C@_0BC@MHAHIFEE@GetInfluenceTrend?$AA@	; `string'
PUBLIC	?lGetInfluenceTrend@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceTrend
PUBLIC	??_C@_0BC@HMGCNDLI@GetInfluenceLevel?$AA@	; `string'
PUBLIC	?lGetInfluenceLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceLevel
PUBLIC	??_C@_0BE@JOBIMOPK@GetInfluencePerTurn?$AA@	; `string'
PUBLIC	?lGetInfluencePerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluencePerTurn
PUBLIC	??_C@_0BH@OBMBCGGO@GetLastTurnInfluenceOn?$AA@	; `string'
PUBLIC	?lGetLastTurnInfluenceOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLastTurnInfluenceOn
PUBLIC	??_C@_0P@JPDBFNBF@GetInfluenceOn?$AA@		; `string'
PUBLIC	?lGetInfluenceOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceOn
PUBLIC	??_C@_0BL@OMAEEPPN@GetLastTurnLifetimeCulture?$AA@ ; `string'
PUBLIC	?lGetLastTurnLifetimeCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLastTurnLifetimeCulture
PUBLIC	??_C@_0BM@NBLAPLAA@GetJONSCultureEverGenerated?$AA@ ; `string'
PUBLIC	?lGetJONSCultureEverGenerated@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCultureEverGenerated
PUBLIC	??_C@_0BC@LCMCLAMC@ChangeJONSCulture?$AA@	; `string'
PUBLIC	?lChangeJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeJONSCulture
PUBLIC	??_C@_0P@OIILLNMD@SetJONSCulture?$AA@		; `string'
PUBLIC	?lSetJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetJONSCulture
PUBLIC	??_C@_0P@CGJFEHOP@GetJONSCulture?$AA@		; `string'
PUBLIC	?lGetJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulture
PUBLIC	??_C@_0BH@HKAGHDHI@GetCultureCityModifier?$AA@	; `string'
PUBLIC	?lGetCultureCityModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCultureCityModifier
PUBLIC	??_C@_0CA@IGMAMKOC@GetCulturePerTurnFromBonusTurns?$AA@ ; `string'
PUBLIC	?lGetCulturePerTurnFromBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromBonusTurns
PUBLIC	??_C@_0BO@GAMICNIB@GetCulturePerTurnFromReligion?$AA@ ; `string'
PUBLIC	?lGetCulturePerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromReligion
PUBLIC	??_C@_0BL@NGNGJNJH@GetCulturePerTurnFromMinor?$AA@ ; `string'
PUBLIC	?lGetCulturePerTurnFromMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromMinor
PUBLIC	??_C@_0BP@GAJNEDAB@GetCulturePerTurnFromMinorCivs?$AA@ ; `string'
PUBLIC	?lGetCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromMinorCivs
PUBLIC	??_C@_0CG@PIDBKECO@ChangeJONSCulturePerTurnFromMino@ ; `string'
PUBLIC	?lChangeJONSCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeJONSCulturePerTurnFromMinorCivs
PUBLIC	??_C@_0CD@FHKIFDOD@GetJONSCulturePerTurnFromMinorCi@ ; `string'
PUBLIC	?lGetJONSCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromMinorCivs
PUBLIC	??_C@_0CA@CBGAMBNI@ChangeJONSCulturePerTurnForFree?$AA@ ; `string'
PUBLIC	?lChangeJONSCulturePerTurnForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeJONSCulturePerTurnForFree
PUBLIC	??_C@_0BN@BNDOKHMF@GetJONSCulturePerTurnForFree?$AA@ ; `string'
PUBLIC	?lGetJONSCulturePerTurnForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnForFree
PUBLIC	??_C@_0BL@NBNDOJDJ@GetCultureWonderMultiplier?$AA@ ; `string'
PUBLIC	?lGetCultureWonderMultiplier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCultureWonderMultiplier
PUBLIC	??_C@_0CA@MKHKHIDI@GetJONSCulturePerTurnFromTraits?$AA@ ; `string'
PUBLIC	?lGetJONSCulturePerTurnFromTraits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromTraits
PUBLIC	??_C@_0CJ@ODNCODCD@GetJONSCulturePerTurnFromExcessH@ ; `string'
PUBLIC	?lGetJONSCulturePerTurnFromExcessHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromExcessHappiness
PUBLIC	??_C@_0CA@LEPGPJJF@GetJONSCulturePerTurnFromCities?$AA@ ; `string'
PUBLIC	?lGetJONSCulturePerTurnFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromCities
PUBLIC	??_C@_0BL@FGFBMDOG@GetTotalJONSCulturePerTurn?$AA@ ; `string'
PUBLIC	?lGetTotalJONSCulturePerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalJONSCulturePerTurn
PUBLIC	??_C@_0CE@JHKMOFCB@GetJONSCultureEverGeneratedTimes@ ; `string'
PUBLIC	?lGetJONSCultureEverGeneratedTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCultureEverGeneratedTimes100
PUBLIC	??_C@_0BK@HBFLCFLP@ChangeJONSCultureTimes100?$AA@ ; `string'
PUBLIC	?lChangeJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeJONSCultureTimes100
PUBLIC	??_C@_0BH@IGNCMICP@SetJONSCultureTimes100?$AA@	; `string'
PUBLIC	?lSetJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetJONSCultureTimes100
PUBLIC	??_C@_0BH@IHPMOPPA@GetJONSCultureTimes100?$AA@	; `string'
PUBLIC	?lGetJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCultureTimes100
PUBLIC	??_C@_0CI@NJFMHHMB@GetCulturePerTurnFromBonusTurnsT@ ; `string'
PUBLIC	?lGetCulturePerTurnFromBonusTurnsTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromBonusTurnsTimes100
PUBLIC	??_C@_0CG@KPIPIBC@GetCulturePerTurnFromReligionTim@ ; `string'
PUBLIC	?lGetCulturePerTurnFromReligionTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromReligionTimes100
PUBLIC	??_C@_0DB@CKLJBHIK@GetJONSCulturePerTurnFromExcessH@ ; `string'
PUBLIC	?lGetJONSCulturePerTurnFromExcessHappinessTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromExcessHappinessTimes100
PUBLIC	??_C@_0CI@OPIAFPNB@GetJONSCulturePerTurnFromCitiesT@ ; `string'
PUBLIC	?lGetJONSCulturePerTurnFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromCitiesTimes100
PUBLIC	??_C@_0CD@JHEBIGFH@GetTotalJONSCulturePerTurnTimes1@ ; `string'
PUBLIC	?lGetTotalJONSCulturePerTurnTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalJONSCulturePerTurnTimes100
PUBLIC	??_C@_0BJ@LBMKMANM@GetGoldPerTurnFromTraits?$AA@ ; `string'
PUBLIC	?lGetGoldPerTurnFromTraits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerTurnFromTraits
PUBLIC	??_C@_0CG@BDKKIKKJ@GetGoldPerTurnFromTradeRoutesTim@ ; `string'
PUBLIC	?lGetGoldPerTurnFromTradeRoutesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerTurnFromTradeRoutesTimes100
PUBLIC	??_C@_0BO@BFPJNCPO@GetGoldPerTurnFromTradeRoutes?$AA@ ; `string'
PUBLIC	?lGetGoldPerTurnFromTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerTurnFromTradeRoutes
PUBLIC	??_C@_0BL@HCELEJIM@GetGoldPerTurnFromReligion?$AA@ ; `string'
PUBLIC	?lGetGoldPerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerTurnFromReligion
PUBLIC	??_C@_0BO@OCLHOOGP@GetCityConnectionGoldTimes100?$AA@ ; `string'
PUBLIC	?lGetCityConnectionGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityConnectionGoldTimes100
PUBLIC	??_C@_0BG@LIJIKABM@GetCityConnectionGold?$AA@	; `string'
PUBLIC	?lGetCityConnectionGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityConnectionGold
PUBLIC	??_C@_0CD@FCNHAJLA@GetCityConnectionRouteGoldTimes1@ ; `string'
PUBLIC	?lGetCityConnectionRouteGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityConnectionRouteGoldTimes100
PUBLIC	??_C@_0BM@FOPNIPEI@GetGoldPerTurnFromDiplomacy?$AA@ ; `string'
PUBLIC	?lGetGoldPerTurnFromDiplomacy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerTurnFromDiplomacy
PUBLIC	??_C@_0CK@NCEBOAFI@GetGoldFromCitiesMinusTradeRoute@ ; `string'
PUBLIC	?lGetGoldFromCitiesMinusTradeRoutesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldFromCitiesMinusTradeRoutesTimes100
PUBLIC	??_C@_0BK@MDGDLJKD@GetGoldFromCitiesTimes100?$AA@ ; `string'
PUBLIC	?lGetGoldFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldFromCitiesTimes100
PUBLIC	??_C@_0BF@MGEEAMGC@GetLifetimeGrossGold?$AA@	; `string'
PUBLIC	?lGetLifetimeGrossGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLifetimeGrossGold
PUBLIC	??_C@_0BD@EBBJNCCM@CalculateGrossGold?$AA@	; `string'
PUBLIC	?lCalculateGrossGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateGrossGold
PUBLIC	??_C@_0L@EIHJEBHO@ChangeGold?$AA@		; `string'
PUBLIC	?lChangeGold@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lChangeGold
PUBLIC	??_C@_07MBIDAHMN@SetGold?$AA@			; `string'
PUBLIC	?lSetGold@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lSetGold
PUBLIC	??_C@_07DJHCDIBM@GetGold?$AA@			; `string'
PUBLIC	?lGetGold@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetGold
PUBLIC	??_C@_0BD@BKJPLMEF@GetTotalLandScored?$AA@	; `string'
PUBLIC	?lGetTotalLandScored@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalLandScored
PUBLIC	??_C@_0N@NKPGAGBN@GetTotalLand?$AA@		; `string'
PUBLIC	?lGetTotalLand@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetTotalLand
PUBLIC	??_C@_0BN@KLLGPNMM@ChangeNewCityExtraPopulation?$AA@ ; `string'
PUBLIC	?lChangeNewCityExtraPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNewCityExtraPopulation
PUBLIC	??_C@_0BK@KJNHDOEI@GetNewCityExtraPopulation?$AA@ ; `string'
PUBLIC	?lGetNewCityExtraPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNewCityExtraPopulation
PUBLIC	??_C@_0BC@KOHBIIDL@GetRealPopulation?$AA@	; `string'
PUBLIC	?lGetRealPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRealPopulation
PUBLIC	??_C@_0BF@COJNEADI@GetAveragePopulation?$AA@	; `string'
PUBLIC	?lGetAveragePopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAveragePopulation
PUBLIC	??_C@_0BD@BKBNEN@GetTotalPopulation?$AA@	; `string'
PUBLIC	?lGetTotalPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalPopulation
PUBLIC	??_C@_0BA@GNONGEOP@SetStartingPlot?$AA@		; `string'
PUBLIC	?lSetStartingPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetStartingPlot
PUBLIC	??_C@_0BA@FPPLBGPG@GetStartingPlot?$AA@		; `string'
PUBLIC	?lGetStartingPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetStartingPlot
PUBLIC	??_C@_0BL@GPNAOGDH@GetGreatGeneralCombatBonus?$AA@ ; `string'
PUBLIC	?lGetGreatGeneralCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatGeneralCombatBonus
PUBLIC	??_C@_0BL@FAOFCGCH@SetGreatGeneralCombatBonus?$AA@ ; `string'
PUBLIC	?lSetGreatGeneralCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetGreatGeneralCombatBonus
PUBLIC	??_C@_0BA@JJILDMLK@SpecialistYield?$AA@		; `string'
PUBLIC	?lSpecialistYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSpecialistYield
PUBLIC	??_C@_0BG@LBIAFMBO@GreatAdmiralThreshold?$AA@	; `string'
PUBLIC	?lGreatAdmiralThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGreatAdmiralThreshold
PUBLIC	??_C@_0BG@IDFEIBND@GreatGeneralThreshold?$AA@	; `string'
PUBLIC	?lGreatGeneralThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGreatGeneralThreshold
PUBLIC	??_C@_0BE@DNNCMFIN@UnitsGoldenAgeReady?$AA@	; `string'
PUBLIC	?lUnitsGoldenAgeReady@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lUnitsGoldenAgeReady
PUBLIC	??_C@_0BG@PPEINLDL@UnitsGoldenAgeCapable?$AA@	; `string'
PUBLIC	?lUnitsGoldenAgeCapable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lUnitsGoldenAgeCapable
PUBLIC	??_C@_0BK@HNHALJNG@UnitsRequiredForGoldenAge?$AA@ ; `string'
PUBLIC	?lUnitsRequiredForGoldenAge@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lUnitsRequiredForGoldenAge
PUBLIC	??_C@_0BE@EIEJGPKL@GetResearchProgress?$AA@	; `string'
PUBLIC	?lGetResearchProgress@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResearchProgress
PUBLIC	??_C@_0BA@FBPGGIIF@GetResearchCost?$AA@		; `string'
PUBLIC	?lGetResearchCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResearchCost
PUBLIC	??_C@_0BF@HNKBNEGP@GetResearchTurnsLeft?$AA@	; `string'
PUBLIC	?lGetResearchTurnsLeft@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResearchTurnsLeft
PUBLIC	??_C@_0BG@GIJGCCHC@IsNoResearchAvailable?$AA@	; `string'
PUBLIC	?lIsNoResearchAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsNoResearchAvailable
PUBLIC	??_C@_0BI@LLMMAFGE@IsCurrentResearchRepeat?$AA@	; `string'
PUBLIC	?lIsCurrentResearchRepeat@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsCurrentResearchRepeat
PUBLIC	??_C@_0BD@FLLODLHI@GetCurrentResearch?$AA@	; `string'
PUBLIC	?lGetCurrentResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentResearch
PUBLIC	??_C@_0BD@BGEEDLGF@CanResearchForFree?$AA@	; `string'
PUBLIC	?lCanResearchForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanResearchForFree
PUBLIC	??_C@_0M@FOGEBAOH@CanResearch?$AA@		; `string'
PUBLIC	?lCanResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCanResearch
PUBLIC	??_C@_0BA@NDFMOKDP@CanEverResearch?$AA@		; `string'
PUBLIC	?lCanEverResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanEverResearch
PUBLIC	??_C@_0L@OHMEGGKO@IsResearch?$AA@		; `string'
PUBLIC	?lIsResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsResearch
PUBLIC	??_C@_0BK@FBIHCOGE@CalculateResearchModifier?$AA@ ; `string'
PUBLIC	?lCalculateResearchModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateResearchModifier
PUBLIC	??_C@_0BH@CNAKGEP@CalculateInflatedCosts?$AA@	; `string'
PUBLIC	?lCalculateInflatedCosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateInflatedCosts
PUBLIC	??_C@_0BL@IMEFIJEB@CalculateGrossGoldTimes100?$AA@ ; `string'
PUBLIC	?lCalculateGrossGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateGrossGoldTimes100
PUBLIC	??_C@_0BK@FCPPDOGO@CalculateGoldRateTimes100?$AA@ ; `string'
PUBLIC	?lCalculateGoldRateTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateGoldRateTimes100
PUBLIC	??_C@_0BC@CHLLOECA@CalculateGoldRate?$AA@	; `string'
PUBLIC	?lCalculateGoldRate@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateGoldRate
PUBLIC	??_C@_0BO@JGJDHHKA@GetImprovementGoldMaintenance?$AA@ ; `string'
PUBLIC	?lGetImprovementGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetImprovementGoldMaintenance
PUBLIC	??_C@_0CC@JBPCODPN@ChangeBaseBuildingGoldMaintenanc@ ; `string'
PUBLIC	?lChangeBaseBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeBaseBuildingGoldMaintenance
PUBLIC	??_C@_0BP@BPKOFJIG@SetBaseBuildingGoldMaintenance?$AA@ ; `string'
PUBLIC	?lSetBaseBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetBaseBuildingGoldMaintenance
PUBLIC	??_C@_0BL@NNCKIALH@GetBuildingGoldMaintenance?$AA@ ; `string'
PUBLIC	?lGetBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingGoldMaintenance
PUBLIC	??_C@_0BL@IILDGNLA@GetNumMaintenanceFreeUnits?$AA@ ; `string'
PUBLIC	?lGetNumMaintenanceFreeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumMaintenanceFreeUnits
PUBLIC	??_C@_0BE@ONAPNIH@CalculateUnitSupply?$AA@	; `string'
PUBLIC	?lCalculateUnitSupply@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateUnitSupply
PUBLIC	??_C@_0BC@NDAAFPOB@CalculateUnitCost?$AA@	; `string'
PUBLIC	?lCalculateUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateUnitCost
PUBLIC	??_C@_0BE@JCFGPNKE@CalculateTotalYield?$AA@	; `string'
PUBLIC	?lCalculateTotalYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateTotalYield
PUBLIC	??_C@_0BK@MGFJNJFO@GetImprovementUpgradeRate?$AA@ ; `string'
PUBLIC	?lGetImprovementUpgradeRate@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetImprovementUpgradeRate
PUBLIC	??_C@_0N@DFILCDHK@GetBestRoute?$AA@		; `string'
PUBLIC	?lGetBestRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetBestRoute
PUBLIC	??_C@_0BI@MMBOFMHP@IsBuildBlockedByFeature?$AA@	; `string'
PUBLIC	?lIsBuildBlockedByFeature@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsBuildBlockedByFeature
PUBLIC	??_C@_08EMPBKDLI@CanBuild?$AA@			; `string'
PUBLIC	?lCanBuild@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCanBuild
PUBLIC	??_C@_0BE@KJCBDPNA@RemoveBuildingClass?$AA@	; `string'
PUBLIC	?lRemoveBuildingClass@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lRemoveBuildingClass
PUBLIC	??_C@_0BP@NHOMKJMK@GetBuildingClassPrereqBuilding?$AA@ ; `string'
PUBLIC	?lGetBuildingClassPrereqBuilding@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingClassPrereqBuilding
PUBLIC	??_C@_0BC@BNLDEHMF@HasBusyMovingUnit?$AA@	; `string'
PUBLIC	?lHasBusyMovingUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasBusyMovingUnit
PUBLIC	??_C@_0M@PMEHCBOB@HasBusyUnit?$AA@		; `string'
PUBLIC	?lHasBusyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lHasBusyUnit
PUBLIC	??_C@_0BG@CMGDJHNP@GetFirstReadyUnitPlot?$AA@	; `string'
PUBLIC	?lGetFirstReadyUnitPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFirstReadyUnitPlot
PUBLIC	??_C@_0BC@IBIJOAGE@GetFirstReadyUnit?$AA@	; `string'
PUBLIC	?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFirstReadyUnit
PUBLIC	??_C@_0N@ONGFLM@HasReadyUnit?$AA@		; `string'
PUBLIC	?lHasReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lHasReadyUnit
PUBLIC	??_C@_0BL@JBMFKMKF@GetProjectProductionNeeded?$AA@ ; `string'
PUBLIC	?lGetProjectProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetProjectProductionNeeded
PUBLIC	??_C@_0BM@GGLBNBDE@GetBuildingProductionNeeded?$AA@ ; `string'
PUBLIC	?lGetBuildingProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingProductionNeeded
PUBLIC	??_C@_0BI@LJANCJHB@GetUnitProductionNeeded?$AA@	; `string'
PUBLIC	?lGetUnitProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitProductionNeeded
PUBLIC	??_C@_0BJ@IPLLLGBJ@IsProductionMaxedProject?$AA@ ; `string'
PUBLIC	?lIsProductionMaxedProject@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProductionMaxedProject
PUBLIC	??_C@_0BP@LLNEJKAH@IsProductionMaxedBuildingClass?$AA@ ; `string'
PUBLIC	?lIsProductionMaxedBuildingClass@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProductionMaxedBuildingClass
PUBLIC	??_C@_0BL@ICJGIOEE@IsProductionMaxedUnitClass?$AA@ ; `string'
PUBLIC	?lIsProductionMaxedUnitClass@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProductionMaxedUnitClass
PUBLIC	??_C@_0BG@MOMJCOPE@SetFaithPurchaseIndex?$AA@	; `string'
PUBLIC	?lSetFaithPurchaseIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetFaithPurchaseIndex
PUBLIC	??_C@_0BG@DLJPPHLF@GetFaithPurchaseIndex?$AA@	; `string'
PUBLIC	?lGetFaithPurchaseIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFaithPurchaseIndex
PUBLIC	??_C@_0BF@LIIFKFMA@SetFaithPurchaseType?$AA@	; `string'
PUBLIC	?lSetFaithPurchaseType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetFaithPurchaseType
PUBLIC	??_C@_0BF@OBJILDJH@GetFaithPurchaseType?$AA@	; `string'
PUBLIC	?lGetFaithPurchaseType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFaithPurchaseType
PUBLIC	??_C@_0BF@FDIAKFJD@IsCanPurchaseAnyCity?$AA@	; `string'
PUBLIC	?lIsCanPurchaseAnyCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsCanPurchaseAnyCity
PUBLIC	??_C@_0M@LBFPGCCN@CanMaintain?$AA@		; `string'
PUBLIC	?lCanMaintain@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCanMaintain
PUBLIC	??_C@_0L@DCAJPLNN@CanPrepare?$AA@		; `string'
PUBLIC	?lCanPrepare@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCanPrepare
PUBLIC	??_C@_09ENLCPIFP@CanCreate?$AA@			; `string'
PUBLIC	?lCanCreate@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCanCreate
PUBLIC	??_C@_0N@OBKNDGPF@CanConstruct?$AA@		; `string'
PUBLIC	?lCanConstruct@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCanConstruct
PUBLIC	??_C@_08BCMOJMKA@CanTrain?$AA@			; `string'
PUBLIC	?lCanTrain@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCanTrain
PUBLIC	??_C@_05JDGHEPJG@Found?$AA@			; `string'
PUBLIC	?lFound@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lFound
PUBLIC	??_C@_08OEHLFCME@CanFound?$AA@			; `string'
PUBLIC	?lCanFound@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCanFound
PUBLIC	??_C@_0M@HMCFIJNM@CanGetGoody?$AA@		; `string'
PUBLIC	?lCanGetGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCanGetGoody
PUBLIC	??_C@_07JBKNEMND@DoGoody?$AA@			; `string'
PUBLIC	?lDoGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lDoGoody
PUBLIC	??_C@_0N@EPHMEPKG@ReceiveGoody?$AA@		; `string'
PUBLIC	?lReceiveGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lReceiveGoody
PUBLIC	??_C@_0BA@BHIGEENL@CanReceiveGoody?$AA@		; `string'
PUBLIC	?lCanReceiveGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanReceiveGoody
PUBLIC	??_C@_07IHCCGGBK@Disband?$AA@			; `string'
PUBLIC	?lDisband@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lDisband
PUBLIC	??_C@_04LJHIHGEL@Raze?$AA@			; `string'
PUBLIC	?lRaze@CvLuaPlayer@@KAHPAUlua_State@@@Z		; CvLuaPlayer::lRaze
PUBLIC	??_C@_07KCFFLCEK@CanRaze?$AA@			; `string'
PUBLIC	?lCanRaze@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCanRaze
PUBLIC	??_C@_0P@GLAGNJHD@FindNewCapital?$AA@		; `string'
PUBLIC	?lFindNewCapital@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lFindNewCapital
PUBLIC	??_C@_0BE@EOIJEHCF@IsSimultaneousTurns?$AA@	; `string'
PUBLIC	?lIsSimultaneousTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsSimultaneousTurns
PUBLIC	??_C@_0N@DEOCLOCF@IsTurnActive?$AA@		; `string'
PUBLIC	?lIsTurnActive@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsTurnActive
PUBLIC	??_C@_0BJ@MBKAEAGF@IsCapitalConnectedToCity?$AA@ ; `string'
PUBLIC	?lIsCapitalConnectedToCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsCapitalConnectedToCity
PUBLIC	??_C@_0BG@IALDDINH@SetNumWondersBeatenTo?$AA@	; `string'
PUBLIC	?lSetNumWondersBeatenTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumWondersBeatenTo
PUBLIC	??_C@_0BG@HFOFOBJG@GetNumWondersBeatenTo?$AA@	; `string'
PUBLIC	?lGetNumWondersBeatenTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumWondersBeatenTo
PUBLIC	??_C@_0BG@LHOMPBPO@ChangeNumWorldWonders?$AA@	; `string'
PUBLIC	?lChangeNumWorldWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumWorldWonders
PUBLIC	??_C@_0BD@FHKHHPIG@GetNumWorldWonders?$AA@	; `string'
PUBLIC	?lGetNumWorldWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumWorldWonders
PUBLIC	??_C@_0BC@NCAGKFLK@CountNumBuildings?$AA@	; `string'
PUBLIC	?lCountNumBuildings@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCountNumBuildings
PUBLIC	??_C@_0BC@EHNJCKPB@CountCityFeatures?$AA@	; `string'
PUBLIC	?lCountCityFeatures@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCountCityFeatures
PUBLIC	??_C@_0BA@GLKLOHNJ@GetArtStyleType?$AA@		; `string'
PUBLIC	?lGetArtStyleType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetArtStyleType
PUBLIC	??_C@_0BC@MJKEJNBJ@GetWorstEnemyName?$AA@	; `string'
PUBLIC	?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWorstEnemyName
PUBLIC	??_C@_0BE@JHNMEICD@GetStateReligionKey?$AA@	; `string'
PUBLIC	?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetStateReligionKey
PUBLIC	??_C@_0BF@OGNHCBFD@GetStateReligionName?$AA@	; `string'
PUBLIC	?lGetStateReligionName@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetStateReligionName
PUBLIC	??_C@_0M@LIADFGOK@IsWhiteFlag?$AA@		; `string'
PUBLIC	?lIsWhiteFlag@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsWhiteFlag
PUBLIC	??_C@_0BM@PKLHEKF@GetCivilizationAdjectiveKey?$AA@ ; `string'
PUBLIC	?lGetCivilizationAdjectiveKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationAdjectiveKey
PUBLIC	??_C@_0BJ@POHEMKMG@GetCivilizationAdjective?$AA@ ; `string'
PUBLIC	?lGetCivilizationAdjective@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationAdjective
PUBLIC	??_C@_0CD@DMAKHBMP@GetCivilizationShortDescriptionK@ ; `string'
PUBLIC	?lGetCivilizationShortDescriptionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationShortDescriptionKey
PUBLIC	??_C@_0CA@GKGGFCIK@GetCivilizationShortDescription?$AA@ ; `string'
PUBLIC	?lGetCivilizationShortDescription@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationShortDescription
PUBLIC	??_C@_0BO@MPNPKBBC@GetCivilizationDescriptionKey?$AA@ ; `string'
PUBLIC	?lGetCivilizationDescriptionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationDescriptionKey
PUBLIC	??_C@_0BL@NLPGHGO@GetCivilizationDescription?$AA@ ; `string'
PUBLIC	?lGetCivilizationDescription@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationDescription
PUBLIC	??_C@_0M@CDLFADEM@GetNickName?$AA@		; `string'
PUBLIC	?lGetNickName@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetNickName
PUBLIC	??_C@_0L@PJBAHION@GetNameKey?$AA@		; `string'
PUBLIC	?lGetNameKey@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetNameKey
PUBLIC	??_C@_07MMGEHGCI@GetName?$AA@			; `string'
PUBLIC	?lGetName@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetName
PUBLIC	??_C@_0M@NJNEDJLP@IsBarbarian?$AA@		; `string'
PUBLIC	?lIsBarbarian@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsBarbarian
PUBLIC	??_C@_07NIJBBMLI@IsHuman?$AA@			; `string'
PUBLIC	?lIsHuman@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsHuman
PUBLIC	??_C@_09CKDIMNBM@KillUnits?$AA@			; `string'
PUBLIC	?lKillUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lKillUnits
PUBLIC	??_C@_0L@DAJECHKI@ChooseTech?$AA@		; `string'
PUBLIC	?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lChooseTech
PUBLIC	??_C@_0M@PCPIBOKC@AddFreeUnit?$AA@		; `string'
PUBLIC	?lAddFreeUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lAddFreeUnit
PUBLIC	??_C@_0M@IAMPNMBM@DisbandUnit?$AA@		; `string'
PUBLIC	?lDisbandUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lDisbandUnit
PUBLIC	??_C@_0BH@KPFFILAO@InitUnitWithNameOffset?$AA@	; `string'
PUBLIC	?lInitUnitWithNameOffset@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lInitUnitWithNameOffset
PUBLIC	??_C@_08HGECGLD@InitUnit?$AA@			; `string'
PUBLIC	?lInitUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lInitUnit
PUBLIC	??_C@_0P@MHMMCCOA@GetNewCityName?$AA@		; `string'
PUBLIC	?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNewCityName
PUBLIC	??_C@_0L@CLJKNEEI@KillCities?$AA@		; `string'
PUBLIC	?lKillCities@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lKillCities
PUBLIC	??_C@_0M@FNHHCGFC@AcquireCity?$AA@		; `string'
PUBLIC	?lAcquireCity@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lAcquireCity
PUBLIC	??_C@_08NEEDDCEG@InitCity?$AA@			; `string'
PUBLIC	?lInitCity@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lInitCity
PUBLIC	?PushMethods@CvLuaPlayer@@SAXPAUlua_State@@H@Z	; CvLuaPlayer::PushMethods
EXTRN	_lua_setfield:PROC
EXTRN	_lua_pushcclosure:PROC
;	COMDAT ??_C@_0BL@KAGDCCOH@GetLiberationPreviewString?$AA@
CONST	SEGMENT
??_C@_0BL@KAGDCCOH@GetLiberationPreviewString?$AA@ DB 'GetLiberationPrevi'
	DB	'ewString', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CEKNHANK@GetWarmongerPreviewString?$AA@
CONST	SEGMENT
??_C@_0BK@CEKNHANK@GetWarmongerPreviewString?$AA@ DB 'GetWarmongerPreview'
	DB	'String', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PFIGNMFO@HasUnitOfClassType?$AA@
CONST	SEGMENT
??_C@_0BD@PFIGNMFO@HasUnitOfClassType?$AA@ DB 'HasUnitOfClassType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BDGHDECE@HasTurnTimerExpired?$AA@
CONST	SEGMENT
??_C@_0BE@BDGHDECE@HasTurnTimerExpired?$AA@ DB 'HasTurnTimerExpired', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KMAMDGPN@IsObserver?$AA@
CONST	SEGMENT
??_C@_0L@KMAMDGPN@IsObserver?$AA@ DB 'IsObserver', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ILOEPEDD@IsConnected?$AA@
CONST	SEGMENT
??_C@_0M@ILOEPEDD@IsConnected?$AA@ DB 'IsConnected', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DPDBEIAE@GetCommitVoteDetails?$AA@
CONST	SEGMENT
??_C@_0BF@DPDBEIAE@GetCommitVoteDetails?$AA@ DB 'GetCommitVoteDetails', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JJOHNPOE@CanCommitVote?$AA@
CONST	SEGMENT
??_C@_0O@JJOHNPOE@CanCommitVote?$AA@ DB 'CanCommitVote', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LLGEBKGE@GetOthersGreatWorks?$AA@
CONST	SEGMENT
??_C@_0BE@LLGEBKGE@GetOthersGreatWorks?$AA@ DB 'GetOthersGreatWorks', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GJFHNIHJ@GetSwappableGreatMusic?$AA@
CONST	SEGMENT
??_C@_0BH@GJFHNIHJ@GetSwappableGreatMusic?$AA@ DB 'GetSwappableGreatMusic'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@IECAMKOI@GetSwappableGreatArtifact?$AA@
CONST	SEGMENT
??_C@_0BK@IECAMKOI@GetSwappableGreatArtifact?$AA@ DB 'GetSwappableGreatAr'
	DB	'tifact', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PADBEPFE@GetSwappableGreatArt?$AA@
CONST	SEGMENT
??_C@_0BF@PADBEPFE@GetSwappableGreatArt?$AA@ DB 'GetSwappableGreatArt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GDFMGLID@GetSwappableGreatWriting?$AA@
CONST	SEGMENT
??_C@_0BJ@GDFMGLID@GetSwappableGreatWriting?$AA@ DB 'GetSwappableGreatWri'
	DB	'ting', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KKLCHPMA@GetGreatWorks?$AA@
CONST	SEGMENT
??_C@_0O@KKLCHPMA@GetGreatWorks?$AA@ DB 'GetGreatWorks', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BBFCHHGL@GetNumTechDifference?$AA@
CONST	SEGMENT
??_C@_0BF@BBFCHHGL@GetNumTechDifference?$AA@ DB 'GetNumTechDifference', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GPJCHJIN@GetTradeRoutesToYou?$AA@
CONST	SEGMENT
??_C@_0BE@GPJCHJIN@GetTradeRoutesToYou?$AA@ DB 'GetTradeRoutesToYou', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GGJGPFJM@GetTradeRoutesAvailable?$AA@
CONST	SEGMENT
??_C@_0BI@GGJGPFJM@GetTradeRoutesAvailable?$AA@ DB 'GetTradeRoutesAvailab'
	DB	'le', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OHPONKMK@GetTradeRoutes?$AA@
CONST	SEGMENT
??_C@_0P@OHPONKMK@GetTradeRoutes?$AA@ DB 'GetTradeRoutes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JIFAFEOA@GetTradeToYouRoutesTTString?$AA@
CONST	SEGMENT
??_C@_0BM@JIFAFEOA@GetTradeToYouRoutesTTString?$AA@ DB 'GetTradeToYouRout'
	DB	'esTTString', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@IIMJBBCO@GetTradeYourRoutesTTString?$AA@
CONST	SEGMENT
??_C@_0BL@IIMJBBCO@GetTradeYourRoutesTTString?$AA@ DB 'GetTradeYourRoutes'
	DB	'TTString', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OACBPOPN@GetTradeUnitType?$AA@
CONST	SEGMENT
??_C@_0BB@OACBPOPN@GetTradeUnitType?$AA@ DB 'GetTradeUnitType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EADFLLPD@GetNumAvailableTradeUnits?$AA@
CONST	SEGMENT
??_C@_0BK@EADFLLPD@GetNumAvailableTradeUnits?$AA@ DB 'GetNumAvailableTrad'
	DB	'eUnits', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JENMMKCA@GetPotentialAdmiralNewPort?$AA@
CONST	SEGMENT
??_C@_0BL@JENMMKCA@GetPotentialAdmiralNewPort?$AA@ DB 'GetPotentialAdmira'
	DB	'lNewPort', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@MAKPAJHJ@GetPotentialTradeUnitNewHomeCity@
CONST	SEGMENT
??_C@_0CB@MAKPAJHJ@GetPotentialTradeUnitNewHomeCity@ DB 'GetPotentialTrad'
	DB	'eUnitNewHomeCity', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@KHDPEDFE@GetInternationalTradeRouteScienc@
CONST	SEGMENT
??_C@_0CC@KHDPEDFE@GetInternationalTradeRouteScienc@ DB 'GetInternational'
	DB	'TradeRouteScience', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JGHLFNBP@GetInternationalTradeRouteTotal?$AA@
CONST	SEGMENT
??_C@_0CA@JGHLFNBP@GetInternationalTradeRouteTotal?$AA@ DB 'GetInternatio'
	DB	'nalTradeRouteTotal', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@CENOPJDM@GetInternationalTradeRouteDomain@
CONST	SEGMENT
??_C@_0CJ@CENOPJDM@GetInternationalTradeRouteDomain@ DB 'GetInternational'
	DB	'TradeRouteDomainModifier', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@JAMFAEJH@GetInternationalTradeRouteRiverM@
CONST	SEGMENT
??_C@_0CI@JAMFAEJH@GetInternationalTradeRouteRiverM@ DB 'GetInternational'
	DB	'TradeRouteRiverModifier', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@BFEEANCK@GetInternationalTradeRouteOtherT@
CONST	SEGMENT
??_C@_0CK@BFEEANCK@GetInternationalTradeRouteOtherT@ DB 'GetInternational'
	DB	'TradeRouteOtherTraitBonus', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@IPPHMMIB@GetInternationalTradeRoutePolicy@
CONST	SEGMENT
??_C@_0CG@IPPHMMIB@GetInternationalTradeRoutePolicy@ DB 'GetInternational'
	DB	'TradeRoutePolicyBonus', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@BEGIPDME@GetInternationalTradeRouteTheirB@
CONST	SEGMENT
??_C@_0CN@BEGIPDME@GetInternationalTradeRouteTheirB@ DB 'GetInternational'
	DB	'TradeRouteTheirBuildingBonus', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@ELNCKEMC@GetInternationalTradeRouteYourBu@
CONST	SEGMENT
??_C@_0CM@ELNCKEMC@GetInternationalTradeRouteYourBu@ DB 'GetInternational'
	DB	'TradeRouteYourBuildingBonus', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@GOKACKGF@GetInternationalTradeRouteExclus@
CONST	SEGMENT
??_C@_0CJ@GOKACKGF@GetInternationalTradeRouteExclus@ DB 'GetInternational'
	DB	'TradeRouteExclusiveBonus', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@DMPNEJHJ@GetInternationalTradeRouteResour@
CONST	SEGMENT
??_C@_0DA@DMPNEJHJ@GetInternationalTradeRouteResour@ DB 'GetInternational'
	DB	'TradeRouteResourceTraitModifier', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@GKGOKFHF@GetInternationalTradeRouteResour@
CONST	SEGMENT
??_C@_0CI@GKGOKFHF@GetInternationalTradeRouteResour@ DB 'GetInternational'
	DB	'TradeRouteResourceBonus', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@JCOMGEHJ@GetInternationalTradeRouteGPTBon@
CONST	SEGMENT
??_C@_0CD@JCOMGEHJ@GetInternationalTradeRouteGPTBon@ DB 'GetInternational'
	DB	'TradeRouteGPTBonus', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFEOPDF@GetInternationalTradeRouteBaseBo@
CONST	SEGMENT
??_C@_0CE@OFEOPDF@GetInternationalTradeRouteBaseBo@ DB 'GetInternationalT'
	DB	'radeRouteBaseBonus', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@PAFOHMJF@GetPotentialInternationalTradeRo@
CONST	SEGMENT
??_C@_0DA@PAFOHMJF@GetPotentialInternationalTradeRo@ DB 'GetPotentialInte'
	DB	'rnationalTradeRouteDestinations', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@HDPEKAFE@GetNumInternationalTradeRoutesAv@
CONST	SEGMENT
??_C@_0CI@HDPEKAFE@GetNumInternationalTradeRoutesAv@ DB 'GetNumInternatio'
	DB	'nalTradeRoutesAvailable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@JKDKNEEH@GetNumInternationalTradeRoutesUs@
CONST	SEGMENT
??_C@_0CD@JKDKNEEH@GetNumInternationalTradeRoutesUs@ DB 'GetNumInternatio'
	DB	'nalTradeRoutesUsed', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@LOLBOHGG@GetInternationalTradeRoutePlotMo@
CONST	SEGMENT
??_C@_0CP@LOLBOHGG@GetInternationalTradeRoutePlotMo@ DB 'GetInternational'
	DB	'TradeRoutePlotMouseoverToolTip', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@HGLODKBP@GetInternationalTradeRoutePlotTo@
CONST	SEGMENT
??_C@_0CG@HGLODKBP@GetInternationalTradeRoutePlotTo@ DB 'GetInternational'
	DB	'TradeRoutePlotToolTip', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MLPGEPHF@GetTradeRouteRange?$AA@
CONST	SEGMENT
??_C@_0BD@MLPGEPHF@GetTradeRouteRange?$AA@ DB 'GetTradeRouteRange', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GHALEPGN@IsOtherDiplomatVisitingMe?$AA@
CONST	SEGMENT
??_C@_0BK@GHALEPGN@IsOtherDiplomatVisitingMe?$AA@ DB 'IsOtherDiplomatVisi'
	DB	'tingMe', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GILOHAAJ@IsMyDiplomatVisitingThem?$AA@
CONST	SEGMENT
??_C@_0BJ@GILOHAAJ@IsMyDiplomatVisitingThem?$AA@ DB 'IsMyDiplomatVisiting'
	DB	'Them', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MDDGLPM@GetCoupChanceOfSuccess?$AA@
CONST	SEGMENT
??_C@_0BH@MDDGLPM@GetCoupChanceOfSuccess?$AA@ DB 'GetCoupChanceOfSuccess', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CKNMJMAJ@GetRecentIntrigueInfo?$AA@
CONST	SEGMENT
??_C@_0BG@CKNMJMAJ@GetRecentIntrigueInfo?$AA@ DB 'GetRecentIntrigueInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DEPJBAFK@HasRecentIntrigueAbout?$AA@
CONST	SEGMENT
??_C@_0BH@DEPJBAFK@HasRecentIntrigueAbout?$AA@ DB 'HasRecentIntrigueAbout'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NDBIENEG@GetIntrigueMessages?$AA@
CONST	SEGMENT
??_C@_0BE@NDBIENEG@GetIntrigueMessages?$AA@ DB 'GetIntrigueMessages', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CLNJPIEF@GetNumTechsToSteal?$AA@
CONST	SEGMENT
??_C@_0BD@CLNJPIEF@GetNumTechsToSteal?$AA@ DB 'GetNumTechsToSteal', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NNHIHMJL@GetAvailableSpyRelocationCities?$AA@
CONST	SEGMENT
??_C@_0CA@NNHIHMJL@GetAvailableSpyRelocationCities?$AA@ DB 'GetAvailableS'
	DB	'pyRelocationCities', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EJACPBIJ@CanSpyStageCoup?$AA@
CONST	SEGMENT
??_C@_0BA@EJACPBIJ@CanSpyStageCoup?$AA@ DB 'CanSpyStageCoup', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MBCBJNFC@IsSpySchmoozing?$AA@
CONST	SEGMENT
??_C@_0BA@MBCBJNFC@IsSpySchmoozing?$AA@ DB 'IsSpySchmoozing', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HGOCMOKI@IsSpyDiplomat?$AA@
CONST	SEGMENT
??_C@_0O@HGOCMOKI@IsSpyDiplomat?$AA@ DB 'IsSpyDiplomat', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@KFGBCJOJ@HasSpyEstablishedSurveillance?$AA@
CONST	SEGMENT
??_C@_0BO@KFGBCJOJ@HasSpyEstablishedSurveillance?$AA@ DB 'HasSpyEstablish'
	DB	'edSurveillance', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BEHEHPAE@GetEspionageSpies?$AA@
CONST	SEGMENT
??_C@_0BC@BEHEHPAE@GetEspionageSpies?$AA@ DB 'GetEspionageSpies', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EOLELIEH@GetNumUnassignedSpies?$AA@
CONST	SEGMENT
??_C@_0BG@EOLELIEH@GetNumUnassignedSpies?$AA@ DB 'GetNumUnassignedSpies', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HJJJBDNC@GetNumSpies?$AA@
CONST	SEGMENT
??_C@_0M@HJJJBDNC@GetNumSpies?$AA@ DB 'GetNumSpies', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PBHFHBIL@GetEspionageCityStatus?$AA@
CONST	SEGMENT
??_C@_0BH@PBHFHBIL@GetEspionageCityStatus?$AA@ DB 'GetEspionageCityStatus'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BIGNFBBK@IsAllowPuppetPurchasing?$AA@
CONST	SEGMENT
??_C@_0BI@BIGNFBBK@IsAllowPuppetPurchasing?$AA@ DB 'IsAllowPuppetPurchasi'
	DB	'ng', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CGFJJMHO@MayNotAnnex?$AA@
CONST	SEGMENT
??_C@_0M@CGFJJMHO@MayNotAnnex?$AA@ DB 'MayNotAnnex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PELLMMPJ@GetDealTheyreValue?$AA@
CONST	SEGMENT
??_C@_0BD@PELLMMPJ@GetDealTheyreValue?$AA@ DB 'GetDealTheyreValue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BDNMFOBD@GetDealMyValue?$AA@
CONST	SEGMENT
??_C@_0P@BDNMFOBD@GetDealMyValue?$AA@ DB 'GetDealMyValue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FKEIDJJH@GetDealValue?$AA@
CONST	SEGMENT
??_C@_0N@FKEIDJJH@GetDealValue?$AA@ DB 'GetDealValue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MBBOBAGF@GetOpinionTable?$AA@
CONST	SEGMENT
??_C@_0BA@MBBOBAGF@GetOpinionTable?$AA@ DB 'GetOpinionTable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LBBAGBOM@WasResurrectedThisTurnBy?$AA@
CONST	SEGMENT
??_C@_0BJ@LBBAGBOM@WasResurrectedThisTurnBy?$AA@ DB 'WasResurrectedThisTu'
	DB	'rnBy', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CDPPODHF@WasResurrectedBy?$AA@
CONST	SEGMENT
??_C@_0BB@CDPPODHF@WasResurrectedBy?$AA@ DB 'WasResurrectedBy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@ILDNKAHC@GetPlayerBuildingClassHappiness?$AA@
CONST	SEGMENT
??_C@_0CA@ILDNKAHC@GetPlayerBuildingClassHappiness?$AA@ DB 'GetPlayerBuil'
	DB	'dingClassHappiness', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@JGCNPAK@GetPlayerBuildingClassYieldChang@
CONST	SEGMENT
??_C@_0CC@JGCNPAK@GetPlayerBuildingClassYieldChang@ DB 'GetPlayerBuilding'
	DB	'ClassYieldChange', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@JKDHJBPO@GetPolicyEspionageCatchSpiesModi@
CONST	SEGMENT
??_C@_0CF@JKDHJBPO@GetPolicyEspionageCatchSpiesModi@ DB 'GetPolicyEspiona'
	DB	'geCatchSpiesModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OPPCJPCB@GetPolicyEspionageModifier?$AA@
CONST	SEGMENT
??_C@_0BL@OPPCJPCB@GetPolicyEspionageModifier?$AA@ DB 'GetPolicyEspionage'
	DB	'Modifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@NHAOMIBG@GetPolicyBuildingClassYieldChang@
CONST	SEGMENT
??_C@_0CC@NHAOMIBG@GetPolicyBuildingClassYieldChang@ DB 'GetPolicyBuildin'
	DB	'gClassYieldChange', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@CALOGBHI@GetPolicyBuildingClassYieldModif@
CONST	SEGMENT
??_C@_0CE@CALOGBHI@GetPolicyBuildingClassYieldModif@ DB 'GetPolicyBuildin'
	DB	'gClassYieldModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@LFAMHIME@GetNaturalWonderYieldModifier?$AA@
CONST	SEGMENT
??_C@_0BO@LFAMHIME@GetNaturalWonderYieldModifier?$AA@ DB 'GetNaturalWonde'
	DB	'rYieldModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HADFEIC@AddTemporaryDominanceZone?$AA@
CONST	SEGMENT
??_C@_0BK@HADFEIC@AddTemporaryDominanceZone?$AA@ DB 'AddTemporaryDominanc'
	DB	'eZone', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OACLDGB@SetEmbarkedGraphicOverride?$AA@
CONST	SEGMENT
??_C@_0BL@OACLDGB@SetEmbarkedGraphicOverride?$AA@ DB 'SetEmbarkedGraphicO'
	DB	'verride', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DBDHHDHB@GetEmbarkedGraphicOverride?$AA@
CONST	SEGMENT
??_C@_0BL@DBDHHDHB@GetEmbarkedGraphicOverride?$AA@ DB 'GetEmbarkedGraphic'
	DB	'Override', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JCAMHNPA@ChangeFreePromotionCount?$AA@
CONST	SEGMENT
??_C@_0BJ@JCAMHNPA@ChangeFreePromotionCount?$AA@ DB 'ChangeFreePromotionC'
	DB	'ount', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IKABNDKF@IsFreePromotion?$AA@
CONST	SEGMENT
??_C@_0BA@IKABNDKF@IsFreePromotion?$AA@ DB 'IsFreePromotion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IMOAGJCF@GetFreePromotionCount?$AA@
CONST	SEGMENT
??_C@_0BG@IMOAGJCF@GetFreePromotionCount?$AA@ DB 'GetFreePromotionCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HCFKLKFB@GetPrevCity?$AA@
CONST	SEGMENT
??_C@_0M@HCFKLKFB@GetPrevCity?$AA@ DB 'GetPrevCity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CLOHEHIF@GetNextCity?$AA@
CONST	SEGMENT
??_C@_0M@CLOHEHIF@GetNextCity?$AA@ DB 'GetNextCity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@KMIEOMED@GetExtraBuildingHappinessFromPol@
CONST	SEGMENT
??_C@_0CG@KMIEOMED@GetExtraBuildingHappinessFromPol@ DB 'GetExtraBuilding'
	DB	'HappinessFromPolicies', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DLAHPJGM@GetMayaCalendarLongString?$AA@
CONST	SEGMENT
??_C@_0BK@DLAHPJGM@GetMayaCalendarLongString?$AA@ DB 'GetMayaCalendarLong'
	DB	'String', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MJJNOJKC@GetMayaCalendarString?$AA@
CONST	SEGMENT
??_C@_0BG@MJJNOJKC@GetMayaCalendarString?$AA@ DB 'GetMayaCalendarString', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NIFMMLEP@IsUsingMayaCalendar?$AA@
CONST	SEGMENT
??_C@_0BE@NIFMMLEP@IsUsingMayaCalendar?$AA@ DB 'IsUsingMayaCalendar', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@NEKJJLBB@GetNumTurnsBeforeMinorAlliesRefu@
CONST	SEGMENT
??_C@_0CJ@NEKJJLBB@GetNumTurnsBeforeMinorAlliesRefu@ DB 'GetNumTurnsBefor'
	DB	'eMinorAlliesRefuseBribes', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CNCMJHLM@IsAbleToAnnexCityStates?$AA@
CONST	SEGMENT
??_C@_0BI@CNCMJHLM@IsAbleToAnnexCityStates?$AA@ DB 'IsAbleToAnnexCityStat'
	DB	'es', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IDMIFDOJ@GetHappinessFromLuxury?$AA@
CONST	SEGMENT
??_C@_0BH@IDMIFDOJ@GetHappinessFromLuxury?$AA@ DB 'GetHappinessFromLuxury'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IMDAONMJ@IsTraitBonusReligiousBelief?$AA@
CONST	SEGMENT
??_C@_0BM@IMDAONMJ@IsTraitBonusReligiousBelief?$AA@ DB 'IsTraitBonusRelig'
	DB	'iousBelief', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@LMBAJOCL@GetTraitGreatScientistRateModifi@
CONST	SEGMENT
??_C@_0CD@LMBAJOCL@GetTraitGreatScientistRateModifi@ DB 'GetTraitGreatSci'
	DB	'entistRateModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@MDEOMKGO@GetTraitGreatGeneralExtraBonus?$AA@
CONST	SEGMENT
??_C@_0BP@MDEOMKGO@GetTraitGreatGeneralExtraBonus?$AA@ DB 'GetTraitGreatG'
	DB	'eneralExtraBonus', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@EMLNFCFE@GetTraitCityStateCombatModifier?$AA@
CONST	SEGMENT
??_C@_0CA@EMLNFCFE@GetTraitCityStateCombatModifier?$AA@ DB 'GetTraitCityS'
	DB	'tateCombatModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@DCDDHCMD@GetTraitGoldenAgeCombatModifier?$AA@
CONST	SEGMENT
??_C@_0CA@DCDDHCMD@GetTraitGoldenAgeCombatModifier?$AA@ DB 'GetTraitGolde'
	DB	'nAgeCombatModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@EMKOFIFL@IsFreeMayaGreatPersonChoice?$AA@
CONST	SEGMENT
??_C@_0BM@EMKOFIFL@IsFreeMayaGreatPersonChoice?$AA@ DB 'IsFreeMayaGreatPe'
	DB	'rsonChoice', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JDHKMAFF@GetUnitBaktun?$AA@
CONST	SEGMENT
??_C@_0O@JDHKMAFF@GetUnitBaktun?$AA@ DB 'GetUnitBaktun', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FPGICLJB@ChangeNumFaithGreatPeople?$AA@
CONST	SEGMENT
??_C@_0BK@FPGICLJB@ChangeNumFaithGreatPeople?$AA@ DB 'ChangeNumFaithGreat'
	DB	'People', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KIOBMGAB@SetNumFaithGreatPeople?$AA@
CONST	SEGMENT
??_C@_0BH@KIOBMGAB@SetNumFaithGreatPeople?$AA@ DB 'SetNumFaithGreatPeople'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KJMPOBNO@GetNumFaithGreatPeople?$AA@
CONST	SEGMENT
??_C@_0BH@KJMPOBNO@GetNumFaithGreatPeople?$AA@ DB 'GetNumFaithGreatPeople'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GAIHGDCB@ChangeNumMayaBoosts?$AA@
CONST	SEGMENT
??_C@_0BE@GAIHGDCB@ChangeNumMayaBoosts?$AA@ DB 'ChangeNumMayaBoosts', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HCNHEJE@SetNumMayaBoosts?$AA@
CONST	SEGMENT
??_C@_0BB@HCNHEJE@SetNumMayaBoosts?$AA@ DB 'SetNumMayaBoosts', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GDHEMKCG@GetNumMayaBoosts?$AA@
CONST	SEGMENT
??_C@_0BB@GDHEMKCG@GetNumMayaBoosts?$AA@ DB 'GetNumMayaBoosts', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DACMHFAL@ChangeNumFreeGreatPeople?$AA@
CONST	SEGMENT
??_C@_0BJ@DACMHFAL@ChangeNumFreeGreatPeople?$AA@ DB 'ChangeNumFreeGreatPe'
	DB	'ople', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NLJGLIJP@SetNumFreeGreatPeople?$AA@
CONST	SEGMENT
??_C@_0BG@NLJGLIJP@SetNumFreeGreatPeople?$AA@ DB 'SetNumFreeGreatPeople', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@COMAGBNO@GetNumFreeGreatPeople?$AA@
CONST	SEGMENT
??_C@_0BG@COMAGBNO@GetNumFreeGreatPeople?$AA@ DB 'GetNumFreeGreatPeople', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KMAGMKHA@ChangeNumFreeTenets?$AA@
CONST	SEGMENT
??_C@_0BE@KMAGMKHA@ChangeNumFreeTenets?$AA@ DB 'ChangeNumFreeTenets', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MLKMNNMF@SetNumFreeTenets?$AA@
CONST	SEGMENT
??_C@_0BB@MLKMNNMF@SetNumFreeTenets?$AA@ DB 'SetNumFreeTenets', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KPPFGDHH@GetNumFreeTenets?$AA@
CONST	SEGMENT
??_C@_0BB@KPPFGDHH@GetNumFreeTenets?$AA@ DB 'GetNumFreeTenets', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NPJFLNFP@ChangeNumFreePolicies?$AA@
CONST	SEGMENT
??_C@_0BG@NPJFLNFP@ChangeNumFreePolicies?$AA@ DB 'ChangeNumFreePolicies', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MFPEAFMP@SetNumFreePolicies?$AA@
CONST	SEGMENT
??_C@_0BD@MFPEAFMP@SetNumFreePolicies?$AA@ DB 'SetNumFreePolicies', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DPNODDCH@GetNumFreePolicies?$AA@
CONST	SEGMENT
??_C@_0BD@DPNODDCH@GetNumFreePolicies?$AA@ DB 'GetNumFreePolicies', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LBJBLEHP@SetNumFreeTechs?$AA@
CONST	SEGMENT
??_C@_0BA@LBJBLEHP@SetNumFreeTechs?$AA@ DB 'SetNumFreeTechs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IDIHMGGG@GetNumFreeTechs?$AA@
CONST	SEGMENT
??_C@_0BA@IDIHMGGG@GetNumFreeTechs?$AA@ DB 'GetNumFreeTechs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OAGGOFCC@GetEverTrainedBuilder?$AA@
CONST	SEGMENT
??_C@_0BG@OAGGOFCC@GetEverTrainedBuilder?$AA@ DB 'GetEverTrainedBuilder', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EHCBLBBJ@GetAnyUnitHasOrderToGoody?$AA@
CONST	SEGMENT
??_C@_0BK@EHCBLBBJ@GetAnyUnitHasOrderToGoody?$AA@ DB 'GetAnyUnitHasOrderT'
	DB	'oGoody', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GECDJOIG@GetPlotHasOrder?$AA@
CONST	SEGMENT
??_C@_0BA@GECDJOIG@GetPlotHasOrder?$AA@ DB 'GetPlotHasOrder', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@ELMHMJBB@IsAnyGoodyPlotAccessible?$AA@
CONST	SEGMENT
??_C@_0BJ@ELMHMJBB@IsAnyGoodyPlotAccessible?$AA@ DB 'IsAnyGoodyPlotAccess'
	DB	'ible', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EJDMDOAD@GetClosestGoodyPlot?$AA@
CONST	SEGMENT
??_C@_0BE@EJDMDOAD@GetClosestGoodyPlot?$AA@ DB 'GetClosestGoodyPlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FBANDIAJ@GetEverPoppedGoody?$AA@
CONST	SEGMENT
??_C@_0BD@FBANDIAJ@GetEverPoppedGoody?$AA@ DB 'GetEverPoppedGoody', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CDGMGBGG@GetPlayerVisiblePlot?$AA@
CONST	SEGMENT
??_C@_0BF@CDGMGBGG@GetPlayerVisiblePlot?$AA@ DB 'GetPlayerVisiblePlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BHJMCOLH@IsAnyPlotImproved?$AA@
CONST	SEGMENT
??_C@_0BC@BHJMCOLH@IsAnyPlotImproved?$AA@ DB 'IsAnyPlotImproved', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@NDFOBFBD@GetUnimprovedAvailableLuxuryReso@
CONST	SEGMENT
??_C@_0CF@NDFOBFBD@GetUnimprovedAvailableLuxuryReso@ DB 'GetUnimprovedAva'
	DB	'ilableLuxuryResource', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@NABAJGIG@GetRecommendedFoundCityPlots?$AA@
CONST	SEGMENT
??_C@_0BN@NABAJGIG@GetRecommendedFoundCityPlots?$AA@ DB 'GetRecommendedFo'
	DB	'undCityPlots', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@IEOBAACD@GetRecommendedWorkerPlots?$AA@
CONST	SEGMENT
??_C@_0BK@IEOBAACD@GetRecommendedWorkerPlots?$AA@ DB 'GetRecommendedWorke'
	DB	'rPlots', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NLGHGOFB@AddNotification?$AA@
CONST	SEGMENT
??_C@_0BA@NLGHGOFB@AddNotification?$AA@ DB 'AddNotification', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HFINLBBC@GetNotificationDismissed?$AA@
CONST	SEGMENT
??_C@_0BJ@HFINLBBC@GetNotificationDismissed?$AA@ DB 'GetNotificationDismi'
	DB	'ssed', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EKFOPKPG@GetNotificationTurn?$AA@
CONST	SEGMENT
??_C@_0BE@EKFOPKPG@GetNotificationTurn?$AA@ DB 'GetNotificationTurn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GCCNKKFJ@GetNotificationIndex?$AA@
CONST	SEGMENT
??_C@_0BF@GCCNKKFJ@GetNotificationIndex?$AA@ DB 'GetNotificationIndex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@ELPNEPCO@GetNotificationSummaryStr?$AA@
CONST	SEGMENT
??_C@_0BK@ELPNEPCO@GetNotificationSummaryStr?$AA@ DB 'GetNotificationSumm'
	DB	'aryStr', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LHEAKJLF@GetNotificationStr?$AA@
CONST	SEGMENT
??_C@_0BD@LHEAKJLF@GetNotificationStr?$AA@ DB 'GetNotificationStr', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GFFKJPPB@GetNumNotifications?$AA@
CONST	SEGMENT
??_C@_0BE@GFFKJPPB@GetNumNotifications?$AA@ DB 'GetNumNotifications', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NIECGIBE@DoForceDenounce?$AA@
CONST	SEGMENT
??_C@_0BA@NIECGIBE@DoForceDenounce?$AA@ DB 'DoForceDenounce', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CDNNFMCG@DoForceDoF?$AA@
CONST	SEGMENT
??_C@_0L@CDNNFMCG@DoForceDoF?$AA@ DB 'DoForceDoF', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GOJPPKLC@GetNumTimesIntrigueSharedBy?$AA@
CONST	SEGMENT
??_C@_0BM@GOJPPKLC@GetNumTimesIntrigueSharedBy?$AA@ DB 'GetNumTimesIntrig'
	DB	'ueSharedBy', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@ONPDCEII@GetNumTimesRobbedBy?$AA@
CONST	SEGMENT
??_C@_0BE@ONPDCEII@GetNumTimesRobbedBy?$AA@ DB 'GetNumTimesRobbedBy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@HNAICDID@IsAngryAboutSidedWithTheirProtec@
CONST	SEGMENT
??_C@_0CJ@HNAICDID@IsAngryAboutSidedWithTheirProtec@ DB 'IsAngryAboutSide'
	DB	'dWithTheirProtectedMinor', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@CKPNELPJ@IsAngryAboutProtectedMinorBullie@
CONST	SEGMENT
??_C@_0CC@CKPNELPJ@IsAngryAboutProtectedMinorBullie@ DB 'IsAngryAboutProt'
	DB	'ectedMinorBullied', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HDPPOBNJ@IsAngryAboutProtectedMinorAttack@
CONST	SEGMENT
??_C@_0CD@HDPPOBNJ@IsAngryAboutProtectedMinorAttack@ DB 'IsAngryAboutProt'
	DB	'ectedMinorAttacked', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@CJDCIHKM@IsAngryAboutProtectedMinorKilled@
CONST	SEGMENT
??_C@_0CB@CJDCIHKM@IsAngryAboutProtectedMinorKilled@ DB 'IsAngryAboutProt'
	DB	'ectedMinorKilled', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JNJDNMPI@IsCapitalCapturedBy?$AA@
CONST	SEGMENT
??_C@_0BE@JNJDNMPI@IsCapitalCapturedBy?$AA@ DB 'IsCapitalCapturedBy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09DPPFJHEB@IsNukedBy?$AA@
CONST	SEGMENT
??_C@_09DPPFJHEB@IsNukedBy?$AA@ DB 'IsNukedBy', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GACGPEPG@IsHasPaidTributeTo?$AA@
CONST	SEGMENT
??_C@_0BD@GACGPEPG@IsHasPaidTributeTo?$AA@ DB 'IsHasPaidTributeTo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IPDLFGDH@IsGaveAssistanceTo?$AA@
CONST	SEGMENT
??_C@_0BD@IPDLFGDH@IsGaveAssistanceTo?$AA@ DB 'IsGaveAssistanceTo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KCNKODGD@GetRecentAssistValue?$AA@
CONST	SEGMENT
??_C@_0BF@KCNKODGD@GetRecentAssistValue?$AA@ DB 'GetRecentAssistValue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IFLMMGKH@GetCommonFoeValue?$AA@
CONST	SEGMENT
??_C@_0BC@IFLMMGKH@GetCommonFoeValue?$AA@ DB 'GetCommonFoeValue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FPCOMDEJ@GetRecentTradeValue?$AA@
CONST	SEGMENT
??_C@_0BE@FPCOMDEJ@GetRecentTradeValue?$AA@ DB 'GetRecentTradeValue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DMOODLIP@IsPlayerRecklessExpander?$AA@
CONST	SEGMENT
??_C@_0BJ@DMOODLIP@IsPlayerRecklessExpander?$AA@ DB 'IsPlayerRecklessExpa'
	DB	'nder', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PMGAKDPI@IsDenouncingPlayer?$AA@
CONST	SEGMENT
??_C@_0BD@PMGAKDPI@IsDenouncingPlayer?$AA@ DB 'IsDenouncingPlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FHGEGONP@GetDenouncedPlayerCounter?$AA@
CONST	SEGMENT
??_C@_0BK@FHGEGONP@GetDenouncedPlayerCounter?$AA@ DB 'GetDenouncedPlayerC'
	DB	'ounter', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HDCKECNO@IsDenouncedPlayer?$AA@
CONST	SEGMENT
??_C@_0BC@HDCKECNO@IsDenouncedPlayer?$AA@ DB 'IsDenouncedPlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@PGJLPOEE@IsHasPlayerBulliedProtectedMinor@
CONST	SEGMENT
??_C@_0CB@PGJLPOEE@IsHasPlayerBulliedProtectedMinor@ DB 'IsHasPlayerBulli'
	DB	'edProtectedMinor', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@DIAPIEBB@GetTurnsSincePlayerBulliedProtec@
CONST	SEGMENT
??_C@_0CJ@DIAPIEBB@GetTurnsSincePlayerBulliedProtec@ DB 'GetTurnsSincePla'
	DB	'yerBulliedProtectedMinor', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@OFLJGKFO@GetOtherPlayerNumProtectedMinors@
CONST	SEGMENT
??_C@_0CJ@OFLJGKFO@GetOtherPlayerNumProtectedMinors@ DB 'GetOtherPlayerNu'
	DB	'mProtectedMinorsAttacked', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@NFMJJPAP@GetOtherPlayerNumProtectedMinors@
CONST	SEGMENT
??_C@_0CH@NFMJJPAP@GetOtherPlayerNumProtectedMinors@ DB 'GetOtherPlayerNu'
	DB	'mProtectedMinorsKilled', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HMMNHODE@IsPlayerBrokenCoopWarPromise?$AA@
CONST	SEGMENT
??_C@_0BN@HMMNHODE@IsPlayerBrokenCoopWarPromise?$AA@ DB 'IsPlayerBrokenCo'
	DB	'opWarPromise', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@CMEPJCFP@IsPlayerIgnoredNoDiggingPromise?$AA@
CONST	SEGMENT
??_C@_0CA@CMEPJCFP@IsPlayerIgnoredNoDiggingPromise?$AA@ DB 'IsPlayerIgnor'
	DB	'edNoDiggingPromise', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@LFBLAEPB@IsPlayerBrokenNoDiggingPromise?$AA@
CONST	SEGMENT
??_C@_0BP@LFBLAEPB@IsPlayerBrokenNoDiggingPromise?$AA@ DB 'IsPlayerBroken'
	DB	'NoDiggingPromise', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@PNGBPAJN@IsPlayerIgnoredNoConvertPromise?$AA@
CONST	SEGMENT
??_C@_0CA@PNGBPAJN@IsPlayerIgnoredNoConvertPromise?$AA@ DB 'IsPlayerIgnor'
	DB	'edNoConvertPromise', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@GEDFGGDD@IsPlayerBrokenNoConvertPromise?$AA@
CONST	SEGMENT
??_C@_0BP@GEDFGGDD@IsPlayerBrokenNoConvertPromise?$AA@ DB 'IsPlayerBroken'
	DB	'NoConvertPromise', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@OGDKEICG@IsPlayerForgivenForSpying?$AA@
CONST	SEGMENT
??_C@_0BK@OGDKEICG@IsPlayerForgivenForSpying?$AA@ DB 'IsPlayerForgivenFor'
	DB	'Spying', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JEDEIMK@IsPlayerIgnoredSpyPromise?$AA@
CONST	SEGMENT
??_C@_0BK@JEDEIMK@IsPlayerIgnoredSpyPromise?$AA@ DB 'IsPlayerIgnoredSpyPr'
	DB	'omise', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JNJJEOK@IsPlayerBrokenSpyPromise?$AA@
CONST	SEGMENT
??_C@_0BJ@JNJJEOK@IsPlayerBrokenSpyPromise?$AA@ DB 'IsPlayerBrokenSpyProm'
	DB	'ise', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@KFJMCHGJ@IsPlayerIgnoredBullyCityStatePro@
CONST	SEGMENT
??_C@_0CF@KFJMCHGJ@IsPlayerIgnoredBullyCityStatePro@ DB 'IsPlayerIgnoredB'
	DB	'ullyCityStatePromise', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@DJJGAPNJ@IsPlayerBrokenBullyCityStateProm@
CONST	SEGMENT
??_C@_0CE@DJJGAPNJ@IsPlayerBrokenBullyCityStateProm@ DB 'IsPlayerBrokenBu'
	DB	'llyCityStatePromise', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@KKPEMKMO@IsPlayerIgnoredAttackCityStatePr@
CONST	SEGMENT
??_C@_0CG@KKPEMKMO@IsPlayerIgnoredAttackCityStatePr@ DB 'IsPlayerIgnoredA'
	DB	'ttackCityStatePromise', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@GBAJHDGK@IsPlayerBrokenAttackCityStatePro@
CONST	SEGMENT
??_C@_0CF@GBAJHDGK@IsPlayerBrokenAttackCityStatePro@ DB 'IsPlayerBrokenAt'
	DB	'tackCityStatePromise', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@GFDNDNLB@IsPlayerIgnoredBorderPromise?$AA@
CONST	SEGMENT
??_C@_0BN@GFDNDNLB@IsPlayerIgnoredBorderPromise?$AA@ DB 'IsPlayerIgnoredB'
	DB	'orderPromise', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GACHILBI@IsPlayerBrokenBorderPromise?$AA@
CONST	SEGMENT
??_C@_0BM@GACHILBI@IsPlayerBrokenBorderPromise?$AA@ DB 'IsPlayerBrokenBor'
	DB	'derPromise', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@DMHDJLCE@IsPlayerIgnoredExpansionPromise?$AA@
CONST	SEGMENT
??_C@_0CA@DMHDJLCE@IsPlayerIgnoredExpansionPromise?$AA@ DB 'IsPlayerIgnor'
	DB	'edExpansionPromise', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KFCHANIK@IsPlayerBrokenExpansionPromise?$AA@
CONST	SEGMENT
??_C@_0BP@KFCHANIK@IsPlayerBrokenExpansionPromise?$AA@ DB 'IsPlayerBroken'
	DB	'ExpansionPromise', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@EKOONDLN@IsPlayerIgnoredMilitaryPromise?$AA@
CONST	SEGMENT
??_C@_0BP@EKOONDLN@IsPlayerIgnoredMilitaryPromise?$AA@ DB 'IsPlayerIgnore'
	DB	'dMilitaryPromise', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BHCJMHLO@IsPlayerBrokenMilitaryPromise?$AA@
CONST	SEGMENT
??_C@_0BO@BHCJMHLO@IsPlayerBrokenMilitaryPromise?$AA@ DB 'IsPlayerBrokenM'
	DB	'ilitaryPromise', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@FJLIBNNG@HasOthersReligionInMostCities?$AA@
CONST	SEGMENT
??_C@_0BO@FJLIBNNG@HasOthersReligionInMostCities?$AA@ DB 'HasOthersReligi'
	DB	'onInMostCities', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@OAEOBIFG@GetNegativeArchaeologyPoints?$AA@
CONST	SEGMENT
??_C@_0BN@OAEOBIFG@GetNegativeArchaeologyPoints?$AA@ DB 'GetNegativeArcha'
	DB	'eologyPoints', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@NJLECOGK@GetNegativeReligiousConversionPo@
CONST	SEGMENT
??_C@_0CF@NJLECOGK@GetNegativeReligiousConversionPo@ DB 'GetNegativeRelig'
	DB	'iousConversionPoints', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MPACPFAF@GetNumTimesCultureBombed?$AA@
CONST	SEGMENT
??_C@_0BJ@MPACPFAF@GetNumTimesCultureBombed?$AA@ DB 'GetNumTimesCultureBo'
	DB	'mbed', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@BIEGDACJ@GetNumLandmarksBuiltForMe?$AA@
CONST	SEGMENT
??_C@_0BK@BIEGDACJ@GetNumLandmarksBuiltForMe?$AA@ DB 'GetNumLandmarksBuil'
	DB	'tForMe', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GINOMEII@GetNumCiviliansReturnedToMe?$AA@
CONST	SEGMENT
??_C@_0BM@GINOMEII@GetNumCiviliansReturnedToMe?$AA@ DB 'GetNumCiviliansRe'
	DB	'turnedToMe', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IBMCHFPO@IsDemandEverMade?$AA@
CONST	SEGMENT
??_C@_0BB@IBMCHFPO@IsDemandEverMade?$AA@ DB 'IsDemandEverMade', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@CHPAFEIM@IsPlayerStopSpyingRequestEverAsk@
CONST	SEGMENT
??_C@_0CD@CHPAFEIM@IsPlayerStopSpyingRequestEverAsk@ DB 'IsPlayerStopSpyi'
	DB	'ngRequestEverAsked', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@GCCLPOAG@IsPlayerNoSettleRequestEverAsked@
CONST	SEGMENT
??_C@_0CB@GCCLPOAG@IsPlayerNoSettleRequestEverAsked@ DB 'IsPlayerNoSettle'
	DB	'RequestEverAsked', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JHLIJIIK@GetWarmongerThreat?$AA@
CONST	SEGMENT
??_C@_0BD@JHLIJIIK@GetWarmongerThreat?$AA@ DB 'GetWarmongerThreat', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GGMBMANL@GetMinorCivDisputeLevel?$AA@
CONST	SEGMENT
??_C@_0BI@GGMBMANL@GetMinorCivDisputeLevel?$AA@ DB 'GetMinorCivDisputeLev'
	DB	'el', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MFADFIMK@GetWonderDisputeLevel?$AA@
CONST	SEGMENT
??_C@_0BG@MFADFIMK@GetWonderDisputeLevel?$AA@ DB 'GetWonderDisputeLevel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JMIFEEOF@GetVictoryDisputeLevel?$AA@
CONST	SEGMENT
??_C@_0BH@JMIFEEOF@GetVictoryDisputeLevel?$AA@ DB 'GetVictoryDisputeLevel'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CELFPMFO@GetLandDisputeLevel?$AA@
CONST	SEGMENT
??_C@_0BE@CELFPMFO@GetLandDisputeLevel?$AA@ DB 'GetLandDisputeLevel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MIPPFJMJ@GetNumWarsFought?$AA@
CONST	SEGMENT
??_C@_0BB@MIPPFJMJ@GetNumWarsFought?$AA@ DB 'GetNumWarsFought', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@ONIAOIGJ@GetCoopWarAcceptedState?$AA@
CONST	SEGMENT
??_C@_0BI@ONIAOIGJ@GetCoopWarAcceptedState?$AA@ DB 'GetCoopWarAcceptedSta'
	DB	'te', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@EBKDJHNI@GetWeDeclaredWarOnFriendCount?$AA@
CONST	SEGMENT
??_C@_0BO@EBKDJHNI@GetWeDeclaredWarOnFriendCount?$AA@ DB 'GetWeDeclaredWa'
	DB	'rOnFriendCount', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MGHNFKKL@IsFriendDeclaredWarOnUs?$AA@
CONST	SEGMENT
??_C@_0BI@MGHNFKKL@IsFriendDeclaredWarOnUs?$AA@ DB 'IsFriendDeclaredWarOn'
	DB	'Us', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@IDKHACJI@GetWeDenouncedFriendCount?$AA@
CONST	SEGMENT
??_C@_0BK@IDKHACJI@GetWeDenouncedFriendCount?$AA@ DB 'GetWeDenouncedFrien'
	DB	'dCount', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JKLIMJPC@IsFriendDenouncedUs?$AA@
CONST	SEGMENT
??_C@_0BE@JKLIMJPC@IsFriendDenouncedUs?$AA@ DB 'IsFriendDenouncedUs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JPDNMDCJ@GetNumFriendsDenouncedBy?$AA@
CONST	SEGMENT
??_C@_0BJ@JPDNMDCJ@GetNumFriendsDenouncedBy?$AA@ DB 'GetNumFriendsDenounc'
	DB	'edBy', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HIMKCHLJ@IsUntrustworthyFriend?$AA@
CONST	SEGMENT
??_C@_0BG@HIMKCHLJ@IsUntrustworthyFriend?$AA@ DB 'IsUntrustworthyFriend', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DPEOLAFH@IsPlayerDenouncedEnemy?$AA@
CONST	SEGMENT
??_C@_0BH@DPEOLAFH@IsPlayerDenouncedEnemy?$AA@ DB 'IsPlayerDenouncedEnemy'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KIHAIMCC@IsPlayerDenouncedFriend?$AA@
CONST	SEGMENT
??_C@_0BI@KIHAIMCC@IsPlayerDenouncedFriend?$AA@ DB 'IsPlayerDenouncedFrie'
	DB	'nd', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CEGOAGDE@IsPlayerDoFwithAnyEnemy?$AA@
CONST	SEGMENT
??_C@_0BI@CEGOAGDE@IsPlayerDoFwithAnyEnemy?$AA@ DB 'IsPlayerDoFwithAnyEne'
	DB	'my', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HMNAJMHG@IsPlayerDoFwithAnyFriend?$AA@
CONST	SEGMENT
??_C@_0BJ@HMNAJMHG@IsPlayerDoFwithAnyFriend?$AA@ DB 'IsPlayerDoFwithAnyFr'
	DB	'iend', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MFBMMOPK@GetDoFCounter?$AA@
CONST	SEGMENT
??_C@_0O@MFBMMOPK@GetDoFCounter?$AA@ DB 'GetDoFCounter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05CJMGDEBD@IsDoF?$AA@
CONST	SEGMENT
??_C@_05CJMGDEBD@IsDoF?$AA@ DB 'IsDoF', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LAJMIPAI@IsDoFMessageTooSoon?$AA@
CONST	SEGMENT
??_C@_0BE@LAJMIPAI@IsDoFMessageTooSoon?$AA@ DB 'IsDoFMessageTooSoon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FNMHBNF@IsAskedToStopDigging?$AA@
CONST	SEGMENT
??_C@_0BF@FNMHBNF@IsAskedToStopDigging?$AA@ DB 'IsAskedToStopDigging', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LALLCFLJ@IsAskedToStopConverting?$AA@
CONST	SEGMENT
??_C@_0BI@LALLCFLJ@IsAskedToStopConverting?$AA@ DB 'IsAskedToStopConverti'
	DB	'ng', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@BBLJBNNC@IsStopSpyingMessageTooSoon?$AA@
CONST	SEGMENT
??_C@_0BL@BBLJBNNC@IsStopSpyingMessageTooSoon?$AA@ DB 'IsStopSpyingMessag'
	DB	'eTooSoon', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MHKHJIDJ@IsDontSettleMessageTooSoon?$AA@
CONST	SEGMENT
??_C@_0BL@MHKHJIDJ@IsDontSettleMessageTooSoon?$AA@ DB 'IsDontSettleMessag'
	DB	'eTooSoon', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HEIJGBFF@IsProtectingMinor?$AA@
CONST	SEGMENT
??_C@_0BC@HEIJGBFF@IsProtectingMinor?$AA@ DB 'IsProtectingMinor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@LHDCKAOD@IsWillAcceptPeaceWithPlayer?$AA@
CONST	SEGMENT
??_C@_0BM@LHDCKAOD@IsWillAcceptPeaceWithPlayer?$AA@ DB 'IsWillAcceptPeace'
	DB	'WithPlayer', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GFGFENAL@GetApproachTowardsUsGuess?$AA@
CONST	SEGMENT
??_C@_0BK@GFGFENAL@GetApproachTowardsUsGuess?$AA@ DB 'GetApproachTowardsU'
	DB	'sGuess', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GJBEAAFB@GetMajorCivApproach?$AA@
CONST	SEGMENT
??_C@_0BE@GJBEAAFB@GetMajorCivApproach?$AA@ DB 'GetMajorCivApproach', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FFBOAELH@DoTradeScreenClosed?$AA@
CONST	SEGMENT
??_C@_0BE@FFBOAELH@DoTradeScreenClosed?$AA@ DB 'DoTradeScreenClosed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OGJDLMA@DoTradeScreenOpened?$AA@
CONST	SEGMENT
??_C@_0BE@OGJDLMA@DoTradeScreenOpened?$AA@ DB 'DoTradeScreenOpened', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@ONJJPLPE@DoBeginDiploWithHuman?$AA@
CONST	SEGMENT
??_C@_0BG@ONJJPLPE@DoBeginDiploWithHuman?$AA@ DB 'DoBeginDiploWithHuman', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IGAPHJLG@GetPlotDanger?$AA@
CONST	SEGMENT
??_C@_0O@IGAPHJLG@GetPlotDanger?$AA@ DB 'GetPlotDanger', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CLDNCOML@GetBuyPlotCost?$AA@
CONST	SEGMENT
??_C@_0P@CLDNCOML@GetBuyPlotCost?$AA@ DB 'GetBuyPlotCost', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KIAMDGLE@ChangeNumPlotsBought?$AA@
CONST	SEGMENT
??_C@_0BF@KIAMDGLE@ChangeNumPlotsBought?$AA@ DB 'ChangeNumPlotsBought', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BDGANLKA@SetNumPlotsBought?$AA@
CONST	SEGMENT
??_C@_0BC@BDGANLKA@SetNumPlotsBought?$AA@ DB 'SetNumPlotsBought', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DGGLFALO@GetNumPlotsBought?$AA@
CONST	SEGMENT
??_C@_0BC@DGGLFALO@GetNumPlotsBought?$AA@ DB 'GetNumPlotsBought', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GCJCINGE@GetNumPlots?$AA@
CONST	SEGMENT
??_C@_0M@GCJCINGE@GetNumPlots?$AA@ DB 'GetNumPlots', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PGOPIEFE@SetScriptData?$AA@
CONST	SEGMENT
??_C@_0O@PGOPIEFE@SetScriptData?$AA@ DB 'SetScriptData', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IJPBDHCD@GetScriptData?$AA@
CONST	SEGMENT
??_C@_0O@IJPBDHCD@GetScriptData?$AA@ DB 'GetScriptData', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CGMPIPHN@SetReplayDataValue?$AA@
CONST	SEGMENT
??_C@_0BD@CGMPIPHN@SetReplayDataValue?$AA@ DB 'SetReplayDataValue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FOEADKOC@GetReplayData?$AA@
CONST	SEGMENT
??_C@_0O@FOEADKOC@GetReplayData?$AA@ DB 'GetReplayData', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IAAIKKNG@GetPowerHistory?$AA@
CONST	SEGMENT
??_C@_0BA@IAAIKKNG@GetPowerHistory?$AA@ DB 'GetPowerHistory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BFBBELOF@GetAgricultureHistory?$AA@
CONST	SEGMENT
??_C@_0BG@BFBBELOF@GetAgricultureHistory?$AA@ DB 'GetAgricultureHistory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EEECFJGL@GetIndustryHistory?$AA@
CONST	SEGMENT
??_C@_0BD@EEECFJGL@GetIndustryHistory?$AA@ DB 'GetIndustryHistory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LKDBDJLJ@GetEconomyHistory?$AA@
CONST	SEGMENT
??_C@_0BC@LKDBDJLJ@GetEconomyHistory?$AA@ DB 'GetEconomyHistory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CBCOBLDO@GetScoreHistory?$AA@
CONST	SEGMENT
??_C@_0BA@CBCOBLDO@GetScoreHistory?$AA@ DB 'GetScoreHistory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FLOBFJBH@AI_foundValue?$AA@
CONST	SEGMENT
??_C@_0O@FLOBFJBH@AI_foundValue?$AA@ DB 'AI_foundValue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LPEPOKPK@AI_updateFoundValues?$AA@
CONST	SEGMENT
??_C@_0BF@LPEPOKPK@AI_updateFoundValues?$AA@ DB 'AI_updateFoundValues', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LCJDFAFH@GetUnitByID?$AA@
CONST	SEGMENT
??_C@_0M@LCJDFAFH@GetUnitByID?$AA@ DB 'GetUnitByID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GNPEBAGL@GetNumUnits?$AA@
CONST	SEGMENT
??_C@_0M@GNPEBAGL@GetNumUnits?$AA@ DB 'GetNumUnits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05CFLIFMAE@Units?$AA@
CONST	SEGMENT
??_C@_05CFLIFMAE@Units?$AA@ DB 'Units', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NNBLIMGF@GetCityByID?$AA@
CONST	SEGMENT
??_C@_0M@NNBLIMGF@GetCityByID?$AA@ DB 'GetCityByID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OFLMPMAK@GetNumCities?$AA@
CONST	SEGMENT
??_C@_0N@OFLMPMAK@GetNumCities?$AA@ DB 'GetNumCities', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06DIPJMMIP@Cities?$AA@
CONST	SEGMENT
??_C@_06DIPJMMIP@Cities?$AA@ DB 'Cities', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DOJNOFML@GetCityName?$AA@
CONST	SEGMENT
??_C@_0M@DOJNOFML@GetCityName?$AA@ DB 'GetCityName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OEJOHFNM@GetNumCityNames?$AA@
CONST	SEGMENT
??_C@_0BA@OEJOHFNM@GetNumCityNames?$AA@ DB 'GetNumCityNames', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DHIABOAD@AddCityName?$AA@
CONST	SEGMENT
??_C@_0M@DHIABOAD@AddCityName?$AA@ DB 'AddCityName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EEPCMHMD@GetLengthResearchQueue?$AA@
CONST	SEGMENT
??_C@_0BH@EEPCMHMD@GetLengthResearchQueue?$AA@ DB 'GetLengthResearchQueue'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EOPDLFLG@PopResearch?$AA@
CONST	SEGMENT
??_C@_0M@EOPDLFLG@PopResearch?$AA@ DB 'PopResearch', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CDNPDJNC@PushResearch?$AA@
CONST	SEGMENT
??_C@_0N@CDNPDJNC@PushResearch?$AA@ DB 'PushResearch', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JPCIIJKD@ClearResearchQueue?$AA@
CONST	SEGMENT
??_C@_0BD@JPCIIJKD@ClearResearchQueue?$AA@ DB 'ClearResearchQueue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OKACGELF@GetQueuePosition?$AA@
CONST	SEGMENT
??_C@_0BB@OKACGELF@GetQueuePosition?$AA@ DB 'GetQueuePosition', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HAIAJPIL@FindPathLength?$AA@
CONST	SEGMENT
??_C@_0P@HAIAJPIL@FindPathLength?$AA@ DB 'FindPathLength', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GMNKFHNO@GetSpecialistExtraYield?$AA@
CONST	SEGMENT
??_C@_0BI@GMNKFHNO@GetSpecialistExtraYield?$AA@ DB 'GetSpecialistExtraYie'
	DB	'ld', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DPLFOOGM@SetNavalCombatExperience?$AA@
CONST	SEGMENT
??_C@_0BJ@DPLFOOGM@SetNavalCombatExperience?$AA@ DB 'SetNavalCombatExperi'
	DB	'ence', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JAEPANDK@ChangeNavalCombatExperience?$AA@
CONST	SEGMENT
??_C@_0BM@JAEPANDK@ChangeNavalCombatExperience?$AA@ DB 'ChangeNavalCombat'
	DB	'Experience', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JMBPIDPJ@GetNavalCombatExperience?$AA@
CONST	SEGMENT
??_C@_0BJ@JMBPIDPJ@GetNavalCombatExperience?$AA@ DB 'GetNavalCombatExperi'
	DB	'ence', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@ECGBFEGH@GetLifetimeCombatExperience?$AA@
CONST	SEGMENT
??_C@_0BM@ECGBFEGH@GetLifetimeCombatExperience?$AA@ DB 'GetLifetimeCombat'
	DB	'Experience', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CFLDHHHI@SetCombatExperience?$AA@
CONST	SEGMENT
??_C@_0BE@CFLDHHHI@SetCombatExperience?$AA@ DB 'SetCombatExperience', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NFKGIFIE@ChangeCombatExperience?$AA@
CONST	SEGMENT
??_C@_0BH@NFKGIFIE@ChangeCombatExperience?$AA@ DB 'ChangeCombatExperience'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@ILJIDHAE@GetCombatExperience?$AA@
CONST	SEGMENT
??_C@_0BE@ILJIDHAE@GetCombatExperience?$AA@ DB 'GetCombatExperience', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JICENABA@SetResearchingTech?$AA@
CONST	SEGMENT
??_C@_0BD@JICENABA@SetResearchingTech?$AA@ DB 'SetResearchingTech', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LJAGDKMI@IsResearchingTech?$AA@
CONST	SEGMENT
??_C@_0BC@LJAGDKMI@IsResearchingTech?$AA@ DB 'IsResearchingTech', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DIBNJMML@GetHurryGoldCost?$AA@
CONST	SEGMENT
??_C@_0BB@DIBNJMML@GetHurryGoldCost?$AA@ DB 'GetHurryGoldCost', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LOFDAOJF@IsCanHurry?$AA@
CONST	SEGMENT
??_C@_0L@LOFDAOJF@IsCanHurry?$AA@ DB 'IsCanHurry', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HNIJFNOA@IsHasAccessToHurry?$AA@
CONST	SEGMENT
??_C@_0BD@HNIJFNOA@IsHasAccessToHurry?$AA@ DB 'IsHasAccessToHurry', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MMMOMENH@GetHurryCount?$AA@
CONST	SEGMENT
??_C@_0O@MMMOMENH@GetHurryCount?$AA@ DB 'GetHurryCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NDNHGCMM@GetBuildingClassCountPlusMaking?$AA@
CONST	SEGMENT
??_C@_0CA@NDNHGCMM@GetBuildingClassCountPlusMaking?$AA@ DB 'GetBuildingCl'
	DB	'assCountPlusMaking', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IOFHKIED@GetBuildingClassMaking?$AA@
CONST	SEGMENT
??_C@_0BH@IOFHKIED@GetBuildingClassMaking?$AA@ DB 'GetBuildingClassMaking'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BIOFBBJB@IsBuildingClassMaxedOut?$AA@
CONST	SEGMENT
??_C@_0BI@BIOFBBJB@IsBuildingClassMaxedOut?$AA@ DB 'IsBuildingClassMaxedO'
	DB	'ut', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LKAPFNIF@GetBuildingClassCount?$AA@
CONST	SEGMENT
??_C@_0BG@LKAPFNIF@GetBuildingClassCount?$AA@ DB 'GetBuildingClassCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JKNGMGFK@GetUnitClassCountPlusMaking?$AA@
CONST	SEGMENT
??_C@_0BM@JKNGMGFK@GetUnitClassCountPlusMaking?$AA@ DB 'GetUnitClassCount'
	DB	'PlusMaking', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JNGNHFGM@GetUnitClassMaking?$AA@
CONST	SEGMENT
??_C@_0BD@JNGNHFGM@GetUnitClassMaking?$AA@ DB 'GetUnitClassMaking', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KOKPIAGA@IsUnitClassMaxedOut?$AA@
CONST	SEGMENT
??_C@_0BE@KOKPIAGA@IsUnitClassMaxedOut?$AA@ DB 'IsUnitClassMaxedOut', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OMEKCEJN@GetUnitClassCount?$AA@
CONST	SEGMENT
??_C@_0BC@OMEKCEJN@GetUnitClassCount?$AA@ DB 'GetUnitClassCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MDJBKIGG@IsBuildingFree?$AA@
CONST	SEGMENT
??_C@_0P@MDJBKIGG@IsBuildingFree?$AA@ DB 'IsBuildingFree', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FJHPDLDL@GetImprovementCount?$AA@
CONST	SEGMENT
??_C@_0BE@FJHPDLDL@GetImprovementCount?$AA@ DB 'GetImprovementCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BLEODKND@GetResourceFromMinors?$AA@
CONST	SEGMENT
??_C@_0BG@BLEODKND@GetResourceFromMinors?$AA@ DB 'GetResourceFromMinors', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FPKGMKKM@GetResourceImport?$AA@
CONST	SEGMENT
??_C@_0BC@FPKGMKKM@GetResourceImport?$AA@ DB 'GetResourceImport', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MLBNDDPA@GetResourceExport?$AA@
CONST	SEGMENT
??_C@_0BC@MLBNDDPA@GetResourceExport?$AA@ DB 'GetResourceExport', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CAJMJPHL@GetNumResourceAvailable?$AA@
CONST	SEGMENT
??_C@_0BI@CAJMJPHL@GetNumResourceAvailable?$AA@ DB 'GetNumResourceAvailab'
	DB	'le', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OOAGOCF@ChangeNumResourceTotal?$AA@
CONST	SEGMENT
??_C@_0BH@OOAGOCF@ChangeNumResourceTotal?$AA@ DB 'ChangeNumResourceTotal', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FANONMKF@GetNumResourceTotal?$AA@
CONST	SEGMENT
??_C@_0BE@FANONMKF@GetNumResourceTotal?$AA@ DB 'GetNumResourceTotal', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NIJFEIJG@GetNumResourceUsed?$AA@
CONST	SEGMENT
??_C@_0BD@NIJFEIJG@GetNumResourceUsed?$AA@ DB 'GetNumResourceUsed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IJCOINPN@SetPlayable?$AA@
CONST	SEGMENT
??_C@_0M@IJCOINPN@SetPlayable?$AA@ DB 'SetPlayable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LMMDHEOL@IsPlayable?$AA@
CONST	SEGMENT
??_C@_0L@LMMDHEOL@IsPlayable?$AA@ DB 'IsPlayable', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09DLFAMNKA@SetOption?$AA@
CONST	SEGMENT
??_C@_09DLFAMNKA@SetOption?$AA@ DB 'SetOption', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08CPAPEJN@IsOption?$AA@
CONST	SEGMENT
??_C@_08CPAPEJN@IsOption?$AA@ DB 'IsOption', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LPIABFHI@GetIncomingUnitCountdown?$AA@
CONST	SEGMENT
??_C@_0BJ@LPIABFHI@GetIncomingUnitCountdown?$AA@ DB 'GetIncomingUnitCount'
	DB	'down', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DGDCHHAP@GetIncomingUnitType?$AA@
CONST	SEGMENT
??_C@_0BE@DGDCHHAP@GetIncomingUnitType?$AA@ DB 'GetIncomingUnitType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@INFADDEM@DoUpdateProximityToPlayer?$AA@
CONST	SEGMENT
??_C@_0BK@INFADDEM@DoUpdateProximityToPlayer?$AA@ DB 'DoUpdateProximityTo'
	DB	'Player', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@ONODMHAN@GetProximityToPlayer?$AA@
CONST	SEGMENT
??_C@_0BF@ONODMHAN@GetProximityToPlayer?$AA@ DB 'GetProximityToPlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@MDGAFNCA@GetScienceFromBudgetDeficitTimes@
CONST	SEGMENT
??_C@_0CE@MDGAFNCA@GetScienceFromBudgetDeficitTimes@ DB 'GetScienceFromBu'
	DB	'dgetDeficitTimes100', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@KCEGADFP@GetScienceFromResearchAgreements@
CONST	SEGMENT
??_C@_0CJ@KCEGADFP@GetScienceFromResearchAgreements@ DB 'GetScienceFromRe'
	DB	'searchAgreementsTimes100', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@GKJHBADA@GetMinorFriendshipGainBullyGoldS@
CONST	SEGMENT
??_C@_0CH@GKJHBADA@GetMinorFriendshipGainBullyGoldS@ DB 'GetMinorFriendsh'
	DB	'ipGainBullyGoldSuccess', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PMENDKHK@GetScienceFromGoldTimes100?$AA@
CONST	SEGMENT
??_C@_0BL@PMENDKHK@GetScienceFromGoldTimes100?$AA@ DB 'GetScienceFromGold'
	DB	'Times100', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@LOIBLNOM@GetScienceFromHappinessTimes100?$AA@
CONST	SEGMENT
??_C@_0CA@LOIBLNOM@GetScienceFromHappinessTimes100?$AA@ DB 'GetScienceFro'
	DB	'mHappinessTimes100', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@FKFPBOPI@GetScienceFromOtherPlayersTimes1@
CONST	SEGMENT
??_C@_0CD@FKFPBOPI@GetScienceFromOtherPlayersTimes1@ DB 'GetScienceFromOt'
	DB	'herPlayersTimes100', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@OBKADDNJ@GetScienceFromCitiesTimes100?$AA@
CONST	SEGMENT
??_C@_0BN@OBKADDNJ@GetScienceFromCitiesTimes100?$AA@ DB 'GetScienceFromCi'
	DB	'tiesTimes100', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NFNIBFFF@GetScienceTimes100?$AA@
CONST	SEGMENT
??_C@_0BD@NFNIBFFF@GetScienceTimes100?$AA@ DB 'GetScienceTimes100', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GHLGHBML@GetScience?$AA@
CONST	SEGMENT
??_C@_0L@GHLGHBML@GetScience?$AA@ DB 'GetScience', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CEIHEJPD@GetExtraYieldThreshold?$AA@
CONST	SEGMENT
??_C@_0BH@CEIHEJPD@GetExtraYieldThreshold?$AA@ DB 'GetExtraYieldThreshold'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HDDIOHJE@GetCapitalYieldRateModifier?$AA@
CONST	SEGMENT
??_C@_0BM@HDDIOHJE@GetCapitalYieldRateModifier?$AA@ DB 'GetCapitalYieldRa'
	DB	'teModifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MPEACCAJ@GetYieldRateModifier?$AA@
CONST	SEGMENT
??_C@_0BF@MPEACCAJ@GetYieldRateModifier?$AA@ DB 'GetYieldRateModifier', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DGPKBBEO@GetSeaPlotYield?$AA@
CONST	SEGMENT
??_C@_0BA@DGPKBBEO@GetSeaPlotYield?$AA@ DB 'GetSeaPlotYield', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OFENOHDO@GetPlayerColors?$AA@
CONST	SEGMENT
??_C@_0BA@OFENOHDO@GetPlayerColors?$AA@ DB 'GetPlayerColors', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FBFFBDEL@GetPlayerColor?$AA@
CONST	SEGMENT
??_C@_0P@FBFFBDEL@GetPlayerColor?$AA@ DB 'GetPlayerColor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07KIJFBNDA@GetTeam?$AA@
CONST	SEGMENT
??_C@_07KIJFBNDA@GetTeam?$AA@ DB 'GetTeam', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DBDBEBPD@GetCurrentEra?$AA@
CONST	SEGMENT
??_C@_0O@DBDBEBPD@GetCurrentEra?$AA@ DB 'GetCurrentEra', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MJNOECAJ@SetPersonalityType?$AA@
CONST	SEGMENT
??_C@_0BD@MJNOECAJ@SetPersonalityType?$AA@ DB 'SetPersonalityType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DDPEHEOB@GetPersonalityType?$AA@
CONST	SEGMENT
??_C@_0BD@DDPEHEOB@GetPersonalityType?$AA@ DB 'GetPersonalityType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MCDOMJFC@GetLeaderType?$AA@
CONST	SEGMENT
??_C@_0O@MCDOMJFC@GetLeaderType?$AA@ DB 'GetLeaderType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OGLFKPOE@GetCivilizationType?$AA@
CONST	SEGMENT
??_C@_0BE@OGLFKPOE@GetCivilizationType?$AA@ DB 'GetCivilizationType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NDPGKNBO@GetHandicapType?$AA@
CONST	SEGMENT
??_C@_0BA@NDPGKNBO@GetHandicapType?$AA@ DB 'GetHandicapType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05CLBJHDA@GetID?$AA@
CONST	SEGMENT
??_C@_05CLBJHDA@GetID?$AA@ DB 'GetID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08FCKCMEIG@IsStrike?$AA@
CONST	SEGMENT
??_C@_08FCKCMEIG@IsStrike?$AA@ DB 'IsStrike', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@HDPFLDOD@HasReceivedNetTurnComplete?$AA@
CONST	SEGMENT
??_C@_0BL@HDPFLDOD@HasReceivedNetTurnComplete?$AA@ DB 'HasReceivedNetTurn'
	DB	'Complete', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@HBJKGGIN@GetEndTurnBlockingNotificationIn@
CONST	SEGMENT
??_C@_0CE@HBJKGGIN@GetEndTurnBlockingNotificationIn@ DB 'GetEndTurnBlocki'
	DB	'ngNotificationIndex', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PEFMIAEP@GetEndTurnBlockingType?$AA@
CONST	SEGMENT
??_C@_0BH@PEFMIAEP@GetEndTurnBlockingType?$AA@ DB 'GetEndTurnBlockingType'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PKANFN@IsFoundedFirstCity?$AA@
CONST	SEGMENT
??_C@_0BD@PKANFN@IsFoundedFirstCity?$AA@ DB 'IsFoundedFirstCity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ECFNDELE@IsExtendedGame?$AA@
CONST	SEGMENT
??_C@_0P@ECFNDELE@IsExtendedGame?$AA@ DB 'IsExtendedGame', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MAOIOJGJ@IsEverAlive?$AA@
CONST	SEGMENT
??_C@_0M@MAOIOJGJ@IsEverAlive?$AA@ DB 'IsEverAlive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07OHJBEDOK@IsAlive?$AA@
CONST	SEGMENT
??_C@_07OHJBEDOK@IsAlive?$AA@ DB 'IsAlive', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HNINKCDB@GetFriendshipFromUnitGift?$AA@
CONST	SEGMENT
??_C@_0BK@HNINKCDB@GetFriendshipFromUnitGift?$AA@ DB 'GetFriendshipFromUn'
	DB	'itGift', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OGOPFFHJ@AddMinorCivQuestIfAble?$AA@
CONST	SEGMENT
??_C@_0BH@OGOPFFHJ@AddMinorCivQuestIfAble?$AA@ DB 'AddMinorCivQuestIfAble'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@HBAOBIEN@GetGiftTileImprovementCost?$AA@
CONST	SEGMENT
??_C@_0BL@HBAOBIEN@GetGiftTileImprovementCost?$AA@ DB 'GetGiftTileImprove'
	DB	'mentCost', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@BOODLOOC@CanMajorGiftTileImprovementAtPlo@
CONST	SEGMENT
??_C@_0CC@BOODLOOC@CanMajorGiftTileImprovementAtPlo@ DB 'CanMajorGiftTile'
	DB	'ImprovementAtPlot', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MPFJMPJM@CanMajorGiftTileImprovement?$AA@
CONST	SEGMENT
??_C@_0BM@MPFJMPJM@CanMajorGiftTileImprovement?$AA@ DB 'CanMajorGiftTileI'
	DB	'mprovement', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LKDODOMI@GetBuyoutCost?$AA@
CONST	SEGMENT
??_C@_0O@LKDODOMI@GetBuyoutCost?$AA@ DB 'GetBuyoutCost', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IEAEGNOK@CanMajorBuyout?$AA@
CONST	SEGMENT
??_C@_0P@IEAEGNOK@CanMajorBuyout?$AA@ DB 'CanMajorBuyout', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NIOFMNNO@GetMajorBullyUnitDetails?$AA@
CONST	SEGMENT
??_C@_0BJ@NIOFMNNO@GetMajorBullyUnitDetails?$AA@ DB 'GetMajorBullyUnitDet'
	DB	'ails', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CKDHKLHB@CanMajorBullyUnit?$AA@
CONST	SEGMENT
??_C@_0BC@CKDHKLHB@CanMajorBullyUnit?$AA@ DB 'CanMajorBullyUnit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LDKBOIEI@GetMajorBullyGoldDetails?$AA@
CONST	SEGMENT
??_C@_0BJ@LDKBOIEI@GetMajorBullyGoldDetails?$AA@ DB 'GetMajorBullyGoldDet'
	DB	'ails', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MEKCNIEM@CanMajorBullyGold?$AA@
CONST	SEGMENT
??_C@_0BC@MEKCNIEM@CanMajorBullyGold?$AA@ DB 'CanMajorBullyGold', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JEOPCMFE@GetMinorCivBullyGoldAmount?$AA@
CONST	SEGMENT
??_C@_0BL@JEOPCMFE@GetMinorCivBullyGoldAmount?$AA@ DB 'GetMinorCivBullyGo'
	DB	'ldAmount', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@INDFDHEG@GetTurnLastPledgeBrokenByMajor?$AA@
CONST	SEGMENT
??_C@_0BP@INDFDHEG@GetTurnLastPledgeBrokenByMajor?$AA@ DB 'GetTurnLastPle'
	DB	'dgeBrokenByMajor', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@GOKJOBNC@GetTurnLastPledgedProtectionByMa@
CONST	SEGMENT
??_C@_0CE@GOKJOBNC@GetTurnLastPledgedProtectionByMa@ DB 'GetTurnLastPledg'
	DB	'edProtectionByMajor', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PJCMBOGB@CanMajorWithdrawProtection?$AA@
CONST	SEGMENT
??_C@_0BL@PJCMBOGB@CanMajorWithdrawProtection?$AA@ DB 'CanMajorWithdrawPr'
	DB	'otection', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JDBHECFP@CanMajorStartProtection?$AA@
CONST	SEGMENT
??_C@_0BI@JDBHECFP@CanMajorStartProtection?$AA@ DB 'CanMajorStartProtecti'
	DB	'on', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HLPOBOFO@CanMajorProtect?$AA@
CONST	SEGMENT
??_C@_0BA@HLPOBOFO@CanMajorProtect?$AA@ DB 'CanMajorProtect', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FJJJKAON@IsProtectedByMajor?$AA@
CONST	SEGMENT
??_C@_0BD@FJJJKAON@IsProtectedByMajor?$AA@ DB 'IsProtectedByMajor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@OEBIPDFB@DoMinorLiberationByMajor?$AA@
CONST	SEGMENT
??_C@_0BJ@OEBIPDFB@DoMinorLiberationByMajor?$AA@ DB 'DoMinorLiberationByM'
	DB	'ajor', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DDAJKJAC@GetNumMinorCivsMet?$AA@
CONST	SEGMENT
??_C@_0BD@DDAJKJAC@GetNumMinorCivsMet?$AA@ DB 'GetNumMinorCivsMet', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OJEGEBAH@IsMinorPermanentWar?$AA@
CONST	SEGMENT
??_C@_0BE@OJEGEBAH@IsMinorPermanentWar?$AA@ DB 'IsMinorPermanentWar', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@NBPHMKCC@IsInfluenceTooLowForPeace?$AA@
CONST	SEGMENT
??_C@_0BK@NBPHMKCC@IsInfluenceTooLowForPeace?$AA@ DB 'IsInfluenceTooLowFo'
	DB	'rPeace', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KFJKJMOE@IsPeaceBlocked?$AA@
CONST	SEGMENT
??_C@_0P@KFJKJMOE@IsPeaceBlocked?$AA@ DB 'IsPeaceBlocked', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@ODBIOBOL@GetCurrentScienceFriendshipBonus@
CONST	SEGMENT
??_C@_0CJ@ODBIOBOL@GetCurrentScienceFriendshipBonus@ DB 'GetCurrentScienc'
	DB	'eFriendshipBonusTimes100', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LLLGGKJM@GetCurrentSpawnEstimate?$AA@
CONST	SEGMENT
??_C@_0BI@LLLGGKJM@GetCurrentSpawnEstimate?$AA@ DB 'GetCurrentSpawnEstima'
	DB	'te', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@ILJMHMPP@GetCurrentOtherCityFoodBonus?$AA@
CONST	SEGMENT
??_C@_0BN@ILJMHMPP@GetCurrentOtherCityFoodBonus?$AA@ DB 'GetCurrentOtherC'
	DB	'ityFoodBonus', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PEJFCAAO@GetCurrentCapitalFoodBonus?$AA@
CONST	SEGMENT
??_C@_0BL@PEJFCAAO@GetCurrentCapitalFoodBonus?$AA@ DB 'GetCurrentCapitalF'
	DB	'oodBonus', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DJDMDNOO@GetMinorCivCurrentFaithBonus?$AA@
CONST	SEGMENT
??_C@_0BN@DJDMDNOO@GetMinorCivCurrentFaithBonus?$AA@ DB 'GetMinorCivCurre'
	DB	'ntFaithBonus', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@DHDIKNON@GetMinorCivCurrentHappinessBonus@
CONST	SEGMENT
??_C@_0CB@DHDIKNON@GetMinorCivCurrentHappinessBonus@ DB 'GetMinorCivCurre'
	DB	'ntHappinessBonus', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@BFJFGONF@GetMinorCivCurrentHappinessPerLu@
CONST	SEGMENT
??_C@_0CK@BFJFGONF@GetMinorCivCurrentHappinessPerLu@ DB 'GetMinorCivCurre'
	DB	'ntHappinessPerLuxuryBonus', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@EMDDPPKP@GetMinorCivCurrentHappinessFlatB@
CONST	SEGMENT
??_C@_0CF@EMDDPPKP@GetMinorCivCurrentHappinessFlatB@ DB 'GetMinorCivCurre'
	DB	'ntHappinessFlatBonus', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@CMFODDAA@GetMinorCivHappinessFriendshipBo@
CONST	SEGMENT
??_C@_0CE@CMFODDAA@GetMinorCivHappinessFriendshipBo@ DB 'GetMinorCivHappi'
	DB	'nessFriendshipBonus', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@CJKEIOCK@GetMinorCivCurrentCultureBonus?$AA@
CONST	SEGMENT
??_C@_0BP@CJKEIOCK@GetMinorCivCurrentCultureBonus?$AA@ DB 'GetMinorCivCur'
	DB	'rentCultureBonus', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DCNJCBAF@GetCurrentCultureBonus?$AA@
CONST	SEGMENT
??_C@_0BH@DCNJCBAF@GetCurrentCultureBonus?$AA@ DB 'GetCurrentCultureBonus'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@DJDLKNM@GetMinorCivCurrentCulturePerBuil@
CONST	SEGMENT
??_C@_0CK@DJDLKNM@GetMinorCivCurrentCulturePerBuil@ DB 'GetMinorCivCurren'
	DB	'tCulturePerBuildingBonus', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@LKFJCJNM@GetMinorCivCurrentCultureFlatBon@
CONST	SEGMENT
??_C@_0CD@LKFJCJNM@GetMinorCivCurrentCultureFlatBon@ DB 'GetMinorCivCurre'
	DB	'ntCultureFlatBonus', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@CGHKAAGO@GetMinorCivCultureFriendshipBonu@
CONST	SEGMENT
??_C@_0CC@CGHKAAGO@GetMinorCivCultureFriendshipBonu@ DB 'GetMinorCivCultu'
	DB	'reFriendshipBonus', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@IMMIMLHK@GetMinorCivScienceFriendshipBonu@
CONST	SEGMENT
??_C@_0CC@IMMIMLHK@GetMinorCivScienceFriendshipBonu@ DB 'GetMinorCivScien'
	DB	'ceFriendshipBonus', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CENDBAFG@GetMinorCivFavoriteMajor?$AA@
CONST	SEGMENT
??_C@_0BJ@CENDBAFG@GetMinorCivFavoriteMajor?$AA@ DB 'GetMinorCivFavoriteM'
	DB	'ajor', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@DKEFHJFC@GetFriendshipNeededForNextLevel?$AA@
CONST	SEGMENT
??_C@_0CA@DKEFHJFC@GetFriendshipNeededForNextLevel?$AA@ DB 'GetFriendship'
	DB	'NeededForNextLevel', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MCNIAIDC@IsSameReligionAsMajor?$AA@
CONST	SEGMENT
??_C@_0BG@MCNIAIDC@IsSameReligionAsMajor?$AA@ DB 'IsSameReligionAsMajor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MGBKIFJO@GetFriendshipFromFaithGift?$AA@
CONST	SEGMENT
??_C@_0BL@MGBKIFJO@GetFriendshipFromFaithGift?$AA@ DB 'GetFriendshipFromF'
	DB	'aithGift', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GCPPOFGE@GetFriendshipFromGoldGift?$AA@
CONST	SEGMENT
??_C@_0BK@GCPPOFGE@GetFriendshipFromGoldGift?$AA@ DB 'GetFriendshipFromGo'
	DB	'ldGift', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@DNCLIGFM@GetTurnsSinceThreatenedAnnouncem@
CONST	SEGMENT
??_C@_0CE@DNCLIGFM@GetTurnsSinceThreatenedAnnouncem@ DB 'GetTurnsSinceThr'
	DB	'eatenedAnnouncement', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFAPDPJO@GetTurnsSinceThreatenedByBarbari@
CONST	SEGMENT
??_C@_0CE@OFAPDPJO@GetTurnsSinceThreatenedByBarbari@ DB 'GetTurnsSinceThr'
	DB	'eatenedByBarbarians', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@DCJJEBFI@IsThreateningBarbariansEventActi@
CONST	SEGMENT
??_C@_0CM@DCJJEBFI@IsThreateningBarbariansEventActi@ DB 'IsThreateningBar'
	DB	'bariansEventActiveForPlayer', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LHGLLPKP@IsProxyWarActiveForMajor?$AA@
CONST	SEGMENT
??_C@_0BJ@LHGLLPKP@IsProxyWarActiveForMajor?$AA@ DB 'IsProxyWarActiveForM'
	DB	'ajor', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@JOPJIGPD@GetMinorWarQuestWithMajorRemaini@
CONST	SEGMENT
??_C@_0CI@JOPJIGPD@GetMinorWarQuestWithMajorRemaini@ DB 'GetMinorWarQuest'
	DB	'WithMajorRemainingCount', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@DLEJMNIA@IsMinorWarQuestWithMajorActive?$AA@
CONST	SEGMENT
??_C@_0BP@DLEJMNIA@IsMinorWarQuestWithMajorActive?$AA@ DB 'IsMinorWarQues'
	DB	'tWithMajorActive', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@BALAKNNH@IsMinorCivRouteEstablishedWithMa@
CONST	SEGMENT
??_C@_0CE@BALAKNNH@IsMinorCivRouteEstablishedWithMa@ DB 'IsMinorCivRouteE'
	DB	'stablishedWithMajor', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@LGBJCMOD@IsMinorCivUnitSpawningDisabled?$AA@
CONST	SEGMENT
??_C@_0BP@LGBJCMOD@IsMinorCivUnitSpawningDisabled?$AA@ DB 'IsMinorCivUnit'
	DB	'SpawningDisabled', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@LCACKAGB@GetMinorCivContestValueForPlayer@
CONST	SEGMENT
??_C@_0CB@LCACKAGB@GetMinorCivContestValueForPlayer@ DB 'GetMinorCivConte'
	DB	'stValueForPlayer', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@JHAAIIFB@GetMinorCivContestValueForLeader@
CONST	SEGMENT
??_C@_0CB@JHAAIIFB@GetMinorCivContestValueForLeader@ DB 'GetMinorCivConte'
	DB	'stValueForLeader', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HBEMJGEC@IsMinorCivContestLeader?$AA@
CONST	SEGMENT
??_C@_0BI@HBEMJGEC@IsMinorCivContestLeader?$AA@ DB 'IsMinorCivContestLead'
	DB	'er', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PICPPHDC@GetQuestTurnsRemaining?$AA@
CONST	SEGMENT
??_C@_0BH@PICPPHDC@GetQuestTurnsRemaining?$AA@ DB 'GetQuestTurnsRemaining'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MLFPDGHN@GetQuestData2?$AA@
CONST	SEGMENT
??_C@_0O@MLFPDGHN@GetQuestData2?$AA@ DB 'GetQuestData2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OAHCGFLO@GetQuestData1?$AA@
CONST	SEGMENT
??_C@_0O@OAHCGFLO@GetQuestData1?$AA@ DB 'GetQuestData1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@IINPAFPL@GetMinorCivNumDisplayedQuestsFor@
CONST	SEGMENT
??_C@_0CH@IINPAFPL@GetMinorCivNumDisplayedQuestsFor@ DB 'GetMinorCivNumDi'
	DB	'splayedQuestsForPlayer', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@KOLLDJBJ@IsMinorCivDisplayedQuestForPlaye@
CONST	SEGMENT
??_C@_0CC@KOLLDJBJ@IsMinorCivDisplayedQuestForPlaye@ DB 'IsMinorCivDispla'
	DB	'yedQuestForPlayer', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@KOGHDCCE@GetMinorCivNumActiveQuestsForPla@
CONST	SEGMENT
??_C@_0CE@KOGHDCCE@GetMinorCivNumActiveQuestsForPla@ DB 'GetMinorCivNumAc'
	DB	'tiveQuestsForPlayer', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@HJOPHLLE@IsMinorCivActiveQuestForPlayer?$AA@
CONST	SEGMENT
??_C@_0BP@HJOPHLLE@IsMinorCivActiveQuestForPlayer?$AA@ DB 'IsMinorCivActi'
	DB	'veQuestForPlayer', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JBNIDLPL@GetActiveQuestForPlayer?$AA@
CONST	SEGMENT
??_C@_0BI@JBNIDLPL@GetActiveQuestForPlayer?$AA@ DB 'GetActiveQuestForPlay'
	DB	'er', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@DCIALBHJ@GetMinorCivFriendshipLevelWithMa@
CONST	SEGMENT
??_C@_0CE@DCIALBHJ@GetMinorCivFriendshipLevelWithMa@ DB 'GetMinorCivFrien'
	DB	'dshipLevelWithMajor', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@HPIOGEFP@GetMinorCivFriendshipAnchorWithM@
CONST	SEGMENT
??_C@_0CF@HPIOGEFP@GetMinorCivFriendshipAnchorWithM@ DB 'GetMinorCivFrien'
	DB	'dshipAnchorWithMajor', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@NGMCJIKI@ChangeMinorCivFriendshipWithMajo@
CONST	SEGMENT
??_C@_0CC@NGMCJIKI@ChangeMinorCivFriendshipWithMajo@ DB 'ChangeMinorCivFr'
	DB	'iendshipWithMajor', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@IFPAMFCO@GetMinorCivBaseFriendshipWithMaj@
CONST	SEGMENT
??_C@_0CD@IFPAMFCO@GetMinorCivBaseFriendshipWithMaj@ DB 'GetMinorCivBaseF'
	DB	'riendshipWithMajor', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@INHPAMIH@GetMinorCivFriendshipWithMajor?$AA@
CONST	SEGMENT
??_C@_0BP@INHPAMIH@GetMinorCivFriendshipWithMajor?$AA@ DB 'GetMinorCivFri'
	DB	'endshipWithMajor', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@IKFMLNBF@GetFriendshipChangePerTurnTimes1@
CONST	SEGMENT
??_C@_0CD@IKFMLNBF@GetFriendshipChangePerTurnTimes1@ DB 'GetFriendshipCha'
	DB	'ngePerTurnTimes100', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@BFKJKFHN@IsPlayerHasOpenBordersAutomatica@
CONST	SEGMENT
??_C@_0CE@BFKJKFHN@IsPlayerHasOpenBordersAutomatica@ DB 'IsPlayerHasOpenB'
	DB	'ordersAutomatically', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LPBLCHNA@IsPlayerHasOpenBorders?$AA@
CONST	SEGMENT
??_C@_0BH@LPBLCHNA@IsPlayerHasOpenBorders?$AA@ DB 'IsPlayerHasOpenBorders'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08IELAHIKJ@IsAllies?$AA@
CONST	SEGMENT
??_C@_08IELAHIKJ@IsAllies?$AA@ DB 'IsAllies', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09MNONCBMN@IsFriends?$AA@
CONST	SEGMENT
??_C@_09MNONCBMN@IsFriends?$AA@ DB 'IsFriends', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HEEBEDH@GetAlliedTurns?$AA@
CONST	SEGMENT
??_C@_0P@HEEBEDH@GetAlliedTurns?$AA@ DB 'GetAlliedTurns', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07FLOLAOEO@GetAlly?$AA@
CONST	SEGMENT
??_C@_07FLOLAOEO@GetAlly?$AA@ DB 'GetAlly', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MEGLHPGJ@SetMinorCivUniqueUnit?$AA@
CONST	SEGMENT
??_C@_0BG@MEGLHPGJ@SetMinorCivUniqueUnit?$AA@ DB 'SetMinorCivUniqueUnit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DBDNKGCI@GetMinorCivUniqueUnit?$AA@
CONST	SEGMENT
??_C@_0BG@DBDNKGCI@GetMinorCivUniqueUnit?$AA@ DB 'GetMinorCivUniqueUnit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MBHOGACH@IsMinorCivHasUniqueUnit?$AA@
CONST	SEGMENT
??_C@_0BI@MBHOGACH@IsMinorCivHasUniqueUnit?$AA@ DB 'IsMinorCivHasUniqueUn'
	DB	'it', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ILIMMMEM@GetPersonality?$AA@
CONST	SEGMENT
??_C@_0P@ILIMMMEM@GetPersonality?$AA@ DB 'GetPersonality', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DHOLGDME@GetMinorCivTrait?$AA@
CONST	SEGMENT
??_C@_0BB@DHOLGDME@GetMinorCivTrait?$AA@ DB 'GetMinorCivTrait', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CGAIAIE@GetMinorCivType?$AA@
CONST	SEGMENT
??_C@_0BA@CGAIAIE@GetMinorCivType?$AA@ DB 'GetMinorCivType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NCIBOILG@IsMinorCiv?$AA@
CONST	SEGMENT
??_C@_0L@NCIBOILG@IsMinorCiv?$AA@ DB 'IsMinorCiv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NBFDEDOJ@IsGoldenAgeCultureBonusDisabled?$AA@
CONST	SEGMENT
??_C@_0CA@NBFDEDOJ@IsGoldenAgeCultureBonusDisabled?$AA@ DB 'IsGoldenAgeCu'
	DB	'ltureBonusDisabled', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MNOOLJOA@ChangeScoreFromScenario4?$AA@
CONST	SEGMENT
??_C@_0BJ@MNOOLJOA@ChangeScoreFromScenario4?$AA@ DB 'ChangeScoreFromScena'
	DB	'rio4', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NDACKNDF@GetScoreFromScenario4?$AA@
CONST	SEGMENT
??_C@_0BG@NDACKNDF@GetScoreFromScenario4?$AA@ DB 'GetScoreFromScenario4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@ICKPCPCH@ChangeScoreFromScenario3?$AA@
CONST	SEGMENT
??_C@_0BJ@ICKPCPCH@ChangeScoreFromScenario3?$AA@ DB 'ChangeScoreFromScena'
	DB	'rio3', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JMEDDLPC@GetScoreFromScenario3?$AA@
CONST	SEGMENT
??_C@_0BG@JMEDDLPC@GetScoreFromScenario3?$AA@ DB 'GetScoreFromScenario3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JLLEBOGG@ChangeScoreFromScenario2?$AA@
CONST	SEGMENT
??_C@_0BJ@JLLEBOGG@ChangeScoreFromScenario2?$AA@ DB 'ChangeScoreFromScena'
	DB	'rio2', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IFFIAKLD@GetScoreFromScenario2?$AA@
CONST	SEGMENT
??_C@_0BG@IFFIAKLD@GetScoreFromScenario2?$AA@ DB 'GetScoreFromScenario2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LAJJENKF@ChangeScoreFromScenario1?$AA@
CONST	SEGMENT
??_C@_0BJ@LAJJENKF@ChangeScoreFromScenario1?$AA@ DB 'ChangeScoreFromScena'
	DB	'rio1', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KOHFFJHA@GetScoreFromScenario1?$AA@
CONST	SEGMENT
??_C@_0BG@KOHFFJHA@GetScoreFromScenario1?$AA@ DB 'GetScoreFromScenario1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LJKKDKLA@GetScoreFromReligion?$AA@
CONST	SEGMENT
??_C@_0BF@LJKKDKLA@GetScoreFromReligion?$AA@ DB 'GetScoreFromReligion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HFEFJHAL@GetScoreFromGreatWorks?$AA@
CONST	SEGMENT
??_C@_0BH@HFEFJHAL@GetScoreFromGreatWorks?$AA@ DB 'GetScoreFromGreatWorks'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BOHEBPE@GetScoreFromPolicies?$AA@
CONST	SEGMENT
??_C@_0BF@BOHEBPE@GetScoreFromPolicies?$AA@ DB 'GetScoreFromPolicies', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HFICBPBB@ChangeScoreFromFutureTech?$AA@
CONST	SEGMENT
??_C@_0BK@HFICBPBB@ChangeScoreFromFutureTech?$AA@ DB 'ChangeScoreFromFutu'
	DB	'reTech', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IDCFNFFO@GetScoreFromFutureTech?$AA@
CONST	SEGMENT
??_C@_0BH@IDCFNFFO@GetScoreFromFutureTech?$AA@ DB 'GetScoreFromFutureTech'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ODKBFJHD@GetScoreFromTechs?$AA@
CONST	SEGMENT
??_C@_0BC@ODKBFJHD@GetScoreFromTechs?$AA@ DB 'GetScoreFromTechs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GDCBBIPO@GetScoreFromWonders?$AA@
CONST	SEGMENT
??_C@_0BE@GDCBBIPO@GetScoreFromWonders?$AA@ DB 'GetScoreFromWonders', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HAMBNGEF@GetScoreFromLand?$AA@
CONST	SEGMENT
??_C@_0BB@HAMBNGEF@GetScoreFromLand?$AA@ DB 'GetScoreFromLand', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NACBPACA@GetScoreFromPopulation?$AA@
CONST	SEGMENT
??_C@_0BH@NACBPACA@GetScoreFromPopulation?$AA@ DB 'GetScoreFromPopulation'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GKJBDKOE@GetScoreFromCities?$AA@
CONST	SEGMENT
??_C@_0BD@GKJBDKOE@GetScoreFromCities?$AA@ DB 'GetScoreFromCities', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08FLBLGMDF@GetScore?$AA@
CONST	SEGMENT
??_C@_08FLBLGMDF@GetScore?$AA@ DB 'GetScore', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EANFHEEM@GetTotalTimePlayed?$AA@
CONST	SEGMENT
??_C@_0BD@EANFHEEM@GetTotalTimePlayed?$AA@ DB 'GetTotalTimePlayed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCKFHAMF@GetMilitaryMight?$AA@
CONST	SEGMENT
??_C@_0BB@FCKFHAMF@GetMilitaryMight?$AA@ DB 'GetMilitaryMight', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08JBDILNIJ@GetPower?$AA@
CONST	SEGMENT
??_C@_08JBDILNIJ@GetPower?$AA@ DB 'GetPower', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IJIJFFBJ@GetCitiesLost?$AA@
CONST	SEGMENT
??_C@_0O@IJIJFFBJ@GetCitiesLost?$AA@ DB 'GetCitiesLost', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NIHHDNHH@IsHasLostCapital?$AA@
CONST	SEGMENT
??_C@_0BB@NIHHDNHH@IsHasLostCapital?$AA@ DB 'IsHasLostCapital', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FFFOGOIP@GetCapitalCity?$AA@
CONST	SEGMENT
??_C@_0P@FFFOGOIP@GetCapitalCity?$AA@ DB 'GetCapitalCity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MKDMLCCD@GetConversionTimer?$AA@
CONST	SEGMENT
??_C@_0BD@MKDMLCCD@GetConversionTimer?$AA@ DB 'GetConversionTimer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HFKEEPGN@GetCultureBombTimer?$AA@
CONST	SEGMENT
??_C@_0BE@HFKEEPGN@GetCultureBombTimer?$AA@ DB 'GetCultureBombTimer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GOLIOFPO@GetLevelExperienceModifier?$AA@
CONST	SEGMENT
??_C@_0BL@GOLIOFPO@GetLevelExperienceModifier?$AA@ DB 'GetLevelExperience'
	DB	'Modifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KBKMOIME@GetExpInBorderModifier?$AA@
CONST	SEGMENT
??_C@_0BH@KBKMOIME@GetExpInBorderModifier?$AA@ DB 'GetExpInBorderModifier'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EJOLNPDK@GetOverflowResearch?$AA@
CONST	SEGMENT
??_C@_0BE@EJOLNPDK@GetOverflowResearch?$AA@ DB 'GetOverflowResearch', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PFEGDHIO@GetMaxConscript?$AA@
CONST	SEGMENT
??_C@_0BA@PFEGDHIO@GetMaxConscript?$AA@ DB 'GetMaxConscript', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MPFKKCHC@ChangeConscriptCount?$AA@
CONST	SEGMENT
??_C@_0BF@MPFKKCHC@ChangeConscriptCount?$AA@ DB 'ChangeConscriptCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HEDGEPGG@SetConscriptCount?$AA@
CONST	SEGMENT
??_C@_0BC@HEDGEPGG@SetConscriptCount?$AA@ DB 'SetConscriptCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FBDNMEHI@GetConscriptCount?$AA@
CONST	SEGMENT
??_C@_0BC@FBDNMEHI@GetConscriptCount?$AA@ DB 'GetConscriptCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HICDOHEK@GetHighestUnitLevel?$AA@
CONST	SEGMENT
??_C@_0BE@HICDOHEK@GetHighestUnitLevel?$AA@ DB 'GetHighestUnitLevel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KOGLACFH@IsMilitaryFoodProduction?$AA@
CONST	SEGMENT
??_C@_0BJ@KOGLACFH@IsMilitaryFoodProduction?$AA@ DB 'IsMilitaryFoodProduc'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EKFNFHH@GetHappyPerMilitaryUnit?$AA@
CONST	SEGMENT
??_C@_0BI@EKFNFHH@GetHappyPerMilitaryUnit?$AA@ DB 'GetHappyPerMilitaryUni'
	DB	't', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IFGDJNNN@GetNumMilitaryUnits?$AA@
CONST	SEGMENT
??_C@_0BE@IFGDJNNN@GetNumMilitaryUnits?$AA@ DB 'GetNumMilitaryUnits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MPNKPEH@GetExtraUnitCost?$AA@
CONST	SEGMENT
??_C@_0BB@MPNKPEH@GetExtraUnitCost?$AA@ DB 'GetExtraUnitCost', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IBDMECLP@GetGoldPerMilitaryUnit?$AA@
CONST	SEGMENT
??_C@_0BH@IBDMECLP@GetGoldPerMilitaryUnit?$AA@ DB 'GetGoldPerMilitaryUnit'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@NAABFPGN@ChangeGoldPerUnitTimes100?$AA@
CONST	SEGMENT
??_C@_0BK@NAABFPGN@ChangeGoldPerUnitTimes100?$AA@ DB 'ChangeGoldPerUnitTi'
	DB	'mes100', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KLHLMHGG@GetGoldPerUnit?$AA@
CONST	SEGMENT
??_C@_0P@KLHLMHGG@GetGoldPerUnit?$AA@ DB 'GetGoldPerUnit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FFLHNPMI@GetNumOutsideUnits?$AA@
CONST	SEGMENT
??_C@_0BD@FFLHNPMI@GetNumOutsideUnits?$AA@ DB 'GetNumOutsideUnits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CHLGKBKN@GetNumNukeUnits?$AA@
CONST	SEGMENT
??_C@_0BA@CHLGKBKN@GetNumNukeUnits?$AA@ DB 'GetNumNukeUnits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CNBJGBKN@GetCityDefenseModifier?$AA@
CONST	SEGMENT
??_C@_0BH@CNBJGBKN@GetCityDefenseModifier?$AA@ DB 'GetCityDefenseModifier'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JFCPPOKA@GetNumUnitsOutOfSupply?$AA@
CONST	SEGMENT
??_C@_0BH@JFCPPOKA@GetNumUnitsOutOfSupply?$AA@ DB 'GetNumUnitsOutOfSupply'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@CBHKKKOG@GetNumUnitsSuppliedByPopulation?$AA@
CONST	SEGMENT
??_C@_0CA@CBHKKKOG@GetNumUnitsSuppliedByPopulation?$AA@ DB 'GetNumUnitsSu'
	DB	'ppliedByPopulation', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IPDKBGHK@GetNumUnitsSuppliedByCities?$AA@
CONST	SEGMENT
??_C@_0BM@IPDKBGHK@GetNumUnitsSuppliedByCities?$AA@ DB 'GetNumUnitsSuppli'
	DB	'edByCities', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PMEHJMFO@GetNumUnitsSuppliedByHandicap?$AA@
CONST	SEGMENT
??_C@_0BO@PMEHJMFO@GetNumUnitsSuppliedByHandicap?$AA@ DB 'GetNumUnitsSupp'
	DB	'liedByHandicap', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BILKHCNA@GetNumUnitsSupplied?$AA@
CONST	SEGMENT
??_C@_0BE@BILKHCNA@GetNumUnitsSupplied?$AA@ DB 'GetNumUnitsSupplied', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@MEMPLKAL@GetUnitProductionMaintenanceMod?$AA@
CONST	SEGMENT
??_C@_0CA@MEMPLKAL@GetUnitProductionMaintenanceMod?$AA@ DB 'GetUnitProduc'
	DB	'tionMaintenanceMod', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HMIHDNFC@GetWonderProductionModifier?$AA@
CONST	SEGMENT
??_C@_0BM@HMIHDNFC@GetWonderProductionModifier?$AA@ DB 'GetWonderProducti'
	DB	'onModifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OBJBHEJM@GetCapitalSettlerProductionModif@
CONST	SEGMENT
??_C@_0CE@OBJBHEJM@GetCapitalSettlerProductionModif@ DB 'GetCapitalSettle'
	DB	'rProductionModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PJHHAPCJ@GetSettlerProductionModifier?$AA@
CONST	SEGMENT
??_C@_0BN@PJHHAPCJ@GetSettlerProductionModifier?$AA@ DB 'GetSettlerProduc'
	DB	'tionModifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EMAHKCFF@GetSpaceProductionModifier?$AA@
CONST	SEGMENT
??_C@_0BL@EMAHKCFF@GetSpaceProductionModifier?$AA@ DB 'GetSpaceProduction'
	DB	'Modifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@FAMIPBGF@GetMilitaryProductionModifier?$AA@
CONST	SEGMENT
??_C@_0BO@FAMIPBGF@GetMilitaryProductionModifier?$AA@ DB 'GetMilitaryProd'
	DB	'uctionModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@EGHOKLNO@GetImprovementUpgradeRateModifie@
CONST	SEGMENT
??_C@_0CC@EGHOKLNO@GetImprovementUpgradeRateModifie@ DB 'GetImprovementUp'
	DB	'gradeRateModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OLIFBLOM@GetWorkerSpeedModifier?$AA@
CONST	SEGMENT
??_C@_0BH@OLIFBLOM@GetWorkerSpeedModifier?$AA@ DB 'GetWorkerSpeedModifier'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@CNPJHBNO@GetFeatureProductionModifier?$AA@
CONST	SEGMENT
??_C@_0BN@CNPJHBNO@GetFeatureProductionModifier?$AA@ DB 'GetFeatureProduc'
	DB	'tionModifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KJGDLEFF@GetFreeExperience?$AA@
CONST	SEGMENT
??_C@_0BC@KJGDLEFF@GetFreeExperience?$AA@ DB 'GetFreeExperience', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@IPPDDFAE@GetMaxPlayerBuildingProductionMo@
CONST	SEGMENT
??_C@_0CH@IPPDDFAE@GetMaxPlayerBuildingProductionMo@ DB 'GetMaxPlayerBuil'
	DB	'dingProductionModifier', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@IEGALNMD@GetMaxTeamBuildingProductionModi@
CONST	SEGMENT
??_C@_0CF@IEGALNMD@GetMaxTeamBuildingProductionModi@ DB 'GetMaxTeamBuildi'
	DB	'ngProductionModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@MPJDKCLN@GetMaxGlobalBuildingProductionMo@
CONST	SEGMENT
??_C@_0CH@MPJDKCLN@GetMaxGlobalBuildingProductionMo@ DB 'GetMaxGlobalBuil'
	DB	'dingProductionModifier', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@IIOBOOCG@GetSpecialistProductionModifier?$AA@
CONST	SEGMENT
??_C@_0CA@IIOBOOCG@GetSpecialistProductionModifier?$AA@ DB 'GetSpecialist'
	DB	'ProductionModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FIGLLOHP@GetProjectProductionModifier?$AA@
CONST	SEGMENT
??_C@_0BN@FIGLLOHP@GetProjectProductionModifier?$AA@ DB 'GetProjectProduc'
	DB	'tionModifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BOIFPPNB@GetBuildingProductionModifier?$AA@
CONST	SEGMENT
??_C@_0BO@BOIFPPNB@GetBuildingProductionModifier?$AA@ DB 'GetBuildingProd'
	DB	'uctionModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CAONOBAD@GetUnitProductionModifier?$AA@
CONST	SEGMENT
??_C@_0BK@CAONOBAD@GetUnitProductionModifier?$AA@ DB 'GetUnitProductionMo'
	DB	'difier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@COALBBFM@GetProductionModifier?$AA@
CONST	SEGMENT
??_C@_0BG@COALBBFM@GetProductionModifier?$AA@ DB 'GetProductionModifier', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HOFMMBHK@GetPolicyGreatEngineerRateModifi@
CONST	SEGMENT
??_C@_0CD@HOFMMBHK@GetPolicyGreatEngineerRateModifi@ DB 'GetPolicyGreatEn'
	DB	'gineerRateModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@DKCDGIM@GetPolicyGreatMerchantRateModifi@
CONST	SEGMENT
??_C@_0CD@DKCDGIM@GetPolicyGreatMerchantRateModifi@ DB 'GetPolicyGreatMer'
	DB	'chantRateModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@DBDAMIKN@GetPolicyGreatScientistRateModif@
CONST	SEGMENT
??_C@_0CE@DBDAMIKN@GetPolicyGreatScientistRateModif@ DB 'GetPolicyGreatSc'
	DB	'ientistRateModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@JHHGEB@GetPolicyGreatMusicianRateModifi@
CONST	SEGMENT
??_C@_0CD@JHHGEB@GetPolicyGreatMusicianRateModifi@ DB 'GetPolicyGreatMusi'
	DB	'cianRateModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@MMGEIAFA@GetPolicyGreatArtistRateModifier@
CONST	SEGMENT
??_C@_0CB@MMGEIAFA@GetPolicyGreatArtistRateModifier@ DB 'GetPolicyGreatAr'
	DB	'tistRateModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@DGCCPGOK@GetPolicyGreatWriterRateModifier@
CONST	SEGMENT
??_C@_0CB@DGCCPGOK@GetPolicyGreatWriterRateModifier@ DB 'GetPolicyGreatWr'
	DB	'iterRateModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@LFJJFBJB@GetPolicyGreatPeopleRateModifier@
CONST	SEGMENT
??_C@_0CB@LFJJFBJB@GetPolicyGreatPeopleRateModifier@ DB 'GetPolicyGreatPe'
	DB	'opleRateModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@GFFELKAF@GetGreatEngineerRateModifier?$AA@
CONST	SEGMENT
??_C@_0BN@GFFELKAF@GetGreatEngineerRateModifier?$AA@ DB 'GetGreatEngineer'
	DB	'RateModifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@BIKKENPD@GetGreatMerchantRateModifier?$AA@
CONST	SEGMENT
??_C@_0BN@BIKKENPD@GetGreatMerchantRateModifier?$AA@ DB 'GetGreatMerchant'
	DB	'RateModifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PBJBKMHL@GetGreatScientistRateModifier?$AA@
CONST	SEGMENT
??_C@_0BO@PBJBKMHL@GetGreatScientistRateModifier?$AA@ DB 'GetGreatScienti'
	DB	'stRateModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@BLJPANDO@GetGreatMusicianRateModifier?$AA@
CONST	SEGMENT
??_C@_0BN@BLJPANDO@GetGreatMusicianRateModifier?$AA@ DB 'GetGreatMusician'
	DB	'RateModifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@KECMPOFM@GetGreatArtistRateModifier?$AA@
CONST	SEGMENT
??_C@_0BL@KECMPOFM@GetGreatArtistRateModifier?$AA@ DB 'GetGreatArtistRate'
	DB	'Modifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FOGKIIOG@GetGreatWriterRateModifier?$AA@
CONST	SEGMENT
??_C@_0BL@FOGKIIOG@GetGreatWriterRateModifier?$AA@ DB 'GetGreatWriterRate'
	DB	'Modifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@NBFMLJOA@GetDomesticGreatGeneralRateModif@
CONST	SEGMENT
??_C@_0CE@NBFMLJOA@GetDomesticGreatGeneralRateModif@ DB 'GetDomesticGreat'
	DB	'GeneralRateModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BPCIOMLO@GetGreatGeneralRateModifier?$AA@
CONST	SEGMENT
??_C@_0BM@BPCIOMLO@GetGreatGeneralRateModifier?$AA@ DB 'GetGreatGeneralRa'
	DB	'teModifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NNNBCPJN@GetGreatPeopleRateModifier?$AA@
CONST	SEGMENT
??_C@_0BL@NNNBCPJN@GetGreatPeopleRateModifier?$AA@ DB 'GetGreatPeopleRate'
	DB	'Modifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@GGFJPDKI@GetGreatAdmiralsThresholdModifie@
CONST	SEGMENT
??_C@_0CC@GGFJPDKI@GetGreatAdmiralsThresholdModifie@ DB 'GetGreatAdmirals'
	DB	'ThresholdModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@KEPHPFIK@GetGreatGeneralsThresholdModifie@
CONST	SEGMENT
??_C@_0CC@KEPHPFIK@GetGreatGeneralsThresholdModifie@ DB 'GetGreatGenerals'
	DB	'ThresholdModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@CKCODGOH@GetGreatPeopleThresholdModifier?$AA@
CONST	SEGMENT
??_C@_0CA@CKCODGOH@GetGreatPeopleThresholdModifier?$AA@ DB 'GetGreatPeopl'
	DB	'eThresholdModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JEHAPHOE@GetGreatGeneralsCreated?$AA@
CONST	SEGMENT
??_C@_0BI@JEHAPHOE@GetGreatGeneralsCreated?$AA@ DB 'GetGreatGeneralsCreat'
	DB	'ed', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GOOPLPC@GetGreatPeopleCreated?$AA@
CONST	SEGMENT
??_C@_0BG@GOOPLPC@GetGreatPeopleCreated?$AA@ DB 'GetGreatPeopleCreated', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PBNOMGLK@CreateGreatGeneral?$AA@
CONST	SEGMENT
??_C@_0BD@PBNOMGLK@CreateGreatGeneral?$AA@ DB 'CreateGreatGeneral', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EAPJMMAA@GetHurryModifier?$AA@
CONST	SEGMENT
??_C@_0BB@EAPJMMAA@GetHurryModifier?$AA@ DB 'GetHurryModifier', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@HCINBNOL@GetGoldenAgeGreatMusicianRateMod@
CONST	SEGMENT
??_C@_0CG@HCINBNOL@GetGoldenAgeGreatMusicianRateMod@ DB 'GetGoldenAgeGrea'
	DB	'tMusicianRateModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@HHFLCCEA@GetGoldenAgeGreatArtistRateModif@
CONST	SEGMENT
??_C@_0CE@HHFLCCEA@GetGoldenAgeGreatArtistRateModif@ DB 'GetGoldenAgeGrea'
	DB	'tArtistRateModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@INBNFEPK@GetGoldenAgeGreatWriterRateModif@
CONST	SEGMENT
??_C@_0CE@INBNFEPK@GetGoldenAgeGreatWriterRateModif@ DB 'GetGoldenAgeGrea'
	DB	'tWriterRateModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GFBIOEFN@GetGoldenAgeTourismModifier?$AA@
CONST	SEGMENT
??_C@_0BM@GFBIOEFN@GetGoldenAgeTourismModifier?$AA@ DB 'GetGoldenAgeTouri'
	DB	'smModifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GCOBNFFJ@GetGoldenAgeModifier?$AA@
CONST	SEGMENT
??_C@_0BF@GCOBNFFJ@GetGoldenAgeModifier?$AA@ DB 'GetGoldenAgeModifier', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HJMIOKAH@GetStrikeTurns?$AA@
CONST	SEGMENT
??_C@_0P@HJMIOKAH@GetStrikeTurns?$AA@ DB 'GetStrikeTurns', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FPIFLKMJ@ChangeNumUnitGoldenAges?$AA@
CONST	SEGMENT
??_C@_0BI@FPIFLKMJ@ChangeNumUnitGoldenAges?$AA@ DB 'ChangeNumUnitGoldenAg'
	DB	'es', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LCGDAHFL@GetNumUnitGoldenAges?$AA@
CONST	SEGMENT
??_C@_0BF@LCGDAHFL@GetNumUnitGoldenAges?$AA@ DB 'GetNumUnitGoldenAges', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OADGEBIB@ChangeGoldenAgeTurns?$AA@
CONST	SEGMENT
??_C@_0BF@OADGEBIB@ChangeGoldenAgeTurns?$AA@ DB 'ChangeGoldenAgeTurns', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EBKACFHH@IsGoldenAge?$AA@
CONST	SEGMENT
??_C@_0M@EBKACFHH@IsGoldenAge?$AA@ DB 'IsGoldenAge', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FNIABJJO@GetGoldenAgeLength?$AA@
CONST	SEGMENT
??_C@_0BD@FNIABJJO@GetGoldenAgeLength?$AA@ DB 'GetGoldenAgeLength', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HOFBCHIL@GetGoldenAgeTurns?$AA@
CONST	SEGMENT
??_C@_0BC@HOFBCHIL@GetGoldenAgeTurns?$AA@ DB 'GetGoldenAgeTurns', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EPHOEOBB@ChangeNumGoldenAges?$AA@
CONST	SEGMENT
??_C@_0BE@EPHOEOBB@ChangeNumGoldenAges?$AA@ DB 'ChangeNumGoldenAges', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CINEFJKE@SetNumGoldenAges?$AA@
CONST	SEGMENT
??_C@_0BB@CINEFJKE@SetNumGoldenAges?$AA@ DB 'SetNumGoldenAges', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EMINOHBG@GetNumGoldenAges?$AA@
CONST	SEGMENT
??_C@_0BB@EMINOHBG@GetNumGoldenAges?$AA@ DB 'GetNumGoldenAges', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FJAKLENJ@ChangeGoldenAgeProgressMeter?$AA@
CONST	SEGMENT
??_C@_0BN@FJAKLENJ@ChangeGoldenAgeProgressMeter?$AA@ DB 'ChangeGoldenAgeP'
	DB	'rogressMeter', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@NLKNLKPL@SetGoldenAgeProgressMeter?$AA@
CONST	SEGMENT
??_C@_0BK@NLKNLKPL@SetGoldenAgeProgressMeter?$AA@ DB 'SetGoldenAgeProgres'
	DB	'sMeter', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FLGLHHFN@GetGoldenAgeProgressMeter?$AA@
CONST	SEGMENT
??_C@_0BK@FLGLHHFN@GetGoldenAgeProgressMeter?$AA@ DB 'GetGoldenAgeProgres'
	DB	'sMeter', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@LPPFEDND@GetGoldenAgeProgressThreshold?$AA@
CONST	SEGMENT
??_C@_0BO@LPPFEDND@GetGoldenAgeProgressThreshold?$AA@ DB 'GetGoldenAgePro'
	DB	'gressThreshold', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CGIAJLKI@GetTourismBonusTurns?$AA@
CONST	SEGMENT
??_C@_0BF@CGIAJLKI@GetTourismBonusTurns?$AA@ DB 'GetTourismBonusTurns', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@ECALGNHI@GetCultureBonusTurns?$AA@
CONST	SEGMENT
??_C@_0BF@ECALGNHI@GetCultureBonusTurns?$AA@ DB 'GetCultureBonusTurns', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DHPFLJOB@GetAttackBonusTurns?$AA@
CONST	SEGMENT
??_C@_0BE@DHPFLJOB@GetAttackBonusTurns?$AA@ DB 'GetAttackBonusTurns', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@EFPNHEAL@GetAdvancedStartVisibilityCost?$AA@
CONST	SEGMENT
??_C@_0BP@EFPNHEAL@GetAdvancedStartVisibilityCost?$AA@ DB 'GetAdvancedSta'
	DB	'rtVisibilityCost', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BIBNNGIB@GetAdvancedStartTechCost?$AA@
CONST	SEGMENT
??_C@_0BJ@BIBNNGIB@GetAdvancedStartTechCost?$AA@ DB 'GetAdvancedStartTech'
	DB	'Cost', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JJCKPMNB@GetAdvancedStartRouteCost?$AA@
CONST	SEGMENT
??_C@_0BK@JJCKPMNB@GetAdvancedStartRouteCost?$AA@ DB 'GetAdvancedStartRou'
	DB	'teCost', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@DCEELAJ@GetAdvancedStartImprovementCost?$AA@
CONST	SEGMENT
??_C@_0CA@DCEELAJ@GetAdvancedStartImprovementCost?$AA@ DB 'GetAdvancedSta'
	DB	'rtImprovementCost', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@BBJMEHC@GetAdvancedStartBuildingCost?$AA@
CONST	SEGMENT
??_C@_0BN@BBJMEHC@GetAdvancedStartBuildingCost?$AA@ DB 'GetAdvancedStartB'
	DB	'uildingCost', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FOAJKADD@GetAdvancedStartPopCost?$AA@
CONST	SEGMENT
??_C@_0BI@FOAJKADD@GetAdvancedStartPopCost?$AA@ DB 'GetAdvancedStartPopCo'
	DB	'st', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@ONOAJPAI@GetAdvancedStartCityCost?$AA@
CONST	SEGMENT
??_C@_0BJ@ONOAJPAI@GetAdvancedStartCityCost?$AA@ DB 'GetAdvancedStartCity'
	DB	'Cost', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@ICGIEDDK@GetAdvancedStartUnitCost?$AA@
CONST	SEGMENT
??_C@_0BJ@ICGIEDDK@GetAdvancedStartUnitCost?$AA@ DB 'GetAdvancedStartUnit'
	DB	'Cost', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FJENIMJD@ChangeAdvancedStartPoints?$AA@
CONST	SEGMENT
??_C@_0BK@FJENIMJD@ChangeAdvancedStartPoints?$AA@ DB 'ChangeAdvancedStart'
	DB	'Points', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KOMEGBAD@SetAdvancedStartPoints?$AA@
CONST	SEGMENT
??_C@_0BH@KOMEGBAD@SetAdvancedStartPoints?$AA@ DB 'SetAdvancedStartPoints'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KPOKEGNM@GetAdvancedStartPoints?$AA@
CONST	SEGMENT
??_C@_0BH@KPOKEGNM@GetAdvancedStartPoints?$AA@ DB 'GetAdvancedStartPoints'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LEGAIOCI@ChangeAnarchyNumTurns?$AA@
CONST	SEGMENT
??_C@_0BG@LEGAIOCI@ChangeAnarchyNumTurns?$AA@ DB 'ChangeAnarchyNumTurns', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KOABDGLI@SetAnarchyNumTurns?$AA@
CONST	SEGMENT
??_C@_0BD@KOABDGLI@SetAnarchyNumTurns?$AA@ DB 'SetAnarchyNumTurns', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FECLAAFA@GetAnarchyNumTurns?$AA@
CONST	SEGMENT
??_C@_0BD@FECLAAFA@GetAnarchyNumTurns?$AA@ DB 'GetAnarchyNumTurns', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09FIFKNOKC@IsAnarchy?$AA@
CONST	SEGMENT
??_C@_09FIFKNOKC@IsAnarchy?$AA@ DB 'IsAnarchy', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08DLFCFIKN@GetTenet?$AA@
CONST	SEGMENT
??_C@_08DLFCFIKN@GetTenet?$AA@ DB 'GetTenet', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LDLHNBJO@GetAvailableTenets?$AA@
CONST	SEGMENT
??_C@_0BD@LDLHNBJO@GetAvailableTenets?$AA@ DB 'GetAvailableTenets', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HCDPPGCO@IsPolicyBranchFinished?$AA@
CONST	SEGMENT
??_C@_0BH@HCDPPGCO@IsPolicyBranchFinished?$AA@ DB 'IsPolicyBranchFinished'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PJMELKMJ@GetNumPolicyBranchesFinished?$AA@
CONST	SEGMENT
??_C@_0BN@PJMELKMJ@GetNumPolicyBranchesFinished?$AA@ DB 'GetNumPolicyBran'
	DB	'chesFinished', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KBCLIFBL@GetPolicyCatchSpiesModifier?$AA@
CONST	SEGMENT
??_C@_0BM@KBCLIFBL@GetPolicyCatchSpiesModifier?$AA@ DB 'GetPolicyCatchSpi'
	DB	'esModifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OHKMDAD@GetBranchPicked3?$AA@
CONST	SEGMENT
??_C@_0BB@OHKMDAD@GetBranchPicked3?$AA@ DB 'GetBranchPicked3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BHGBPCEC@GetBranchPicked2?$AA@
CONST	SEGMENT
??_C@_0BB@BHGBPCEC@GetBranchPicked2?$AA@ DB 'GetBranchPicked2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DMEMKBIB@GetBranchPicked1?$AA@
CONST	SEGMENT
??_C@_0BB@DMEMKBIB@GetBranchPicked1?$AA@ DB 'GetBranchPicked1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DOHPFKJL@GetLateGamePolicyTree?$AA@
CONST	SEGMENT
??_C@_0BG@DOHPFKJL@GetLateGamePolicyTree?$AA@ DB 'GetLateGamePolicyTree', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@DEKBLMFE@GetDominantPolicyBranchForTitle?$AA@
CONST	SEGMENT
??_C@_0CA@DEKBLMFE@GetDominantPolicyBranchForTitle?$AA@ DB 'GetDominantPo'
	DB	'licyBranchForTitle', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MONIAELO@CanUnlockPolicyBranch?$AA@
CONST	SEGMENT
??_C@_0BG@MONIAELO@CanUnlockPolicyBranch?$AA@ DB 'CanUnlockPolicyBranch', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JILLCNOF@DoAdoptPolicy?$AA@
CONST	SEGMENT
??_C@_0O@JILLCNOF@DoAdoptPolicy?$AA@ DB 'DoAdoptPolicy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NBAEIJPB@CanAdoptPolicy?$AA@
CONST	SEGMENT
??_C@_0P@NBAEIJPB@CanAdoptPolicy?$AA@ DB 'CanAdoptPolicy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HNDGHHDL@GetNextPolicyCost?$AA@
CONST	SEGMENT
??_C@_0BC@HNDGHHDL@GetNextPolicyCost?$AA@ DB 'GetNextPolicyCost', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CKJMFNFA@SetHasPolicy?$AA@
CONST	SEGMENT
??_C@_0N@CKJMFNFA@SetHasPolicy?$AA@ DB 'SetHasPolicy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09IMCIBCHC@HasPolicy?$AA@
CONST	SEGMENT
??_C@_09IMCIBCHC@HasPolicy?$AA@ DB 'HasPolicy', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OLJHEJDP@GetNumPoliciesInBranch?$AA@
CONST	SEGMENT
??_C@_0BH@OLJHEJDP@GetNumPoliciesInBranch?$AA@ DB 'GetNumPoliciesInBranch'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LDBNHHDO@GetNumPolicies?$AA@
CONST	SEGMENT
??_C@_0P@LDBNHHDO@GetNumPolicies?$AA@ DB 'GetNumPolicies', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@DDGOEEIN@GetNumPolicyBranchesAllowed?$AA@
CONST	SEGMENT
??_C@_0BM@DDGOEEIN@GetNumPolicyBranchesAllowed?$AA@ DB 'GetNumPolicyBranc'
	DB	'hesAllowed', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KGNNGKHG@GetPolicyBranchChosen?$AA@
CONST	SEGMENT
??_C@_0BG@KGNNGKHG@GetPolicyBranchChosen?$AA@ DB 'GetPolicyBranchChosen', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FFNPAHDM@GetNumPolicyBranchesUnlocked?$AA@
CONST	SEGMENT
??_C@_0BN@FFNPAHDM@GetNumPolicyBranchesUnlocked?$AA@ DB 'GetNumPolicyBran'
	DB	'chesUnlocked', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GJDFFJHC@SetPolicyBranchUnlocked?$AA@
CONST	SEGMENT
??_C@_0BI@GJDFFJHC@SetPolicyBranchUnlocked?$AA@ DB 'SetPolicyBranchUnlock'
	DB	'ed', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NOCEELNL@IsPolicyBranchUnlocked?$AA@
CONST	SEGMENT
??_C@_0BH@NOCEELNL@IsPolicyBranchUnlocked?$AA@ DB 'IsPolicyBranchUnlocked'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KBLODJLM@IsPolicyBranchBlocked?$AA@
CONST	SEGMENT
??_C@_0BG@KBLODJLM@IsPolicyBranchBlocked?$AA@ DB 'IsPolicyBranchBlocked', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DKMNPPBN@IsPolicyBlocked?$AA@
CONST	SEGMENT
??_C@_0BA@DKMNPPBN@IsPolicyBlocked?$AA@ DB 'IsPolicyBlocked', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NCGBNEJP@ChangeAlwaysSeeBarbCampsCount?$AA@
CONST	SEGMENT
??_C@_0BO@NCGBNEJP@ChangeAlwaysSeeBarbCampsCount?$AA@ DB 'ChangeAlwaysSee'
	DB	'BarbCampsCount', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@HIDDCHF@SetAlwaysSeeBarbCampsCount?$AA@
CONST	SEGMENT
??_C@_0BL@HIDDCHF@SetAlwaysSeeBarbCampsCount?$AA@ DB 'SetAlwaysSeeBarbCam'
	DB	'psCount', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HGKGHLME@IsAlwaysSeeBarbCamps?$AA@
CONST	SEGMENT
??_C@_0BF@HGKGHLME@IsAlwaysSeeBarbCamps?$AA@ DB 'IsAlwaysSeeBarbCamps', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@CPNKMMFB@ChangeGarrisonedCityRangeStrikeM@
CONST	SEGMENT
??_C@_0CI@CPNKMMFB@ChangeGarrisonedCityRangeStrikeM@ DB 'ChangeGarrisoned'
	DB	'CityRangeStrikeModifier', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@HCFHKNHE@GetGarrisonedCityRangeStrikeModi@
CONST	SEGMENT
??_C@_0CF@HCFHKNHE@GetGarrisonedCityRangeStrikeModi@ DB 'GetGarrisonedCit'
	DB	'yRangeStrikeModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DLHHGHDO@GetCombatBonusVsSmallerCiv?$AA@
CONST	SEGMENT
??_C@_0BL@DLHHGHDO@GetCombatBonusVsSmallerCiv?$AA@ DB 'GetCombatBonusVsSm'
	DB	'allerCiv', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CFFLCBFM@GetCombatBonusVsLargerCiv?$AA@
CONST	SEGMENT
??_C@_0BK@CFFLCBFM@GetCombatBonusVsLargerCiv?$AA@ DB 'GetCombatBonusVsLar'
	DB	'gerCiv', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NBFOBEAE@GetCombatBonusVsHigherTech?$AA@
CONST	SEGMENT
??_C@_0BL@NBFOBEAE@GetCombatBonusVsHigherTech?$AA@ DB 'GetCombatBonusVsHi'
	DB	'gherTech', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@ENNNGIPB@ChangeBarbarianCombatBonus?$AA@
CONST	SEGMENT
??_C@_0BL@ENNNGIPB@ChangeBarbarianCombatBonus?$AA@ DB 'ChangeBarbarianCom'
	DB	'batBonus', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LNCFHCFI@SetBarbarianCombatBonus?$AA@
CONST	SEGMENT
??_C@_0BI@LNCFHCFI@SetBarbarianCombatBonus?$AA@ DB 'SetBarbarianCombatBon'
	DB	'us', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KLEIJDDK@GetBarbarianCombatBonus?$AA@
CONST	SEGMENT
??_C@_0BI@KLEIJDDK@GetBarbarianCombatBonus?$AA@ DB 'GetBarbarianCombatBon'
	DB	'us', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DIIAGAEM@GetHappinessFromMinor?$AA@
CONST	SEGMENT
??_C@_0BG@DIIAGAEM@GetHappinessFromMinor?$AA@ DB 'GetHappinessFromMinor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@IHIHKILH@GetHappinessFromMinorCivs?$AA@
CONST	SEGMENT
??_C@_0BK@IHIHKILH@GetHappinessFromMinorCivs?$AA@ DB 'GetHappinessFromMin'
	DB	'orCivs', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@JLDDCPMO@GetCityConnectionTradeRouteGoldM@
CONST	SEGMENT
??_C@_0CI@JLDDCPMO@GetCityConnectionTradeRouteGoldM@ DB 'GetCityConnectio'
	DB	'nTradeRouteGoldModifier', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@CKMFDGG@ChangeHappinessPerTradeRoute?$AA@
CONST	SEGMENT
??_C@_0BN@CKMFDGG@ChangeHappinessPerTradeRoute?$AA@ DB 'ChangeHappinessPe'
	DB	'rTradeRoute', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@IAALFNEE@SetHappinessPerTradeRoute?$AA@
CONST	SEGMENT
??_C@_0BK@IAALFNEE@SetHappinessPerTradeRoute?$AA@ DB 'SetHappinessPerTrad'
	DB	'eRoute', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@MNJAOC@GetHappinessPerTradeRoute?$AA@
CONST	SEGMENT
??_C@_0BK@MNJAOC@GetHappinessPerTradeRoute?$AA@ DB 'GetHappinessPerTradeR'
	DB	'oute', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@ONEGOIFC@GetHappinessFromTradeRoutes?$AA@
CONST	SEGMENT
??_C@_0BM@ONEGOIFC@GetHappinessFromTradeRoutes?$AA@ DB 'GetHappinessFromT'
	DB	'radeRoutes', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@JPNBNLCL@ChangeHappinessPerGarrisonedUnit@
CONST	SEGMENT
??_C@_0CB@JPNBNLCL@ChangeHappinessPerGarrisonedUnit@ DB 'ChangeHappinessP'
	DB	'erGarrisonedUnit', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@HNIEFJLG@SetHappinessPerGarrisonedUnit?$AA@
CONST	SEGMENT
??_C@_0BO@HNIEFJLG@SetHappinessPerGarrisonedUnit?$AA@ DB 'SetHappinessPer'
	DB	'GarrisonedUnit', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PMOLOJJE@GetHappinessPerGarrisonedUnit?$AA@
CONST	SEGMENT
??_C@_0BO@PMOLOJJE@GetHappinessPerGarrisonedUnit?$AA@ DB 'GetHappinessPer'
	DB	'GarrisonedUnit', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HAKOEBKA@IsHalfSpecialistUnhappiness?$AA@
CONST	SEGMENT
??_C@_0BM@HAKOEBKA@IsHalfSpecialistUnhappiness?$AA@ DB 'IsHalfSpecialistU'
	DB	'nhappiness', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LDLDMFJK@GetTraitPopUnhappinessMod?$AA@
CONST	SEGMENT
??_C@_0BK@LDLDMFJK@GetTraitPopUnhappinessMod?$AA@ DB 'GetTraitPopUnhappin'
	DB	'essMod', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GIPNPCHI@GetTraitCityUnhappinessMod?$AA@
CONST	SEGMENT
??_C@_0BL@GIPNPCHI@GetTraitCityUnhappinessMod?$AA@ DB 'GetTraitCityUnhapp'
	DB	'inessMod', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GJPGDMHB@GetCapitalUnhappinessMod?$AA@
CONST	SEGMENT
??_C@_0BJ@GJPGDMHB@GetCapitalUnhappinessMod?$AA@ DB 'GetCapitalUnhappines'
	DB	'sMod', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OKFBELDK@GetOccupiedPopulationUnhappiness@
CONST	SEGMENT
??_C@_0CE@OKFBELDK@GetOccupiedPopulationUnhappiness@ DB 'GetOccupiedPopul'
	DB	'ationUnhappinessMod', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DLGEPDKJ@GetCityCountUnhappinessMod?$AA@
CONST	SEGMENT
??_C@_0BL@DLGEPDKJ@GetCityCountUnhappinessMod?$AA@ DB 'GetCityCountUnhapp'
	DB	'inessMod', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KOOANBJP@GetUnhappinessMod?$AA@
CONST	SEGMENT
??_C@_0BC@KOOANBJP@GetUnhappinessMod?$AA@ DB 'GetUnhappinessMod', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MCEIFFBM@ChangeUnhappinessFromUnits?$AA@
CONST	SEGMENT
??_C@_0BL@MCEIFFBM@ChangeUnhappinessFromUnits?$AA@ DB 'ChangeUnhappinessF'
	DB	'romUnits', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CENNKONH@GetUnhappinessFromUnits?$AA@
CONST	SEGMENT
??_C@_0BI@CENNKONH@GetUnhappinessFromUnits?$AA@ DB 'GetUnhappinessFromUni'
	DB	'ts', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@INPCOOLO@GetUnhappinessFromPublicOpinion?$AA@
CONST	SEGMENT
??_C@_0CA@INPCOOLO@GetUnhappinessFromPublicOpinion?$AA@ DB 'GetUnhappines'
	DB	'sFromPublicOpinion', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@CLBIAMK@GetUnhappinessFromPuppetCityPopu@
CONST	SEGMENT
??_C@_0CH@CLBIAMK@GetUnhappinessFromPuppetCityPopu@ DB 'GetUnhappinessFro'
	DB	'mPuppetCityPopulation', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@MKILLP@GetUnhappinessFromOccupiedCities@
CONST	SEGMENT
??_C@_0CB@MKILLP@GetUnhappinessFromOccupiedCities@ DB 'GetUnhappinessFrom'
	DB	'OccupiedCities', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@BMLAPPGM@GetUnhappinessFromCitySpecialist@
CONST	SEGMENT
??_C@_0CC@BMLAPPGM@GetUnhappinessFromCitySpecialist@ DB 'GetUnhappinessFr'
	DB	'omCitySpecialists', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KBOPPOAK@GetUnhappinessFromCityPopulation@
CONST	SEGMENT
??_C@_0CB@KBOPPOAK@GetUnhappinessFromCityPopulation@ DB 'GetUnhappinessFr'
	DB	'omCityPopulation', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@ECLIBGEO@GetUnhappinessFromCapturedCityCo@
CONST	SEGMENT
??_C@_0CE@ECLIBGEO@GetUnhappinessFromCapturedCityCo@ DB 'GetUnhappinessFr'
	DB	'omCapturedCityCount', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OCKLJKNC@GetUnhappinessFromCityCount?$AA@
CONST	SEGMENT
??_C@_0BM@OCKLJKNC@GetUnhappinessFromCityCount?$AA@ DB 'GetUnhappinessFro'
	DB	'mCityCount', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GNGHHBBH@GetUnhappinessFromCityForUI?$AA@
CONST	SEGMENT
??_C@_0BM@GNGHHBBH@GetUnhappinessFromCityForUI?$AA@ DB 'GetUnhappinessFro'
	DB	'mCityForUI', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MKFGHBDK@GetUnhappinessForecast?$AA@
CONST	SEGMENT
??_C@_0BH@MKFGHBDK@GetUnhappinessForecast?$AA@ DB 'GetUnhappinessForecast'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DDCLBDGA@GetUnhappiness?$AA@
CONST	SEGMENT
??_C@_0P@DDCLBDGA@GetUnhappiness?$AA@ DB 'GetUnhappiness', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MILNBGI@GetHappinessFromLeagues?$AA@
CONST	SEGMENT
??_C@_0BI@MILNBGI@GetHappinessFromLeagues?$AA@ DB 'GetHappinessFromLeague'
	DB	's', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@GFJNHLAE@GetHappinessFromNaturalWonders?$AA@
CONST	SEGMENT
??_C@_0BP@GFJNHLAE@GetHappinessFromNaturalWonders?$AA@ DB 'GetHappinessFr'
	DB	'omNaturalWonders', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MCAOJMIP@GetHappinessFromReligion?$AA@
CONST	SEGMENT
??_C@_0BJ@MCAOJMIP@GetHappinessFromReligion?$AA@ DB 'GetHappinessFromReli'
	DB	'gion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EEBALAOF@GetExtraHappinessPerLuxury?$AA@
CONST	SEGMENT
??_C@_0BL@EEBALAOF@GetExtraHappinessPerLuxury?$AA@ DB 'GetExtraHappinessP'
	DB	'erLuxury', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NPGNMMND@GetHappinessFromResourceVariety?$AA@
CONST	SEGMENT
??_C@_0CA@NPGNMMND@GetHappinessFromResourceVariety?$AA@ DB 'GetHappinessF'
	DB	'romResourceVariety', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KADBPJPP@GetHappinessFromResources?$AA@
CONST	SEGMENT
??_C@_0BK@KADBPJPP@GetHappinessFromResources?$AA@ DB 'GetHappinessFromRes'
	DB	'ources', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BDKBHECI@ChangeExtraHappinessPerCity?$AA@
CONST	SEGMENT
??_C@_0BM@BDKBHECI@ChangeExtraHappinessPerCity?$AA@ DB 'ChangeExtraHappin'
	DB	'essPerCity', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BPPBPKOL@GetExtraHappinessPerCity?$AA@
CONST	SEGMENT
??_C@_0BJ@BPPBPKOL@GetExtraHappinessPerCity?$AA@ DB 'GetExtraHappinessPer'
	DB	'City', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@NJJIHGAG@GetHappinessFromBuildings?$AA@
CONST	SEGMENT
??_C@_0BK@NJJIHGAG@GetHappinessFromBuildings?$AA@ DB 'GetHappinessFromBui'
	DB	'ldings', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DNCNLJLJ@GetHappinessFromCities?$AA@
CONST	SEGMENT
??_C@_0BH@DNCNLJLJ@GetHappinessFromCities?$AA@ DB 'GetHappinessFromCities'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HKEDOHML@GetHappinessFromPolicies?$AA@
CONST	SEGMENT
??_C@_0BJ@HKEDOHML@GetHappinessFromPolicies?$AA@ DB 'GetHappinessFromPoli'
	DB	'cies', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IJAIICIJ@IsEmpireSuperUnhappy?$AA@
CONST	SEGMENT
??_C@_0BF@IJAIICIJ@IsEmpireSuperUnhappy?$AA@ DB 'IsEmpireSuperUnhappy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DBNNOCLK@IsEmpireVeryUnhappy?$AA@
CONST	SEGMENT
??_C@_0BE@DBNNOCLK@IsEmpireVeryUnhappy?$AA@ DB 'IsEmpireVeryUnhappy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NHLHHEED@IsEmpireUnhappy?$AA@
CONST	SEGMENT
??_C@_0BA@NHLHHEED@IsEmpireUnhappy?$AA@ DB 'IsEmpireUnhappy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KNCDHHMN@GetExcessHappiness?$AA@
CONST	SEGMENT
??_C@_0BD@KNCDHHMN@GetExcessHappiness?$AA@ DB 'GetExcessHappiness', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GLCICHBA@SetHappiness?$AA@
CONST	SEGMENT
??_C@_0N@GLCICHBA@SetHappiness?$AA@ DB 'SetHappiness', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BPJGOLFM@GetHappiness?$AA@
CONST	SEGMENT
??_C@_0N@BPJGOLFM@GetHappiness?$AA@ DB 'GetHappiness', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KDEEONIG@DoesUnitPassFaithPurchaseCheck?$AA@
CONST	SEGMENT
??_C@_0BP@KDEEONIG@DoesUnitPassFaithPurchaseCheck?$AA@ DB 'DoesUnitPassFa'
	DB	'ithPurchaseCheck', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LGIHCJNG@HasReligionInMostCities?$AA@
CONST	SEGMENT
??_C@_0BI@LGIHCJNG@HasReligionInMostCities?$AA@ DB 'HasReligionInMostCiti'
	DB	'es', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@BOJACAPD@GetMinimumFaithNextGreatProphet?$AA@
CONST	SEGMENT
??_C@_0CA@BOJACAPD@GetMinimumFaithNextGreatProphet?$AA@ DB 'GetMinimumFai'
	DB	'thNextGreatProphet', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@IMONNDBE@GetFoundedReligionFriendlyCityCo@
CONST	SEGMENT
??_C@_0CI@IMONNDBE@GetFoundedReligionFriendlyCityCo@ DB 'GetFoundedReligi'
	DB	'onFriendlyCityCombatMod', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@LIFLPEAN@GetFoundedReligionEnemyCityComba@
CONST	SEGMENT
??_C@_0CF@LIFLPEAN@GetFoundedReligionEnemyCityComba@ DB 'GetFoundedReligi'
	DB	'onEnemyCityCombatMod', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NDMELHHP@GetReligionCreatedByPlayer?$AA@
CONST	SEGMENT
??_C@_0BL@NDMELHHP@GetReligionCreatedByPlayer?$AA@ DB 'GetReligionCreated'
	DB	'ByPlayer', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BEJANDOH@CanCreatePantheon?$AA@
CONST	SEGMENT
??_C@_0BC@BEJANDOH@CanCreatePantheon?$AA@ DB 'CanCreatePantheon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IANGKFOG@HasCreatedReligion?$AA@
CONST	SEGMENT
??_C@_0BD@IANGKFOG@HasCreatedReligion?$AA@ DB 'HasCreatedReligion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NCIMNEEK@GetBeliefInPantheon?$AA@
CONST	SEGMENT
??_C@_0BE@NCIMNEEK@GetBeliefInPantheon?$AA@ DB 'GetBeliefInPantheon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MKDLKLJP@HasCreatedPantheon?$AA@
CONST	SEGMENT
??_C@_0BD@MKDLKLJP@HasCreatedPantheon?$AA@ DB 'HasCreatedPantheon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MIKGEGGL@CanFaithGiftMinors?$AA@
CONST	SEGMENT
??_C@_0BD@MIKGEGGL@CanFaithGiftMinors?$AA@ DB 'CanFaithGiftMinors', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@FBEILFDB@GetFaithPerTurnFromReligion?$AA@
CONST	SEGMENT
??_C@_0BM@FBEILFDB@GetFaithPerTurnFromReligion?$AA@ DB 'GetFaithPerTurnFr'
	DB	'omReligion', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KLMNHABF@GetFaithPerTurnFromMinorCivs?$AA@
CONST	SEGMENT
??_C@_0BN@KLMNHABF@GetFaithPerTurnFromMinorCivs?$AA@ DB 'GetFaithPerTurnF'
	DB	'romMinorCivs', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DEPMGGBK@GetFaithPerTurnFromCities?$AA@
CONST	SEGMENT
??_C@_0BK@DEPMGGBK@GetFaithPerTurnFromCities?$AA@ DB 'GetFaithPerTurnFrom'
	DB	'Cities', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KAKKKCDB@GetTotalFaithPerTurn?$AA@
CONST	SEGMENT
??_C@_0BF@KAKKKCDB@GetTotalFaithPerTurn?$AA@ DB 'GetTotalFaithPerTurn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EFEFPKFD@ChangeFaith?$AA@
CONST	SEGMENT
??_C@_0M@EFEFPKFD@ChangeFaith?$AA@ DB 'ChangeFaith', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08BHKEOCCD@SetFaith?$AA@
CONST	SEGMENT
??_C@_08BHKEOCCD@SetFaith?$AA@ DB 'SetFaith', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08OGIIPBFO@GetFaith?$AA@
CONST	SEGMENT
??_C@_08OGIIPBFO@GetFaith?$AA@ DB 'GetFaith', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FMOOCJFI@GetNumGreatWorkSlots?$AA@
CONST	SEGMENT
??_C@_0BF@FMOOCJFI@GetNumGreatWorkSlots?$AA@ DB 'GetNumGreatWorkSlots', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ILOKIPKM@GetNumGreatWorks?$AA@
CONST	SEGMENT
??_C@_0BB@ILOKIPKM@GetNumGreatWorks?$AA@ DB 'GetNumGreatWorks', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HEKMPHCD@GetWrittenArtifactCulture?$AA@
CONST	SEGMENT
??_C@_0BK@HEKMPHCD@GetWrittenArtifactCulture?$AA@ DB 'GetWrittenArtifactC'
	DB	'ulture', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EOCBNBBC@GetNextDigCompletePlot?$AA@
CONST	SEGMENT
??_C@_0BH@EOCBNBBC@GetNextDigCompletePlot?$AA@ DB 'GetNextDigCompletePlot'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@OKDECLG@GetBuildingOfClosestGreatWorkSlo@
CONST	SEGMENT
??_C@_0CC@OKDECLG@GetBuildingOfClosestGreatWorkSlo@ DB 'GetBuildingOfClos'
	DB	'estGreatWorkSlot', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NCOJGFIE@GetCityOfClosestGreatWorkSlot?$AA@
CONST	SEGMENT
??_C@_0BO@NCOJGFIE@GetCityOfClosestGreatWorkSlot?$AA@ DB 'GetCityOfCloses'
	DB	'tGreatWorkSlot', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FHJPCAFI@HasAvailableGreatWorkSlot?$AA@
CONST	SEGMENT
??_C@_0BK@FHJPCAFI@HasAvailableGreatWorkSlot?$AA@ DB 'HasAvailableGreatWo'
	DB	'rkSlot', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@JOPJDOGM@GetPublicOpinionUnhappinessToolt@
CONST	SEGMENT
??_C@_0CD@JOPJDOGM@GetPublicOpinionUnhappinessToolt@ DB 'GetPublicOpinion'
	DB	'UnhappinessTooltip', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JKFIJPGB@GetPublicOpinionUnhappiness?$AA@
CONST	SEGMENT
??_C@_0BM@JKFIJPGB@GetPublicOpinionUnhappiness?$AA@ DB 'GetPublicOpinionU'
	DB	'nhappiness', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@PLLLEMKO@GetPublicOpinionTooltip?$AA@
CONST	SEGMENT
??_C@_0BI@PLLLEMKO@GetPublicOpinionTooltip?$AA@ DB 'GetPublicOpinionToolt'
	DB	'ip', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@MILACHKP@GetPublicOpinionPreferredIdeolog@
CONST	SEGMENT
??_C@_0CC@MILACHKP@GetPublicOpinionPreferredIdeolog@ DB 'GetPublicOpinion'
	DB	'PreferredIdeology', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IIIEGGHB@GetPublicOpinionType?$AA@
CONST	SEGMENT
??_C@_0BF@IIIEGGHB@GetPublicOpinionType?$AA@ DB 'GetPublicOpinionType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@KBFACNE@GetTourismModifierWithTooltip?$AA@
CONST	SEGMENT
??_C@_0BO@KBFACNE@GetTourismModifierWithTooltip?$AA@ DB 'GetTourismModifi'
	DB	'erWithTooltip', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LEGCHAJ@GetTourismModifierWith?$AA@
CONST	SEGMENT
??_C@_0BH@LEGCHAJ@GetTourismModifierWith?$AA@ DB 'GetTourismModifierWith', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EFCPIKBF@GetTourism?$AA@
CONST	SEGMENT
??_C@_0L@EFCPIKBF@GetTourism?$AA@ DB 'GetTourism', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PBMHLJLN@GetInfluenceSpyRankTooltip?$AA@
CONST	SEGMENT
??_C@_0BL@PBMHLJLN@GetInfluenceSpyRankTooltip?$AA@ DB 'GetInfluenceSpyRan'
	DB	'kTooltip', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@OGCLKEOM@GetInfluenceMajorCivSpyRankBonus@
CONST	SEGMENT
??_C@_0CB@OGCLKEOM@GetInfluenceMajorCivSpyRankBonus@ DB 'GetInfluenceMajo'
	DB	'rCivSpyRankBonus', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@GKICPACC@GetInfluenceCityStateSpyRankBonu@
CONST	SEGMENT
??_C@_0CC@GKICPACC@GetInfluenceCityStateSpyRankBonu@ DB 'GetInfluenceCity'
	DB	'StateSpyRankBonus', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@JDKNKPMO@GetInfluenceTradeRouteScienceBon@
CONST	SEGMENT
??_C@_0CD@JDKNKPMO@GetInfluenceTradeRouteScienceBon@ DB 'GetInfluenceTrad'
	DB	'eRouteScienceBonus', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IMBBHDIP@GetNumCivsToBeInfluentialOn?$AA@
CONST	SEGMENT
??_C@_0BM@IMBBHDIP@GetNumCivsToBeInfluentialOn?$AA@ DB 'GetNumCivsToBeInf'
	DB	'luentialOn', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BFKABOF@GetNumCivsInfluentialOn?$AA@
CONST	SEGMENT
??_C@_0BI@BFKABOF@GetNumCivsInfluentialOn?$AA@ DB 'GetNumCivsInfluentialO'
	DB	'n', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KILNCCEE@GetTurnsToInfluential?$AA@
CONST	SEGMENT
??_C@_0BG@KILNCCEE@GetTurnsToInfluential?$AA@ DB 'GetTurnsToInfluential', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MHAHIFEE@GetInfluenceTrend?$AA@
CONST	SEGMENT
??_C@_0BC@MHAHIFEE@GetInfluenceTrend?$AA@ DB 'GetInfluenceTrend', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HMGCNDLI@GetInfluenceLevel?$AA@
CONST	SEGMENT
??_C@_0BC@HMGCNDLI@GetInfluenceLevel?$AA@ DB 'GetInfluenceLevel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JOBIMOPK@GetInfluencePerTurn?$AA@
CONST	SEGMENT
??_C@_0BE@JOBIMOPK@GetInfluencePerTurn?$AA@ DB 'GetInfluencePerTurn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OBMBCGGO@GetLastTurnInfluenceOn?$AA@
CONST	SEGMENT
??_C@_0BH@OBMBCGGO@GetLastTurnInfluenceOn?$AA@ DB 'GetLastTurnInfluenceOn'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JPDBFNBF@GetInfluenceOn?$AA@
CONST	SEGMENT
??_C@_0P@JPDBFNBF@GetInfluenceOn?$AA@ DB 'GetInfluenceOn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OMAEEPPN@GetLastTurnLifetimeCulture?$AA@
CONST	SEGMENT
??_C@_0BL@OMAEEPPN@GetLastTurnLifetimeCulture?$AA@ DB 'GetLastTurnLifetim'
	DB	'eCulture', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@NBLAPLAA@GetJONSCultureEverGenerated?$AA@
CONST	SEGMENT
??_C@_0BM@NBLAPLAA@GetJONSCultureEverGenerated?$AA@ DB 'GetJONSCultureEve'
	DB	'rGenerated', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LCMCLAMC@ChangeJONSCulture?$AA@
CONST	SEGMENT
??_C@_0BC@LCMCLAMC@ChangeJONSCulture?$AA@ DB 'ChangeJONSCulture', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OIILLNMD@SetJONSCulture?$AA@
CONST	SEGMENT
??_C@_0P@OIILLNMD@SetJONSCulture?$AA@ DB 'SetJONSCulture', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CGJFEHOP@GetJONSCulture?$AA@
CONST	SEGMENT
??_C@_0P@CGJFEHOP@GetJONSCulture?$AA@ DB 'GetJONSCulture', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HKAGHDHI@GetCultureCityModifier?$AA@
CONST	SEGMENT
??_C@_0BH@HKAGHDHI@GetCultureCityModifier?$AA@ DB 'GetCultureCityModifier'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@IGMAMKOC@GetCulturePerTurnFromBonusTurns?$AA@
CONST	SEGMENT
??_C@_0CA@IGMAMKOC@GetCulturePerTurnFromBonusTurns?$AA@ DB 'GetCulturePer'
	DB	'TurnFromBonusTurns', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@GAMICNIB@GetCulturePerTurnFromReligion?$AA@
CONST	SEGMENT
??_C@_0BO@GAMICNIB@GetCulturePerTurnFromReligion?$AA@ DB 'GetCulturePerTu'
	DB	'rnFromReligion', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NGNGJNJH@GetCulturePerTurnFromMinor?$AA@
CONST	SEGMENT
??_C@_0BL@NGNGJNJH@GetCulturePerTurnFromMinor?$AA@ DB 'GetCulturePerTurnF'
	DB	'romMinor', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@GAJNEDAB@GetCulturePerTurnFromMinorCivs?$AA@
CONST	SEGMENT
??_C@_0BP@GAJNEDAB@GetCulturePerTurnFromMinorCivs?$AA@ DB 'GetCulturePerT'
	DB	'urnFromMinorCivs', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@PIDBKECO@ChangeJONSCulturePerTurnFromMino@
CONST	SEGMENT
??_C@_0CG@PIDBKECO@ChangeJONSCulturePerTurnFromMino@ DB 'ChangeJONSCultur'
	DB	'ePerTurnFromMinorCivs', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@FHKIFDOD@GetJONSCulturePerTurnFromMinorCi@
CONST	SEGMENT
??_C@_0CD@FHKIFDOD@GetJONSCulturePerTurnFromMinorCi@ DB 'GetJONSCulturePe'
	DB	'rTurnFromMinorCivs', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@CBGAMBNI@ChangeJONSCulturePerTurnForFree?$AA@
CONST	SEGMENT
??_C@_0CA@CBGAMBNI@ChangeJONSCulturePerTurnForFree?$AA@ DB 'ChangeJONSCul'
	DB	'turePerTurnForFree', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@BNDOKHMF@GetJONSCulturePerTurnForFree?$AA@
CONST	SEGMENT
??_C@_0BN@BNDOKHMF@GetJONSCulturePerTurnForFree?$AA@ DB 'GetJONSCulturePe'
	DB	'rTurnForFree', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NBNDOJDJ@GetCultureWonderMultiplier?$AA@
CONST	SEGMENT
??_C@_0BL@NBNDOJDJ@GetCultureWonderMultiplier?$AA@ DB 'GetCultureWonderMu'
	DB	'ltiplier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@MKHKHIDI@GetJONSCulturePerTurnFromTraits?$AA@
CONST	SEGMENT
??_C@_0CA@MKHKHIDI@GetJONSCulturePerTurnFromTraits?$AA@ DB 'GetJONSCultur'
	DB	'ePerTurnFromTraits', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@ODNCODCD@GetJONSCulturePerTurnFromExcessH@
CONST	SEGMENT
??_C@_0CJ@ODNCODCD@GetJONSCulturePerTurnFromExcessH@ DB 'GetJONSCulturePe'
	DB	'rTurnFromExcessHappiness', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@LEPGPJJF@GetJONSCulturePerTurnFromCities?$AA@
CONST	SEGMENT
??_C@_0CA@LEPGPJJF@GetJONSCulturePerTurnFromCities?$AA@ DB 'GetJONSCultur'
	DB	'ePerTurnFromCities', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FGFBMDOG@GetTotalJONSCulturePerTurn?$AA@
CONST	SEGMENT
??_C@_0BL@FGFBMDOG@GetTotalJONSCulturePerTurn?$AA@ DB 'GetTotalJONSCultur'
	DB	'ePerTurn', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@JHKMOFCB@GetJONSCultureEverGeneratedTimes@
CONST	SEGMENT
??_C@_0CE@JHKMOFCB@GetJONSCultureEverGeneratedTimes@ DB 'GetJONSCultureEv'
	DB	'erGeneratedTimes100', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HBFLCFLP@ChangeJONSCultureTimes100?$AA@
CONST	SEGMENT
??_C@_0BK@HBFLCFLP@ChangeJONSCultureTimes100?$AA@ DB 'ChangeJONSCultureTi'
	DB	'mes100', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IGNCMICP@SetJONSCultureTimes100?$AA@
CONST	SEGMENT
??_C@_0BH@IGNCMICP@SetJONSCultureTimes100?$AA@ DB 'SetJONSCultureTimes100'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IHPMOPPA@GetJONSCultureTimes100?$AA@
CONST	SEGMENT
??_C@_0BH@IHPMOPPA@GetJONSCultureTimes100?$AA@ DB 'GetJONSCultureTimes100'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@NJFMHHMB@GetCulturePerTurnFromBonusTurnsT@
CONST	SEGMENT
??_C@_0CI@NJFMHHMB@GetCulturePerTurnFromBonusTurnsT@ DB 'GetCulturePerTur'
	DB	'nFromBonusTurnsTimes100', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@KPIPIBC@GetCulturePerTurnFromReligionTim@
CONST	SEGMENT
??_C@_0CG@KPIPIBC@GetCulturePerTurnFromReligionTim@ DB 'GetCulturePerTurn'
	DB	'FromReligionTimes100', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@CKLJBHIK@GetJONSCulturePerTurnFromExcessH@
CONST	SEGMENT
??_C@_0DB@CKLJBHIK@GetJONSCulturePerTurnFromExcessH@ DB 'GetJONSCulturePe'
	DB	'rTurnFromExcessHappinessTimes100', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@OPIAFPNB@GetJONSCulturePerTurnFromCitiesT@
CONST	SEGMENT
??_C@_0CI@OPIAFPNB@GetJONSCulturePerTurnFromCitiesT@ DB 'GetJONSCulturePe'
	DB	'rTurnFromCitiesTimes100', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@JHEBIGFH@GetTotalJONSCulturePerTurnTimes1@
CONST	SEGMENT
??_C@_0CD@JHEBIGFH@GetTotalJONSCulturePerTurnTimes1@ DB 'GetTotalJONSCult'
	DB	'urePerTurnTimes100', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LBMKMANM@GetGoldPerTurnFromTraits?$AA@
CONST	SEGMENT
??_C@_0BJ@LBMKMANM@GetGoldPerTurnFromTraits?$AA@ DB 'GetGoldPerTurnFromTr'
	DB	'aits', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@BDKKIKKJ@GetGoldPerTurnFromTradeRoutesTim@
CONST	SEGMENT
??_C@_0CG@BDKKIKKJ@GetGoldPerTurnFromTradeRoutesTim@ DB 'GetGoldPerTurnFr'
	DB	'omTradeRoutesTimes100', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BFPJNCPO@GetGoldPerTurnFromTradeRoutes?$AA@
CONST	SEGMENT
??_C@_0BO@BFPJNCPO@GetGoldPerTurnFromTradeRoutes?$AA@ DB 'GetGoldPerTurnF'
	DB	'romTradeRoutes', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@HCELEJIM@GetGoldPerTurnFromReligion?$AA@
CONST	SEGMENT
??_C@_0BL@HCELEJIM@GetGoldPerTurnFromReligion?$AA@ DB 'GetGoldPerTurnFrom'
	DB	'Religion', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@OCLHOOGP@GetCityConnectionGoldTimes100?$AA@
CONST	SEGMENT
??_C@_0BO@OCLHOOGP@GetCityConnectionGoldTimes100?$AA@ DB 'GetCityConnecti'
	DB	'onGoldTimes100', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LIJIKABM@GetCityConnectionGold?$AA@
CONST	SEGMENT
??_C@_0BG@LIJIKABM@GetCityConnectionGold?$AA@ DB 'GetCityConnectionGold', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@FCNHAJLA@GetCityConnectionRouteGoldTimes1@
CONST	SEGMENT
??_C@_0CD@FCNHAJLA@GetCityConnectionRouteGoldTimes1@ DB 'GetCityConnectio'
	DB	'nRouteGoldTimes100', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@FOPNIPEI@GetGoldPerTurnFromDiplomacy?$AA@
CONST	SEGMENT
??_C@_0BM@FOPNIPEI@GetGoldPerTurnFromDiplomacy?$AA@ DB 'GetGoldPerTurnFro'
	DB	'mDiplomacy', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@NCEBOAFI@GetGoldFromCitiesMinusTradeRoute@
CONST	SEGMENT
??_C@_0CK@NCEBOAFI@GetGoldFromCitiesMinusTradeRoute@ DB 'GetGoldFromCitie'
	DB	'sMinusTradeRoutesTimes100', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@MDGDLJKD@GetGoldFromCitiesTimes100?$AA@
CONST	SEGMENT
??_C@_0BK@MDGDLJKD@GetGoldFromCitiesTimes100?$AA@ DB 'GetGoldFromCitiesTi'
	DB	'mes100', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MGEEAMGC@GetLifetimeGrossGold?$AA@
CONST	SEGMENT
??_C@_0BF@MGEEAMGC@GetLifetimeGrossGold?$AA@ DB 'GetLifetimeGrossGold', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EBBJNCCM@CalculateGrossGold?$AA@
CONST	SEGMENT
??_C@_0BD@EBBJNCCM@CalculateGrossGold?$AA@ DB 'CalculateGrossGold', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EIHJEBHO@ChangeGold?$AA@
CONST	SEGMENT
??_C@_0L@EIHJEBHO@ChangeGold?$AA@ DB 'ChangeGold', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07MBIDAHMN@SetGold?$AA@
CONST	SEGMENT
??_C@_07MBIDAHMN@SetGold?$AA@ DB 'SetGold', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07DJHCDIBM@GetGold?$AA@
CONST	SEGMENT
??_C@_07DJHCDIBM@GetGold?$AA@ DB 'GetGold', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BKJPLMEF@GetTotalLandScored?$AA@
CONST	SEGMENT
??_C@_0BD@BKJPLMEF@GetTotalLandScored?$AA@ DB 'GetTotalLandScored', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NKPGAGBN@GetTotalLand?$AA@
CONST	SEGMENT
??_C@_0N@NKPGAGBN@GetTotalLand?$AA@ DB 'GetTotalLand', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KLLGPNMM@ChangeNewCityExtraPopulation?$AA@
CONST	SEGMENT
??_C@_0BN@KLLGPNMM@ChangeNewCityExtraPopulation?$AA@ DB 'ChangeNewCityExt'
	DB	'raPopulation', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KJNHDOEI@GetNewCityExtraPopulation?$AA@
CONST	SEGMENT
??_C@_0BK@KJNHDOEI@GetNewCityExtraPopulation?$AA@ DB 'GetNewCityExtraPopu'
	DB	'lation', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KOHBIIDL@GetRealPopulation?$AA@
CONST	SEGMENT
??_C@_0BC@KOHBIIDL@GetRealPopulation?$AA@ DB 'GetRealPopulation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@COJNEADI@GetAveragePopulation?$AA@
CONST	SEGMENT
??_C@_0BF@COJNEADI@GetAveragePopulation?$AA@ DB 'GetAveragePopulation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BKBNEN@GetTotalPopulation?$AA@
CONST	SEGMENT
??_C@_0BD@BKBNEN@GetTotalPopulation?$AA@ DB 'GetTotalPopulation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GNONGEOP@SetStartingPlot?$AA@
CONST	SEGMENT
??_C@_0BA@GNONGEOP@SetStartingPlot?$AA@ DB 'SetStartingPlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FPPLBGPG@GetStartingPlot?$AA@
CONST	SEGMENT
??_C@_0BA@FPPLBGPG@GetStartingPlot?$AA@ DB 'GetStartingPlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GPNAOGDH@GetGreatGeneralCombatBonus?$AA@
CONST	SEGMENT
??_C@_0BL@GPNAOGDH@GetGreatGeneralCombatBonus?$AA@ DB 'GetGreatGeneralCom'
	DB	'batBonus', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FAOFCGCH@SetGreatGeneralCombatBonus?$AA@
CONST	SEGMENT
??_C@_0BL@FAOFCGCH@SetGreatGeneralCombatBonus?$AA@ DB 'SetGreatGeneralCom'
	DB	'batBonus', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JJILDMLK@SpecialistYield?$AA@
CONST	SEGMENT
??_C@_0BA@JJILDMLK@SpecialistYield?$AA@ DB 'SpecialistYield', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LBIAFMBO@GreatAdmiralThreshold?$AA@
CONST	SEGMENT
??_C@_0BG@LBIAFMBO@GreatAdmiralThreshold?$AA@ DB 'GreatAdmiralThreshold', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IDFEIBND@GreatGeneralThreshold?$AA@
CONST	SEGMENT
??_C@_0BG@IDFEIBND@GreatGeneralThreshold?$AA@ DB 'GreatGeneralThreshold', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DNNCMFIN@UnitsGoldenAgeReady?$AA@
CONST	SEGMENT
??_C@_0BE@DNNCMFIN@UnitsGoldenAgeReady?$AA@ DB 'UnitsGoldenAgeReady', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PPEINLDL@UnitsGoldenAgeCapable?$AA@
CONST	SEGMENT
??_C@_0BG@PPEINLDL@UnitsGoldenAgeCapable?$AA@ DB 'UnitsGoldenAgeCapable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HNHALJNG@UnitsRequiredForGoldenAge?$AA@
CONST	SEGMENT
??_C@_0BK@HNHALJNG@UnitsRequiredForGoldenAge?$AA@ DB 'UnitsRequiredForGol'
	DB	'denAge', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EIEJGPKL@GetResearchProgress?$AA@
CONST	SEGMENT
??_C@_0BE@EIEJGPKL@GetResearchProgress?$AA@ DB 'GetResearchProgress', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FBPGGIIF@GetResearchCost?$AA@
CONST	SEGMENT
??_C@_0BA@FBPGGIIF@GetResearchCost?$AA@ DB 'GetResearchCost', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HNKBNEGP@GetResearchTurnsLeft?$AA@
CONST	SEGMENT
??_C@_0BF@HNKBNEGP@GetResearchTurnsLeft?$AA@ DB 'GetResearchTurnsLeft', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GIJGCCHC@IsNoResearchAvailable?$AA@
CONST	SEGMENT
??_C@_0BG@GIJGCCHC@IsNoResearchAvailable?$AA@ DB 'IsNoResearchAvailable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LLMMAFGE@IsCurrentResearchRepeat?$AA@
CONST	SEGMENT
??_C@_0BI@LLMMAFGE@IsCurrentResearchRepeat?$AA@ DB 'IsCurrentResearchRepe'
	DB	'at', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FLLODLHI@GetCurrentResearch?$AA@
CONST	SEGMENT
??_C@_0BD@FLLODLHI@GetCurrentResearch?$AA@ DB 'GetCurrentResearch', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BGEEDLGF@CanResearchForFree?$AA@
CONST	SEGMENT
??_C@_0BD@BGEEDLGF@CanResearchForFree?$AA@ DB 'CanResearchForFree', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FOGEBAOH@CanResearch?$AA@
CONST	SEGMENT
??_C@_0M@FOGEBAOH@CanResearch?$AA@ DB 'CanResearch', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NDFMOKDP@CanEverResearch?$AA@
CONST	SEGMENT
??_C@_0BA@NDFMOKDP@CanEverResearch?$AA@ DB 'CanEverResearch', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OHMEGGKO@IsResearch?$AA@
CONST	SEGMENT
??_C@_0L@OHMEGGKO@IsResearch?$AA@ DB 'IsResearch', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FBIHCOGE@CalculateResearchModifier?$AA@
CONST	SEGMENT
??_C@_0BK@FBIHCOGE@CalculateResearchModifier?$AA@ DB 'CalculateResearchMo'
	DB	'difier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CNAKGEP@CalculateInflatedCosts?$AA@
CONST	SEGMENT
??_C@_0BH@CNAKGEP@CalculateInflatedCosts?$AA@ DB 'CalculateInflatedCosts', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@IMEFIJEB@CalculateGrossGoldTimes100?$AA@
CONST	SEGMENT
??_C@_0BL@IMEFIJEB@CalculateGrossGoldTimes100?$AA@ DB 'CalculateGrossGold'
	DB	'Times100', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FCPPDOGO@CalculateGoldRateTimes100?$AA@
CONST	SEGMENT
??_C@_0BK@FCPPDOGO@CalculateGoldRateTimes100?$AA@ DB 'CalculateGoldRateTi'
	DB	'mes100', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CHLLOECA@CalculateGoldRate?$AA@
CONST	SEGMENT
??_C@_0BC@CHLLOECA@CalculateGoldRate?$AA@ DB 'CalculateGoldRate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@JGJDHHKA@GetImprovementGoldMaintenance?$AA@
CONST	SEGMENT
??_C@_0BO@JGJDHHKA@GetImprovementGoldMaintenance?$AA@ DB 'GetImprovementG'
	DB	'oldMaintenance', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@JBPCODPN@ChangeBaseBuildingGoldMaintenanc@
CONST	SEGMENT
??_C@_0CC@JBPCODPN@ChangeBaseBuildingGoldMaintenanc@ DB 'ChangeBaseBuildi'
	DB	'ngGoldMaintenance', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@BPKOFJIG@SetBaseBuildingGoldMaintenance?$AA@
CONST	SEGMENT
??_C@_0BP@BPKOFJIG@SetBaseBuildingGoldMaintenance?$AA@ DB 'SetBaseBuildin'
	DB	'gGoldMaintenance', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NNCKIALH@GetBuildingGoldMaintenance?$AA@
CONST	SEGMENT
??_C@_0BL@NNCKIALH@GetBuildingGoldMaintenance?$AA@ DB 'GetBuildingGoldMai'
	DB	'ntenance', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@IILDGNLA@GetNumMaintenanceFreeUnits?$AA@
CONST	SEGMENT
??_C@_0BL@IILDGNLA@GetNumMaintenanceFreeUnits?$AA@ DB 'GetNumMaintenanceF'
	DB	'reeUnits', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@ONAPNIH@CalculateUnitSupply?$AA@
CONST	SEGMENT
??_C@_0BE@ONAPNIH@CalculateUnitSupply?$AA@ DB 'CalculateUnitSupply', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NDAAFPOB@CalculateUnitCost?$AA@
CONST	SEGMENT
??_C@_0BC@NDAAFPOB@CalculateUnitCost?$AA@ DB 'CalculateUnitCost', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JCFGPNKE@CalculateTotalYield?$AA@
CONST	SEGMENT
??_C@_0BE@JCFGPNKE@CalculateTotalYield?$AA@ DB 'CalculateTotalYield', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@MGFJNJFO@GetImprovementUpgradeRate?$AA@
CONST	SEGMENT
??_C@_0BK@MGFJNJFO@GetImprovementUpgradeRate?$AA@ DB 'GetImprovementUpgra'
	DB	'deRate', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DFILCDHK@GetBestRoute?$AA@
CONST	SEGMENT
??_C@_0N@DFILCDHK@GetBestRoute?$AA@ DB 'GetBestRoute', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MMBOFMHP@IsBuildBlockedByFeature?$AA@
CONST	SEGMENT
??_C@_0BI@MMBOFMHP@IsBuildBlockedByFeature?$AA@ DB 'IsBuildBlockedByFeatu'
	DB	're', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08EMPBKDLI@CanBuild?$AA@
CONST	SEGMENT
??_C@_08EMPBKDLI@CanBuild?$AA@ DB 'CanBuild', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KJCBDPNA@RemoveBuildingClass?$AA@
CONST	SEGMENT
??_C@_0BE@KJCBDPNA@RemoveBuildingClass?$AA@ DB 'RemoveBuildingClass', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@NHOMKJMK@GetBuildingClassPrereqBuilding?$AA@
CONST	SEGMENT
??_C@_0BP@NHOMKJMK@GetBuildingClassPrereqBuilding?$AA@ DB 'GetBuildingCla'
	DB	'ssPrereqBuilding', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BNLDEHMF@HasBusyMovingUnit?$AA@
CONST	SEGMENT
??_C@_0BC@BNLDEHMF@HasBusyMovingUnit?$AA@ DB 'HasBusyMovingUnit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PMEHCBOB@HasBusyUnit?$AA@
CONST	SEGMENT
??_C@_0M@PMEHCBOB@HasBusyUnit?$AA@ DB 'HasBusyUnit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CMGDJHNP@GetFirstReadyUnitPlot?$AA@
CONST	SEGMENT
??_C@_0BG@CMGDJHNP@GetFirstReadyUnitPlot?$AA@ DB 'GetFirstReadyUnitPlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IBIJOAGE@GetFirstReadyUnit?$AA@
CONST	SEGMENT
??_C@_0BC@IBIJOAGE@GetFirstReadyUnit?$AA@ DB 'GetFirstReadyUnit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ONGFLM@HasReadyUnit?$AA@
CONST	SEGMENT
??_C@_0N@ONGFLM@HasReadyUnit?$AA@ DB 'HasReadyUnit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JBMFKMKF@GetProjectProductionNeeded?$AA@
CONST	SEGMENT
??_C@_0BL@JBMFKMKF@GetProjectProductionNeeded?$AA@ DB 'GetProjectProducti'
	DB	'onNeeded', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GGLBNBDE@GetBuildingProductionNeeded?$AA@
CONST	SEGMENT
??_C@_0BM@GGLBNBDE@GetBuildingProductionNeeded?$AA@ DB 'GetBuildingProduc'
	DB	'tionNeeded', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LJANCJHB@GetUnitProductionNeeded?$AA@
CONST	SEGMENT
??_C@_0BI@LJANCJHB@GetUnitProductionNeeded?$AA@ DB 'GetUnitProductionNeed'
	DB	'ed', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@IPLLLGBJ@IsProductionMaxedProject?$AA@
CONST	SEGMENT
??_C@_0BJ@IPLLLGBJ@IsProductionMaxedProject?$AA@ DB 'IsProductionMaxedPro'
	DB	'ject', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@LLNEJKAH@IsProductionMaxedBuildingClass?$AA@
CONST	SEGMENT
??_C@_0BP@LLNEJKAH@IsProductionMaxedBuildingClass?$AA@ DB 'IsProductionMa'
	DB	'xedBuildingClass', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@ICJGIOEE@IsProductionMaxedUnitClass?$AA@
CONST	SEGMENT
??_C@_0BL@ICJGIOEE@IsProductionMaxedUnitClass?$AA@ DB 'IsProductionMaxedU'
	DB	'nitClass', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MOMJCOPE@SetFaithPurchaseIndex?$AA@
CONST	SEGMENT
??_C@_0BG@MOMJCOPE@SetFaithPurchaseIndex?$AA@ DB 'SetFaithPurchaseIndex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DLJPPHLF@GetFaithPurchaseIndex?$AA@
CONST	SEGMENT
??_C@_0BG@DLJPPHLF@GetFaithPurchaseIndex?$AA@ DB 'GetFaithPurchaseIndex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LIIFKFMA@SetFaithPurchaseType?$AA@
CONST	SEGMENT
??_C@_0BF@LIIFKFMA@SetFaithPurchaseType?$AA@ DB 'SetFaithPurchaseType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OBJILDJH@GetFaithPurchaseType?$AA@
CONST	SEGMENT
??_C@_0BF@OBJILDJH@GetFaithPurchaseType?$AA@ DB 'GetFaithPurchaseType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FDIAKFJD@IsCanPurchaseAnyCity?$AA@
CONST	SEGMENT
??_C@_0BF@FDIAKFJD@IsCanPurchaseAnyCity?$AA@ DB 'IsCanPurchaseAnyCity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LBFPGCCN@CanMaintain?$AA@
CONST	SEGMENT
??_C@_0M@LBFPGCCN@CanMaintain?$AA@ DB 'CanMaintain', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DCAJPLNN@CanPrepare?$AA@
CONST	SEGMENT
??_C@_0L@DCAJPLNN@CanPrepare?$AA@ DB 'CanPrepare', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09ENLCPIFP@CanCreate?$AA@
CONST	SEGMENT
??_C@_09ENLCPIFP@CanCreate?$AA@ DB 'CanCreate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OBKNDGPF@CanConstruct?$AA@
CONST	SEGMENT
??_C@_0N@OBKNDGPF@CanConstruct?$AA@ DB 'CanConstruct', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08BCMOJMKA@CanTrain?$AA@
CONST	SEGMENT
??_C@_08BCMOJMKA@CanTrain?$AA@ DB 'CanTrain', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05JDGHEPJG@Found?$AA@
CONST	SEGMENT
??_C@_05JDGHEPJG@Found?$AA@ DB 'Found', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OEHLFCME@CanFound?$AA@
CONST	SEGMENT
??_C@_08OEHLFCME@CanFound?$AA@ DB 'CanFound', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HMCFIJNM@CanGetGoody?$AA@
CONST	SEGMENT
??_C@_0M@HMCFIJNM@CanGetGoody?$AA@ DB 'CanGetGoody', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07JBKNEMND@DoGoody?$AA@
CONST	SEGMENT
??_C@_07JBKNEMND@DoGoody?$AA@ DB 'DoGoody', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EPHMEPKG@ReceiveGoody?$AA@
CONST	SEGMENT
??_C@_0N@EPHMEPKG@ReceiveGoody?$AA@ DB 'ReceiveGoody', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BHIGEENL@CanReceiveGoody?$AA@
CONST	SEGMENT
??_C@_0BA@BHIGEENL@CanReceiveGoody?$AA@ DB 'CanReceiveGoody', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07IHCCGGBK@Disband?$AA@
CONST	SEGMENT
??_C@_07IHCCGGBK@Disband?$AA@ DB 'Disband', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04LJHIHGEL@Raze?$AA@
CONST	SEGMENT
??_C@_04LJHIHGEL@Raze?$AA@ DB 'Raze', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KCFFLCEK@CanRaze?$AA@
CONST	SEGMENT
??_C@_07KCFFLCEK@CanRaze?$AA@ DB 'CanRaze', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GLAGNJHD@FindNewCapital?$AA@
CONST	SEGMENT
??_C@_0P@GLAGNJHD@FindNewCapital?$AA@ DB 'FindNewCapital', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EOIJEHCF@IsSimultaneousTurns?$AA@
CONST	SEGMENT
??_C@_0BE@EOIJEHCF@IsSimultaneousTurns?$AA@ DB 'IsSimultaneousTurns', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DEOCLOCF@IsTurnActive?$AA@
CONST	SEGMENT
??_C@_0N@DEOCLOCF@IsTurnActive?$AA@ DB 'IsTurnActive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MBKAEAGF@IsCapitalConnectedToCity?$AA@
CONST	SEGMENT
??_C@_0BJ@MBKAEAGF@IsCapitalConnectedToCity?$AA@ DB 'IsCapitalConnectedTo'
	DB	'City', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IALDDINH@SetNumWondersBeatenTo?$AA@
CONST	SEGMENT
??_C@_0BG@IALDDINH@SetNumWondersBeatenTo?$AA@ DB 'SetNumWondersBeatenTo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HFOFOBJG@GetNumWondersBeatenTo?$AA@
CONST	SEGMENT
??_C@_0BG@HFOFOBJG@GetNumWondersBeatenTo?$AA@ DB 'GetNumWondersBeatenTo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LHOMPBPO@ChangeNumWorldWonders?$AA@
CONST	SEGMENT
??_C@_0BG@LHOMPBPO@ChangeNumWorldWonders?$AA@ DB 'ChangeNumWorldWonders', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FHKHHPIG@GetNumWorldWonders?$AA@
CONST	SEGMENT
??_C@_0BD@FHKHHPIG@GetNumWorldWonders?$AA@ DB 'GetNumWorldWonders', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NCAGKFLK@CountNumBuildings?$AA@
CONST	SEGMENT
??_C@_0BC@NCAGKFLK@CountNumBuildings?$AA@ DB 'CountNumBuildings', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EHNJCKPB@CountCityFeatures?$AA@
CONST	SEGMENT
??_C@_0BC@EHNJCKPB@CountCityFeatures?$AA@ DB 'CountCityFeatures', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GLKLOHNJ@GetArtStyleType?$AA@
CONST	SEGMENT
??_C@_0BA@GLKLOHNJ@GetArtStyleType?$AA@ DB 'GetArtStyleType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MJKEJNBJ@GetWorstEnemyName?$AA@
CONST	SEGMENT
??_C@_0BC@MJKEJNBJ@GetWorstEnemyName?$AA@ DB 'GetWorstEnemyName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JHNMEICD@GetStateReligionKey?$AA@
CONST	SEGMENT
??_C@_0BE@JHNMEICD@GetStateReligionKey?$AA@ DB 'GetStateReligionKey', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OGNHCBFD@GetStateReligionName?$AA@
CONST	SEGMENT
??_C@_0BF@OGNHCBFD@GetStateReligionName?$AA@ DB 'GetStateReligionName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LIADFGOK@IsWhiteFlag?$AA@
CONST	SEGMENT
??_C@_0M@LIADFGOK@IsWhiteFlag?$AA@ DB 'IsWhiteFlag', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@PKLHEKF@GetCivilizationAdjectiveKey?$AA@
CONST	SEGMENT
??_C@_0BM@PKLHEKF@GetCivilizationAdjectiveKey?$AA@ DB 'GetCivilizationAdj'
	DB	'ectiveKey', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@POHEMKMG@GetCivilizationAdjective?$AA@
CONST	SEGMENT
??_C@_0BJ@POHEMKMG@GetCivilizationAdjective?$AA@ DB 'GetCivilizationAdjec'
	DB	'tive', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@DMAKHBMP@GetCivilizationShortDescriptionK@
CONST	SEGMENT
??_C@_0CD@DMAKHBMP@GetCivilizationShortDescriptionK@ DB 'GetCivilizationS'
	DB	'hortDescriptionKey', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@GKGGFCIK@GetCivilizationShortDescription?$AA@
CONST	SEGMENT
??_C@_0CA@GKGGFCIK@GetCivilizationShortDescription?$AA@ DB 'GetCivilizati'
	DB	'onShortDescription', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@MPNPKBBC@GetCivilizationDescriptionKey?$AA@
CONST	SEGMENT
??_C@_0BO@MPNPKBBC@GetCivilizationDescriptionKey?$AA@ DB 'GetCivilization'
	DB	'DescriptionKey', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NLPGHGO@GetCivilizationDescription?$AA@
CONST	SEGMENT
??_C@_0BL@NLPGHGO@GetCivilizationDescription?$AA@ DB 'GetCivilizationDesc'
	DB	'ription', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CDLFADEM@GetNickName?$AA@
CONST	SEGMENT
??_C@_0M@CDLFADEM@GetNickName?$AA@ DB 'GetNickName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PJBAHION@GetNameKey?$AA@
CONST	SEGMENT
??_C@_0L@PJBAHION@GetNameKey?$AA@ DB 'GetNameKey', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07MMGEHGCI@GetName?$AA@
CONST	SEGMENT
??_C@_07MMGEHGCI@GetName?$AA@ DB 'GetName', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NJNEDJLP@IsBarbarian?$AA@
CONST	SEGMENT
??_C@_0M@NJNEDJLP@IsBarbarian?$AA@ DB 'IsBarbarian', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NIJBBMLI@IsHuman?$AA@
CONST	SEGMENT
??_C@_07NIJBBMLI@IsHuman?$AA@ DB 'IsHuman', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09CKDIMNBM@KillUnits?$AA@
CONST	SEGMENT
??_C@_09CKDIMNBM@KillUnits?$AA@ DB 'KillUnits', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DAJECHKI@ChooseTech?$AA@
CONST	SEGMENT
??_C@_0L@DAJECHKI@ChooseTech?$AA@ DB 'ChooseTech', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PCPIBOKC@AddFreeUnit?$AA@
CONST	SEGMENT
??_C@_0M@PCPIBOKC@AddFreeUnit?$AA@ DB 'AddFreeUnit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IAMPNMBM@DisbandUnit?$AA@
CONST	SEGMENT
??_C@_0M@IAMPNMBM@DisbandUnit?$AA@ DB 'DisbandUnit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KPFFILAO@InitUnitWithNameOffset?$AA@
CONST	SEGMENT
??_C@_0BH@KPFFILAO@InitUnitWithNameOffset?$AA@ DB 'InitUnitWithNameOffset'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08HGECGLD@InitUnit?$AA@
CONST	SEGMENT
??_C@_08HGECGLD@InitUnit?$AA@ DB 'InitUnit', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MHMMCCOA@GetNewCityName?$AA@
CONST	SEGMENT
??_C@_0P@MHMMCCOA@GetNewCityName?$AA@ DB 'GetNewCityName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CLJKNEEI@KillCities?$AA@
CONST	SEGMENT
??_C@_0L@CLJKNEEI@KillCities?$AA@ DB 'KillCities', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FNHHCGFC@AcquireCity?$AA@
CONST	SEGMENT
??_C@_0M@FNHHCGFC@AcquireCity?$AA@ DB 'AcquireCity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08NEEDDCEG@InitCity?$AA@
CONST	SEGMENT
??_C@_08NEEDDCEG@InitCity?$AA@ DB 'InitCity', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?PushMethods@CvLuaPlayer@@SAXPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
?PushMethods@CvLuaPlayer@@SAXPAUlua_State@@H@Z PROC	; CvLuaPlayer::PushMethods, COMDAT

; 46   : {

	push	ebp
	mov	ebp, esp

; 47   : 	Method(InitCity);

	push	0
	push	OFFSET ?lInitCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lInitCity
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08NEEDDCEG@InitCity?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 48   : 	Method(AcquireCity);

	push	0
	push	OFFSET ?lAcquireCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAcquireCity
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@FNHHCGFC@AcquireCity?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 49   : 	Method(KillCities);

	push	0
	push	OFFSET ?lKillCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lKillCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@CLJKNEEI@KillCities?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 50   : 
; 51   : 	Method(GetNewCityName);

	push	0
	push	OFFSET ?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNewCityName
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@MHMMCCOA@GetNewCityName?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 52   : 
; 53   : 	Method(InitUnit);

	push	0
	push	OFFSET ?lInitUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lInitUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08HGECGLD@InitUnit?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 54   : 	Method(InitUnitWithNameOffset);

	push	0
	push	OFFSET ?lInitUnitWithNameOffset@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lInitUnitWithNameOffset
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@KPFFILAO@InitUnitWithNameOffset?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 55   : 	Method(DisbandUnit);

	push	0
	push	OFFSET ?lDisbandUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDisbandUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@IAMPNMBM@DisbandUnit?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 56   : 	Method(AddFreeUnit);

	push	0
	push	OFFSET ?lAddFreeUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAddFreeUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@PCPIBOKC@AddFreeUnit?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 57   : 
; 58   : 	Method(ChooseTech);

	push	0
	push	OFFSET ?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChooseTech
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@DAJECHKI@ChooseTech?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 59   : 
; 60   : 	Method(KillUnits);

	push	0
	push	OFFSET ?lKillUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lKillUnits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09CKDIMNBM@KillUnits?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 61   : 	Method(IsHuman);

	push	0
	push	OFFSET ?lIsHuman@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsHuman
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07NIJBBMLI@IsHuman?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 62   : 	Method(IsBarbarian);

	push	0
	push	OFFSET ?lIsBarbarian@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsBarbarian
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@NJNEDJLP@IsBarbarian?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 63   : 	Method(GetName);

	push	0
	push	OFFSET ?lGetName@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetName
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07MMGEHGCI@GetName?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 64   : 	Method(GetNameKey);

	push	0
	push	OFFSET ?lGetNameKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNameKey
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@PJBAHION@GetNameKey?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 65   : 	Method(GetNickName);

	push	0
	push	OFFSET ?lGetNickName@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNickName
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@CDLFADEM@GetNickName?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 66   : 	Method(GetCivilizationDescription);

	push	0
	push	OFFSET ?lGetCivilizationDescription@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationDescription
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@NLPGHGO@GetCivilizationDescription?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 67   : 	Method(GetCivilizationDescriptionKey);

	push	0
	push	OFFSET ?lGetCivilizationDescriptionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationDescriptionKey
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@MPNPKBBC@GetCivilizationDescriptionKey?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 68   : 	Method(GetCivilizationShortDescription);

	push	0
	push	OFFSET ?lGetCivilizationShortDescription@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationShortDescription
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@GKGGFCIK@GetCivilizationShortDescription?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 69   : 	Method(GetCivilizationShortDescriptionKey);

	push	0
	push	OFFSET ?lGetCivilizationShortDescriptionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationShortDescriptionKey
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@DMAKHBMP@GetCivilizationShortDescriptionK@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 70   : 	Method(GetCivilizationAdjective);

	push	0
	push	OFFSET ?lGetCivilizationAdjective@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationAdjective
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@POHEMKMG@GetCivilizationAdjective?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 71   : 	Method(GetCivilizationAdjectiveKey);

	push	0
	push	OFFSET ?lGetCivilizationAdjectiveKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationAdjectiveKey
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@PKLHEKF@GetCivilizationAdjectiveKey?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 72   : 	Method(IsWhiteFlag);

	push	0
	push	OFFSET ?lIsWhiteFlag@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsWhiteFlag
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@LIADFGOK@IsWhiteFlag?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 73   : 	Method(GetStateReligionName);

	push	0
	push	OFFSET ?lGetStateReligionName@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetStateReligionName
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@OGNHCBFD@GetStateReligionName?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 74   : 	Method(GetStateReligionKey);

	push	0
	push	OFFSET ?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetStateReligionKey
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@JHNMEICD@GetStateReligionKey?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 75   : 	Method(GetWorstEnemyName);

	push	0
	push	OFFSET ?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWorstEnemyName
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@MJKEJNBJ@GetWorstEnemyName?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 76   : 	Method(GetArtStyleType);

	push	0
	push	OFFSET ?lGetArtStyleType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetArtStyleType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@GLKLOHNJ@GetArtStyleType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 77   : 
; 78   : 	Method(CountCityFeatures);

	push	0
	push	OFFSET ?lCountCityFeatures@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCountCityFeatures
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@EHNJCKPB@CountCityFeatures?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 79   : 	Method(CountNumBuildings);

	push	0
	push	OFFSET ?lCountNumBuildings@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCountNumBuildings
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@NCAGKFLK@CountNumBuildings?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 80   : 
; 81   : 	Method(GetNumWorldWonders);

	push	0
	push	OFFSET ?lGetNumWorldWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumWorldWonders
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@FHKHHPIG@GetNumWorldWonders?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 82   : 	Method(ChangeNumWorldWonders);

	push	0
	push	OFFSET ?lChangeNumWorldWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumWorldWonders
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@LHOMPBPO@ChangeNumWorldWonders?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 83   : 	Method(GetNumWondersBeatenTo);

	push	0
	push	OFFSET ?lGetNumWondersBeatenTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumWondersBeatenTo
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@HFOFOBJG@GetNumWondersBeatenTo?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 84   : 	Method(SetNumWondersBeatenTo);

	push	0
	push	OFFSET ?lSetNumWondersBeatenTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumWondersBeatenTo
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@IALDDINH@SetNumWondersBeatenTo?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 85   : 
; 86   : 	Method(IsCapitalConnectedToCity);

	push	0
	push	OFFSET ?lIsCapitalConnectedToCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsCapitalConnectedToCity
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@MBKAEAGF@IsCapitalConnectedToCity?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 87   : 
; 88   : 	Method(IsTurnActive);

	push	0
	push	OFFSET ?lIsTurnActive@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsTurnActive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@DEOCLOCF@IsTurnActive?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 89   : 	Method(IsSimultaneousTurns);

	push	0
	push	OFFSET ?lIsSimultaneousTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsSimultaneousTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@EOIJEHCF@IsSimultaneousTurns?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 90   : 
; 91   : 	Method(FindNewCapital);

	push	0
	push	OFFSET ?lFindNewCapital@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lFindNewCapital
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@GLAGNJHD@FindNewCapital?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 92   : 	Method(CanRaze);

	push	0
	push	OFFSET ?lCanRaze@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanRaze
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07KCFFLCEK@CanRaze?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 93   : 	Method(Raze);

	push	0
	push	OFFSET ?lRaze@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lRaze
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_04LJHIHGEL@Raze?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 94   : 	Method(Disband);

	push	0
	push	OFFSET ?lDisband@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDisband
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07IHCCGGBK@Disband?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 95   : 
; 96   : 	Method(CanReceiveGoody);

	push	0
	push	OFFSET ?lCanReceiveGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanReceiveGoody
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@BHIGEENL@CanReceiveGoody?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 97   : 	Method(ReceiveGoody);

	push	0
	push	OFFSET ?lReceiveGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lReceiveGoody
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@EPHMEPKG@ReceiveGoody?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 98   : 	Method(DoGoody);

	push	0
	push	OFFSET ?lDoGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoGoody
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07JBKNEMND@DoGoody?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 99   : 	Method(CanGetGoody);

	push	0
	push	OFFSET ?lCanGetGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanGetGoody
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@HMCFIJNM@CanGetGoody?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 100  : 
; 101  : 	Method(CanFound);

	push	0
	push	OFFSET ?lCanFound@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanFound
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08OEHLFCME@CanFound?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 102  : 	Method(Found);

	push	0
	push	OFFSET ?lFound@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lFound
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_05JDGHEPJG@Found?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 103  : 
; 104  : 	Method(CanTrain);

	push	0
	push	OFFSET ?lCanTrain@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanTrain
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08BCMOJMKA@CanTrain?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 105  : 	Method(CanConstruct);

	push	0
	push	OFFSET ?lCanConstruct@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanConstruct
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@OBKNDGPF@CanConstruct?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 106  : 	Method(CanCreate);

	push	0
	push	OFFSET ?lCanCreate@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanCreate
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09ENLCPIFP@CanCreate?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 107  : 	Method(CanPrepare);

	push	0
	push	OFFSET ?lCanPrepare@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanPrepare
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@DCAJPLNN@CanPrepare?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 108  : 	Method(CanMaintain);

	push	0
	push	OFFSET ?lCanMaintain@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMaintain
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@LBFPGCCN@CanMaintain?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 109  : 
; 110  : 	Method(IsCanPurchaseAnyCity);

	push	0
	push	OFFSET ?lIsCanPurchaseAnyCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsCanPurchaseAnyCity
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@FDIAKFJD@IsCanPurchaseAnyCity?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 111  : 	Method(GetFaithPurchaseType);

	push	0
	push	OFFSET ?lGetFaithPurchaseType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFaithPurchaseType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@OBJILDJH@GetFaithPurchaseType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 112  : 	Method(SetFaithPurchaseType);

	push	0
	push	OFFSET ?lSetFaithPurchaseType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetFaithPurchaseType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@LIIFKFMA@SetFaithPurchaseType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 113  : 	Method(GetFaithPurchaseIndex);

	push	0
	push	OFFSET ?lGetFaithPurchaseIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFaithPurchaseIndex
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@DLJPPHLF@GetFaithPurchaseIndex?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 114  : 	Method(SetFaithPurchaseIndex);

	push	0
	push	OFFSET ?lSetFaithPurchaseIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetFaithPurchaseIndex
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@MOMJCOPE@SetFaithPurchaseIndex?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 115  : 
; 116  : 	Method(IsProductionMaxedUnitClass);

	push	0
	push	OFFSET ?lIsProductionMaxedUnitClass@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProductionMaxedUnitClass
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@ICJGIOEE@IsProductionMaxedUnitClass?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 117  : 	Method(IsProductionMaxedBuildingClass);

	push	0
	push	OFFSET ?lIsProductionMaxedBuildingClass@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProductionMaxedBuildingClass
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@LLNEJKAH@IsProductionMaxedBuildingClass?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 118  : 	Method(IsProductionMaxedProject);

	push	0
	push	OFFSET ?lIsProductionMaxedProject@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProductionMaxedProject
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@IPLLLGBJ@IsProductionMaxedProject?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 119  : 	Method(GetUnitProductionNeeded);

	push	0
	push	OFFSET ?lGetUnitProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitProductionNeeded
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@LJANCJHB@GetUnitProductionNeeded?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 120  : 	Method(GetBuildingProductionNeeded);

	push	0
	push	OFFSET ?lGetBuildingProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingProductionNeeded
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@GGLBNBDE@GetBuildingProductionNeeded?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 121  : 	Method(GetProjectProductionNeeded);

	push	0
	push	OFFSET ?lGetProjectProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetProjectProductionNeeded
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@JBMFKMKF@GetProjectProductionNeeded?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 122  : 
; 123  : 	Method(HasReadyUnit);

	push	0
	push	OFFSET ?lHasReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasReadyUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@ONGFLM@HasReadyUnit?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 124  : 	Method(GetFirstReadyUnit);

	push	0
	push	OFFSET ?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFirstReadyUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@IBIJOAGE@GetFirstReadyUnit?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 125  : 	Method(GetFirstReadyUnitPlot);

	push	0
	push	OFFSET ?lGetFirstReadyUnitPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFirstReadyUnitPlot
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@CMGDJHNP@GetFirstReadyUnitPlot?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 126  : 
; 127  : 	Method(HasBusyUnit);

	push	0
	push	OFFSET ?lHasBusyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasBusyUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@PMEHCBOB@HasBusyUnit?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 128  : 	Method(HasBusyMovingUnit);

	push	0
	push	OFFSET ?lHasBusyMovingUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasBusyMovingUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@BNLDEHMF@HasBusyMovingUnit?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 129  : 
; 130  : 	Method(GetBuildingClassPrereqBuilding);

	push	0
	push	OFFSET ?lGetBuildingClassPrereqBuilding@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingClassPrereqBuilding
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@NHOMKJMK@GetBuildingClassPrereqBuilding?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 131  : 
; 132  : 	Method(RemoveBuildingClass);

	push	0
	push	OFFSET ?lRemoveBuildingClass@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lRemoveBuildingClass
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@KJCBDPNA@RemoveBuildingClass?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 133  : 
; 134  : 	Method(CanBuild);

	push	0
	push	OFFSET ?lCanBuild@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanBuild
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08EMPBKDLI@CanBuild?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 135  : 	Method(IsBuildBlockedByFeature);

	push	0
	push	OFFSET ?lIsBuildBlockedByFeature@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsBuildBlockedByFeature
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@MMBOFMHP@IsBuildBlockedByFeature?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 136  : 	Method(GetBestRoute);

	push	0
	push	OFFSET ?lGetBestRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBestRoute
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@DFILCDHK@GetBestRoute?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 137  : 	Method(GetImprovementUpgradeRate);

	push	0
	push	OFFSET ?lGetImprovementUpgradeRate@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetImprovementUpgradeRate
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@MGFJNJFO@GetImprovementUpgradeRate?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 138  : 
; 139  : 	Method(CalculateTotalYield);

	push	0
	push	OFFSET ?lCalculateTotalYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateTotalYield
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@JCFGPNKE@CalculateTotalYield?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 140  : 
; 141  : 	Method(CalculateUnitCost);

	push	0
	push	OFFSET ?lCalculateUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateUnitCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@NDAAFPOB@CalculateUnitCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 142  : 	Method(CalculateUnitSupply);

	push	0
	push	OFFSET ?lCalculateUnitSupply@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateUnitSupply
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@ONAPNIH@CalculateUnitSupply?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 143  : 
; 144  : 	Method(GetNumMaintenanceFreeUnits);

	push	0
	push	OFFSET ?lGetNumMaintenanceFreeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumMaintenanceFreeUnits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@IILDGNLA@GetNumMaintenanceFreeUnits?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 145  : 
; 146  : 	Method(GetBuildingGoldMaintenance);

	push	0
	push	OFFSET ?lGetBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingGoldMaintenance
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@NNCKIALH@GetBuildingGoldMaintenance?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 147  : 	Method(SetBaseBuildingGoldMaintenance);

	push	0
	push	OFFSET ?lSetBaseBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetBaseBuildingGoldMaintenance
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@BPKOFJIG@SetBaseBuildingGoldMaintenance?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 148  : 	Method(ChangeBaseBuildingGoldMaintenance);

	push	0
	push	OFFSET ?lChangeBaseBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeBaseBuildingGoldMaintenance
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@JBPCODPN@ChangeBaseBuildingGoldMaintenanc@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 149  : 
; 150  : 	Method(GetImprovementGoldMaintenance);

	push	0
	push	OFFSET ?lGetImprovementGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetImprovementGoldMaintenance
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@JGJDHHKA@GetImprovementGoldMaintenance?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 151  : 	Method(CalculateGoldRate);

	push	0
	push	OFFSET ?lCalculateGoldRate@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateGoldRate
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@CHLLOECA@CalculateGoldRate?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 152  : 	Method(CalculateGoldRateTimes100);

	push	0
	push	OFFSET ?lCalculateGoldRateTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateGoldRateTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@FCPPDOGO@CalculateGoldRateTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 153  : 	Method(CalculateGrossGoldTimes100);

	push	0
	push	OFFSET ?lCalculateGrossGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateGrossGoldTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@IMEFIJEB@CalculateGrossGoldTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 154  : 	Method(CalculateInflatedCosts);

	push	0
	push	OFFSET ?lCalculateInflatedCosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateInflatedCosts
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@CNAKGEP@CalculateInflatedCosts?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 155  : 	Method(CalculateResearchModifier);

	push	0
	push	OFFSET ?lCalculateResearchModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateResearchModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@FBIHCOGE@CalculateResearchModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 156  : 	Method(IsResearch);

	push	0
	push	OFFSET ?lIsResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsResearch
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@OHMEGGKO@IsResearch?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 157  : 	Method(CanEverResearch);

	push	0
	push	OFFSET ?lCanEverResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanEverResearch
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@NDFMOKDP@CanEverResearch?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 158  : 	Method(CanResearch);

	push	0
	push	OFFSET ?lCanResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanResearch
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@FOGEBAOH@CanResearch?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 159  : 	Method(CanResearchForFree);

	push	0
	push	OFFSET ?lCanResearchForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanResearchForFree
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@BGEEDLGF@CanResearchForFree?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 160  : 	Method(GetCurrentResearch);

	push	0
	push	OFFSET ?lGetCurrentResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentResearch
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@FLLODLHI@GetCurrentResearch?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 161  : 	Method(IsCurrentResearchRepeat);

	push	0
	push	OFFSET ?lIsCurrentResearchRepeat@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsCurrentResearchRepeat
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@LLMMAFGE@IsCurrentResearchRepeat?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 162  : 	Method(IsNoResearchAvailable);

	push	0
	push	OFFSET ?lIsNoResearchAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsNoResearchAvailable
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@GIJGCCHC@IsNoResearchAvailable?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 163  : 	Method(GetResearchTurnsLeft);

	push	0
	push	OFFSET ?lGetResearchTurnsLeft@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResearchTurnsLeft
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@HNKBNEGP@GetResearchTurnsLeft?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 164  : 	Method(GetResearchCost);

	push	0
	push	OFFSET ?lGetResearchCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResearchCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@FBPGGIIF@GetResearchCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 165  : 	Method(GetResearchProgress);

	push	0
	push	OFFSET ?lGetResearchProgress@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResearchProgress
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@EIEJGPKL@GetResearchProgress?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 166  : 
; 167  : 	Method(UnitsRequiredForGoldenAge);

	push	0
	push	OFFSET ?lUnitsRequiredForGoldenAge@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lUnitsRequiredForGoldenAge
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@HNHALJNG@UnitsRequiredForGoldenAge?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 168  : 	Method(UnitsGoldenAgeCapable);

	push	0
	push	OFFSET ?lUnitsGoldenAgeCapable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lUnitsGoldenAgeCapable
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@PPEINLDL@UnitsGoldenAgeCapable?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 169  : 	Method(UnitsGoldenAgeReady);

	push	0
	push	OFFSET ?lUnitsGoldenAgeReady@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lUnitsGoldenAgeReady
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@DNNCMFIN@UnitsGoldenAgeReady?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 170  : 	Method(GreatGeneralThreshold);

	push	0
	push	OFFSET ?lGreatGeneralThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGreatGeneralThreshold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@IDFEIBND@GreatGeneralThreshold?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 171  : 	Method(GreatAdmiralThreshold);

	push	0
	push	OFFSET ?lGreatAdmiralThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGreatAdmiralThreshold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@LBIAFMBO@GreatAdmiralThreshold?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 172  : 	Method(SpecialistYield);

	push	0
	push	OFFSET ?lSpecialistYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSpecialistYield
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@JJILDMLK@SpecialistYield?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 173  : 	Method(SetGreatGeneralCombatBonus);

	push	0
	push	OFFSET ?lSetGreatGeneralCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetGreatGeneralCombatBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@FAOFCGCH@SetGreatGeneralCombatBonus?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 174  : 	Method(GetGreatGeneralCombatBonus);

	push	0
	push	OFFSET ?lGetGreatGeneralCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatGeneralCombatBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@GPNAOGDH@GetGreatGeneralCombatBonus?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 175  : 
; 176  : 	Method(GetStartingPlot);

	push	0
	push	OFFSET ?lGetStartingPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetStartingPlot
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@FPPLBGPG@GetStartingPlot?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 177  : 	Method(SetStartingPlot);

	push	0
	push	OFFSET ?lSetStartingPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetStartingPlot
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@GNONGEOP@SetStartingPlot?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 178  : 	Method(GetTotalPopulation);

	push	0
	push	OFFSET ?lGetTotalPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@BKBNEN@GetTotalPopulation?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 179  : 	Method(GetAveragePopulation);

	push	0
	push	OFFSET ?lGetAveragePopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAveragePopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@COJNEADI@GetAveragePopulation?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 180  : 	Method(GetRealPopulation);

	push	0
	push	OFFSET ?lGetRealPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRealPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@KOHBIIDL@GetRealPopulation?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 181  : 
; 182  : 	Method(GetNewCityExtraPopulation);

	push	0
	push	OFFSET ?lGetNewCityExtraPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNewCityExtraPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@KJNHDOEI@GetNewCityExtraPopulation?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 183  : 	Method(ChangeNewCityExtraPopulation);

	push	0
	push	OFFSET ?lChangeNewCityExtraPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNewCityExtraPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@KLLGPNMM@ChangeNewCityExtraPopulation?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 184  : 
; 185  : 	Method(GetTotalLand);

	push	0
	push	OFFSET ?lGetTotalLand@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalLand
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@NKPGAGBN@GetTotalLand?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 186  : 	Method(GetTotalLandScored);

	push	0
	push	OFFSET ?lGetTotalLandScored@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalLandScored
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@BKJPLMEF@GetTotalLandScored?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 187  : 
; 188  : 	Method(GetGold);

	push	0
	push	OFFSET ?lGetGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07DJHCDIBM@GetGold?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 189  : 	Method(SetGold);

	push	0
	push	OFFSET ?lSetGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetGold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07MBIDAHMN@SetGold?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 190  : 	Method(ChangeGold);

	push	0
	push	OFFSET ?lChangeGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeGold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@EIHJEBHO@ChangeGold?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 191  : 	Method(CalculateGrossGold);

	push	0
	push	OFFSET ?lCalculateGrossGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateGrossGold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@EBBJNCCM@CalculateGrossGold?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 192  : 	Method(GetLifetimeGrossGold);

	push	0
	push	OFFSET ?lGetLifetimeGrossGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLifetimeGrossGold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@MGEEAMGC@GetLifetimeGrossGold?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 193  : 	Method(GetGoldFromCitiesTimes100);

	push	0
	push	OFFSET ?lGetGoldFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldFromCitiesTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@MDGDLJKD@GetGoldFromCitiesTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 194  : 	Method(GetGoldFromCitiesMinusTradeRoutesTimes100);

	push	0
	push	OFFSET ?lGetGoldFromCitiesMinusTradeRoutesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldFromCitiesMinusTradeRoutesTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CK@NCEBOAFI@GetGoldFromCitiesMinusTradeRoute@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 195  : 	Method(GetGoldPerTurnFromDiplomacy);

	push	0
	push	OFFSET ?lGetGoldPerTurnFromDiplomacy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerTurnFromDiplomacy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@FOPNIPEI@GetGoldPerTurnFromDiplomacy?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 196  : 	Method(GetCityConnectionRouteGoldTimes100);

	push	0
	push	OFFSET ?lGetCityConnectionRouteGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityConnectionRouteGoldTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@FCNHAJLA@GetCityConnectionRouteGoldTimes1@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 197  : 	Method(GetCityConnectionGold);

	push	0
	push	OFFSET ?lGetCityConnectionGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityConnectionGold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@LIJIKABM@GetCityConnectionGold?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 198  : 	Method(GetCityConnectionGoldTimes100);

	push	0
	push	OFFSET ?lGetCityConnectionGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityConnectionGoldTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@OCLHOOGP@GetCityConnectionGoldTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 199  : 	Method(GetGoldPerTurnFromReligion);

	push	0
	push	OFFSET ?lGetGoldPerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerTurnFromReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@HCELEJIM@GetGoldPerTurnFromReligion?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 200  : 	Method(GetGoldPerTurnFromTradeRoutes);

	push	0
	push	OFFSET ?lGetGoldPerTurnFromTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerTurnFromTradeRoutes
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@BFPJNCPO@GetGoldPerTurnFromTradeRoutes?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 201  : 	Method(GetGoldPerTurnFromTradeRoutesTimes100);

	push	0
	push	OFFSET ?lGetGoldPerTurnFromTradeRoutesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerTurnFromTradeRoutesTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CG@BDKKIKKJ@GetGoldPerTurnFromTradeRoutesTim@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 202  : 	Method(GetGoldPerTurnFromTraits);

	push	0
	push	OFFSET ?lGetGoldPerTurnFromTraits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerTurnFromTraits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@LBMKMANM@GetGoldPerTurnFromTraits?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 203  : 
; 204  : 	// Culture
; 205  : 
; 206  : #ifdef AUI_PLAYER_FIX_JONS_CULTURE_IS_T100
; 207  : 	Method(GetTotalJONSCulturePerTurnTimes100);

	push	0
	push	OFFSET ?lGetTotalJONSCulturePerTurnTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalJONSCulturePerTurnTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@JHEBIGFH@GetTotalJONSCulturePerTurnTimes1@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 208  : 
; 209  : 	Method(GetJONSCulturePerTurnFromCitiesTimes100);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromCitiesTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CI@OPIAFPNB@GetJONSCulturePerTurnFromCitiesT@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 210  : 
; 211  : 	Method(GetJONSCulturePerTurnFromExcessHappinessTimes100);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromExcessHappinessTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromExcessHappinessTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0DB@CKLJBHIK@GetJONSCulturePerTurnFromExcessH@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 212  : 	Method(GetCulturePerTurnFromReligionTimes100);

	push	0
	push	OFFSET ?lGetCulturePerTurnFromReligionTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromReligionTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CG@KPIPIBC@GetCulturePerTurnFromReligionTim@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 213  : 	Method(GetCulturePerTurnFromBonusTurnsTimes100);

	push	0
	push	OFFSET ?lGetCulturePerTurnFromBonusTurnsTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromBonusTurnsTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CI@NJFMHHMB@GetCulturePerTurnFromBonusTurnsT@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 214  : 
; 215  : 	Method(GetJONSCultureTimes100);

	push	0
	push	OFFSET ?lGetJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCultureTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@IHPMOPPA@GetJONSCultureTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 216  : 	Method(SetJONSCultureTimes100);

	push	0
	push	OFFSET ?lSetJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetJONSCultureTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@IGNCMICP@SetJONSCultureTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 217  : 	Method(ChangeJONSCultureTimes100);

	push	0
	push	OFFSET ?lChangeJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeJONSCultureTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@HBFLCFLP@ChangeJONSCultureTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 218  : 
; 219  : 	Method(GetJONSCultureEverGeneratedTimes100);

	push	0
	push	OFFSET ?lGetJONSCultureEverGeneratedTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCultureEverGeneratedTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@JHKMOFCB@GetJONSCultureEverGeneratedTimes@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 220  : #endif
; 221  : 
; 222  : 	Method(GetTotalJONSCulturePerTurn);

	push	0
	push	OFFSET ?lGetTotalJONSCulturePerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalJONSCulturePerTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@FGFBMDOG@GetTotalJONSCulturePerTurn?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 223  : 
; 224  : 	Method(GetJONSCulturePerTurnFromCities);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@LEPGPJJF@GetJONSCulturePerTurnFromCities?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 225  : 
; 226  : 	Method(GetJONSCulturePerTurnFromExcessHappiness);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromExcessHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromExcessHappiness
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CJ@ODNCODCD@GetJONSCulturePerTurnFromExcessH@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 227  : 	Method(GetJONSCulturePerTurnFromTraits);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromTraits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromTraits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@MKHKHIDI@GetJONSCulturePerTurnFromTraits?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 228  : 
; 229  : 	Method(GetCultureWonderMultiplier);

	push	0
	push	OFFSET ?lGetCultureWonderMultiplier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCultureWonderMultiplier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@NBNDOJDJ@GetCultureWonderMultiplier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 230  : 
; 231  : 	Method(GetJONSCulturePerTurnForFree);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnForFree
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@BNDOKHMF@GetJONSCulturePerTurnForFree?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 232  : 	Method(ChangeJONSCulturePerTurnForFree);

	push	0
	push	OFFSET ?lChangeJONSCulturePerTurnForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeJONSCulturePerTurnForFree
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@CBGAMBNI@ChangeJONSCulturePerTurnForFree?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 233  : 
; 234  : 	Method(GetJONSCulturePerTurnFromMinorCivs);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromMinorCivs
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@FHKIFDOD@GetJONSCulturePerTurnFromMinorCi@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 235  : 	Method(ChangeJONSCulturePerTurnFromMinorCivs);

	push	0
	push	OFFSET ?lChangeJONSCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeJONSCulturePerTurnFromMinorCivs
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CG@PIDBKECO@ChangeJONSCulturePerTurnFromMino@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 236  : 	Method(GetCulturePerTurnFromMinorCivs);

	push	0
	push	OFFSET ?lGetCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromMinorCivs
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@GAJNEDAB@GetCulturePerTurnFromMinorCivs?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 237  : 	Method(GetCulturePerTurnFromMinor);

	push	0
	push	OFFSET ?lGetCulturePerTurnFromMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromMinor
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@NGNGJNJH@GetCulturePerTurnFromMinor?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 238  : 
; 239  : 	Method(GetCulturePerTurnFromReligion);

	push	0
	push	OFFSET ?lGetCulturePerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@GAMICNIB@GetCulturePerTurnFromReligion?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 240  : 	Method(GetCulturePerTurnFromBonusTurns);

	push	0
	push	OFFSET ?lGetCulturePerTurnFromBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromBonusTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@IGMAMKOC@GetCulturePerTurnFromBonusTurns?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 241  : 	Method(GetCultureCityModifier);

	push	0
	push	OFFSET ?lGetCultureCityModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCultureCityModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@HKAGHDHI@GetCultureCityModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 242  : 
; 243  : 	Method(GetJONSCulture);

	push	0
	push	OFFSET ?lGetJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulture
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@CGJFEHOP@GetJONSCulture?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 244  : 	Method(SetJONSCulture);

	push	0
	push	OFFSET ?lSetJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetJONSCulture
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@OIILLNMD@SetJONSCulture?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 245  : 	Method(ChangeJONSCulture);

	push	0
	push	OFFSET ?lChangeJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeJONSCulture
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@LCMCLAMC@ChangeJONSCulture?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 246  : 
; 247  : 	Method(GetJONSCultureEverGenerated);

	push	0
	push	OFFSET ?lGetJONSCultureEverGenerated@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCultureEverGenerated
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@NBLAPLAA@GetJONSCultureEverGenerated?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 248  : 
; 249  : 	Method(GetLastTurnLifetimeCulture);

	push	0
	push	OFFSET ?lGetLastTurnLifetimeCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLastTurnLifetimeCulture
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@OMAEEPPN@GetLastTurnLifetimeCulture?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 250  : 	Method(GetInfluenceOn);

	push	0
	push	OFFSET ?lGetInfluenceOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceOn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@JPDBFNBF@GetInfluenceOn?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 251  : 	Method(GetLastTurnInfluenceOn);

	push	0
	push	OFFSET ?lGetLastTurnInfluenceOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLastTurnInfluenceOn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@OBMBCGGO@GetLastTurnInfluenceOn?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 252  : 	Method(GetInfluencePerTurn);

	push	0
	push	OFFSET ?lGetInfluencePerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluencePerTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@JOBIMOPK@GetInfluencePerTurn?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 253  : 	Method(GetInfluenceLevel);

	push	0
	push	OFFSET ?lGetInfluenceLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceLevel
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@HMGCNDLI@GetInfluenceLevel?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 254  : 	Method(GetInfluenceTrend);

	push	0
	push	OFFSET ?lGetInfluenceTrend@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceTrend
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@MHAHIFEE@GetInfluenceTrend?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 255  : 	Method(GetTurnsToInfluential);

	push	0
	push	OFFSET ?lGetTurnsToInfluential@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnsToInfluential
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@KILNCCEE@GetTurnsToInfluential?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 256  : 	Method(GetNumCivsInfluentialOn);

	push	0
	push	OFFSET ?lGetNumCivsInfluentialOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumCivsInfluentialOn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@BFKABOF@GetNumCivsInfluentialOn?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 257  : 	Method(GetNumCivsToBeInfluentialOn);

	push	0
	push	OFFSET ?lGetNumCivsToBeInfluentialOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumCivsToBeInfluentialOn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@IMBBHDIP@GetNumCivsToBeInfluentialOn?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 258  : 	Method(GetInfluenceTradeRouteScienceBonus);

	push	0
	push	OFFSET ?lGetInfluenceTradeRouteScienceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceTradeRouteScienceBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@JDKNKPMO@GetInfluenceTradeRouteScienceBon@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 259  : 	Method(GetInfluenceCityStateSpyRankBonus);

	push	0
	push	OFFSET ?lGetInfluenceCityStateSpyRankBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceCityStateSpyRankBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@GKICPACC@GetInfluenceCityStateSpyRankBonu@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 260  : 	Method(GetInfluenceMajorCivSpyRankBonus);

	push	0
	push	OFFSET ?lGetInfluenceMajorCivSpyRankBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceMajorCivSpyRankBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CB@OGCLKEOM@GetInfluenceMajorCivSpyRankBonus@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 261  : 	Method(GetInfluenceSpyRankTooltip);

	push	0
	push	OFFSET ?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceSpyRankTooltip
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@PBMHLJLN@GetInfluenceSpyRankTooltip?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 262  : 	Method(GetTourism);

	push	0
	push	OFFSET ?lGetTourism@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTourism
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@EFCPIKBF@GetTourism?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 263  : 	Method(GetTourismModifierWith);

	push	0
	push	OFFSET ?lGetTourismModifierWith@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTourismModifierWith
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@LEGCHAJ@GetTourismModifierWith?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 264  : 	Method(GetTourismModifierWithTooltip);

	push	0
	push	OFFSET ?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTourismModifierWithTooltip
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@KBFACNE@GetTourismModifierWithTooltip?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 265  : 	Method(GetPublicOpinionType);

	push	0
	push	OFFSET ?lGetPublicOpinionType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPublicOpinionType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@IIIEGGHB@GetPublicOpinionType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 266  : 	Method(GetPublicOpinionPreferredIdeology);

	push	0
	push	OFFSET ?lGetPublicOpinionPreferredIdeology@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPublicOpinionPreferredIdeology
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@MILACHKP@GetPublicOpinionPreferredIdeolog@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 267  : 	Method(GetPublicOpinionTooltip);

	push	0
	push	OFFSET ?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPublicOpinionTooltip
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@PLLLEMKO@GetPublicOpinionTooltip?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 268  : 	Method(GetPublicOpinionUnhappiness);

	push	0
	push	OFFSET ?lGetPublicOpinionUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPublicOpinionUnhappiness
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@JKFIJPGB@GetPublicOpinionUnhappiness?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 269  : 	Method(GetPublicOpinionUnhappinessTooltip);

	push	0
	push	OFFSET ?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPublicOpinionUnhappinessTooltip
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@JOPJDOGM@GetPublicOpinionUnhappinessToolt@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 270  : 
; 271  : 	Method(HasAvailableGreatWorkSlot);

	push	0
	push	OFFSET ?lHasAvailableGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasAvailableGreatWorkSlot
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@FHJPCAFI@HasAvailableGreatWorkSlot?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 272  : 	Method(GetCityOfClosestGreatWorkSlot);

	push	0
	push	OFFSET ?lGetCityOfClosestGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityOfClosestGreatWorkSlot
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@NCOJGFIE@GetCityOfClosestGreatWorkSlot?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 273  : 	Method(GetBuildingOfClosestGreatWorkSlot);

	push	0
	push	OFFSET ?lGetBuildingOfClosestGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingOfClosestGreatWorkSlot
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@OKDECLG@GetBuildingOfClosestGreatWorkSlo@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 274  : 	Method(GetNextDigCompletePlot);

	push	0
	push	OFFSET ?lGetNextDigCompletePlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNextDigCompletePlot
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@EOCBNBBC@GetNextDigCompletePlot?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 275  : 	Method(GetWrittenArtifactCulture);

	push	0
	push	OFFSET ?lGetWrittenArtifactCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWrittenArtifactCulture
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@HEKMPHCD@GetWrittenArtifactCulture?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 276  : 	Method(GetNumGreatWorks);

	push	0
	push	OFFSET ?lGetNumGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumGreatWorks
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@ILOKIPKM@GetNumGreatWorks?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 277  : 	Method(GetNumGreatWorkSlots);

	push	0
	push	OFFSET ?lGetNumGreatWorkSlots@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumGreatWorkSlots
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@FMOOCJFI@GetNumGreatWorkSlots?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 278  : 
; 279  : 	// Faith
; 280  : 
; 281  : 	Method(GetFaith);

	push	0
	push	OFFSET ?lGetFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFaith
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08OGIIPBFO@GetFaith?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 282  : 	Method(SetFaith);

	push	0
	push	OFFSET ?lSetFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetFaith
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08BHKEOCCD@SetFaith?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 283  : 	Method(ChangeFaith);

	push	0
	push	OFFSET ?lChangeFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeFaith
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@EFEFPKFD@ChangeFaith?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 284  : 	Method(GetTotalFaithPerTurn);

	push	0
	push	OFFSET ?lGetTotalFaithPerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalFaithPerTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@KAKKKCDB@GetTotalFaithPerTurn?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 285  : 	Method(GetFaithPerTurnFromCities);

	push	0
	push	OFFSET ?lGetFaithPerTurnFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFaithPerTurnFromCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@DEPMGGBK@GetFaithPerTurnFromCities?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 286  : 	Method(GetFaithPerTurnFromMinorCivs);

	push	0
	push	OFFSET ?lGetFaithPerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFaithPerTurnFromMinorCivs
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@KLMNHABF@GetFaithPerTurnFromMinorCivs?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 287  : 	Method(GetFaithPerTurnFromReligion);

	push	0
	push	OFFSET ?lGetFaithPerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFaithPerTurnFromReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@FBEILFDB@GetFaithPerTurnFromReligion?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 288  : #ifdef NQ_BELIEF_TOGGLE_ALLOW_FAITH_GIFTS_TO_MINORS
; 289  : 	Method(CanFaithGiftMinors);

	push	0
	push	OFFSET ?lCanFaithGiftMinors@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanFaithGiftMinors
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@MIKGEGGL@CanFaithGiftMinors?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 290  : #endif
; 291  : 	Method(HasCreatedPantheon);

	push	0
	push	OFFSET ?lHasCreatedPantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasCreatedPantheon
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@MKDLKLJP@HasCreatedPantheon?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 292  : 	Method(GetBeliefInPantheon);

	push	0
	push	OFFSET ?lGetBeliefInPantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBeliefInPantheon
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@NCIMNEEK@GetBeliefInPantheon?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 293  : 	Method(HasCreatedReligion);

	push	0
	push	OFFSET ?lHasCreatedReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasCreatedReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@IANGKFOG@HasCreatedReligion?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 294  : 	Method(CanCreatePantheon);

	push	0
	push	OFFSET ?lCanCreatePantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanCreatePantheon
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@BEJANDOH@CanCreatePantheon?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 295  : 	Method(GetReligionCreatedByPlayer);

	push	0
	push	OFFSET ?lGetReligionCreatedByPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetReligionCreatedByPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@NDMELHHP@GetReligionCreatedByPlayer?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 296  : 	Method(GetFoundedReligionEnemyCityCombatMod);

	push	0
	push	OFFSET ?lGetFoundedReligionEnemyCityCombatMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFoundedReligionEnemyCityCombatMod
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CF@LIFLPEAN@GetFoundedReligionEnemyCityComba@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 297  : 	Method(GetFoundedReligionFriendlyCityCombatMod);

	push	0
	push	OFFSET ?lGetFoundedReligionFriendlyCityCombatMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFoundedReligionFriendlyCityCombatMod
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CI@IMONNDBE@GetFoundedReligionFriendlyCityCo@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 298  : 	Method(GetMinimumFaithNextGreatProphet);

	push	0
	push	OFFSET ?lGetMinimumFaithNextGreatProphet@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinimumFaithNextGreatProphet
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@BOJACAPD@GetMinimumFaithNextGreatProphet?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 299  : 	Method(HasReligionInMostCities);

	push	0
	push	OFFSET ?lHasReligionInMostCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasReligionInMostCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@LGIHCJNG@HasReligionInMostCities?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 300  : 	Method(DoesUnitPassFaithPurchaseCheck);

	push	0
	push	OFFSET ?lDoesUnitPassFaithPurchaseCheck@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoesUnitPassFaithPurchaseCheck
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@KDEEONIG@DoesUnitPassFaithPurchaseCheck?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 301  : 
; 302  : 	// Happiness
; 303  : 
; 304  : 	Method(GetHappiness);

	push	0
	push	OFFSET ?lGetHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappiness
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@BPJGOLFM@GetHappiness?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 305  : 	Method(SetHappiness);

	push	0
	push	OFFSET ?lSetHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetHappiness
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@GLCICHBA@SetHappiness?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 306  : 
; 307  : 	Method(GetExcessHappiness);

	push	0
	push	OFFSET ?lGetExcessHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExcessHappiness
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@KNCDHHMN@GetExcessHappiness?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 308  : 	Method(IsEmpireUnhappy);

	push	0
	push	OFFSET ?lIsEmpireUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsEmpireUnhappy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@NHLHHEED@IsEmpireUnhappy?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 309  : 	Method(IsEmpireVeryUnhappy);

	push	0
	push	OFFSET ?lIsEmpireVeryUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsEmpireVeryUnhappy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@DBNNOCLK@IsEmpireVeryUnhappy?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 310  : 	Method(IsEmpireSuperUnhappy);

	push	0
	push	OFFSET ?lIsEmpireSuperUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsEmpireSuperUnhappy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@IJAIICIJ@IsEmpireSuperUnhappy?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 311  : 
; 312  : 	Method(GetHappinessFromPolicies);

	push	0
	push	OFFSET ?lGetHappinessFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromPolicies
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@HKEDOHML@GetHappinessFromPolicies?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 313  : 	Method(GetHappinessFromCities);

	push	0
	push	OFFSET ?lGetHappinessFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@DNCNLJLJ@GetHappinessFromCities?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 314  : 	Method(GetHappinessFromBuildings);

	push	0
	push	OFFSET ?lGetHappinessFromBuildings@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromBuildings
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@NJJIHGAG@GetHappinessFromBuildings?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 315  : 
; 316  : 	Method(GetExtraHappinessPerCity);

	push	0
	push	OFFSET ?lGetExtraHappinessPerCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExtraHappinessPerCity
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@BPPBPKOL@GetExtraHappinessPerCity?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 317  : 	Method(ChangeExtraHappinessPerCity);

	push	0
	push	OFFSET ?lChangeExtraHappinessPerCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeExtraHappinessPerCity
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@BDKBHECI@ChangeExtraHappinessPerCity?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 318  : 
; 319  : 	Method(GetHappinessFromResources);

	push	0
	push	OFFSET ?lGetHappinessFromResources@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromResources
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@KADBPJPP@GetHappinessFromResources?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 320  : 	Method(GetHappinessFromResourceVariety);

	push	0
	push	OFFSET ?lGetHappinessFromResourceVariety@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromResourceVariety
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@NPGNMMND@GetHappinessFromResourceVariety?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 321  : 	Method(GetExtraHappinessPerLuxury);

	push	0
	push	OFFSET ?lGetExtraHappinessPerLuxury@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExtraHappinessPerLuxury
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@EEBALAOF@GetExtraHappinessPerLuxury?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 322  : 	Method(GetHappinessFromReligion);

	push	0
	push	OFFSET ?lGetHappinessFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@MCAOJMIP@GetHappinessFromReligion?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 323  : 	Method(GetHappinessFromNaturalWonders);

	push	0
	push	OFFSET ?lGetHappinessFromNaturalWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromNaturalWonders
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@GFJNHLAE@GetHappinessFromNaturalWonders?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 324  : 	Method(GetHappinessFromLeagues);

	push	0
	push	OFFSET ?lGetHappinessFromLeagues@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromLeagues
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@MILNBGI@GetHappinessFromLeagues?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 325  : 
; 326  : 	Method(GetUnhappiness);

	push	0
	push	OFFSET ?lGetUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappiness
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@DDCLBDGA@GetUnhappiness?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 327  : 	Method(GetUnhappinessForecast);

	push	0
	push	OFFSET ?lGetUnhappinessForecast@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessForecast
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@MKFGHBDK@GetUnhappinessForecast?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 328  : 
; 329  : 	Method(GetUnhappinessFromCityForUI);

	push	0
	push	OFFSET ?lGetUnhappinessFromCityForUI@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromCityForUI
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@GNGHHBBH@GetUnhappinessFromCityForUI?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 330  : 
; 331  : 	Method(GetUnhappinessFromCityCount);

	push	0
	push	OFFSET ?lGetUnhappinessFromCityCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromCityCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@OCKLJKNC@GetUnhappinessFromCityCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 332  : 	Method(GetUnhappinessFromCapturedCityCount);

	push	0
	push	OFFSET ?lGetUnhappinessFromCapturedCityCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromCapturedCityCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@ECLIBGEO@GetUnhappinessFromCapturedCityCo@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 333  : 	Method(GetUnhappinessFromCityPopulation);

	push	0
	push	OFFSET ?lGetUnhappinessFromCityPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromCityPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CB@KBOPPOAK@GetUnhappinessFromCityPopulation@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 334  : 	Method(GetUnhappinessFromCitySpecialists);

	push	0
	push	OFFSET ?lGetUnhappinessFromCitySpecialists@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromCitySpecialists
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@BMLAPPGM@GetUnhappinessFromCitySpecialist@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 335  : 	Method(GetUnhappinessFromOccupiedCities);

	push	0
	push	OFFSET ?lGetUnhappinessFromOccupiedCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromOccupiedCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CB@MKILLP@GetUnhappinessFromOccupiedCities@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 336  : 	Method(GetUnhappinessFromPuppetCityPopulation);

	push	0
	push	OFFSET ?lGetUnhappinessFromPuppetCityPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromPuppetCityPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CH@CLBIAMK@GetUnhappinessFromPuppetCityPopu@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 337  : 	Method(GetUnhappinessFromPublicOpinion);

	push	0
	push	OFFSET ?lGetUnhappinessFromPublicOpinion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromPublicOpinion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@INPCOOLO@GetUnhappinessFromPublicOpinion?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 338  : 	Method(GetUnhappinessFromUnits);

	push	0
	push	OFFSET ?lGetUnhappinessFromUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromUnits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@CENNKONH@GetUnhappinessFromUnits?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 339  : 	Method(ChangeUnhappinessFromUnits);

	push	0
	push	OFFSET ?lChangeUnhappinessFromUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeUnhappinessFromUnits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@MCEIFFBM@ChangeUnhappinessFromUnits?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 340  : 
; 341  : 	Method(GetUnhappinessMod);

	push	0
	push	OFFSET ?lGetUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessMod
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@KOOANBJP@GetUnhappinessMod?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 342  : 	Method(GetCityCountUnhappinessMod);

	push	0
	push	OFFSET ?lGetCityCountUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityCountUnhappinessMod
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@DLGEPDKJ@GetCityCountUnhappinessMod?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 343  : 	Method(GetOccupiedPopulationUnhappinessMod);

	push	0
	push	OFFSET ?lGetOccupiedPopulationUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOccupiedPopulationUnhappinessMod
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@OKFBELDK@GetOccupiedPopulationUnhappiness@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 344  : 	Method(GetCapitalUnhappinessMod);

	push	0
	push	OFFSET ?lGetCapitalUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCapitalUnhappinessMod
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@GJPGDMHB@GetCapitalUnhappinessMod?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 345  : 	Method(GetTraitCityUnhappinessMod);

	push	0
	push	OFFSET ?lGetTraitCityUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitCityUnhappinessMod
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@GIPNPCHI@GetTraitCityUnhappinessMod?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 346  : 	Method(GetTraitPopUnhappinessMod);

	push	0
	push	OFFSET ?lGetTraitPopUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitPopUnhappinessMod
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@LDLDMFJK@GetTraitPopUnhappinessMod?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 347  : 	Method(IsHalfSpecialistUnhappiness);

	push	0
	push	OFFSET ?lIsHalfSpecialistUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsHalfSpecialistUnhappiness
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@HAKOEBKA@IsHalfSpecialistUnhappiness?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 348  : 
; 349  : 	Method(GetHappinessPerGarrisonedUnit);

	push	0
	push	OFFSET ?lGetHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessPerGarrisonedUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@PMOLOJJE@GetHappinessPerGarrisonedUnit?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 350  : 	Method(SetHappinessPerGarrisonedUnit);

	push	0
	push	OFFSET ?lSetHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetHappinessPerGarrisonedUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@HNIEFJLG@SetHappinessPerGarrisonedUnit?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 351  : 	Method(ChangeHappinessPerGarrisonedUnit);

	push	0
	push	OFFSET ?lChangeHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeHappinessPerGarrisonedUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CB@JPNBNLCL@ChangeHappinessPerGarrisonedUnit@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 352  : 
; 353  : 	Method(GetHappinessFromTradeRoutes);

	push	0
	push	OFFSET ?lGetHappinessFromTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromTradeRoutes
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@ONEGOIFC@GetHappinessFromTradeRoutes?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 354  : 	Method(GetHappinessPerTradeRoute);

	push	0
	push	OFFSET ?lGetHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessPerTradeRoute
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@MNJAOC@GetHappinessPerTradeRoute?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 355  : 	Method(SetHappinessPerTradeRoute);

	push	0
	push	OFFSET ?lSetHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetHappinessPerTradeRoute
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@IAALFNEE@SetHappinessPerTradeRoute?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 356  : 	Method(ChangeHappinessPerTradeRoute);

	push	0
	push	OFFSET ?lChangeHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeHappinessPerTradeRoute
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@CKMFDGG@ChangeHappinessPerTradeRoute?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 357  : 
; 358  : 	Method(GetCityConnectionTradeRouteGoldModifier);

	push	0
	push	OFFSET ?lGetCityConnectionTradeRouteGoldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityConnectionTradeRouteGoldModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CI@JLDDCPMO@GetCityConnectionTradeRouteGoldM@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 359  : 
; 360  : 	Method(GetHappinessFromMinorCivs);

	push	0
	push	OFFSET ?lGetHappinessFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromMinorCivs
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@IHIHKILH@GetHappinessFromMinorCivs?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 361  : 	Method(GetHappinessFromMinor);

	push	0
	push	OFFSET ?lGetHappinessFromMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromMinor
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@DIIAGAEM@GetHappinessFromMinor?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 362  : 
; 363  : 	// END Happiness
; 364  : 
; 365  : 	Method(GetBarbarianCombatBonus);

	push	0
	push	OFFSET ?lGetBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBarbarianCombatBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@KLEIJDDK@GetBarbarianCombatBonus?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 366  : 	Method(SetBarbarianCombatBonus);

	push	0
	push	OFFSET ?lSetBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetBarbarianCombatBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@LNCFHCFI@SetBarbarianCombatBonus?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 367  : 	Method(ChangeBarbarianCombatBonus);

	push	0
	push	OFFSET ?lChangeBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeBarbarianCombatBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@ENNNGIPB@ChangeBarbarianCombatBonus?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 368  : 	Method(GetCombatBonusVsHigherTech);

	push	0
	push	OFFSET ?lGetCombatBonusVsHigherTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCombatBonusVsHigherTech
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@NBFOBEAE@GetCombatBonusVsHigherTech?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 369  : 	Method(GetCombatBonusVsLargerCiv);

	push	0
	push	OFFSET ?lGetCombatBonusVsLargerCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCombatBonusVsLargerCiv
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@CFFLCBFM@GetCombatBonusVsLargerCiv?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 370  : #ifdef NQ_COMBAT_BONUS_VS_SMALLER_CIV_FROM_POLICIES
; 371  : 	Method(GetCombatBonusVsSmallerCiv);

	push	0
	push	OFFSET ?lGetCombatBonusVsSmallerCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCombatBonusVsSmallerCiv
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@DLHHGHDO@GetCombatBonusVsSmallerCiv?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 372  : #endif
; 373  : 
; 374  : 	Method(GetGarrisonedCityRangeStrikeModifier);

	push	0
	push	OFFSET ?lGetGarrisonedCityRangeStrikeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGarrisonedCityRangeStrikeModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CF@HCFHKNHE@GetGarrisonedCityRangeStrikeModi@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 375  : 	Method(ChangeGarrisonedCityRangeStrikeModifier);

	push	0
	push	OFFSET ?lChangeGarrisonedCityRangeStrikeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeGarrisonedCityRangeStrikeModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CI@CPNKMMFB@ChangeGarrisonedCityRangeStrikeM@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 376  : 
; 377  : 	Method(IsAlwaysSeeBarbCamps);

	push	0
	push	OFFSET ?lIsAlwaysSeeBarbCamps@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAlwaysSeeBarbCamps
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@HGKGHLME@IsAlwaysSeeBarbCamps?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 378  : 	Method(SetAlwaysSeeBarbCampsCount);

	push	0
	push	OFFSET ?lSetAlwaysSeeBarbCampsCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetAlwaysSeeBarbCampsCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@HIDDCHF@SetAlwaysSeeBarbCampsCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 379  : 	Method(ChangeAlwaysSeeBarbCampsCount);

	push	0
	push	OFFSET ?lChangeAlwaysSeeBarbCampsCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeAlwaysSeeBarbCampsCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@NCGBNEJP@ChangeAlwaysSeeBarbCampsCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 380  : 
; 381  : 	Method(IsPolicyBlocked);

	push	0
	push	OFFSET ?lIsPolicyBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPolicyBlocked
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@DKMNPPBN@IsPolicyBlocked?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 382  : 	Method(IsPolicyBranchBlocked);

	push	0
	push	OFFSET ?lIsPolicyBranchBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPolicyBranchBlocked
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@KBLODJLM@IsPolicyBranchBlocked?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 383  : 	Method(IsPolicyBranchUnlocked);

	push	0
	push	OFFSET ?lIsPolicyBranchUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPolicyBranchUnlocked
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@NOCEELNL@IsPolicyBranchUnlocked?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 384  : 	Method(SetPolicyBranchUnlocked);

	push	0
	push	OFFSET ?lSetPolicyBranchUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetPolicyBranchUnlocked
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@GJDFFJHC@SetPolicyBranchUnlocked?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 385  : 	Method(GetNumPolicyBranchesUnlocked);

	push	0
	push	OFFSET ?lGetNumPolicyBranchesUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPolicyBranchesUnlocked
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@FFNPAHDM@GetNumPolicyBranchesUnlocked?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 386  : 	Method(GetPolicyBranchChosen);

	push	0
	push	OFFSET ?lGetPolicyBranchChosen@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyBranchChosen
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@KGNNGKHG@GetPolicyBranchChosen?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 387  : 	Method(GetNumPolicyBranchesAllowed);

	push	0
	push	OFFSET ?lGetNumPolicyBranchesAllowed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPolicyBranchesAllowed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@DDGOEEIN@GetNumPolicyBranchesAllowed?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 388  : 	Method(GetNumPolicies);

	push	0
	push	OFFSET ?lGetNumPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPolicies
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@LDBNHHDO@GetNumPolicies?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 389  : 	Method(GetNumPoliciesInBranch);

	push	0
	push	OFFSET ?lGetNumPoliciesInBranch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPoliciesInBranch
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@OLJHEJDP@GetNumPoliciesInBranch?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 390  : 	Method(HasPolicy);

	push	0
	push	OFFSET ?lHasPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasPolicy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09IMCIBCHC@HasPolicy?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 391  : 	Method(SetHasPolicy);

	push	0
	push	OFFSET ?lSetHasPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetHasPolicy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@CKJMFNFA@SetHasPolicy?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 392  : 	Method(GetNextPolicyCost);

	push	0
	push	OFFSET ?lGetNextPolicyCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNextPolicyCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@HNDGHHDL@GetNextPolicyCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 393  : 	Method(CanAdoptPolicy);

	push	0
	push	OFFSET ?lCanAdoptPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanAdoptPolicy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@NBAEIJPB@CanAdoptPolicy?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 394  : 	Method(DoAdoptPolicy);

	push	0
	push	OFFSET ?lDoAdoptPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoAdoptPolicy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@JILLCNOF@DoAdoptPolicy?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 395  : 	Method(CanUnlockPolicyBranch);

	push	0
	push	OFFSET ?lCanUnlockPolicyBranch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanUnlockPolicyBranch
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@MONIAELO@CanUnlockPolicyBranch?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 396  : 	Method(GetDominantPolicyBranchForTitle);

	push	0
	push	OFFSET ?lGetDominantPolicyBranchForTitle@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDominantPolicyBranchForTitle
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@DEKBLMFE@GetDominantPolicyBranchForTitle?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 397  : 	Method(GetLateGamePolicyTree);

	push	0
	push	OFFSET ?lGetLateGamePolicyTree@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLateGamePolicyTree
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@DOHPFKJL@GetLateGamePolicyTree?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 398  : 	Method(GetBranchPicked1);

	push	0
	push	OFFSET ?lGetBranchPicked1@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBranchPicked1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@DMEMKBIB@GetBranchPicked1?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 399  : 	Method(GetBranchPicked2);

	push	0
	push	OFFSET ?lGetBranchPicked2@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBranchPicked2
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@BHGBPCEC@GetBranchPicked2?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 400  : 	Method(GetBranchPicked3);

	push	0
	push	OFFSET ?lGetBranchPicked3@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBranchPicked3
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@OHKMDAD@GetBranchPicked3?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 401  : 
; 402  : 	Method(GetPolicyCatchSpiesModifier);

	push	0
	push	OFFSET ?lGetPolicyCatchSpiesModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyCatchSpiesModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@KBCLIFBL@GetPolicyCatchSpiesModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 403  : 
; 404  : 	Method(GetNumPolicyBranchesFinished);

	push	0
	push	OFFSET ?lGetNumPolicyBranchesFinished@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPolicyBranchesFinished
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@PJMELKMJ@GetNumPolicyBranchesFinished?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 405  : 	Method(IsPolicyBranchFinished);

	push	0
	push	OFFSET ?lIsPolicyBranchFinished@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPolicyBranchFinished
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@HCDPPGCO@IsPolicyBranchFinished?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 406  : 
; 407  : 	Method(GetAvailableTenets);

	push	0
	push	OFFSET ?lGetAvailableTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAvailableTenets
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@LDLHNBJO@GetAvailableTenets?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 408  : 	Method(GetTenet);

	push	0
	push	OFFSET ?lGetTenet@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTenet
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08DLFCFIKN@GetTenet?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 409  : 
; 410  : 	Method(IsAnarchy);

	push	0
	push	OFFSET ?lIsAnarchy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAnarchy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09FIFKNOKC@IsAnarchy?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 411  : 	Method(GetAnarchyNumTurns);

	push	0
	push	OFFSET ?lGetAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAnarchyNumTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@FECLAAFA@GetAnarchyNumTurns?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 412  : 	Method(SetAnarchyNumTurns);

	push	0
	push	OFFSET ?lSetAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetAnarchyNumTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@KOABDGLI@SetAnarchyNumTurns?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 413  : 	Method(ChangeAnarchyNumTurns);

	push	0
	push	OFFSET ?lChangeAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeAnarchyNumTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@LEGAIOCI@ChangeAnarchyNumTurns?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 414  : 
; 415  : 	Method(GetAdvancedStartPoints);

	push	0
	push	OFFSET ?lGetAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartPoints
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@KPOKEGNM@GetAdvancedStartPoints?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 416  : 	Method(SetAdvancedStartPoints);

	push	0
	push	OFFSET ?lSetAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetAdvancedStartPoints
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@KOMEGBAD@SetAdvancedStartPoints?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 417  : 	Method(ChangeAdvancedStartPoints);

	push	0
	push	OFFSET ?lChangeAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeAdvancedStartPoints
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@FJENIMJD@ChangeAdvancedStartPoints?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 418  : 	Method(GetAdvancedStartUnitCost);

	push	0
	push	OFFSET ?lGetAdvancedStartUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartUnitCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@ICGIEDDK@GetAdvancedStartUnitCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 419  : 	Method(GetAdvancedStartCityCost);

	push	0
	push	OFFSET ?lGetAdvancedStartCityCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartCityCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@ONOAJPAI@GetAdvancedStartCityCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 420  : 	Method(GetAdvancedStartPopCost);

	push	0
	push	OFFSET ?lGetAdvancedStartPopCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartPopCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@FOAJKADD@GetAdvancedStartPopCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 421  : 	Method(GetAdvancedStartBuildingCost);

	push	0
	push	OFFSET ?lGetAdvancedStartBuildingCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartBuildingCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@BBJMEHC@GetAdvancedStartBuildingCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 422  : 	Method(GetAdvancedStartImprovementCost);

	push	0
	push	OFFSET ?lGetAdvancedStartImprovementCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartImprovementCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@DCEELAJ@GetAdvancedStartImprovementCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 423  : 	Method(GetAdvancedStartRouteCost);

	push	0
	push	OFFSET ?lGetAdvancedStartRouteCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartRouteCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@JJCKPMNB@GetAdvancedStartRouteCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 424  : 	Method(GetAdvancedStartTechCost);

	push	0
	push	OFFSET ?lGetAdvancedStartTechCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartTechCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@BIBNNGIB@GetAdvancedStartTechCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 425  : 	Method(GetAdvancedStartVisibilityCost);

	push	0
	push	OFFSET ?lGetAdvancedStartVisibilityCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartVisibilityCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@EFPNHEAL@GetAdvancedStartVisibilityCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 426  : 
; 427  : 	Method(GetAttackBonusTurns);

	push	0
	push	OFFSET ?lGetAttackBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAttackBonusTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@DHPFLJOB@GetAttackBonusTurns?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 428  : 	Method(GetCultureBonusTurns);

	push	0
	push	OFFSET ?lGetCultureBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCultureBonusTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@ECALGNHI@GetCultureBonusTurns?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 429  : 	Method(GetTourismBonusTurns);

	push	0
	push	OFFSET ?lGetTourismBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTourismBonusTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@CGIAJLKI@GetTourismBonusTurns?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 430  : 
; 431  : 	Method(GetGoldenAgeProgressThreshold);

	push	0
	push	OFFSET ?lGetGoldenAgeProgressThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeProgressThreshold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@LPPFEDND@GetGoldenAgeProgressThreshold?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 432  : 	Method(GetGoldenAgeProgressMeter);

	push	0
	push	OFFSET ?lGetGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeProgressMeter
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@FLGLHHFN@GetGoldenAgeProgressMeter?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 433  : 	Method(SetGoldenAgeProgressMeter);

	push	0
	push	OFFSET ?lSetGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetGoldenAgeProgressMeter
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@NLKNLKPL@SetGoldenAgeProgressMeter?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 434  : 	Method(ChangeGoldenAgeProgressMeter);

	push	0
	push	OFFSET ?lChangeGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeGoldenAgeProgressMeter
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@FJAKLENJ@ChangeGoldenAgeProgressMeter?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 435  : 	Method(GetNumGoldenAges);

	push	0
	push	OFFSET ?lGetNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumGoldenAges
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@EMINOHBG@GetNumGoldenAges?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 436  : 	Method(SetNumGoldenAges);

	push	0
	push	OFFSET ?lSetNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumGoldenAges
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@CINEFJKE@SetNumGoldenAges?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 437  : 	Method(ChangeNumGoldenAges);

	push	0
	push	OFFSET ?lChangeNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumGoldenAges
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@EPHOEOBB@ChangeNumGoldenAges?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 438  : 	Method(GetGoldenAgeTurns);

	push	0
	push	OFFSET ?lGetGoldenAgeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@HOFBCHIL@GetGoldenAgeTurns?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 439  : 	Method(GetGoldenAgeLength);

	push	0
	push	OFFSET ?lGetGoldenAgeLength@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeLength
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@FNIABJJO@GetGoldenAgeLength?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 440  : 	Method(IsGoldenAge);

	push	0
	push	OFFSET ?lIsGoldenAge@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsGoldenAge
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@EBKACFHH@IsGoldenAge?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 441  : 	Method(ChangeGoldenAgeTurns);

	push	0
	push	OFFSET ?lChangeGoldenAgeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeGoldenAgeTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@OADGEBIB@ChangeGoldenAgeTurns?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 442  : 	Method(GetNumUnitGoldenAges);

	push	0
	push	OFFSET ?lGetNumUnitGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitGoldenAges
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@LCGDAHFL@GetNumUnitGoldenAges?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 443  : 	Method(ChangeNumUnitGoldenAges);

	push	0
	push	OFFSET ?lChangeNumUnitGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumUnitGoldenAges
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@FPIFLKMJ@ChangeNumUnitGoldenAges?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 444  : 	Method(GetStrikeTurns);

	push	0
	push	OFFSET ?lGetStrikeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetStrikeTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@HJMIOKAH@GetStrikeTurns?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 445  : 	Method(GetGoldenAgeModifier);

	push	0
	push	OFFSET ?lGetGoldenAgeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@GCOBNFFJ@GetGoldenAgeModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 446  :     Method(GetGoldenAgeTourismModifier);

	push	0
	push	OFFSET ?lGetGoldenAgeTourismModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeTourismModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@GFBIOEFN@GetGoldenAgeTourismModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 447  :     Method(GetGoldenAgeGreatWriterRateModifier);

	push	0
	push	OFFSET ?lGetGoldenAgeGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeGreatWriterRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@INBNFEPK@GetGoldenAgeGreatWriterRateModif@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 448  :     Method(GetGoldenAgeGreatArtistRateModifier);

	push	0
	push	OFFSET ?lGetGoldenAgeGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeGreatArtistRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@HHFLCCEA@GetGoldenAgeGreatArtistRateModif@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 449  :     Method(GetGoldenAgeGreatMusicianRateModifier);

	push	0
	push	OFFSET ?lGetGoldenAgeGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeGreatMusicianRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CG@HCINBNOL@GetGoldenAgeGreatMusicianRateMod@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 450  : 
; 451  : 	Method(GetHurryModifier);

	push	0
	push	OFFSET ?lGetHurryModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHurryModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@EAPJMMAA@GetHurryModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 452  : 
; 453  : 	Method(CreateGreatGeneral);

	push	0
	push	OFFSET ?lCreateGreatGeneral@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCreateGreatGeneral
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@PBNOMGLK@CreateGreatGeneral?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 454  : 	Method(GetGreatPeopleCreated);

	push	0
	push	OFFSET ?lGetGreatPeopleCreated@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatPeopleCreated
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@GOOPLPC@GetGreatPeopleCreated?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 455  : 	Method(GetGreatGeneralsCreated);

	push	0
	push	OFFSET ?lGetGreatGeneralsCreated@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatGeneralsCreated
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@JEHAPHOE@GetGreatGeneralsCreated?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 456  : 	Method(GetGreatPeopleThresholdModifier);

	push	0
	push	OFFSET ?lGetGreatPeopleThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatPeopleThresholdModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@CKCODGOH@GetGreatPeopleThresholdModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 457  : 	Method(GetGreatGeneralsThresholdModifier);

	push	0
	push	OFFSET ?lGetGreatGeneralsThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatGeneralsThresholdModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@KEPHPFIK@GetGreatGeneralsThresholdModifie@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 458  : 	Method(GetGreatAdmiralsThresholdModifier);

	push	0
	push	OFFSET ?lGetGreatAdmiralsThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatAdmiralsThresholdModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@GGFJPDKI@GetGreatAdmiralsThresholdModifie@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 459  : 	Method(GetGreatPeopleRateModifier);

	push	0
	push	OFFSET ?lGetGreatPeopleRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatPeopleRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@NNNBCPJN@GetGreatPeopleRateModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 460  : 	Method(GetGreatGeneralRateModifier);

	push	0
	push	OFFSET ?lGetGreatGeneralRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatGeneralRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@BPCIOMLO@GetGreatGeneralRateModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 461  : 	Method(GetDomesticGreatGeneralRateModifier);

	push	0
	push	OFFSET ?lGetDomesticGreatGeneralRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDomesticGreatGeneralRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@NBFMLJOA@GetDomesticGreatGeneralRateModif@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 462  : 	Method(GetGreatWriterRateModifier);

	push	0
	push	OFFSET ?lGetGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatWriterRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@FOGKIIOG@GetGreatWriterRateModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 463  : 	Method(GetGreatArtistRateModifier);

	push	0
	push	OFFSET ?lGetGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatArtistRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@KECMPOFM@GetGreatArtistRateModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 464  : 	Method(GetGreatMusicianRateModifier);

	push	0
	push	OFFSET ?lGetGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatMusicianRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@BLJPANDO@GetGreatMusicianRateModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 465  : 	Method(GetGreatScientistRateModifier);

	push	0
	push	OFFSET ?lGetGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatScientistRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@PBJBKMHL@GetGreatScientistRateModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 466  : 	Method(GetGreatMerchantRateModifier);

	push	0
	push	OFFSET ?lGetGreatMerchantRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatMerchantRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@BIKKENPD@GetGreatMerchantRateModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 467  : 	Method(GetGreatEngineerRateModifier);

	push	0
	push	OFFSET ?lGetGreatEngineerRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatEngineerRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@GFFELKAF@GetGreatEngineerRateModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 468  : 
; 469  : 	Method(GetPolicyGreatPeopleRateModifier);

	push	0
	push	OFFSET ?lGetPolicyGreatPeopleRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatPeopleRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CB@LFJJFBJB@GetPolicyGreatPeopleRateModifier@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 470  : 	Method(GetPolicyGreatWriterRateModifier);

	push	0
	push	OFFSET ?lGetPolicyGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatWriterRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CB@DGCCPGOK@GetPolicyGreatWriterRateModifier@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 471  : 	Method(GetPolicyGreatArtistRateModifier);

	push	0
	push	OFFSET ?lGetPolicyGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatArtistRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CB@MMGEIAFA@GetPolicyGreatArtistRateModifier@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 472  : 	Method(GetPolicyGreatMusicianRateModifier);

	push	0
	push	OFFSET ?lGetPolicyGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatMusicianRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@JHHGEB@GetPolicyGreatMusicianRateModifi@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 473  : 	Method(GetPolicyGreatScientistRateModifier);

	push	0
	push	OFFSET ?lGetPolicyGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatScientistRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@DBDAMIKN@GetPolicyGreatScientistRateModif@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 474  : 	Method(GetPolicyGreatMerchantRateModifier);

	push	0
	push	OFFSET ?lGetPolicyGreatMerchantRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatMerchantRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@DKCDGIM@GetPolicyGreatMerchantRateModifi@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 475  : 	Method(GetPolicyGreatEngineerRateModifier);

	push	0
	push	OFFSET ?lGetPolicyGreatEngineerRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatEngineerRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@HOFMMBHK@GetPolicyGreatEngineerRateModifi@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 476  : 
; 477  : 	Method(GetProductionModifier);

	push	0
	push	OFFSET ?lGetProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@COALBBFM@GetProductionModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 478  : 	Method(GetUnitProductionModifier);

	push	0
	push	OFFSET ?lGetUnitProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@CAONOBAD@GetUnitProductionModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 479  : 	Method(GetBuildingProductionModifier);

	push	0
	push	OFFSET ?lGetBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@BOIFPPNB@GetBuildingProductionModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 480  : 	Method(GetProjectProductionModifier);

	push	0
	push	OFFSET ?lGetProjectProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetProjectProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@FIGLLOHP@GetProjectProductionModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 481  : 	Method(GetSpecialistProductionModifier);

	push	0
	push	OFFSET ?lGetSpecialistProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSpecialistProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@IIOBOOCG@GetSpecialistProductionModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 482  : 	Method(GetMaxGlobalBuildingProductionModifier);

	push	0
	push	OFFSET ?lGetMaxGlobalBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMaxGlobalBuildingProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CH@MPJDKCLN@GetMaxGlobalBuildingProductionMo@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 483  : 	Method(GetMaxTeamBuildingProductionModifier);

	push	0
	push	OFFSET ?lGetMaxTeamBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMaxTeamBuildingProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CF@IEGALNMD@GetMaxTeamBuildingProductionModi@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 484  : 	Method(GetMaxPlayerBuildingProductionModifier);

	push	0
	push	OFFSET ?lGetMaxPlayerBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMaxPlayerBuildingProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CH@IPPDDFAE@GetMaxPlayerBuildingProductionMo@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 485  : 	Method(GetFreeExperience);

	push	0
	push	OFFSET ?lGetFreeExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFreeExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@KJGDLEFF@GetFreeExperience?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 486  : 	Method(GetFeatureProductionModifier);

	push	0
	push	OFFSET ?lGetFeatureProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFeatureProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@CNPJHBNO@GetFeatureProductionModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 487  : 	Method(GetWorkerSpeedModifier);

	push	0
	push	OFFSET ?lGetWorkerSpeedModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWorkerSpeedModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@OLIFBLOM@GetWorkerSpeedModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 488  : 	Method(GetImprovementUpgradeRateModifier);

	push	0
	push	OFFSET ?lGetImprovementUpgradeRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetImprovementUpgradeRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@EGHOKLNO@GetImprovementUpgradeRateModifie@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 489  : 	Method(GetMilitaryProductionModifier);

	push	0
	push	OFFSET ?lGetMilitaryProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMilitaryProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@FAMIPBGF@GetMilitaryProductionModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 490  : 	Method(GetSpaceProductionModifier);

	push	0
	push	OFFSET ?lGetSpaceProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSpaceProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@EMAHKCFF@GetSpaceProductionModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 491  : 	Method(GetSettlerProductionModifier);

	push	0
	push	OFFSET ?lGetSettlerProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSettlerProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@PJHHAPCJ@GetSettlerProductionModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 492  : 	Method(GetCapitalSettlerProductionModifier);

	push	0
	push	OFFSET ?lGetCapitalSettlerProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCapitalSettlerProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@OBJBHEJM@GetCapitalSettlerProductionModif@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 493  : 	Method(GetWonderProductionModifier);

	push	0
	push	OFFSET ?lGetWonderProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWonderProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@HMIHDNFC@GetWonderProductionModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 494  : 
; 495  : 	Method(GetUnitProductionMaintenanceMod);

	push	0
	push	OFFSET ?lGetUnitProductionMaintenanceMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitProductionMaintenanceMod
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@MEMPLKAL@GetUnitProductionMaintenanceMod?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 496  : 	Method(GetNumUnitsSupplied);

	push	0
	push	OFFSET ?lGetNumUnitsSupplied@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitsSupplied
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@BILKHCNA@GetNumUnitsSupplied?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 497  : 	Method(GetNumUnitsSuppliedByHandicap);

	push	0
	push	OFFSET ?lGetNumUnitsSuppliedByHandicap@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitsSuppliedByHandicap
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@PMEHJMFO@GetNumUnitsSuppliedByHandicap?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 498  : 	Method(GetNumUnitsSuppliedByCities);

	push	0
	push	OFFSET ?lGetNumUnitsSuppliedByCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitsSuppliedByCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@IPDKBGHK@GetNumUnitsSuppliedByCities?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 499  : 	Method(GetNumUnitsSuppliedByPopulation);

	push	0
	push	OFFSET ?lGetNumUnitsSuppliedByPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitsSuppliedByPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@CBHKKKOG@GetNumUnitsSuppliedByPopulation?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 500  : 	Method(GetNumUnitsOutOfSupply);

	push	0
	push	OFFSET ?lGetNumUnitsOutOfSupply@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitsOutOfSupply
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@JFCPPOKA@GetNumUnitsOutOfSupply?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 501  : 
; 502  : 	Method(GetCityDefenseModifier);

	push	0
	push	OFFSET ?lGetCityDefenseModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityDefenseModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@CNBJGBKN@GetCityDefenseModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 503  : 	Method(GetNumNukeUnits);

	push	0
	push	OFFSET ?lGetNumNukeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumNukeUnits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@CHLGKBKN@GetNumNukeUnits?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 504  : 	Method(GetNumOutsideUnits);

	push	0
	push	OFFSET ?lGetNumOutsideUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumOutsideUnits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@FFLHNPMI@GetNumOutsideUnits?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 505  : 
; 506  : 	Method(GetGoldPerUnit);

	push	0
	push	OFFSET ?lGetGoldPerUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@KLHLMHGG@GetGoldPerUnit?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 507  : 	Method(ChangeGoldPerUnitTimes100);

	push	0
	push	OFFSET ?lChangeGoldPerUnitTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeGoldPerUnitTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@NAABFPGN@ChangeGoldPerUnitTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 508  : 	Method(GetGoldPerMilitaryUnit);

	push	0
	push	OFFSET ?lGetGoldPerMilitaryUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerMilitaryUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@IBDMECLP@GetGoldPerMilitaryUnit?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 509  : 	Method(GetExtraUnitCost);

	push	0
	push	OFFSET ?lGetExtraUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExtraUnitCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@MPNKPEH@GetExtraUnitCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 510  : 	Method(GetNumMilitaryUnits);

	push	0
	push	OFFSET ?lGetNumMilitaryUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumMilitaryUnits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@IFGDJNNN@GetNumMilitaryUnits?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 511  : 	Method(GetHappyPerMilitaryUnit);

	push	0
	push	OFFSET ?lGetHappyPerMilitaryUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappyPerMilitaryUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@EKFNFHH@GetHappyPerMilitaryUnit?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 512  : 	Method(IsMilitaryFoodProduction);

	push	0
	push	OFFSET ?lIsMilitaryFoodProduction@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMilitaryFoodProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@KOGLACFH@IsMilitaryFoodProduction?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 513  : 	Method(GetHighestUnitLevel);

	push	0
	push	OFFSET ?lGetHighestUnitLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHighestUnitLevel
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@HICDOHEK@GetHighestUnitLevel?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 514  : 
; 515  : 	Method(GetConscriptCount);

	push	0
	push	OFFSET ?lGetConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetConscriptCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@FBDNMEHI@GetConscriptCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 516  : 	Method(SetConscriptCount);

	push	0
	push	OFFSET ?lSetConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetConscriptCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@HEDGEPGG@SetConscriptCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 517  : 	Method(ChangeConscriptCount);

	push	0
	push	OFFSET ?lChangeConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeConscriptCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@MPFKKCHC@ChangeConscriptCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 518  : 
; 519  : 	Method(GetMaxConscript);

	push	0
	push	OFFSET ?lGetMaxConscript@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMaxConscript
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@PFEGDHIO@GetMaxConscript?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 520  : 	Method(GetOverflowResearch);

	push	0
	push	OFFSET ?lGetOverflowResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOverflowResearch
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@EJOLNPDK@GetOverflowResearch?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 521  : 	Method(GetExpInBorderModifier);

	push	0
	push	OFFSET ?lGetExpInBorderModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExpInBorderModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@KBKMOIME@GetExpInBorderModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 522  : 
; 523  : 	Method(GetLevelExperienceModifier);

	push	0
	push	OFFSET ?lGetLevelExperienceModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLevelExperienceModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@GOLIOFPO@GetLevelExperienceModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 524  : 
; 525  : 	Method(GetCultureBombTimer);

	push	0
	push	OFFSET ?lGetCultureBombTimer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCultureBombTimer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@HFKEEPGN@GetCultureBombTimer?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 526  : 	Method(GetConversionTimer);

	push	0
	push	OFFSET ?lGetConversionTimer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetConversionTimer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@MKDMLCCD@GetConversionTimer?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 527  : 
; 528  : 	Method(GetCapitalCity);

	push	0
	push	OFFSET ?lGetCapitalCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCapitalCity
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@FFFOGOIP@GetCapitalCity?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 529  : 	Method(IsHasLostCapital);

	push	0
	push	OFFSET ?lIsHasLostCapital@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsHasLostCapital
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@NIHHDNHH@IsHasLostCapital?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 530  : 	Method(GetCitiesLost);

	push	0
	push	OFFSET ?lGetCitiesLost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCitiesLost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@IJIJFFBJ@GetCitiesLost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 531  : 
; 532  : 	Method(GetPower);

	push	0
	push	OFFSET ?lGetPower@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPower
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08JBDILNIJ@GetPower?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 533  : 	Method(GetMilitaryMight);

	push	0
	push	OFFSET ?lGetMilitaryMight@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMilitaryMight
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@FCKFHAMF@GetMilitaryMight?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 534  : 	Method(GetTotalTimePlayed);

	push	0
	push	OFFSET ?lGetTotalTimePlayed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalTimePlayed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@EANFHEEM@GetTotalTimePlayed?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 535  : 
; 536  : 	Method(GetScore);

	push	0
	push	OFFSET ?lGetScore@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScore
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08FLBLGMDF@GetScore?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 537  : 	Method(GetScoreFromCities);

	push	0
	push	OFFSET ?lGetScoreFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@GKJBDKOE@GetScoreFromCities?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 538  : 	Method(GetScoreFromPopulation);

	push	0
	push	OFFSET ?lGetScoreFromPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@NACBPACA@GetScoreFromPopulation?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 539  : 	Method(GetScoreFromLand);

	push	0
	push	OFFSET ?lGetScoreFromLand@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromLand
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@HAMBNGEF@GetScoreFromLand?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 540  : 	Method(GetScoreFromWonders);

	push	0
	push	OFFSET ?lGetScoreFromWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromWonders
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@GDCBBIPO@GetScoreFromWonders?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 541  : 	Method(GetScoreFromTechs);

	push	0
	push	OFFSET ?lGetScoreFromTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromTechs
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@ODKBFJHD@GetScoreFromTechs?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 542  : 	Method(GetScoreFromFutureTech);

	push	0
	push	OFFSET ?lGetScoreFromFutureTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromFutureTech
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@IDCFNFFO@GetScoreFromFutureTech?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 543  : 	Method(ChangeScoreFromFutureTech);

	push	0
	push	OFFSET ?lChangeScoreFromFutureTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeScoreFromFutureTech
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@HFICBPBB@ChangeScoreFromFutureTech?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 544  : 	Method(GetScoreFromPolicies);

	push	0
	push	OFFSET ?lGetScoreFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromPolicies
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@BOHEBPE@GetScoreFromPolicies?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 545  : 	Method(GetScoreFromGreatWorks);

	push	0
	push	OFFSET ?lGetScoreFromGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromGreatWorks
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@HFEFJHAL@GetScoreFromGreatWorks?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 546  : 	Method(GetScoreFromReligion);

	push	0
	push	OFFSET ?lGetScoreFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@LJKKDKLA@GetScoreFromReligion?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 547  : 	Method(GetScoreFromScenario1);

	push	0
	push	OFFSET ?lGetScoreFromScenario1@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromScenario1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@KOHFFJHA@GetScoreFromScenario1?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 548  : 	Method(ChangeScoreFromScenario1);

	push	0
	push	OFFSET ?lChangeScoreFromScenario1@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeScoreFromScenario1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@LAJJENKF@ChangeScoreFromScenario1?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 549  : 	Method(GetScoreFromScenario2);

	push	0
	push	OFFSET ?lGetScoreFromScenario2@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromScenario2
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@IFFIAKLD@GetScoreFromScenario2?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 550  : 	Method(ChangeScoreFromScenario2);

	push	0
	push	OFFSET ?lChangeScoreFromScenario2@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeScoreFromScenario2
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@JLLEBOGG@ChangeScoreFromScenario2?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 551  : 	Method(GetScoreFromScenario3);

	push	0
	push	OFFSET ?lGetScoreFromScenario3@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromScenario3
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@JMEDDLPC@GetScoreFromScenario3?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 552  : 	Method(ChangeScoreFromScenario3);

	push	0
	push	OFFSET ?lChangeScoreFromScenario3@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeScoreFromScenario3
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@ICKPCPCH@ChangeScoreFromScenario3?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 553  : 	Method(GetScoreFromScenario4);

	push	0
	push	OFFSET ?lGetScoreFromScenario4@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromScenario4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@NDACKNDF@GetScoreFromScenario4?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 554  : 	Method(ChangeScoreFromScenario4);

	push	0
	push	OFFSET ?lChangeScoreFromScenario4@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeScoreFromScenario4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@MNOOLJOA@ChangeScoreFromScenario4?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 555  : 
; 556  : 	Method(IsGoldenAgeCultureBonusDisabled);

	push	0
	push	OFFSET ?lIsGoldenAgeCultureBonusDisabled@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsGoldenAgeCultureBonusDisabled
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@NBFDEDOJ@IsGoldenAgeCultureBonusDisabled?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 557  : 
; 558  : 	Method(IsMinorCiv);

	push	0
	push	OFFSET ?lIsMinorCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCiv
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@NCIBOILG@IsMinorCiv?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 559  : 	Method(GetMinorCivType);

	push	0
	push	OFFSET ?lGetMinorCivType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@CGAIAIE@GetMinorCivType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 560  : 	Method(GetMinorCivTrait);

	push	0
	push	OFFSET ?lGetMinorCivTrait@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivTrait
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@DHOLGDME@GetMinorCivTrait?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 561  : 	Method(GetPersonality);

	push	0
	push	OFFSET ?lGetPersonality@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPersonality
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@ILIMMMEM@GetPersonality?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 562  : 	Method(IsMinorCivHasUniqueUnit);

	push	0
	push	OFFSET ?lIsMinorCivHasUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivHasUniqueUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@MBHOGACH@IsMinorCivHasUniqueUnit?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 563  : 	Method(GetMinorCivUniqueUnit);

	push	0
	push	OFFSET ?lGetMinorCivUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivUniqueUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@DBDNKGCI@GetMinorCivUniqueUnit?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 564  : 	Method(SetMinorCivUniqueUnit);

	push	0
	push	OFFSET ?lSetMinorCivUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetMinorCivUniqueUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@MEGLHPGJ@SetMinorCivUniqueUnit?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 565  : 	Method(GetAlly);

	push	0
	push	OFFSET ?lGetAlly@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAlly
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07FLOLAOEO@GetAlly?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 566  : 	Method(GetAlliedTurns);

	push	0
	push	OFFSET ?lGetAlliedTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAlliedTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@HEEBEDH@GetAlliedTurns?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 567  : 	Method(IsFriends);

	push	0
	push	OFFSET ?lIsFriends@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsFriends
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09MNONCBMN@IsFriends?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 568  : 	Method(IsAllies);

	push	0
	push	OFFSET ?lIsAllies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAllies
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08IELAHIKJ@IsAllies?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 569  : 	Method(IsPlayerHasOpenBorders);

	push	0
	push	OFFSET ?lIsPlayerHasOpenBorders@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerHasOpenBorders
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@LPBLCHNA@IsPlayerHasOpenBorders?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 570  : 	Method(IsPlayerHasOpenBordersAutomatically);

	push	0
	push	OFFSET ?lIsPlayerHasOpenBordersAutomatically@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerHasOpenBordersAutomatically
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@BFKJKFHN@IsPlayerHasOpenBordersAutomatica@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 571  : 	Method(GetFriendshipChangePerTurnTimes100);

	push	0
	push	OFFSET ?lGetFriendshipChangePerTurnTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFriendshipChangePerTurnTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@IKFMLNBF@GetFriendshipChangePerTurnTimes1@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 572  : 	Method(GetMinorCivFriendshipWithMajor);

	push	0
	push	OFFSET ?lGetMinorCivFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivFriendshipWithMajor
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@INHPAMIH@GetMinorCivFriendshipWithMajor?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 573  : #ifdef NQ_SHOW_BASE_INFLUENCE_WHILE_AT_WAR_IN_CS_TOOLTIP
; 574  : 	Method(GetMinorCivBaseFriendshipWithMajor);

	push	0
	push	OFFSET ?lGetMinorCivBaseFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivBaseFriendshipWithMajor
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@IFPAMFCO@GetMinorCivBaseFriendshipWithMaj@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 575  : #endif
; 576  : 	Method(ChangeMinorCivFriendshipWithMajor);

	push	0
	push	OFFSET ?lChangeMinorCivFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeMinorCivFriendshipWithMajor
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@NGMCJIKI@ChangeMinorCivFriendshipWithMajo@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 577  : 	Method(GetMinorCivFriendshipAnchorWithMajor);

	push	0
	push	OFFSET ?lGetMinorCivFriendshipAnchorWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivFriendshipAnchorWithMajor
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CF@HPIOGEFP@GetMinorCivFriendshipAnchorWithM@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 578  : 	Method(GetMinorCivFriendshipLevelWithMajor);

	push	0
	push	OFFSET ?lGetMinorCivFriendshipLevelWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivFriendshipLevelWithMajor
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@DCIALBHJ@GetMinorCivFriendshipLevelWithMa@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 579  : 	Method(GetActiveQuestForPlayer);

	push	0
	push	OFFSET ?lGetActiveQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetActiveQuestForPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@JBNIDLPL@GetActiveQuestForPlayer?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 580  : 	Method(IsMinorCivActiveQuestForPlayer);

	push	0
	push	OFFSET ?lIsMinorCivActiveQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivActiveQuestForPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@HJOPHLLE@IsMinorCivActiveQuestForPlayer?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 581  : 	Method(GetMinorCivNumActiveQuestsForPlayer);

	push	0
	push	OFFSET ?lGetMinorCivNumActiveQuestsForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivNumActiveQuestsForPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@KOGHDCCE@GetMinorCivNumActiveQuestsForPla@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 582  : 	Method(IsMinorCivDisplayedQuestForPlayer);

	push	0
	push	OFFSET ?lIsMinorCivDisplayedQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivDisplayedQuestForPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@KOLLDJBJ@IsMinorCivDisplayedQuestForPlaye@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 583  : 	Method(GetMinorCivNumDisplayedQuestsForPlayer);

	push	0
	push	OFFSET ?lGetMinorCivNumDisplayedQuestsForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivNumDisplayedQuestsForPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CH@IINPAFPL@GetMinorCivNumDisplayedQuestsFor@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 584  : 	Method(GetQuestData1);

	push	0
	push	OFFSET ?lGetQuestData1@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetQuestData1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@OAHCGFLO@GetQuestData1?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 585  : 	Method(GetQuestData2);

	push	0
	push	OFFSET ?lGetQuestData2@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetQuestData2
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@MLFPDGHN@GetQuestData2?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 586  : 	Method(GetQuestTurnsRemaining);

	push	0
	push	OFFSET ?lGetQuestTurnsRemaining@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetQuestTurnsRemaining
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@PICPPHDC@GetQuestTurnsRemaining?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 587  : 	Method(IsMinorCivContestLeader);

	push	0
	push	OFFSET ?lIsMinorCivContestLeader@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivContestLeader
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@HBEMJGEC@IsMinorCivContestLeader?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 588  : 	Method(GetMinorCivContestValueForLeader);

	push	0
	push	OFFSET ?lGetMinorCivContestValueForLeader@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivContestValueForLeader
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CB@JHAAIIFB@GetMinorCivContestValueForLeader@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 589  : 	Method(GetMinorCivContestValueForPlayer);

	push	0
	push	OFFSET ?lGetMinorCivContestValueForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivContestValueForPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CB@LCACKAGB@GetMinorCivContestValueForPlayer@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 590  : 	Method(IsMinorCivUnitSpawningDisabled);

	push	0
	push	OFFSET ?lIsMinorCivUnitSpawningDisabled@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivUnitSpawningDisabled
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@LGBJCMOD@IsMinorCivUnitSpawningDisabled?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 591  : 	Method(IsMinorCivRouteEstablishedWithMajor);

	push	0
	push	OFFSET ?lIsMinorCivRouteEstablishedWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivRouteEstablishedWithMajor
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@BALAKNNH@IsMinorCivRouteEstablishedWithMa@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 592  : 	Method(IsMinorWarQuestWithMajorActive);

	push	0
	push	OFFSET ?lIsMinorWarQuestWithMajorActive@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorWarQuestWithMajorActive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@DLEJMNIA@IsMinorWarQuestWithMajorActive?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 593  : 	Method(GetMinorWarQuestWithMajorRemainingCount);

	push	0
	push	OFFSET ?lGetMinorWarQuestWithMajorRemainingCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorWarQuestWithMajorRemainingCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CI@JOPJIGPD@GetMinorWarQuestWithMajorRemaini@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 594  : 	Method(IsProxyWarActiveForMajor);

	push	0
	push	OFFSET ?lIsProxyWarActiveForMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProxyWarActiveForMajor
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@LHGLLPKP@IsProxyWarActiveForMajor?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 595  : 	Method(IsThreateningBarbariansEventActiveForPlayer);

	push	0
	push	OFFSET ?lIsThreateningBarbariansEventActiveForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsThreateningBarbariansEventActiveForPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CM@DCJJEBFI@IsThreateningBarbariansEventActi@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 596  : 	Method(GetTurnsSinceThreatenedByBarbarians);

	push	0
	push	OFFSET ?lGetTurnsSinceThreatenedByBarbarians@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnsSinceThreatenedByBarbarians
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@OFAPDPJO@GetTurnsSinceThreatenedByBarbari@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 597  : 	Method(GetTurnsSinceThreatenedAnnouncement);

	push	0
	push	OFFSET ?lGetTurnsSinceThreatenedAnnouncement@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnsSinceThreatenedAnnouncement
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@DNCLIGFM@GetTurnsSinceThreatenedAnnouncem@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 598  : 	Method(GetFriendshipFromGoldGift);

	push	0
	push	OFFSET ?lGetFriendshipFromGoldGift@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFriendshipFromGoldGift
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@GCPPOFGE@GetFriendshipFromGoldGift?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 599  : #ifdef NQ_BELIEF_TOGGLE_ALLOW_FAITH_GIFTS_TO_MINORS
; 600  : 	Method(GetFriendshipFromFaithGift);

	push	0
	push	OFFSET ?lGetFriendshipFromFaithGift@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFriendshipFromFaithGift
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@MGBKIFJO@GetFriendshipFromFaithGift?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 601  : 	Method(IsSameReligionAsMajor);

	push	0
	push	OFFSET ?lIsSameReligionAsMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsSameReligionAsMajor
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@MCNIAIDC@IsSameReligionAsMajor?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 602  : #endif
; 603  : 	Method(GetFriendshipNeededForNextLevel);

	push	0
	push	OFFSET ?lGetFriendshipNeededForNextLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFriendshipNeededForNextLevel
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@DKEFHJFC@GetFriendshipNeededForNextLevel?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 604  : 	Method(GetMinorCivFavoriteMajor);

	push	0
	push	OFFSET ?lGetMinorCivFavoriteMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivFavoriteMajor
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@CENDBAFG@GetMinorCivFavoriteMajor?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 605  : 	Method(GetMinorCivScienceFriendshipBonus);

	push	0
	push	OFFSET ?lGetMinorCivScienceFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivScienceFriendshipBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@IMMIMLHK@GetMinorCivScienceFriendshipBonu@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 606  : 	Method(GetMinorCivCultureFriendshipBonus); // DEPRECATED

	push	0
	push	OFFSET ?lGetMinorCivCultureFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCultureFriendshipBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@CGHKAAGO@GetMinorCivCultureFriendshipBonu@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 607  : 	Method(GetMinorCivCurrentCultureFlatBonus);

	push	0
	push	OFFSET ?lGetMinorCivCurrentCultureFlatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentCultureFlatBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@LKFJCJNM@GetMinorCivCurrentCultureFlatBon@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 608  : 	Method(GetMinorCivCurrentCulturePerBuildingBonus);

	push	0
	push	OFFSET ?lGetMinorCivCurrentCulturePerBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentCulturePerBuildingBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CK@DJDLKNM@GetMinorCivCurrentCulturePerBuil@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 609  : 	Method(GetCurrentCultureBonus); // DEPRECATED

	push	0
	push	OFFSET ?lGetCurrentCultureBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentCultureBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@DCNJCBAF@GetCurrentCultureBonus?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 610  : 	Method(GetMinorCivCurrentCultureBonus);

	push	0
	push	OFFSET ?lGetMinorCivCurrentCultureBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentCultureBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@CJKEIOCK@GetMinorCivCurrentCultureBonus?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 611  : 	Method(GetMinorCivHappinessFriendshipBonus); // DEPRECATED

	push	0
	push	OFFSET ?lGetMinorCivHappinessFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivHappinessFriendshipBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@CMFODDAA@GetMinorCivHappinessFriendshipBo@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 612  : 	Method(GetMinorCivCurrentHappinessFlatBonus);

	push	0
	push	OFFSET ?lGetMinorCivCurrentHappinessFlatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentHappinessFlatBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CF@EMDDPPKP@GetMinorCivCurrentHappinessFlatB@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 613  : 	Method(GetMinorCivCurrentHappinessPerLuxuryBonus);

	push	0
	push	OFFSET ?lGetMinorCivCurrentHappinessPerLuxuryBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentHappinessPerLuxuryBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CK@BFJFGONF@GetMinorCivCurrentHappinessPerLu@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 614  : 	Method(GetMinorCivCurrentHappinessBonus);

	push	0
	push	OFFSET ?lGetMinorCivCurrentHappinessBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentHappinessBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CB@DHDIKNON@GetMinorCivCurrentHappinessBonus@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 615  : 	Method(GetMinorCivCurrentFaithBonus);

	push	0
	push	OFFSET ?lGetMinorCivCurrentFaithBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentFaithBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@DJDMDNOO@GetMinorCivCurrentFaithBonus?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 616  : 	Method(GetCurrentCapitalFoodBonus);

	push	0
	push	OFFSET ?lGetCurrentCapitalFoodBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentCapitalFoodBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@PEJFCAAO@GetCurrentCapitalFoodBonus?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 617  : 	Method(GetCurrentOtherCityFoodBonus);

	push	0
	push	OFFSET ?lGetCurrentOtherCityFoodBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentOtherCityFoodBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@ILJMHMPP@GetCurrentOtherCityFoodBonus?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 618  : 	Method(GetCurrentSpawnEstimate);

	push	0
	push	OFFSET ?lGetCurrentSpawnEstimate@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentSpawnEstimate
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@LLLGGKJM@GetCurrentSpawnEstimate?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 619  : 	Method(GetCurrentScienceFriendshipBonusTimes100);

	push	0
	push	OFFSET ?lGetCurrentScienceFriendshipBonusTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentScienceFriendshipBonusTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CJ@ODBIOBOL@GetCurrentScienceFriendshipBonus@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 620  : 	Method(IsPeaceBlocked);

	push	0
	push	OFFSET ?lIsPeaceBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPeaceBlocked
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@KFJKJMOE@IsPeaceBlocked?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 621  : #ifdef NQ_PEACE_BLOCKED_IF_INFLUENCE_TOO_LOW
; 622  : 	Method(IsInfluenceTooLowForPeace);

	push	0
	push	OFFSET ?lIsInfluenceTooLowForPeace@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsInfluenceTooLowForPeace
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@NBPHMKCC@IsInfluenceTooLowForPeace?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 623  : #endif
; 624  : 	Method(IsMinorPermanentWar);

	push	0
	push	OFFSET ?lIsMinorPermanentWar@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorPermanentWar
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@OJEGEBAH@IsMinorPermanentWar?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 625  : 	Method(GetNumMinorCivsMet);

	push	0
	push	OFFSET ?lGetNumMinorCivsMet@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumMinorCivsMet
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@DDAJKJAC@GetNumMinorCivsMet?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 626  : 	Method(DoMinorLiberationByMajor);

	push	0
	push	OFFSET ?lDoMinorLiberationByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoMinorLiberationByMajor
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@OEBIPDFB@DoMinorLiberationByMajor?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 627  : 	Method(IsProtectedByMajor);

	push	0
	push	OFFSET ?lIsProtectedByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProtectedByMajor
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@FJJJKAON@IsProtectedByMajor?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 628  : 	Method(CanMajorProtect);

	push	0
	push	OFFSET ?lCanMajorProtect@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorProtect
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@HLPOBOFO@CanMajorProtect?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 629  : 	Method(CanMajorStartProtection);

	push	0
	push	OFFSET ?lCanMajorStartProtection@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorStartProtection
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@JDBHECFP@CanMajorStartProtection?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 630  : 	Method(CanMajorWithdrawProtection);

	push	0
	push	OFFSET ?lCanMajorWithdrawProtection@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorWithdrawProtection
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@PJCMBOGB@CanMajorWithdrawProtection?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 631  : 	Method(GetTurnLastPledgedProtectionByMajor);

	push	0
	push	OFFSET ?lGetTurnLastPledgedProtectionByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnLastPledgedProtectionByMajor
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@GOKJOBNC@GetTurnLastPledgedProtectionByMa@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 632  : 	Method(GetTurnLastPledgeBrokenByMajor);

	push	0
	push	OFFSET ?lGetTurnLastPledgeBrokenByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnLastPledgeBrokenByMajor
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@INDFDHEG@GetTurnLastPledgeBrokenByMajor?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 633  : 	Method(GetMinorCivBullyGoldAmount);

	push	0
	push	OFFSET ?lGetMinorCivBullyGoldAmount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivBullyGoldAmount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@JEOPCMFE@GetMinorCivBullyGoldAmount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 634  : 	Method(CanMajorBullyGold);

	push	0
	push	OFFSET ?lCanMajorBullyGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorBullyGold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@MEKCNIEM@CanMajorBullyGold?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 635  : 	Method(GetMajorBullyGoldDetails);

	push	0
	push	OFFSET ?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMajorBullyGoldDetails
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@LDKBOIEI@GetMajorBullyGoldDetails?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 636  : 	Method(CanMajorBullyUnit);

	push	0
	push	OFFSET ?lCanMajorBullyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorBullyUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@CKDHKLHB@CanMajorBullyUnit?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 637  : 	Method(GetMajorBullyUnitDetails);

	push	0
	push	OFFSET ?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMajorBullyUnitDetails
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@NIOFMNNO@GetMajorBullyUnitDetails?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 638  : 	Method(CanMajorBuyout);

	push	0
	push	OFFSET ?lCanMajorBuyout@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorBuyout
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@IEAEGNOK@CanMajorBuyout?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 639  : 	Method(GetBuyoutCost);

	push	0
	push	OFFSET ?lGetBuyoutCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuyoutCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@LKDODOMI@GetBuyoutCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 640  : 	Method(CanMajorGiftTileImprovement);

	push	0
	push	OFFSET ?lCanMajorGiftTileImprovement@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorGiftTileImprovement
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@MPFJMPJM@CanMajorGiftTileImprovement?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 641  : 	Method(CanMajorGiftTileImprovementAtPlot);

	push	0
	push	OFFSET ?lCanMajorGiftTileImprovementAtPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorGiftTileImprovementAtPlot
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@BOODLOOC@CanMajorGiftTileImprovementAtPlo@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 642  : 	Method(GetGiftTileImprovementCost);

	push	0
	push	OFFSET ?lGetGiftTileImprovementCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGiftTileImprovementCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@HBAOBIEN@GetGiftTileImprovementCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 643  : 	Method(AddMinorCivQuestIfAble);

	push	0
	push	OFFSET ?lAddMinorCivQuestIfAble@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAddMinorCivQuestIfAble
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@OGOPFFHJ@AddMinorCivQuestIfAble?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 644  : 	Method(GetFriendshipFromUnitGift);

	push	0
	push	OFFSET ?lGetFriendshipFromUnitGift@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFriendshipFromUnitGift
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@HNINKCDB@GetFriendshipFromUnitGift?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 645  : 
; 646  : 	Method(IsAlive);

	push	0
	push	OFFSET ?lIsAlive@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAlive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07OHJBEDOK@IsAlive?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 647  : 	Method(IsEverAlive);

	push	0
	push	OFFSET ?lIsEverAlive@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsEverAlive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@MAOIOJGJ@IsEverAlive?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 648  : 	Method(IsExtendedGame);

	push	0
	push	OFFSET ?lIsExtendedGame@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsExtendedGame
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@ECFNDELE@IsExtendedGame?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 649  : 	Method(IsFoundedFirstCity);

	push	0
	push	OFFSET ?lIsFoundedFirstCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsFoundedFirstCity
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@PKANFN@IsFoundedFirstCity?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 650  : 
; 651  : 	Method(GetEndTurnBlockingType);

	push	0
	push	OFFSET ?lGetEndTurnBlockingType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEndTurnBlockingType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@PEFMIAEP@GetEndTurnBlockingType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 652  : 	Method(GetEndTurnBlockingNotificationIndex);

	push	0
	push	OFFSET ?lGetEndTurnBlockingNotificationIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEndTurnBlockingNotificationIndex
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@HBJKGGIN@GetEndTurnBlockingNotificationIn@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 653  : 	Method(HasReceivedNetTurnComplete);

	push	0
	push	OFFSET ?lHasReceivedNetTurnComplete@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasReceivedNetTurnComplete
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@HDPFLDOD@HasReceivedNetTurnComplete?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 654  : 	Method(IsStrike);

	push	0
	push	OFFSET ?lIsStrike@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsStrike
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08FCKCMEIG@IsStrike?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 655  : 
; 656  : 	Method(GetID);

	push	0
	push	OFFSET ?lGetID@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetID
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_05CLBJHDA@GetID?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 657  : 	Method(GetHandicapType);

	push	0
	push	OFFSET ?lGetHandicapType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHandicapType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@NDPGKNBO@GetHandicapType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 658  : 	Method(GetCivilizationType);

	push	0
	push	OFFSET ?lGetCivilizationType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@OGLFKPOE@GetCivilizationType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 659  : 	Method(GetLeaderType);

	push	0
	push	OFFSET ?lGetLeaderType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLeaderType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@MCDOMJFC@GetLeaderType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 660  : 	Method(GetPersonalityType);

	push	0
	push	OFFSET ?lGetPersonalityType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPersonalityType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@DDPEHEOB@GetPersonalityType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 661  : 	Method(SetPersonalityType);

	push	0
	push	OFFSET ?lSetPersonalityType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetPersonalityType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@MJNOECAJ@SetPersonalityType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 662  : 	Method(GetCurrentEra);

	push	0
	push	OFFSET ?lGetCurrentEra@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentEra
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@DBDBEBPD@GetCurrentEra?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 663  : 
; 664  : 	Method(GetTeam);

	push	0
	push	OFFSET ?lGetTeam@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07KIJFBNDA@GetTeam?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 665  : 
; 666  : 	Method(GetPlayerColor);

	push	0
	push	OFFSET ?lGetPlayerColor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlayerColor
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@FBFFBDEL@GetPlayerColor?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 667  : 	Method(GetPlayerColors);

	push	0
	push	OFFSET ?lGetPlayerColors@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlayerColors
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@OFENOHDO@GetPlayerColors?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 668  : 
; 669  : 	Method(GetSeaPlotYield);

	push	0
	push	OFFSET ?lGetSeaPlotYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSeaPlotYield
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@DGPKBBEO@GetSeaPlotYield?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 670  : 	Method(GetYieldRateModifier);

	push	0
	push	OFFSET ?lGetYieldRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetYieldRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@MPEACCAJ@GetYieldRateModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 671  : 	Method(GetCapitalYieldRateModifier);

	push	0
	push	OFFSET ?lGetCapitalYieldRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCapitalYieldRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@HDDIOHJE@GetCapitalYieldRateModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 672  : 	Method(GetExtraYieldThreshold);

	push	0
	push	OFFSET ?lGetExtraYieldThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExtraYieldThreshold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@CEIHEJPD@GetExtraYieldThreshold?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 673  : 
; 674  : 	// Science
; 675  : 
; 676  : 	Method(GetScience);

	push	0
	push	OFFSET ?lGetScience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@GHLGHBML@GetScience?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 677  : 	Method(GetScienceTimes100);

	push	0
	push	OFFSET ?lGetScienceTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@NFNIBFFF@GetScienceTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 678  : 
; 679  : 	Method(GetScienceFromCitiesTimes100);

	push	0
	push	OFFSET ?lGetScienceFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromCitiesTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@OBKADDNJ@GetScienceFromCitiesTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 680  : 	Method(GetScienceFromOtherPlayersTimes100);

	push	0
	push	OFFSET ?lGetScienceFromOtherPlayersTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromOtherPlayersTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@FKFPBOPI@GetScienceFromOtherPlayersTimes1@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 681  : 	Method(GetScienceFromHappinessTimes100);

	push	0
	push	OFFSET ?lGetScienceFromHappinessTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromHappinessTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@LOIBLNOM@GetScienceFromHappinessTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 682  : #ifdef NQ_GOLD_TO_SCIENCE_FROM_POLICIES
; 683  : 	Method(GetScienceFromGoldTimes100);

	push	0
	push	OFFSET ?lGetScienceFromGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromGoldTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@PMENDKHK@GetScienceFromGoldTimes100?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 684  : #endif
; 685  : #ifdef NQ_MINOR_FRIENDSHIP_GAIN_BULLY_GOLD_SUCCESS_FROM_POLICIES
; 686  : 	Method(GetMinorFriendshipGainBullyGoldSuccess);

	push	0
	push	OFFSET ?lGetMinorFriendshipGainBullyGoldSuccess@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorFriendshipGainBullyGoldSuccess
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CH@GKJHBADA@GetMinorFriendshipGainBullyGoldS@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 687  : #endif
; 688  : 	Method(GetScienceFromResearchAgreementsTimes100);

	push	0
	push	OFFSET ?lGetScienceFromResearchAgreementsTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromResearchAgreementsTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CJ@KCEGADFP@GetScienceFromResearchAgreements@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 689  : 	Method(GetScienceFromBudgetDeficitTimes100);

	push	0
	push	OFFSET ?lGetScienceFromBudgetDeficitTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromBudgetDeficitTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@MDGAFNCA@GetScienceFromBudgetDeficitTimes@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 690  : 
; 691  : 	// END Science
; 692  : 
; 693  : 	Method(GetProximityToPlayer);

	push	0
	push	OFFSET ?lGetProximityToPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetProximityToPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@ONODMHAN@GetProximityToPlayer?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 694  : 	Method(DoUpdateProximityToPlayer);

	push	0
	push	OFFSET ?lDoUpdateProximityToPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoUpdateProximityToPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@INFADDEM@DoUpdateProximityToPlayer?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 695  : 
; 696  : 	Method(GetIncomingUnitType);

	push	0
	push	OFFSET ?lGetIncomingUnitType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetIncomingUnitType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@DGDCHHAP@GetIncomingUnitType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 697  : 	Method(GetIncomingUnitCountdown);

	push	0
	push	OFFSET ?lGetIncomingUnitCountdown@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetIncomingUnitCountdown
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@LPIABFHI@GetIncomingUnitCountdown?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 698  : 
; 699  : 	Method(IsOption);

	push	0
	push	OFFSET ?lIsOption@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsOption
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08CPAPEJN@IsOption?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 700  : 	Method(SetOption);

	push	0
	push	OFFSET ?lSetOption@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetOption
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09DLFAMNKA@SetOption?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 701  : 	Method(IsPlayable);

	push	0
	push	OFFSET ?lIsPlayable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayable
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@LMMDHEOL@IsPlayable?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 702  : 	Method(SetPlayable);

	push	0
	push	OFFSET ?lSetPlayable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetPlayable
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@IJCOINPN@SetPlayable?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 703  : 
; 704  : 	Method(GetNumResourceUsed);

	push	0
	push	OFFSET ?lGetNumResourceUsed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumResourceUsed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@NIJFEIJG@GetNumResourceUsed?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 705  : 	Method(GetNumResourceTotal);

	push	0
	push	OFFSET ?lGetNumResourceTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumResourceTotal
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@FANONMKF@GetNumResourceTotal?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 706  : 	Method(ChangeNumResourceTotal);

	push	0
	push	OFFSET ?lChangeNumResourceTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumResourceTotal
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@OOAGOCF@ChangeNumResourceTotal?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 707  : 	Method(GetNumResourceAvailable);

	push	0
	push	OFFSET ?lGetNumResourceAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumResourceAvailable
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@CAJMJPHL@GetNumResourceAvailable?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 708  : 
; 709  : 	Method(GetResourceExport);

	push	0
	push	OFFSET ?lGetResourceExport@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResourceExport
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@MLBNDDPA@GetResourceExport?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 710  : 	Method(GetResourceImport);

	push	0
	push	OFFSET ?lGetResourceImport@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResourceImport
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@FPKGMKKM@GetResourceImport?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 711  : 	Method(GetResourceFromMinors);

	push	0
	push	OFFSET ?lGetResourceFromMinors@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResourceFromMinors
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@BLEODKND@GetResourceFromMinors?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 712  : 
; 713  : 	Method(GetImprovementCount);

	push	0
	push	OFFSET ?lGetImprovementCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetImprovementCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@FJHPDLDL@GetImprovementCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 714  : 
; 715  : 	Method(IsBuildingFree);

	push	0
	push	OFFSET ?lIsBuildingFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsBuildingFree
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@MDJBKIGG@IsBuildingFree?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 716  : 	Method(GetUnitClassCount);

	push	0
	push	OFFSET ?lGetUnitClassCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitClassCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@OMEKCEJN@GetUnitClassCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 717  : 	Method(IsUnitClassMaxedOut);

	push	0
	push	OFFSET ?lIsUnitClassMaxedOut@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsUnitClassMaxedOut
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@KOKPIAGA@IsUnitClassMaxedOut?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 718  : 	Method(GetUnitClassMaking);

	push	0
	push	OFFSET ?lGetUnitClassMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitClassMaking
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@JNGNHFGM@GetUnitClassMaking?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 719  : 	Method(GetUnitClassCountPlusMaking);

	push	0
	push	OFFSET ?lGetUnitClassCountPlusMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitClassCountPlusMaking
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@JKNGMGFK@GetUnitClassCountPlusMaking?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 720  : 
; 721  : 	Method(GetBuildingClassCount);

	push	0
	push	OFFSET ?lGetBuildingClassCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingClassCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@LKAPFNIF@GetBuildingClassCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 722  : 	Method(IsBuildingClassMaxedOut);

	push	0
	push	OFFSET ?lIsBuildingClassMaxedOut@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsBuildingClassMaxedOut
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@BIOFBBJB@IsBuildingClassMaxedOut?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 723  : 	Method(GetBuildingClassMaking);

	push	0
	push	OFFSET ?lGetBuildingClassMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingClassMaking
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@IOFHKIED@GetBuildingClassMaking?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 724  : 	Method(GetBuildingClassCountPlusMaking);

	push	0
	push	OFFSET ?lGetBuildingClassCountPlusMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingClassCountPlusMaking
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@NDNHGCMM@GetBuildingClassCountPlusMaking?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 725  : 	Method(GetHurryCount);

	push	0
	push	OFFSET ?lGetHurryCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHurryCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@MMMOMENH@GetHurryCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 726  : 	Method(IsHasAccessToHurry);

	push	0
	push	OFFSET ?lIsHasAccessToHurry@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsHasAccessToHurry
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@HNIJFNOA@IsHasAccessToHurry?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 727  : 	Method(IsCanHurry);

	push	0
	push	OFFSET ?lIsCanHurry@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsCanHurry
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@LOFDAOJF@IsCanHurry?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 728  : 	Method(GetHurryGoldCost);

	push	0
	push	OFFSET ?lGetHurryGoldCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHurryGoldCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@DIBNJMML@GetHurryGoldCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 729  : 
; 730  : 	//Method(IsSpecialistValid);
; 731  : 	Method(IsResearchingTech);

	push	0
	push	OFFSET ?lIsResearchingTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsResearchingTech
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@LJAGDKMI@IsResearchingTech?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 732  : 	Method(SetResearchingTech);

	push	0
	push	OFFSET ?lSetResearchingTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetResearchingTech
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@JICENABA@SetResearchingTech?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 733  : 
; 734  : 	Method(GetCombatExperience);

	push	0
	push	OFFSET ?lGetCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCombatExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@ILJIDHAE@GetCombatExperience?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 735  : 	Method(ChangeCombatExperience);

	push	0
	push	OFFSET ?lChangeCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeCombatExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@NFKGIFIE@ChangeCombatExperience?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 736  : 	Method(SetCombatExperience);

	push	0
	push	OFFSET ?lSetCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetCombatExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@CFLDHHHI@SetCombatExperience?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 737  : 	Method(GetLifetimeCombatExperience);

	push	0
	push	OFFSET ?lGetLifetimeCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLifetimeCombatExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@ECGBFEGH@GetLifetimeCombatExperience?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 738  : 	Method(GetNavalCombatExperience);

	push	0
	push	OFFSET ?lGetNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNavalCombatExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@JMBPIDPJ@GetNavalCombatExperience?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 739  : 	Method(ChangeNavalCombatExperience);

	push	0
	push	OFFSET ?lChangeNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNavalCombatExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@JAEPANDK@ChangeNavalCombatExperience?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 740  : 	Method(SetNavalCombatExperience);

	push	0
	push	OFFSET ?lSetNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNavalCombatExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@DPLFOOGM@SetNavalCombatExperience?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 741  : 
; 742  : 	Method(GetSpecialistExtraYield);

	push	0
	push	OFFSET ?lGetSpecialistExtraYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSpecialistExtraYield
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@GMNKFHNO@GetSpecialistExtraYield?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 743  : 
; 744  : 	Method(FindPathLength);

	push	0
	push	OFFSET ?lFindPathLength@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lFindPathLength
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@HAIAJPIL@FindPathLength?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 745  : 
; 746  : 	Method(GetQueuePosition);

	push	0
	push	OFFSET ?lGetQueuePosition@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetQueuePosition
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@OKACGELF@GetQueuePosition?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 747  : 	Method(ClearResearchQueue);

	push	0
	push	OFFSET ?lClearResearchQueue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lClearResearchQueue
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@JPCIIJKD@ClearResearchQueue?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 748  : 	Method(PushResearch);

	push	0
	push	OFFSET ?lPushResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lPushResearch
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@CDNPDJNC@PushResearch?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 749  : 	Method(PopResearch);

	push	0
	push	OFFSET ?lPopResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lPopResearch
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@EOPDLFLG@PopResearch?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 750  : 	Method(GetLengthResearchQueue);

	push	0
	push	OFFSET ?lGetLengthResearchQueue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLengthResearchQueue
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@EEPCMHMD@GetLengthResearchQueue?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 751  : 	Method(AddCityName);

	push	0
	push	OFFSET ?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAddCityName
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@DHIABOAD@AddCityName?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 752  : 	Method(GetNumCityNames);

	push	0
	push	OFFSET ?lGetNumCityNames@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumCityNames
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@OEJOHFNM@GetNumCityNames?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 753  : 	Method(GetCityName);

	push	0
	push	OFFSET ?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityName
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@DOJNOFML@GetCityName?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 754  : 
; 755  : 	Method(Cities);

	push	0
	push	OFFSET ?lCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_06DIPJMMIP@Cities?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 756  : 	Method(GetNumCities);

	push	0
	push	OFFSET ?lGetNumCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@OFLMPMAK@GetNumCities?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 757  : 	Method(GetCityByID);

	push	0
	push	OFFSET ?lGetCityByID@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityByID
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@NNBLIMGF@GetCityByID?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 758  : 
; 759  : 	Method(Units);

	push	0
	push	OFFSET ?lUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lUnits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_05CFLIFMAE@Units?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 760  : 	Method(GetNumUnits);

	push	0
	push	OFFSET ?lGetNumUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@GNPEBAGL@GetNumUnits?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 761  : 	Method(GetUnitByID);

	push	0
	push	OFFSET ?lGetUnitByID@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitByID
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@LCJDFAFH@GetUnitByID?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 762  : 
; 763  : 	Method(AI_updateFoundValues);

	push	0
	push	OFFSET ?lAI_updateFoundValues@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAI_updateFoundValues
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@LPEPOKPK@AI_updateFoundValues?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 764  : 	Method(AI_foundValue);

	push	0
	push	OFFSET ?lAI_foundValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAI_foundValue
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@FLOBFJBH@AI_foundValue?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 765  : 
; 766  : 	Method(GetScoreHistory);

	push	0
	push	OFFSET ?lGetScoreHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreHistory
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@CBCOBLDO@GetScoreHistory?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 767  : 	Method(GetEconomyHistory);

	push	0
	push	OFFSET ?lGetEconomyHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEconomyHistory
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@LKDBDJLJ@GetEconomyHistory?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 768  : 	Method(GetIndustryHistory);

	push	0
	push	OFFSET ?lGetIndustryHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetIndustryHistory
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@EEECFJGL@GetIndustryHistory?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 769  : 	Method(GetAgricultureHistory);

	push	0
	push	OFFSET ?lGetAgricultureHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAgricultureHistory
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@BFBBELOF@GetAgricultureHistory?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 770  : 	Method(GetPowerHistory);

	push	0
	push	OFFSET ?lGetPowerHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPowerHistory
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@IAAIKKNG@GetPowerHistory?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 771  : 
; 772  : 	Method(GetReplayData);

	push	0
	push	OFFSET ?lGetReplayData@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetReplayData
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@FOEADKOC@GetReplayData?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 773  : 	Method(SetReplayDataValue);

	push	0
	push	OFFSET ?lSetReplayDataValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetReplayDataValue
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@CGMPIPHN@SetReplayDataValue?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 774  : 
; 775  : 	Method(GetScriptData);

	push	0
	push	OFFSET ?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScriptData
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@IJPBDHCD@GetScriptData?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 776  : 	Method(SetScriptData);

	push	0
	push	OFFSET ?lSetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetScriptData
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@PGOPIEFE@SetScriptData?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 777  : 
; 778  : 	Method(GetNumPlots);

	push	0
	push	OFFSET ?lGetNumPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPlots
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@GCJCINGE@GetNumPlots?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 779  : 
; 780  : 	Method(GetNumPlotsBought);

	push	0
	push	OFFSET ?lGetNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPlotsBought
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@DGGLFALO@GetNumPlotsBought?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 781  : 	Method(SetNumPlotsBought);

	push	0
	push	OFFSET ?lSetNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumPlotsBought
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@BDGANLKA@SetNumPlotsBought?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 782  : 	Method(ChangeNumPlotsBought);

	push	0
	push	OFFSET ?lChangeNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumPlotsBought
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@KIAMDGLE@ChangeNumPlotsBought?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 783  : 
; 784  : 	Method(GetBuyPlotCost);

	push	0
	push	OFFSET ?lGetBuyPlotCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuyPlotCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@CLDNCOML@GetBuyPlotCost?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 785  : 	Method(GetPlotDanger);

	push	0
	push	OFFSET ?lGetPlotDanger@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlotDanger
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@IGAPHJLG@GetPlotDanger?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 786  : 
; 787  : 	Method(DoBeginDiploWithHuman);

	push	0
	push	OFFSET ?lDoBeginDiploWithHuman@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoBeginDiploWithHuman
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@ONJJPLPE@DoBeginDiploWithHuman?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 788  : 	Method(DoTradeScreenOpened);

	push	0
	push	OFFSET ?lDoTradeScreenOpened@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoTradeScreenOpened
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@OGJDLMA@DoTradeScreenOpened?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 789  : 	Method(DoTradeScreenClosed);

	push	0
	push	OFFSET ?lDoTradeScreenClosed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoTradeScreenClosed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@FFBOAELH@DoTradeScreenClosed?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 790  : 	Method(GetMajorCivApproach);

	push	0
	push	OFFSET ?lGetMajorCivApproach@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMajorCivApproach
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@GJBEAAFB@GetMajorCivApproach?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 791  : 	Method(GetApproachTowardsUsGuess);

	push	0
	push	OFFSET ?lGetApproachTowardsUsGuess@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetApproachTowardsUsGuess
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@GFGFENAL@GetApproachTowardsUsGuess?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 792  : 	Method(IsWillAcceptPeaceWithPlayer);

	push	0
	push	OFFSET ?lIsWillAcceptPeaceWithPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsWillAcceptPeaceWithPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@LHDCKAOD@IsWillAcceptPeaceWithPlayer?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 793  : 	Method(IsProtectingMinor);

	push	0
	push	OFFSET ?lIsProtectingMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProtectingMinor
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@HEIJGBFF@IsProtectingMinor?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 794  : 	Method(IsDontSettleMessageTooSoon);

	push	0
	push	OFFSET ?lIsDontSettleMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsDontSettleMessageTooSoon
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@MHKHJIDJ@IsDontSettleMessageTooSoon?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 795  : 	Method(IsStopSpyingMessageTooSoon);

	push	0
	push	OFFSET ?lIsStopSpyingMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsStopSpyingMessageTooSoon
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@BBLJBNNC@IsStopSpyingMessageTooSoon?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 796  : 	Method(IsAskedToStopConverting);

	push	0
	push	OFFSET ?lIsAskedToStopConverting@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAskedToStopConverting
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@LALLCFLJ@IsAskedToStopConverting?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 797  : 	Method(IsAskedToStopDigging);

	push	0
	push	OFFSET ?lIsAskedToStopDigging@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAskedToStopDigging
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@FNMHBNF@IsAskedToStopDigging?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 798  : 	Method(IsDoFMessageTooSoon);

	push	0
	push	OFFSET ?lIsDoFMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsDoFMessageTooSoon
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@LAJMIPAI@IsDoFMessageTooSoon?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 799  : 	Method(IsDoF);

	push	0
	push	OFFSET ?lIsDoF@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsDoF
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_05CJMGDEBD@IsDoF?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 800  : 	Method(GetDoFCounter);

	push	0
	push	OFFSET ?lGetDoFCounter@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDoFCounter
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@MFBMMOPK@GetDoFCounter?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 801  : 	Method(IsPlayerDoFwithAnyFriend);

	push	0
	push	OFFSET ?lIsPlayerDoFwithAnyFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerDoFwithAnyFriend
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@HMNAJMHG@IsPlayerDoFwithAnyFriend?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 802  : 	Method(IsPlayerDoFwithAnyEnemy);

	push	0
	push	OFFSET ?lIsPlayerDoFwithAnyEnemy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerDoFwithAnyEnemy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@CEGOAGDE@IsPlayerDoFwithAnyEnemy?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 803  : 	Method(IsPlayerDenouncedFriend);

	push	0
	push	OFFSET ?lIsPlayerDenouncedFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerDenouncedFriend
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@KIHAIMCC@IsPlayerDenouncedFriend?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 804  : 	Method(IsPlayerDenouncedEnemy);

	push	0
	push	OFFSET ?lIsPlayerDenouncedEnemy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerDenouncedEnemy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@DPEOLAFH@IsPlayerDenouncedEnemy?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 805  : 	Method(IsUntrustworthyFriend);

	push	0
	push	OFFSET ?lIsUntrustworthyFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsUntrustworthyFriend
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@HIMKCHLJ@IsUntrustworthyFriend?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 806  : 	Method(GetNumFriendsDenouncedBy);

	push	0
	push	OFFSET ?lGetNumFriendsDenouncedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFriendsDenouncedBy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@JPDNMDCJ@GetNumFriendsDenouncedBy?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 807  : 	Method(IsFriendDenouncedUs);

	push	0
	push	OFFSET ?lIsFriendDenouncedUs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsFriendDenouncedUs
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@JKLIMJPC@IsFriendDenouncedUs?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 808  : 	Method(GetWeDenouncedFriendCount);

	push	0
	push	OFFSET ?lGetWeDenouncedFriendCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWeDenouncedFriendCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@IDKHACJI@GetWeDenouncedFriendCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 809  : 	Method(IsFriendDeclaredWarOnUs);

	push	0
	push	OFFSET ?lIsFriendDeclaredWarOnUs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsFriendDeclaredWarOnUs
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@MGHNFKKL@IsFriendDeclaredWarOnUs?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 810  : 	Method(GetWeDeclaredWarOnFriendCount);

	push	0
	push	OFFSET ?lGetWeDeclaredWarOnFriendCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWeDeclaredWarOnFriendCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@EBKDJHNI@GetWeDeclaredWarOnFriendCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 811  : 	//Method(IsWorkingAgainstPlayerAccepted);
; 812  : 	Method(GetCoopWarAcceptedState);

	push	0
	push	OFFSET ?lGetCoopWarAcceptedState@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCoopWarAcceptedState
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@ONIAOIGJ@GetCoopWarAcceptedState?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 813  : 	Method(GetNumWarsFought);

	push	0
	push	OFFSET ?lGetNumWarsFought@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumWarsFought
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@MIPPFJMJ@GetNumWarsFought?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 814  : 
; 815  : 	Method(GetLandDisputeLevel);

	push	0
	push	OFFSET ?lGetLandDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLandDisputeLevel
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@CELFPMFO@GetLandDisputeLevel?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 816  : 	Method(GetVictoryDisputeLevel);

	push	0
	push	OFFSET ?lGetVictoryDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetVictoryDisputeLevel
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@JMIFEEOF@GetVictoryDisputeLevel?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 817  : 	Method(GetWonderDisputeLevel);

	push	0
	push	OFFSET ?lGetWonderDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWonderDisputeLevel
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@MFADFIMK@GetWonderDisputeLevel?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 818  : 	Method(GetMinorCivDisputeLevel);

	push	0
	push	OFFSET ?lGetMinorCivDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivDisputeLevel
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@GGMBMANL@GetMinorCivDisputeLevel?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 819  : 	Method(GetWarmongerThreat);

	push	0
	push	OFFSET ?lGetWarmongerThreat@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWarmongerThreat
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@JHLIJIIK@GetWarmongerThreat?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 820  : 	Method(IsPlayerNoSettleRequestEverAsked);

	push	0
	push	OFFSET ?lIsPlayerNoSettleRequestEverAsked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerNoSettleRequestEverAsked
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CB@GCCLPOAG@IsPlayerNoSettleRequestEverAsked@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 821  : 	Method(IsPlayerStopSpyingRequestEverAsked);

	push	0
	push	OFFSET ?lIsPlayerStopSpyingRequestEverAsked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerStopSpyingRequestEverAsked
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@CHPAFEIM@IsPlayerStopSpyingRequestEverAsk@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 822  : 	Method(IsDemandEverMade);

	push	0
	push	OFFSET ?lIsDemandEverMade@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsDemandEverMade
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@IBMCHFPO@IsDemandEverMade?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 823  : 	Method(GetNumCiviliansReturnedToMe);

	push	0
	push	OFFSET ?lGetNumCiviliansReturnedToMe@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumCiviliansReturnedToMe
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@GINOMEII@GetNumCiviliansReturnedToMe?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 824  : 	Method(GetNumLandmarksBuiltForMe);

	push	0
	push	OFFSET ?lGetNumLandmarksBuiltForMe@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumLandmarksBuiltForMe
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@BIEGDACJ@GetNumLandmarksBuiltForMe?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 825  : 	Method(GetNumTimesCultureBombed);

	push	0
	push	OFFSET ?lGetNumTimesCultureBombed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTimesCultureBombed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@MPACPFAF@GetNumTimesCultureBombed?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 826  : 	Method(GetNegativeReligiousConversionPoints);

	push	0
	push	OFFSET ?lGetNegativeReligiousConversionPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNegativeReligiousConversionPoints
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CF@NJLECOGK@GetNegativeReligiousConversionPo@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 827  : 	Method(GetNegativeArchaeologyPoints);

	push	0
	push	OFFSET ?lGetNegativeArchaeologyPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNegativeArchaeologyPoints
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@OAEOBIFG@GetNegativeArchaeologyPoints?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 828  : 	Method(HasOthersReligionInMostCities);

	push	0
	push	OFFSET ?lHasOthersReligionInMostCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasOthersReligionInMostCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@FJLIBNNG@HasOthersReligionInMostCities?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 829  : 	Method(IsPlayerBrokenMilitaryPromise);

	push	0
	push	OFFSET ?lIsPlayerBrokenMilitaryPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenMilitaryPromise
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@BHCJMHLO@IsPlayerBrokenMilitaryPromise?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 830  : 	Method(IsPlayerIgnoredMilitaryPromise);

	push	0
	push	OFFSET ?lIsPlayerIgnoredMilitaryPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredMilitaryPromise
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@EKOONDLN@IsPlayerIgnoredMilitaryPromise?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 831  : 	Method(IsPlayerBrokenExpansionPromise);

	push	0
	push	OFFSET ?lIsPlayerBrokenExpansionPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenExpansionPromise
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@KFCHANIK@IsPlayerBrokenExpansionPromise?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 832  : 	Method(IsPlayerIgnoredExpansionPromise);

	push	0
	push	OFFSET ?lIsPlayerIgnoredExpansionPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredExpansionPromise
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@DMHDJLCE@IsPlayerIgnoredExpansionPromise?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 833  : 	Method(IsPlayerBrokenBorderPromise);

	push	0
	push	OFFSET ?lIsPlayerBrokenBorderPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenBorderPromise
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@GACHILBI@IsPlayerBrokenBorderPromise?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 834  : 	Method(IsPlayerIgnoredBorderPromise);

	push	0
	push	OFFSET ?lIsPlayerIgnoredBorderPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredBorderPromise
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@GFDNDNLB@IsPlayerIgnoredBorderPromise?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 835  : 	Method(IsPlayerBrokenAttackCityStatePromise);

	push	0
	push	OFFSET ?lIsPlayerBrokenAttackCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenAttackCityStatePromise
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CF@GBAJHDGK@IsPlayerBrokenAttackCityStatePro@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 836  : 	Method(IsPlayerIgnoredAttackCityStatePromise);

	push	0
	push	OFFSET ?lIsPlayerIgnoredAttackCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredAttackCityStatePromise
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CG@KKPEMKMO@IsPlayerIgnoredAttackCityStatePr@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 837  : 	Method(IsPlayerBrokenBullyCityStatePromise);

	push	0
	push	OFFSET ?lIsPlayerBrokenBullyCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenBullyCityStatePromise
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@DJJGAPNJ@IsPlayerBrokenBullyCityStateProm@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 838  : 	Method(IsPlayerIgnoredBullyCityStatePromise);

	push	0
	push	OFFSET ?lIsPlayerIgnoredBullyCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredBullyCityStatePromise
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CF@KFJMCHGJ@IsPlayerIgnoredBullyCityStatePro@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 839  : 	Method(IsPlayerBrokenSpyPromise);

	push	0
	push	OFFSET ?lIsPlayerBrokenSpyPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenSpyPromise
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@JNJJEOK@IsPlayerBrokenSpyPromise?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 840  : 	Method(IsPlayerIgnoredSpyPromise);

	push	0
	push	OFFSET ?lIsPlayerIgnoredSpyPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredSpyPromise
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@JEDEIMK@IsPlayerIgnoredSpyPromise?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 841  : 	Method(IsPlayerForgivenForSpying);

	push	0
	push	OFFSET ?lIsPlayerForgivenForSpying@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerForgivenForSpying
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@OGDKEICG@IsPlayerForgivenForSpying?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 842  : 	Method(IsPlayerBrokenNoConvertPromise);

	push	0
	push	OFFSET ?lIsPlayerBrokenNoConvertPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenNoConvertPromise
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@GEDFGGDD@IsPlayerBrokenNoConvertPromise?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 843  : 	Method(IsPlayerIgnoredNoConvertPromise);

	push	0
	push	OFFSET ?lIsPlayerIgnoredNoConvertPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredNoConvertPromise
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@PNGBPAJN@IsPlayerIgnoredNoConvertPromise?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 844  : 	Method(IsPlayerBrokenNoDiggingPromise);

	push	0
	push	OFFSET ?lIsPlayerBrokenNoDiggingPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenNoDiggingPromise
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@LFBLAEPB@IsPlayerBrokenNoDiggingPromise?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 845  : 	Method(IsPlayerIgnoredNoDiggingPromise);

	push	0
	push	OFFSET ?lIsPlayerIgnoredNoDiggingPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredNoDiggingPromise
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@CMEPJCFP@IsPlayerIgnoredNoDiggingPromise?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 846  : 	Method(IsPlayerBrokenCoopWarPromise);

	push	0
	push	OFFSET ?lIsPlayerBrokenCoopWarPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenCoopWarPromise
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@HMMNHODE@IsPlayerBrokenCoopWarPromise?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 847  : 	Method(GetOtherPlayerNumProtectedMinorsKilled);

	push	0
	push	OFFSET ?lGetOtherPlayerNumProtectedMinorsKilled@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOtherPlayerNumProtectedMinorsKilled
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CH@NFMJJPAP@GetOtherPlayerNumProtectedMinors@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 848  : 	Method(GetOtherPlayerNumProtectedMinorsAttacked);

	push	0
	push	OFFSET ?lGetOtherPlayerNumProtectedMinorsAttacked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOtherPlayerNumProtectedMinorsAttacked
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CJ@OFLJGKFO@GetOtherPlayerNumProtectedMinors@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 849  : 	Method(GetTurnsSincePlayerBulliedProtectedMinor);

	push	0
	push	OFFSET ?lGetTurnsSincePlayerBulliedProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnsSincePlayerBulliedProtectedMinor
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CJ@DIAPIEBB@GetTurnsSincePlayerBulliedProtec@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 850  : 	Method(IsHasPlayerBulliedProtectedMinor);

	push	0
	push	OFFSET ?lIsHasPlayerBulliedProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsHasPlayerBulliedProtectedMinor
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CB@PGJLPOEE@IsHasPlayerBulliedProtectedMinor@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 851  : 	Method(IsDenouncedPlayer);

	push	0
	push	OFFSET ?lIsDenouncedPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsDenouncedPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@HDCKECNO@IsDenouncedPlayer?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 852  : 	Method(GetDenouncedPlayerCounter);

	push	0
	push	OFFSET ?lGetDenouncedPlayerCounter@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDenouncedPlayerCounter
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@FHGEGONP@GetDenouncedPlayerCounter?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 853  : 	Method(IsDenouncingPlayer);

	push	0
	push	OFFSET ?lIsDenouncingPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsDenouncingPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@PMGAKDPI@IsDenouncingPlayer?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 854  : 	Method(IsPlayerRecklessExpander);

	push	0
	push	OFFSET ?lIsPlayerRecklessExpander@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerRecklessExpander
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@DMOODLIP@IsPlayerRecklessExpander?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 855  : 	Method(GetRecentTradeValue);

	push	0
	push	OFFSET ?lGetRecentTradeValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRecentTradeValue
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@FPCOMDEJ@GetRecentTradeValue?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 856  : 	Method(GetCommonFoeValue);

	push	0
	push	OFFSET ?lGetCommonFoeValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCommonFoeValue
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@IFLMMGKH@GetCommonFoeValue?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 857  : 	Method(GetRecentAssistValue);

	push	0
	push	OFFSET ?lGetRecentAssistValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRecentAssistValue
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@KCNKODGD@GetRecentAssistValue?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 858  : 	Method(IsGaveAssistanceTo);

	push	0
	push	OFFSET ?lIsGaveAssistanceTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsGaveAssistanceTo
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@IPDLFGDH@IsGaveAssistanceTo?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 859  : 	Method(IsHasPaidTributeTo);

	push	0
	push	OFFSET ?lIsHasPaidTributeTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsHasPaidTributeTo
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@GACGPEPG@IsHasPaidTributeTo?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 860  : 	Method(IsNukedBy);

	push	0
	push	OFFSET ?lIsNukedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsNukedBy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09DPPFJHEB@IsNukedBy?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 861  : 	Method(IsCapitalCapturedBy);

	push	0
	push	OFFSET ?lIsCapitalCapturedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsCapitalCapturedBy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@JNJDNMPI@IsCapitalCapturedBy?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 862  : 	Method(IsAngryAboutProtectedMinorKilled);

	push	0
	push	OFFSET ?lIsAngryAboutProtectedMinorKilled@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAngryAboutProtectedMinorKilled
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CB@CJDCIHKM@IsAngryAboutProtectedMinorKilled@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 863  : 	Method(IsAngryAboutProtectedMinorAttacked);

	push	0
	push	OFFSET ?lIsAngryAboutProtectedMinorAttacked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAngryAboutProtectedMinorAttacked
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@HDPPOBNJ@IsAngryAboutProtectedMinorAttack@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 864  : 	Method(IsAngryAboutProtectedMinorBullied);

	push	0
	push	OFFSET ?lIsAngryAboutProtectedMinorBullied@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAngryAboutProtectedMinorBullied
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@CKPNELPJ@IsAngryAboutProtectedMinorBullie@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 865  : 	Method(IsAngryAboutSidedWithTheirProtectedMinor);

	push	0
	push	OFFSET ?lIsAngryAboutSidedWithTheirProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAngryAboutSidedWithTheirProtectedMinor
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CJ@HNAICDID@IsAngryAboutSidedWithTheirProtec@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 866  : 	Method(GetNumTimesRobbedBy);

	push	0
	push	OFFSET ?lGetNumTimesRobbedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTimesRobbedBy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@ONPDCEII@GetNumTimesRobbedBy?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 867  : 	Method(GetNumTimesIntrigueSharedBy);

	push	0
	push	OFFSET ?lGetNumTimesIntrigueSharedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTimesIntrigueSharedBy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@GOJPPKLC@GetNumTimesIntrigueSharedBy?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 868  : 
; 869  : 	Method(DoForceDoF);

	push	0
	push	OFFSET ?lDoForceDoF@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoForceDoF
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@CDNNFMCG@DoForceDoF?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 870  : 	Method(DoForceDenounce);

	push	0
	push	OFFSET ?lDoForceDenounce@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoForceDenounce
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@NIECGIBE@DoForceDenounce?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 871  : 
; 872  : 	Method(GetNumNotifications);

	push	0
	push	OFFSET ?lGetNumNotifications@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumNotifications
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@GFFKJPPB@GetNumNotifications?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 873  : 	Method(GetNotificationStr);

	push	0
	push	OFFSET ?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNotificationStr
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@LHEAKJLF@GetNotificationStr?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 874  : 	Method(GetNotificationSummaryStr);

	push	0
	push	OFFSET ?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNotificationSummaryStr
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@ELPNEPCO@GetNotificationSummaryStr?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 875  : 	Method(GetNotificationIndex);

	push	0
	push	OFFSET ?lGetNotificationIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNotificationIndex
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@GCCNKKFJ@GetNotificationIndex?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 876  : 	Method(GetNotificationTurn);

	push	0
	push	OFFSET ?lGetNotificationTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNotificationTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@EKFOPKPG@GetNotificationTurn?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 877  : 	Method(GetNotificationDismissed);

	push	0
	push	OFFSET ?lGetNotificationDismissed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNotificationDismissed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@HFINLBBC@GetNotificationDismissed?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 878  : 	Method(AddNotification);

	push	0
	push	OFFSET ?lAddNotification@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAddNotification
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@NLGHGOFB@AddNotification?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 879  : 
; 880  : 	Method(GetRecommendedWorkerPlots);

	push	0
	push	OFFSET ?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRecommendedWorkerPlots
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@IEOBAACD@GetRecommendedWorkerPlots?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 881  : 	Method(GetRecommendedFoundCityPlots);

	push	0
	push	OFFSET ?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRecommendedFoundCityPlots
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@NABAJGIG@GetRecommendedFoundCityPlots?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 882  : 	Method(GetUnimprovedAvailableLuxuryResource);

	push	0
	push	OFFSET ?lGetUnimprovedAvailableLuxuryResource@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnimprovedAvailableLuxuryResource
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CF@NDFOBFBD@GetUnimprovedAvailableLuxuryReso@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 883  : 	Method(IsAnyPlotImproved);

	push	0
	push	OFFSET ?lIsAnyPlotImproved@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAnyPlotImproved
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@BHJMCOLH@IsAnyPlotImproved?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 884  : 	Method(GetPlayerVisiblePlot);

	push	0
	push	OFFSET ?lGetPlayerVisiblePlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlayerVisiblePlot
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@CDGMGBGG@GetPlayerVisiblePlot?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 885  : 
; 886  : 	Method(GetEverPoppedGoody);

	push	0
	push	OFFSET ?lGetEverPoppedGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEverPoppedGoody
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@FBANDIAJ@GetEverPoppedGoody?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 887  : 	Method(GetClosestGoodyPlot);

	push	0
	push	OFFSET ?lGetClosestGoodyPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetClosestGoodyPlot
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@EJDMDOAD@GetClosestGoodyPlot?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 888  : 	Method(IsAnyGoodyPlotAccessible);

	push	0
	push	OFFSET ?lIsAnyGoodyPlotAccessible@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAnyGoodyPlotAccessible
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@ELMHMJBB@IsAnyGoodyPlotAccessible?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 889  : 	Method(GetPlotHasOrder);

	push	0
	push	OFFSET ?lGetPlotHasOrder@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlotHasOrder
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@GECDJOIG@GetPlotHasOrder?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 890  : 	Method(GetAnyUnitHasOrderToGoody);

	push	0
	push	OFFSET ?lGetAnyUnitHasOrderToGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAnyUnitHasOrderToGoody
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@EHCBLBBJ@GetAnyUnitHasOrderToGoody?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 891  : 	Method(GetEverTrainedBuilder);

	push	0
	push	OFFSET ?lGetEverTrainedBuilder@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEverTrainedBuilder
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@OAGGOFCC@GetEverTrainedBuilder?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 892  : 
; 893  : 	Method(GetNumFreeTechs);

	push	0
	push	OFFSET ?lGetNumFreeTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFreeTechs
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@IDIHMGGG@GetNumFreeTechs?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 894  : 	Method(SetNumFreeTechs);

	push	0
	push	OFFSET ?lSetNumFreeTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumFreeTechs
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@LBJBLEHP@SetNumFreeTechs?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 895  : 	Method(GetNumFreePolicies);

	push	0
	push	OFFSET ?lGetNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFreePolicies
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@DPNODDCH@GetNumFreePolicies?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 896  : 	Method(SetNumFreePolicies);

	push	0
	push	OFFSET ?lSetNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumFreePolicies
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@MFPEAFMP@SetNumFreePolicies?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 897  : 	Method(ChangeNumFreePolicies);

	push	0
	push	OFFSET ?lChangeNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumFreePolicies
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@NPJFLNFP@ChangeNumFreePolicies?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 898  : 	Method(GetNumFreeTenets);

	push	0
	push	OFFSET ?lGetNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFreeTenets
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@KPPFGDHH@GetNumFreeTenets?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 899  : 	Method(SetNumFreeTenets);

	push	0
	push	OFFSET ?lSetNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumFreeTenets
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@MLKMNNMF@SetNumFreeTenets?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 900  : 	Method(ChangeNumFreeTenets);

	push	0
	push	OFFSET ?lChangeNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumFreeTenets
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@KMAGMKHA@ChangeNumFreeTenets?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 901  : 	Method(GetNumFreeGreatPeople);

	push	0
	push	OFFSET ?lGetNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFreeGreatPeople
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@COMAGBNO@GetNumFreeGreatPeople?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 902  : 	Method(SetNumFreeGreatPeople);

	push	0
	push	OFFSET ?lSetNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumFreeGreatPeople
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@NLJGLIJP@SetNumFreeGreatPeople?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 903  : 	Method(ChangeNumFreeGreatPeople);

	push	0
	push	OFFSET ?lChangeNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumFreeGreatPeople
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@DACMHFAL@ChangeNumFreeGreatPeople?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 904  : 	Method(GetNumMayaBoosts);

	push	0
	push	OFFSET ?lGetNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumMayaBoosts
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@GDHEMKCG@GetNumMayaBoosts?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 905  : 	Method(SetNumMayaBoosts);

	push	0
	push	OFFSET ?lSetNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumMayaBoosts
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@HCNHEJE@SetNumMayaBoosts?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 906  : 	Method(ChangeNumMayaBoosts);

	push	0
	push	OFFSET ?lChangeNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumMayaBoosts
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@GAIHGDCB@ChangeNumMayaBoosts?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 907  : 	Method(GetNumFaithGreatPeople);

	push	0
	push	OFFSET ?lGetNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFaithGreatPeople
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@KJMPOBNO@GetNumFaithGreatPeople?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 908  : 	Method(SetNumFaithGreatPeople);

	push	0
	push	OFFSET ?lSetNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumFaithGreatPeople
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@KIOBMGAB@SetNumFaithGreatPeople?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 909  : 	Method(ChangeNumFaithGreatPeople);

	push	0
	push	OFFSET ?lChangeNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumFaithGreatPeople
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@FPGICLJB@ChangeNumFaithGreatPeople?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 910  : 	Method(GetUnitBaktun);

	push	0
	push	OFFSET ?lGetUnitBaktun@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitBaktun
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@JDHKMAFF@GetUnitBaktun?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 911  : 	Method(IsFreeMayaGreatPersonChoice);

	push	0
	push	OFFSET ?lIsFreeMayaGreatPersonChoice@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsFreeMayaGreatPersonChoice
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@EMKOFIFL@IsFreeMayaGreatPersonChoice?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 912  : 
; 913  : 	Method(GetTraitGoldenAgeCombatModifier);

	push	0
	push	OFFSET ?lGetTraitGoldenAgeCombatModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitGoldenAgeCombatModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@DCDDHCMD@GetTraitGoldenAgeCombatModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 914  : 	Method(GetTraitCityStateCombatModifier);

	push	0
	push	OFFSET ?lGetTraitCityStateCombatModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitCityStateCombatModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@EMLNFCFE@GetTraitCityStateCombatModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 915  : 	Method(GetTraitGreatGeneralExtraBonus);

	push	0
	push	OFFSET ?lGetTraitGreatGeneralExtraBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitGreatGeneralExtraBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@MDEOMKGO@GetTraitGreatGeneralExtraBonus?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 916  : 	Method(GetTraitGreatScientistRateModifier);

	push	0
	push	OFFSET ?lGetTraitGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitGreatScientistRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@LMBAJOCL@GetTraitGreatScientistRateModifi@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 917  : 	Method(IsTraitBonusReligiousBelief);

	push	0
	push	OFFSET ?lIsTraitBonusReligiousBelief@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsTraitBonusReligiousBelief
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@IMDAONMJ@IsTraitBonusReligiousBelief?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 918  : 	Method(GetHappinessFromLuxury);

	push	0
	push	OFFSET ?lGetHappinessFromLuxury@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromLuxury
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@IDMIFDOJ@GetHappinessFromLuxury?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 919  : 	Method(IsAbleToAnnexCityStates);

	push	0
	push	OFFSET ?lIsAbleToAnnexCityStates@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAbleToAnnexCityStates
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@CNCMJHLM@IsAbleToAnnexCityStates?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 920  : #ifdef NQ_NUM_TURNS_BEFORE_MINOR_ALLIES_REFUSE_BRIBES_FROM_TRAIT
; 921  : 	Method(GetNumTurnsBeforeMinorAlliesRefuseBribes);

	push	0
	push	OFFSET ?lGetNumTurnsBeforeMinorAlliesRefuseBribes@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTurnsBeforeMinorAlliesRefuseBribes
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CJ@NEKJJLBB@GetNumTurnsBeforeMinorAlliesRefu@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 922  : #endif
; 923  : 	Method(IsUsingMayaCalendar);

	push	0
	push	OFFSET ?lIsUsingMayaCalendar@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsUsingMayaCalendar
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@NIFMMLEP@IsUsingMayaCalendar?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 924  : 	Method(GetMayaCalendarString);

	push	0
	push	OFFSET ?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMayaCalendarString
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@MJJNOJKC@GetMayaCalendarString?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 925  : 	Method(GetMayaCalendarLongString);

	push	0
	push	OFFSET ?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMayaCalendarLongString
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@DLAHPJGM@GetMayaCalendarLongString?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 926  : 
; 927  : 	Method(GetExtraBuildingHappinessFromPolicies);

	push	0
	push	OFFSET ?lGetExtraBuildingHappinessFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExtraBuildingHappinessFromPolicies
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CG@KMIEOMED@GetExtraBuildingHappinessFromPol@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 928  : 
; 929  : 	Method(GetNextCity);

	push	0
	push	OFFSET ?lGetNextCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNextCity
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@CLOHEHIF@GetNextCity?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 930  : 	Method(GetPrevCity);

	push	0
	push	OFFSET ?lGetPrevCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPrevCity
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@HCFKLKFB@GetPrevCity?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 931  : 
; 932  : 	Method(GetFreePromotionCount);

	push	0
	push	OFFSET ?lGetFreePromotionCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFreePromotionCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@IMOAGJCF@GetFreePromotionCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 933  : 	Method(IsFreePromotion);

	push	0
	push	OFFSET ?lIsFreePromotion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsFreePromotion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@IKABNDKF@IsFreePromotion?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 934  : 	Method(ChangeFreePromotionCount);

	push	0
	push	OFFSET ?lChangeFreePromotionCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeFreePromotionCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@JCAMHNPA@ChangeFreePromotionCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 935  : 
; 936  : 	Method(GetEmbarkedGraphicOverride);

	push	0
	push	OFFSET ?lGetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEmbarkedGraphicOverride
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@DBDHHDHB@GetEmbarkedGraphicOverride?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 937  : 	Method(SetEmbarkedGraphicOverride);

	push	0
	push	OFFSET ?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetEmbarkedGraphicOverride
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@OACLDGB@SetEmbarkedGraphicOverride?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 938  : 
; 939  : 	Method(AddTemporaryDominanceZone);

	push	0
	push	OFFSET ?lAddTemporaryDominanceZone@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAddTemporaryDominanceZone
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@HADFEIC@AddTemporaryDominanceZone?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 940  : 
; 941  : 	Method(GetNaturalWonderYieldModifier);

	push	0
	push	OFFSET ?lGetNaturalWonderYieldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNaturalWonderYieldModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@LFAMHIME@GetNaturalWonderYieldModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 942  : 
; 943  : 	Method(GetPolicyBuildingClassYieldModifier);

	push	0
	push	OFFSET ?lGetPolicyBuildingClassYieldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyBuildingClassYieldModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@CALOGBHI@GetPolicyBuildingClassYieldModif@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 944  : 	Method(GetPolicyBuildingClassYieldChange);

	push	0
	push	OFFSET ?lGetPolicyBuildingClassYieldChange@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyBuildingClassYieldChange
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@NHAOMIBG@GetPolicyBuildingClassYieldChang@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 945  : 	Method(GetPolicyEspionageModifier);

	push	0
	push	OFFSET ?lGetPolicyEspionageModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyEspionageModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@OPPCJPCB@GetPolicyEspionageModifier?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 946  : 	Method(GetPolicyEspionageCatchSpiesModifier);

	push	0
	push	OFFSET ?lGetPolicyEspionageCatchSpiesModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyEspionageCatchSpiesModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CF@JKDHJBPO@GetPolicyEspionageCatchSpiesModi@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 947  : 
; 948  : 	Method(GetPlayerBuildingClassYieldChange);

	push	0
	push	OFFSET ?lGetPlayerBuildingClassYieldChange@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlayerBuildingClassYieldChange
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@JGCNPAK@GetPlayerBuildingClassYieldChang@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 949  : 	Method(GetPlayerBuildingClassHappiness);

	push	0
	push	OFFSET ?lGetPlayerBuildingClassHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlayerBuildingClassHappiness
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@ILDNKAHC@GetPlayerBuildingClassHappiness?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 950  : 
; 951  : 	Method(WasResurrectedBy);

	push	0
	push	OFFSET ?lWasResurrectedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lWasResurrectedBy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@CDPPODHF@WasResurrectedBy?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 952  : 	Method(WasResurrectedThisTurnBy);

	push	0
	push	OFFSET ?lWasResurrectedThisTurnBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lWasResurrectedThisTurnBy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@LBBAGBOM@WasResurrectedThisTurnBy?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 953  : 
; 954  : 	Method(GetOpinionTable);

	push	0
	push	OFFSET ?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOpinionTable
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@MBBOBAGF@GetOpinionTable?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 955  : 	Method(GetDealValue);

	push	0
	push	OFFSET ?lGetDealValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDealValue
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@FKEIDJJH@GetDealValue?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 956  : 	Method(GetDealMyValue);

	push	0
	push	OFFSET ?lGetDealMyValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDealMyValue
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@BDNMFOBD@GetDealMyValue?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 957  : 	Method(GetDealTheyreValue);

	push	0
	push	OFFSET ?lGetDealTheyreValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDealTheyreValue
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@PELLMMPJ@GetDealTheyreValue?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 958  : 	Method(MayNotAnnex);

	push	0
	push	OFFSET ?lMayNotAnnex@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lMayNotAnnex
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@CGFJJMHO@MayNotAnnex?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 959  : #ifdef NQ_ALLOW_PUPPET_PURCHASING_FROM_POLICIES
; 960  : 	Method(IsAllowPuppetPurchasing);

	push	0
	push	OFFSET ?lIsAllowPuppetPurchasing@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAllowPuppetPurchasing
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@BIGNFBBK@IsAllowPuppetPurchasing?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 961  : #endif
; 962  : 
; 963  : 	Method(GetEspionageCityStatus);

	push	0
	push	OFFSET ?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEspionageCityStatus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@PBHFHBIL@GetEspionageCityStatus?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 964  : 	Method(GetNumSpies);

	push	0
	push	OFFSET ?lGetNumSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumSpies
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@HJJJBDNC@GetNumSpies?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 965  : 	Method(GetNumUnassignedSpies);

	push	0
	push	OFFSET ?lGetNumUnassignedSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnassignedSpies
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@EOLELIEH@GetNumUnassignedSpies?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 966  : 	Method(GetEspionageSpies);

	push	0
	push	OFFSET ?lGetEspionageSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEspionageSpies
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@BEHEHPAE@GetEspionageSpies?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 967  : 	Method(HasSpyEstablishedSurveillance);

	push	0
	push	OFFSET ?lHasSpyEstablishedSurveillance@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasSpyEstablishedSurveillance
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@KFGBCJOJ@HasSpyEstablishedSurveillance?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 968  : 	Method(IsSpyDiplomat);

	push	0
	push	OFFSET ?lIsSpyDiplomat@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsSpyDiplomat
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@HGOCMOKI@IsSpyDiplomat?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 969  : 	Method(IsSpySchmoozing);

	push	0
	push	OFFSET ?lIsSpySchmoozing@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsSpySchmoozing
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@MBCBJNFC@IsSpySchmoozing?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 970  : 	Method(CanSpyStageCoup);

	push	0
	push	OFFSET ?lCanSpyStageCoup@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanSpyStageCoup
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@EJACPBIJ@CanSpyStageCoup?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 971  : 	Method(GetAvailableSpyRelocationCities);

	push	0
	push	OFFSET ?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAvailableSpyRelocationCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@NNHIHMJL@GetAvailableSpyRelocationCities?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 972  : 	Method(GetNumTechsToSteal);

	push	0
	push	OFFSET ?lGetNumTechsToSteal@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTechsToSteal
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@CLNJPIEF@GetNumTechsToSteal?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 973  : 	Method(GetIntrigueMessages);

	push	0
	push	OFFSET ?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetIntrigueMessages
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@NDBIENEG@GetIntrigueMessages?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 974  : 	Method(HasRecentIntrigueAbout);

	push	0
	push	OFFSET ?lHasRecentIntrigueAbout@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasRecentIntrigueAbout
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@DEPJBAFK@HasRecentIntrigueAbout?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 975  : 	Method(GetRecentIntrigueInfo);

	push	0
	push	OFFSET ?lGetRecentIntrigueInfo@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRecentIntrigueInfo
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@CKNMJMAJ@GetRecentIntrigueInfo?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 976  : 	Method(GetCoupChanceOfSuccess);

	push	0
	push	OFFSET ?lGetCoupChanceOfSuccess@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCoupChanceOfSuccess
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@MDDGLPM@GetCoupChanceOfSuccess?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 977  : 	Method(IsMyDiplomatVisitingThem);

	push	0
	push	OFFSET ?lIsMyDiplomatVisitingThem@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMyDiplomatVisitingThem
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@GILOHAAJ@IsMyDiplomatVisitingThem?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 978  : 	Method(IsOtherDiplomatVisitingMe);

	push	0
	push	OFFSET ?lIsOtherDiplomatVisitingMe@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsOtherDiplomatVisitingMe
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@GHALEPGN@IsOtherDiplomatVisitingMe?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 979  : 
; 980  : 	Method(GetTradeRouteRange);

	push	0
	push	OFFSET ?lGetTradeRouteRange@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeRouteRange
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@MLPGEPHF@GetTradeRouteRange?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 981  : 	Method(GetInternationalTradeRoutePlotToolTip);

	push	0
	push	OFFSET ?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRoutePlotToolTip
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CG@HGLODKBP@GetInternationalTradeRoutePlotTo@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 982  : 	Method(GetInternationalTradeRoutePlotMouseoverToolTip);

	push	0
	push	OFFSET ?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRoutePlotMouseoverToolTip
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CP@LOLBOHGG@GetInternationalTradeRoutePlotMo@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 983  : 	Method(GetNumInternationalTradeRoutesUsed);

	push	0
	push	OFFSET ?lGetNumInternationalTradeRoutesUsed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumInternationalTradeRoutesUsed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@JKDKNEEH@GetNumInternationalTradeRoutesUs@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 984  : 	Method(GetNumInternationalTradeRoutesAvailable);

	push	0
	push	OFFSET ?lGetNumInternationalTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumInternationalTradeRoutesAvailable
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CI@HDPEKAFE@GetNumInternationalTradeRoutesAv@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 985  : 	Method(GetPotentialInternationalTradeRouteDestinations);

	push	0
	push	OFFSET ?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPotentialInternationalTradeRouteDestinations
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0DA@PAFOHMJF@GetPotentialInternationalTradeRo@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 986  : 	Method(GetInternationalTradeRouteBaseBonus);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteBaseBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@OFEOPDF@GetInternationalTradeRouteBaseBo@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 987  : 	Method(GetInternationalTradeRouteGPTBonus);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteGPTBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@JCOMGEHJ@GetInternationalTradeRouteGPTBon@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 988  : 	Method(GetInternationalTradeRouteResourceBonus);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteResourceBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CI@GKGOKFHF@GetInternationalTradeRouteResour@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 989  : 	Method(GetInternationalTradeRouteResourceTraitModifier);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteResourceTraitModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteResourceTraitModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0DA@DMPNEJHJ@GetInternationalTradeRouteResour@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 990  : 	Method(GetInternationalTradeRouteExclusiveBonus);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteExclusiveBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CJ@GOKACKGF@GetInternationalTradeRouteExclus@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 991  : 	Method(GetInternationalTradeRouteYourBuildingBonus);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteYourBuildingBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CM@ELNCKEMC@GetInternationalTradeRouteYourBu@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 992  : 	Method(GetInternationalTradeRouteTheirBuildingBonus);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteTheirBuildingBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CN@BEGIPDME@GetInternationalTradeRouteTheirB@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 993  : 	Method(GetInternationalTradeRoutePolicyBonus);

	push	0
	push	OFFSET ?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRoutePolicyBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CG@IPPHMMIB@GetInternationalTradeRoutePolicy@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 994  : 	Method(GetInternationalTradeRouteOtherTraitBonus);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteOtherTraitBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CK@BFEEANCK@GetInternationalTradeRouteOtherT@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 995  : 	Method(GetInternationalTradeRouteRiverModifier);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteRiverModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CI@JAMFAEJH@GetInternationalTradeRouteRiverM@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 996  : 	Method(GetInternationalTradeRouteDomainModifier);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteDomainModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteDomainModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CJ@CENOPJDM@GetInternationalTradeRouteDomain@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 997  : 	Method(GetInternationalTradeRouteTotal);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteTotal
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@JGHLFNBP@GetInternationalTradeRouteTotal?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 998  : 	Method(GetInternationalTradeRouteScience);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteScience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@KHDPEDFE@GetInternationalTradeRouteScienc@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 999  : 	Method(GetPotentialTradeUnitNewHomeCity);

	push	0
	push	OFFSET ?lGetPotentialTradeUnitNewHomeCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPotentialTradeUnitNewHomeCity
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CB@MAKPAJHJ@GetPotentialTradeUnitNewHomeCity@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1000 : 	Method(GetPotentialAdmiralNewPort);

	push	0
	push	OFFSET ?lGetPotentialAdmiralNewPort@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPotentialAdmiralNewPort
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@JENMMKCA@GetPotentialAdmiralNewPort?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1001 : 	Method(GetNumAvailableTradeUnits);

	push	0
	push	OFFSET ?lGetNumAvailableTradeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumAvailableTradeUnits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@EADFLLPD@GetNumAvailableTradeUnits?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1002 : 	Method(GetTradeUnitType);

	push	0
	push	OFFSET ?lGetTradeUnitType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeUnitType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@OACBPOPN@GetTradeUnitType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1003 : 	Method(GetTradeYourRoutesTTString);

	push	0
	push	OFFSET ?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeYourRoutesTTString
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@IIMJBBCO@GetTradeYourRoutesTTString?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1004 : 	Method(GetTradeToYouRoutesTTString);

	push	0
	push	OFFSET ?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeToYouRoutesTTString
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@JIFAFEOA@GetTradeToYouRoutesTTString?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1005 : 	Method(GetTradeRoutes);

	push	0
	push	OFFSET ?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeRoutes
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@OHPONKMK@GetTradeRoutes?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1006 : 	Method(GetTradeRoutesAvailable);

	push	0
	push	OFFSET ?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeRoutesAvailable
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@GGJGPFJM@GetTradeRoutesAvailable?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1007 : 	Method(GetTradeRoutesToYou);

	push	0
	push	OFFSET ?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeRoutesToYou
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@GPJCHJIN@GetTradeRoutesToYou?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1008 : 	Method(GetNumTechDifference);

	push	0
	push	OFFSET ?lGetNumTechDifference@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTechDifference
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@BBFCHHGL@GetNumTechDifference?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1009 : 
; 1010 : 	// Culture functions. Not sure where they should go
; 1011 : 	Method(GetGreatWorks);

	push	0
	push	OFFSET ?lGetGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatWorks
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@KKLCHPMA@GetGreatWorks?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1012 : 	Method(GetSwappableGreatWriting);

	push	0
	push	OFFSET ?lGetSwappableGreatWriting@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSwappableGreatWriting
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@GDFMGLID@GetSwappableGreatWriting?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1013 : 	Method(GetSwappableGreatArt);

	push	0
	push	OFFSET ?lGetSwappableGreatArt@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSwappableGreatArt
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@PADBEPFE@GetSwappableGreatArt?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1014 : 	Method(GetSwappableGreatArtifact);

	push	0
	push	OFFSET ?lGetSwappableGreatArtifact@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSwappableGreatArtifact
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@IECAMKOI@GetSwappableGreatArtifact?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1015 : 	Method(GetSwappableGreatMusic);

	push	0
	push	OFFSET ?lGetSwappableGreatMusic@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSwappableGreatMusic
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@GJFHNIHJ@GetSwappableGreatMusic?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1016 : 	Method(GetOthersGreatWorks);

	push	0
	push	OFFSET ?lGetOthersGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOthersGreatWorks
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@LLGEBKGE@GetOthersGreatWorks?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1017 : 
; 1018 : 	Method(CanCommitVote);

	push	0
	push	OFFSET ?lCanCommitVote@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanCommitVote
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@JJOHNPOE@CanCommitVote?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1019 : 	Method(GetCommitVoteDetails);

	push	0
	push	OFFSET ?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCommitVoteDetails
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@DPDBEIAE@GetCommitVoteDetails?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1020 : 
; 1021 : 	Method(IsConnected);

	push	0
	push	OFFSET ?lIsConnected@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsConnected
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@ILOEPEDD@IsConnected?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1022 : 	Method(IsObserver);

	push	0
	push	OFFSET ?lIsObserver@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsObserver
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@KMAMDGPN@IsObserver?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1023 : 
; 1024 : 	Method(HasTurnTimerExpired);

	push	0
	push	OFFSET ?lHasTurnTimerExpired@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasTurnTimerExpired
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@BDGHDECE@HasTurnTimerExpired?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1025 : 
; 1026 : 	Method(HasUnitOfClassType);

	push	0
	push	OFFSET ?lHasUnitOfClassType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasUnitOfClassType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@PFIGNMFO@HasUnitOfClassType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1027 : 
; 1028 : 	Method(GetWarmongerPreviewString);

	push	0
	push	OFFSET ?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWarmongerPreviewString
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@CEKNHANK@GetWarmongerPreviewString?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1029 : 	Method(GetLiberationPreviewString);

	push	0
	push	OFFSET ?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLiberationPreviewString
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@KAGDCCOH@GetLiberationPreviewString?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1030 : 
; 1031 : }

	pop	ebp
	ret	0
?PushMethods@CvLuaPlayer@@SAXPAUlua_State@@H@Z ENDP	; CvLuaPlayer::PushMethods
_TEXT	ENDS
PUBLIC	?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@KAXPAUlua_State@@@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::DefaultHandleMissingInstance
PUBLIC	?HandleMissingInstance@CvLuaPlayer@@SAXPAUlua_State@@@Z ; CvLuaPlayer::HandleMissingInstance
; Function compile flags: /Odtp
;	COMDAT ?HandleMissingInstance@CvLuaPlayer@@SAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?HandleMissingInstance@CvLuaPlayer@@SAXPAUlua_State@@@Z PROC ; CvLuaPlayer::HandleMissingInstance, COMDAT

; 1034 : {

	push	ebp
	mov	ebp, esp

; 1035 : 	DefaultHandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@KAXPAUlua_State@@@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::DefaultHandleMissingInstance
	add	esp, 4

; 1036 : }

	pop	ebp
	ret	0
?HandleMissingInstance@CvLuaPlayer@@SAXPAUlua_State@@@Z ENDP ; CvLuaPlayer::HandleMissingInstance
_TEXT	ENDS
PUBLIC	??_C@_06NPAAKFED@Player?$AA@			; `string'
PUBLIC	?GetTypeName@CvLuaPlayer@@SAPBDXZ		; CvLuaPlayer::GetTypeName
;	COMDAT ??_C@_06NPAAKFED@Player?$AA@
CONST	SEGMENT
??_C@_06NPAAKFED@Player?$AA@ DB 'Player', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?GetTypeName@CvLuaPlayer@@SAPBDXZ
_TEXT	SEGMENT
?GetTypeName@CvLuaPlayer@@SAPBDXZ PROC			; CvLuaPlayer::GetTypeName, COMDAT

; 1039 : {

	push	ebp
	mov	ebp, esp

; 1040 : 	return "Player";

	mov	eax, OFFSET ??_C@_06NPAAKFED@Player?$AA@

; 1041 : }

	pop	ebp
	ret	0
?GetTypeName@CvLuaPlayer@@SAPBDXZ ENDP			; CvLuaPlayer::GetTypeName
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAXPAUlua_State@@PAVCvPlayerAI@@@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::Push
PUBLIC	??_C@_07OLBIDKLK@Players?$AA@			; `string'
EXTRN	_lua_rawseti:PROC
EXTRN	?m_aPlayers@CvPlayerAI@@1PAV1@A:DWORD		; CvPlayerAI::m_aPlayers
EXTRN	_lua_pushvalue:PROC
EXTRN	_lua_createtable:PROC
EXTRN	_lua_settop:PROC
EXTRN	_lua_type:PROC
EXTRN	_lua_getfield:PROC
;	COMDAT ??_C@_07OLBIDKLK@Players?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvplayerai.h
CONST	SEGMENT
??_C@_07OLBIDKLK@Players?$AA@ DB 'Players', 00H		; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
CONST	ENDS
;	COMDAT ?pRegister@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$227283 = -8					; size = 4
_i$227279 = -4						; size = 4
_L$ = 8							; size = 4
?pRegister@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::pRegister, COMDAT

; 1049 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1050 : 	lua_getglobal(L, "Players");

	push	OFFSET ??_C@_07OLBIDKLK@Players?$AA@
	push	-10002					; ffffd8eeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 1051 : 	if(lua_isnil(L, -1))

	push	-1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@pRegister

; 1052 : 	{
; 1053 : 		lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 1054 : 		lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 1055 : 		lua_pushvalue(L, -1);

	push	-1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushvalue
	add	esp, 8

; 1056 : 		lua_setglobal(L, "Players");

	push	OFFSET ??_C@_07OLBIDKLK@Players?$AA@
	push	-10002					; ffffd8eeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH
$LN4@pRegister:

; 1057 : 	}
; 1058 : 
; 1059 : 	for(int i = 0; i < MAX_PLAYERS; ++i)

	mov	DWORD PTR _i$227279[ebp], 0
	jmp	SHORT $LN3@pRegister
$LN2@pRegister:
	mov	eax, DWORD PTR _i$227279[ebp]
	add	eax, 1
	mov	DWORD PTR _i$227279[ebp], eax
$LN3@pRegister:
	cmp	DWORD PTR _i$227279[ebp], 64		; 00000040H
	jge	SHORT $LN1@pRegister

; 1060 : 	{
; 1061 : 		CvPlayerAI* pkPlayer = &(GET_PLAYER((PlayerTypes)i));

	mov	ecx, DWORD PTR _i$227279[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pkPlayer$227283[ebp], ecx

; 1062 : 		CvLuaPlayer::Push(L, pkPlayer);

	mov	edx, DWORD PTR _pkPlayer$227283[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAXPAUlua_State@@PAVCvPlayerAI@@@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::Push
	add	esp, 8

; 1063 : 		lua_rawseti(L, -2, i);

	mov	ecx, DWORD PTR _i$227279[ebp]
	push	ecx
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH

; 1064 : 	}

	jmp	SHORT $LN2@pRegister
$LN1@pRegister:

; 1065 : 
; 1066 : 	return 0;

	xor	eax, eax

; 1067 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?pRegister@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::pRegister
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
EXTRN	?DoUpdateNextPolicyCost@CvPlayer@@QAEXXZ:PROC	; CvPlayer::DoUpdateNextPolicyCost
EXTRN	?initCity@CvPlayer@@QAEPAVCvCity@@HH_N0@Z:PROC	; CvPlayer::initCity
EXTRN	_luaL_optinteger:PROC
EXTRN	_lua_tointeger:PROC
; Function compile flags: /Odtp
;	COMDAT ?lInitCity@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -24					; size = 4
_bBumpUnits$ = -17					; size = 1
_pkCity$ = -16						; size = 4
_x$ = -12						; size = 4
_y$ = -8						; size = 4
_bInitialFounding$ = -1					; size = 1
_L$ = 8							; size = 4
?lInitCity@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lInitCity, COMDAT

; 1071 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 1072 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1073 : 	const int x = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _x$[ebp], eax

; 1074 : 	const int y = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _y$[ebp], eax

; 1075 : 	const bool bBumpUnits = luaL_optint(L, 4, 1);

	push	1
	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	cl
	mov	BYTE PTR _bBumpUnits$[ebp], cl

; 1076 : 	const bool bInitialFounding = luaL_optint(L, 5, 1);

	push	1
	push	5
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	al
	mov	BYTE PTR _bInitialFounding$[ebp], al

; 1077 : 
; 1078 : 	CvCity* pkCity = pkPlayer->initCity(x, y, bBumpUnits, bInitialFounding);

	movzx	ecx, BYTE PTR _bInitialFounding$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bBumpUnits$[ebp]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?initCity@CvPlayer@@QAEPAVCvCity@@HH_N0@Z ; CvPlayer::initCity
	mov	DWORD PTR _pkCity$[ebp], eax

; 1079 : 	pkPlayer->DoUpdateNextPolicyCost();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?DoUpdateNextPolicyCost@CvPlayer@@QAEXXZ ; CvPlayer::DoUpdateNextPolicyCost

; 1080 : 	CvLuaCity::Push(L, pkCity);

	mov	edx, DWORD PTR _pkCity$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8

; 1081 : 	return 1;

	mov	eax, 1

; 1082 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lInitCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lInitCity
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
EXTRN	?acquireCity@CvPlayer@@QAEXPAVCvCity@@_N1@Z:PROC ; CvPlayer::acquireCity
EXTRN	_lua_toboolean:PROC
; Function compile flags: /Odtp
;	COMDAT ?lAcquireCity@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bConquest$ = -6					; size = 1
_bTrade$ = -5						; size = 1
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lAcquireCity@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lAcquireCity, COMDAT

; 1086 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1087 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1088 : 	CvCity* pkCity = CvLuaCity::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1089 : 	const bool bConquest = lua_toboolean(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bConquest$[ebp], al

; 1090 : 	const bool bTrade = lua_toboolean(L, 4);

	push	4
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bTrade$[ebp], dl

; 1091 : 
; 1092 : 	pkPlayer->acquireCity(pkCity, bConquest, bTrade);

	movzx	eax, BYTE PTR _bTrade$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bConquest$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkCity$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?acquireCity@CvPlayer@@QAEXPAVCvCity@@_N1@Z ; CvPlayer::acquireCity

; 1093 : 	return 0;

	xor	eax, eax

; 1094 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lAcquireCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lAcquireCity
_TEXT	ENDS
PUBLIC	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod
EXTRN	?killCities@CvPlayer@@QAEXXZ:PROC		; CvPlayer::killCities
; Function compile flags: /Odtp
;	COMDAT ?lKillCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lKillCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lKillCities, COMDAT

; 1098 : {

	push	ebp
	mov	ebp, esp

; 1099 : 	return BasicLuaMethod(L, &CvPlayerAI::killCities);

	push	OFFSET ?killCities@CvPlayer@@QAEXXZ	; CvPlayer::killCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod
	add	esp, 8

; 1100 : }

	pop	ebp
	ret	0
?lKillCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lKillCities
_TEXT	ENDS
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
PUBLIC	__$ArrayPad$
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	_lua_pushstring:PROC
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
EXTRN	?getNewCityName@CvPlayer@@QBE?AVCvString@@XZ:PROC ; CvPlayer::getNewCityName
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T243082 = -52						; size = 4
_cityName$227395 = -48					; size = 28
__$ArrayPad$ = -20					; size = 4
_pkPlayer$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNewCityName, COMDAT

; 1105 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1106 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1107 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lGetNewCit

; 1108 : 	{
; 1109 : 		CvString cityName = pkPlayer->getNewCityName();

	lea	ecx, DWORD PTR _cityName$227395[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getNewCityName@CvPlayer@@QBE?AVCvString@@XZ ; CvPlayer::getNewCityName
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1110 : 		lua_pushstring(L, cityName.c_str());

	lea	ecx, DWORD PTR _cityName$227395[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 1111 : 		return 1;

	mov	DWORD PTR $T243082[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cityName$227395[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T243082[ebp]
	jmp	SHORT $LN2@lGetNewCit
$LN1@lGetNewCit:

; 1112 : 	}
; 1113 : 	return 0;

	xor	eax, eax
$LN2@lGetNewCit:

; 1114 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _cityName$227395[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNewCityName
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
EXTRN	?initUnit@CvPlayer@@QAEPAVCvUnit@@W4UnitTypes@@HHW4UnitAITypes@@W4DirectionTypes@@_N3HH@Z:PROC ; CvPlayer::initUnit
; Function compile flags: /Odtp
;	COMDAT ?lInitUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkUnit$ = -28						; size = 4
_pkPlayer$ = -24					; size = 4
_eUnit$ = -20						; size = 4
_eFacingDirection$ = -16				; size = 4
_x$ = -12						; size = 4
_y$ = -8						; size = 4
_eUnitAI$ = -4						; size = 4
_L$ = 8							; size = 4
?lInitUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lInitUnit, COMDAT

; 1118 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 1119 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1120 : 	const UnitTypes eUnit = (UnitTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eUnit$[ebp], eax

; 1121 : 	const int x = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _x$[ebp], eax

; 1122 : 	const int y = lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _y$[ebp], eax

; 1123 : 	const UnitAITypes eUnitAI = (UnitAITypes)luaL_optint(L, 5, NO_UNITAI);

	push	-1
	push	5
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _eUnitAI$[ebp], eax

; 1124 : 	const DirectionTypes eFacingDirection = (DirectionTypes)luaL_optint(L, 6, NO_DIRECTION);

	push	-1
	push	6
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _eFacingDirection$[ebp], eax

; 1125 : 
; 1126 : 	CvUnit* pkUnit = pkPlayer->initUnit(eUnit, x, y, eUnitAI, eFacingDirection);

	push	0
	push	0
	push	1
	push	0
	mov	eax, DWORD PTR _eFacingDirection$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eUnitAI$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eUnit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?initUnit@CvPlayer@@QAEPAVCvUnit@@W4UnitTypes@@HHW4UnitAITypes@@W4DirectionTypes@@_N3HH@Z ; CvPlayer::initUnit
	mov	DWORD PTR _pkUnit$[ebp], eax

; 1127 : 	CvLuaUnit::Push(L, pkUnit);

	mov	edx, DWORD PTR _pkUnit$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
	add	esp, 8

; 1128 : 	return 1;

	mov	eax, 1

; 1129 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lInitUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lInitUnit
_TEXT	ENDS
EXTRN	?initUnitWithNameOffset@CvPlayer@@QAEPAVCvUnit@@W4UnitTypes@@HHHW4UnitAITypes@@W4DirectionTypes@@_N3HH@Z:PROC ; CvPlayer::initUnitWithNameOffset
; Function compile flags: /Odtp
;	COMDAT ?lInitUnitWithNameOffset@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkUnit$ = -32						; size = 4
_pkPlayer$ = -28					; size = 4
_eUnit$ = -24						; size = 4
_eFacingDirection$ = -20				; size = 4
_iNameOffset$ = -16					; size = 4
_x$ = -12						; size = 4
_y$ = -8						; size = 4
_eUnitAI$ = -4						; size = 4
_L$ = 8							; size = 4
?lInitUnitWithNameOffset@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lInitUnitWithNameOffset, COMDAT

; 1134 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 1135 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1136 : 	const UnitTypes eUnit = (UnitTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eUnit$[ebp], eax

; 1137 : 	const int iNameOffset = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iNameOffset$[ebp], eax

; 1138 : 	const int x = lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _x$[ebp], eax

; 1139 : 	const int y = lua_tointeger(L, 5);

	push	5
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _y$[ebp], eax

; 1140 : 	const UnitAITypes eUnitAI = (UnitAITypes)luaL_optint(L, 6, NO_UNITAI);

	push	-1
	push	6
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _eUnitAI$[ebp], eax

; 1141 : 	const DirectionTypes eFacingDirection = (DirectionTypes)luaL_optint(L, 7, NO_DIRECTION);

	push	-1
	push	7
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _eFacingDirection$[ebp], eax

; 1142 : 
; 1143 : 	CvUnit* pkUnit = pkPlayer->initUnitWithNameOffset(eUnit, iNameOffset, x, y, eUnitAI, eFacingDirection);

	push	0
	push	0
	push	1
	push	0
	mov	ecx, DWORD PTR _eFacingDirection$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eUnitAI$[ebp]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iNameOffset$[ebp]
	push	edx
	mov	eax, DWORD PTR _eUnit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?initUnitWithNameOffset@CvPlayer@@QAEPAVCvUnit@@W4UnitTypes@@HHHW4UnitAITypes@@W4DirectionTypes@@_N3HH@Z ; CvPlayer::initUnitWithNameOffset
	mov	DWORD PTR _pkUnit$[ebp], eax

; 1144 : 	CvLuaUnit::Push(L, pkUnit);

	mov	ecx, DWORD PTR _pkUnit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
	add	esp, 8

; 1145 : 	return 1;

	mov	eax, 1

; 1146 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lInitUnitWithNameOffset@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lInitUnitWithNameOffset
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
EXTRN	?disbandUnit@CvPlayer@@QAEX_N@Z:PROC		; CvPlayer::disbandUnit
; Function compile flags: /Odtp
;	COMDAT ?lDisbandUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDisbandUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lDisbandUnit, COMDAT

; 1150 : {

	push	ebp
	mov	ebp, esp

; 1151 : 	return BasicLuaMethod(L, &CvPlayerAI::disbandUnit);

	push	OFFSET ?disbandUnit@CvPlayer@@QAEX_N@Z	; CvPlayer::disbandUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 1152 : }

	pop	ebp
	ret	0
?lDisbandUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lDisbandUnit
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
EXTRN	?addFreeUnit@CvPlayer@@QAEPAVCvPlot@@W4UnitTypes@@W4UnitAITypes@@@Z:PROC ; CvPlayer::addFreeUnit
; Function compile flags: /Odtp
;	COMDAT ?lAddFreeUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -16					; size = 4
_eUnit$ = -12						; size = 4
_eUnitAI$ = -8						; size = 4
_pkPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lAddFreeUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lAddFreeUnit, COMDAT

; 1156 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1157 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1158 : 	const UnitTypes eUnit = (UnitTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eUnit$[ebp], eax

; 1159 : 	const UnitAITypes eUnitAI = (UnitAITypes)luaL_optint(L, 3, NO_UNITAI);

	push	-1
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _eUnitAI$[ebp], eax

; 1160 : 
; 1161 : 	CvPlot* pkPlot = pkPlayer->addFreeUnit(eUnit, eUnitAI);

	mov	eax, DWORD PTR _eUnitAI$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eUnit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?addFreeUnit@CvPlayer@@QAEPAVCvPlot@@W4UnitTypes@@W4UnitAITypes@@@Z ; CvPlayer::addFreeUnit
	mov	DWORD PTR _pkPlot$[ebp], eax

; 1162 : 	CvLuaPlot::Push(L, pkPlot);

	mov	edx, DWORD PTR _pkPlot$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8

; 1163 : 	return 1;

	mov	eax, 1

; 1164 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lAddFreeUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lAddFreeUnit
_TEXT	ENDS
EXTRN	?killUnits@CvPlayer@@QAEXXZ:PROC		; CvPlayer::killUnits
; Function compile flags: /Odtp
;	COMDAT ?lKillUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lKillUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lKillUnits, COMDAT

; 1168 : {

	push	ebp
	mov	ebp, esp

; 1169 : 	return BasicLuaMethod(L, &CvPlayerAI::killUnits);

	push	OFFSET ?killUnits@CvPlayer@@QAEXXZ	; CvPlayer::killUnits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod
	add	esp, 8

; 1170 : }

	pop	ebp
	ret	0
?lKillUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lKillUnits
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	__$ArrayPad$
EXTRN	?chooseTech@CvPlayer@@QAEXHPBDW4TechTypes@@@Z:PROC ; CvPlayer::chooseTech
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
EXTRN	_lua_tolstring:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv133 = -68						; size = 4
$T243122 = -64						; size = 4
$T243112 = -60						; size = 4
_pkPlayer$ = -56					; size = 4
_iTechJustDiscovered$ = -52				; size = 4
_strText$ = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
_iDiscover$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lChooseTech, COMDAT

; 1174 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1175 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1176 : 	int iDiscover = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iDiscover$[ebp], eax

; 1177 : 	CvString strText = lua_tostring(L, 3);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tolstring
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T243122[ebp], eax
	cmp	DWORD PTR $T243122[ebp], 0
	je	SHORT $LN6@lChooseTec
	mov	eax, DWORD PTR $T243122[ebp]
	mov	DWORD PTR tv133[ebp], eax
	jmp	SHORT $LN7@lChooseTec
$LN6@lChooseTec:
	mov	DWORD PTR tv133[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN7@lChooseTec:
	mov	ecx, DWORD PTR tv133[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strText$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1178 : 	TechTypes iTechJustDiscovered = (TechTypes)lua_tointeger(L, 4);

	push	4
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iTechJustDiscovered$[ebp], eax

; 1179 : 
; 1180 : 	pkPlayer->chooseTech(iDiscover, strText, iTechJustDiscovered);

	mov	eax, DWORD PTR _iTechJustDiscovered$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strText$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _iDiscover$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?chooseTech@CvPlayer@@QAEXHPBDW4TechTypes@@@Z ; CvPlayer::chooseTech

; 1181 : 	return 1;

	mov	DWORD PTR $T243112[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strText$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T243112[ebp]

; 1182 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _strText$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lChooseTech
PUBLIC	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
EXTRN	?isHuman@CvPlayer@@QBE_NXZ:PROC			; CvPlayer::isHuman
; Function compile flags: /Odtp
;	COMDAT ?lIsHuman@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHuman@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lIsHuman, COMDAT

; 1186 : {

	push	ebp
	mov	ebp, esp

; 1187 : 	return BasicLuaMethod(L, &CvPlayerAI::isHuman);

	push	OFFSET ?isHuman@CvPlayer@@QBE_NXZ	; CvPlayer::isHuman
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 1188 : }

	pop	ebp
	ret	0
?lIsHuman@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lIsHuman
_TEXT	ENDS
EXTRN	?isBarbarian@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isBarbarian
; Function compile flags: /Odtp
;	COMDAT ?lIsBarbarian@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBarbarian@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsBarbarian, COMDAT

; 1192 : {

	push	ebp
	mov	ebp, esp

; 1193 : 	return BasicLuaMethod(L, &CvPlayerAI::isBarbarian);

	push	OFFSET ?isBarbarian@CvPlayer@@QBE_NXZ	; CvPlayer::isBarbarian
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 1194 : }

	pop	ebp
	ret	0
?lIsBarbarian@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsBarbarian
_TEXT	ENDS
EXTRN	?getName@CvPlayer@@QBEPBDXZ:PROC		; CvPlayer::getName
; Function compile flags: /Odtp
;	COMDAT ?lGetName@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_szName$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetName@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lGetName, COMDAT

; 1198 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1199 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1200 : 	const char* szName = pkPlayer->getName();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getName@CvPlayer@@QBEPBDXZ		; CvPlayer::getName
	mov	DWORD PTR _szName$[ebp], eax

; 1201 : 
; 1202 : 	lua_pushstring(L, szName);

	mov	ecx, DWORD PTR _szName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 1203 : 
; 1204 : 	return 1;

	mov	eax, 1

; 1205 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetName@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lGetName
_TEXT	ENDS
EXTRN	?getNameKey@CvPlayer@@QBEPBDXZ:PROC		; CvPlayer::getNameKey
; Function compile flags: /Odtp
;	COMDAT ?lGetNameKey@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNameKey@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNameKey, COMDAT

; 1209 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1210 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1211 : 	lua_pushstring(L, pkPlayer->getNameKey());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 1212 : 	return 1;

	mov	eax, 1

; 1213 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNameKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNameKey
_TEXT	ENDS
EXTRN	?getNickName@CvPlayer@@QBEQBDXZ:PROC		; CvPlayer::getNickName
; Function compile flags: /Odtp
;	COMDAT ?lGetNickName@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNickName@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNickName, COMDAT

; 1216 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1217 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1218 : 	lua_pushstring(L, pkPlayer->getNickName());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getNickName@CvPlayer@@QBEQBDXZ		; CvPlayer::getNickName
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 1219 : 	return 1;

	mov	eax, 1

; 1220 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNickName@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNickName
_TEXT	ENDS
EXTRN	?getCivilizationDescription@CvPlayer@@QBEPBDXZ:PROC ; CvPlayer::getCivilizationDescription
; Function compile flags: /Odtp
;	COMDAT ?lGetCivilizationDescription@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCivilizationDescription@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCivilizationDescription, COMDAT

; 1225 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1226 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1227 : 	lua_pushstring(L, pkPlayer->getCivilizationDescription());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getCivilizationDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationDescription
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 1228 : 	return 1;

	mov	eax, 1

; 1229 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCivilizationDescription@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCivilizationDescription
_TEXT	ENDS
EXTRN	?getCivilizationDescriptionKey@CvPlayer@@QBEPBDXZ:PROC ; CvPlayer::getCivilizationDescriptionKey
; Function compile flags: /Odtp
;	COMDAT ?lGetCivilizationDescriptionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCivilizationDescriptionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCivilizationDescriptionKey, COMDAT

; 1233 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1234 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1235 : 	lua_pushstring(L, pkPlayer->getCivilizationDescriptionKey());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getCivilizationDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationDescriptionKey
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 1236 : 	return 1;

	mov	eax, 1

; 1237 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCivilizationDescriptionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCivilizationDescriptionKey
_TEXT	ENDS
EXTRN	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ:PROC ; CvPlayer::getCivilizationShortDescription
; Function compile flags: /Odtp
;	COMDAT ?lGetCivilizationShortDescription@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCivilizationShortDescription@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCivilizationShortDescription, COMDAT

; 1241 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1242 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1243 : 	lua_pushstring(L, pkPlayer->getCivilizationShortDescription());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescription
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 1244 : 	return 1;

	mov	eax, 1

; 1245 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCivilizationShortDescription@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCivilizationShortDescription
_TEXT	ENDS
EXTRN	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ:PROC ; CvPlayer::getCivilizationShortDescriptionKey
; Function compile flags: /Odtp
;	COMDAT ?lGetCivilizationShortDescriptionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCivilizationShortDescriptionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCivilizationShortDescriptionKey, COMDAT

; 1249 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1250 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1251 : 	lua_pushstring(L, pkPlayer->getCivilizationShortDescriptionKey());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 1252 : 	return 1;

	mov	eax, 1

; 1253 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCivilizationShortDescriptionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCivilizationShortDescriptionKey
_TEXT	ENDS
EXTRN	?getCivilizationAdjective@CvPlayer@@QBEPBDXZ:PROC ; CvPlayer::getCivilizationAdjective
; Function compile flags: /Odtp
;	COMDAT ?lGetCivilizationAdjective@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCivilizationAdjective@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCivilizationAdjective, COMDAT

; 1257 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1258 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1259 : 	lua_pushstring(L, pkPlayer->getCivilizationAdjective());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getCivilizationAdjective@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationAdjective
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 1260 : 	return 1;

	mov	eax, 1

; 1261 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCivilizationAdjective@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCivilizationAdjective
_TEXT	ENDS
EXTRN	?getCivilizationAdjectiveKey@CvPlayer@@QBEPBDXZ:PROC ; CvPlayer::getCivilizationAdjectiveKey
; Function compile flags: /Odtp
;	COMDAT ?lGetCivilizationAdjectiveKey@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCivilizationAdjectiveKey@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCivilizationAdjectiveKey, COMDAT

; 1265 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1266 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1267 : 	lua_pushstring(L, pkPlayer->getCivilizationAdjectiveKey());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getCivilizationAdjectiveKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationAdjectiveKey
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 1268 : 	return 1;

	mov	eax, 1

; 1269 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCivilizationAdjectiveKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCivilizationAdjectiveKey
_TEXT	ENDS
EXTRN	?isWhiteFlag@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isWhiteFlag
; Function compile flags: /Odtp
;	COMDAT ?lIsWhiteFlag@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsWhiteFlag@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsWhiteFlag, COMDAT

; 1273 : {

	push	ebp
	mov	ebp, esp

; 1274 : 	return BasicLuaMethod(L, &CvPlayerAI::isWhiteFlag);

	push	OFFSET ?isWhiteFlag@CvPlayer@@QBE_NXZ	; CvPlayer::isWhiteFlag
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 1275 : }

	pop	ebp
	ret	0
?lIsWhiteFlag@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsWhiteFlag
_TEXT	ENDS
EXTRN	?GetStateReligionName@CvPlayer@@QBEPBDXZ:PROC	; CvPlayer::GetStateReligionName
; Function compile flags: /Odtp
;	COMDAT ?lGetStateReligionName@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetStateReligionName@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetStateReligionName, COMDAT

; 1279 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1280 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1281 : 	lua_pushstring(L, pkPlayer->GetStateReligionName());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetStateReligionName@CvPlayer@@QBEPBDXZ ; CvPlayer::GetStateReligionName
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 1282 : 	return 1;

	mov	eax, 1

; 1283 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetStateReligionName@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetStateReligionName
_TEXT	ENDS
EXTRN	?GetStateReligionKey@CvPlayer@@QBE?AVCvString@@XZ:PROC ; CvPlayer::GetStateReligionKey
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv75 = -52						; size = 4
$T243169 = -48						; size = 4
$T243164 = -44						; size = 28
_pkPlayer$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetStateReligionKey, COMDAT

; 1287 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1288 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1289 : 	lua_pushstring(L, pkPlayer->GetStateReligionKey());

	lea	ecx, DWORD PTR $T243164[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetStateReligionKey@CvPlayer@@QBE?AVCvString@@XZ ; CvPlayer::GetStateReligionKey
	mov	DWORD PTR tv75[ebp], eax
	mov	edx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T243169[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T243169[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T243164[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1290 : 	return 1;

	mov	eax, 1

; 1291 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T243164[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetStateReligionKey
EXTRN	?getWorstEnemyName@CvPlayer@@QBE?BVCvString@@XZ:PROC ; CvPlayer::getWorstEnemyName
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv75 = -52						; size = 4
$T243187 = -48						; size = 4
$T243182 = -44						; size = 28
_pkPlayer$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetWorstEnemyName, COMDAT

; 1295 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1296 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1297 : 	lua_pushstring(L, pkPlayer->getWorstEnemyName());

	lea	ecx, DWORD PTR $T243182[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getWorstEnemyName@CvPlayer@@QBE?BVCvString@@XZ ; CvPlayer::getWorstEnemyName
	mov	DWORD PTR tv75[ebp], eax
	mov	edx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T243187[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T243187[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T243182[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1298 : 	return 1;

	mov	eax, 1

; 1299 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T243182[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetWorstEnemyName
PUBLIC	??$BasicLuaMethod@W4ArtStyleTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4ArtStyleTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum ArtStyleTypes>
EXTRN	?getArtStyleType@CvPlayer@@QBE?AW4ArtStyleTypes@@XZ:PROC ; CvPlayer::getArtStyleType
; Function compile flags: /Odtp
;	COMDAT ?lGetArtStyleType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetArtStyleType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetArtStyleType, COMDAT

; 1303 : {

	push	ebp
	mov	ebp, esp

; 1304 : 	return BasicLuaMethod(L, &CvPlayerAI::getArtStyleType);

	push	OFFSET ?getArtStyleType@CvPlayer@@QBE?AW4ArtStyleTypes@@XZ ; CvPlayer::getArtStyleType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4ArtStyleTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4ArtStyleTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum ArtStyleTypes>
	add	esp, 8

; 1305 : }

	pop	ebp
	ret	0
?lGetArtStyleType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetArtStyleType
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4FeatureTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4FeatureTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum FeatureTypes>
EXTRN	?countCityFeatures@CvPlayer@@QBEHW4FeatureTypes@@@Z:PROC ; CvPlayer::countCityFeatures
; Function compile flags: /Odtp
;	COMDAT ?lCountCityFeatures@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountCityFeatures@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCountCityFeatures, COMDAT

; 1309 : {

	push	ebp
	mov	ebp, esp

; 1310 : 	return BasicLuaMethod(L, &CvPlayerAI::countCityFeatures);

	push	OFFSET ?countCityFeatures@CvPlayer@@QBEHW4FeatureTypes@@@Z ; CvPlayer::countCityFeatures
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4FeatureTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4FeatureTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum FeatureTypes>
	add	esp, 8

; 1311 : }

	pop	ebp
	ret	0
?lCountCityFeatures@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCountCityFeatures
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes>
EXTRN	?countNumBuildings@CvPlayer@@QBEHW4BuildingTypes@@@Z:PROC ; CvPlayer::countNumBuildings
; Function compile flags: /Odtp
;	COMDAT ?lCountNumBuildings@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountNumBuildings@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCountNumBuildings, COMDAT

; 1315 : {

	push	ebp
	mov	ebp, esp

; 1316 : 	return BasicLuaMethod(L, &CvPlayerAI::countNumBuildings);

	push	OFFSET ?countNumBuildings@CvPlayer@@QBEHW4BuildingTypes@@@Z ; CvPlayer::countNumBuildings
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes>
	add	esp, 8

; 1317 : }

	pop	ebp
	ret	0
?lCountNumBuildings@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCountNumBuildings
_TEXT	ENDS
EXTRN	_lua_pushinteger:PROC
EXTRN	?isWorldWonderClass@@YA_NABVCvBuildingClassInfo@@@Z:PROC ; isWorldWonderClass
EXTRN	?GetBuildingClassInfo@CvBuildingEntry@@QBEABVCvBuildingClassInfo@@XZ:PROC ; CvBuildingEntry::GetBuildingClassInfo
EXTRN	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z:PROC ; CvGlobals::getBuildingInfo
EXTRN	?getNumBuildingInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumBuildingInfos
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
; Function compile flags: /Odtp
;	COMDAT ?lGetNumWorldWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkBuildingEntry$227678 = -20				; size = 4
_iWonderCount$ = -16					; size = 4
_pkPlayer$ = -12					; size = 4
_eBuilding$ = -8					; size = 4
_iBuildingLoop$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetNumWorldWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumWorldWonders, COMDAT

; 1321 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 1322 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1323 : 
; 1324 : 	int iWonderCount = 0;

	mov	DWORD PTR _iWonderCount$[ebp], 0

; 1325 : 
; 1326 : #ifdef AUI_WARNING_FIXES
; 1327 : 	uint iBuildingLoop;
; 1328 : #else
; 1329 : 	int iBuildingLoop;
; 1330 : #endif
; 1331 : 	BuildingTypes eBuilding;
; 1332 : 
; 1333 : 	// Loop through all buildings, see if they're a world wonder
; 1334 : 	for(iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)

	mov	DWORD PTR _iBuildingLoop$[ebp], 0
	jmp	SHORT $LN5@lGetNumWor
$LN4@lGetNumWor:
	mov	ecx, DWORD PTR _iBuildingLoop$[ebp]
	add	ecx, 1
	mov	DWORD PTR _iBuildingLoop$[ebp], ecx
$LN5@lGetNumWor:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	cmp	DWORD PTR _iBuildingLoop$[ebp], eax
	jge	SHORT $LN3@lGetNumWor

; 1335 : 	{
; 1336 : 		eBuilding = (BuildingTypes) iBuildingLoop;

	mov	edx, DWORD PTR _iBuildingLoop$[ebp]
	mov	DWORD PTR _eBuilding$[ebp], edx

; 1337 : 		CvBuildingEntry* pkBuildingEntry = GC.getBuildingInfo(eBuilding);

	mov	eax, DWORD PTR _eBuilding$[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingEntry$227678[ebp], eax

; 1338 : 		if(pkBuildingEntry)

	cmp	DWORD PTR _pkBuildingEntry$227678[ebp], 0
	je	SHORT $LN2@lGetNumWor

; 1339 : 		{
; 1340 : 			if(::isWorldWonderClass(pkBuildingEntry->GetBuildingClassInfo()))

	mov	ecx, DWORD PTR _pkBuildingEntry$227678[ebp]
	call	?GetBuildingClassInfo@CvBuildingEntry@@QBEABVCvBuildingClassInfo@@XZ ; CvBuildingEntry::GetBuildingClassInfo
	push	eax
	call	?isWorldWonderClass@@YA_NABVCvBuildingClassInfo@@@Z ; isWorldWonderClass
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@lGetNumWor

; 1341 : 			{
; 1342 : 				iWonderCount += pkPlayer->countNumBuildings(eBuilding);

	mov	edx, DWORD PTR _eBuilding$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?countNumBuildings@CvPlayer@@QBEHW4BuildingTypes@@@Z ; CvPlayer::countNumBuildings
	add	eax, DWORD PTR _iWonderCount$[ebp]
	mov	DWORD PTR _iWonderCount$[ebp], eax
$LN2@lGetNumWor:

; 1343 : 			}
; 1344 : 		}
; 1345 : 	}

	jmp	SHORT $LN4@lGetNumWor
$LN3@lGetNumWor:

; 1346 : 
; 1347 : 	lua_pushinteger(L, iWonderCount);

	mov	eax, DWORD PTR _iWonderCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 1348 : 	return 1;

	mov	eax, 1

; 1349 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumWorldWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumWorldWonders
_TEXT	ENDS
EXTRN	?ChangeNumWonders@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::ChangeNumWonders
; Function compile flags: /Odtp
;	COMDAT ?lChangeNumWorldWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iChange$ = -4						; size = 4
_L$ = 8							; size = 4
?lChangeNumWorldWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNumWorldWonders, COMDAT

; 1353 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1354 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1355 : 	int iChange = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iChange$[ebp], eax

; 1356 : 
; 1357 : 	pkPlayer->ChangeNumWonders(iChange);

	mov	edx, DWORD PTR _iChange$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?ChangeNumWonders@CvPlayer@@QAEXH@Z	; CvPlayer::ChangeNumWonders

; 1358 : 	return 1;

	mov	eax, 1

; 1359 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChangeNumWorldWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNumWorldWonders
_TEXT	ENDS
EXTRN	?GetNumWondersBeatenTo@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetNumWondersBeatenTo
EXTRN	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ:PROC ; CvPlayer::GetDiplomacyAI
; Function compile flags: /Odtp
;	COMDAT ?lGetNumWondersBeatenTo@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eOtherPlayer$ = -8					; size = 4
_iWondersBeatenTo$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetNumWondersBeatenTo@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumWondersBeatenTo, COMDAT

; 1363 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1364 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1365 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 1366 : 	int iWondersBeatenTo = pkPlayer->GetDiplomacyAI()->GetNumWondersBeatenTo(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetNumWondersBeatenTo@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNumWondersBeatenTo
	mov	DWORD PTR _iWondersBeatenTo$[ebp], eax

; 1367 : 
; 1368 : 	lua_pushinteger(L, iWondersBeatenTo);

	mov	eax, DWORD PTR _iWondersBeatenTo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 1369 : 	return 1;

	mov	eax, 1

; 1370 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumWondersBeatenTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumWondersBeatenTo
_TEXT	ENDS
EXTRN	?SetNumWondersBeatenTo@CvDiplomacyAI@@QAEXW4PlayerTypes@@H@Z:PROC ; CvDiplomacyAI::SetNumWondersBeatenTo
; Function compile flags: /Odtp
;	COMDAT ?lSetNumWondersBeatenTo@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eOtherPlayer$ = -8					; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lSetNumWondersBeatenTo@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetNumWondersBeatenTo, COMDAT

; 1374 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1375 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1376 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 1377 : 	const int iValue = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iValue$[ebp], eax

; 1378 : 
; 1379 : 	if(iValue > 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	jle	SHORT $LN1@lSetNumWon

; 1380 : 	{
; 1381 : 		pkPlayer->GetDiplomacyAI()->SetNumWondersBeatenTo(eOtherPlayer, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eOtherPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?SetNumWondersBeatenTo@CvDiplomacyAI@@QAEXW4PlayerTypes@@H@Z ; CvDiplomacyAI::SetNumWondersBeatenTo
$LN1@lSetNumWon:

; 1382 : 	}
; 1383 : 
; 1384 : 	return 1;

	mov	eax, 1

; 1385 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetNumWondersBeatenTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetNumWondersBeatenTo
_TEXT	ENDS
EXTRN	_lua_pushboolean:PROC
EXTRN	?IsCapitalConnectedToCity@CvPlayer@@QAE_NPAVCvCity@@W4RouteTypes@@@Z:PROC ; CvPlayer::IsCapitalConnectedToCity
; Function compile flags: /Odtp
;	COMDAT ?lIsCapitalConnectedToCity@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bResult$ = -5						; size = 1
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsCapitalConnectedToCity@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsCapitalConnectedToCity, COMDAT

; 1388 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1389 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1390 : 	CvCity* pkCity = CvLuaCity::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1391 : 
; 1392 : 	const bool bResult = pkPlayer->IsCapitalConnectedToCity(pkCity);

	push	-1
	mov	edx, DWORD PTR _pkCity$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?IsCapitalConnectedToCity@CvPlayer@@QAE_NPAVCvCity@@W4RouteTypes@@@Z ; CvPlayer::IsCapitalConnectedToCity
	mov	BYTE PTR _bResult$[ebp], al

; 1393 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 1394 : 	return 1;

	mov	eax, 1

; 1395 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsCapitalConnectedToCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsCapitalConnectedToCity
_TEXT	ENDS
EXTRN	?isTurnActive@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isTurnActive
; Function compile flags: /Odtp
;	COMDAT ?lIsTurnActive@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsTurnActive@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsTurnActive, COMDAT

; 1399 : {

	push	ebp
	mov	ebp, esp

; 1400 : 	return BasicLuaMethod(L, &CvPlayerAI::isTurnActive);

	push	OFFSET ?isTurnActive@CvPlayer@@QBE_NXZ	; CvPlayer::isTurnActive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 1401 : }

	pop	ebp
	ret	0
?lIsTurnActive@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsTurnActive
_TEXT	ENDS
EXTRN	?isSimultaneousTurns@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::isSimultaneousTurns
; Function compile flags: /Odtp
;	COMDAT ?lIsSimultaneousTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsSimultaneousTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsSimultaneousTurns, COMDAT

; 1406 : {

	push	ebp
	mov	ebp, esp

; 1407 : 	return BasicLuaMethod(L, &CvPlayerAI::isSimultaneousTurns);

	push	OFFSET ?isSimultaneousTurns@CvPlayer@@QBE_NXZ ; CvPlayer::isSimultaneousTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 1408 : }

	pop	ebp
	ret	0
?lIsSimultaneousTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsSimultaneousTurns
_TEXT	ENDS
EXTRN	?findNewCapital@CvPlayer@@QAEXXZ:PROC		; CvPlayer::findNewCapital
; Function compile flags: /Odtp
;	COMDAT ?lFindNewCapital@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lFindNewCapital@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lFindNewCapital, COMDAT

; 1413 : {

	push	ebp
	mov	ebp, esp

; 1414 : 	return BasicLuaMethod(L, &CvPlayerAI::findNewCapital);

	push	OFFSET ?findNewCapital@CvPlayer@@QAEXXZ	; CvPlayer::findNewCapital
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod
	add	esp, 8

; 1415 : }

	pop	ebp
	ret	0
?lFindNewCapital@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lFindNewCapital
_TEXT	ENDS
EXTRN	?canRaze@CvPlayer@@QBE_NPAVCvCity@@_N@Z:PROC	; CvPlayer::canRaze
EXTRN	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z:PROC	; luaL_optbool
; Function compile flags: /Odtp
;	COMDAT ?lCanRaze@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bResult$ = -6						; size = 1
_bIgnoreCapitals$ = -5					; size = 1
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lCanRaze@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lCanRaze, COMDAT

; 1419 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1420 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1421 : 	CvCity* pkCity = CvLuaCity::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1422 : 	bool bIgnoreCapitals = luaL_optbool(L, 3, false);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _bIgnoreCapitals$[ebp], al

; 1423 : 
; 1424 : 	const bool bResult = pkPlayer->canRaze(pkCity, bIgnoreCapitals);

	movzx	eax, BYTE PTR _bIgnoreCapitals$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?canRaze@CvPlayer@@QBE_NPAVCvCity@@_N@Z	; CvPlayer::canRaze
	mov	BYTE PTR _bResult$[ebp], al

; 1425 : 	lua_pushboolean(L, bResult);

	movzx	edx, BYTE PTR _bResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 1426 : 	return 1;

	mov	eax, 1

; 1427 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanRaze@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lCanRaze
_TEXT	ENDS
EXTRN	?raze@CvPlayer@@QAEXPAVCvCity@@@Z:PROC		; CvPlayer::raze
; Function compile flags: /Odtp
;	COMDAT ?lRaze@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lRaze@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lRaze, COMDAT

; 1431 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1432 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1433 : 	CvCity* pkCity = CvLuaCity::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1434 : 
; 1435 : 	pkPlayer->raze(pkCity);

	mov	edx, DWORD PTR _pkCity$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?raze@CvPlayer@@QAEXPAVCvCity@@@Z	; CvPlayer::raze

; 1436 : 	return 0;

	xor	eax, eax

; 1437 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lRaze@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lRaze
_TEXT	ENDS
EXTRN	?disband@CvPlayer@@QAEXPAVCvCity@@@Z:PROC	; CvPlayer::disband
; Function compile flags: /Odtp
;	COMDAT ?lDisband@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lDisband@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lDisband, COMDAT

; 1441 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1442 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1443 : 	CvCity* pkCity = CvLuaCity::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1444 : 
; 1445 : 	pkPlayer->disband(pkCity);

	mov	edx, DWORD PTR _pkCity$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?disband@CvPlayer@@QAEXPAVCvCity@@@Z	; CvPlayer::disband

; 1446 : 	return 0;

	xor	eax, eax

; 1447 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lDisband@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lDisband
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
EXTRN	?canReceiveGoody@CvPlayer@@QBE_NPAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@Z:PROC ; CvPlayer::canReceiveGoody
; Function compile flags: /Odtp
;	COMDAT ?lCanReceiveGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pUnit$ = -20						; size = 4
_eGoody$ = -16						; size = 4
_pkPlayer$ = -12					; size = 4
_pPlot$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lCanReceiveGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanReceiveGoody, COMDAT

; 1451 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 1452 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1453 : 	CvPlot* pPlot = CvLuaPlot::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pPlot$[ebp], eax

; 1454 : 	GoodyTypes eGoody = (GoodyTypes)lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eGoody$[ebp], eax

; 1455 : 	CvUnit* pUnit = CvLuaUnit::GetInstance(L, 4);

	push	1
	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pUnit$[ebp], eax

; 1456 : 
; 1457 : 	bool bResult = pkPlayer->canReceiveGoody(pPlot, eGoody, pUnit);

	mov	ecx, DWORD PTR _pUnit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eGoody$[ebp]
	push	edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?canReceiveGoody@CvPlayer@@QBE_NPAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@Z ; CvPlayer::canReceiveGoody
	mov	BYTE PTR _bResult$[ebp], al

; 1458 : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 1459 : 	return 1;

	mov	eax, 1

; 1460 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanReceiveGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanReceiveGoody
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@PAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXPAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<CvPlot *,enum GoodyTypes,CvUnit *>
EXTRN	?receiveGoody@CvPlayer@@QAEXPAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@Z:PROC ; CvPlayer::receiveGoody
; Function compile flags: /Odtp
;	COMDAT ?lReceiveGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lReceiveGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lReceiveGoody, COMDAT

; 1464 : {

	push	ebp
	mov	ebp, esp

; 1465 : 	return BasicLuaMethod(L, &CvPlayerAI::receiveGoody);

	push	OFFSET ?receiveGoody@CvPlayer@@QAEXPAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@Z ; CvPlayer::receiveGoody
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@PAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXPAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<CvPlot *,enum GoodyTypes,CvUnit *>
	add	esp, 8

; 1466 : }

	pop	ebp
	ret	0
?lReceiveGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lReceiveGoody
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@PAVCvPlot@@PAVCvUnit@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXPAVCvPlot@@PAVCvUnit@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<CvPlot *,CvUnit *>
EXTRN	?doGoody@CvPlayer@@QAEXPAVCvPlot@@PAVCvUnit@@@Z:PROC ; CvPlayer::doGoody
; Function compile flags: /Odtp
;	COMDAT ?lDoGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lDoGoody, COMDAT

; 1470 : {

	push	ebp
	mov	ebp, esp

; 1471 : 	return BasicLuaMethod(L, &CvPlayerAI::doGoody);

	push	OFFSET ?doGoody@CvPlayer@@QAEXPAVCvPlot@@PAVCvUnit@@@Z ; CvPlayer::doGoody
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@PAVCvPlot@@PAVCvUnit@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXPAVCvPlot@@PAVCvUnit@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<CvPlot *,CvUnit *>
	add	esp, 8

; 1472 : }

	pop	ebp
	ret	0
?lDoGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lDoGoody
_TEXT	ENDS
EXTRN	?getGoodies@CvHandicapInfo@@QBEHH@Z:PROC	; CvHandicapInfo::getGoodies
EXTRN	?getNumGoodies@CvHandicapInfo@@QBEHXZ:PROC	; CvHandicapInfo::getNumGoodies
EXTRN	?getHandicapInfo@CvPlayer@@QBEAAVCvHandicapInfo@@XZ:PROC ; CvPlayer::getHandicapInfo
; Function compile flags: /Odtp
;	COMDAT ?lCanGetGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eThisGoody$227862 = -28				; size = 4
_iGoodyLoop$227858 = -24				; size = 4
_pUnit$ = -20						; size = 4
_eGoody$ = -16						; size = 4
_pkPlayer$ = -12					; size = 4
_pPlot$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lCanGetGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanGetGoody, COMDAT

; 1476 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 1477 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1478 : 	CvPlot* pPlot = CvLuaPlot::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pPlot$[ebp], eax

; 1479 : 	GoodyTypes eGoody = (GoodyTypes)lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eGoody$[ebp], eax

; 1480 : 	CvUnit* pUnit = CvLuaUnit::GetInstance(L, 4);

	push	1
	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pUnit$[ebp], eax

; 1481 : 
; 1482 : 	bool bResult = false;

	mov	BYTE PTR _bResult$[ebp], 0

; 1483 : 	// Need to have Goodies in the Handicap file to pick from
; 1484 : 	if(pkPlayer->getHandicapInfo().getNumGoodies() > 0)

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getHandicapInfo@CvPlayer@@QBEAAVCvHandicapInfo@@XZ ; CvPlayer::getHandicapInfo
	mov	ecx, eax
	call	?getNumGoodies@CvHandicapInfo@@QBEHXZ	; CvHandicapInfo::getNumGoodies
	test	eax, eax
	jle	SHORT $LN5@lCanGetGoo

; 1485 : 	{
; 1486 : 		for(int iGoodyLoop = 0; iGoodyLoop < pkPlayer->getHandicapInfo().getNumGoodies(); iGoodyLoop++)

	mov	DWORD PTR _iGoodyLoop$227858[ebp], 0
	jmp	SHORT $LN4@lCanGetGoo
$LN3@lCanGetGoo:
	mov	ecx, DWORD PTR _iGoodyLoop$227858[ebp]
	add	ecx, 1
	mov	DWORD PTR _iGoodyLoop$227858[ebp], ecx
$LN4@lCanGetGoo:
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getHandicapInfo@CvPlayer@@QBEAAVCvHandicapInfo@@XZ ; CvPlayer::getHandicapInfo
	mov	ecx, eax
	call	?getNumGoodies@CvHandicapInfo@@QBEHXZ	; CvHandicapInfo::getNumGoodies
	cmp	DWORD PTR _iGoodyLoop$227858[ebp], eax
	jge	SHORT $LN5@lCanGetGoo

; 1487 : 		{
; 1488 : 			GoodyTypes eThisGoody = (GoodyTypes) pkPlayer->getHandicapInfo().getGoodies(iGoodyLoop);

	mov	edx, DWORD PTR _iGoodyLoop$227858[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getHandicapInfo@CvPlayer@@QBEAAVCvHandicapInfo@@XZ ; CvPlayer::getHandicapInfo
	mov	ecx, eax
	call	?getGoodies@CvHandicapInfo@@QBEHH@Z	; CvHandicapInfo::getGoodies
	mov	DWORD PTR _eThisGoody$227862[ebp], eax

; 1489 : 			if(eGoody == eThisGoody && pkPlayer->canReceiveGoody(pPlot, eThisGoody, pUnit))

	mov	eax, DWORD PTR _eGoody$[ebp]
	cmp	eax, DWORD PTR _eThisGoody$227862[ebp]
	jne	SHORT $LN1@lCanGetGoo
	mov	ecx, DWORD PTR _pUnit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eThisGoody$227862[ebp]
	push	edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?canReceiveGoody@CvPlayer@@QBE_NPAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@Z ; CvPlayer::canReceiveGoody
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@lCanGetGoo

; 1490 : 			{
; 1491 : 				bResult = true;

	mov	BYTE PTR _bResult$[ebp], 1

; 1492 : 				break;

	jmp	SHORT $LN5@lCanGetGoo
$LN1@lCanGetGoo:

; 1493 : 			}
; 1494 : 		}

	jmp	SHORT $LN3@lCanGetGoo
$LN5@lCanGetGoo:

; 1495 : 	}
; 1496 : 
; 1497 : 	lua_pushboolean(L, bResult);

	movzx	edx, BYTE PTR _bResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 1498 : 	return 1;

	mov	eax, 1

; 1499 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanGetGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanGetGoody
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NHH_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NHH_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,int,int,bool>
EXTRN	?canFound@CvPlayer@@QBE_NHH_N@Z:PROC		; CvPlayer::canFound
; Function compile flags: /Odtp
;	COMDAT ?lCanFound@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanFound@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanFound, COMDAT

; 1504 : {

	push	ebp
	mov	ebp, esp

; 1505 : 	return BasicLuaMethod(L, &CvPlayerAI::canFound);

	push	OFFSET ?canFound@CvPlayer@@QBE_NHH_N@Z	; CvPlayer::canFound
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NHH_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NHH_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,int,int,bool>
	add	esp, 8

; 1506 : }

	pop	ebp
	ret	0
?lCanFound@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanFound
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXHH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,int>
EXTRN	?found@CvPlayer@@QAEXHH@Z:PROC			; CvPlayer::found
; Function compile flags: /Odtp
;	COMDAT ?lFound@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lFound@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lFound, COMDAT

; 1510 : {

	push	ebp
	mov	ebp, esp

; 1511 : 	return BasicLuaMethod(L, &CvPlayerAI::found);

	push	OFFSET ?found@CvPlayer@@QAEXHH@Z	; CvPlayer::found
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXHH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,int>
	add	esp, 8

; 1512 : }

	pop	ebp
	ret	0
?lFound@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lFound
_TEXT	ENDS
EXTRN	?canTrain@CvPlayer@@QBE_NW4UnitTypes@@_N111PAVCvString@@@Z:PROC ; CvPlayer::canTrain
; Function compile flags: /Odtp
;	COMDAT ?lCanTrain@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bIgnoreUniqueUnitStatus$ = -13				; size = 1
_pkPlayer$ = -12					; size = 4
_eUnit$ = -8						; size = 4
_bResult$ = -4						; size = 1
_bContinue$ = -3					; size = 1
_bIgnoreCost$ = -2					; size = 1
_bTestVisible$ = -1					; size = 1
_L$ = 8							; size = 4
?lCanTrain@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanTrain, COMDAT

; 1517 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1518 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1519 : 	const UnitTypes eUnit = (UnitTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eUnit$[ebp], eax

; 1520 : 	const bool bContinue = lua_toboolean(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bContinue$[ebp], al

; 1521 : 	const bool bTestVisible = lua_toboolean(L, 4);

	push	4
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bTestVisible$[ebp], dl

; 1522 : 	const bool bIgnoreCost = lua_toboolean(L, 5);

	push	5
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	mov	BYTE PTR _bIgnoreCost$[ebp], cl

; 1523 : 	const bool bIgnoreUniqueUnitStatus = lua_toboolean(L, 6);

	push	6
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bIgnoreUniqueUnitStatus$[ebp], al

; 1524 : 
; 1525 : 	const bool bResult = pkPlayer->canTrain(eUnit, bContinue, bTestVisible, bIgnoreCost, bIgnoreUniqueUnitStatus);

	push	0
	movzx	ecx, BYTE PTR _bIgnoreUniqueUnitStatus$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bIgnoreCost$[ebp]
	push	edx
	movzx	eax, BYTE PTR _bTestVisible$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bContinue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eUnit$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?canTrain@CvPlayer@@QBE_NW4UnitTypes@@_N111PAVCvString@@@Z ; CvPlayer::canTrain
	mov	BYTE PTR _bResult$[ebp], al

; 1526 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 1527 : 	return 1;

	mov	eax, 1

; 1528 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanTrain@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanTrain
_TEXT	ENDS
EXTRN	?canConstruct@CvPlayer@@QBE_NW4BuildingTypes@@_N11PAVCvString@@@Z:PROC ; CvPlayer::canConstruct
; Function compile flags: /Odtp
;	COMDAT ?lCanConstruct@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -16					; size = 4
_bResult$ = -9						; size = 1
_iBuilding$ = -8					; size = 4
_bContinue$ = -3					; size = 1
_bIgnoreCost$ = -2					; size = 1
_bTestVisible$ = -1					; size = 1
_L$ = 8							; size = 4
?lCanConstruct@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanConstruct, COMDAT

; 1532 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1533 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1534 : 	const int iBuilding = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iBuilding$[ebp], eax

; 1535 : 	const bool bContinue = luaL_optint(L, 3, 0);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	al
	mov	BYTE PTR _bContinue$[ebp], al

; 1536 : 	const bool bTestVisible = luaL_optint(L, 4, 0);

	push	0
	push	4
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bTestVisible$[ebp], dl

; 1537 : 	const bool bIgnoreCost = luaL_optint(L, 5, 0);

	push	0
	push	5
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	cl
	mov	BYTE PTR _bIgnoreCost$[ebp], cl

; 1538 : 	const bool bResult = pkPlayer->canConstruct((BuildingTypes)iBuilding, bContinue, bTestVisible, bIgnoreCost);

	push	0
	movzx	edx, BYTE PTR _bIgnoreCost$[ebp]
	push	edx
	movzx	eax, BYTE PTR _bTestVisible$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bContinue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iBuilding$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?canConstruct@CvPlayer@@QBE_NW4BuildingTypes@@_N11PAVCvString@@@Z ; CvPlayer::canConstruct
	mov	BYTE PTR _bResult$[ebp], al

; 1539 : 
; 1540 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 1541 : 	return 1;

	mov	eax, 1

; 1542 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanConstruct@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanConstruct
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4ProjectTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProjectTypes@@_N2@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProjectTypes,bool,bool>
EXTRN	?canCreate@CvPlayer@@QBE_NW4ProjectTypes@@_N1@Z:PROC ; CvPlayer::canCreate
; Function compile flags: /Odtp
;	COMDAT ?lCanCreate@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanCreate@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanCreate, COMDAT

; 1546 : {

	push	ebp
	mov	ebp, esp

; 1547 : 	return BasicLuaMethod(L, &CvPlayerAI::canCreate);

	push	OFFSET ?canCreate@CvPlayer@@QBE_NW4ProjectTypes@@_N1@Z ; CvPlayer::canCreate
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4ProjectTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProjectTypes@@_N2@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProjectTypes,bool,bool>
	add	esp, 8

; 1548 : }

	pop	ebp
	ret	0
?lCanCreate@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanCreate
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4SpecialistTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4SpecialistTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum SpecialistTypes,bool>
EXTRN	?canPrepare@CvPlayer@@QBE_NW4SpecialistTypes@@_N@Z:PROC ; CvPlayer::canPrepare
; Function compile flags: /Odtp
;	COMDAT ?lCanPrepare@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanPrepare@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanPrepare, COMDAT

; 1552 : {

	push	ebp
	mov	ebp, esp

; 1553 : 	return BasicLuaMethod(L, &CvPlayerAI::canPrepare);

	push	OFFSET ?canPrepare@CvPlayer@@QBE_NW4SpecialistTypes@@_N@Z ; CvPlayer::canPrepare
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4SpecialistTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4SpecialistTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum SpecialistTypes,bool>
	add	esp, 8

; 1554 : }

	pop	ebp
	ret	0
?lCanPrepare@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanPrepare
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4ProcessTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProcessTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProcessTypes,bool>
EXTRN	?canMaintain@CvPlayer@@QBE_NW4ProcessTypes@@_N@Z:PROC ; CvPlayer::canMaintain
; Function compile flags: /Odtp
;	COMDAT ?lCanMaintain@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanMaintain@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanMaintain, COMDAT

; 1558 : {

	push	ebp
	mov	ebp, esp

; 1559 : 	return BasicLuaMethod(L, &CvPlayerAI::canMaintain);

	push	OFFSET ?canMaintain@CvPlayer@@QBE_NW4ProcessTypes@@_N@Z ; CvPlayer::canMaintain
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4ProcessTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProcessTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProcessTypes,bool>
	add	esp, 8

; 1560 : }

	pop	ebp
	ret	0
?lCanMaintain@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanMaintain
_TEXT	ENDS
EXTRN	?IsCanPurchaseAnyCity@CvPlayer@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4YieldTypes@@@Z:PROC ; CvPlayer::IsCanPurchaseAnyCity
; Function compile flags: /Odtp
;	COMDAT ?lIsCanPurchaseAnyCity@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -20					; size = 4
_bTestPurchaseCost$ = -15				; size = 1
_bTestTrainable$ = -14					; size = 1
_bResult$ = -13						; size = 1
_eBuildingType$ = -12					; size = 4
_eUnitType$ = -8					; size = 4
_ePurchaseYield$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsCanPurchaseAnyCity@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsCanPurchaseAnyCity, COMDAT

; 1564 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 1565 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1566 : 	const bool bTestPurchaseCost = lua_toboolean(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bTestPurchaseCost$[ebp], dl

; 1567 : 	const bool bTestTrainable = lua_toboolean(L, 3);

	push	3
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	mov	BYTE PTR _bTestTrainable$[ebp], cl

; 1568 : 	const UnitTypes eUnitType = (UnitTypes) lua_tointeger(L, 4);

	push	4
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eUnitType$[ebp], eax

; 1569 : 	const BuildingTypes eBuildingType = (BuildingTypes) lua_tointeger(L, 5);

	push	5
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBuildingType$[ebp], eax

; 1570 : 	const YieldTypes ePurchaseYield = (YieldTypes) lua_tointeger(L, 6);

	push	6
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePurchaseYield$[ebp], eax

; 1571 : 
; 1572 : 	const bool bResult = pkPlayer->IsCanPurchaseAnyCity(bTestPurchaseCost, bTestTrainable, eUnitType, eBuildingType, ePurchaseYield);

	mov	edx, DWORD PTR _ePurchaseYield$[ebp]
	push	edx
	mov	eax, DWORD PTR _eBuildingType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eUnitType$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bTestTrainable$[ebp]
	push	edx
	movzx	eax, BYTE PTR _bTestPurchaseCost$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?IsCanPurchaseAnyCity@CvPlayer@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4YieldTypes@@@Z ; CvPlayer::IsCanPurchaseAnyCity
	mov	BYTE PTR _bResult$[ebp], al

; 1573 : 
; 1574 : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 1575 : 	return 1;

	mov	eax, 1

; 1576 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsCanPurchaseAnyCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsCanPurchaseAnyCity
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4FaithPurchaseTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4FaithPurchaseTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum FaithPurchaseTypes>
EXTRN	?GetFaithPurchaseType@CvPlayer@@QBE?AW4FaithPurchaseTypes@@XZ:PROC ; CvPlayer::GetFaithPurchaseType
; Function compile flags: /Odtp
;	COMDAT ?lGetFaithPurchaseType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFaithPurchaseType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFaithPurchaseType, COMDAT

; 1580 : {

	push	ebp
	mov	ebp, esp

; 1581 : 	return BasicLuaMethod(L, &CvPlayerAI::GetFaithPurchaseType);

	push	OFFSET ?GetFaithPurchaseType@CvPlayer@@QBE?AW4FaithPurchaseTypes@@XZ ; CvPlayer::GetFaithPurchaseType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4FaithPurchaseTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4FaithPurchaseTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum FaithPurchaseTypes>
	add	esp, 8

; 1582 : }

	pop	ebp
	ret	0
?lGetFaithPurchaseType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFaithPurchaseType
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4FaithPurchaseTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4FaithPurchaseTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum FaithPurchaseTypes>
EXTRN	?SetFaithPurchaseType@CvPlayer@@QAEXW4FaithPurchaseTypes@@@Z:PROC ; CvPlayer::SetFaithPurchaseType
; Function compile flags: /Odtp
;	COMDAT ?lSetFaithPurchaseType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetFaithPurchaseType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetFaithPurchaseType, COMDAT

; 1586 : {

	push	ebp
	mov	ebp, esp

; 1587 : 	return BasicLuaMethod(L, &CvPlayerAI::SetFaithPurchaseType);

	push	OFFSET ?SetFaithPurchaseType@CvPlayer@@QAEXW4FaithPurchaseTypes@@@Z ; CvPlayer::SetFaithPurchaseType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4FaithPurchaseTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4FaithPurchaseTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum FaithPurchaseTypes>
	add	esp, 8

; 1588 : }

	pop	ebp
	ret	0
?lSetFaithPurchaseType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetFaithPurchaseType
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
EXTRN	?GetFaithPurchaseIndex@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetFaithPurchaseIndex
; Function compile flags: /Odtp
;	COMDAT ?lGetFaithPurchaseIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFaithPurchaseIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFaithPurchaseIndex, COMDAT

; 1592 : {

	push	ebp
	mov	ebp, esp

; 1593 : 	return BasicLuaMethod(L, &CvPlayerAI::GetFaithPurchaseIndex);

	push	OFFSET ?GetFaithPurchaseIndex@CvPlayer@@QBEHXZ ; CvPlayer::GetFaithPurchaseIndex
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 1594 : }

	pop	ebp
	ret	0
?lGetFaithPurchaseIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFaithPurchaseIndex
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
EXTRN	?SetFaithPurchaseIndex@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::SetFaithPurchaseIndex
; Function compile flags: /Odtp
;	COMDAT ?lSetFaithPurchaseIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetFaithPurchaseIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetFaithPurchaseIndex, COMDAT

; 1598 : {

	push	ebp
	mov	ebp, esp

; 1599 : 	return BasicLuaMethod(L, &CvPlayerAI::SetFaithPurchaseIndex);

	push	OFFSET ?SetFaithPurchaseIndex@CvPlayer@@QAEXH@Z ; CvPlayer::SetFaithPurchaseIndex
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 1600 : }

	pop	ebp
	ret	0
?lSetFaithPurchaseIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetFaithPurchaseIndex
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4UnitClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum UnitClassTypes>
EXTRN	?isProductionMaxedUnitClass@CvPlayer@@QBE_NW4UnitClassTypes@@@Z:PROC ; CvPlayer::isProductionMaxedUnitClass
; Function compile flags: /Odtp
;	COMDAT ?lIsProductionMaxedUnitClass@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProductionMaxedUnitClass@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsProductionMaxedUnitClass, COMDAT

; 1604 : {

	push	ebp
	mov	ebp, esp

; 1605 : 	return BasicLuaMethod(L, &CvPlayerAI::isProductionMaxedUnitClass);

	push	OFFSET ?isProductionMaxedUnitClass@CvPlayer@@QBE_NW4UnitClassTypes@@@Z ; CvPlayer::isProductionMaxedUnitClass
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4UnitClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum UnitClassTypes>
	add	esp, 8

; 1606 : }

	pop	ebp
	ret	0
?lIsProductionMaxedUnitClass@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsProductionMaxedUnitClass
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4BuildingClassTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingClassTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingClassTypes,bool>
EXTRN	?isProductionMaxedBuildingClass@CvPlayer@@QBE_NW4BuildingClassTypes@@_N@Z:PROC ; CvPlayer::isProductionMaxedBuildingClass
; Function compile flags: /Odtp
;	COMDAT ?lIsProductionMaxedBuildingClass@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProductionMaxedBuildingClass@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsProductionMaxedBuildingClass, COMDAT

; 1610 : {

	push	ebp
	mov	ebp, esp

; 1611 : 	return BasicLuaMethod(L, &CvPlayerAI::isProductionMaxedBuildingClass);

	push	OFFSET ?isProductionMaxedBuildingClass@CvPlayer@@QBE_NW4BuildingClassTypes@@_N@Z ; CvPlayer::isProductionMaxedBuildingClass
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4BuildingClassTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingClassTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingClassTypes,bool>
	add	esp, 8

; 1612 : }

	pop	ebp
	ret	0
?lIsProductionMaxedBuildingClass@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsProductionMaxedBuildingClass
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProjectTypes>
EXTRN	?isProductionMaxedProject@CvPlayer@@QBE_NW4ProjectTypes@@@Z:PROC ; CvPlayer::isProductionMaxedProject
; Function compile flags: /Odtp
;	COMDAT ?lIsProductionMaxedProject@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProductionMaxedProject@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsProductionMaxedProject, COMDAT

; 1616 : {

	push	ebp
	mov	ebp, esp

; 1617 : 	return BasicLuaMethod(L, &CvPlayerAI::isProductionMaxedProject);

	push	OFFSET ?isProductionMaxedProject@CvPlayer@@QBE_NW4ProjectTypes@@@Z ; CvPlayer::isProductionMaxedProject
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProjectTypes>
	add	esp, 8

; 1618 : }

	pop	ebp
	ret	0
?lIsProductionMaxedProject@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsProductionMaxedProject
_TEXT	ENDS
EXTRN	?getProductionNeeded@CvPlayer@@QBEHW4UnitTypes@@@Z:PROC ; CvPlayer::getProductionNeeded
; Function compile flags: /Odtp
;	COMDAT ?lGetUnitProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_iIndex$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetUnitProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnitProductionNeeded, COMDAT

; 1622 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1623 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1624 : 	const UnitTypes iIndex = (UnitTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 1625 : 
; 1626 : 	const int iResult = pkPlayer->getProductionNeeded(iIndex);

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getProductionNeeded@CvPlayer@@QBEHW4UnitTypes@@@Z ; CvPlayer::getProductionNeeded
	mov	DWORD PTR _iResult$[ebp], eax

; 1627 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 1628 : 	return 1;

	mov	eax, 1

; 1629 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetUnitProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnitProductionNeeded
_TEXT	ENDS
EXTRN	?getProductionNeeded@CvPlayer@@QBEHW4BuildingTypes@@@Z:PROC ; CvPlayer::getProductionNeeded
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_iIndex$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetBuildingProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBuildingProductionNeeded, COMDAT

; 1633 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1634 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1635 : 	const BuildingTypes iIndex = (BuildingTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 1636 : 
; 1637 : 	const int iResult = pkPlayer->getProductionNeeded(iIndex);

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getProductionNeeded@CvPlayer@@QBEHW4BuildingTypes@@@Z ; CvPlayer::getProductionNeeded
	mov	DWORD PTR _iResult$[ebp], eax

; 1638 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 1639 : 	return 1;

	mov	eax, 1

; 1640 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBuildingProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBuildingProductionNeeded
_TEXT	ENDS
EXTRN	?getProductionNeeded@CvPlayer@@QBEHW4ProjectTypes@@@Z:PROC ; CvPlayer::getProductionNeeded
; Function compile flags: /Odtp
;	COMDAT ?lGetProjectProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_iIndex$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetProjectProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetProjectProductionNeeded, COMDAT

; 1644 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1645 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1646 : 	const ProjectTypes iIndex = (ProjectTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 1647 : 
; 1648 : 	const int iResult = pkPlayer->getProductionNeeded(iIndex);

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getProductionNeeded@CvPlayer@@QBEHW4ProjectTypes@@@Z ; CvPlayer::getProductionNeeded
	mov	DWORD PTR _iResult$[ebp], eax

; 1649 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 1650 : 	return 1;

	mov	eax, 1

; 1651 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetProjectProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetProjectProductionNeeded
_TEXT	ENDS
EXTRN	?hasReadyUnit@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::hasReadyUnit
; Function compile flags: /Odtp
;	COMDAT ?lHasReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lHasReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lHasReadyUnit, COMDAT

; 1655 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1656 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1657 : 	const bool bResult = pkPlayer->hasReadyUnit();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?hasReadyUnit@CvPlayer@@QBE_NXZ		; CvPlayer::hasReadyUnit
	mov	BYTE PTR _bResult$[ebp], al

; 1658 : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 1659 : 	return 1;

	mov	eax, 1

; 1660 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lHasReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lHasReadyUnit
_TEXT	ENDS
PUBLIC	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
EXTRN	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ:PROC ; CvUnit::getDestructionNotification
EXTRN	?GetFirstReadyUnit@CvPlayer@@QBEPBVCvUnit@@XZ:PROC ; CvPlayer::GetFirstReadyUnit
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z$2
__ehfuncinfo$?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv128 = -52						; size = 4
$T243330 = -48						; size = 8
$T243306 = -40						; size = 4
$T243296 = -36						; size = 4
$T243275 = -32						; size = 4
_pkPlayer$ = -24					; size = 4
_MyUnitHandle$ = -20					; size = 8
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFirstReadyUnit, COMDAT

; 1663 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1664 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1665 : 	const UnitHandle MyUnitHandle;

	mov	DWORD PTR _MyUnitHandle$[ebp], 0
	mov	BYTE PTR _MyUnitHandle$[ebp+4], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1666 : 	MyUnitHandle = pkPlayer->GetFirstReadyUnit();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetFirstReadyUnit@CvPlayer@@QBEPBVCvUnit@@XZ ; CvPlayer::GetFirstReadyUnit
	mov	DWORD PTR $T243296[ebp], eax
	cmp	DWORD PTR _MyUnitHandle$[ebp], 0
	je	SHORT $LN8@lGetFirstR
	mov	ecx, DWORD PTR _MyUnitHandle$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN8@lGetFirstR:
	mov	ecx, DWORD PTR $T243296[ebp]
	mov	DWORD PTR _MyUnitHandle$[ebp], ecx
	cmp	DWORD PTR _MyUnitHandle$[ebp], 0
	je	SHORT $LN9@lGetFirstR
	mov	ecx, DWORD PTR _MyUnitHandle$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN9@lGetFirstR:

; 1667 : 
; 1668 : 	CvLuaUnit::Push(L, MyUnitHandle);

	lea	edx, DWORD PTR $T243330[ebp]
	mov	DWORD PTR $T243306[ebp], edx
	mov	eax, DWORD PTR $T243306[ebp]
	mov	ecx, DWORD PTR _MyUnitHandle$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T243306[ebp]
	mov	al, BYTE PTR _MyUnitHandle$[ebp+4]
	mov	BYTE PTR [edx+4], al
	mov	ecx, DWORD PTR $T243306[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN16@lGetFirstR
	mov	edx, DWORD PTR $T243306[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN16@lGetFirstR:
	mov	eax, DWORD PTR $T243306[ebp]
	mov	DWORD PTR tv128[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T243330[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T243330[ebp], 0
	je	SHORT $LN20@lGetFirstR
	mov	ecx, DWORD PTR $T243330[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN20@lGetFirstR:

; 1669 : 	return 1;

	mov	DWORD PTR $T243275[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _MyUnitHandle$[ebp], 0
	je	SHORT $LN31@lGetFirstR
	mov	ecx, DWORD PTR _MyUnitHandle$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN31@lGetFirstR:
	mov	eax, DWORD PTR $T243275[ebp]

; 1670 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _MyUnitHandle$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__unwindfunclet$?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z$2:
	lea	ecx, DWORD PTR $T243330[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFirstReadyUnit
EXTRN	?plot@CvUnit@@QBEPAVCvPlot@@XZ:PROC		; CvUnit::plot
; Function compile flags: /Odtp
;	COMDAT ?lGetFirstReadyUnitPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pUnit$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_pPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetFirstReadyUnitPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFirstReadyUnitPlot, COMDAT

; 1673 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1674 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1675 : 	CvPlot* pPlot = NULL;

	mov	DWORD PTR _pPlot$[ebp], 0

; 1676 : 	const CvUnit* pUnit = pkPlayer->GetFirstReadyUnit();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetFirstReadyUnit@CvPlayer@@QBEPBVCvUnit@@XZ ; CvPlayer::GetFirstReadyUnit
	mov	DWORD PTR _pUnit$[ebp], eax

; 1677 : 	if(pUnit)

	cmp	DWORD PTR _pUnit$[ebp], 0
	je	SHORT $LN1@lGetFirstR@2

; 1678 : 	{
; 1679 : 		pPlot = pUnit->plot();

	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	DWORD PTR _pPlot$[ebp], eax
$LN1@lGetFirstR@2:

; 1680 : 	}
; 1681 : 
; 1682 : 	CvLuaPlot::Push(L, pPlot);

	mov	ecx, DWORD PTR _pPlot$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8

; 1683 : 	return 1;

	mov	eax, 1

; 1684 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetFirstReadyUnitPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFirstReadyUnitPlot
_TEXT	ENDS
EXTRN	?hasBusyUnit@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::hasBusyUnit
; Function compile flags: /Odtp
;	COMDAT ?lHasBusyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lHasBusyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lHasBusyUnit, COMDAT

; 1688 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1689 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1690 : #ifdef AUI_WARNING_FIXES
; 1691 : 	lua_pushboolean(L, pkPlayer->hasBusyUnit() ? 1 : 0);
; 1692 : #else
; 1693 : 	lua_pushboolean(L, pkPlayer->hasBusyUnit());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?hasBusyUnit@CvPlayer@@QBE_NXZ		; CvPlayer::hasBusyUnit
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 1694 : #endif
; 1695 : 	return 1;

	mov	eax, 1

; 1696 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lHasBusyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lHasBusyUnit
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lHasBusyMovingUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasBusyMovingUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lHasBusyMovingUnit, COMDAT

; 1700 : {

	push	ebp
	mov	ebp, esp

; 1701 : #ifdef AUI_WARNING_FIXES
; 1702 : 	lua_pushboolean(L, 0);	// Obsolete function.  Units are never busy moving, movement is always instant in the game core.
; 1703 : #else
; 1704 : 	lua_pushboolean(L, false);	// Obsolete function.  Units are never busy moving, movement is always instant in the game core.

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 1705 : #endif
; 1706 : 	return 1;

	mov	eax, 1

; 1707 : }

	pop	ebp
	ret	0
?lHasBusyMovingUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lHasBusyMovingUnit
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4BuildingTypes@@W4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingTypes@@W4BuildingClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes,enum BuildingClassTypes,int>
EXTRN	?getBuildingClassPrereqBuilding@CvPlayer@@QBEHW4BuildingTypes@@W4BuildingClassTypes@@H@Z:PROC ; CvPlayer::getBuildingClassPrereqBuilding
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingClassPrereqBuilding@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingClassPrereqBuilding@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBuildingClassPrereqBuilding, COMDAT

; 1712 : {

	push	ebp
	mov	ebp, esp

; 1713 : 	return BasicLuaMethod(L, &CvPlayerAI::getBuildingClassPrereqBuilding);

	push	OFFSET ?getBuildingClassPrereqBuilding@CvPlayer@@QBEHW4BuildingTypes@@W4BuildingClassTypes@@H@Z ; CvPlayer::getBuildingClassPrereqBuilding
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4BuildingTypes@@W4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingTypes@@W4BuildingClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes,enum BuildingClassTypes,int>
	add	esp, 8

; 1714 : }

	pop	ebp
	ret	0
?lGetBuildingClassPrereqBuilding@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBuildingClassPrereqBuilding
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4BuildingClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum BuildingClassTypes>
EXTRN	?removeBuildingClass@CvPlayer@@QAEXW4BuildingClassTypes@@@Z:PROC ; CvPlayer::removeBuildingClass
; Function compile flags: /Odtp
;	COMDAT ?lRemoveBuildingClass@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lRemoveBuildingClass@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lRemoveBuildingClass, COMDAT

; 1719 : {

	push	ebp
	mov	ebp, esp

; 1720 : 	return BasicLuaMethod(L, &CvPlayerAI::removeBuildingClass);

	push	OFFSET ?removeBuildingClass@CvPlayer@@QAEXW4BuildingClassTypes@@@Z ; CvPlayer::removeBuildingClass
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4BuildingClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum BuildingClassTypes>
	add	esp, 8

; 1721 : }

	pop	ebp
	ret	0
?lRemoveBuildingClass@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lRemoveBuildingClass
_TEXT	ENDS
EXTRN	?canBuild@CvPlayer@@QBE_NPBVCvPlot@@W4BuildTypes@@_N222@Z:PROC ; CvPlayer::canBuild
; Function compile flags: /Odtp
;	COMDAT ?lCanBuild@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -20					; size = 4
_bTestGold$ = -14					; size = 1
_bResult$ = -13						; size = 1
_eBuild$ = -12						; size = 4
_bTestEra$ = -6						; size = 1
_bTestVisible$ = -5					; size = 1
_pkPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lCanBuild@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanBuild, COMDAT

; 1726 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 1727 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1728 : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlot$[ebp], eax

; 1729 : 	const BuildTypes eBuild = (BuildTypes)lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBuild$[ebp], eax

; 1730 : 	const bool bTestEra = luaL_optint(L, 4, 0);

	push	0
	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	cl
	mov	BYTE PTR _bTestEra$[ebp], cl

; 1731 : 	const bool bTestVisible = luaL_optint(L, 5, 0);

	push	0
	push	5
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	al
	mov	BYTE PTR _bTestVisible$[ebp], al

; 1732 : 	const bool bTestGold = luaL_optint(L, 6, 0);

	push	0
	push	6
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bTestGold$[ebp], dl

; 1733 : 
; 1734 : 	const bool bResult = pkPlayer->canBuild(pkPlot, eBuild, bTestEra, bTestVisible, bTestGold);

	push	1
	movzx	eax, BYTE PTR _bTestGold$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bTestVisible$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bTestEra$[ebp]
	push	edx
	mov	eax, DWORD PTR _eBuild$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?canBuild@CvPlayer@@QBE_NPBVCvPlot@@W4BuildTypes@@_N222@Z ; CvPlayer::canBuild
	mov	BYTE PTR _bResult$[ebp], al

; 1735 : 	lua_pushboolean(L, bResult);

	movzx	edx, BYTE PTR _bResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 1736 : 	return 1;

	mov	eax, 1

; 1737 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanBuild@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanBuild
_TEXT	ENDS
EXTRN	?IsBuildBlockedByFeature@CvPlayer@@QBE_NW4BuildTypes@@W4FeatureTypes@@@Z:PROC ; CvPlayer::IsBuildBlockedByFeature
; Function compile flags: /Odtp
;	COMDAT ?lIsBuildBlockedByFeature@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -16					; size = 4
_bResult$ = -9						; size = 1
_eBuild$ = -8						; size = 4
_eFeature$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsBuildBlockedByFeature@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsBuildBlockedByFeature, COMDAT

; 1742 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1743 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1744 : 	const BuildTypes eBuild = (BuildTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBuild$[ebp], eax

; 1745 : 	const FeatureTypes eFeature = (FeatureTypes)lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eFeature$[ebp], eax

; 1746 : 
; 1747 : 	const bool bResult = pkPlayer->IsBuildBlockedByFeature(eBuild, eFeature);

	mov	eax, DWORD PTR _eFeature$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eBuild$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?IsBuildBlockedByFeature@CvPlayer@@QBE_NW4BuildTypes@@W4FeatureTypes@@@Z ; CvPlayer::IsBuildBlockedByFeature
	mov	BYTE PTR _bResult$[ebp], al

; 1748 : 	lua_pushboolean(L, bResult);

	movzx	edx, BYTE PTR _bResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 1749 : 	return 1;

	mov	eax, 1

; 1750 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsBuildBlockedByFeature@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsBuildBlockedByFeature
_TEXT	ENDS
EXTRN	?getBestRoute@CvPlayer@@QBE?AW4RouteTypes@@PAVCvPlot@@@Z:PROC ; CvPlayer::getBestRoute
; Function compile flags: /Odtp
;	COMDAT ?lGetBestRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eBestRoute$ = -8					; size = 4
_pkPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetBestRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetBestRoute, COMDAT

; 1755 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1756 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1757 : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlot$[ebp], eax

; 1758 : 
; 1759 : 	const RouteTypes eBestRoute = pkPlayer->getBestRoute(pkPlot);

	mov	edx, DWORD PTR _pkPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getBestRoute@CvPlayer@@QBE?AW4RouteTypes@@PAVCvPlot@@@Z ; CvPlayer::getBestRoute
	mov	DWORD PTR _eBestRoute$[ebp], eax

; 1760 : 	lua_pushinteger(L, eBestRoute);

	mov	eax, DWORD PTR _eBestRoute$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 1761 : 	return 1;

	mov	eax, 1

; 1762 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBestRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetBestRoute
_TEXT	ENDS
EXTRN	?getImprovementUpgradeRate@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getImprovementUpgradeRate
; Function compile flags: /Odtp
;	COMDAT ?lGetImprovementUpgradeRate@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetImprovementUpgradeRate@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetImprovementUpgradeRate, COMDAT

; 1766 : {

	push	ebp
	mov	ebp, esp

; 1767 : 	return BasicLuaMethod(L, &CvPlayerAI::getImprovementUpgradeRate);

	push	OFFSET ?getImprovementUpgradeRate@CvPlayer@@QBEHXZ ; CvPlayer::getImprovementUpgradeRate
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 1768 : }

	pop	ebp
	ret	0
?lGetImprovementUpgradeRate@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetImprovementUpgradeRate
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum YieldTypes>
EXTRN	?calculateTotalYield@CvPlayer@@QBEHW4YieldTypes@@@Z:PROC ; CvPlayer::calculateTotalYield
; Function compile flags: /Odtp
;	COMDAT ?lCalculateTotalYield@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCalculateTotalYield@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCalculateTotalYield, COMDAT

; 1772 : {

	push	ebp
	mov	ebp, esp

; 1773 : 	return BasicLuaMethod(L, &CvPlayerAI::calculateTotalYield);

	push	OFFSET ?calculateTotalYield@CvPlayer@@QBEHW4YieldTypes@@@Z ; CvPlayer::calculateTotalYield
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 1774 : }

	pop	ebp
	ret	0
?lCalculateTotalYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCalculateTotalYield
_TEXT	ENDS
EXTRN	?calculateUnitCost@CvPlayer@@QBEHXZ:PROC	; CvPlayer::calculateUnitCost
; Function compile flags: /Odtp
;	COMDAT ?lCalculateUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCalculateUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCalculateUnitCost, COMDAT

; 1779 : {

	push	ebp
	mov	ebp, esp

; 1780 : 	return BasicLuaMethod(L, &CvPlayerAI::calculateUnitCost);

	push	OFFSET ?calculateUnitCost@CvPlayer@@QBEHXZ ; CvPlayer::calculateUnitCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 1781 : }

	pop	ebp
	ret	0
?lCalculateUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCalculateUnitCost
_TEXT	ENDS
EXTRN	?calculateUnitSupply@CvPlayer@@QBEHXZ:PROC	; CvPlayer::calculateUnitSupply
; Function compile flags: /Odtp
;	COMDAT ?lCalculateUnitSupply@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lCalculateUnitSupply@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCalculateUnitSupply, COMDAT

; 1785 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1786 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1787 : 
; 1788 : 	const int iResult = pkPlayer->calculateUnitSupply();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?calculateUnitSupply@CvPlayer@@QBEHXZ	; CvPlayer::calculateUnitSupply
	mov	DWORD PTR _iResult$[ebp], eax

; 1789 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 1790 : 	return 1;

	mov	eax, 1

; 1791 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCalculateUnitSupply@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCalculateUnitSupply
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4DomainTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4DomainTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum DomainTypes,bool>
EXTRN	?GetNumMaintenanceFreeUnits@CvPlayer@@QBEHW4DomainTypes@@_N@Z:PROC ; CvPlayer::GetNumMaintenanceFreeUnits
; Function compile flags: /Odtp
;	COMDAT ?lGetNumMaintenanceFreeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumMaintenanceFreeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumMaintenanceFreeUnits, COMDAT

; 1796 : {

	push	ebp
	mov	ebp, esp

; 1797 : 	return BasicLuaMethod(L, &CvPlayerAI::GetNumMaintenanceFreeUnits);

	push	OFFSET ?GetNumMaintenanceFreeUnits@CvPlayer@@QBEHW4DomainTypes@@_N@Z ; CvPlayer::GetNumMaintenanceFreeUnits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4DomainTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4DomainTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum DomainTypes,bool>
	add	esp, 8

; 1798 : }

	pop	ebp
	ret	0
?lGetNumMaintenanceFreeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumMaintenanceFreeUnits
_TEXT	ENDS
EXTRN	?GetBuildingGoldMaintenance@CvTreasury@@QBEHXZ:PROC ; CvTreasury::GetBuildingGoldMaintenance
EXTRN	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ:PROC ; CvPlayer::GetTreasury
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBuildingGoldMaintenance, COMDAT

; 1803 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1804 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1805 : 
; 1806 : 	const int iResult = pkPlayer->GetTreasury()->GetBuildingGoldMaintenance();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetBuildingGoldMaintenance@CvTreasury@@QBEHXZ ; CvTreasury::GetBuildingGoldMaintenance
	mov	DWORD PTR _iResult$[ebp], eax

; 1807 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 1808 : 	return 1;

	mov	eax, 1

; 1809 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBuildingGoldMaintenance
_TEXT	ENDS
EXTRN	?SetBaseBuildingGoldMaintenance@CvTreasury@@QAEXH@Z:PROC ; CvTreasury::SetBaseBuildingGoldMaintenance
; Function compile flags: /Odtp
;	COMDAT ?lSetBaseBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lSetBaseBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetBaseBuildingGoldMaintenance, COMDAT

; 1813 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1814 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1815 : 	const int iValue = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iValue$[ebp], eax

; 1816 : 
; 1817 : 	pkPlayer->GetTreasury()->SetBaseBuildingGoldMaintenance(iValue);

	mov	edx, DWORD PTR _iValue$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?SetBaseBuildingGoldMaintenance@CvTreasury@@QAEXH@Z ; CvTreasury::SetBaseBuildingGoldMaintenance

; 1818 : 	return 1;

	mov	eax, 1

; 1819 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetBaseBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetBaseBuildingGoldMaintenance
_TEXT	ENDS
EXTRN	?ChangeBaseBuildingGoldMaintenance@CvTreasury@@QAEXH@Z:PROC ; CvTreasury::ChangeBaseBuildingGoldMaintenance
; Function compile flags: /Odtp
;	COMDAT ?lChangeBaseBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lChangeBaseBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeBaseBuildingGoldMaintenance, COMDAT

; 1823 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1824 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1825 : 	const int iValue = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iValue$[ebp], eax

; 1826 : 
; 1827 : 	pkPlayer->GetTreasury()->ChangeBaseBuildingGoldMaintenance(iValue);

	mov	edx, DWORD PTR _iValue$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?ChangeBaseBuildingGoldMaintenance@CvTreasury@@QAEXH@Z ; CvTreasury::ChangeBaseBuildingGoldMaintenance

; 1828 : 	return 1;

	mov	eax, 1

; 1829 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChangeBaseBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeBaseBuildingGoldMaintenance
_TEXT	ENDS
EXTRN	?GetImprovementGoldMaintenance@CvTreasury@@QBEHXZ:PROC ; CvTreasury::GetImprovementGoldMaintenance
; Function compile flags: /Odtp
;	COMDAT ?lGetImprovementGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetImprovementGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetImprovementGoldMaintenance, COMDAT

; 1833 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1834 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1835 : 
; 1836 : 	const int iResult = pkPlayer->GetTreasury()->GetImprovementGoldMaintenance();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetImprovementGoldMaintenance@CvTreasury@@QBEHXZ ; CvTreasury::GetImprovementGoldMaintenance
	mov	DWORD PTR _iResult$[ebp], eax

; 1837 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 1838 : 	return 1;

	mov	eax, 1

; 1839 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetImprovementGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetImprovementGoldMaintenance
_TEXT	ENDS
EXTRN	?calculateGoldRate@CvPlayer@@QBEHXZ:PROC	; CvPlayer::calculateGoldRate
; Function compile flags: /Odtp
;	COMDAT ?lCalculateGoldRate@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCalculateGoldRate@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCalculateGoldRate, COMDAT

; 1843 : {

	push	ebp
	mov	ebp, esp

; 1844 : 	return BasicLuaMethod(L, &CvPlayerAI::calculateGoldRate);

	push	OFFSET ?calculateGoldRate@CvPlayer@@QBEHXZ ; CvPlayer::calculateGoldRate
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 1845 : }

	pop	ebp
	ret	0
?lCalculateGoldRate@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCalculateGoldRate
_TEXT	ENDS
EXTRN	?calculateGoldRateTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::calculateGoldRateTimes100
; Function compile flags: /Odtp
;	COMDAT ?lCalculateGoldRateTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCalculateGoldRateTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCalculateGoldRateTimes100, COMDAT

; 1849 : {

	push	ebp
	mov	ebp, esp

; 1850 : 	return BasicLuaMethod(L, &CvPlayerAI::calculateGoldRateTimes100);

	push	OFFSET ?calculateGoldRateTimes100@CvPlayer@@QBEHXZ ; CvPlayer::calculateGoldRateTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 1851 : }

	pop	ebp
	ret	0
?lCalculateGoldRateTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCalculateGoldRateTimes100
_TEXT	ENDS
EXTRN	?CalculateGrossGoldTimes100@CvTreasury@@QAEHXZ:PROC ; CvTreasury::CalculateGrossGoldTimes100
; Function compile flags: /Odtp
;	COMDAT ?lCalculateGrossGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lCalculateGrossGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCalculateGrossGoldTimes100, COMDAT

; 1855 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1856 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1857 : 
; 1858 : 	const int iResult = pkPlayer->GetTreasury()->CalculateGrossGoldTimes100();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?CalculateGrossGoldTimes100@CvTreasury@@QAEHXZ ; CvTreasury::CalculateGrossGoldTimes100
	mov	DWORD PTR _iResult$[ebp], eax

; 1859 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 1860 : 	return 1;

	mov	eax, 1

; 1861 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCalculateGrossGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCalculateGrossGoldTimes100
_TEXT	ENDS
EXTRN	?CalculateInflatedCosts@CvTreasury@@QAEHXZ:PROC	; CvTreasury::CalculateInflatedCosts
; Function compile flags: /Odtp
;	COMDAT ?lCalculateInflatedCosts@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lCalculateInflatedCosts@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCalculateInflatedCosts, COMDAT

; 1865 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1866 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1867 : 
; 1868 : 	const int iResult = pkPlayer->GetTreasury()->CalculateInflatedCosts();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?CalculateInflatedCosts@CvTreasury@@QAEHXZ ; CvTreasury::CalculateInflatedCosts
	mov	DWORD PTR _iResult$[ebp], eax

; 1869 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 1870 : 	return 1;

	mov	eax, 1

; 1871 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCalculateInflatedCosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCalculateInflatedCosts
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes>
EXTRN	?calculateResearchModifier@CvPlayer@@QAEHW4TechTypes@@@Z:PROC ; CvPlayer::calculateResearchModifier
; Function compile flags: /Odtp
;	COMDAT ?lCalculateResearchModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCalculateResearchModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCalculateResearchModifier, COMDAT

; 1875 : {

	push	ebp
	mov	ebp, esp

; 1876 : 	return BasicLuaMethod(L, &CvPlayerAI::calculateResearchModifier);

	push	OFFSET ?calculateResearchModifier@CvPlayer@@QAEHW4TechTypes@@@Z ; CvPlayer::calculateResearchModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes>
	add	esp, 8

; 1877 : }

	pop	ebp
	ret	0
?lCalculateResearchModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCalculateResearchModifier
_TEXT	ENDS
EXTRN	?IsResearch@CvPlayerTechs@@QBE_NXZ:PROC		; CvPlayerTechs::IsResearch
EXTRN	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ:PROC ; CvPlayer::GetPlayerTechs
; Function compile flags: /Odtp
;	COMDAT ?lIsResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsResearch, COMDAT

; 1881 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1882 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1883 : 
; 1884 : 	const bool bResult = pkPlayer->GetPlayerTechs()->IsResearch();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?IsResearch@CvPlayerTechs@@QBE_NXZ	; CvPlayerTechs::IsResearch
	mov	BYTE PTR _bResult$[ebp], al

; 1885 : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 1886 : 	return 1;

	mov	eax, 1

; 1887 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsResearch
_TEXT	ENDS
EXTRN	?CanEverResearch@CvPlayerTechs@@QBE_NW4TechTypes@@@Z:PROC ; CvPlayerTechs::CanEverResearch
; Function compile flags: /Odtp
;	COMDAT ?lCanEverResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bResult$ = -5						; size = 1
_eTech$ = -4						; size = 4
_L$ = 8							; size = 4
?lCanEverResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanEverResearch, COMDAT

; 1891 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1892 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1893 : 	const TechTypes eTech = (TechTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eTech$[ebp], eax

; 1894 : 
; 1895 : 	const bool bResult
; 1896 : 	    = pkPlayer->GetPlayerTechs()->CanEverResearch(eTech);

	mov	edx, DWORD PTR _eTech$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?CanEverResearch@CvPlayerTechs@@QBE_NW4TechTypes@@@Z ; CvPlayerTechs::CanEverResearch
	mov	BYTE PTR _bResult$[ebp], al

; 1897 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 1898 : 	return 1;

	mov	eax, 1

; 1899 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanEverResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanEverResearch
_TEXT	ENDS
EXTRN	?CanResearch@CvPlayerTechs@@QBE_NW4TechTypes@@_N@Z:PROC ; CvPlayerTechs::CanResearch
EXTRN	_luaL_checkinteger:PROC
; Function compile flags: /Odtp
;	COMDAT ?lCanResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -16					; size = 4
_bResult$ = -9						; size = 1
_eTech$ = -8						; size = 4
_bTrade$ = -1						; size = 1
_L$ = 8							; size = 4
?lCanResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanResearch, COMDAT

; 1903 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1904 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1905 : 	const TechTypes eTech = (TechTypes)luaL_checkinteger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eTech$[ebp], eax

; 1906 : 	const bool bTrade = luaL_optint(L, 3, 0);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	al
	mov	BYTE PTR _bTrade$[ebp], al

; 1907 : 
; 1908 : 	const bool bResult
; 1909 : 	    = pkPlayer->GetPlayerTechs()->CanResearch(eTech, bTrade);

	movzx	ecx, BYTE PTR _bTrade$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eTech$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?CanResearch@CvPlayerTechs@@QBE_NW4TechTypes@@_N@Z ; CvPlayerTechs::CanResearch
	mov	BYTE PTR _bResult$[ebp], al

; 1910 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 1911 : 	return 1;

	mov	eax, 1

; 1912 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanResearch
_TEXT	ENDS
EXTRN	?CanResearchForFree@CvPlayerTechs@@QBE_NW4TechTypes@@@Z:PROC ; CvPlayerTechs::CanResearchForFree
; Function compile flags: /Odtp
;	COMDAT ?lCanResearchForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bResult$ = -5						; size = 1
_eTech$ = -4						; size = 4
_L$ = 8							; size = 4
?lCanResearchForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCanResearchForFree, COMDAT

; 1916 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1917 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1918 : 	const TechTypes eTech = (TechTypes)luaL_checkinteger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eTech$[ebp], eax

; 1919 : 
; 1920 : 	const bool bResult = pkPlayer->GetPlayerTechs()->CanResearchForFree(eTech);

	mov	edx, DWORD PTR _eTech$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?CanResearchForFree@CvPlayerTechs@@QBE_NW4TechTypes@@@Z ; CvPlayerTechs::CanResearchForFree
	mov	BYTE PTR _bResult$[ebp], al

; 1921 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 1922 : 	return 1;

	mov	eax, 1

; 1923 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanResearchForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCanResearchForFree
_TEXT	ENDS
EXTRN	?GetCurrentResearch@CvPlayerTechs@@QBE?AW4TechTypes@@XZ:PROC ; CvPlayerTechs::GetCurrentResearch
; Function compile flags: /Odtp
;	COMDAT ?lGetCurrentResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCurrentResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCurrentResearch, COMDAT

; 1927 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1928 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1929 : 	const TechTypes iResult = pkPlayer->GetPlayerTechs()->GetCurrentResearch();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?GetCurrentResearch@CvPlayerTechs@@QBE?AW4TechTypes@@XZ ; CvPlayerTechs::GetCurrentResearch
	mov	DWORD PTR _iResult$[ebp], eax

; 1930 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 1931 : 	return 1;

	mov	eax, 1

; 1932 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCurrentResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCurrentResearch
_TEXT	ENDS
EXTRN	?IsCurrentResearchRepeat@CvPlayerTechs@@QBE_NXZ:PROC ; CvPlayerTechs::IsCurrentResearchRepeat
; Function compile flags: /Odtp
;	COMDAT ?lIsCurrentResearchRepeat@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsCurrentResearchRepeat@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsCurrentResearchRepeat, COMDAT

; 1936 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1937 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1938 : 
; 1939 : 	const bool bResult
; 1940 : 	    = pkPlayer->GetPlayerTechs()->IsCurrentResearchRepeat();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?IsCurrentResearchRepeat@CvPlayerTechs@@QBE_NXZ ; CvPlayerTechs::IsCurrentResearchRepeat
	mov	BYTE PTR _bResult$[ebp], al

; 1941 : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 1942 : 	return 1;

	mov	eax, 1

; 1943 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsCurrentResearchRepeat@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsCurrentResearchRepeat
_TEXT	ENDS
EXTRN	?IsNoResearchAvailable@CvPlayerTechs@@QBE_NXZ:PROC ; CvPlayerTechs::IsNoResearchAvailable
; Function compile flags: /Odtp
;	COMDAT ?lIsNoResearchAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsNoResearchAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsNoResearchAvailable, COMDAT

; 1947 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1948 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1949 : 
; 1950 : 	const bool bResult
; 1951 : 	    = pkPlayer->GetPlayerTechs()->IsNoResearchAvailable();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?IsNoResearchAvailable@CvPlayerTechs@@QBE_NXZ ; CvPlayerTechs::IsNoResearchAvailable
	mov	BYTE PTR _bResult$[ebp], al

; 1952 : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 1953 : 	return 1;

	mov	eax, 1

; 1954 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsNoResearchAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsNoResearchAvailable
_TEXT	ENDS
EXTRN	?GetResearchTurnsLeft@CvPlayerTechs@@QBEHW4TechTypes@@_N@Z:PROC ; CvPlayerTechs::GetResearchTurnsLeft
; Function compile flags: /Odtp
;	COMDAT ?lGetResearchTurnsLeft@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -16					; size = 4
_eTech$ = -12						; size = 4
_iResult$ = -8						; size = 4
_bOverflow$ = -1					; size = 1
_L$ = 8							; size = 4
?lGetResearchTurnsLeft@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetResearchTurnsLeft, COMDAT

; 1958 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1959 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1960 : 	const TechTypes eTech	= (TechTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eTech$[ebp], eax

; 1961 : 	const bool bOverflow	= lua_toboolean(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bOverflow$[ebp], al

; 1962 : 
; 1963 : 	const int iResult
; 1964 : 	    = pkPlayer->GetPlayerTechs()->GetResearchTurnsLeft(eTech, bOverflow);

	movzx	ecx, BYTE PTR _bOverflow$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eTech$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?GetResearchTurnsLeft@CvPlayerTechs@@QBEHW4TechTypes@@_N@Z ; CvPlayerTechs::GetResearchTurnsLeft
	mov	DWORD PTR _iResult$[ebp], eax

; 1965 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 1966 : 	return 1;

	mov	eax, 1

; 1967 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetResearchTurnsLeft@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetResearchTurnsLeft
_TEXT	ENDS
EXTRN	?GetResearchCost@CvPlayerTechs@@QBEHW4TechTypes@@@Z:PROC ; CvPlayerTechs::GetResearchCost
; Function compile flags: /Odtp
;	COMDAT ?lGetResearchCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eTech$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetResearchCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetResearchCost, COMDAT

; 1972 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1973 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1974 : 	const TechTypes eTech	= (TechTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eTech$[ebp], eax

; 1975 : 
; 1976 : 	const int iResult = pkPlayer->GetPlayerTechs()->GetResearchCost(eTech);

	mov	edx, DWORD PTR _eTech$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?GetResearchCost@CvPlayerTechs@@QBEHW4TechTypes@@@Z ; CvPlayerTechs::GetResearchCost
	mov	DWORD PTR _iResult$[ebp], eax

; 1977 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 1978 : 	return 1;

	mov	eax, 1

; 1979 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetResearchCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetResearchCost
_TEXT	ENDS
EXTRN	?GetResearchProgress@CvPlayerTechs@@QBEHW4TechTypes@@@Z:PROC ; CvPlayerTechs::GetResearchProgress
; Function compile flags: /Odtp
;	COMDAT ?lGetResearchProgress@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eTech$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetResearchProgress@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetResearchProgress, COMDAT

; 1984 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1985 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 1986 : 	const TechTypes eTech	= (TechTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eTech$[ebp], eax

; 1987 : 
; 1988 : 	const int iResult = pkPlayer->GetPlayerTechs()->GetResearchProgress(eTech);

	mov	edx, DWORD PTR _eTech$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?GetResearchProgress@CvPlayerTechs@@QBEHW4TechTypes@@@Z ; CvPlayerTechs::GetResearchProgress
	mov	DWORD PTR _iResult$[ebp], eax

; 1989 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 1990 : 	return 1;

	mov	eax, 1

; 1991 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetResearchProgress@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetResearchProgress
_TEXT	ENDS
EXTRN	?unitsRequiredForGoldenAge@CvPlayer@@QBEHXZ:PROC ; CvPlayer::unitsRequiredForGoldenAge
; Function compile flags: /Odtp
;	COMDAT ?lUnitsRequiredForGoldenAge@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lUnitsRequiredForGoldenAge@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lUnitsRequiredForGoldenAge, COMDAT

; 1996 : {

	push	ebp
	mov	ebp, esp

; 1997 : 	return BasicLuaMethod(L, &CvPlayerAI::unitsRequiredForGoldenAge);

	push	OFFSET ?unitsRequiredForGoldenAge@CvPlayer@@QBEHXZ ; CvPlayer::unitsRequiredForGoldenAge
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 1998 : }

	pop	ebp
	ret	0
?lUnitsRequiredForGoldenAge@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lUnitsRequiredForGoldenAge
_TEXT	ENDS
EXTRN	?unitsGoldenAgeCapable@CvPlayer@@QBEHXZ:PROC	; CvPlayer::unitsGoldenAgeCapable
; Function compile flags: /Odtp
;	COMDAT ?lUnitsGoldenAgeCapable@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lUnitsGoldenAgeCapable@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lUnitsGoldenAgeCapable, COMDAT

; 2002 : {

	push	ebp
	mov	ebp, esp

; 2003 : 	return BasicLuaMethod(L, &CvPlayerAI::unitsGoldenAgeCapable);

	push	OFFSET ?unitsGoldenAgeCapable@CvPlayer@@QBEHXZ ; CvPlayer::unitsGoldenAgeCapable
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2004 : }

	pop	ebp
	ret	0
?lUnitsGoldenAgeCapable@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lUnitsGoldenAgeCapable
_TEXT	ENDS
EXTRN	?unitsGoldenAgeReady@CvPlayer@@QBEHXZ:PROC	; CvPlayer::unitsGoldenAgeReady
; Function compile flags: /Odtp
;	COMDAT ?lUnitsGoldenAgeReady@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lUnitsGoldenAgeReady@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lUnitsGoldenAgeReady, COMDAT

; 2008 : {

	push	ebp
	mov	ebp, esp

; 2009 : 	return BasicLuaMethod(L, &CvPlayerAI::unitsGoldenAgeReady);

	push	OFFSET ?unitsGoldenAgeReady@CvPlayer@@QBEHXZ ; CvPlayer::unitsGoldenAgeReady
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2010 : }

	pop	ebp
	ret	0
?lUnitsGoldenAgeReady@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lUnitsGoldenAgeReady
_TEXT	ENDS
EXTRN	?greatGeneralThreshold@CvPlayer@@QBEHXZ:PROC	; CvPlayer::greatGeneralThreshold
; Function compile flags: /Odtp
;	COMDAT ?lGreatGeneralThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGreatGeneralThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGreatGeneralThreshold, COMDAT

; 2014 : {

	push	ebp
	mov	ebp, esp

; 2015 : 	return BasicLuaMethod(L, &CvPlayerAI::greatGeneralThreshold);

	push	OFFSET ?greatGeneralThreshold@CvPlayer@@QBEHXZ ; CvPlayer::greatGeneralThreshold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2016 : }

	pop	ebp
	ret	0
?lGreatGeneralThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGreatGeneralThreshold
_TEXT	ENDS
EXTRN	?greatAdmiralThreshold@CvPlayer@@QBEHXZ:PROC	; CvPlayer::greatAdmiralThreshold
; Function compile flags: /Odtp
;	COMDAT ?lGreatAdmiralThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGreatAdmiralThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGreatAdmiralThreshold, COMDAT

; 2020 : {

	push	ebp
	mov	ebp, esp

; 2021 : 	return BasicLuaMethod(L, &CvPlayerAI::greatAdmiralThreshold);

	push	OFFSET ?greatAdmiralThreshold@CvPlayer@@QBEHXZ ; CvPlayer::greatAdmiralThreshold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2022 : }

	pop	ebp
	ret	0
?lGreatAdmiralThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGreatAdmiralThreshold
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4SpecialistTypes@@W4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4SpecialistTypes@@W4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum SpecialistTypes,enum YieldTypes>
EXTRN	?specialistYield@CvPlayer@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z:PROC ; CvPlayer::specialistYield
; Function compile flags: /Odtp
;	COMDAT ?lSpecialistYield@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSpecialistYield@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lSpecialistYield, COMDAT

; 2026 : {

	push	ebp
	mov	ebp, esp

; 2027 : 	return BasicLuaMethod(L, &CvPlayerAI::specialistYield);

	push	OFFSET ?specialistYield@CvPlayer@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z ; CvPlayer::specialistYield
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4SpecialistTypes@@W4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4SpecialistTypes@@W4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum SpecialistTypes,enum YieldTypes>
	add	esp, 8

; 2028 : }

	pop	ebp
	ret	0
?lSpecialistYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lSpecialistYield
_TEXT	ENDS
EXTRN	?SetGreatGeneralCombatBonus@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::SetGreatGeneralCombatBonus
; Function compile flags: /Odtp
;	COMDAT ?lSetGreatGeneralCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lSetGreatGeneralCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetGreatGeneralCombatBonus, COMDAT

; 2032 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2033 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2034 : 	const int iValue = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iValue$[ebp], eax

; 2035 : 
; 2036 : 	pkPlayer->SetGreatGeneralCombatBonus(iValue);

	mov	edx, DWORD PTR _iValue$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?SetGreatGeneralCombatBonus@CvPlayer@@QAEXH@Z ; CvPlayer::SetGreatGeneralCombatBonus

; 2037 : 	return 1;

	mov	eax, 1

; 2038 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetGreatGeneralCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetGreatGeneralCombatBonus
_TEXT	ENDS
EXTRN	?GetGreatGeneralCombatBonus@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetGreatGeneralCombatBonus
; Function compile flags: /Odtp
;	COMDAT ?lGetGreatGeneralCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatGeneralCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatGeneralCombatBonus, COMDAT

; 2042 : {

	push	ebp
	mov	ebp, esp

; 2043 : 	return BasicLuaMethod(L, &CvPlayerAI::GetGreatGeneralCombatBonus);

	push	OFFSET ?GetGreatGeneralCombatBonus@CvPlayer@@QBEHXZ ; CvPlayer::GetGreatGeneralCombatBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2044 : }

	pop	ebp
	ret	0
?lGetGreatGeneralCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatGeneralCombatBonus
_TEXT	ENDS
EXTRN	?getStartingPlot@CvPlayer@@QBEPAVCvPlot@@XZ:PROC ; CvPlayer::getStartingPlot
; Function compile flags: /Odtp
;	COMDAT ?lGetStartingPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_pkPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetStartingPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetStartingPlot, COMDAT

; 2049 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2050 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2051 : 
; 2052 : 	CvPlot* pkPlot = pkPlayer->getStartingPlot();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getStartingPlot@CvPlayer@@QBEPAVCvPlot@@XZ ; CvPlayer::getStartingPlot
	mov	DWORD PTR _pkPlot$[ebp], eax

; 2053 : 	CvLuaPlot::Push(L, pkPlot);

	mov	ecx, DWORD PTR _pkPlot$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8

; 2054 : 	return 1;

	mov	eax, 1

; 2055 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetStartingPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetStartingPlot
_TEXT	ENDS
EXTRN	?setStartingPlot@CvPlayer@@QAEXPAVCvPlot@@@Z:PROC ; CvPlayer::setStartingPlot
; Function compile flags: /Odtp
;	COMDAT ?lSetStartingPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_pkPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lSetStartingPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lSetStartingPlot, COMDAT

; 2059 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2060 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2061 : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlot$[ebp], eax

; 2062 : 	pkPlayer->setStartingPlot(pkPlot);

	mov	edx, DWORD PTR _pkPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?setStartingPlot@CvPlayer@@QAEXPAVCvPlot@@@Z ; CvPlayer::setStartingPlot

; 2063 : 	return 0;

	xor	eax, eax

; 2064 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetStartingPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lSetStartingPlot
_TEXT	ENDS
EXTRN	?getTotalPopulation@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getTotalPopulation
; Function compile flags: /Odtp
;	COMDAT ?lGetTotalPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTotalPopulation, COMDAT

; 2068 : {

	push	ebp
	mov	ebp, esp

; 2069 : 	return BasicLuaMethod(L, &CvPlayerAI::getTotalPopulation);

	push	OFFSET ?getTotalPopulation@CvPlayer@@QBEHXZ ; CvPlayer::getTotalPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2070 : }

	pop	ebp
	ret	0
?lGetTotalPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTotalPopulation
_TEXT	ENDS
EXTRN	?getAveragePopulation@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getAveragePopulation
; Function compile flags: /Odtp
;	COMDAT ?lGetAveragePopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAveragePopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAveragePopulation, COMDAT

; 2074 : {

	push	ebp
	mov	ebp, esp

; 2075 : 	return BasicLuaMethod(L, &CvPlayerAI::getAveragePopulation);

	push	OFFSET ?getAveragePopulation@CvPlayer@@QBEHXZ ; CvPlayer::getAveragePopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2076 : }

	pop	ebp
	ret	0
?lGetAveragePopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAveragePopulation
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@J@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEJXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<long>
EXTRN	?getRealPopulation@CvPlayer@@QBEJXZ:PROC	; CvPlayer::getRealPopulation
; Function compile flags: /Odtp
;	COMDAT ?lGetRealPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRealPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetRealPopulation, COMDAT

; 2080 : {

	push	ebp
	mov	ebp, esp

; 2081 : 	return BasicLuaMethod(L, &CvPlayerAI::getRealPopulation);

	push	OFFSET ?getRealPopulation@CvPlayer@@QBEJXZ ; CvPlayer::getRealPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@J@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEJXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<long>
	add	esp, 8

; 2082 : }

	pop	ebp
	ret	0
?lGetRealPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetRealPopulation
_TEXT	ENDS
EXTRN	?GetNewCityExtraPopulation@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetNewCityExtraPopulation
; Function compile flags: /Odtp
;	COMDAT ?lGetNewCityExtraPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNewCityExtraPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNewCityExtraPopulation, COMDAT

; 2086 : {

	push	ebp
	mov	ebp, esp

; 2087 : 	return BasicLuaMethod(L, &CvPlayerAI::GetNewCityExtraPopulation);

	push	OFFSET ?GetNewCityExtraPopulation@CvPlayer@@QBEHXZ ; CvPlayer::GetNewCityExtraPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2088 : }

	pop	ebp
	ret	0
?lGetNewCityExtraPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNewCityExtraPopulation
_TEXT	ENDS
EXTRN	?ChangeNewCityExtraPopulation@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeNewCityExtraPopulation
; Function compile flags: /Odtp
;	COMDAT ?lChangeNewCityExtraPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lChangeNewCityExtraPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNewCityExtraPopulation, COMDAT

; 2092 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2093 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2094 : 	int iValue = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iValue$[ebp], eax

; 2095 : 	pkPlayer->ChangeNewCityExtraPopulation(iValue);

	mov	edx, DWORD PTR _iValue$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?ChangeNewCityExtraPopulation@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeNewCityExtraPopulation

; 2096 : 
; 2097 : 	return 1;

	mov	eax, 1

; 2098 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChangeNewCityExtraPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNewCityExtraPopulation
_TEXT	ENDS
EXTRN	?getTotalLand@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getTotalLand
; Function compile flags: /Odtp
;	COMDAT ?lGetTotalLand@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalLand@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetTotalLand, COMDAT

; 2102 : {

	push	ebp
	mov	ebp, esp

; 2103 : 	return BasicLuaMethod(L, &CvPlayerAI::getTotalLand);

	push	OFFSET ?getTotalLand@CvPlayer@@QBEHXZ	; CvPlayer::getTotalLand
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2104 : }

	pop	ebp
	ret	0
?lGetTotalLand@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetTotalLand
_TEXT	ENDS
EXTRN	?getTotalLandScored@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getTotalLandScored
; Function compile flags: /Odtp
;	COMDAT ?lGetTotalLandScored@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalLandScored@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTotalLandScored, COMDAT

; 2108 : {

	push	ebp
	mov	ebp, esp

; 2109 : 	return BasicLuaMethod(L, &CvPlayerAI::getTotalLandScored);

	push	OFFSET ?getTotalLandScored@CvPlayer@@QBEHXZ ; CvPlayer::getTotalLandScored
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2110 : }

	pop	ebp
	ret	0
?lGetTotalLandScored@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTotalLandScored
_TEXT	ENDS
EXTRN	?GetGold@CvTreasury@@QBEHXZ:PROC		; CvTreasury::GetGold
; Function compile flags: /Odtp
;	COMDAT ?lGetGold@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetGold@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lGetGold, COMDAT

; 2114 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2115 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2116 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->GetGold());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGold@CvTreasury@@QBEHXZ		; CvTreasury::GetGold
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2117 : 	return 1;

	mov	eax, 1

; 2118 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lGetGold
_TEXT	ENDS
EXTRN	?SetGold@CvTreasury@@QAEXH@Z:PROC		; CvTreasury::SetGold
; Function compile flags: /Odtp
;	COMDAT ?lSetGold@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lSetGold@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lSetGold, COMDAT

; 2122 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2123 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2124 : 	int iValue = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iValue$[ebp], eax

; 2125 : 	pkPlayer->GetTreasury()->SetGold(iValue);

	mov	edx, DWORD PTR _iValue$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?SetGold@CvTreasury@@QAEXH@Z		; CvTreasury::SetGold

; 2126 : 
; 2127 : 	return 1;

	mov	eax, 1

; 2128 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lSetGold
_TEXT	ENDS
EXTRN	?ChangeGold@CvTreasury@@QAEXH@Z:PROC		; CvTreasury::ChangeGold
; Function compile flags: /Odtp
;	COMDAT ?lChangeGold@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lChangeGold@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lChangeGold, COMDAT

; 2132 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2133 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2134 : 	int iValue = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iValue$[ebp], eax

; 2135 : 	pkPlayer->GetTreasury()->ChangeGold(iValue);

	mov	edx, DWORD PTR _iValue$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?ChangeGold@CvTreasury@@QAEXH@Z		; CvTreasury::ChangeGold

; 2136 : 
; 2137 : 	return 1;

	mov	eax, 1

; 2138 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChangeGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lChangeGold
_TEXT	ENDS
EXTRN	?CalculateGrossGold@CvTreasury@@QAEHXZ:PROC	; CvTreasury::CalculateGrossGold
; Function compile flags: /Odtp
;	COMDAT ?lCalculateGrossGold@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lCalculateGrossGold@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCalculateGrossGold, COMDAT

; 2142 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2143 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2144 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->CalculateGrossGold());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?CalculateGrossGold@CvTreasury@@QAEHXZ	; CvTreasury::CalculateGrossGold
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2145 : 	return 1;

	mov	eax, 1

; 2146 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCalculateGrossGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCalculateGrossGold
_TEXT	ENDS
EXTRN	?GetLifetimeGrossGold@CvTreasury@@QAEHXZ:PROC	; CvTreasury::GetLifetimeGrossGold
; Function compile flags: /Odtp
;	COMDAT ?lGetLifetimeGrossGold@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetLifetimeGrossGold@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetLifetimeGrossGold, COMDAT

; 2150 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2151 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2152 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->GetLifetimeGrossGold());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetLifetimeGrossGold@CvTreasury@@QAEHXZ ; CvTreasury::GetLifetimeGrossGold
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2153 : 	return 1;

	mov	eax, 1

; 2154 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetLifetimeGrossGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetLifetimeGrossGold
_TEXT	ENDS
EXTRN	?GetGoldFromCitiesTimes100@CvTreasury@@QBEH_N@Z:PROC ; CvTreasury::GetGoldFromCitiesTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetGoldFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetGoldFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldFromCitiesTimes100, COMDAT

; 2158 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2159 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2160 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->GetGoldFromCitiesTimes100());

	push	0
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGoldFromCitiesTimes100@CvTreasury@@QBEH_N@Z ; CvTreasury::GetGoldFromCitiesTimes100
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2161 : 	return 1;

	mov	eax, 1

; 2162 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetGoldFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldFromCitiesTimes100
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetGoldFromCitiesMinusTradeRoutesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetGoldFromCitiesMinusTradeRoutesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldFromCitiesMinusTradeRoutesTimes100, COMDAT

; 2165 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2166 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2167 : 	int iResult = pkPlayer->GetTreasury()->GetGoldFromCitiesTimes100(true);

	push	1
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGoldFromCitiesTimes100@CvTreasury@@QBEH_N@Z ; CvTreasury::GetGoldFromCitiesTimes100
	mov	DWORD PTR _iResult$[ebp], eax

; 2168 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2169 : 	return 1;

	mov	eax, 1

; 2170 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetGoldFromCitiesMinusTradeRoutesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldFromCitiesMinusTradeRoutesTimes100
_TEXT	ENDS
EXTRN	?GetGoldPerTurnFromDiplomacy@CvTreasury@@QBEHXZ:PROC ; CvTreasury::GetGoldPerTurnFromDiplomacy
; Function compile flags: /Odtp
;	COMDAT ?lGetGoldPerTurnFromDiplomacy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetGoldPerTurnFromDiplomacy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldPerTurnFromDiplomacy, COMDAT

; 2175 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2176 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2177 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->GetGoldPerTurnFromDiplomacy());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGoldPerTurnFromDiplomacy@CvTreasury@@QBEHXZ ; CvTreasury::GetGoldPerTurnFromDiplomacy
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2178 : 	return 1;

	mov	eax, 1

; 2179 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetGoldPerTurnFromDiplomacy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldPerTurnFromDiplomacy
_TEXT	ENDS
EXTRN	?GetCityConnectionRouteGoldTimes100@CvTreasury@@QBEHPAVCvCity@@@Z:PROC ; CvTreasury::GetCityConnectionRouteGoldTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetCityConnectionRouteGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCityConnectionRouteGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCityConnectionRouteGoldTimes100, COMDAT

; 2183 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2184 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2185 : 	CvCity* pkCity = CvLuaCity::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 2186 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->GetCityConnectionRouteGoldTimes100(pkCity));

	mov	edx, DWORD PTR _pkCity$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetCityConnectionRouteGoldTimes100@CvTreasury@@QBEHPAVCvCity@@@Z ; CvTreasury::GetCityConnectionRouteGoldTimes100
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 2187 : 	return 1;

	mov	eax, 1

; 2188 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCityConnectionRouteGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCityConnectionRouteGoldTimes100
_TEXT	ENDS
EXTRN	?GetCityConnectionGold@CvTreasury@@QBEHXZ:PROC	; CvTreasury::GetCityConnectionGold
; Function compile flags: /Odtp
;	COMDAT ?lGetCityConnectionGold@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCityConnectionGold@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCityConnectionGold, COMDAT

; 2192 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2193 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2194 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->GetCityConnectionGold());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetCityConnectionGold@CvTreasury@@QBEHXZ ; CvTreasury::GetCityConnectionGold
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2195 : 	return 1;

	mov	eax, 1

; 2196 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCityConnectionGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCityConnectionGold
_TEXT	ENDS
EXTRN	?GetCityConnectionGoldTimes100@CvTreasury@@QBEHXZ:PROC ; CvTreasury::GetCityConnectionGoldTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetCityConnectionGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCityConnectionGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCityConnectionGoldTimes100, COMDAT

; 2200 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2201 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2202 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->GetCityConnectionGoldTimes100());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetCityConnectionGoldTimes100@CvTreasury@@QBEHXZ ; CvTreasury::GetCityConnectionGoldTimes100
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2203 : 	return 1;

	mov	eax, 1

; 2204 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCityConnectionGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCityConnectionGoldTimes100
_TEXT	ENDS
EXTRN	?GetGoldPerTurnFromReligion@CvTreasury@@QBEHXZ:PROC ; CvTreasury::GetGoldPerTurnFromReligion
; Function compile flags: /Odtp
;	COMDAT ?lGetGoldPerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetGoldPerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldPerTurnFromReligion, COMDAT

; 2208 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2209 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2210 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->GetGoldPerTurnFromReligion());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGoldPerTurnFromReligion@CvTreasury@@QBEHXZ ; CvTreasury::GetGoldPerTurnFromReligion
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2211 : 	return 1;

	mov	eax, 1

; 2212 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetGoldPerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldPerTurnFromReligion
_TEXT	ENDS
EXTRN	?GetGoldPerTurnFromTradeRoutes@CvTreasury@@QBEHXZ:PROC ; CvTreasury::GetGoldPerTurnFromTradeRoutes
; Function compile flags: /Odtp
;	COMDAT ?lGetGoldPerTurnFromTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetGoldPerTurnFromTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldPerTurnFromTradeRoutes, COMDAT

; 2216 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2217 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2218 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->GetGoldPerTurnFromTradeRoutes());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGoldPerTurnFromTradeRoutes@CvTreasury@@QBEHXZ ; CvTreasury::GetGoldPerTurnFromTradeRoutes
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2219 : 	return 1;

	mov	eax, 1

; 2220 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetGoldPerTurnFromTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldPerTurnFromTradeRoutes
_TEXT	ENDS
EXTRN	?GetGoldPerTurnFromTradeRoutesTimes100@CvTreasury@@QBEHXZ:PROC ; CvTreasury::GetGoldPerTurnFromTradeRoutesTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetGoldPerTurnFromTradeRoutesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetGoldPerTurnFromTradeRoutesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldPerTurnFromTradeRoutesTimes100, COMDAT

; 2224 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2225 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2226 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->GetGoldPerTurnFromTradeRoutesTimes100());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGoldPerTurnFromTradeRoutesTimes100@CvTreasury@@QBEHXZ ; CvTreasury::GetGoldPerTurnFromTradeRoutesTimes100
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2227 : 	return 1;

	mov	eax, 1

; 2228 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetGoldPerTurnFromTradeRoutesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldPerTurnFromTradeRoutesTimes100
_TEXT	ENDS
EXTRN	?GetGoldPerTurnFromTraits@CvTreasury@@QBEHXZ:PROC ; CvTreasury::GetGoldPerTurnFromTraits
; Function compile flags: /Odtp
;	COMDAT ?lGetGoldPerTurnFromTraits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetGoldPerTurnFromTraits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldPerTurnFromTraits, COMDAT

; 2232 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2233 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2234 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->GetGoldPerTurnFromTraits());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGoldPerTurnFromTraits@CvTreasury@@QBEHXZ ; CvTreasury::GetGoldPerTurnFromTraits
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2235 : 	return 1;

	mov	eax, 1

; 2236 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetGoldPerTurnFromTraits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldPerTurnFromTraits
_TEXT	ENDS
EXTRN	?GetTotalJONSCulturePerTurnTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetTotalJONSCulturePerTurnTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetTotalJONSCulturePerTurnTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalJONSCulturePerTurnTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTotalJONSCulturePerTurnTimes100, COMDAT

; 2239 : {

	push	ebp
	mov	ebp, esp

; 2240 : 	return BasicLuaMethod(L, &CvPlayerAI::GetTotalJONSCulturePerTurnTimes100);

	push	OFFSET ?GetTotalJONSCulturePerTurnTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetTotalJONSCulturePerTurnTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2241 : }

	pop	ebp
	ret	0
?lGetTotalJONSCulturePerTurnTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTotalJONSCulturePerTurnTimes100
_TEXT	ENDS
EXTRN	?GetJONSCulturePerTurnFromCitiesTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetJONSCulturePerTurnFromCitiesTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCulturePerTurnFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetJONSCulturePerTurnFromCitiesTimes100, COMDAT

; 2243 : {

	push	ebp
	mov	ebp, esp

; 2244 : 	return BasicLuaMethod(L, &CvPlayerAI::GetJONSCulturePerTurnFromCitiesTimes100);

	push	OFFSET ?GetJONSCulturePerTurnFromCitiesTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetJONSCulturePerTurnFromCitiesTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2245 : }

	pop	ebp
	ret	0
?lGetJONSCulturePerTurnFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetJONSCulturePerTurnFromCitiesTimes100
_TEXT	ENDS
EXTRN	?GetJONSCulturePerTurnFromExcessHappinessTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetJONSCulturePerTurnFromExcessHappinessTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCulturePerTurnFromExcessHappinessTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromExcessHappinessTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetJONSCulturePerTurnFromExcessHappinessTimes100, COMDAT

; 2247 : {

	push	ebp
	mov	ebp, esp

; 2248 : 	return BasicLuaMethod(L, &CvPlayerAI::GetJONSCulturePerTurnFromExcessHappinessTimes100);

	push	OFFSET ?GetJONSCulturePerTurnFromExcessHappinessTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetJONSCulturePerTurnFromExcessHappinessTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2249 : }

	pop	ebp
	ret	0
?lGetJONSCulturePerTurnFromExcessHappinessTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetJONSCulturePerTurnFromExcessHappinessTimes100
_TEXT	ENDS
EXTRN	?GetCulturePerTurnFromReligionTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetCulturePerTurnFromReligionTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetCulturePerTurnFromReligionTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCulturePerTurnFromReligionTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCulturePerTurnFromReligionTimes100, COMDAT

; 2251 : {

	push	ebp
	mov	ebp, esp

; 2252 : 	return BasicLuaMethod(L, &CvPlayerAI::GetCulturePerTurnFromReligionTimes100);

	push	OFFSET ?GetCulturePerTurnFromReligionTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetCulturePerTurnFromReligionTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2253 : }

	pop	ebp
	ret	0
?lGetCulturePerTurnFromReligionTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCulturePerTurnFromReligionTimes100
_TEXT	ENDS
EXTRN	?GetCulturePerTurnFromBonusTurnsTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetCulturePerTurnFromBonusTurnsTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetCulturePerTurnFromBonusTurnsTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCulturePerTurnFromBonusTurnsTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCulturePerTurnFromBonusTurnsTimes100, COMDAT

; 2255 : {

	push	ebp
	mov	ebp, esp

; 2256 : 	return BasicLuaMethod(L, &CvPlayerAI::GetCulturePerTurnFromBonusTurnsTimes100);

	push	OFFSET ?GetCulturePerTurnFromBonusTurnsTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetCulturePerTurnFromBonusTurnsTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2257 : }

	pop	ebp
	ret	0
?lGetCulturePerTurnFromBonusTurnsTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCulturePerTurnFromBonusTurnsTimes100
_TEXT	ENDS
EXTRN	?getJONSCultureTimes100@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getJONSCultureTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetJONSCultureTimes100, COMDAT

; 2259 : {

	push	ebp
	mov	ebp, esp

; 2260 : 	return BasicLuaMethod(L, &CvPlayerAI::getJONSCultureTimes100);

	push	OFFSET ?getJONSCultureTimes100@CvPlayer@@QBEHXZ ; CvPlayer::getJONSCultureTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2261 : }

	pop	ebp
	ret	0
?lGetJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetJONSCultureTimes100
_TEXT	ENDS
EXTRN	?setJONSCultureTimes100@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::setJONSCultureTimes100
; Function compile flags: /Odtp
;	COMDAT ?lSetJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetJONSCultureTimes100, COMDAT

; 2263 : {

	push	ebp
	mov	ebp, esp

; 2264 : 	return BasicLuaMethod(L, &CvPlayerAI::setJONSCultureTimes100);

	push	OFFSET ?setJONSCultureTimes100@CvPlayer@@QAEXH@Z ; CvPlayer::setJONSCultureTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2265 : }

	pop	ebp
	ret	0
?lSetJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetJONSCultureTimes100
_TEXT	ENDS
EXTRN	?changeJONSCultureTimes100@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::changeJONSCultureTimes100
; Function compile flags: /Odtp
;	COMDAT ?lChangeJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeJONSCultureTimes100, COMDAT

; 2267 : {

	push	ebp
	mov	ebp, esp

; 2268 : 	return BasicLuaMethod(L, &CvPlayerAI::changeJONSCultureTimes100);

	push	OFFSET ?changeJONSCultureTimes100@CvPlayer@@QAEXH@Z ; CvPlayer::changeJONSCultureTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2269 : }

	pop	ebp
	ret	0
?lChangeJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeJONSCultureTimes100
_TEXT	ENDS
EXTRN	?GetJONSCultureEverGeneratedTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetJONSCultureEverGeneratedTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCultureEverGeneratedTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCultureEverGeneratedTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetJONSCultureEverGeneratedTimes100, COMDAT

; 2271 : {

	push	ebp
	mov	ebp, esp

; 2272 : 	return BasicLuaMethod(L, &CvPlayerAI::GetJONSCultureEverGeneratedTimes100);

	push	OFFSET ?GetJONSCultureEverGeneratedTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetJONSCultureEverGeneratedTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2273 : }

	pop	ebp
	ret	0
?lGetJONSCultureEverGeneratedTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetJONSCultureEverGeneratedTimes100
_TEXT	ENDS
EXTRN	?GetTotalJONSCulturePerTurn@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetTotalJONSCulturePerTurn
; Function compile flags: /Odtp
;	COMDAT ?lGetTotalJONSCulturePerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalJONSCulturePerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTotalJONSCulturePerTurn, COMDAT

; 2278 : {

	push	ebp
	mov	ebp, esp

; 2279 : 	return BasicLuaMethod(L, &CvPlayerAI::GetTotalJONSCulturePerTurn);

	push	OFFSET ?GetTotalJONSCulturePerTurn@CvPlayer@@QBEHXZ ; CvPlayer::GetTotalJONSCulturePerTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2280 : }

	pop	ebp
	ret	0
?lGetTotalJONSCulturePerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTotalJONSCulturePerTurn
_TEXT	ENDS
EXTRN	?GetJONSCulturePerTurnFromCities@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetJONSCulturePerTurnFromCities
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCulturePerTurnFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetJONSCulturePerTurnFromCities, COMDAT

; 2284 : {

	push	ebp
	mov	ebp, esp

; 2285 : 	return BasicLuaMethod(L, &CvPlayerAI::GetJONSCulturePerTurnFromCities);

	push	OFFSET ?GetJONSCulturePerTurnFromCities@CvPlayer@@QBEHXZ ; CvPlayer::GetJONSCulturePerTurnFromCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2286 : }

	pop	ebp
	ret	0
?lGetJONSCulturePerTurnFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetJONSCulturePerTurnFromCities
_TEXT	ENDS
EXTRN	?GetJONSCulturePerTurnFromExcessHappiness@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetJONSCulturePerTurnFromExcessHappiness
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCulturePerTurnFromExcessHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromExcessHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetJONSCulturePerTurnFromExcessHappiness, COMDAT

; 2290 : {

	push	ebp
	mov	ebp, esp

; 2291 : 	return BasicLuaMethod(L, &CvPlayerAI::GetJONSCulturePerTurnFromExcessHappiness);

	push	OFFSET ?GetJONSCulturePerTurnFromExcessHappiness@CvPlayer@@QBEHXZ ; CvPlayer::GetJONSCulturePerTurnFromExcessHappiness
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2292 : }

	pop	ebp
	ret	0
?lGetJONSCulturePerTurnFromExcessHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetJONSCulturePerTurnFromExcessHappiness
_TEXT	ENDS
EXTRN	?GetJONSCulturePerTurnFromTraits@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetJONSCulturePerTurnFromTraits
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCulturePerTurnFromTraits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromTraits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetJONSCulturePerTurnFromTraits, COMDAT

; 2296 : {

	push	ebp
	mov	ebp, esp

; 2297 : 	return BasicLuaMethod(L, &CvPlayerAI::GetJONSCulturePerTurnFromTraits);

	push	OFFSET ?GetJONSCulturePerTurnFromTraits@CvPlayer@@QBEHXZ ; CvPlayer::GetJONSCulturePerTurnFromTraits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2298 : }

	pop	ebp
	ret	0
?lGetJONSCulturePerTurnFromTraits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetJONSCulturePerTurnFromTraits
_TEXT	ENDS
EXTRN	?GetCultureWonderMultiplier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetCultureWonderMultiplier
; Function compile flags: /Odtp
;	COMDAT ?lGetCultureWonderMultiplier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCultureWonderMultiplier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCultureWonderMultiplier, COMDAT

; 2302 : {

	push	ebp
	mov	ebp, esp

; 2303 : 	return BasicLuaMethod(L, &CvPlayerAI::GetCultureWonderMultiplier);

	push	OFFSET ?GetCultureWonderMultiplier@CvPlayer@@QBEHXZ ; CvPlayer::GetCultureWonderMultiplier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2304 : }

	pop	ebp
	ret	0
?lGetCultureWonderMultiplier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCultureWonderMultiplier
_TEXT	ENDS
EXTRN	?GetJONSCulturePerTurnForFree@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetJONSCulturePerTurnForFree
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCulturePerTurnForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetJONSCulturePerTurnForFree, COMDAT

; 2308 : {

	push	ebp
	mov	ebp, esp

; 2309 : 	return BasicLuaMethod(L, &CvPlayerAI::GetJONSCulturePerTurnForFree);

	push	OFFSET ?GetJONSCulturePerTurnForFree@CvPlayer@@QBEHXZ ; CvPlayer::GetJONSCulturePerTurnForFree
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2310 : }

	pop	ebp
	ret	0
?lGetJONSCulturePerTurnForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetJONSCulturePerTurnForFree
_TEXT	ENDS
EXTRN	?ChangeJONSCulturePerTurnForFree@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeJONSCulturePerTurnForFree
; Function compile flags: /Odtp
;	COMDAT ?lChangeJONSCulturePerTurnForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeJONSCulturePerTurnForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeJONSCulturePerTurnForFree, COMDAT

; 2314 : {

	push	ebp
	mov	ebp, esp

; 2315 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeJONSCulturePerTurnForFree);

	push	OFFSET ?ChangeJONSCulturePerTurnForFree@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeJONSCulturePerTurnForFree
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2316 : }

	pop	ebp
	ret	0
?lChangeJONSCulturePerTurnForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeJONSCulturePerTurnForFree
_TEXT	ENDS
EXTRN	?GetJONSCulturePerTurnFromMinorCivs@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetJONSCulturePerTurnFromMinorCivs
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetJONSCulturePerTurnFromMinorCivs, COMDAT

; 2321 : {

	push	ebp
	mov	ebp, esp

; 2322 : 	return BasicLuaMethod(L, &CvPlayerAI::GetJONSCulturePerTurnFromMinorCivs);

	push	OFFSET ?GetJONSCulturePerTurnFromMinorCivs@CvPlayer@@QBEHXZ ; CvPlayer::GetJONSCulturePerTurnFromMinorCivs
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2323 : }

	pop	ebp
	ret	0
?lGetJONSCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetJONSCulturePerTurnFromMinorCivs
_TEXT	ENDS
EXTRN	?ChangeJONSCulturePerTurnFromMinorCivs@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeJONSCulturePerTurnFromMinorCivs
; Function compile flags: /Odtp
;	COMDAT ?lChangeJONSCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeJONSCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeJONSCulturePerTurnFromMinorCivs, COMDAT

; 2328 : {

	push	ebp
	mov	ebp, esp

; 2329 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeJONSCulturePerTurnFromMinorCivs);

	push	OFFSET ?ChangeJONSCulturePerTurnFromMinorCivs@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeJONSCulturePerTurnFromMinorCivs
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2330 : }

	pop	ebp
	ret	0
?lChangeJONSCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeJONSCulturePerTurnFromMinorCivs
_TEXT	ENDS
EXTRN	?GetCulturePerTurnFromMinorCivs@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetCulturePerTurnFromMinorCivs
; Function compile flags: /Odtp
;	COMDAT ?lGetCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCulturePerTurnFromMinorCivs, COMDAT

; 2334 : {

	push	ebp
	mov	ebp, esp

; 2335 : 	return BasicLuaMethod(L, &CvPlayerAI::GetCulturePerTurnFromMinorCivs);

	push	OFFSET ?GetCulturePerTurnFromMinorCivs@CvPlayer@@QBEHXZ ; CvPlayer::GetCulturePerTurnFromMinorCivs
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2336 : }

	pop	ebp
	ret	0
?lGetCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCulturePerTurnFromMinorCivs
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum PlayerTypes>
EXTRN	?GetCulturePerTurnFromMinor@CvPlayer@@QBEHW4PlayerTypes@@@Z:PROC ; CvPlayer::GetCulturePerTurnFromMinor
; Function compile flags: /Odtp
;	COMDAT ?lGetCulturePerTurnFromMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCulturePerTurnFromMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCulturePerTurnFromMinor, COMDAT

; 2340 : {

	push	ebp
	mov	ebp, esp

; 2341 : 	return BasicLuaMethod(L, &CvPlayerAI::GetCulturePerTurnFromMinor);

	push	OFFSET ?GetCulturePerTurnFromMinor@CvPlayer@@QBEHW4PlayerTypes@@@Z ; CvPlayer::GetCulturePerTurnFromMinor
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum PlayerTypes>
	add	esp, 8

; 2342 : }

	pop	ebp
	ret	0
?lGetCulturePerTurnFromMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCulturePerTurnFromMinor
_TEXT	ENDS
EXTRN	?GetCulturePerTurnFromReligion@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetCulturePerTurnFromReligion
; Function compile flags: /Odtp
;	COMDAT ?lGetCulturePerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCulturePerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCulturePerTurnFromReligion, COMDAT

; 2346 : {

	push	ebp
	mov	ebp, esp

; 2347 : 	return BasicLuaMethod(L, &CvPlayerAI::GetCulturePerTurnFromReligion);

	push	OFFSET ?GetCulturePerTurnFromReligion@CvPlayer@@QBEHXZ ; CvPlayer::GetCulturePerTurnFromReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2348 : }

	pop	ebp
	ret	0
?lGetCulturePerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCulturePerTurnFromReligion
_TEXT	ENDS
EXTRN	?GetCulturePerTurnFromBonusTurns@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetCulturePerTurnFromBonusTurns
; Function compile flags: /Odtp
;	COMDAT ?lGetCulturePerTurnFromBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCulturePerTurnFromBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCulturePerTurnFromBonusTurns, COMDAT

; 2352 : {

	push	ebp
	mov	ebp, esp

; 2353 : 	return BasicLuaMethod(L, &CvPlayerAI::GetCulturePerTurnFromBonusTurns);

	push	OFFSET ?GetCulturePerTurnFromBonusTurns@CvPlayer@@QBEHXZ ; CvPlayer::GetCulturePerTurnFromBonusTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2354 : }

	pop	ebp
	ret	0
?lGetCulturePerTurnFromBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCulturePerTurnFromBonusTurns
_TEXT	ENDS
EXTRN	?GetJONSCultureCityModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetJONSCultureCityModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetCultureCityModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCultureCityModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCultureCityModifier, COMDAT

; 2358 : {

	push	ebp
	mov	ebp, esp

; 2359 : 	return BasicLuaMethod(L, &CvPlayerAI::GetJONSCultureCityModifier);

	push	OFFSET ?GetJONSCultureCityModifier@CvPlayer@@QBEHXZ ; CvPlayer::GetJONSCultureCityModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2360 : }

	pop	ebp
	ret	0
?lGetCultureCityModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCultureCityModifier
_TEXT	ENDS
EXTRN	?getJONSCulture@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getJONSCulture
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetJONSCulture, COMDAT

; 2365 : {

	push	ebp
	mov	ebp, esp

; 2366 : 	return BasicLuaMethod(L, &CvPlayerAI::getJONSCulture);

	push	OFFSET ?getJONSCulture@CvPlayer@@QBEHXZ	; CvPlayer::getJONSCulture
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2367 : }

	pop	ebp
	ret	0
?lGetJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetJONSCulture
_TEXT	ENDS
EXTRN	?setJONSCulture@CvPlayer@@QAEXH@Z:PROC		; CvPlayer::setJONSCulture
; Function compile flags: /Odtp
;	COMDAT ?lSetJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lSetJONSCulture, COMDAT

; 2371 : {

	push	ebp
	mov	ebp, esp

; 2372 : 	return BasicLuaMethod(L, &CvPlayerAI::setJONSCulture);

	push	OFFSET ?setJONSCulture@CvPlayer@@QAEXH@Z ; CvPlayer::setJONSCulture
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2373 : }

	pop	ebp
	ret	0
?lSetJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lSetJONSCulture
_TEXT	ENDS
EXTRN	?changeJONSCulture@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::changeJONSCulture
; Function compile flags: /Odtp
;	COMDAT ?lChangeJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeJONSCulture, COMDAT

; 2377 : {

	push	ebp
	mov	ebp, esp

; 2378 : 	return BasicLuaMethod(L, &CvPlayerAI::changeJONSCulture);

	push	OFFSET ?changeJONSCulture@CvPlayer@@QAEXH@Z ; CvPlayer::changeJONSCulture
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2379 : }

	pop	ebp
	ret	0
?lChangeJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeJONSCulture
_TEXT	ENDS
EXTRN	?GetJONSCultureEverGenerated@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetJONSCultureEverGenerated
; Function compile flags: /Odtp
;	COMDAT ?lGetJONSCultureEverGenerated@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCultureEverGenerated@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetJONSCultureEverGenerated, COMDAT

; 2383 : {

	push	ebp
	mov	ebp, esp

; 2384 : 	return BasicLuaMethod(L, &CvPlayerAI::GetJONSCultureEverGenerated);

	push	OFFSET ?GetJONSCultureEverGenerated@CvPlayer@@QBEHXZ ; CvPlayer::GetJONSCultureEverGenerated
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2385 : }

	pop	ebp
	ret	0
?lGetJONSCultureEverGenerated@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetJONSCultureEverGenerated
_TEXT	ENDS
EXTRN	?GetLastTurnLifetimeCulture@CvPlayerCulture@@QBEHXZ:PROC ; CvPlayerCulture::GetLastTurnLifetimeCulture
EXTRN	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ:PROC ; CvPlayer::GetCulture
; Function compile flags: /Odtp
;	COMDAT ?lGetLastTurnLifetimeCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetLastTurnLifetimeCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetLastTurnLifetimeCulture, COMDAT

; 2389 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2390 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2391 : 	const int iResult = pkPlayer->GetCulture()->GetLastTurnLifetimeCulture();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetLastTurnLifetimeCulture@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetLastTurnLifetimeCulture
	mov	DWORD PTR _iResult$[ebp], eax

; 2392 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2393 : 	return 1;

	mov	eax, 1

; 2394 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetLastTurnLifetimeCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetLastTurnLifetimeCulture
_TEXT	ENDS
EXTRN	?GetInfluenceOn@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetInfluenceOn
; Function compile flags: /Odtp
;	COMDAT ?lGetInfluenceOn@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetInfluenceOn@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetInfluenceOn, COMDAT

; 2398 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2399 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2400 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 2401 : 	const int iResult = pkPlayer->GetCulture()->GetInfluenceOn(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetInfluenceOn@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z ; CvPlayerCulture::GetInfluenceOn
	mov	DWORD PTR _iResult$[ebp], eax

; 2402 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2403 : 	return 1;

	mov	eax, 1

; 2404 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetInfluenceOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetInfluenceOn
_TEXT	ENDS
EXTRN	?GetLastTurnInfluenceOn@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetLastTurnInfluenceOn
; Function compile flags: /Odtp
;	COMDAT ?lGetLastTurnInfluenceOn@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetLastTurnInfluenceOn@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetLastTurnInfluenceOn, COMDAT

; 2408 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2409 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2410 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 2411 : 	const int iResult = pkPlayer->GetCulture()->GetLastTurnInfluenceOn(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetLastTurnInfluenceOn@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z ; CvPlayerCulture::GetLastTurnInfluenceOn
	mov	DWORD PTR _iResult$[ebp], eax

; 2412 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2413 : 	return 1;

	mov	eax, 1

; 2414 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetLastTurnInfluenceOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetLastTurnInfluenceOn
_TEXT	ENDS
EXTRN	?GetInfluencePerTurn@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetInfluencePerTurn
; Function compile flags: /Odtp
;	COMDAT ?lGetInfluencePerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetInfluencePerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInfluencePerTurn, COMDAT

; 2418 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2419 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2420 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 2421 : 	const int iResult = pkPlayer->GetCulture()->GetInfluencePerTurn(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetInfluencePerTurn@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z ; CvPlayerCulture::GetInfluencePerTurn
	mov	DWORD PTR _iResult$[ebp], eax

; 2422 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2423 : 	return 1;

	mov	eax, 1

; 2424 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetInfluencePerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInfluencePerTurn
_TEXT	ENDS
EXTRN	?GetInfluenceLevel@CvPlayerCulture@@QBE?AW4InfluenceLevelTypes@@W4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetInfluenceLevel
; Function compile flags: /Odtp
;	COMDAT ?lGetInfluenceLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_eResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetInfluenceLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInfluenceLevel, COMDAT

; 2428 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2429 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2430 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 2431 : 	InfluenceLevelTypes eResult = pkPlayer->GetCulture()->GetInfluenceLevel(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetInfluenceLevel@CvPlayerCulture@@QBE?AW4InfluenceLevelTypes@@W4PlayerTypes@@@Z ; CvPlayerCulture::GetInfluenceLevel
	mov	DWORD PTR _eResult$[ebp], eax

; 2432 : 	lua_pushinteger(L, (int)eResult);

	mov	eax, DWORD PTR _eResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2433 : 	return 1;

	mov	eax, 1

; 2434 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetInfluenceLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInfluenceLevel
_TEXT	ENDS
EXTRN	?GetInfluenceTrend@CvPlayerCulture@@QBE?AW4InfluenceLevelTrend@@W4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetInfluenceTrend
; Function compile flags: /Odtp
;	COMDAT ?lGetInfluenceTrend@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_eResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetInfluenceTrend@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInfluenceTrend, COMDAT

; 2438 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2439 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2440 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 2441 : 	InfluenceLevelTrend eResult = pkPlayer->GetCulture()->GetInfluenceTrend(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetInfluenceTrend@CvPlayerCulture@@QBE?AW4InfluenceLevelTrend@@W4PlayerTypes@@@Z ; CvPlayerCulture::GetInfluenceTrend
	mov	DWORD PTR _eResult$[ebp], eax

; 2442 : 	lua_pushinteger(L, (int)eResult);

	mov	eax, DWORD PTR _eResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2443 : 	return 1;

	mov	eax, 1

; 2444 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetInfluenceTrend@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInfluenceTrend
_TEXT	ENDS
EXTRN	?GetTurnsToInfluential@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetTurnsToInfluential
; Function compile flags: /Odtp
;	COMDAT ?lGetTurnsToInfluential@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetTurnsToInfluential@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTurnsToInfluential, COMDAT

; 2448 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2449 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2450 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 2451 : 	const int iResult = pkPlayer->GetCulture()->GetTurnsToInfluential(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetTurnsToInfluential@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z ; CvPlayerCulture::GetTurnsToInfluential
	mov	DWORD PTR _iResult$[ebp], eax

; 2452 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2453 : 	return 1;

	mov	eax, 1

; 2454 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTurnsToInfluential@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTurnsToInfluential
_TEXT	ENDS
EXTRN	?GetNumCivsInfluentialOn@CvPlayerCulture@@QBEHXZ:PROC ; CvPlayerCulture::GetNumCivsInfluentialOn
; Function compile flags: /Odtp
;	COMDAT ?lGetNumCivsInfluentialOn@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumCivsInfluentialOn@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumCivsInfluentialOn, COMDAT

; 2458 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2459 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2460 : 	const int iResult = pkPlayer->GetCulture()->GetNumCivsInfluentialOn();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetNumCivsInfluentialOn@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetNumCivsInfluentialOn
	mov	DWORD PTR _iResult$[ebp], eax

; 2461 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2462 : 	return 1;

	mov	eax, 1

; 2463 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumCivsInfluentialOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumCivsInfluentialOn
_TEXT	ENDS
EXTRN	?GetNumCivsToBeInfluentialOn@CvPlayerCulture@@QBEHXZ:PROC ; CvPlayerCulture::GetNumCivsToBeInfluentialOn
; Function compile flags: /Odtp
;	COMDAT ?lGetNumCivsToBeInfluentialOn@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumCivsToBeInfluentialOn@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumCivsToBeInfluentialOn, COMDAT

; 2467 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2468 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2469 : 	const int iResult = pkPlayer->GetCulture()->GetNumCivsToBeInfluentialOn();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetNumCivsToBeInfluentialOn@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetNumCivsToBeInfluentialOn
	mov	DWORD PTR _iResult$[ebp], eax

; 2470 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2471 : 	return 1;

	mov	eax, 1

; 2472 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumCivsToBeInfluentialOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumCivsToBeInfluentialOn
_TEXT	ENDS
EXTRN	?GetInfluenceTradeRouteScienceBonus@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetInfluenceTradeRouteScienceBonus
; Function compile flags: /Odtp
;	COMDAT ?lGetInfluenceTradeRouteScienceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eOtherPlayer$ = -8					; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetInfluenceTradeRouteScienceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInfluenceTradeRouteScienceBonus, COMDAT

; 2476 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2477 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2478 : 	PlayerTypes eOtherPlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 2479 : 	const int iResult = pkPlayer->GetCulture()->GetInfluenceTradeRouteScienceBonus(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetInfluenceTradeRouteScienceBonus@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z ; CvPlayerCulture::GetInfluenceTradeRouteScienceBonus
	mov	DWORD PTR _iResult$[ebp], eax

; 2480 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2481 : 	return 1;

	mov	eax, 1

; 2482 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetInfluenceTradeRouteScienceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInfluenceTradeRouteScienceBonus
_TEXT	ENDS
EXTRN	?GetInfluenceCityStateSpyRankBonus@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetInfluenceCityStateSpyRankBonus
; Function compile flags: /Odtp
;	COMDAT ?lGetInfluenceCityStateSpyRankBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_iResult$ = -8						; size = 4
_eCityStatePlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetInfluenceCityStateSpyRankBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInfluenceCityStateSpyRankBonus, COMDAT

; 2486 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2487 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2488 : 	PlayerTypes eCityStatePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eCityStatePlayer$[ebp], eax

; 2489 : 	const int iResult = pkPlayer->GetCulture()->GetInfluenceCityStateSpyRankBonus(eCityStatePlayer);

	mov	edx, DWORD PTR _eCityStatePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetInfluenceCityStateSpyRankBonus@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z ; CvPlayerCulture::GetInfluenceCityStateSpyRankBonus
	mov	DWORD PTR _iResult$[ebp], eax

; 2490 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2491 : 	return 1;

	mov	eax, 1

; 2492 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetInfluenceCityStateSpyRankBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInfluenceCityStateSpyRankBonus
_TEXT	ENDS
EXTRN	?GetInfluenceMajorCivSpyRankBonus@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetInfluenceMajorCivSpyRankBonus
; Function compile flags: /Odtp
;	COMDAT ?lGetInfluenceMajorCivSpyRankBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eOtherPlayer$ = -8					; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetInfluenceMajorCivSpyRankBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInfluenceMajorCivSpyRankBonus, COMDAT

; 2496 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2497 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2498 : 	PlayerTypes eOtherPlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 2499 : 	const int iResult = pkPlayer->GetCulture()->GetInfluenceMajorCivSpyRankBonus(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetInfluenceMajorCivSpyRankBonus@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z ; CvPlayerCulture::GetInfluenceMajorCivSpyRankBonus
	mov	DWORD PTR _iResult$[ebp], eax

; 2500 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2501 : 	return 1;

	mov	eax, 1

; 2502 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetInfluenceMajorCivSpyRankBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInfluenceMajorCivSpyRankBonus
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?GetInfluenceSpyRankTooltip@CvPlayerCulture@@QAE?AVCvString@@V2@0W4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetInfluenceSpyRankTooltip
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__ehfuncinfo$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$4
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv166 = -156						; size = 4
tv169 = -152						; size = 4
tv165 = -148						; size = 4
tv194 = -144						; size = 4
tv181 = -140						; size = 4
$T243590 = -136						; size = 4
$T243585 = -132						; size = 4
$T243580 = -128						; size = 4
$T243571 = -124						; size = 4
$T243557 = -120						; size = 4
$T243556 = -116						; size = 4
$T243555 = -112						; size = 4
_pkPlayer$ = -108					; size = 4
_szRank$ = -104						; size = 28
_eOtherPlayer$ = -76					; size = 4
_szResult$ = -72					; size = 28
_szSpyName$ = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInfluenceSpyRankTooltip, COMDAT

; 2506 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 144				; 00000090H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2507 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2508 : 	CvString szSpyName = lua_tostring(L, 2);

	push	0
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tolstring
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T243571[ebp], eax
	cmp	DWORD PTR $T243571[ebp], 0
	je	SHORT $LN10@lGetInflue
	mov	edx, DWORD PTR $T243571[ebp]
	mov	DWORD PTR tv181[ebp], edx
	jmp	SHORT $LN11@lGetInflue
$LN10@lGetInflue:
	mov	DWORD PTR tv181[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN11@lGetInflue:
	mov	eax, DWORD PTR tv181[ebp]
	push	eax
	lea	ecx, DWORD PTR _szSpyName$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2509 : 	CvString szRank = lua_tostring(L, 3);

	push	0
	push	3
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tolstring
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T243580[ebp], eax
	cmp	DWORD PTR $T243580[ebp], 0
	je	SHORT $LN15@lGetInflue
	mov	edx, DWORD PTR $T243580[ebp]
	mov	DWORD PTR tv194[ebp], edx
	jmp	SHORT $LN16@lGetInflue
$LN15@lGetInflue:
	mov	DWORD PTR tv194[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN16@lGetInflue:
	mov	eax, DWORD PTR tv194[ebp]
	push	eax
	lea	ecx, DWORD PTR _szRank$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2510 : 	PlayerTypes eOtherPlayer = (PlayerTypes)lua_tointeger(L, 4);

	push	4
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 2511 : 	const CvString szResult = pkPlayer->GetCulture()->GetInfluenceSpyRankTooltip(szSpyName, szRank, eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T243555[ebp], esp
	mov	DWORD PTR $T243585[ebp], eax
	lea	ecx, DWORD PTR _szRank$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T243585[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T243585[ebp]
	mov	DWORD PTR tv165[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T243556[ebp], esp
	mov	DWORD PTR $T243590[ebp], eax
	lea	ecx, DWORD PTR _szSpyName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T243590[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T243590[ebp]
	mov	DWORD PTR tv169[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	eax, DWORD PTR _szResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, eax
	call	?GetInfluenceSpyRankTooltip@CvPlayerCulture@@QAE?AVCvString@@V2@0W4PlayerTypes@@@Z ; CvPlayerCulture::GetInfluenceSpyRankTooltip
	mov	DWORD PTR tv166[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 2512 : 	lua_pushstring(L, szResult);

	lea	ecx, DWORD PTR _szResult$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 2513 : 	return 1;

	mov	DWORD PTR $T243557[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _szResult$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _szRank$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _szSpyName$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T243557[ebp]

; 2514 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _szSpyName$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _szRank$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$2:
	mov	ecx, DWORD PTR $T243555[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$3:
	mov	ecx, DWORD PTR $T243556[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$4:
	lea	ecx, DWORD PTR _szResult$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-148]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInfluenceSpyRankTooltip
EXTRN	?GetTourism@CvPlayerCulture@@QAEHXZ:PROC	; CvPlayerCulture::GetTourism
; Function compile flags: /Odtp
;	COMDAT ?lGetTourism@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetTourism@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetTourism, COMDAT

; 2518 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2519 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2520 : 	const int iResult = pkPlayer->GetCulture()->GetTourism();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetTourism@CvPlayerCulture@@QAEHXZ	; CvPlayerCulture::GetTourism
	mov	DWORD PTR _iResult$[ebp], eax

; 2521 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2522 : 	return 1;

	mov	eax, 1

; 2523 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTourism@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetTourism
_TEXT	ENDS
EXTRN	?GetTourismModifierWith@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetTourismModifierWith
; Function compile flags: /Odtp
;	COMDAT ?lGetTourismModifierWith@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetTourismModifierWith@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTourismModifierWith, COMDAT

; 2527 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2528 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2529 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 2530 : 	const int iResult = pkPlayer->GetCulture()->GetTourismModifierWith(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetTourismModifierWith@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z ; CvPlayerCulture::GetTourismModifierWith
	mov	DWORD PTR _iResult$[ebp], eax

; 2531 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2532 : 	return 1;

	mov	eax, 1

; 2533 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTourismModifierWith@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTourismModifierWith
_TEXT	ENDS
EXTRN	?GetTourismModifierWithTooltip@CvPlayerCulture@@QBE?AVCvString@@W4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetTourismModifierWithTooltip
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv81 = -56						; size = 4
$T243623 = -52						; size = 4
$T243618 = -48						; size = 28
_ePlayer$ = -20						; size = 4
_pkPlayer$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTourismModifierWithTooltip, COMDAT

; 2537 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2538 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2539 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 2540 : 	lua_pushstring(L, pkPlayer->GetCulture()->GetTourismModifierWithTooltip(ePlayer));

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	lea	eax, DWORD PTR $T243618[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetTourismModifierWithTooltip@CvPlayerCulture@@QBE?AVCvString@@W4PlayerTypes@@@Z ; CvPlayerCulture::GetTourismModifierWithTooltip
	mov	DWORD PTR tv81[ebp], eax
	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR $T243623[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T243623[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T243618[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2541 : 	return 1;

	mov	eax, 1

; 2542 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T243618[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTourismModifierWithTooltip
EXTRN	?GetPublicOpinionType@CvPlayerCulture@@QBE?AW4PublicOpinionTypes@@XZ:PROC ; CvPlayerCulture::GetPublicOpinionType
; Function compile flags: /Odtp
;	COMDAT ?lGetPublicOpinionType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetPublicOpinionType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPublicOpinionType, COMDAT

; 2546 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2547 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2548 : 	lua_pushinteger(L, pkPlayer->GetCulture()->GetPublicOpinionType());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetPublicOpinionType@CvPlayerCulture@@QBE?AW4PublicOpinionTypes@@XZ ; CvPlayerCulture::GetPublicOpinionType
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2549 : 	return 1;

	mov	eax, 1

; 2550 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPublicOpinionType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPublicOpinionType
_TEXT	ENDS
EXTRN	?GetPublicOpinionPreferredIdeology@CvPlayerCulture@@QBE?AW4PolicyBranchTypes@@XZ:PROC ; CvPlayerCulture::GetPublicOpinionPreferredIdeology
; Function compile flags: /Odtp
;	COMDAT ?lGetPublicOpinionPreferredIdeology@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetPublicOpinionPreferredIdeology@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPublicOpinionPreferredIdeology, COMDAT

; 2554 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2555 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2556 : 	lua_pushinteger(L, pkPlayer->GetCulture()->GetPublicOpinionPreferredIdeology());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetPublicOpinionPreferredIdeology@CvPlayerCulture@@QBE?AW4PolicyBranchTypes@@XZ ; CvPlayerCulture::GetPublicOpinionPreferredIdeology
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2557 : 	return 1;

	mov	eax, 1

; 2558 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPublicOpinionPreferredIdeology@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPublicOpinionPreferredIdeology
_TEXT	ENDS
EXTRN	?GetPublicOpinionTooltip@CvPlayerCulture@@QBE?AVCvString@@XZ:PROC ; CvPlayerCulture::GetPublicOpinionTooltip
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv77 = -52						; size = 4
$T243645 = -48						; size = 4
$T243640 = -44						; size = 28
_pkPlayer$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPublicOpinionTooltip, COMDAT

; 2562 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2563 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2564 : 	lua_pushstring(L, pkPlayer->GetCulture()->GetPublicOpinionTooltip());

	lea	ecx, DWORD PTR $T243640[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetPublicOpinionTooltip@CvPlayerCulture@@QBE?AVCvString@@XZ ; CvPlayerCulture::GetPublicOpinionTooltip
	mov	DWORD PTR tv77[ebp], eax
	mov	edx, DWORD PTR tv77[ebp]
	mov	DWORD PTR $T243645[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T243645[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T243640[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2565 : 	return 1;

	mov	eax, 1

; 2566 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T243640[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPublicOpinionTooltip
EXTRN	?GetPublicOpinionUnhappiness@CvPlayerCulture@@QBEHXZ:PROC ; CvPlayerCulture::GetPublicOpinionUnhappiness
; Function compile flags: /Odtp
;	COMDAT ?lGetPublicOpinionUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetPublicOpinionUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPublicOpinionUnhappiness, COMDAT

; 2570 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2571 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2572 : 	lua_pushinteger(L, pkPlayer->GetCulture()->GetPublicOpinionUnhappiness());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetPublicOpinionUnhappiness@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetPublicOpinionUnhappiness
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2573 : 	return 1;

	mov	eax, 1

; 2574 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPublicOpinionUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPublicOpinionUnhappiness
_TEXT	ENDS
EXTRN	?GetPublicOpinionUnhappinessTooltip@CvPlayerCulture@@QBE?AVCvString@@XZ:PROC ; CvPlayerCulture::GetPublicOpinionUnhappinessTooltip
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv77 = -52						; size = 4
$T243665 = -48						; size = 4
$T243660 = -44						; size = 28
_pkPlayer$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPublicOpinionUnhappinessTooltip, COMDAT

; 2578 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2579 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2580 : 	lua_pushstring(L, pkPlayer->GetCulture()->GetPublicOpinionUnhappinessTooltip());

	lea	ecx, DWORD PTR $T243660[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetPublicOpinionUnhappinessTooltip@CvPlayerCulture@@QBE?AVCvString@@XZ ; CvPlayerCulture::GetPublicOpinionUnhappinessTooltip
	mov	DWORD PTR tv77[ebp], eax
	mov	edx, DWORD PTR tv77[ebp]
	mov	DWORD PTR $T243665[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T243665[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T243660[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2581 : 	return 1;

	mov	eax, 1

; 2582 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T243660[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPublicOpinionUnhappinessTooltip
EXTRN	?HasAvailableGreatWorkSlot@CvPlayerCulture@@QAE_NW4GreatWorkSlotType@@@Z:PROC ; CvPlayerCulture::HasAvailableGreatWorkSlot
; Function compile flags: /Odtp
;	COMDAT ?lHasAvailableGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eGreatWorkSlot$ = -8					; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lHasAvailableGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lHasAvailableGreatWorkSlot, COMDAT

; 2586 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2587 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2588 : 	GreatWorkSlotType eGreatWorkSlot = static_cast<GreatWorkSlotType>(lua_tointeger(L, 2));

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eGreatWorkSlot$[ebp], eax

; 2589 : 	const bool bResult = pkPlayer->GetCulture()->HasAvailableGreatWorkSlot(eGreatWorkSlot);

	mov	edx, DWORD PTR _eGreatWorkSlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?HasAvailableGreatWorkSlot@CvPlayerCulture@@QAE_NW4GreatWorkSlotType@@@Z ; CvPlayerCulture::HasAvailableGreatWorkSlot
	mov	BYTE PTR _bResult$[ebp], al

; 2590 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 2591 : 	return 1;

	mov	eax, 1

; 2592 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lHasAvailableGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lHasAvailableGreatWorkSlot
_TEXT	ENDS
EXTRN	?GetClosestAvailableGreatWorkSlot@CvPlayerCulture@@QBEPAVCvCity@@HHW4GreatWorkSlotType@@PAW4BuildingClassTypes@@PAH@Z:PROC ; CvPlayerCulture::GetClosestAvailableGreatWorkSlot
; Function compile flags: /Odtp
;	COMDAT ?lGetCityOfClosestGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -28					; size = 4
_iSlot$ = -24						; size = 4
_eGreatWorkSlot$ = -20					; size = 4
_iX$ = -16						; size = 4
_iY$ = -12						; size = 4
_pkCity$ = -8						; size = 4
_eBuildingClass$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetCityOfClosestGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCityOfClosestGreatWorkSlot, COMDAT

; 2596 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 2597 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2598 : 	int iX = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iX$[ebp], eax

; 2599 : 	int iY = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iY$[ebp], eax

; 2600 : 	GreatWorkSlotType eGreatWorkSlot = static_cast<GreatWorkSlotType>(lua_tointeger(L, 4));

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eGreatWorkSlot$[ebp], eax

; 2601 : 	BuildingClassTypes eBuildingClass;
; 2602 : #ifdef AUI_WARNING_FIXES
; 2603 : 	uint iSlot = MAX_UNSIGNED_INT; // Passed by reference below
; 2604 : #else
; 2605 : 	int iSlot;
; 2606 : #endif
; 2607 : 	CvCity* pkCity = pkPlayer->GetCulture()->GetClosestAvailableGreatWorkSlot(iX, iY, eGreatWorkSlot, &eBuildingClass, &iSlot);

	lea	ecx, DWORD PTR _iSlot$[ebp]
	push	ecx
	lea	edx, DWORD PTR _eBuildingClass$[ebp]
	push	edx
	mov	eax, DWORD PTR _eGreatWorkSlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iY$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iX$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetClosestAvailableGreatWorkSlot@CvPlayerCulture@@QBEPAVCvCity@@HHW4GreatWorkSlotType@@PAW4BuildingClassTypes@@PAH@Z ; CvPlayerCulture::GetClosestAvailableGreatWorkSlot
	mov	DWORD PTR _pkCity$[ebp], eax

; 2608 : 	if (pkCity)

	cmp	DWORD PTR _pkCity$[ebp], 0
	je	SHORT $LN2@lGetCityOf

; 2609 : 	{
; 2610 : 		CvLuaCity::Push(L, pkCity);

	mov	eax, DWORD PTR _pkCity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8

; 2611 : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN3@lGetCityOf

; 2612 : 	}
; 2613 : 	else

	jmp	SHORT $LN3@lGetCityOf
$LN2@lGetCityOf:

; 2614 : 	{
; 2615 : 		return 0;

	xor	eax, eax
$LN3@lGetCityOf:

; 2616 : 	}
; 2617 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCityOfClosestGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCityOfClosestGreatWorkSlot
_TEXT	ENDS
EXTRN	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z:PROC ; CvCivilizationInfo::getCivilizationBuildings
EXTRN	?getCivilizationInfo@CvGlobals@@QAEPAVCvCivilizationInfo@@W4CivilizationTypes@@@Z:PROC ; CvGlobals::getCivilizationInfo
EXTRN	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ:PROC ; CvPlayer::getCivilizationType
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingOfClosestGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iBuilding$229024 = -36					; size = 4
_pkPlayer$ = -32					; size = 4
_iSlot$ = -28						; size = 4
_eGreatWorkSlot$ = -24					; size = 4
_iX$ = -20						; size = 4
_pkCivInfo$ = -16					; size = 4
_iY$ = -12						; size = 4
_pkCity$ = -8						; size = 4
_eBuildingClass$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetBuildingOfClosestGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBuildingOfClosestGreatWorkSlot, COMDAT

; 2621 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H

; 2622 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2623 : 	int iX = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iX$[ebp], eax

; 2624 : 	int iY = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iY$[ebp], eax

; 2625 : 	GreatWorkSlotType eGreatWorkSlot = static_cast<GreatWorkSlotType>(lua_tointeger(L, 4));

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eGreatWorkSlot$[ebp], eax

; 2626 : 	BuildingClassTypes eBuildingClass;
; 2627 : #ifdef AUI_WARNING_FIXES
; 2628 : 	uint iSlot = MAX_UNSIGNED_INT; // Passed by reference below
; 2629 : #else
; 2630 : 	int iSlot;
; 2631 : #endif
; 2632 : 	CvCity* pkCity = pkPlayer->GetCulture()->GetClosestAvailableGreatWorkSlot(iX, iY, eGreatWorkSlot, &eBuildingClass, &iSlot);

	lea	ecx, DWORD PTR _iSlot$[ebp]
	push	ecx
	lea	edx, DWORD PTR _eBuildingClass$[ebp]
	push	edx
	mov	eax, DWORD PTR _eGreatWorkSlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iY$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iX$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetClosestAvailableGreatWorkSlot@CvPlayerCulture@@QBEPAVCvCity@@HHW4GreatWorkSlotType@@PAW4BuildingClassTypes@@PAH@Z ; CvPlayerCulture::GetClosestAvailableGreatWorkSlot
	mov	DWORD PTR _pkCity$[ebp], eax

; 2633 : 	CvCivilizationInfo *pkCivInfo = GC.getCivilizationInfo(pkPlayer->getCivilizationType());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getCivilizationInfo@CvGlobals@@QAEPAVCvCivilizationInfo@@W4CivilizationTypes@@@Z ; CvGlobals::getCivilizationInfo
	mov	DWORD PTR _pkCivInfo$[ebp], eax

; 2634 : 	if (pkCity && pkCivInfo)

	cmp	DWORD PTR _pkCity$[ebp], 0
	je	SHORT $LN2@lGetBuildi
	cmp	DWORD PTR _pkCivInfo$[ebp], 0
	je	SHORT $LN2@lGetBuildi

; 2635 : 	{
; 2636 : 		int iBuilding = pkCivInfo->getCivilizationBuildings(eBuildingClass);

	mov	eax, DWORD PTR _eBuildingClass$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkCivInfo$[ebp]
	call	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationBuildings
	mov	DWORD PTR _iBuilding$229024[ebp], eax

; 2637 : 		lua_pushinteger(L, iBuilding);

	mov	ecx, DWORD PTR _iBuilding$229024[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2638 : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN3@lGetBuildi

; 2639 : 	}
; 2640 : 	else

	jmp	SHORT $LN3@lGetBuildi
$LN2@lGetBuildi:

; 2641 : 	{
; 2642 : 		return 0;

	xor	eax, eax
$LN3@lGetBuildi:

; 2643 : 	}
; 2644 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBuildingOfClosestGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBuildingOfClosestGreatWorkSlot
_TEXT	ENDS
EXTRN	?GetNextDigCompletePlot@CvPlayerCulture@@QBEPAVCvPlot@@XZ:PROC ; CvPlayerCulture::GetNextDigCompletePlot
; Function compile flags: /Odtp
;	COMDAT ?lGetNextDigCompletePlot@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_pkPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNextDigCompletePlot@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNextDigCompletePlot, COMDAT

; 2648 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2649 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2650 : 	CvPlot* pkPlot = pkPlayer->GetCulture()->GetNextDigCompletePlot();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetNextDigCompletePlot@CvPlayerCulture@@QBEPAVCvPlot@@XZ ; CvPlayerCulture::GetNextDigCompletePlot
	mov	DWORD PTR _pkPlot$[ebp], eax

; 2651 : 	CvLuaPlot::Push(L, pkPlot);

	mov	ecx, DWORD PTR _pkPlot$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8

; 2652 : 	return 1;

	mov	eax, 1

; 2653 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNextDigCompletePlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNextDigCompletePlot
_TEXT	ENDS
EXTRN	?GetWrittenArtifactCulture@CvPlayerCulture@@QBEHXZ:PROC ; CvPlayerCulture::GetWrittenArtifactCulture
; Function compile flags: /Odtp
;	COMDAT ?lGetWrittenArtifactCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iCulture$ = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetWrittenArtifactCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetWrittenArtifactCulture, COMDAT

; 2656 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2657 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2658 : 	int iCulture = pkPlayer->GetCulture()->GetWrittenArtifactCulture();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetWrittenArtifactCulture@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetWrittenArtifactCulture
	mov	DWORD PTR _iCulture$[ebp], eax

; 2659 : 	lua_pushinteger(L, iCulture);

	mov	ecx, DWORD PTR _iCulture$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2660 : 	return 1;

	mov	eax, 1

; 2661 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetWrittenArtifactCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetWrittenArtifactCulture
_TEXT	ENDS
EXTRN	?GetNumGreatWorks@CvPlayerCulture@@QBEHXZ:PROC	; CvPlayerCulture::GetNumGreatWorks
; Function compile flags: /Odtp
;	COMDAT ?lGetNumGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iNumWorks$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetNumGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumGreatWorks, COMDAT

; 2664 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2665 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2666 : 	int iNumWorks = pkPlayer->GetCulture()->GetNumGreatWorks();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetNumGreatWorks@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetNumGreatWorks
	mov	DWORD PTR _iNumWorks$[ebp], eax

; 2667 : 	lua_pushinteger(L, iNumWorks);

	mov	ecx, DWORD PTR _iNumWorks$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2668 : 	return 1;

	mov	eax, 1

; 2669 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumGreatWorks
_TEXT	ENDS
EXTRN	?GetNumGreatWorkSlots@CvPlayerCulture@@QBEHXZ:PROC ; CvPlayerCulture::GetNumGreatWorkSlots
; Function compile flags: /Odtp
;	COMDAT ?lGetNumGreatWorkSlots@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iNumWorks$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetNumGreatWorkSlots@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumGreatWorkSlots, COMDAT

; 2672 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2673 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2674 : 	int iNumWorks = pkPlayer->GetCulture()->GetNumGreatWorkSlots();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetNumGreatWorkSlots@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetNumGreatWorkSlots
	mov	DWORD PTR _iNumWorks$[ebp], eax

; 2675 : 	lua_pushinteger(L, iNumWorks);

	mov	ecx, DWORD PTR _iNumWorks$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2676 : 	return 1;

	mov	eax, 1

; 2677 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumGreatWorkSlots@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumGreatWorkSlots
_TEXT	ENDS
EXTRN	?GetFaith@CvPlayer@@QBEHXZ:PROC			; CvPlayer::GetFaith
; Function compile flags: /Odtp
;	COMDAT ?lGetFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetFaith, COMDAT

; 2681 : {

	push	ebp
	mov	ebp, esp

; 2682 : 	return BasicLuaMethod(L, &CvPlayerAI::GetFaith);

	push	OFFSET ?GetFaith@CvPlayer@@QBEHXZ	; CvPlayer::GetFaith
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2683 : }

	pop	ebp
	ret	0
?lGetFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetFaith
_TEXT	ENDS
EXTRN	?SetFaith@CvPlayer@@QAEXH@Z:PROC		; CvPlayer::SetFaith
; Function compile flags: /Odtp
;	COMDAT ?lSetFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lSetFaith, COMDAT

; 2687 : {

	push	ebp
	mov	ebp, esp

; 2688 : 	return BasicLuaMethod(L, &CvPlayerAI::SetFaith);

	push	OFFSET ?SetFaith@CvPlayer@@QAEXH@Z	; CvPlayer::SetFaith
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2689 : }

	pop	ebp
	ret	0
?lSetFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lSetFaith
_TEXT	ENDS
EXTRN	?ChangeFaith@CvPlayer@@QAEXH@Z:PROC		; CvPlayer::ChangeFaith
; Function compile flags: /Odtp
;	COMDAT ?lChangeFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lChangeFaith, COMDAT

; 2693 : {

	push	ebp
	mov	ebp, esp

; 2694 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeFaith);

	push	OFFSET ?ChangeFaith@CvPlayer@@QAEXH@Z	; CvPlayer::ChangeFaith
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2695 : }

	pop	ebp
	ret	0
?lChangeFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lChangeFaith
_TEXT	ENDS
EXTRN	?GetTotalFaithPerTurn@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetTotalFaithPerTurn
; Function compile flags: /Odtp
;	COMDAT ?lGetTotalFaithPerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalFaithPerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTotalFaithPerTurn, COMDAT

; 2699 : {

	push	ebp
	mov	ebp, esp

; 2700 : 	return BasicLuaMethod(L, &CvPlayerAI::GetTotalFaithPerTurn);

	push	OFFSET ?GetTotalFaithPerTurn@CvPlayer@@QBEHXZ ; CvPlayer::GetTotalFaithPerTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2701 : }

	pop	ebp
	ret	0
?lGetTotalFaithPerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTotalFaithPerTurn
_TEXT	ENDS
EXTRN	?GetFaithPerTurnFromCities@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetFaithPerTurnFromCities
; Function compile flags: /Odtp
;	COMDAT ?lGetFaithPerTurnFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFaithPerTurnFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFaithPerTurnFromCities, COMDAT

; 2705 : {

	push	ebp
	mov	ebp, esp

; 2706 : 	return BasicLuaMethod(L, &CvPlayerAI::GetFaithPerTurnFromCities);

	push	OFFSET ?GetFaithPerTurnFromCities@CvPlayer@@QBEHXZ ; CvPlayer::GetFaithPerTurnFromCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2707 : }

	pop	ebp
	ret	0
?lGetFaithPerTurnFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFaithPerTurnFromCities
_TEXT	ENDS
EXTRN	?GetFaithPerTurnFromMinorCivs@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetFaithPerTurnFromMinorCivs
; Function compile flags: /Odtp
;	COMDAT ?lGetFaithPerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFaithPerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFaithPerTurnFromMinorCivs, COMDAT

; 2711 : {

	push	ebp
	mov	ebp, esp

; 2712 : 	return BasicLuaMethod(L, &CvPlayerAI::GetFaithPerTurnFromMinorCivs);

	push	OFFSET ?GetFaithPerTurnFromMinorCivs@CvPlayer@@QBEHXZ ; CvPlayer::GetFaithPerTurnFromMinorCivs
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2713 : }

	pop	ebp
	ret	0
?lGetFaithPerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFaithPerTurnFromMinorCivs
_TEXT	ENDS
EXTRN	?GetFaithPerTurnFromReligion@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetFaithPerTurnFromReligion
; Function compile flags: /Odtp
;	COMDAT ?lGetFaithPerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFaithPerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFaithPerTurnFromReligion, COMDAT

; 2717 : {

	push	ebp
	mov	ebp, esp

; 2718 : 	return BasicLuaMethod(L, &CvPlayerAI::GetFaithPerTurnFromReligion);

	push	OFFSET ?GetFaithPerTurnFromReligion@CvPlayer@@QBEHXZ ; CvPlayer::GetFaithPerTurnFromReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2719 : }

	pop	ebp
	ret	0
?lGetFaithPerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFaithPerTurnFromReligion
_TEXT	ENDS
EXTRN	?CanFaithGiftMinors@CvPlayer@@QAE_NXZ:PROC	; CvPlayer::CanFaithGiftMinors
; Function compile flags: /Odtp
;	COMDAT ?lCanFaithGiftMinors@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lCanFaithGiftMinors@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCanFaithGiftMinors, COMDAT

; 2724 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2725 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2726 : 	const bool bResult = pkPlayer->CanFaithGiftMinors();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?CanFaithGiftMinors@CvPlayer@@QAE_NXZ	; CvPlayer::CanFaithGiftMinors
	mov	BYTE PTR _bResult$[ebp], al

; 2727 : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 2728 : 
; 2729 : 	return 1;

	mov	eax, 1

; 2730 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanFaithGiftMinors@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCanFaithGiftMinors
_TEXT	ENDS
EXTRN	?HasCreatedPantheon@CvPlayerReligions@@QBE_NXZ:PROC ; CvPlayerReligions::HasCreatedPantheon
EXTRN	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ:PROC ; CvPlayer::GetReligions
; Function compile flags: /Odtp
;	COMDAT ?lHasCreatedPantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lHasCreatedPantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lHasCreatedPantheon, COMDAT

; 2735 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2736 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2737 : 
; 2738 : 	const bool bResult = pkPlayer->GetReligions()->HasCreatedPantheon();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?HasCreatedPantheon@CvPlayerReligions@@QBE_NXZ ; CvPlayerReligions::HasCreatedPantheon
	mov	BYTE PTR _bResult$[ebp], al

; 2739 : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 2740 : 
; 2741 : 	return 1;

	mov	eax, 1

; 2742 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lHasCreatedPantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lHasCreatedPantheon
_TEXT	ENDS
EXTRN	?GetBeliefInPantheon@CvGameReligions@@QBE?AW4BeliefTypes@@W4PlayerTypes@@@Z:PROC ; CvGameReligions::GetBeliefInPantheon
EXTRN	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ:PROC ; CvGame::GetGameReligions
; Function compile flags: /Odtp
;	COMDAT ?lGetBeliefInPantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T243722 = -16						; size = 4
$T243718 = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_eBelief$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetBeliefInPantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBeliefInPantheon, COMDAT

; 2746 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 2747 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2748 : 
; 2749 : 	const BeliefTypes eBelief = GC.getGame().GetGameReligions()->GetBeliefInPantheon(pkPlayer->GetID());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T243718[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T243722[ebp], eax
	mov	ecx, DWORD PTR $T243718[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T243722[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetBeliefInPantheon@CvGameReligions@@QBE?AW4BeliefTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetBeliefInPantheon
	mov	DWORD PTR _eBelief$[ebp], eax

; 2750 : 	lua_pushinteger(L, eBelief);

	mov	edx, DWORD PTR _eBelief$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 2751 : 
; 2752 : 	return 1;

	mov	eax, 1

; 2753 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBeliefInPantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBeliefInPantheon
_TEXT	ENDS
EXTRN	?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z:PROC ; CvGameReligions::CanCreatePantheon
; Function compile flags: /Odtp
;	COMDAT ?lCanCreatePantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T243737 = -16						; size = 4
$T243733 = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_bCheckFaith$ = -2					; size = 1
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lCanCreatePantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCanCreatePantheon, COMDAT

; 2757 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 2758 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2759 : 	bool bCheckFaith = lua_toboolean(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bCheckFaith$[ebp], dl

; 2760 : 
; 2761 : 	const bool bResult = GC.getGame().GetGameReligions()->CanCreatePantheon(pkPlayer->GetID(), bCheckFaith) == CvGameReligions::FOUNDING_OK;

	mov	eax, DWORD PTR _pkPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T243733[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T243737[ebp], edx
	movzx	eax, BYTE PTR _bCheckFaith$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T243733[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T243737[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z ; CvGameReligions::CanCreatePantheon
	test	eax, eax
	sete	dl
	mov	BYTE PTR _bResult$[ebp], dl

; 2762 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 2763 : 
; 2764 : 	return 1;

	mov	eax, 1

; 2765 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanCreatePantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCanCreatePantheon
_TEXT	ENDS
EXTRN	?HasCreatedReligion@CvPlayerReligions@@QBE_NXZ:PROC ; CvPlayerReligions::HasCreatedReligion
; Function compile flags: /Odtp
;	COMDAT ?lHasCreatedReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lHasCreatedReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lHasCreatedReligion, COMDAT

; 2769 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2770 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2771 : 
; 2772 : 	const bool bResult = pkPlayer->GetReligions()->HasCreatedReligion();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?HasCreatedReligion@CvPlayerReligions@@QBE_NXZ ; CvPlayerReligions::HasCreatedReligion
	mov	BYTE PTR _bResult$[ebp], al

; 2773 : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 2774 : 
; 2775 : 	return 1;

	mov	eax, 1

; 2776 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lHasCreatedReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lHasCreatedReligion
_TEXT	ENDS
EXTRN	?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ:PROC ; CvPlayerReligions::GetReligionCreatedByPlayer
; Function compile flags: /Odtp
;	COMDAT ?lGetReligionCreatedByPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_eReligion$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetReligionCreatedByPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetReligionCreatedByPlayer, COMDAT

; 2780 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2781 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2782 : 
; 2783 : 	const ReligionTypes eReligion = pkPlayer->GetReligions()->GetReligionCreatedByPlayer();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ ; CvPlayerReligions::GetReligionCreatedByPlayer
	mov	DWORD PTR _eReligion$[ebp], eax

; 2784 : 	lua_pushinteger(L, eReligion);

	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2785 : 
; 2786 : 	return 1;

	mov	eax, 1

; 2787 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetReligionCreatedByPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetReligionCreatedByPlayer
_TEXT	ENDS
EXTRN	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z:PROC ; CvGameReligions::GetReligion
EXTRN	?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z:PROC ; CvGameReligions::GetFounderBenefitsReligion
EXTRN	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ:PROC ; CvCityReligions::GetReligiousMajority
EXTRN	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ:PROC ; CvCity::GetCityReligions
EXTRN	?getWorkingCity@CvPlot@@QBEPAVCvCity@@XZ:PROC	; CvPlot::getWorkingCity
; Function compile flags: /Odtp
;	COMDAT ?lGetFoundedReligionEnemyCityCombatMod@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T243765 = -44						; size = 4
$T243756 = -40						; size = 4
$T243747 = -36						; size = 4
_pReligion$229111 = -32					; size = 4
_eReligion$229108 = -28					; size = 4
_pReligions$229107 = -24				; size = 4
_eFoundedReligion$229109 = -20				; size = 4
_pPlotCity$229105 = -16					; size = 4
_pkPlayer$ = -12					; size = 4
_iRtnValue$ = -8					; size = 4
_pkPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetFoundedReligionEnemyCityCombatMod@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFoundedReligionEnemyCityCombatMod, COMDAT

; 2791 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH

; 2792 : 	int iRtnValue = 0;

	mov	DWORD PTR _iRtnValue$[ebp], 0

; 2793 : 
; 2794 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2795 : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlot$[ebp], eax

; 2796 : 	if(pkPlot)

	cmp	DWORD PTR _pkPlot$[ebp], 0
	je	$LN4@lGetFounde

; 2797 : 	{
; 2798 : 		CvCity* pPlotCity = pkPlot->getWorkingCity();

	mov	ecx, DWORD PTR _pkPlot$[ebp]
	call	?getWorkingCity@CvPlot@@QBEPAVCvCity@@XZ ; CvPlot::getWorkingCity
	mov	DWORD PTR _pPlotCity$229105[ebp], eax

; 2799 : 		if(pPlotCity)

	cmp	DWORD PTR _pPlotCity$229105[ebp], 0
	je	SHORT $LN4@lGetFounde

; 2800 : 		{
; 2801 : 			CvGameReligions* pReligions = GC.getGame().GetGameReligions();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T243747[ebp], edx
	mov	ecx, DWORD PTR $T243747[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	DWORD PTR _pReligions$229107[ebp], eax

; 2802 : 			ReligionTypes eReligion = pPlotCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, DWORD PTR _pPlotCity$229105[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eReligion$229108[ebp], eax

; 2803 : 			ReligionTypes eFoundedReligion = pReligions->GetFounderBenefitsReligion(pkPlayer->GetID());

	mov	eax, DWORD PTR _pkPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T243756[ebp], ecx
	mov	edx, DWORD PTR $T243756[ebp]
	push	edx
	mov	ecx, DWORD PTR _pReligions$229107[ebp]
	call	?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetFounderBenefitsReligion
	mov	DWORD PTR _eFoundedReligion$229109[ebp], eax

; 2804 : 			if(eFoundedReligion != NO_RELIGION && eReligion == eFoundedReligion)

	cmp	DWORD PTR _eFoundedReligion$229109[ebp], -1
	je	SHORT $LN4@lGetFounde
	mov	eax, DWORD PTR _eReligion$229108[ebp]
	cmp	eax, DWORD PTR _eFoundedReligion$229109[ebp]
	jne	SHORT $LN4@lGetFounde

; 2805 : 			{
; 2806 : 				const CvReligion* pReligion = pReligions->GetReligion(eFoundedReligion, pkPlayer->GetID());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T243765[ebp], edx
	mov	eax, DWORD PTR $T243765[ebp]
	push	eax
	mov	ecx, DWORD PTR _eFoundedReligion$229109[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pReligions$229107[ebp]
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pReligion$229111[ebp], eax

; 2807 : 				if(pReligion)

	cmp	DWORD PTR _pReligion$229111[ebp], 0
	je	SHORT $LN4@lGetFounde

; 2808 : 				{
; 2809 : 					iRtnValue = pReligion->m_Beliefs.GetCombatModifierEnemyCities();

	mov	edx, DWORD PTR _pReligion$229111[ebp]
	mov	eax, DWORD PTR [edx+168]
	mov	DWORD PTR _iRtnValue$[ebp], eax
$LN4@lGetFounde:

; 2810 : 				}
; 2811 : 			}
; 2812 : 		}
; 2813 : 
; 2814 : 	}
; 2815 : 	lua_pushinteger(L, iRtnValue);

	mov	ecx, DWORD PTR _iRtnValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2816 : 
; 2817 : 	return 1;

	mov	eax, 1

; 2818 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetFoundedReligionEnemyCityCombatMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFoundedReligionEnemyCityCombatMod
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetFoundedReligionFriendlyCityCombatMod@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T243792 = -44						; size = 4
$T243783 = -40						; size = 4
$T243774 = -36						; size = 4
_pReligion$229126 = -32					; size = 4
_eReligion$229123 = -28					; size = 4
_pReligions$229122 = -24				; size = 4
_eFoundedReligion$229124 = -20				; size = 4
_pPlotCity$229120 = -16					; size = 4
_pkPlayer$ = -12					; size = 4
_iRtnValue$ = -8					; size = 4
_pkPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetFoundedReligionFriendlyCityCombatMod@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFoundedReligionFriendlyCityCombatMod, COMDAT

; 2822 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH

; 2823 : 	int iRtnValue = 0;

	mov	DWORD PTR _iRtnValue$[ebp], 0

; 2824 : 
; 2825 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2826 : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlot$[ebp], eax

; 2827 : 	if(pkPlot)

	cmp	DWORD PTR _pkPlot$[ebp], 0
	je	$LN4@lGetFounde@2

; 2828 : 	{
; 2829 : 		CvCity* pPlotCity = pkPlot->getWorkingCity();

	mov	ecx, DWORD PTR _pkPlot$[ebp]
	call	?getWorkingCity@CvPlot@@QBEPAVCvCity@@XZ ; CvPlot::getWorkingCity
	mov	DWORD PTR _pPlotCity$229120[ebp], eax

; 2830 : 		if(pPlotCity)

	cmp	DWORD PTR _pPlotCity$229120[ebp], 0
	je	SHORT $LN4@lGetFounde@2

; 2831 : 		{
; 2832 : 			CvGameReligions* pReligions = GC.getGame().GetGameReligions();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T243774[ebp], edx
	mov	ecx, DWORD PTR $T243774[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	DWORD PTR _pReligions$229122[ebp], eax

; 2833 : 			ReligionTypes eReligion = pPlotCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, DWORD PTR _pPlotCity$229120[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eReligion$229123[ebp], eax

; 2834 : 			ReligionTypes eFoundedReligion = pReligions->GetFounderBenefitsReligion(pkPlayer->GetID());

	mov	eax, DWORD PTR _pkPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T243783[ebp], ecx
	mov	edx, DWORD PTR $T243783[ebp]
	push	edx
	mov	ecx, DWORD PTR _pReligions$229122[ebp]
	call	?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetFounderBenefitsReligion
	mov	DWORD PTR _eFoundedReligion$229124[ebp], eax

; 2835 : 			if(eFoundedReligion != NO_RELIGION && eReligion == eFoundedReligion)

	cmp	DWORD PTR _eFoundedReligion$229124[ebp], -1
	je	SHORT $LN4@lGetFounde@2
	mov	eax, DWORD PTR _eReligion$229123[ebp]
	cmp	eax, DWORD PTR _eFoundedReligion$229124[ebp]
	jne	SHORT $LN4@lGetFounde@2

; 2836 : 			{
; 2837 : 				const CvReligion* pReligion = pReligions->GetReligion(eFoundedReligion, pkPlayer->GetID());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T243792[ebp], edx
	mov	eax, DWORD PTR $T243792[ebp]
	push	eax
	mov	ecx, DWORD PTR _eFoundedReligion$229124[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pReligions$229122[ebp]
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pReligion$229126[ebp], eax

; 2838 : 				if(pReligion)

	cmp	DWORD PTR _pReligion$229126[ebp], 0
	je	SHORT $LN4@lGetFounde@2

; 2839 : 				{
; 2840 : 					iRtnValue = pReligion->m_Beliefs.GetCombatModifierFriendlyCities();

	mov	edx, DWORD PTR _pReligion$229126[ebp]
	mov	eax, DWORD PTR [edx+172]
	mov	DWORD PTR _iRtnValue$[ebp], eax
$LN4@lGetFounde@2:

; 2841 : 				}
; 2842 : 			}
; 2843 : 		}
; 2844 : 
; 2845 : 	}
; 2846 : 	lua_pushinteger(L, iRtnValue);

	mov	ecx, DWORD PTR _iRtnValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2847 : 
; 2848 : 	return 1;

	mov	eax, 1

; 2849 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetFoundedReligionFriendlyCityCombatMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFoundedReligionFriendlyCityCombatMod
_TEXT	ENDS
EXTRN	?GetCostNextProphet@CvPlayerReligions@@QBEH_N0@Z:PROC ; CvPlayerReligions::GetCostNextProphet
; Function compile flags: /Odtp
;	COMDAT ?lGetMinimumFaithNextGreatProphet@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iFaith$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinimumFaithNextGreatProphet@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinimumFaithNextGreatProphet, COMDAT

; 2853 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2854 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2855 : 
; 2856 : 	int iFaith = pkPlayer->GetReligions()->GetCostNextProphet(true /*bIncludeBeliefDiscounts*/, true /*bAdjustForSpeedDifficulty*/);

	push	1
	push	1
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?GetCostNextProphet@CvPlayerReligions@@QBEH_N0@Z ; CvPlayerReligions::GetCostNextProphet
	mov	DWORD PTR _iFaith$[ebp], eax

; 2857 : 	lua_pushinteger(L, iFaith);

	mov	ecx, DWORD PTR _iFaith$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2858 : 
; 2859 : 	return 1;

	mov	eax, 1

; 2860 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinimumFaithNextGreatProphet@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinimumFaithNextGreatProphet
_TEXT	ENDS
EXTRN	?HasReligionInMostCities@CvPlayerReligions@@QBE_NW4ReligionTypes@@@Z:PROC ; CvPlayerReligions::HasReligionInMostCities
; Function compile flags: /Odtp
;	COMDAT ?lHasReligionInMostCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eReligion$ = -8					; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lHasReligionInMostCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lHasReligionInMostCities, COMDAT

; 2864 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2865 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2866 : 	ReligionTypes eReligion = (ReligionTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eReligion$[ebp], eax

; 2867 : 
; 2868 : 	bool bResult = pkPlayer->GetReligions()->HasReligionInMostCities(eReligion);

	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?HasReligionInMostCities@CvPlayerReligions@@QBE_NW4ReligionTypes@@@Z ; CvPlayerReligions::HasReligionInMostCities
	mov	BYTE PTR _bResult$[ebp], al

; 2869 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 2870 : 
; 2871 : 	return 1;

	mov	eax, 1

; 2872 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lHasReligionInMostCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lHasReligionInMostCities
_TEXT	ENDS
EXTRN	?DoesUnitPassFaithPurchaseCheck@CvReligionAIHelpers@@YA_NAAVCvPlayer@@W4UnitTypes@@@Z:PROC ; CvReligionAIHelpers::DoesUnitPassFaithPurchaseCheck
; Function compile flags: /Odtp
;	COMDAT ?lDoesUnitPassFaithPurchaseCheck@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eUnit$ = -8						; size = 4
_bRtnValue$ = -1					; size = 1
_L$ = 8							; size = 4
?lDoesUnitPassFaithPurchaseCheck@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lDoesUnitPassFaithPurchaseCheck, COMDAT

; 2876 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2877 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 2878 : 	UnitTypes eUnit = (UnitTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eUnit$[ebp], eax

; 2879 : 
; 2880 : 	bool bRtnValue = CvReligionAIHelpers::DoesUnitPassFaithPurchaseCheck(*pkPlayer, eUnit);

	mov	edx, DWORD PTR _eUnit$[ebp]
	push	edx
	mov	eax, DWORD PTR _pkPlayer$[ebp]
	push	eax
	call	?DoesUnitPassFaithPurchaseCheck@CvReligionAIHelpers@@YA_NAAVCvPlayer@@W4UnitTypes@@@Z ; CvReligionAIHelpers::DoesUnitPassFaithPurchaseCheck
	add	esp, 8
	mov	BYTE PTR _bRtnValue$[ebp], al

; 2881 : 
; 2882 : 	lua_pushboolean(L, bRtnValue);

	movzx	ecx, BYTE PTR _bRtnValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 2883 : 
; 2884 : 	return 1;

	mov	eax, 1

; 2885 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lDoesUnitPassFaithPurchaseCheck@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lDoesUnitPassFaithPurchaseCheck
_TEXT	ENDS
EXTRN	?GetHappiness@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetHappiness
; Function compile flags: /Odtp
;	COMDAT ?lGetHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetHappiness, COMDAT

; 2889 : {

	push	ebp
	mov	ebp, esp

; 2890 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappiness);

	push	OFFSET ?GetHappiness@CvPlayer@@QBEHXZ	; CvPlayer::GetHappiness
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2891 : }

	pop	ebp
	ret	0
?lGetHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetHappiness
_TEXT	ENDS
EXTRN	?SetHappiness@CvPlayer@@QAEXH@Z:PROC		; CvPlayer::SetHappiness
; Function compile flags: /Odtp
;	COMDAT ?lSetHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lSetHappiness, COMDAT

; 2895 : {

	push	ebp
	mov	ebp, esp

; 2896 : 	return BasicLuaMethod(L, &CvPlayerAI::SetHappiness);

	push	OFFSET ?SetHappiness@CvPlayer@@QAEXH@Z	; CvPlayer::SetHappiness
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2897 : }

	pop	ebp
	ret	0
?lSetHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lSetHappiness
_TEXT	ENDS
EXTRN	?GetExcessHappiness@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetExcessHappiness
; Function compile flags: /Odtp
;	COMDAT ?lGetExcessHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetExcessHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetExcessHappiness, COMDAT

; 2902 : {

	push	ebp
	mov	ebp, esp

; 2903 : 	return BasicLuaMethod(L, &CvPlayerAI::GetExcessHappiness);

	push	OFFSET ?GetExcessHappiness@CvPlayer@@QBEHXZ ; CvPlayer::GetExcessHappiness
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2904 : }

	pop	ebp
	ret	0
?lGetExcessHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetExcessHappiness
_TEXT	ENDS
EXTRN	?IsEmpireUnhappy@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::IsEmpireUnhappy
; Function compile flags: /Odtp
;	COMDAT ?lIsEmpireUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsEmpireUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsEmpireUnhappy, COMDAT

; 2909 : {

	push	ebp
	mov	ebp, esp

; 2910 : 	return BasicLuaMethod(L, &CvPlayerAI::IsEmpireUnhappy);

	push	OFFSET ?IsEmpireUnhappy@CvPlayer@@QBE_NXZ ; CvPlayer::IsEmpireUnhappy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 2911 : }

	pop	ebp
	ret	0
?lIsEmpireUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsEmpireUnhappy
_TEXT	ENDS
EXTRN	?IsEmpireVeryUnhappy@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::IsEmpireVeryUnhappy
; Function compile flags: /Odtp
;	COMDAT ?lIsEmpireVeryUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsEmpireVeryUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsEmpireVeryUnhappy, COMDAT

; 2916 : {

	push	ebp
	mov	ebp, esp

; 2917 : 	return BasicLuaMethod(L, &CvPlayerAI::IsEmpireVeryUnhappy);

	push	OFFSET ?IsEmpireVeryUnhappy@CvPlayer@@QBE_NXZ ; CvPlayer::IsEmpireVeryUnhappy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 2918 : }

	pop	ebp
	ret	0
?lIsEmpireVeryUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsEmpireVeryUnhappy
_TEXT	ENDS
EXTRN	?IsEmpireSuperUnhappy@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::IsEmpireSuperUnhappy
; Function compile flags: /Odtp
;	COMDAT ?lIsEmpireSuperUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsEmpireSuperUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsEmpireSuperUnhappy, COMDAT

; 2923 : {

	push	ebp
	mov	ebp, esp

; 2924 : 	return BasicLuaMethod(L, &CvPlayerAI::IsEmpireSuperUnhappy);

	push	OFFSET ?IsEmpireSuperUnhappy@CvPlayer@@QBE_NXZ ; CvPlayer::IsEmpireSuperUnhappy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 2925 : }

	pop	ebp
	ret	0
?lIsEmpireSuperUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsEmpireSuperUnhappy
_TEXT	ENDS
EXTRN	?GetHappinessFromPolicies@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetHappinessFromPolicies
; Function compile flags: /Odtp
;	COMDAT ?lGetHappinessFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromPolicies, COMDAT

; 2930 : {

	push	ebp
	mov	ebp, esp

; 2931 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessFromPolicies);

	push	OFFSET ?GetHappinessFromPolicies@CvPlayer@@QBEHXZ ; CvPlayer::GetHappinessFromPolicies
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2932 : }

	pop	ebp
	ret	0
?lGetHappinessFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromPolicies
_TEXT	ENDS
EXTRN	?GetHappinessFromCities@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetHappinessFromCities
; Function compile flags: /Odtp
;	COMDAT ?lGetHappinessFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromCities, COMDAT

; 2937 : {

	push	ebp
	mov	ebp, esp

; 2938 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessFromCities);

	push	OFFSET ?GetHappinessFromCities@CvPlayer@@QBEHXZ ; CvPlayer::GetHappinessFromCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2939 : }

	pop	ebp
	ret	0
?lGetHappinessFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromCities
_TEXT	ENDS
EXTRN	?GetHappinessFromBuildings@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetHappinessFromBuildings
; Function compile flags: /Odtp
;	COMDAT ?lGetHappinessFromBuildings@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromBuildings@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromBuildings, COMDAT

; 2944 : {

	push	ebp
	mov	ebp, esp

; 2945 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessFromBuildings);

	push	OFFSET ?GetHappinessFromBuildings@CvPlayer@@QBEHXZ ; CvPlayer::GetHappinessFromBuildings
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2946 : }

	pop	ebp
	ret	0
?lGetHappinessFromBuildings@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromBuildings
_TEXT	ENDS
EXTRN	?GetExtraHappinessPerCity@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetExtraHappinessPerCity
; Function compile flags: /Odtp
;	COMDAT ?lGetExtraHappinessPerCity@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetExtraHappinessPerCity@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetExtraHappinessPerCity, COMDAT

; 2951 : {

	push	ebp
	mov	ebp, esp

; 2952 : 	return BasicLuaMethod(L, &CvPlayerAI::GetExtraHappinessPerCity);

	push	OFFSET ?GetExtraHappinessPerCity@CvPlayer@@QBEHXZ ; CvPlayer::GetExtraHappinessPerCity
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2953 : }

	pop	ebp
	ret	0
?lGetExtraHappinessPerCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetExtraHappinessPerCity
_TEXT	ENDS
EXTRN	?ChangeExtraHappinessPerCity@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeExtraHappinessPerCity
; Function compile flags: /Odtp
;	COMDAT ?lChangeExtraHappinessPerCity@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeExtraHappinessPerCity@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeExtraHappinessPerCity, COMDAT

; 2958 : {

	push	ebp
	mov	ebp, esp

; 2959 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeExtraHappinessPerCity);

	push	OFFSET ?ChangeExtraHappinessPerCity@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeExtraHappinessPerCity
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2960 : }

	pop	ebp
	ret	0
?lChangeExtraHappinessPerCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeExtraHappinessPerCity
_TEXT	ENDS
EXTRN	?GetHappinessFromResources@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetHappinessFromResources
; Function compile flags: /Odtp
;	COMDAT ?lGetHappinessFromResources@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromResources@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromResources, COMDAT

; 2965 : {

	push	ebp
	mov	ebp, esp

; 2966 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessFromResources);

	push	OFFSET ?GetHappinessFromResources@CvPlayer@@QBEHXZ ; CvPlayer::GetHappinessFromResources
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2967 : }

	pop	ebp
	ret	0
?lGetHappinessFromResources@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromResources
_TEXT	ENDS
EXTRN	?GetHappinessFromResourceVariety@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetHappinessFromResourceVariety
; Function compile flags: /Odtp
;	COMDAT ?lGetHappinessFromResourceVariety@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromResourceVariety@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromResourceVariety, COMDAT

; 2972 : {

	push	ebp
	mov	ebp, esp

; 2973 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessFromResourceVariety);

	push	OFFSET ?GetHappinessFromResourceVariety@CvPlayer@@QBEHXZ ; CvPlayer::GetHappinessFromResourceVariety
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2974 : }

	pop	ebp
	ret	0
?lGetHappinessFromResourceVariety@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromResourceVariety
_TEXT	ENDS
EXTRN	?GetExtraHappinessPerLuxury@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetExtraHappinessPerLuxury
; Function compile flags: /Odtp
;	COMDAT ?lGetExtraHappinessPerLuxury@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetExtraHappinessPerLuxury@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetExtraHappinessPerLuxury, COMDAT

; 2979 : {

	push	ebp
	mov	ebp, esp

; 2980 : 	return BasicLuaMethod(L, &CvPlayerAI::GetExtraHappinessPerLuxury);

	push	OFFSET ?GetExtraHappinessPerLuxury@CvPlayer@@QBEHXZ ; CvPlayer::GetExtraHappinessPerLuxury
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2981 : }

	pop	ebp
	ret	0
?lGetExtraHappinessPerLuxury@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetExtraHappinessPerLuxury
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
EXTRN	?GetHappinessFromReligion@CvPlayer@@QAEHXZ:PROC	; CvPlayer::GetHappinessFromReligion
; Function compile flags: /Odtp
;	COMDAT ?lGetHappinessFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromReligion, COMDAT

; 2986 : {

	push	ebp
	mov	ebp, esp

; 2987 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessFromReligion);

	push	OFFSET ?GetHappinessFromReligion@CvPlayer@@QAEHXZ ; CvPlayer::GetHappinessFromReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2988 : }

	pop	ebp
	ret	0
?lGetHappinessFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromReligion
_TEXT	ENDS
EXTRN	?GetHappinessFromNaturalWonders@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetHappinessFromNaturalWonders
; Function compile flags: /Odtp
;	COMDAT ?lGetHappinessFromNaturalWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromNaturalWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromNaturalWonders, COMDAT

; 2993 : {

	push	ebp
	mov	ebp, esp

; 2994 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessFromNaturalWonders);

	push	OFFSET ?GetHappinessFromNaturalWonders@CvPlayer@@QBEHXZ ; CvPlayer::GetHappinessFromNaturalWonders
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2995 : }

	pop	ebp
	ret	0
?lGetHappinessFromNaturalWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromNaturalWonders
_TEXT	ENDS
EXTRN	?GetHappinessFromLeagues@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetHappinessFromLeagues
; Function compile flags: /Odtp
;	COMDAT ?lGetHappinessFromLeagues@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromLeagues@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromLeagues, COMDAT

; 3000 : {

	push	ebp
	mov	ebp, esp

; 3001 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessFromLeagues);

	push	OFFSET ?GetHappinessFromLeagues@CvPlayer@@QBEHXZ ; CvPlayer::GetHappinessFromLeagues
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3002 : }

	pop	ebp
	ret	0
?lGetHappinessFromLeagues@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromLeagues
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HPAVCvCity@@PAV1@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHPAVCvCity@@1@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,CvCity *,CvCity *>
EXTRN	?GetUnhappiness@CvPlayer@@QBEHPAVCvCity@@0@Z:PROC ; CvPlayer::GetUnhappiness
; Function compile flags: /Odtp
;	COMDAT ?lGetUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetUnhappiness, COMDAT

; 3007 : {

	push	ebp
	mov	ebp, esp

; 3008 : 	return BasicLuaMethod(L, &CvPlayerAI::GetUnhappiness);

	push	OFFSET ?GetUnhappiness@CvPlayer@@QBEHPAVCvCity@@0@Z ; CvPlayer::GetUnhappiness
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HPAVCvCity@@PAV1@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHPAVCvCity@@1@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,CvCity *,CvCity *>
	add	esp, 8

; 3009 : }

	pop	ebp
	ret	0
?lGetUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetUnhappiness
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetUnhappinessForecast@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -16					; size = 4
_pkAssumeCityPuppeted$ = -12				; size = 4
_pkAssumeCityAnnexed$ = -8				; size = 4
_iUnhappiness$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetUnhappinessForecast@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnhappinessForecast, COMDAT

; 3014 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 3015 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3016 : 	CvCity* pkAssumeCityAnnexed = CvLuaCity::GetInstance(L, 2, false);

	push	0
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkAssumeCityAnnexed$[ebp], eax

; 3017 : 	CvCity* pkAssumeCityPuppeted = CvLuaCity::GetInstance(L, 3, false);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkAssumeCityPuppeted$[ebp], eax

; 3018 : 
; 3019 : 	const int iUnhappiness = pkPlayer->GetUnhappiness(pkAssumeCityAnnexed, pkAssumeCityPuppeted);

	mov	eax, DWORD PTR _pkAssumeCityPuppeted$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkAssumeCityAnnexed$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetUnhappiness@CvPlayer@@QBEHPAVCvCity@@0@Z ; CvPlayer::GetUnhappiness
	mov	DWORD PTR _iUnhappiness$[ebp], eax

; 3020 : 	lua_pushinteger(L, iUnhappiness);

	mov	edx, DWORD PTR _iUnhappiness$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 3021 : 	return 1;

	mov	eax, 1

; 3022 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetUnhappinessForecast@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnhappinessForecast
_TEXT	ENDS
EXTRN	?GetUnhappinessFromCityForUI@CvPlayer@@QBEHPAVCvCity@@@Z:PROC ; CvPlayer::GetUnhappinessFromCityForUI
; Function compile flags: /Odtp
;	COMDAT ?lGetUnhappinessFromCityForUI@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_iUnhappiness$ = -8					; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetUnhappinessFromCityForUI@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnhappinessFromCityForUI, COMDAT

; 3027 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3028 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3029 : 	CvCity* pkCity = CvLuaCity::GetInstance(L, 2, false);

	push	0
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 3030 : 
; 3031 : 	const int iUnhappiness = pkPlayer->GetUnhappinessFromCityForUI(pkCity);

	mov	edx, DWORD PTR _pkCity$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetUnhappinessFromCityForUI@CvPlayer@@QBEHPAVCvCity@@@Z ; CvPlayer::GetUnhappinessFromCityForUI
	mov	DWORD PTR _iUnhappiness$[ebp], eax

; 3032 : 	lua_pushinteger(L, iUnhappiness);

	mov	eax, DWORD PTR _iUnhappiness$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3033 : 	return 1;

	mov	eax, 1

; 3034 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetUnhappinessFromCityForUI@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnhappinessFromCityForUI
_TEXT	ENDS
EXTRN	?GetUnhappinessFromCityCount@CvPlayer@@QBEHPAVCvCity@@0@Z:PROC ; CvPlayer::GetUnhappinessFromCityCount
; Function compile flags: /Odtp
;	COMDAT ?lGetUnhappinessFromCityCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pAnnexedCity$ = -16					; size = 4
_pkPlayer$ = -12					; size = 4
_pPuppetedCity$ = -8					; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetUnhappinessFromCityCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnhappinessFromCityCount, COMDAT

; 3039 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 3040 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3041 : 	CvCity* pAnnexedCity = CvLuaCity::GetInstance(L, 2, false);

	push	0
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pAnnexedCity$[ebp], eax

; 3042 : 	CvCity* pPuppetedCity = CvLuaCity::GetInstance(L, 3, false);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pPuppetedCity$[ebp], eax

; 3043 : 	const int iResult = pkPlayer->GetUnhappinessFromCityCount(pAnnexedCity, pPuppetedCity);

	mov	eax, DWORD PTR _pPuppetedCity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pAnnexedCity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetUnhappinessFromCityCount@CvPlayer@@QBEHPAVCvCity@@0@Z ; CvPlayer::GetUnhappinessFromCityCount
	mov	DWORD PTR _iResult$[ebp], eax

; 3044 : 	lua_pushinteger(L, iResult);

	mov	edx, DWORD PTR _iResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 3045 : 	return 1;

	mov	eax, 1

; 3046 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetUnhappinessFromCityCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnhappinessFromCityCount
_TEXT	ENDS
EXTRN	?GetUnhappinessFromCapturedCityCount@CvPlayer@@QBEHPAVCvCity@@0@Z:PROC ; CvPlayer::GetUnhappinessFromCapturedCityCount
; Function compile flags: /Odtp
;	COMDAT ?lGetUnhappinessFromCapturedCityCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnhappinessFromCapturedCityCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnhappinessFromCapturedCityCount, COMDAT

; 3051 : {

	push	ebp
	mov	ebp, esp

; 3052 : 	return BasicLuaMethod(L, &CvPlayerAI::GetUnhappinessFromCapturedCityCount);

	push	OFFSET ?GetUnhappinessFromCapturedCityCount@CvPlayer@@QBEHPAVCvCity@@0@Z ; CvPlayer::GetUnhappinessFromCapturedCityCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HPAVCvCity@@PAV1@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHPAVCvCity@@1@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,CvCity *,CvCity *>
	add	esp, 8

; 3053 : }

	pop	ebp
	ret	0
?lGetUnhappinessFromCapturedCityCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnhappinessFromCapturedCityCount
_TEXT	ENDS
EXTRN	?GetUnhappinessFromCityPopulation@CvPlayer@@QBEHPAVCvCity@@0@Z:PROC ; CvPlayer::GetUnhappinessFromCityPopulation
; Function compile flags: /Odtp
;	COMDAT ?lGetUnhappinessFromCityPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnhappinessFromCityPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnhappinessFromCityPopulation, COMDAT

; 3058 : {

	push	ebp
	mov	ebp, esp

; 3059 : 	return BasicLuaMethod(L, &CvPlayerAI::GetUnhappinessFromCityPopulation);

	push	OFFSET ?GetUnhappinessFromCityPopulation@CvPlayer@@QBEHPAVCvCity@@0@Z ; CvPlayer::GetUnhappinessFromCityPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HPAVCvCity@@PAV1@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHPAVCvCity@@1@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,CvCity *,CvCity *>
	add	esp, 8

; 3060 : }

	pop	ebp
	ret	0
?lGetUnhappinessFromCityPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnhappinessFromCityPopulation
_TEXT	ENDS
EXTRN	?GetUnhappinessFromCitySpecialists@CvPlayer@@QBEHPAVCvCity@@0@Z:PROC ; CvPlayer::GetUnhappinessFromCitySpecialists
; Function compile flags: /Odtp
;	COMDAT ?lGetUnhappinessFromCitySpecialists@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pAnnexedCity$ = -16					; size = 4
_pkPlayer$ = -12					; size = 4
_pPuppetedCity$ = -8					; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetUnhappinessFromCitySpecialists@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnhappinessFromCitySpecialists, COMDAT

; 3065 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 3066 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3067 : 	CvCity* pAnnexedCity = CvLuaCity::GetInstance(L, 2, false);

	push	0
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pAnnexedCity$[ebp], eax

; 3068 : 	CvCity* pPuppetedCity = CvLuaCity::GetInstance(L, 3, false);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pPuppetedCity$[ebp], eax

; 3069 : 	const int iResult = pkPlayer->GetUnhappinessFromCitySpecialists(pAnnexedCity, pPuppetedCity);

	mov	eax, DWORD PTR _pPuppetedCity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pAnnexedCity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetUnhappinessFromCitySpecialists@CvPlayer@@QBEHPAVCvCity@@0@Z ; CvPlayer::GetUnhappinessFromCitySpecialists
	mov	DWORD PTR _iResult$[ebp], eax

; 3070 : 	lua_pushinteger(L, iResult);

	mov	edx, DWORD PTR _iResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 3071 : 	return 1;

	mov	eax, 1

; 3072 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetUnhappinessFromCitySpecialists@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnhappinessFromCitySpecialists
_TEXT	ENDS
EXTRN	?GetUnhappinessFromPuppetCityPopulation@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetUnhappinessFromPuppetCityPopulation
; Function compile flags: /Odtp
;	COMDAT ?lGetUnhappinessFromPuppetCityPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnhappinessFromPuppetCityPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnhappinessFromPuppetCityPopulation, COMDAT

; 3077 : {

	push	ebp
	mov	ebp, esp

; 3078 : 	return BasicLuaMethod(L, &CvPlayerAI::GetUnhappinessFromPuppetCityPopulation);

	push	OFFSET ?GetUnhappinessFromPuppetCityPopulation@CvPlayer@@QBEHXZ ; CvPlayer::GetUnhappinessFromPuppetCityPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3079 : }

	pop	ebp
	ret	0
?lGetUnhappinessFromPuppetCityPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnhappinessFromPuppetCityPopulation
_TEXT	ENDS
EXTRN	?GetUnhappinessFromOccupiedCities@CvPlayer@@QBEHPAVCvCity@@0@Z:PROC ; CvPlayer::GetUnhappinessFromOccupiedCities
; Function compile flags: /Odtp
;	COMDAT ?lGetUnhappinessFromOccupiedCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnhappinessFromOccupiedCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnhappinessFromOccupiedCities, COMDAT

; 3084 : {

	push	ebp
	mov	ebp, esp

; 3085 : 	return BasicLuaMethod(L, &CvPlayerAI::GetUnhappinessFromOccupiedCities);

	push	OFFSET ?GetUnhappinessFromOccupiedCities@CvPlayer@@QBEHPAVCvCity@@0@Z ; CvPlayer::GetUnhappinessFromOccupiedCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HPAVCvCity@@PAV1@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHPAVCvCity@@1@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,CvCity *,CvCity *>
	add	esp, 8

; 3086 : }

	pop	ebp
	ret	0
?lGetUnhappinessFromOccupiedCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnhappinessFromOccupiedCities
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetUnhappinessFromPublicOpinion@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetUnhappinessFromPublicOpinion@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnhappinessFromPublicOpinion, COMDAT

; 3091 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3092 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3093 : 	const int iResult = pkPlayer->GetCulture()->GetPublicOpinionUnhappiness();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetPublicOpinionUnhappiness@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetPublicOpinionUnhappiness
	mov	DWORD PTR _iResult$[ebp], eax

; 3094 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3095 : 	return 1;

	mov	eax, 1

; 3096 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetUnhappinessFromPublicOpinion@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnhappinessFromPublicOpinion
_TEXT	ENDS
EXTRN	?GetUnhappinessFromUnits@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetUnhappinessFromUnits
; Function compile flags: /Odtp
;	COMDAT ?lGetUnhappinessFromUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnhappinessFromUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnhappinessFromUnits, COMDAT

; 3101 : {

	push	ebp
	mov	ebp, esp

; 3102 : 	return BasicLuaMethod(L, &CvPlayerAI::GetUnhappinessFromUnits);

	push	OFFSET ?GetUnhappinessFromUnits@CvPlayer@@QBEHXZ ; CvPlayer::GetUnhappinessFromUnits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3103 : }

	pop	ebp
	ret	0
?lGetUnhappinessFromUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnhappinessFromUnits
_TEXT	ENDS
EXTRN	?ChangeUnhappinessFromUnits@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeUnhappinessFromUnits
; Function compile flags: /Odtp
;	COMDAT ?lChangeUnhappinessFromUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeUnhappinessFromUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeUnhappinessFromUnits, COMDAT

; 3108 : {

	push	ebp
	mov	ebp, esp

; 3109 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeUnhappinessFromUnits);

	push	OFFSET ?ChangeUnhappinessFromUnits@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeUnhappinessFromUnits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3110 : }

	pop	ebp
	ret	0
?lChangeUnhappinessFromUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeUnhappinessFromUnits
_TEXT	ENDS
EXTRN	?GetUnhappinessMod@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetUnhappinessMod
; Function compile flags: /Odtp
;	COMDAT ?lGetUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnhappinessMod, COMDAT

; 3114 : {

	push	ebp
	mov	ebp, esp

; 3115 : 	return BasicLuaMethod(L, &CvPlayerAI::GetUnhappinessMod);

	push	OFFSET ?GetUnhappinessMod@CvPlayer@@QBEHXZ ; CvPlayer::GetUnhappinessMod
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3116 : }

	pop	ebp
	ret	0
?lGetUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnhappinessMod
_TEXT	ENDS
EXTRN	?GetCityCountUnhappinessMod@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetCityCountUnhappinessMod
; Function compile flags: /Odtp
;	COMDAT ?lGetCityCountUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCityCountUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCityCountUnhappinessMod, COMDAT

; 3120 : {

	push	ebp
	mov	ebp, esp

; 3121 : 	return BasicLuaMethod(L, &CvPlayerAI::GetCityCountUnhappinessMod);

	push	OFFSET ?GetCityCountUnhappinessMod@CvPlayer@@QBEHXZ ; CvPlayer::GetCityCountUnhappinessMod
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3122 : }

	pop	ebp
	ret	0
?lGetCityCountUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCityCountUnhappinessMod
_TEXT	ENDS
EXTRN	?GetOccupiedPopulationUnhappinessMod@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetOccupiedPopulationUnhappinessMod
; Function compile flags: /Odtp
;	COMDAT ?lGetOccupiedPopulationUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetOccupiedPopulationUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetOccupiedPopulationUnhappinessMod, COMDAT

; 3126 : {

	push	ebp
	mov	ebp, esp

; 3127 : 	return BasicLuaMethod(L, &CvPlayerAI::GetOccupiedPopulationUnhappinessMod);

	push	OFFSET ?GetOccupiedPopulationUnhappinessMod@CvPlayer@@QBEHXZ ; CvPlayer::GetOccupiedPopulationUnhappinessMod
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3128 : }

	pop	ebp
	ret	0
?lGetOccupiedPopulationUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetOccupiedPopulationUnhappinessMod
_TEXT	ENDS
EXTRN	?GetCapitalUnhappinessMod@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetCapitalUnhappinessMod
; Function compile flags: /Odtp
;	COMDAT ?lGetCapitalUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCapitalUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCapitalUnhappinessMod, COMDAT

; 3132 : {

	push	ebp
	mov	ebp, esp

; 3133 : 	return BasicLuaMethod(L, &CvPlayerAI::GetCapitalUnhappinessMod);

	push	OFFSET ?GetCapitalUnhappinessMod@CvPlayer@@QBEHXZ ; CvPlayer::GetCapitalUnhappinessMod
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3134 : }

	pop	ebp
	ret	0
?lGetCapitalUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCapitalUnhappinessMod
_TEXT	ENDS
EXTRN	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ:PROC ; CvPlayer::GetPlayerTraits
; Function compile flags: /Odtp
;	COMDAT ?lGetTraitCityUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T243873 = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetTraitCityUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTraitCityUnhappinessMod, COMDAT

; 3138 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3139 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3140 : 	const int iResult = pkPlayer->GetPlayerTraits()->GetCityUnhappinessModifier();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T243873[ebp], eax
	mov	ecx, DWORD PTR $T243873[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR _iResult$[ebp], edx

; 3141 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3142 : 	return 1;

	mov	eax, 1

; 3143 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTraitCityUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTraitCityUnhappinessMod
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetTraitPopUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T243879 = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetTraitPopUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTraitPopUnhappinessMod, COMDAT

; 3147 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3148 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3149 : 	const int iResult = pkPlayer->GetPlayerTraits()->GetPopulationUnhappinessModifier();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T243879[ebp], eax
	mov	ecx, DWORD PTR $T243879[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR _iResult$[ebp], edx

; 3150 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3151 : 	return 1;

	mov	eax, 1

; 3152 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTraitPopUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTraitPopUnhappinessMod
_TEXT	ENDS
EXTRN	?isHalfSpecialistUnhappiness@CvPlayer@@QBE_NXZ:PROC ; CvPlayer::isHalfSpecialistUnhappiness
; Function compile flags: /Odtp
;	COMDAT ?lIsHalfSpecialistUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHalfSpecialistUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsHalfSpecialistUnhappiness, COMDAT

; 3156 : {

	push	ebp
	mov	ebp, esp

; 3157 : 	return BasicLuaMethod(L, &CvPlayerAI::isHalfSpecialistUnhappiness);

	push	OFFSET ?isHalfSpecialistUnhappiness@CvPlayer@@QBE_NXZ ; CvPlayer::isHalfSpecialistUnhappiness
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 3158 : }

	pop	ebp
	ret	0
?lIsHalfSpecialistUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsHalfSpecialistUnhappiness
_TEXT	ENDS
EXTRN	?GetHappinessPerGarrisonedUnit@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetHappinessPerGarrisonedUnit
; Function compile flags: /Odtp
;	COMDAT ?lGetHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessPerGarrisonedUnit, COMDAT

; 3163 : {

	push	ebp
	mov	ebp, esp

; 3164 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessPerGarrisonedUnit);

	push	OFFSET ?GetHappinessPerGarrisonedUnit@CvPlayer@@QBEHXZ ; CvPlayer::GetHappinessPerGarrisonedUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3165 : }

	pop	ebp
	ret	0
?lGetHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessPerGarrisonedUnit
_TEXT	ENDS
EXTRN	?SetHappinessPerGarrisonedUnit@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::SetHappinessPerGarrisonedUnit
; Function compile flags: /Odtp
;	COMDAT ?lSetHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetHappinessPerGarrisonedUnit, COMDAT

; 3169 : {

	push	ebp
	mov	ebp, esp

; 3170 : 	return BasicLuaMethod(L, &CvPlayerAI::SetHappinessPerGarrisonedUnit);

	push	OFFSET ?SetHappinessPerGarrisonedUnit@CvPlayer@@QAEXH@Z ; CvPlayer::SetHappinessPerGarrisonedUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3171 : }

	pop	ebp
	ret	0
?lSetHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetHappinessPerGarrisonedUnit
_TEXT	ENDS
EXTRN	?ChangeHappinessPerGarrisonedUnit@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeHappinessPerGarrisonedUnit
; Function compile flags: /Odtp
;	COMDAT ?lChangeHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeHappinessPerGarrisonedUnit, COMDAT

; 3175 : {

	push	ebp
	mov	ebp, esp

; 3176 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeHappinessPerGarrisonedUnit);

	push	OFFSET ?ChangeHappinessPerGarrisonedUnit@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeHappinessPerGarrisonedUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3177 : }

	pop	ebp
	ret	0
?lChangeHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeHappinessPerGarrisonedUnit
_TEXT	ENDS
EXTRN	?GetHappinessFromTradeRoutes@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetHappinessFromTradeRoutes
; Function compile flags: /Odtp
;	COMDAT ?lGetHappinessFromTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromTradeRoutes, COMDAT

; 3181 : {

	push	ebp
	mov	ebp, esp

; 3182 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessFromTradeRoutes);

	push	OFFSET ?GetHappinessFromTradeRoutes@CvPlayer@@QBEHXZ ; CvPlayer::GetHappinessFromTradeRoutes
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3183 : }

	pop	ebp
	ret	0
?lGetHappinessFromTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromTradeRoutes
_TEXT	ENDS
EXTRN	?GetHappinessPerTradeRoute@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetHappinessPerTradeRoute
; Function compile flags: /Odtp
;	COMDAT ?lGetHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessPerTradeRoute, COMDAT

; 3187 : {

	push	ebp
	mov	ebp, esp

; 3188 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessPerTradeRoute);

	push	OFFSET ?GetHappinessPerTradeRoute@CvPlayer@@QBEHXZ ; CvPlayer::GetHappinessPerTradeRoute
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3189 : }

	pop	ebp
	ret	0
?lGetHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessPerTradeRoute
_TEXT	ENDS
EXTRN	?SetHappinessPerTradeRoute@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::SetHappinessPerTradeRoute
; Function compile flags: /Odtp
;	COMDAT ?lSetHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetHappinessPerTradeRoute, COMDAT

; 3193 : {

	push	ebp
	mov	ebp, esp

; 3194 : 	return BasicLuaMethod(L, &CvPlayerAI::SetHappinessPerTradeRoute);

	push	OFFSET ?SetHappinessPerTradeRoute@CvPlayer@@QAEXH@Z ; CvPlayer::SetHappinessPerTradeRoute
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3195 : }

	pop	ebp
	ret	0
?lSetHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetHappinessPerTradeRoute
_TEXT	ENDS
EXTRN	?ChangeHappinessPerTradeRoute@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeHappinessPerTradeRoute
; Function compile flags: /Odtp
;	COMDAT ?lChangeHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeHappinessPerTradeRoute, COMDAT

; 3199 : {

	push	ebp
	mov	ebp, esp

; 3200 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeHappinessPerTradeRoute);

	push	OFFSET ?ChangeHappinessPerTradeRoute@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeHappinessPerTradeRoute
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3201 : }

	pop	ebp
	ret	0
?lChangeHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeHappinessPerTradeRoute
_TEXT	ENDS
EXTRN	?GetCityConnectionTradeRouteGoldModifier@CvTreasury@@QBEHXZ:PROC ; CvTreasury::GetCityConnectionTradeRouteGoldModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetCityConnectionTradeRouteGoldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCityConnectionTradeRouteGoldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCityConnectionTradeRouteGoldModifier, COMDAT

; 3205 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3206 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3207 : 	const int iResult = pkPlayer->GetTreasury()->GetCityConnectionTradeRouteGoldModifier();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetCityConnectionTradeRouteGoldModifier@CvTreasury@@QBEHXZ ; CvTreasury::GetCityConnectionTradeRouteGoldModifier
	mov	DWORD PTR _iResult$[ebp], eax

; 3208 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3209 : 	return 1;

	mov	eax, 1

; 3210 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCityConnectionTradeRouteGoldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCityConnectionTradeRouteGoldModifier
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ; std::_Vector_val<CvString,std::allocator<CvString> >::~_Vector_val<CvString,std::allocator<CvString> >
PUBLIC	??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ; std::vector<CvString,std::allocator<CvString> >::~vector<CvString,std::allocator<CvString> >
PUBLIC	??_C@_06ENNEIMBA@String?$AA@			; `string'
PUBLIC	?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ ; std::vector<CvString,std::allocator<CvString> >::_Tidy
PUBLIC	??4?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<CvString,std::allocator<CvString> >::operator=
PUBLIC	??0?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ; std::vector<CvString,std::allocator<CvString> >::vector<CvString,std::allocator<CvString> >
EXTRN	_lua_gettop:PROC
EXTRN	?GetPlotToolTips@CvPlayerTrade@@QAE?AV?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@PAVCvPlot@@@Z:PROC ; CvPlayerTrade::GetPlotToolTips
EXTRN	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ:PROC ; CvPlayer::GetTrade
;	COMDAT ??_C@_06ENNEIMBA@String?$AA@
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
CONST	SEGMENT
??_C@_06ENNEIMBA@String?$AA@ DB 'String', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$9
__ehfuncinfo$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv145 = -304						; size = 4
tv151 = -300						; size = 4
tv76 = -296						; size = 4
$T244362 = -256						; size = 4
$T243901 = -68						; size = 4
$T243900 = -64						; size = 16
_t$229342 = -48						; size = 4
_i$229338 = -44						; size = 4
_pkPlayer$ = -40					; size = 4
_pPlot$ = -36						; size = 4
_index$ = -32						; size = 4
_astrToolTips$ = -28					; size = 16
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRoutePlotToolTip, COMDAT

; 3214 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 292				; 00000124H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 3215 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 3216 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3217 : 	CvPlot* pPlot = CvLuaPlot::GetInstance(L, 2, false);

	push	0
	push	2
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pPlot$[ebp], eax

; 3218 : 	std::vector<CvString> astrToolTips;

	lea	ecx, DWORD PTR _astrToolTips$[ebp]
	call	??0?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ; std::vector<CvString,std::allocator<CvString> >::vector<CvString,std::allocator<CvString> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3219 : 	astrToolTips = pkPlayer->GetTrade()->GetPlotToolTips(pPlot);

	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T243900[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetPlotToolTips@CvPlayerTrade@@QAE?AV?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@PAVCvPlot@@@Z ; CvPlayerTrade::GetPlotToolTips
	mov	DWORD PTR tv76[ebp], eax
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR tv151[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv151[ebp]
	push	eax
	lea	ecx, DWORD PTR _astrToolTips$[ebp]
	call	??4?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<CvString,std::allocator<CvString> >::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T243900[ebp]
	call	?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ ; std::vector<CvString,std::allocator<CvString> >::_Tidy
	mov	BYTE PTR __$EHRec$[ebp+8], 0

; 3220 : 
; 3221 : 	int index = 1;

	mov	DWORD PTR _index$[ebp], 1

; 3222 : 	for (int i = astrToolTips.size(); i > 0; i--)

	mov	eax, DWORD PTR _astrToolTips$[ebp+8]
	sub	eax, DWORD PTR _astrToolTips$[ebp+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR _i$229338[ebp], eax
	jmp	SHORT $LN3@lGetIntern
$LN2@lGetIntern:
	mov	edx, DWORD PTR _i$229338[ebp]
	sub	edx, 1
	mov	DWORD PTR _i$229338[ebp], edx
$LN3@lGetIntern:
	cmp	DWORD PTR _i$229338[ebp], 0
	jle	$LN1@lGetIntern

; 3223 : 	{
; 3224 : 		lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 3225 : 		const int t = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$229342[ebp], eax

; 3226 : 		lua_pushstring(L, astrToolTips[i - 1]);

	mov	edx, DWORD PTR _i$229338[ebp]
	sub	edx, 1
	imul	edx, 28					; 0000001cH
	add	edx, DWORD PTR _astrToolTips$[ebp+4]
	mov	DWORD PTR $T244362[ebp], edx
	mov	ecx, DWORD PTR $T244362[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 3227 : 		lua_setfield(L, t, "String");

	push	OFFSET ??_C@_06ENNEIMBA@String?$AA@
	mov	ecx, DWORD PTR _t$229342[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 3228 : 		lua_rawseti(L, -2, index++);

	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv145[ebp], eax
	mov	ecx, DWORD PTR tv145[ebp]
	push	ecx
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax

; 3229 : 	}

	jmp	$LN2@lGetIntern
$LN1@lGetIntern:

; 3230 : 
; 3231 : 	return 1;

	mov	DWORD PTR $T243901[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _astrToolTips$[ebp]
	call	?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ ; std::vector<CvString,std::allocator<CvString> >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T243901[ebp]

; 3232 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _astrToolTips$[ebp]
	jmp	??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ; std::vector<CvString,std::allocator<CvString> >::~vector<CvString,std::allocator<CvString> >
__unwindfunclet$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR $T243900[ebp]
	jmp	??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ; std::vector<CvString,std::allocator<CvString> >::~vector<CvString,std::allocator<CvString> >
__unwindfunclet$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$6:
	lea	ecx, DWORD PTR $T243900[ebp]
	jmp	??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
__unwindfunclet$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$9:
	lea	ecx, DWORD PTR _astrToolTips$[ebp]
	jmp	??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
__ehhandler$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRoutePlotToolTip
EXTRN	?GetPlotMouseoverToolTips@CvPlayerTrade@@QAE?AV?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@PAVCvPlot@@@Z:PROC ; CvPlayerTrade::GetPlotMouseoverToolTips
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$9
__ehfuncinfo$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv145 = -304						; size = 4
tv151 = -300						; size = 4
tv76 = -296						; size = 4
$T244957 = -256						; size = 4
$T244496 = -68						; size = 4
$T244495 = -64						; size = 16
_t$229360 = -48						; size = 4
_i$229356 = -44						; size = 4
_pkPlayer$ = -40					; size = 4
_pPlot$ = -36						; size = 4
_index$ = -32						; size = 4
_astrToolTips$ = -28					; size = 16
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRoutePlotMouseoverToolTip, COMDAT

; 3236 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 292				; 00000124H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 3237 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 3238 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3239 : 	CvPlot* pPlot = CvLuaPlot::GetInstance(L, 2, false);

	push	0
	push	2
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pPlot$[ebp], eax

; 3240 : 	std::vector<CvString> astrToolTips;

	lea	ecx, DWORD PTR _astrToolTips$[ebp]
	call	??0?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ; std::vector<CvString,std::allocator<CvString> >::vector<CvString,std::allocator<CvString> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3241 : 	astrToolTips = pkPlayer->GetTrade()->GetPlotMouseoverToolTips(pPlot);

	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T244495[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetPlotMouseoverToolTips@CvPlayerTrade@@QAE?AV?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@PAVCvPlot@@@Z ; CvPlayerTrade::GetPlotMouseoverToolTips
	mov	DWORD PTR tv76[ebp], eax
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR tv151[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv151[ebp]
	push	eax
	lea	ecx, DWORD PTR _astrToolTips$[ebp]
	call	??4?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<CvString,std::allocator<CvString> >::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T244495[ebp]
	call	?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ ; std::vector<CvString,std::allocator<CvString> >::_Tidy
	mov	BYTE PTR __$EHRec$[ebp+8], 0

; 3242 : 
; 3243 : 	int index = 1;

	mov	DWORD PTR _index$[ebp], 1

; 3244 : 	for (int i = astrToolTips.size(); i > 0; i--)

	mov	eax, DWORD PTR _astrToolTips$[ebp+8]
	sub	eax, DWORD PTR _astrToolTips$[ebp+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR _i$229356[ebp], eax
	jmp	SHORT $LN3@lGetIntern@2
$LN2@lGetIntern@2:
	mov	edx, DWORD PTR _i$229356[ebp]
	sub	edx, 1
	mov	DWORD PTR _i$229356[ebp], edx
$LN3@lGetIntern@2:
	cmp	DWORD PTR _i$229356[ebp], 0
	jle	$LN1@lGetIntern@2

; 3245 : 	{
; 3246 : 		lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 3247 : 		const int t = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$229360[ebp], eax

; 3248 : 		lua_pushstring(L, astrToolTips[i - 1]);

	mov	edx, DWORD PTR _i$229356[ebp]
	sub	edx, 1
	imul	edx, 28					; 0000001cH
	add	edx, DWORD PTR _astrToolTips$[ebp+4]
	mov	DWORD PTR $T244957[ebp], edx
	mov	ecx, DWORD PTR $T244957[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 3249 : 		lua_setfield(L, t, "String");

	push	OFFSET ??_C@_06ENNEIMBA@String?$AA@
	mov	ecx, DWORD PTR _t$229360[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 3250 : 		lua_rawseti(L, -2, index++);

	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv145[ebp], eax
	mov	ecx, DWORD PTR tv145[ebp]
	push	ecx
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax

; 3251 : 	}

	jmp	$LN2@lGetIntern@2
$LN1@lGetIntern@2:

; 3252 : 
; 3253 : 	return 1;	

	mov	DWORD PTR $T244496[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _astrToolTips$[ebp]
	call	?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ ; std::vector<CvString,std::allocator<CvString> >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T244496[ebp]

; 3254 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _astrToolTips$[ebp]
	jmp	??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ; std::vector<CvString,std::allocator<CvString> >::~vector<CvString,std::allocator<CvString> >
__unwindfunclet$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR $T244495[ebp]
	jmp	??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ; std::vector<CvString,std::allocator<CvString> >::~vector<CvString,std::allocator<CvString> >
__unwindfunclet$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$6:
	lea	ecx, DWORD PTR $T244495[ebp]
	jmp	??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
__unwindfunclet$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$9:
	lea	ecx, DWORD PTR _astrToolTips$[ebp]
	jmp	??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
__ehhandler$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRoutePlotMouseoverToolTip
EXTRN	?GetNumTradeRoutesUsed@CvPlayerTrade@@QAEH_N@Z:PROC ; CvPlayerTrade::GetNumTradeRoutesUsed
; Function compile flags: /Odtp
;	COMDAT ?lGetNumInternationalTradeRoutesUsed@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumInternationalTradeRoutesUsed@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumInternationalTradeRoutesUsed, COMDAT

; 3258 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3259 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3260 : 	const int iResult = pkPlayer->GetTrade()->GetNumTradeRoutesUsed(true);

	push	1
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetNumTradeRoutesUsed@CvPlayerTrade@@QAEH_N@Z ; CvPlayerTrade::GetNumTradeRoutesUsed
	mov	DWORD PTR _iResult$[ebp], eax

; 3261 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3262 : 	return 1;

	mov	eax, 1

; 3263 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumInternationalTradeRoutesUsed@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumInternationalTradeRoutesUsed
_TEXT	ENDS
EXTRN	?GetNumTradeRoutesPossible@CvPlayerTrade@@QAEIXZ:PROC ; CvPlayerTrade::GetNumTradeRoutesPossible
; Function compile flags: /Odtp
;	COMDAT ?lGetNumInternationalTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumInternationalTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumInternationalTradeRoutesAvailable, COMDAT

; 3267 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3268 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3269 : 	const int iResult = pkPlayer->GetTrade()->GetNumTradeRoutesPossible();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetNumTradeRoutesPossible@CvPlayerTrade@@QAEIXZ ; CvPlayerTrade::GetNumTradeRoutesPossible
	mov	DWORD PTR _iResult$[ebp], eax

; 3270 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3271 : 	return 1;

	mov	eax, 1

; 3272 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumInternationalTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumInternationalTradeRoutesAvailable
_TEXT	ENDS
PUBLIC	??1TradeConnection@@QAE@XZ			; TradeConnection::~TradeConnection
PUBLIC	??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::~FStaticVector<TradeConnectionPlot,40,0,297,0>
PUBLIC	??_C@_06JAMLCLDI@Yields?$AA@			; `string'
PUBLIC	??_C@_06BFDFLGKN@Theirs?$AA@			; `string'
PUBLIC	??_C@_04IFFDFFFL@Mine?$AA@			; `string'
PUBLIC	??_C@_0O@DHCPBEKK@OldTradeRoute?$AA@		; `string'
PUBLIC	??_C@_0BD@FABCJLPH@FromPressureAmount?$AA@	; `string'
PUBLIC	??_C@_0N@LACMGDJC@FromReligion?$AA@		; `string'
PUBLIC	??_C@_0BB@FEEFCBCL@ToPressureAmount?$AA@	; `string'
PUBLIC	??_C@_0L@OHINJIE@ToReligion?$AA@		; `string'
PUBLIC	??_C@_0BE@LJDBLBNE@TradeConnectionType?$AA@	; `string'
PUBLIC	??_C@_01NFFPALBN@Y?$AA@				; `string'
PUBLIC	??_C@_01MMEEDKFM@X?$AA@				; `string'
PUBLIC	??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::FStaticVector<TradeConnectionPlot,40,0,297,0>
PUBLIC	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ		; CvPlot::getPlotCity
PUBLIC	__$ArrayPad$
EXTRN	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z:PROC ; CvPlayerTrade::GetTradeConnectionValueTimes100
EXTRN	?IsPreviousTradeRoute@CvPlayerTrade@@QAE_NPAVCvCity@@0W4DomainTypes@@W4TradeConnectionType@@@Z:PROC ; CvPlayerTrade::IsPreviousTradeRoute
EXTRN	?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z:PROC ; CvCityReligions::WouldExertTradeRoutePressureToward
EXTRN	?canMakeTradeRouteAt@CvUnit@@QBE_NPBVCvPlot@@HHW4TradeConnectionType@@@Z:PROC ; CvUnit::canMakeTradeRouteAt
EXTRN	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z:PROC	; CvPlayer::nextCity
EXTRN	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z:PROC	; CvPlayer::firstCity
EXTRN	?getDomainType@CvUnit@@QBE?AW4DomainTypes@@XZ:PROC ; CvUnit::getDomainType
EXTRN	?canMakeTradeRoute@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC ; CvUnit::canMakeTradeRoute
;	COMDAT ??_C@_06JAMLCLDI@Yields?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_06JAMLCLDI@Yields?$AA@ DB 'Yields', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06BFDFLGKN@Theirs?$AA@
CONST	SEGMENT
??_C@_06BFDFLGKN@Theirs?$AA@ DB 'Theirs', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04IFFDFFFL@Mine?$AA@
CONST	SEGMENT
??_C@_04IFFDFFFL@Mine?$AA@ DB 'Mine', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DHCPBEKK@OldTradeRoute?$AA@
CONST	SEGMENT
??_C@_0O@DHCPBEKK@OldTradeRoute?$AA@ DB 'OldTradeRoute', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FABCJLPH@FromPressureAmount?$AA@
CONST	SEGMENT
??_C@_0BD@FABCJLPH@FromPressureAmount?$AA@ DB 'FromPressureAmount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LACMGDJC@FromReligion?$AA@
CONST	SEGMENT
??_C@_0N@LACMGDJC@FromReligion?$AA@ DB 'FromReligion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FEEFCBCL@ToPressureAmount?$AA@
CONST	SEGMENT
??_C@_0BB@FEEFCBCL@ToPressureAmount?$AA@ DB 'ToPressureAmount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OHINJIE@ToReligion?$AA@
CONST	SEGMENT
??_C@_0L@OHINJIE@ToReligion?$AA@ DB 'ToReligion', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LJDBLBNE@TradeConnectionType?$AA@
CONST	SEGMENT
??_C@_0BE@LJDBLBNE@TradeConnectionType?$AA@ DB 'TradeConnectionType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01NFFPALBN@Y?$AA@
CONST	SEGMENT
??_C@_01NFFPALBN@Y?$AA@ DB 'Y', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01MMEEDKFM@X?$AA@
CONST	SEGMENT
??_C@_01MMEEDKFM@X?$AA@ DB 'X', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv361 = -644						; size = 4
tv353 = -640						; size = 4
$T245199 = -624						; size = 4
$T245195 = -620						; size = 4
$T245191 = -616						; size = 4
$T245187 = -612						; size = 4
$T245178 = -608						; size = 4
$T245153 = -604						; size = 4
$T245149 = -600						; size = 4
$T245145 = -596						; size = 4
$T245141 = -592						; size = 4
$T245137 = -585						; size = 1
$T245128 = -584						; size = 4
$T245124 = -580						; size = 4
_t2$229428 = -572					; size = 4
_uiYield$229424 = -568					; size = 4
_t$229408 = -564					; size = 4
_eToReligion$229412 = -560				; size = 4
_iInnerIndex$229423 = -556				; size = 4
_eFromReligion$229414 = -552				; size = 4
_iToPressureAmount$229413 = -548			; size = 4
_iFromPressureAmount$229415 = -544			; size = 4
_iTradeReligionModifer$229416 = -540			; size = 4
_eConnectionType$229405 = -536				; size = 4
_uiConnectionType$229401 = -532				; size = 4
_iLoopCityX$229399 = -528				; size = 4
_iLoopCityY$229400 = -524				; size = 4
_iCityLoop$229394 = -520				; size = 4
_pOtherPlayerTrade$229393 = -516			; size = 4
_pLoopCity$229395 = -512				; size = 4
_ui$229386 = -508					; size = 4
_ePlayer$229385 = -504					; size = 4
_kTradeConnection$229384 = -500				; size = 444
__$ArrayPad$ = -48					; size = 4
_pkUnit$ = -44						; size = 4
_pkPlayer$ = -40					; size = 4
_iOriginY$ = -36					; size = 4
_iOriginX$ = -32					; size = 4
_pPlayerTrade$ = -28					; size = 4
_index$ = -24						; size = 4
_pOriginCity$ = -20					; size = 4
_pkUnitPlot$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPotentialInternationalTradeRouteDestinations, COMDAT

; 3276 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 632				; 00000278H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 3277 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3278 : 	CvUnit* pkUnit = CvLuaUnit::GetInstance(L, 2, false);

	push	0
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkUnit$[ebp], eax

; 3279 : 	CvPlot* pkUnitPlot = pkUnit->plot();

	mov	ecx, DWORD PTR _pkUnit$[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	DWORD PTR _pkUnitPlot$[ebp], eax

; 3280 : 
; 3281 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	DWORD PTR _pPlayerTrade$[ebp], eax

; 3282 : 
; 3283 : 	int iOriginX = pkUnitPlot->getX();

	mov	edx, DWORD PTR _pkUnitPlot$[ebp]
	movsx	eax, WORD PTR [edx]
	mov	DWORD PTR _iOriginX$[ebp], eax

; 3284 : 	int iOriginY = pkUnitPlot->getY();

	mov	ecx, DWORD PTR _pkUnitPlot$[ebp]
	movsx	edx, WORD PTR [ecx+2]
	mov	DWORD PTR _iOriginY$[ebp], edx

; 3285 : 	CvCity* pOriginCity = pkUnitPlot->getPlotCity();

	mov	ecx, DWORD PTR _pkUnitPlot$[ebp]
	call	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ	; CvPlot::getPlotCity
	mov	DWORD PTR _pOriginCity$[ebp], eax

; 3286 : 
; 3287 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 3288 : 	int index = 1;

	mov	DWORD PTR _index$[ebp], 1

; 3289 : 
; 3290 : 	if (pkUnit->canMakeTradeRoute(pkUnitPlot))

	mov	ecx, DWORD PTR _pkUnitPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkUnit$[ebp]
	call	?canMakeTradeRoute@CvUnit@@QBE_NPBVCvPlot@@@Z ; CvUnit::canMakeTradeRoute
	movzx	edx, al
	test	edx, edx
	je	$LN17@lGetPotent

; 3291 : 	{
; 3292 : 		TradeConnection kTradeConnection;

	lea	ecx, DWORD PTR _kTradeConnection$229384[ebp+44]
	call	??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3293 : 		kTradeConnection.m_eOriginOwner = pkPlayer->GetID();

	mov	eax, DWORD PTR _pkPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T245124[ebp], ecx
	mov	edx, DWORD PTR $T245124[ebp]
	mov	DWORD PTR _kTradeConnection$229384[ebp+20], edx

; 3294 : 		kTradeConnection.m_iOriginX = iOriginX;

	mov	eax, DWORD PTR _iOriginX$[ebp]
	mov	DWORD PTR _kTradeConnection$229384[ebp+4], eax

; 3295 : 		kTradeConnection.m_iOriginY = iOriginY;

	mov	ecx, DWORD PTR _iOriginY$[ebp]
	mov	DWORD PTR _kTradeConnection$229384[ebp+8], ecx

; 3296 : 		kTradeConnection.m_eDomain = pkUnit->getDomainType();

	mov	ecx, DWORD PTR _pkUnit$[ebp]
	call	?getDomainType@CvUnit@@QBE?AW4DomainTypes@@XZ ; CvUnit::getDomainType
	mov	DWORD PTR _kTradeConnection$229384[ebp+28], eax

; 3297 : 
; 3298 : 		PlayerTypes ePlayer = NO_PLAYER;

	mov	DWORD PTR _ePlayer$229385[ebp], -1

; 3299 : 		for (uint ui = 0; ui < MAX_CIV_PLAYERS; ui++)

	mov	DWORD PTR _ui$229386[ebp], 0
	jmp	SHORT $LN16@lGetPotent
$LN15@lGetPotent:
	mov	edx, DWORD PTR _ui$229386[ebp]
	add	edx, 1
	mov	DWORD PTR _ui$229386[ebp], edx
$LN16@lGetPotent:
	cmp	DWORD PTR _ui$229386[ebp], 63		; 0000003fH
	jae	$LN14@lGetPotent

; 3300 : 		{
; 3301 : 			ePlayer = (PlayerTypes)ui;

	mov	eax, DWORD PTR _ui$229386[ebp]
	mov	DWORD PTR _ePlayer$229385[ebp], eax

; 3302 : 
; 3303 : 			if (!GET_PLAYER(ePlayer).isAlive())

	mov	ecx, DWORD PTR _ePlayer$229385[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T245128[ebp], ecx
	mov	edx, DWORD PTR $T245128[ebp]
	mov	al, BYTE PTR [edx+2256]
	mov	BYTE PTR $T245137[ebp], al
	movzx	ecx, BYTE PTR $T245137[ebp]
	test	ecx, ecx
	jne	SHORT $LN13@lGetPotent

; 3304 : 			{
; 3305 : 				continue;

	jmp	SHORT $LN15@lGetPotent
$LN13@lGetPotent:

; 3306 : 			}
; 3307 : 
; 3308 : 			if (GET_PLAYER(ePlayer).isBarbarian())

	mov	edx, DWORD PTR _ePlayer$229385[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T245141[ebp], edx
	mov	ecx, DWORD PTR $T245141[ebp]
	call	?isBarbarian@CvPlayer@@QBE_NXZ		; CvPlayer::isBarbarian
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@lGetPotent

; 3309 : 			{
; 3310 : 				continue;

	jmp	$LN15@lGetPotent
$LN12@lGetPotent:

; 3311 : 			}
; 3312 : 
; 3313 : 			CvPlayerTrade* pOtherPlayerTrade = GET_PLAYER(ePlayer).GetTrade();

	mov	ecx, DWORD PTR _ePlayer$229385[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T245145[ebp], ecx
	mov	ecx, DWORD PTR $T245145[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	DWORD PTR _pOtherPlayerTrade$229393[ebp], eax

; 3314 : 
; 3315 : 			int iCityLoop;
; 3316 : 			CvCity* pLoopCity = NULL;

	mov	DWORD PTR _pLoopCity$229395[ebp], 0

; 3317 : 			for(pLoopCity = GET_PLAYER(ePlayer).firstCity(&iCityLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER(ePlayer).nextCity(&iCityLoop))

	mov	edx, DWORD PTR _ePlayer$229385[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T245149[ebp], edx
	push	0
	lea	eax, DWORD PTR _iCityLoop$229394[ebp]
	push	eax
	mov	ecx, DWORD PTR $T245149[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$229395[ebp], eax
	jmp	SHORT $LN11@lGetPotent
$LN10@lGetPotent:
	mov	ecx, DWORD PTR _ePlayer$229385[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T245153[ebp], ecx
	push	0
	lea	edx, DWORD PTR _iCityLoop$229394[ebp]
	push	edx
	mov	ecx, DWORD PTR $T245153[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$229395[ebp], eax
$LN11@lGetPotent:
	cmp	DWORD PTR _pLoopCity$229395[ebp], 0
	je	$LN9@lGetPotent

; 3318 : 			{
; 3319 : 				int iLoopCityX = pLoopCity->getX();

	mov	eax, DWORD PTR _pLoopCity$229395[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR _iLoopCityX$229399[ebp], ecx

; 3320 : 				int iLoopCityY = pLoopCity->getY();

	mov	edx, DWORD PTR _pLoopCity$229395[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR _iLoopCityY$229400[ebp], eax

; 3321 : 
; 3322 : 				for (uint uiConnectionType = 0; uiConnectionType < NUM_TRADE_CONNECTION_TYPES; uiConnectionType++)

	mov	DWORD PTR _uiConnectionType$229401[ebp], 0
	jmp	SHORT $LN8@lGetPotent
$LN7@lGetPotent:
	mov	ecx, DWORD PTR _uiConnectionType$229401[ebp]
	add	ecx, 1
	mov	DWORD PTR _uiConnectionType$229401[ebp], ecx
$LN8@lGetPotent:
	cmp	DWORD PTR _uiConnectionType$229401[ebp], 3
	jae	$LN6@lGetPotent

; 3323 : 				{
; 3324 : 					TradeConnectionType eConnectionType = (TradeConnectionType)uiConnectionType;

	mov	edx, DWORD PTR _uiConnectionType$229401[ebp]
	mov	DWORD PTR _eConnectionType$229405[ebp], edx

; 3325 : 					if (pkUnit->canMakeTradeRouteAt(pkUnitPlot, iLoopCityX, iLoopCityY, eConnectionType))

	mov	eax, DWORD PTR _eConnectionType$229405[ebp]
	push	eax
	mov	ecx, DWORD PTR _iLoopCityY$229400[ebp]
	push	ecx
	mov	edx, DWORD PTR _iLoopCityX$229399[ebp]
	push	edx
	mov	eax, DWORD PTR _pkUnitPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkUnit$[ebp]
	call	?canMakeTradeRouteAt@CvUnit@@QBE_NPBVCvPlot@@HHW4TradeConnectionType@@@Z ; CvUnit::canMakeTradeRouteAt
	movzx	ecx, al
	test	ecx, ecx
	je	$LN5@lGetPotent

; 3326 : 					{
; 3327 : 						kTradeConnection.m_iDestX = iLoopCityX;

	mov	edx, DWORD PTR _iLoopCityX$229399[ebp]
	mov	DWORD PTR _kTradeConnection$229384[ebp+12], edx

; 3328 : 						kTradeConnection.m_iDestY = iLoopCityY;

	mov	eax, DWORD PTR _iLoopCityY$229400[ebp]
	mov	DWORD PTR _kTradeConnection$229384[ebp+16], eax

; 3329 : 						kTradeConnection.m_eDestOwner = ePlayer;

	mov	ecx, DWORD PTR _ePlayer$229385[ebp]
	mov	DWORD PTR _kTradeConnection$229384[ebp+24], ecx

; 3330 : 						kTradeConnection.m_eConnectionType = eConnectionType;

	mov	edx, DWORD PTR _eConnectionType$229405[ebp]
	mov	DWORD PTR _kTradeConnection$229384[ebp+32], edx

; 3331 : 
; 3332 : 						lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 3333 : 						const int t = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$229408[ebp], eax

; 3334 : 						lua_pushinteger(L, pLoopCity->getX());

	mov	edx, DWORD PTR _pLoopCity$229395[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T245178[ebp], eax
	mov	ecx, DWORD PTR $T245178[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3335 : 						lua_setfield(L, t, "X");

	push	OFFSET ??_C@_01MMEEDKFM@X?$AA@
	mov	eax, DWORD PTR _t$229408[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 3336 : 						lua_pushinteger(L, pLoopCity->getY());

	mov	edx, DWORD PTR _pLoopCity$229395[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR $T245187[ebp], eax
	mov	ecx, DWORD PTR $T245187[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3337 : 						lua_setfield(L, t, "Y");

	push	OFFSET ??_C@_01NFFPALBN@Y?$AA@
	mov	eax, DWORD PTR _t$229408[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 3338 : 						lua_pushinteger(L, uiConnectionType);

	mov	edx, DWORD PTR _uiConnectionType$229401[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 3339 : 						lua_setfield(L, t, "TradeConnectionType");

	push	OFFSET ??_C@_0BE@LJDBLBNE@TradeConnectionType?$AA@
	mov	ecx, DWORD PTR _t$229408[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 3340 : 						
; 3341 : 						ReligionTypes eToReligion = NO_RELIGION;

	mov	DWORD PTR _eToReligion$229412[ebp], -1

; 3342 : 						int iToPressureAmount = 0;

	mov	DWORD PTR _iToPressureAmount$229413[ebp], 0

; 3343 : 						ReligionTypes eFromReligion = NO_RELIGION;

	mov	DWORD PTR _eFromReligion$229414[ebp], -1

; 3344 : 						int iFromPressureAmount = 0;

	mov	DWORD PTR _iFromPressureAmount$229415[ebp], 0

; 3345 : 
; 3346 : 						pOriginCity->GetCityReligions()->WouldExertTradeRoutePressureToward(pLoopCity, eToReligion, iToPressureAmount);

	lea	eax, DWORD PTR _iToPressureAmount$229413[ebp]
	push	eax
	lea	ecx, DWORD PTR _eToReligion$229412[ebp]
	push	ecx
	mov	edx, DWORD PTR _pLoopCity$229395[ebp]
	push	edx
	mov	ecx, DWORD PTR _pOriginCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z ; CvCityReligions::WouldExertTradeRoutePressureToward

; 3347 : 						pLoopCity->GetCityReligions()->WouldExertTradeRoutePressureToward(pOriginCity, eFromReligion, iFromPressureAmount);

	lea	eax, DWORD PTR _iFromPressureAmount$229415[ebp]
	push	eax
	lea	ecx, DWORD PTR _eFromReligion$229414[ebp]
	push	ecx
	mov	edx, DWORD PTR _pOriginCity$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLoopCity$229395[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z ; CvCityReligions::WouldExertTradeRoutePressureToward

; 3348 : 
; 3349 : 						int iTradeReligionModifer = pkPlayer->GetPlayerTraits()->GetTradeReligionModifier();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T245191[ebp], eax
	mov	eax, DWORD PTR $T245191[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	DWORD PTR _iTradeReligionModifer$229416[ebp], ecx

; 3350 : 						if (iTradeReligionModifer != 0)

	cmp	DWORD PTR _iTradeReligionModifer$229416[ebp], 0
	je	SHORT $LN4@lGetPotent

; 3351 : 						{
; 3352 : 							iToPressureAmount *= 100 + iTradeReligionModifer;

	mov	edx, DWORD PTR _iTradeReligionModifer$229416[ebp]
	add	edx, 100				; 00000064H
	imul	edx, DWORD PTR _iToPressureAmount$229413[ebp]
	mov	DWORD PTR _iToPressureAmount$229413[ebp], edx

; 3353 : 							iToPressureAmount /= 100;

	mov	eax, DWORD PTR _iToPressureAmount$229413[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iToPressureAmount$229413[ebp], eax
$LN4@lGetPotent:

; 3354 : 						}
; 3355 : 
; 3356 : 						// Internally pressure is now 10 times greater than what is shown to user
; 3357 : 						iToPressureAmount /= GC.getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7900
	mov	DWORD PTR $T245195[ebp], edx
	mov	eax, DWORD PTR _iToPressureAmount$229413[ebp]
	cdq
	idiv	DWORD PTR $T245195[ebp]
	mov	DWORD PTR _iToPressureAmount$229413[ebp], eax

; 3358 : 						iFromPressureAmount /= GC.getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7900
	mov	DWORD PTR $T245199[ebp], eax
	mov	eax, DWORD PTR _iFromPressureAmount$229415[ebp]
	cdq
	idiv	DWORD PTR $T245199[ebp]
	mov	DWORD PTR _iFromPressureAmount$229415[ebp], eax

; 3359 : 
; 3360 : 						lua_pushinteger(L, eToReligion);

	mov	ecx, DWORD PTR _eToReligion$229412[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3361 : 						lua_setfield(L, t, "ToReligion");

	push	OFFSET ??_C@_0L@OHINJIE@ToReligion?$AA@
	mov	eax, DWORD PTR _t$229408[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 3362 : 						lua_pushinteger(L, iToPressureAmount);

	mov	edx, DWORD PTR _iToPressureAmount$229413[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 3363 : 						lua_setfield(L, t, "ToPressureAmount");

	push	OFFSET ??_C@_0BB@FEEFCBCL@ToPressureAmount?$AA@
	mov	ecx, DWORD PTR _t$229408[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 3364 : 						lua_pushinteger(L, eFromReligion);

	mov	eax, DWORD PTR _eFromReligion$229414[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3365 : 						lua_setfield(L, t, "FromReligion");

	push	OFFSET ??_C@_0N@LACMGDJC@FromReligion?$AA@
	mov	edx, DWORD PTR _t$229408[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 3366 : 						lua_pushinteger(L, iFromPressureAmount);

	mov	ecx, DWORD PTR _iFromPressureAmount$229415[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3367 : 						lua_setfield(L, t, "FromPressureAmount");

	push	OFFSET ??_C@_0BD@FABCJLPH@FromPressureAmount?$AA@
	mov	eax, DWORD PTR _t$229408[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 3368 : 
; 3369 : 						lua_pushboolean(L, pPlayerTrade->IsPreviousTradeRoute(pOriginCity, pLoopCity, pkUnit->getDomainType(), eConnectionType));

	mov	edx, DWORD PTR _eConnectionType$229405[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkUnit$[ebp]
	call	?getDomainType@CvUnit@@QBE?AW4DomainTypes@@XZ ; CvUnit::getDomainType
	push	eax
	mov	eax, DWORD PTR _pLoopCity$229395[ebp]
	push	eax
	mov	ecx, DWORD PTR _pOriginCity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerTrade$[ebp]
	call	?IsPreviousTradeRoute@CvPlayerTrade@@QAE_NPAVCvCity@@0W4DomainTypes@@W4TradeConnectionType@@@Z ; CvPlayerTrade::IsPreviousTradeRoute
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 3370 : 						lua_setfield(L, t, "OldTradeRoute");

	push	OFFSET ??_C@_0O@DHCPBEKK@OldTradeRoute?$AA@
	mov	ecx, DWORD PTR _t$229408[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 3371 : 
; 3372 : 						int iInnerIndex = 1;

	mov	DWORD PTR _iInnerIndex$229423[ebp], 1

; 3373 : 						lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 3374 : 						for (uint uiYield = 0; uiYield < NUM_YIELD_TYPES; uiYield++)

	mov	DWORD PTR _uiYield$229424[ebp], 0
	jmp	SHORT $LN3@lGetPotent
$LN2@lGetPotent:
	mov	ecx, DWORD PTR _uiYield$229424[ebp]
	add	ecx, 1
	mov	DWORD PTR _uiYield$229424[ebp], ecx
$LN3@lGetPotent:
	cmp	DWORD PTR _uiYield$229424[ebp], 6
	jae	$LN1@lGetPotent

; 3375 : 						{
; 3376 : 							lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 3377 : 							const int t2 = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t2$229428[ebp], eax

; 3378 : 							lua_pushinteger(L, pPlayerTrade->GetTradeConnectionValueTimes100(kTradeConnection, (YieldTypes)uiYield, true));

	push	1
	mov	ecx, DWORD PTR _uiYield$229424[ebp]
	push	ecx
	lea	edx, DWORD PTR _kTradeConnection$229384[ebp]
	push	edx
	mov	ecx, DWORD PTR _pPlayerTrade$[ebp]
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 3379 : 							lua_setfield(L, t2, "Mine");

	push	OFFSET ??_C@_04IFFDFFFL@Mine?$AA@
	mov	ecx, DWORD PTR _t2$229428[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 3380 : 							lua_pushinteger(L, pOtherPlayerTrade->GetTradeConnectionValueTimes100(kTradeConnection, (YieldTypes)uiYield, false));

	push	0
	mov	eax, DWORD PTR _uiYield$229424[ebp]
	push	eax
	lea	ecx, DWORD PTR _kTradeConnection$229384[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pOtherPlayerTrade$229393[ebp]
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3381 : 							lua_setfield(L, t2, "Theirs");

	push	OFFSET ??_C@_06BFDFLGKN@Theirs?$AA@
	mov	eax, DWORD PTR _t2$229428[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 3382 : 							lua_rawseti(L, -2, iInnerIndex++);

	mov	edx, DWORD PTR _iInnerIndex$229423[ebp]
	mov	DWORD PTR tv353[ebp], edx
	mov	eax, DWORD PTR tv353[ebp]
	push	eax
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _iInnerIndex$229423[ebp]
	add	edx, 1
	mov	DWORD PTR _iInnerIndex$229423[ebp], edx

; 3383 : 						}

	jmp	$LN2@lGetPotent
$LN1@lGetPotent:

; 3384 : 						lua_setfield(L, t, "Yields");

	push	OFFSET ??_C@_06JAMLCLDI@Yields?$AA@
	mov	eax, DWORD PTR _t$229408[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 3385 : 						lua_rawseti(L, -2, index++);

	mov	edx, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv361[ebp], edx
	mov	eax, DWORD PTR tv361[ebp]
	push	eax
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _index$[ebp]
	add	edx, 1
	mov	DWORD PTR _index$[ebp], edx
$LN5@lGetPotent:

; 3386 : 					}
; 3387 : 				}

	jmp	$LN7@lGetPotent
$LN6@lGetPotent:

; 3388 : 			}

	jmp	$LN10@lGetPotent
$LN9@lGetPotent:

; 3389 : 		}

	jmp	$LN15@lGetPotent
$LN14@lGetPotent:

; 3390 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _kTradeConnection$229384[ebp+44]
	call	??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::~FStaticVector<TradeConnectionPlot,40,0,297,0>
$LN17@lGetPotent:

; 3391 : 
; 3392 : 	return 1;

	mov	eax, 1

; 3393 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$229384[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-636]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPotentialInternationalTradeRouteDestinations
; Function compile flags: /Odtp
;	COMDAT ??1TradeConnection@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
??1TradeConnection@@QAE@XZ PROC				; TradeConnection::~TradeConnection, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::~FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	esp, ebp
	pop	ebp
	ret	0
??1TradeConnection@@QAE@XZ ENDP				; TradeConnection::~TradeConnection
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?GetTradeConnectionBaseValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z:PROC ; CvPlayerTrade::GetTradeConnectionBaseValueTimes100
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T245334 = -516						; size = 4
$T245325 = -512						; size = 4
$T245316 = -508						; size = 4
$T245307 = -504						; size = 4
$T245298 = -500						; size = 4
$T245289 = -496						; size = 4
$T245270 = -492						; size = 4
_pkPlayer$ = -488					; size = 4
_pDestCity$ = -484					; size = 4
_iResult$ = -480					; size = 4
_pPlayerTrade$ = -476					; size = 4
_bOrigin$ = -469					; size = 1
_kTradeConnection$ = -468				; size = 444
__$ArrayPad$ = -20					; size = 4
_pOriginCity$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteBaseBonus, COMDAT

; 3397 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 516				; 00000204H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 3398 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3399 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	DWORD PTR _pPlayerTrade$[ebp], eax

; 3400 : 	CvCity* pOriginCity = CvLuaCity::GetInstance(L, 2, true);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pOriginCity$[ebp], eax

; 3401 : 	CvCity* pDestCity = CvLuaCity::GetInstance(L, 3, true);

	push	1
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pDestCity$[ebp], eax

; 3402 : 	bool bOrigin = lua_toboolean(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	mov	BYTE PTR _bOrigin$[ebp], cl

; 3403 : 
; 3404 : 	TradeConnection kTradeConnection;

	lea	ecx, DWORD PTR _kTradeConnection$[ebp+44]
	call	??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3405 : 	kTradeConnection.m_iOriginX = pOriginCity->getX();

	mov	edx, DWORD PTR _pOriginCity$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T245289[ebp], eax
	mov	ecx, DWORD PTR $T245289[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+4], ecx

; 3406 : 	kTradeConnection.m_iOriginY = pOriginCity->getY();

	mov	edx, DWORD PTR _pOriginCity$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR $T245298[ebp], eax
	mov	ecx, DWORD PTR $T245298[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+8], ecx

; 3407 : 	kTradeConnection.m_iDestX = pDestCity->getX();

	mov	edx, DWORD PTR _pDestCity$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T245307[ebp], eax
	mov	ecx, DWORD PTR $T245307[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+12], ecx

; 3408 : 	kTradeConnection.m_iDestY = pDestCity->getY();

	mov	edx, DWORD PTR _pDestCity$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR $T245316[ebp], eax
	mov	ecx, DWORD PTR $T245316[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+16], ecx

; 3409 : 	kTradeConnection.m_eOriginOwner = pOriginCity->getOwner();

	mov	edx, DWORD PTR _pOriginCity$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR $T245325[ebp], eax
	mov	ecx, DWORD PTR $T245325[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+20], ecx

; 3410 : 	kTradeConnection.m_eDestOwner = pDestCity->getOwner();

	mov	edx, DWORD PTR _pDestCity$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR $T245334[ebp], eax
	mov	ecx, DWORD PTR $T245334[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+24], ecx

; 3411 : 
; 3412 : 	int iResult = pPlayerTrade->GetTradeConnectionBaseValueTimes100(kTradeConnection, YIELD_GOLD, bOrigin);

	movzx	edx, BYTE PTR _bOrigin$[ebp]
	push	edx
	push	2
	lea	eax, DWORD PTR _kTradeConnection$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayerTrade$[ebp]
	call	?GetTradeConnectionBaseValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionBaseValueTimes100
	mov	DWORD PTR _iResult$[ebp], eax

; 3413 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3414 : 
; 3415 : 	return 1;

	mov	DWORD PTR $T245270[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _kTradeConnection$[ebp+44]
	call	??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::~FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	eax, DWORD PTR $T245270[ebp]

; 3416 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-520]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteBaseBonus
PUBLIC	__$ArrayPad$
EXTRN	?GetTradeConnectionGPTValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N2@Z:PROC ; CvPlayerTrade::GetTradeConnectionGPTValueTimes100
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T245439 = -516						; size = 4
$T245430 = -512						; size = 4
$T245421 = -508						; size = 4
$T245412 = -504						; size = 4
$T245403 = -500						; size = 4
$T245394 = -496						; size = 4
$T245375 = -492						; size = 4
_pkPlayer$ = -488					; size = 4
_pDestCity$ = -484					; size = 4
_iResult$ = -480					; size = 4
_pPlayerTrade$ = -476					; size = 4
_bOrigin$ = -469					; size = 1
_kTradeConnection$ = -468				; size = 444
__$ArrayPad$ = -20					; size = 4
_pOriginCity$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteGPTBonus, COMDAT

; 3423 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 516				; 00000204H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 3424 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3425 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	DWORD PTR _pPlayerTrade$[ebp], eax

; 3426 : 	CvCity* pOriginCity = CvLuaCity::GetInstance(L, 2, true);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pOriginCity$[ebp], eax

; 3427 : 	CvCity* pDestCity = CvLuaCity::GetInstance(L, 3, true);

	push	1
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pDestCity$[ebp], eax

; 3428 : 	bool bOrigin = lua_toboolean(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	mov	BYTE PTR _bOrigin$[ebp], cl

; 3429 : 
; 3430 : 	TradeConnection kTradeConnection;

	lea	ecx, DWORD PTR _kTradeConnection$[ebp+44]
	call	??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3431 : 	kTradeConnection.m_iOriginX = pOriginCity->getX();

	mov	edx, DWORD PTR _pOriginCity$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T245394[ebp], eax
	mov	ecx, DWORD PTR $T245394[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+4], ecx

; 3432 : 	kTradeConnection.m_iOriginY = pOriginCity->getY();

	mov	edx, DWORD PTR _pOriginCity$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR $T245403[ebp], eax
	mov	ecx, DWORD PTR $T245403[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+8], ecx

; 3433 : 	kTradeConnection.m_iDestX = pDestCity->getX();

	mov	edx, DWORD PTR _pDestCity$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T245412[ebp], eax
	mov	ecx, DWORD PTR $T245412[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+12], ecx

; 3434 : 	kTradeConnection.m_iDestY = pDestCity->getY();

	mov	edx, DWORD PTR _pDestCity$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR $T245421[ebp], eax
	mov	ecx, DWORD PTR $T245421[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+16], ecx

; 3435 : 	kTradeConnection.m_eOriginOwner = pOriginCity->getOwner();

	mov	edx, DWORD PTR _pOriginCity$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR $T245430[ebp], eax
	mov	ecx, DWORD PTR $T245430[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+20], ecx

; 3436 : 	kTradeConnection.m_eDestOwner = pDestCity->getOwner();

	mov	edx, DWORD PTR _pDestCity$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR $T245439[ebp], eax
	mov	ecx, DWORD PTR $T245439[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+24], ecx

; 3437 : 
; 3438 : 	int iResult = pPlayerTrade->GetTradeConnectionGPTValueTimes100(kTradeConnection, YIELD_GOLD, true, bOrigin);

	movzx	edx, BYTE PTR _bOrigin$[ebp]
	push	edx
	push	1
	push	2
	lea	eax, DWORD PTR _kTradeConnection$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayerTrade$[ebp]
	call	?GetTradeConnectionGPTValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N2@Z ; CvPlayerTrade::GetTradeConnectionGPTValueTimes100
	mov	DWORD PTR _iResult$[ebp], eax

; 3439 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3440 : 
; 3441 : 	return 1;

	mov	DWORD PTR $T245375[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _kTradeConnection$[ebp+44]
	call	??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::~FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	eax, DWORD PTR $T245375[ebp]

; 3442 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-520]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteGPTBonus
PUBLIC	__$ArrayPad$
EXTRN	?GetTradeConnectionResourceValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z:PROC ; CvPlayerTrade::GetTradeConnectionResourceValueTimes100
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T245544 = -516						; size = 4
$T245535 = -512						; size = 4
$T245526 = -508						; size = 4
$T245517 = -504						; size = 4
$T245508 = -500						; size = 4
$T245499 = -496						; size = 4
$T245480 = -492						; size = 4
_pkPlayer$ = -488					; size = 4
_pDestCity$ = -484					; size = 4
_iResult$ = -480					; size = 4
_pPlayerTrade$ = -476					; size = 4
_bOrigin$ = -469					; size = 1
_kTradeConnection$ = -468				; size = 444
__$ArrayPad$ = -20					; size = 4
_pOriginCity$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteResourceBonus, COMDAT

; 3446 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 516				; 00000204H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 3447 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3448 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	DWORD PTR _pPlayerTrade$[ebp], eax

; 3449 : 	CvCity* pOriginCity = CvLuaCity::GetInstance(L, 2, true);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pOriginCity$[ebp], eax

; 3450 : 	CvCity* pDestCity = CvLuaCity::GetInstance(L, 3, true);

	push	1
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pDestCity$[ebp], eax

; 3451 : 	bool bOrigin = lua_toboolean(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	mov	BYTE PTR _bOrigin$[ebp], cl

; 3452 : 
; 3453 : 	TradeConnection kTradeConnection;

	lea	ecx, DWORD PTR _kTradeConnection$[ebp+44]
	call	??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3454 : 	kTradeConnection.m_iOriginX = pOriginCity->getX();

	mov	edx, DWORD PTR _pOriginCity$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T245499[ebp], eax
	mov	ecx, DWORD PTR $T245499[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+4], ecx

; 3455 : 	kTradeConnection.m_iOriginY = pOriginCity->getY();

	mov	edx, DWORD PTR _pOriginCity$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR $T245508[ebp], eax
	mov	ecx, DWORD PTR $T245508[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+8], ecx

; 3456 : 	kTradeConnection.m_iDestX = pDestCity->getX();

	mov	edx, DWORD PTR _pDestCity$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T245517[ebp], eax
	mov	ecx, DWORD PTR $T245517[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+12], ecx

; 3457 : 	kTradeConnection.m_iDestY = pDestCity->getY();

	mov	edx, DWORD PTR _pDestCity$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR $T245526[ebp], eax
	mov	ecx, DWORD PTR $T245526[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+16], ecx

; 3458 : 	kTradeConnection.m_eOriginOwner = pOriginCity->getOwner();

	mov	edx, DWORD PTR _pOriginCity$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR $T245535[ebp], eax
	mov	ecx, DWORD PTR $T245535[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+20], ecx

; 3459 : 	kTradeConnection.m_eDestOwner = pDestCity->getOwner();

	mov	edx, DWORD PTR _pDestCity$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR $T245544[ebp], eax
	mov	ecx, DWORD PTR $T245544[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+24], ecx

; 3460 : 
; 3461 : 	int iResult = pPlayerTrade->GetTradeConnectionResourceValueTimes100(kTradeConnection, YIELD_GOLD, bOrigin);

	movzx	edx, BYTE PTR _bOrigin$[ebp]
	push	edx
	push	2
	lea	eax, DWORD PTR _kTradeConnection$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayerTrade$[ebp]
	call	?GetTradeConnectionResourceValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionResourceValueTimes100
	mov	DWORD PTR _iResult$[ebp], eax

; 3462 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3463 : 
; 3464 : 	return 1;

	mov	DWORD PTR $T245480[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _kTradeConnection$[ebp+44]
	call	??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::~FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	eax, DWORD PTR $T245480[ebp]

; 3465 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-520]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteResourceBonus
; Function compile flags: /Odtp
;	COMDAT ?lGetInternationalTradeRouteResourceTraitModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T245588 = -12						; size = 4
$T245587 = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetInternationalTradeRouteResourceTraitModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteResourceTraitModifier, COMDAT

; 3469 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3470 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3471 : 	lua_pushinteger(L, pkPlayer->GetPlayerTraits()->GetTradeRouteResourceModifier());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T245587[ebp], eax
	mov	ecx, DWORD PTR $T245587[ebp]
	mov	edx, DWORD PTR [ecx+296]
	mov	DWORD PTR $T245588[ebp], edx
	mov	eax, DWORD PTR $T245588[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3472 : 
; 3473 : 	return 1;	

	mov	eax, 1

; 3474 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetInternationalTradeRouteResourceTraitModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteResourceTraitModifier
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?GetTradeConnectionExclusiveValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@@Z:PROC ; CvPlayerTrade::GetTradeConnectionExclusiveValueTimes100
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T245656 = -512						; size = 4
$T245647 = -508						; size = 4
$T245638 = -504						; size = 4
$T245629 = -500						; size = 4
$T245620 = -496						; size = 4
$T245611 = -492						; size = 4
$T245592 = -488						; size = 4
_pkPlayer$ = -484					; size = 4
_pDestCity$ = -480					; size = 4
_iResult$ = -476					; size = 4
_pPlayerTrade$ = -472					; size = 4
_kTradeConnection$ = -468				; size = 444
__$ArrayPad$ = -20					; size = 4
_pOriginCity$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteExclusiveBonus, COMDAT

; 3478 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 512				; 00000200H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 3479 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3480 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	DWORD PTR _pPlayerTrade$[ebp], eax

; 3481 : 	CvCity* pOriginCity = CvLuaCity::GetInstance(L, 2, true);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pOriginCity$[ebp], eax

; 3482 : 	CvCity* pDestCity = CvLuaCity::GetInstance(L, 3, true);

	push	1
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pDestCity$[ebp], eax

; 3483 : 
; 3484 : 	TradeConnection kTradeConnection;

	lea	ecx, DWORD PTR _kTradeConnection$[ebp+44]
	call	??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3485 : 	kTradeConnection.m_iOriginX = pOriginCity->getX();

	mov	eax, DWORD PTR _pOriginCity$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T245611[ebp], ecx
	mov	edx, DWORD PTR $T245611[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+4], edx

; 3486 : 	kTradeConnection.m_iOriginY = pOriginCity->getY();

	mov	eax, DWORD PTR _pOriginCity$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T245620[ebp], ecx
	mov	edx, DWORD PTR $T245620[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+8], edx

; 3487 : 	kTradeConnection.m_iDestX = pDestCity->getX();

	mov	eax, DWORD PTR _pDestCity$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T245629[ebp], ecx
	mov	edx, DWORD PTR $T245629[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+12], edx

; 3488 : 	kTradeConnection.m_iDestY = pDestCity->getY();

	mov	eax, DWORD PTR _pDestCity$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T245638[ebp], ecx
	mov	edx, DWORD PTR $T245638[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+16], edx

; 3489 : 	kTradeConnection.m_eOriginOwner = pOriginCity->getOwner();

	mov	eax, DWORD PTR _pOriginCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T245647[ebp], ecx
	mov	edx, DWORD PTR $T245647[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+20], edx

; 3490 : 	kTradeConnection.m_eDestOwner = pDestCity->getOwner();

	mov	eax, DWORD PTR _pDestCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T245656[ebp], ecx
	mov	edx, DWORD PTR $T245656[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+24], edx

; 3491 : 
; 3492 : 	int iResult = pPlayerTrade->GetTradeConnectionExclusiveValueTimes100(kTradeConnection, YIELD_GOLD);

	push	2
	lea	eax, DWORD PTR _kTradeConnection$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayerTrade$[ebp]
	call	?GetTradeConnectionExclusiveValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@@Z ; CvPlayerTrade::GetTradeConnectionExclusiveValueTimes100
	mov	DWORD PTR _iResult$[ebp], eax

; 3493 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3494 : 
; 3495 : 	return 1;	

	mov	DWORD PTR $T245592[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _kTradeConnection$[ebp+44]
	call	??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::~FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	eax, DWORD PTR $T245592[ebp]

; 3496 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-516]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteExclusiveBonus
PUBLIC	__$ArrayPad$
EXTRN	?GetTradeConnectionYourBuildingValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z:PROC ; CvPlayerTrade::GetTradeConnectionYourBuildingValueTimes100
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T245761 = -520						; size = 4
$T245752 = -516						; size = 4
$T245743 = -512						; size = 4
$T245734 = -508						; size = 4
$T245725 = -504						; size = 4
$T245716 = -500						; size = 4
$T245697 = -496						; size = 4
_pkPlayer$ = -492					; size = 4
_eDomain$ = -488					; size = 4
_pDestCity$ = -484					; size = 4
_iResult$ = -480					; size = 4
_pPlayerTrade$ = -476					; size = 4
_bOrigin$ = -469					; size = 1
_kTradeConnection$ = -468				; size = 444
__$ArrayPad$ = -20					; size = 4
_pOriginCity$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteYourBuildingBonus, COMDAT

; 3500 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 520				; 00000208H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 3501 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3502 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	DWORD PTR _pPlayerTrade$[ebp], eax

; 3503 : 	CvCity* pOriginCity = CvLuaCity::GetInstance(L, 2, true);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pOriginCity$[ebp], eax

; 3504 : 	CvCity* pDestCity = CvLuaCity::GetInstance(L, 3, true);

	push	1
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pDestCity$[ebp], eax

; 3505 : 	DomainTypes eDomain = (DomainTypes)lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eDomain$[ebp], eax

; 3506 : 	bool bOrigin = lua_toboolean(L, 5);

	push	5
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bOrigin$[ebp], dl

; 3507 : 
; 3508 : 	TradeConnection kTradeConnection;

	lea	ecx, DWORD PTR _kTradeConnection$[ebp+44]
	call	??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3509 : 	kTradeConnection.m_iOriginX = pOriginCity->getX();

	mov	eax, DWORD PTR _pOriginCity$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T245716[ebp], ecx
	mov	edx, DWORD PTR $T245716[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+4], edx

; 3510 : 	kTradeConnection.m_iOriginY = pOriginCity->getY();

	mov	eax, DWORD PTR _pOriginCity$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T245725[ebp], ecx
	mov	edx, DWORD PTR $T245725[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+8], edx

; 3511 : 	kTradeConnection.m_iDestX = pDestCity->getX();

	mov	eax, DWORD PTR _pDestCity$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T245734[ebp], ecx
	mov	edx, DWORD PTR $T245734[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+12], edx

; 3512 : 	kTradeConnection.m_iDestY = pDestCity->getY();

	mov	eax, DWORD PTR _pDestCity$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T245743[ebp], ecx
	mov	edx, DWORD PTR $T245743[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+16], edx

; 3513 : 	kTradeConnection.m_eOriginOwner = pOriginCity->getOwner();

	mov	eax, DWORD PTR _pOriginCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T245752[ebp], ecx
	mov	edx, DWORD PTR $T245752[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+20], edx

; 3514 : 	kTradeConnection.m_eDestOwner = pDestCity->getOwner();

	mov	eax, DWORD PTR _pDestCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T245761[ebp], ecx
	mov	edx, DWORD PTR $T245761[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+24], edx

; 3515 : 	kTradeConnection.m_eDomain = eDomain;

	mov	eax, DWORD PTR _eDomain$[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+28], eax

; 3516 : 
; 3517 : 	int iResult = pPlayerTrade->GetTradeConnectionYourBuildingValueTimes100(kTradeConnection, YIELD_GOLD, bOrigin);

	movzx	ecx, BYTE PTR _bOrigin$[ebp]
	push	ecx
	push	2
	lea	edx, DWORD PTR _kTradeConnection$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pPlayerTrade$[ebp]
	call	?GetTradeConnectionYourBuildingValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionYourBuildingValueTimes100
	mov	DWORD PTR _iResult$[ebp], eax

; 3518 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3519 : 	return 1;	

	mov	DWORD PTR $T245697[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _kTradeConnection$[ebp+44]
	call	??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::~FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	eax, DWORD PTR $T245697[ebp]

; 3520 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-524]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteYourBuildingBonus
PUBLIC	__$ArrayPad$
EXTRN	?GetTradeConnectionTheirBuildingValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z:PROC ; CvPlayerTrade::GetTradeConnectionTheirBuildingValueTimes100
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T245866 = -520						; size = 4
$T245857 = -516						; size = 4
$T245848 = -512						; size = 4
$T245839 = -508						; size = 4
$T245830 = -504						; size = 4
$T245821 = -500						; size = 4
$T245802 = -496						; size = 4
_pkPlayer$ = -492					; size = 4
_eDomain$ = -488					; size = 4
_pDestCity$ = -484					; size = 4
_iResult$ = -480					; size = 4
_pPlayerTrade$ = -476					; size = 4
_bOrigin$ = -469					; size = 1
_kTradeConnection$ = -468				; size = 444
__$ArrayPad$ = -20					; size = 4
_pOriginCity$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteTheirBuildingBonus, COMDAT

; 3524 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 520				; 00000208H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 3525 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3526 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	DWORD PTR _pPlayerTrade$[ebp], eax

; 3527 : 	CvCity* pOriginCity = CvLuaCity::GetInstance(L, 2, true);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pOriginCity$[ebp], eax

; 3528 : 	CvCity* pDestCity = CvLuaCity::GetInstance(L, 3, true);

	push	1
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pDestCity$[ebp], eax

; 3529 : 	DomainTypes eDomain = (DomainTypes)lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eDomain$[ebp], eax

; 3530 : 	bool bOrigin = lua_toboolean(L, 5);

	push	5
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bOrigin$[ebp], dl

; 3531 : 
; 3532 : 	TradeConnection kTradeConnection;

	lea	ecx, DWORD PTR _kTradeConnection$[ebp+44]
	call	??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3533 : 	kTradeConnection.m_iOriginX = pOriginCity->getX();

	mov	eax, DWORD PTR _pOriginCity$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T245821[ebp], ecx
	mov	edx, DWORD PTR $T245821[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+4], edx

; 3534 : 	kTradeConnection.m_iOriginY = pOriginCity->getY();

	mov	eax, DWORD PTR _pOriginCity$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T245830[ebp], ecx
	mov	edx, DWORD PTR $T245830[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+8], edx

; 3535 : 	kTradeConnection.m_iDestX = pDestCity->getX();

	mov	eax, DWORD PTR _pDestCity$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T245839[ebp], ecx
	mov	edx, DWORD PTR $T245839[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+12], edx

; 3536 : 	kTradeConnection.m_iDestY = pDestCity->getY();

	mov	eax, DWORD PTR _pDestCity$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T245848[ebp], ecx
	mov	edx, DWORD PTR $T245848[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+16], edx

; 3537 : 	kTradeConnection.m_eOriginOwner = pOriginCity->getOwner();

	mov	eax, DWORD PTR _pOriginCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T245857[ebp], ecx
	mov	edx, DWORD PTR $T245857[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+20], edx

; 3538 : 	kTradeConnection.m_eDestOwner = pDestCity->getOwner();

	mov	eax, DWORD PTR _pDestCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T245866[ebp], ecx
	mov	edx, DWORD PTR $T245866[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+24], edx

; 3539 : 	kTradeConnection.m_eDomain = eDomain;

	mov	eax, DWORD PTR _eDomain$[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+28], eax

; 3540 : 
; 3541 : 	int iResult = pPlayerTrade->GetTradeConnectionTheirBuildingValueTimes100(kTradeConnection, YIELD_GOLD, bOrigin);

	movzx	ecx, BYTE PTR _bOrigin$[ebp]
	push	ecx
	push	2
	lea	edx, DWORD PTR _kTradeConnection$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pPlayerTrade$[ebp]
	call	?GetTradeConnectionTheirBuildingValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionTheirBuildingValueTimes100
	mov	DWORD PTR _iResult$[ebp], eax

; 3542 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3543 : 	return 1;	

	mov	DWORD PTR $T245802[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _kTradeConnection$[ebp+44]
	call	??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::~FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	eax, DWORD PTR $T245802[ebp]

; 3544 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-524]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteTheirBuildingBonus
PUBLIC	__$ArrayPad$
EXTRN	?GetTradeConnectionPolicyValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@@Z:PROC ; CvPlayerTrade::GetTradeConnectionPolicyValueTimes100
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T245971 = -516						; size = 4
$T245962 = -512						; size = 4
$T245953 = -508						; size = 4
$T245944 = -504						; size = 4
$T245935 = -500						; size = 4
$T245926 = -496						; size = 4
$T245907 = -492						; size = 4
_pkPlayer$ = -488					; size = 4
_eDomain$ = -484					; size = 4
_pDestCity$ = -480					; size = 4
_iResult$ = -476					; size = 4
_pPlayerTrade$ = -472					; size = 4
_kTradeConnection$ = -468				; size = 444
__$ArrayPad$ = -20					; size = 4
_pOriginCity$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRoutePolicyBonus, COMDAT

; 3548 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 516				; 00000204H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 3549 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3550 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	DWORD PTR _pPlayerTrade$[ebp], eax

; 3551 : 	CvCity* pOriginCity = CvLuaCity::GetInstance(L, 2, true);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pOriginCity$[ebp], eax

; 3552 : 	CvCity* pDestCity = CvLuaCity::GetInstance(L, 3, true);

	push	1
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pDestCity$[ebp], eax

; 3553 : 	DomainTypes eDomain = (DomainTypes)lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eDomain$[ebp], eax

; 3554 : 
; 3555 : 	TradeConnection kTradeConnection;

	lea	ecx, DWORD PTR _kTradeConnection$[ebp+44]
	call	??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3556 : 	kTradeConnection.m_iOriginX = pOriginCity->getX();

	mov	ecx, DWORD PTR _pOriginCity$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR $T245926[ebp], edx
	mov	eax, DWORD PTR $T245926[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+4], eax

; 3557 : 	kTradeConnection.m_iOriginY = pOriginCity->getY();

	mov	ecx, DWORD PTR _pOriginCity$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR $T245935[ebp], edx
	mov	eax, DWORD PTR $T245935[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+8], eax

; 3558 : 	kTradeConnection.m_iDestX = pDestCity->getX();

	mov	ecx, DWORD PTR _pDestCity$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR $T245944[ebp], edx
	mov	eax, DWORD PTR $T245944[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+12], eax

; 3559 : 	kTradeConnection.m_iDestY = pDestCity->getY();

	mov	ecx, DWORD PTR _pDestCity$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR $T245953[ebp], edx
	mov	eax, DWORD PTR $T245953[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+16], eax

; 3560 : 	kTradeConnection.m_eOriginOwner = pOriginCity->getOwner();

	mov	ecx, DWORD PTR _pOriginCity$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T245962[ebp], edx
	mov	eax, DWORD PTR $T245962[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+20], eax

; 3561 : 	kTradeConnection.m_eDestOwner = pDestCity->getOwner();

	mov	ecx, DWORD PTR _pDestCity$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T245971[ebp], edx
	mov	eax, DWORD PTR $T245971[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+24], eax

; 3562 : 	kTradeConnection.m_eDomain = eDomain;

	mov	ecx, DWORD PTR _eDomain$[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+28], ecx

; 3563 : 	kTradeConnection.m_eConnectionType = TRADE_CONNECTION_INTERNATIONAL;

	mov	DWORD PTR _kTradeConnection$[ebp+32], 0

; 3564 : 
; 3565 : 	int iResult = pPlayerTrade->GetTradeConnectionPolicyValueTimes100(kTradeConnection, YIELD_GOLD);

	push	2
	lea	edx, DWORD PTR _kTradeConnection$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pPlayerTrade$[ebp]
	call	?GetTradeConnectionPolicyValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@@Z ; CvPlayerTrade::GetTradeConnectionPolicyValueTimes100
	mov	DWORD PTR _iResult$[ebp], eax

; 3566 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3567 : 	return 1;

	mov	DWORD PTR $T245907[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _kTradeConnection$[ebp+44]
	call	??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::~FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	eax, DWORD PTR $T245907[ebp]

; 3568 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-520]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRoutePolicyBonus
PUBLIC	__$ArrayPad$
EXTRN	?GetTradeConnectionOtherTraitValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z:PROC ; CvPlayerTrade::GetTradeConnectionOtherTraitValueTimes100
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T246076 = -520						; size = 4
$T246067 = -516						; size = 4
$T246058 = -512						; size = 4
$T246049 = -508						; size = 4
$T246040 = -504						; size = 4
$T246031 = -500						; size = 4
$T246012 = -496						; size = 4
_pkPlayer$ = -492					; size = 4
_eDomain$ = -488					; size = 4
_pDestCity$ = -484					; size = 4
_iResult$ = -480					; size = 4
_pPlayerTrade$ = -476					; size = 4
_bOrigin$ = -469					; size = 1
_kTradeConnection$ = -468				; size = 444
__$ArrayPad$ = -20					; size = 4
_pOriginCity$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteOtherTraitBonus, COMDAT

; 3572 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 520				; 00000208H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 3573 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3574 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	DWORD PTR _pPlayerTrade$[ebp], eax

; 3575 : 	CvCity* pOriginCity = CvLuaCity::GetInstance(L, 2, true);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pOriginCity$[ebp], eax

; 3576 : 	CvCity* pDestCity = CvLuaCity::GetInstance(L, 3, true);

	push	1
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pDestCity$[ebp], eax

; 3577 : 	DomainTypes eDomain = (DomainTypes)lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eDomain$[ebp], eax

; 3578 : 	bool bOrigin = lua_toboolean(L, 5);

	push	5
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bOrigin$[ebp], dl

; 3579 : 
; 3580 : 	TradeConnection kTradeConnection;

	lea	ecx, DWORD PTR _kTradeConnection$[ebp+44]
	call	??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3581 : 	kTradeConnection.m_iOriginX = pOriginCity->getX();

	mov	eax, DWORD PTR _pOriginCity$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T246031[ebp], ecx
	mov	edx, DWORD PTR $T246031[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+4], edx

; 3582 : 	kTradeConnection.m_iOriginY = pOriginCity->getY();

	mov	eax, DWORD PTR _pOriginCity$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T246040[ebp], ecx
	mov	edx, DWORD PTR $T246040[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+8], edx

; 3583 : 	kTradeConnection.m_iDestX = pDestCity->getX();

	mov	eax, DWORD PTR _pDestCity$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T246049[ebp], ecx
	mov	edx, DWORD PTR $T246049[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+12], edx

; 3584 : 	kTradeConnection.m_iDestY = pDestCity->getY();

	mov	eax, DWORD PTR _pDestCity$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T246058[ebp], ecx
	mov	edx, DWORD PTR $T246058[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+16], edx

; 3585 : 	kTradeConnection.m_eOriginOwner = pOriginCity->getOwner();

	mov	eax, DWORD PTR _pOriginCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T246067[ebp], ecx
	mov	edx, DWORD PTR $T246067[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+20], edx

; 3586 : 	kTradeConnection.m_eDestOwner = pDestCity->getOwner();

	mov	eax, DWORD PTR _pDestCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T246076[ebp], ecx
	mov	edx, DWORD PTR $T246076[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+24], edx

; 3587 : 	kTradeConnection.m_eDomain = eDomain;

	mov	eax, DWORD PTR _eDomain$[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+28], eax

; 3588 : 	kTradeConnection.m_eConnectionType = TRADE_CONNECTION_INTERNATIONAL;

	mov	DWORD PTR _kTradeConnection$[ebp+32], 0

; 3589 : 
; 3590 : 	int iResult = pPlayerTrade->GetTradeConnectionOtherTraitValueTimes100(kTradeConnection, YIELD_GOLD, bOrigin);

	movzx	ecx, BYTE PTR _bOrigin$[ebp]
	push	ecx
	push	2
	lea	edx, DWORD PTR _kTradeConnection$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pPlayerTrade$[ebp]
	call	?GetTradeConnectionOtherTraitValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionOtherTraitValueTimes100
	mov	DWORD PTR _iResult$[ebp], eax

; 3591 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3592 : 	return 1;	

	mov	DWORD PTR $T246012[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _kTradeConnection$[ebp+44]
	call	??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::~FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	eax, DWORD PTR $T246012[ebp]

; 3593 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-524]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteOtherTraitBonus
PUBLIC	__$ArrayPad$
EXTRN	?GetTradeConnectionRiverValueModifierTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z:PROC ; CvPlayerTrade::GetTradeConnectionRiverValueModifierTimes100
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T246181 = -520						; size = 4
$T246172 = -516						; size = 4
$T246163 = -512						; size = 4
$T246154 = -508						; size = 4
$T246145 = -504						; size = 4
$T246136 = -500						; size = 4
$T246117 = -496						; size = 4
_pkPlayer$ = -492					; size = 4
_eDomain$ = -488					; size = 4
_pDestCity$ = -484					; size = 4
_iResult$ = -480					; size = 4
_pPlayerTrade$ = -476					; size = 4
_bOrigin$ = -469					; size = 1
_kTradeConnection$ = -468				; size = 444
__$ArrayPad$ = -20					; size = 4
_pOriginCity$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteRiverModifier, COMDAT

; 3597 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 520				; 00000208H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 3598 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3599 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	DWORD PTR _pPlayerTrade$[ebp], eax

; 3600 : 	CvCity* pOriginCity = CvLuaCity::GetInstance(L, 2, true);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pOriginCity$[ebp], eax

; 3601 : 	CvCity* pDestCity = CvLuaCity::GetInstance(L, 3, true);

	push	1
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pDestCity$[ebp], eax

; 3602 : 	DomainTypes eDomain = (DomainTypes)lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eDomain$[ebp], eax

; 3603 : 	bool bOrigin = lua_toboolean(L, 5);

	push	5
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bOrigin$[ebp], dl

; 3604 : 
; 3605 : 	TradeConnection kTradeConnection;

	lea	ecx, DWORD PTR _kTradeConnection$[ebp+44]
	call	??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3606 : 	kTradeConnection.m_iOriginX = pOriginCity->getX();

	mov	eax, DWORD PTR _pOriginCity$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T246136[ebp], ecx
	mov	edx, DWORD PTR $T246136[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+4], edx

; 3607 : 	kTradeConnection.m_iOriginY = pOriginCity->getY();

	mov	eax, DWORD PTR _pOriginCity$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T246145[ebp], ecx
	mov	edx, DWORD PTR $T246145[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+8], edx

; 3608 : 	kTradeConnection.m_iDestX = pDestCity->getX();

	mov	eax, DWORD PTR _pDestCity$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T246154[ebp], ecx
	mov	edx, DWORD PTR $T246154[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+12], edx

; 3609 : 	kTradeConnection.m_iDestY = pDestCity->getY();

	mov	eax, DWORD PTR _pDestCity$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T246163[ebp], ecx
	mov	edx, DWORD PTR $T246163[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+16], edx

; 3610 : 	kTradeConnection.m_eOriginOwner = pOriginCity->getOwner();

	mov	eax, DWORD PTR _pOriginCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T246172[ebp], ecx
	mov	edx, DWORD PTR $T246172[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+20], edx

; 3611 : 	kTradeConnection.m_eDestOwner = pDestCity->getOwner();

	mov	eax, DWORD PTR _pDestCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T246181[ebp], ecx
	mov	edx, DWORD PTR $T246181[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+24], edx

; 3612 : 	kTradeConnection.m_eDomain = eDomain;

	mov	eax, DWORD PTR _eDomain$[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+28], eax

; 3613 : 
; 3614 : 	int iResult = pPlayerTrade->GetTradeConnectionRiverValueModifierTimes100(kTradeConnection, YIELD_GOLD, bOrigin);

	movzx	ecx, BYTE PTR _bOrigin$[ebp]
	push	ecx
	push	2
	lea	edx, DWORD PTR _kTradeConnection$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pPlayerTrade$[ebp]
	call	?GetTradeConnectionRiverValueModifierTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionRiverValueModifierTimes100
	mov	DWORD PTR _iResult$[ebp], eax

; 3615 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3616 : 	return 1;	

	mov	DWORD PTR $T246117[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _kTradeConnection$[ebp+44]
	call	??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::~FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	eax, DWORD PTR $T246117[ebp]

; 3617 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-524]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteRiverModifier
EXTRN	?GetDomainModifierTimes100@CvGameTrade@@QAEHW4DomainTypes@@@Z:PROC ; CvGameTrade::GetDomainModifierTimes100
EXTRN	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ:PROC ; CvGame::GetGameTrade
; Function compile flags: /Odtp
;	COMDAT ?lGetInternationalTradeRouteDomainModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T246224 = -12						; size = 4
_eDomain$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetInternationalTradeRouteDomainModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteDomainModifier, COMDAT

; 3621 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3622 : 	DomainTypes eDomain = (DomainTypes)lua_tointeger(L, 2);

	push	2
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eDomain$[ebp], eax

; 3623 : 	int iResult = GC.getGame().GetGameTrade()->GetDomainModifierTimes100(eDomain);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T246224[ebp], ecx
	mov	edx, DWORD PTR _eDomain$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T246224[ebp]
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	ecx, eax
	call	?GetDomainModifierTimes100@CvGameTrade@@QAEHW4DomainTypes@@@Z ; CvGameTrade::GetDomainModifierTimes100
	mov	DWORD PTR _iResult$[ebp], eax

; 3624 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 3625 : 	return 1;

	mov	eax, 1

; 3626 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetInternationalTradeRouteDomainModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteDomainModifier
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T246310 = -528						; size = 4
$T246301 = -524						; size = 4
$T246292 = -520						; size = 4
$T246283 = -516						; size = 4
$T246274 = -512						; size = 4
$T246265 = -508						; size = 4
$T246256 = -504						; size = 4
$T246247 = -500						; size = 4
$T246228 = -496						; size = 4
_pkPlayer$ = -492					; size = 4
_eDomain$ = -488					; size = 4
_pDestCity$ = -484					; size = 4
_iResult$ = -480					; size = 4
_pPlayerTrade$ = -476					; size = 4
_bOrigin$ = -469					; size = 1
_kTradeConnection$ = -468				; size = 444
__$ArrayPad$ = -20					; size = 4
_pOriginCity$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteTotal, COMDAT

; 3630 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 528				; 00000210H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 3631 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3632 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	DWORD PTR _pPlayerTrade$[ebp], eax

; 3633 : 	CvCity* pOriginCity = CvLuaCity::GetInstance(L, 2, true);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pOriginCity$[ebp], eax

; 3634 : 	CvCity* pDestCity = CvLuaCity::GetInstance(L, 3, true);

	push	1
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pDestCity$[ebp], eax

; 3635 : 	DomainTypes eDomain = (DomainTypes)lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eDomain$[ebp], eax

; 3636 : 	bool bOrigin = lua_toboolean(L, 5);

	push	5
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bOrigin$[ebp], dl

; 3637 : 
; 3638 : 	TradeConnection kTradeConnection;

	lea	ecx, DWORD PTR _kTradeConnection$[ebp+44]
	call	??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3639 : 	kTradeConnection.m_iOriginX = pOriginCity->getX();

	mov	eax, DWORD PTR _pOriginCity$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T246247[ebp], ecx
	mov	edx, DWORD PTR $T246247[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+4], edx

; 3640 : 	kTradeConnection.m_iOriginY = pOriginCity->getY();

	mov	eax, DWORD PTR _pOriginCity$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T246256[ebp], ecx
	mov	edx, DWORD PTR $T246256[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+8], edx

; 3641 : 	kTradeConnection.m_iDestX = pDestCity->getX();

	mov	eax, DWORD PTR _pDestCity$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T246265[ebp], ecx
	mov	edx, DWORD PTR $T246265[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+12], edx

; 3642 : 	kTradeConnection.m_iDestY = pDestCity->getY();

	mov	eax, DWORD PTR _pDestCity$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T246274[ebp], ecx
	mov	edx, DWORD PTR $T246274[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+16], edx

; 3643 : 	kTradeConnection.m_eOriginOwner = pOriginCity->getOwner();

	mov	eax, DWORD PTR _pOriginCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T246283[ebp], ecx
	mov	edx, DWORD PTR $T246283[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+20], edx

; 3644 : 	kTradeConnection.m_eDestOwner = pDestCity->getOwner();

	mov	eax, DWORD PTR _pDestCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T246292[ebp], ecx
	mov	edx, DWORD PTR $T246292[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+24], edx

; 3645 : 	kTradeConnection.m_eDomain = eDomain;

	mov	eax, DWORD PTR _eDomain$[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+28], eax

; 3646 : 
; 3647 : 	if (pOriginCity->getOwner() != pDestCity->getOwner())

	mov	ecx, DWORD PTR _pOriginCity$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T246301[ebp], edx
	mov	eax, DWORD PTR _pDestCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T246310[ebp], ecx
	mov	edx, DWORD PTR $T246301[ebp]
	cmp	edx, DWORD PTR $T246310[ebp]
	je	SHORT $LN1@lGetIntern@3

; 3648 : 	{
; 3649 : 		kTradeConnection.m_eConnectionType = TRADE_CONNECTION_INTERNATIONAL;

	mov	DWORD PTR _kTradeConnection$[ebp+32], 0
$LN1@lGetIntern@3:

; 3650 : 	}
; 3651 : 
; 3652 : 	int iResult = pPlayerTrade->GetTradeConnectionValueTimes100(kTradeConnection, YIELD_GOLD, bOrigin);

	movzx	eax, BYTE PTR _bOrigin$[ebp]
	push	eax
	push	2
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerTrade$[ebp]
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	mov	DWORD PTR _iResult$[ebp], eax

; 3653 : 	lua_pushinteger(L, iResult);

	mov	edx, DWORD PTR _iResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 3654 : 
; 3655 : 	return 1;	

	mov	DWORD PTR $T246228[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _kTradeConnection$[ebp+44]
	call	??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::~FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	eax, DWORD PTR $T246228[ebp]

; 3656 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-532]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteTotal
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T246433 = -528						; size = 4
$T246424 = -524						; size = 4
$T246415 = -520						; size = 4
$T246406 = -516						; size = 4
$T246397 = -512						; size = 4
$T246388 = -508						; size = 4
$T246379 = -504						; size = 4
$T246370 = -500						; size = 4
$T246351 = -496						; size = 4
_pkPlayer$ = -492					; size = 4
_eDomain$ = -488					; size = 4
_pDestCity$ = -484					; size = 4
_iResult$ = -480					; size = 4
_pPlayerTrade$ = -476					; size = 4
_bOrigin$ = -469					; size = 1
_kTradeConnection$ = -468				; size = 444
__$ArrayPad$ = -20					; size = 4
_pOriginCity$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteScience, COMDAT

; 3660 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 528				; 00000210H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 3661 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3662 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	DWORD PTR _pPlayerTrade$[ebp], eax

; 3663 : 	CvCity* pOriginCity = CvLuaCity::GetInstance(L, 2, true);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pOriginCity$[ebp], eax

; 3664 : 	CvCity* pDestCity = CvLuaCity::GetInstance(L, 3, true);

	push	1
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pDestCity$[ebp], eax

; 3665 : 	DomainTypes eDomain = (DomainTypes)lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eDomain$[ebp], eax

; 3666 : 	bool bOrigin = lua_toboolean(L, 5);

	push	5
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bOrigin$[ebp], dl

; 3667 : 
; 3668 : 	TradeConnection kTradeConnection;

	lea	ecx, DWORD PTR _kTradeConnection$[ebp+44]
	call	??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3669 : 	kTradeConnection.m_iOriginX = pOriginCity->getX();

	mov	eax, DWORD PTR _pOriginCity$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T246370[ebp], ecx
	mov	edx, DWORD PTR $T246370[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+4], edx

; 3670 : 	kTradeConnection.m_iOriginY = pOriginCity->getY();

	mov	eax, DWORD PTR _pOriginCity$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T246379[ebp], ecx
	mov	edx, DWORD PTR $T246379[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+8], edx

; 3671 : 	kTradeConnection.m_iDestX = pDestCity->getX();

	mov	eax, DWORD PTR _pDestCity$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T246388[ebp], ecx
	mov	edx, DWORD PTR $T246388[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+12], edx

; 3672 : 	kTradeConnection.m_iDestY = pDestCity->getY();

	mov	eax, DWORD PTR _pDestCity$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T246397[ebp], ecx
	mov	edx, DWORD PTR $T246397[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+16], edx

; 3673 : 	kTradeConnection.m_eOriginOwner = pOriginCity->getOwner();

	mov	eax, DWORD PTR _pOriginCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T246406[ebp], ecx
	mov	edx, DWORD PTR $T246406[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+20], edx

; 3674 : 	kTradeConnection.m_eDestOwner = pDestCity->getOwner();

	mov	eax, DWORD PTR _pDestCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T246415[ebp], ecx
	mov	edx, DWORD PTR $T246415[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+24], edx

; 3675 : 	kTradeConnection.m_eDomain = eDomain;

	mov	eax, DWORD PTR _eDomain$[ebp]
	mov	DWORD PTR _kTradeConnection$[ebp+28], eax

; 3676 : 
; 3677 : 	if (pOriginCity->getOwner() != pDestCity->getOwner())

	mov	ecx, DWORD PTR _pOriginCity$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T246424[ebp], edx
	mov	eax, DWORD PTR _pDestCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T246433[ebp], ecx
	mov	edx, DWORD PTR $T246424[ebp]
	cmp	edx, DWORD PTR $T246433[ebp]
	je	SHORT $LN1@lGetIntern@4

; 3678 : 	{
; 3679 : 		kTradeConnection.m_eConnectionType = TRADE_CONNECTION_INTERNATIONAL;

	mov	DWORD PTR _kTradeConnection$[ebp+32], 0
$LN1@lGetIntern@4:

; 3680 : 	}
; 3681 : 
; 3682 : 	int iResult = pPlayerTrade->GetTradeConnectionValueTimes100(kTradeConnection, YIELD_SCIENCE, bOrigin);

	movzx	eax, BYTE PTR _bOrigin$[ebp]
	push	eax
	push	3
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerTrade$[ebp]
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	mov	DWORD PTR _iResult$[ebp], eax

; 3683 : 	lua_pushinteger(L, iResult);

	mov	edx, DWORD PTR _iResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 3684 : 
; 3685 : 	return 1;	

	mov	DWORD PTR $T246351[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _kTradeConnection$[ebp+44]
	call	??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::~FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	eax, DWORD PTR $T246351[ebp]

; 3686 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-532]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteScience
EXTRN	?canChangeTradeUnitHomeCityAt@CvUnit@@QBE_NPBVCvPlot@@HH@Z:PROC ; CvUnit::canChangeTradeUnitHomeCityAt
EXTRN	?plot@CvCity@@QBEPAVCvPlot@@XZ:PROC		; CvCity::plot
EXTRN	?canChangeTradeUnitHomeCity@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC ; CvUnit::canChangeTradeUnitHomeCity
; Function compile flags: /Odtp
;	COMDAT ?lGetPotentialTradeUnitNewHomeCity@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv165 = -48						; size = 4
$T246506 = -44						; size = 4
$T246497 = -40						; size = 4
_t$229600 = -36						; size = 4
_iLoopCityX$229596 = -32				; size = 4
_iLoopCityY$229597 = -28				; size = 4
_iCityLoop$229591 = -24					; size = 4
_pLoopCity$229592 = -20					; size = 4
_pkUnit$ = -16						; size = 4
_pkPlayer$ = -12					; size = 4
_index$ = -8						; size = 4
_pkUnitPlot$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetPotentialTradeUnitNewHomeCity@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPotentialTradeUnitNewHomeCity, COMDAT

; 3690 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H

; 3691 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3692 : 	CvUnit* pkUnit = CvLuaUnit::GetInstance(L, 2, false);

	push	0
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkUnit$[ebp], eax

; 3693 : 	CvPlot* pkUnitPlot = pkUnit->plot();

	mov	ecx, DWORD PTR _pkUnit$[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	DWORD PTR _pkUnitPlot$[ebp], eax

; 3694 : 
; 3695 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 3696 : 	int index = 1;

	mov	DWORD PTR _index$[ebp], 1

; 3697 : 
; 3698 : 	if (pkUnit->canChangeTradeUnitHomeCity(pkUnitPlot))

	mov	eax, DWORD PTR _pkUnitPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkUnit$[ebp]
	call	?canChangeTradeUnitHomeCity@CvUnit@@QBE_NPBVCvPlot@@@Z ; CvUnit::canChangeTradeUnitHomeCity
	movzx	ecx, al
	test	ecx, ecx
	je	$LN6@lGetPotent@2

; 3699 : 	{
; 3700 : 		int iCityLoop;
; 3701 : 		CvCity* pLoopCity = NULL;

	mov	DWORD PTR _pLoopCity$229592[ebp], 0

; 3702 : 		for(pLoopCity = pkPlayer->firstCity(&iCityLoop); pLoopCity != NULL; pLoopCity = pkPlayer->nextCity(&iCityLoop))

	push	0
	lea	edx, DWORD PTR _iCityLoop$229591[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$229592[ebp], eax
	jmp	SHORT $LN5@lGetPotent@2
$LN4@lGetPotent@2:
	push	0
	lea	eax, DWORD PTR _iCityLoop$229591[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$229592[ebp], eax
$LN5@lGetPotent@2:
	cmp	DWORD PTR _pLoopCity$229592[ebp], 0
	je	$LN6@lGetPotent@2

; 3703 : 		{
; 3704 : 			int iLoopCityX = pLoopCity->getX();

	mov	ecx, DWORD PTR _pLoopCity$229592[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR _iLoopCityX$229596[ebp], edx

; 3705 : 			int iLoopCityY = pLoopCity->getY();

	mov	eax, DWORD PTR _pLoopCity$229592[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR _iLoopCityY$229597[ebp], ecx

; 3706 : 
; 3707 : 			// can't change to its own home city
; 3708 : 			if (pLoopCity->plot() == pkUnitPlot)

	mov	ecx, DWORD PTR _pLoopCity$229592[ebp]
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	cmp	eax, DWORD PTR _pkUnitPlot$[ebp]
	jne	SHORT $LN2@lGetPotent@2

; 3709 : 			{
; 3710 : 				continue;

	jmp	SHORT $LN4@lGetPotent@2
$LN2@lGetPotent@2:

; 3711 : 			}
; 3712 : 
; 3713 : 			if (pkUnit->canChangeTradeUnitHomeCityAt(pkUnitPlot, iLoopCityX, iLoopCityY))

	mov	edx, DWORD PTR _iLoopCityY$229597[ebp]
	push	edx
	mov	eax, DWORD PTR _iLoopCityX$229596[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkUnitPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkUnit$[ebp]
	call	?canChangeTradeUnitHomeCityAt@CvUnit@@QBE_NPBVCvPlot@@HH@Z ; CvUnit::canChangeTradeUnitHomeCityAt
	movzx	edx, al
	test	edx, edx
	je	$LN1@lGetPotent@2

; 3714 : 			{
; 3715 : 				lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 3716 : 				const int t = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$229600[ebp], eax

; 3717 : 				lua_pushinteger(L, pLoopCity->getX());

	mov	edx, DWORD PTR _pLoopCity$229592[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T246497[ebp], eax
	mov	ecx, DWORD PTR $T246497[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3718 : 				lua_setfield(L, t, "X");

	push	OFFSET ??_C@_01MMEEDKFM@X?$AA@
	mov	eax, DWORD PTR _t$229600[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 3719 : 				lua_pushinteger(L, pLoopCity->getY());

	mov	edx, DWORD PTR _pLoopCity$229592[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR $T246506[ebp], eax
	mov	ecx, DWORD PTR $T246506[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3720 : 				lua_setfield(L, t, "Y");

	push	OFFSET ??_C@_01NFFPALBN@Y?$AA@
	mov	eax, DWORD PTR _t$229600[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 3721 : 				lua_rawseti(L, -2, index++);

	mov	edx, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv165[ebp], edx
	mov	eax, DWORD PTR tv165[ebp]
	push	eax
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _index$[ebp]
	add	edx, 1
	mov	DWORD PTR _index$[ebp], edx
$LN1@lGetPotent@2:

; 3722 : 			}
; 3723 : 		}

	jmp	$LN4@lGetPotent@2
$LN6@lGetPotent@2:

; 3724 : 	}
; 3725 : 
; 3726 : 	return 1;

	mov	eax, 1

; 3727 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPotentialTradeUnitNewHomeCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPotentialTradeUnitNewHomeCity
_TEXT	ENDS
EXTRN	?canChangeAdmiralPortAt@CvUnit@@QBE_NPBVCvPlot@@HH@Z:PROC ; CvUnit::canChangeAdmiralPortAt
EXTRN	?canChangeAdmiralPort@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC ; CvUnit::canChangeAdmiralPort
; Function compile flags: /Odtp
;	COMDAT ?lGetPotentialAdmiralNewPort@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv165 = -48						; size = 4
$T246542 = -44						; size = 4
$T246533 = -40						; size = 4
_t$229618 = -36						; size = 4
_iLoopCityX$229614 = -32				; size = 4
_iLoopCityY$229615 = -28				; size = 4
_iCityLoop$229609 = -24					; size = 4
_pLoopCity$229610 = -20					; size = 4
_pkUnit$ = -16						; size = 4
_pkPlayer$ = -12					; size = 4
_index$ = -8						; size = 4
_pkUnitPlot$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetPotentialAdmiralNewPort@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPotentialAdmiralNewPort, COMDAT

; 3731 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H

; 3732 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3733 : 	CvUnit* pkUnit = CvLuaUnit::GetInstance(L, 2, false);

	push	0
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkUnit$[ebp], eax

; 3734 : 	CvPlot* pkUnitPlot = pkUnit->plot();

	mov	ecx, DWORD PTR _pkUnit$[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	DWORD PTR _pkUnitPlot$[ebp], eax

; 3735 : 
; 3736 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 3737 : 	int index = 1;

	mov	DWORD PTR _index$[ebp], 1

; 3738 : 
; 3739 : 	if (pkUnit->canChangeAdmiralPort(pkUnitPlot))

	mov	eax, DWORD PTR _pkUnitPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkUnit$[ebp]
	call	?canChangeAdmiralPort@CvUnit@@QBE_NPBVCvPlot@@@Z ; CvUnit::canChangeAdmiralPort
	movzx	ecx, al
	test	ecx, ecx
	je	$LN6@lGetPotent@3

; 3740 : 	{
; 3741 : 		int iCityLoop;
; 3742 : 		CvCity* pLoopCity = NULL;

	mov	DWORD PTR _pLoopCity$229610[ebp], 0

; 3743 : 		for(pLoopCity = pkPlayer->firstCity(&iCityLoop); pLoopCity != NULL; pLoopCity = pkPlayer->nextCity(&iCityLoop))

	push	0
	lea	edx, DWORD PTR _iCityLoop$229609[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$229610[ebp], eax
	jmp	SHORT $LN5@lGetPotent@3
$LN4@lGetPotent@3:
	push	0
	lea	eax, DWORD PTR _iCityLoop$229609[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$229610[ebp], eax
$LN5@lGetPotent@3:
	cmp	DWORD PTR _pLoopCity$229610[ebp], 0
	je	$LN6@lGetPotent@3

; 3744 : 		{
; 3745 : 			int iLoopCityX = pLoopCity->getX();

	mov	ecx, DWORD PTR _pLoopCity$229610[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR _iLoopCityX$229614[ebp], edx

; 3746 : 			int iLoopCityY = pLoopCity->getY();

	mov	eax, DWORD PTR _pLoopCity$229610[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR _iLoopCityY$229615[ebp], ecx

; 3747 : 
; 3748 : 			// can't change to its own home city
; 3749 : 			if (pLoopCity->plot() == pkUnitPlot)

	mov	ecx, DWORD PTR _pLoopCity$229610[ebp]
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	cmp	eax, DWORD PTR _pkUnitPlot$[ebp]
	jne	SHORT $LN2@lGetPotent@3

; 3750 : 			{
; 3751 : 				continue;

	jmp	SHORT $LN4@lGetPotent@3
$LN2@lGetPotent@3:

; 3752 : 			}
; 3753 : 
; 3754 : 			if (pkUnit->canChangeAdmiralPortAt(pkUnitPlot, iLoopCityX, iLoopCityY))

	mov	edx, DWORD PTR _iLoopCityY$229615[ebp]
	push	edx
	mov	eax, DWORD PTR _iLoopCityX$229614[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkUnitPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkUnit$[ebp]
	call	?canChangeAdmiralPortAt@CvUnit@@QBE_NPBVCvPlot@@HH@Z ; CvUnit::canChangeAdmiralPortAt
	movzx	edx, al
	test	edx, edx
	je	$LN1@lGetPotent@3

; 3755 : 			{
; 3756 : 				lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 3757 : 				const int t = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$229618[ebp], eax

; 3758 : 				lua_pushinteger(L, pLoopCity->getX());

	mov	edx, DWORD PTR _pLoopCity$229610[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T246533[ebp], eax
	mov	ecx, DWORD PTR $T246533[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3759 : 				lua_setfield(L, t, "X");

	push	OFFSET ??_C@_01MMEEDKFM@X?$AA@
	mov	eax, DWORD PTR _t$229618[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 3760 : 				lua_pushinteger(L, pLoopCity->getY());

	mov	edx, DWORD PTR _pLoopCity$229610[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR $T246542[ebp], eax
	mov	ecx, DWORD PTR $T246542[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 3761 : 				lua_setfield(L, t, "Y");

	push	OFFSET ??_C@_01NFFPALBN@Y?$AA@
	mov	eax, DWORD PTR _t$229618[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 3762 : 				lua_rawseti(L, -2, index++);

	mov	edx, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv165[ebp], edx
	mov	eax, DWORD PTR tv165[ebp]
	push	eax
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _index$[ebp]
	add	edx, 1
	mov	DWORD PTR _index$[ebp], edx
$LN1@lGetPotent@3:

; 3763 : 			}
; 3764 : 		}

	jmp	$LN4@lGetPotent@3
$LN6@lGetPotent@3:

; 3765 : 	}
; 3766 : 
; 3767 : 	return 1;

	mov	eax, 1

; 3768 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPotentialAdmiralNewPort@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPotentialAdmiralNewPort
_TEXT	ENDS
EXTRN	?IsUnitIDUsed@CvGameTrade@@QAE_NH@Z:PROC	; CvGameTrade::IsUnitIDUsed
EXTRN	?isTrade@CvUnit@@QBE_NXZ:PROC			; CvUnit::isTrade
EXTRN	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z:PROC	; CvPlayer::nextUnit
EXTRN	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z:PROC	; CvPlayer::firstUnit
; Function compile flags: /Odtp
;	COMDAT ?lGetNumAvailableTradeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T246557 = -32						; size = 4
$T246548 = -28						; size = 4
_iCount$ = -24						; size = 4
_pkPlayer$ = -20					; size = 4
_eDomain$ = -16						; size = 4
_iLoopUnit$ = -12					; size = 4
_pLoopUnit$ = -8					; size = 4
_pTrade$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumAvailableTradeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumAvailableTradeUnits, COMDAT

; 3772 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 3773 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3774 : 	DomainTypes eDomain = (DomainTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eDomain$[ebp], eax

; 3775 : 	CvGameTrade* pTrade = GC.getGame().GetGameTrade();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T246548[ebp], edx
	mov	ecx, DWORD PTR $T246548[ebp]
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	DWORD PTR _pTrade$[ebp], eax

; 3776 : 
; 3777 : 	int iCount = 0;

	mov	DWORD PTR _iCount$[ebp], 0

; 3778 : 	int iLoopUnit;
; 3779 : 	CvUnit* pLoopUnit;
; 3780 : 	for (pLoopUnit = pkPlayer->firstUnit(&iLoopUnit); pLoopUnit != NULL; pLoopUnit = pkPlayer->nextUnit(&iLoopUnit))

	push	0
	lea	eax, DWORD PTR _iLoopUnit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::firstUnit
	mov	DWORD PTR _pLoopUnit$[ebp], eax
	jmp	SHORT $LN4@lGetNumAva
$LN3@lGetNumAva:
	push	0
	lea	ecx, DWORD PTR _iLoopUnit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::nextUnit
	mov	DWORD PTR _pLoopUnit$[ebp], eax
$LN4@lGetNumAva:
	cmp	DWORD PTR _pLoopUnit$[ebp], 0
	je	SHORT $LN2@lGetNumAva

; 3781 : 	{
; 3782 : 		if (pLoopUnit->isTrade() && pLoopUnit->getDomainType() == eDomain && !pTrade->IsUnitIDUsed(pLoopUnit->GetID()))

	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	call	?isTrade@CvUnit@@QBE_NXZ		; CvUnit::isTrade
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@lGetNumAva
	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	call	?getDomainType@CvUnit@@QBE?AW4DomainTypes@@XZ ; CvUnit::getDomainType
	cmp	eax, DWORD PTR _eDomain$[ebp]
	jne	SHORT $LN1@lGetNumAva
	mov	eax, DWORD PTR _pLoopUnit$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	DWORD PTR $T246557[ebp], ecx
	mov	edx, DWORD PTR $T246557[ebp]
	push	edx
	mov	ecx, DWORD PTR _pTrade$[ebp]
	call	?IsUnitIDUsed@CvGameTrade@@QAE_NH@Z	; CvGameTrade::IsUnitIDUsed
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@lGetNumAva

; 3783 : 		{
; 3784 : 			iCount++;

	mov	ecx, DWORD PTR _iCount$[ebp]
	add	ecx, 1
	mov	DWORD PTR _iCount$[ebp], ecx
$LN1@lGetNumAva:

; 3785 : 		}
; 3786 : 	}

	jmp	SHORT $LN3@lGetNumAva
$LN2@lGetNumAva:

; 3787 : 
; 3788 : 	lua_pushinteger(L, iCount);

	mov	edx, DWORD PTR _iCount$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 3789 : 	return 1;

	mov	eax, 1

; 3790 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumAvailableTradeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumAvailableTradeUnits
_TEXT	ENDS
EXTRN	?GetTradeUnit@CvPlayerTrade@@SA?AW4UnitTypes@@W4DomainTypes@@@Z:PROC ; CvPlayerTrade::GetTradeUnit
; Function compile flags: /Odtp
;	COMDAT ?lGetTradeUnitType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_eDomain$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetTradeUnitType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTradeUnitType, COMDAT

; 3794 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3795 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3796 : 	DomainTypes eDomain = (DomainTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eDomain$[ebp], eax

; 3797 : 	lua_pushinteger(L, pkPlayer->GetTrade()->GetTradeUnit(eDomain));

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	edx, DWORD PTR _eDomain$[ebp]
	push	edx
	call	?GetTradeUnit@CvPlayerTrade@@SA?AW4UnitTypes@@W4DomainTypes@@@Z ; CvPlayerTrade::GetTradeUnit
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 3798 : 	return 1;

	mov	eax, 1

; 3799 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTradeUnitType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTradeUnitType
_TEXT	ENDS
PUBLIC	??_C@_09ODCIJKAA@?$FLNEWLINE?$FN?$AA@		; `string'
PUBLIC	??$?6$0CE@@@YAAAVString@Localization@@AAV01@AAY0CE@$$CBD@Z ; operator<<<36>
PUBLIC	??_C@_0CE@FDBCHBCH@TXT_KEY_TOP_PANEL_ITR_CITY_STATE@ ; `string'
PUBLIC	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
PUBLIC	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
PUBLIC	??_C@_0DH@FPMGHNBP@TXT_KEY_TOP_PANEL_ITR_INTERNAL_Y@ ; `string'
PUBLIC	??_C@_0DJ@PFFONELO@TXT_KEY_TOP_PANEL_ITR_INTERNAL_Y@ ; `string'
PUBLIC	??_C@_0DC@HDCJBEOD@TXT_KEY_TOP_PANEL_ITR_INTERNAL_Y@ ; `string'
PUBLIC	??_C@_0CO@INFODJMG@TXT_KEY_TOP_PANEL_ITR_YOUR_ROUTE@ ; `string'
PUBLIC	??_C@_0DA@NEBFPNPJ@TXT_KEY_TOP_PANEL_ITR_YOUR_ROUTE@ ; `string'
PUBLIC	??_C@_0CJ@FEECLHNE@TXT_KEY_TOP_PANEL_ITR_YOUR_ROUTE@ ; `string'
PUBLIC	??_C@_0CF@IPBIHCLJ@TXT_KEY_TOP_PANEL_ITR_FAITH_YIEL@ ; `string'
PUBLIC	??_C@_0CH@LOEJAADB@TXT_KEY_TOP_PANEL_ITR_CULTURE_YI@ ; `string'
PUBLIC	??_C@_0CH@BAOHBFEN@TXT_KEY_TOP_PANEL_ITR_SCIENCE_YI@ ; `string'
PUBLIC	??_C@_0CE@NBBHBABO@TXT_KEY_TOP_PANEL_ITR_GOLD_YIELD@ ; `string'
PUBLIC	??_C@_0CK@CNOODEEB@TXT_KEY_TOP_PANEL_ITR_PRODUCTION@ ; `string'
PUBLIC	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z	; GetLocalizedText<int>
PUBLIC	??_C@_0CE@DLIGCDJI@TXT_KEY_TOP_PANEL_ITR_FOOD_YIELD@ ; `string'
PUBLIC	??_C@_02KEGNLNML@?0?5?$AA@			; `string'
PUBLIC	?isPlot@CvMap@@QBEHHH@Z				; CvMap::isPlot
PUBLIC	?coordRange@@YAHHH_N@Z				; coordRange
PUBLIC	__$ArrayPad$
EXTRN	__imp_?toUTF8@String@Localization@@QAEPBDXZ:PROC
EXTRN	?isMinorCiv@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isMinorCiv
EXTRN	?getNameKey@CvCity@@QBEPBDXZ:PROC		; CvCity::getNameKey
EXTRN	__imp_??1String@Localization@@UAE@XZ:PROC
EXTRN	__imp_??4String@Localization@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_?Lookup@Localization@@YA?AVString@1@PBD@Z:PROC
EXTRN	__imp_??0String@Localization@@QAE@XZ:PROC
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:PROC
EXTRN	__imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z:PROC
EXTRN	?IsTradeRouteIndexEmpty@CvGameTrade@@QAE_NH@Z:PROC ; CvGameTrade::IsTradeRouteIndexEmpty
;	COMDAT ??_C@_09ODCIJKAA@?$FLNEWLINE?$FN?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_09ODCIJKAA@?$FLNEWLINE?$FN?$AA@ DB '[NEWLINE]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@FDBCHBCH@TXT_KEY_TOP_PANEL_ITR_CITY_STATE@
CONST	SEGMENT
??_C@_0CE@FDBCHBCH@TXT_KEY_TOP_PANEL_ITR_CITY_STATE@ DB 'TXT_KEY_TOP_PANE'
	DB	'L_ITR_CITY_STATE_TT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@FPMGHNBP@TXT_KEY_TOP_PANEL_ITR_INTERNAL_Y@
CONST	SEGMENT
??_C@_0DH@FPMGHNBP@TXT_KEY_TOP_PANEL_ITR_INTERNAL_Y@ DB 'TXT_KEY_TOP_PANE'
	DB	'L_ITR_INTERNAL_YOUR_ROUTE_ONLY_DEST_TT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@PFFONELO@TXT_KEY_TOP_PANEL_ITR_INTERNAL_Y@
CONST	SEGMENT
??_C@_0DJ@PFFONELO@TXT_KEY_TOP_PANEL_ITR_INTERNAL_Y@ DB 'TXT_KEY_TOP_PANE'
	DB	'L_ITR_INTERNAL_YOUR_ROUTE_ONLY_ORIGIN_TT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@HDCJBEOD@TXT_KEY_TOP_PANEL_ITR_INTERNAL_Y@
CONST	SEGMENT
??_C@_0DC@HDCJBEOD@TXT_KEY_TOP_PANEL_ITR_INTERNAL_Y@ DB 'TXT_KEY_TOP_PANE'
	DB	'L_ITR_INTERNAL_YOUR_ROUTE_BOTH_TT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@INFODJMG@TXT_KEY_TOP_PANEL_ITR_YOUR_ROUTE@
CONST	SEGMENT
??_C@_0CO@INFODJMG@TXT_KEY_TOP_PANEL_ITR_YOUR_ROUTE@ DB 'TXT_KEY_TOP_PANE'
	DB	'L_ITR_YOUR_ROUTE_ONLY_DEST_TT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@NEBFPNPJ@TXT_KEY_TOP_PANEL_ITR_YOUR_ROUTE@
CONST	SEGMENT
??_C@_0DA@NEBFPNPJ@TXT_KEY_TOP_PANEL_ITR_YOUR_ROUTE@ DB 'TXT_KEY_TOP_PANE'
	DB	'L_ITR_YOUR_ROUTE_ONLY_ORIGIN_TT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@FEECLHNE@TXT_KEY_TOP_PANEL_ITR_YOUR_ROUTE@
CONST	SEGMENT
??_C@_0CJ@FEECLHNE@TXT_KEY_TOP_PANEL_ITR_YOUR_ROUTE@ DB 'TXT_KEY_TOP_PANE'
	DB	'L_ITR_YOUR_ROUTE_BOTH_TT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@IPBIHCLJ@TXT_KEY_TOP_PANEL_ITR_FAITH_YIEL@
CONST	SEGMENT
??_C@_0CF@IPBIHCLJ@TXT_KEY_TOP_PANEL_ITR_FAITH_YIEL@ DB 'TXT_KEY_TOP_PANE'
	DB	'L_ITR_FAITH_YIELD_TT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@LOEJAADB@TXT_KEY_TOP_PANEL_ITR_CULTURE_YI@
CONST	SEGMENT
??_C@_0CH@LOEJAADB@TXT_KEY_TOP_PANEL_ITR_CULTURE_YI@ DB 'TXT_KEY_TOP_PANE'
	DB	'L_ITR_CULTURE_YIELD_TT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@BAOHBFEN@TXT_KEY_TOP_PANEL_ITR_SCIENCE_YI@
CONST	SEGMENT
??_C@_0CH@BAOHBFEN@TXT_KEY_TOP_PANEL_ITR_SCIENCE_YI@ DB 'TXT_KEY_TOP_PANE'
	DB	'L_ITR_SCIENCE_YIELD_TT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@NBBHBABO@TXT_KEY_TOP_PANEL_ITR_GOLD_YIELD@
CONST	SEGMENT
??_C@_0CE@NBBHBABO@TXT_KEY_TOP_PANEL_ITR_GOLD_YIELD@ DB 'TXT_KEY_TOP_PANE'
	DB	'L_ITR_GOLD_YIELD_TT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@CNOODEEB@TXT_KEY_TOP_PANEL_ITR_PRODUCTION@
CONST	SEGMENT
??_C@_0CK@CNOODEEB@TXT_KEY_TOP_PANEL_ITR_PRODUCTION@ DB 'TXT_KEY_TOP_PANE'
	DB	'L_ITR_PRODUCTION_YIELD_TT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@DLIGCDJI@TXT_KEY_TOP_PANEL_ITR_FOOD_YIELD@
CONST	SEGMENT
??_C@_0CE@DLIGCDJI@TXT_KEY_TOP_PANEL_ITR_FOOD_YIELD@ DB 'TXT_KEY_TOP_PANE'
	DB	'L_ITR_FOOD_YIELD_TT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02KEGNLNML@?0?5?$AA@
CONST	SEGMENT
??_C@_02KEGNLNML@?0?5?$AA@ DB ', ', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	016H
	DD	FLAT:__unwindtable$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$7
	DD	01H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$9
	DD	08H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$10
	DD	08H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$11
	DD	08H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$12
	DD	08H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$13
	DD	08H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$14
	DD	08H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$15
	DD	0fH
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$16
	DD	0fH
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$17
	DD	0fH
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$18
	DD	0fH
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$19
	DD	0fH
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$20
	DD	0fH
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$21
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv688 = -1360						; size = 4
tv942 = -1356						; size = 4
tv686 = -1352						; size = 4
tv941 = -1348						; size = 4
tv684 = -1344						; size = 4
tv940 = -1340						; size = 4
tv682 = -1336						; size = 4
tv939 = -1332						; size = 4
tv680 = -1328						; size = 4
tv938 = -1324						; size = 4
tv678 = -1320						; size = 4
tv414 = -1316						; size = 4
tv675 = -1312						; size = 4
tv937 = -1308						; size = 4
tv673 = -1304						; size = 4
tv936 = -1300						; size = 4
tv671 = -1296						; size = 4
tv935 = -1292						; size = 4
tv669 = -1288						; size = 4
tv934 = -1284						; size = 4
tv667 = -1280						; size = 4
tv933 = -1276						; size = 4
tv665 = -1272						; size = 4
tv932 = -1268						; size = 4
tv309 = -1264						; size = 4
tv867 = -1260						; size = 4
tv662 = -1256						; size = 4
tv931 = -1252						; size = 4
tv660 = -1248						; size = 4
tv930 = -1244						; size = 4
tv658 = -1240						; size = 4
tv689 = -1236						; size = 4
tv656 = -1232						; size = 4
tv695 = -1228						; size = 4
tv654 = -1224						; size = 4
tv827 = -1220						; size = 4
tv652 = -1216						; size = 4
tv865 = -1212						; size = 4
tv192 = -1208						; size = 4
tv818 = -1204						; size = 4
tv766 = -1200						; size = 4
tv735 = -1196						; size = 4
tv697 = -1192						; size = 4
$T246868 = -1188					; size = 4
$T246864 = -1184					; size = 4
$T246855 = -1180					; size = 4
$T246851 = -1176					; size = 4
$T246768 = -1164					; size = 4
$T246767 = -1160					; size = 4
$T246736 = -1156					; size = 4
$T246731 = -1152					; size = 4
$T246727 = -1145					; size = 1
$T246716 = -1144					; size = 4
$T246712 = -1137					; size = 1
_iMapY$246745 = -1136					; size = 4
_iMapX$246744 = -1132					; size = 4
$T246705 = -1128					; size = 4
$T246701 = -1124					; size = 4
$T246700 = -1120					; size = 4
$T246669 = -1116					; size = 4
$T246664 = -1112					; size = 4
$T246660 = -1105					; size = 1
$T246649 = -1104					; size = 4
$T246645 = -1097					; size = 1
_iMapY$246678 = -1096					; size = 4
_iMapX$246677 = -1092					; size = 4
$T246638 = -1088					; size = 4
$T246634 = -1084					; size = 4
$T246622 = -1080					; size = 4
$T246610 = -1076					; size = 4
$T246584 = -1072					; size = 4
$T246583 = -1068					; size = 4
$T246582 = -1064					; size = 4
$T246581 = -1060					; size = 4
$T246580 = -1056					; size = 80
$T246579 = -976						; size = 80
$T246578 = -896						; size = 80
$T246577 = -816						; size = 80
$T246576 = -736						; size = 80
$T246575 = -656						; size = 80
$T246574 = -576						; size = 28
$T246573 = -548						; size = 28
$T246572 = -520						; size = 28
$T246571 = -492						; size = 28
$T246570 = -464						; size = 28
$T246569 = -436						; size = 28
$T246568 = -408						; size = 28
$T246567 = -380						; size = 28
$T246566 = -352						; size = 28
$T246565 = -324						; size = 28
$T246564 = -296						; size = 28
$T246563 = -268						; size = 28
_eYield$229704 = -240					; size = 4
_iYieldQuantity$229706 = -236				; size = 4
_uiYield$229700 = -232					; size = 4
_eYield$229666 = -228					; size = 4
_iYieldQuantity$229668 = -224				; size = 4
_uiYield$229662 = -220					; size = 4
_strOriginYieldsStr$229661 = -216			; size = 28
_strDestYieldsStr$229699 = -188				; size = 28
_pOriginPlot$229653 = -160				; size = 4
_strBuffer$229724 = -156				; size = 80
_pDestPlot$229654 = -76					; size = 4
_pDestCity$229658 = -72					; size = 4
_pOriginCity$229657 = -68				; size = 4
_ui$229647 = -64					; size = 4
_pkPlayer$ = -60					; size = 4
_pConnection$ = -56					; size = 4
_pPlayerTrade$ = -52					; size = 4
_pTrade$ = -48						; size = 4
_strResult$ = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTradeYourRoutesTTString, COMDAT

; 3803 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1348				; 00000544H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 3804 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3805 : 	CvGameTrade* pTrade = GC.getGame().GetGameTrade();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T246610[ebp], ecx
	mov	ecx, DWORD PTR $T246610[ebp]
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	DWORD PTR _pTrade$[ebp], eax

; 3806 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	DWORD PTR _pPlayerTrade$[ebp], eax

; 3807 : 
; 3808 : 	CvString strResult = "";	

	mov	edx, OFFSET ??_C@_00CNPNBAHC@?$AA@
	test	edx, edx
	je	SHORT $LN81@lGetTradeY
	mov	DWORD PTR tv697[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	SHORT $LN82@lGetTradeY
$LN81@lGetTradeY:
	mov	DWORD PTR tv697[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN82@lGetTradeY:
	mov	eax, DWORD PTR tv697[ebp]
	push	eax
	lea	ecx, DWORD PTR _strResult$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3809 : 
; 3810 : 	TradeConnection* pConnection = NULL;

	mov	DWORD PTR _pConnection$[ebp], 0

; 3811 : 	for (uint ui = 0; ui < pTrade->m_aTradeConnections.size(); ui++)

	mov	DWORD PTR _ui$229647[ebp], 0
	jmp	SHORT $LN52@lGetTradeY
$LN51@lGetTradeY:
	mov	ecx, DWORD PTR _ui$229647[ebp]
	add	ecx, 1
	mov	DWORD PTR _ui$229647[ebp], ecx
$LN52@lGetTradeY:
	mov	edx, DWORD PTR _pTrade$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T246622[ebp], eax
	mov	ecx, DWORD PTR _ui$229647[ebp]
	cmp	ecx, DWORD PTR $T246622[ebp]
	jae	$LN218@lGetTradeY

; 3812 : 	{
; 3813 : 		if (pTrade->IsTradeRouteIndexEmpty(ui))

	mov	edx, DWORD PTR _ui$229647[ebp]
	push	edx
	mov	ecx, DWORD PTR _pTrade$[ebp]
	call	?IsTradeRouteIndexEmpty@CvGameTrade@@QAE_NH@Z ; CvGameTrade::IsTradeRouteIndexEmpty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN86@lGetTradeY

; 3814 : 		{
; 3815 : 			continue;

	jmp	SHORT $LN51@lGetTradeY

; 3816 : 		}
; 3817 : 
; 3818 : 		pConnection = &(pTrade->m_aTradeConnections[ui]);

$LN86@lGetTradeY:
	mov	ecx, DWORD PTR _ui$229647[ebp]
	imul	ecx, 444				; 000001bcH
	mov	edx, DWORD PTR _pTrade$[ebp]
	add	ecx, DWORD PTR [edx]
	mov	DWORD PTR _pConnection$[ebp], ecx

; 3819 : 		if (pConnection->m_eOriginOwner == pkPlayer->GetID())

	mov	eax, DWORD PTR _pkPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T246634[ebp], ecx
	mov	edx, DWORD PTR _pConnection$[ebp]
	mov	eax, DWORD PTR [edx+20]
	cmp	eax, DWORD PTR $T246634[ebp]
	jne	$LN48@lGetTradeY

; 3820 : 		{
; 3821 : 			CvPlot* pOriginPlot = GC.getMap().plot(pConnection->m_iOriginX, pConnection->m_iOriginY);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T246638[ebp], ecx
	mov	edx, DWORD PTR _pConnection$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T246701[ebp], eax
	mov	ecx, DWORD PTR _pConnection$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T246700[ebp], edx
	cmp	DWORD PTR $T246700[ebp], -2147483647	; 80000001H
	je	SHORT $LN94@lGetTradeY
	cmp	DWORD PTR $T246701[ebp], -2147483647	; 80000001H
	jne	SHORT $LN95@lGetTradeY
$LN94@lGetTradeY:
	mov	DWORD PTR _pOriginPlot$229653[ebp], 0
	jmp	$LN96@lGetTradeY
$LN95@lGetTradeY:
	mov	eax, DWORD PTR $T246638[ebp]
	mov	cl, BYTE PTR [eax+4056]
	mov	BYTE PTR $T246645[ebp], cl
	mov	edx, DWORD PTR $T246638[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T246649[ebp], eax
	movzx	ecx, BYTE PTR $T246645[ebp]
	test	ecx, ecx
	je	SHORT $LN107@lGetTradeY
	cmp	DWORD PTR $T246700[ebp], 0
	jge	SHORT $LN106@lGetTradeY
	mov	eax, DWORD PTR $T246700[ebp]
	cdq
	idiv	DWORD PTR $T246649[ebp]
	add	edx, DWORD PTR $T246649[ebp]
	mov	DWORD PTR _iMapX$246677[ebp], edx
	jmp	SHORT $LN108@lGetTradeY
	jmp	SHORT $LN107@lGetTradeY
$LN106@lGetTradeY:
	mov	edx, DWORD PTR $T246700[ebp]
	cmp	edx, DWORD PTR $T246649[ebp]
	jl	SHORT $LN107@lGetTradeY
	mov	eax, DWORD PTR $T246700[ebp]
	cdq
	idiv	DWORD PTR $T246649[ebp]
	mov	DWORD PTR _iMapX$246677[ebp], edx
	jmp	SHORT $LN108@lGetTradeY
$LN107@lGetTradeY:
	mov	eax, DWORD PTR $T246700[ebp]
	mov	DWORD PTR _iMapX$246677[ebp], eax
$LN108@lGetTradeY:
	mov	ecx, DWORD PTR $T246638[ebp]
	mov	dl, BYTE PTR [ecx+4057]
	mov	BYTE PTR $T246660[ebp], dl
	mov	eax, DWORD PTR $T246638[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T246664[ebp], ecx
	movzx	edx, BYTE PTR $T246660[ebp]
	push	edx
	mov	eax, DWORD PTR $T246664[ebp]
	push	eax
	mov	ecx, DWORD PTR $T246701[ebp]
	push	ecx
	call	?coordRange@@YAHHH_N@Z			; coordRange
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iMapY$246678[ebp], eax
	mov	edx, DWORD PTR _iMapY$246678[ebp]
	push	edx
	mov	eax, DWORD PTR _iMapX$246677[ebp]
	push	eax
	mov	ecx, DWORD PTR $T246638[ebp]
	call	?isPlot@CvMap@@QBEHHH@Z			; CvMap::isPlot
	test	eax, eax
	je	SHORT $LN98@lGetTradeY
	mov	ecx, DWORD PTR $T246638[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T246669[ebp], edx
	mov	eax, DWORD PTR _iMapY$246678[ebp]
	imul	eax, DWORD PTR $T246669[ebp]
	add	eax, DWORD PTR _iMapX$246677[ebp]
	imul	eax, 484				; 000001e4H
	mov	ecx, DWORD PTR $T246638[ebp]
	add	eax, DWORD PTR [ecx+4068]
	mov	DWORD PTR tv735[ebp], eax
	jmp	SHORT $LN99@lGetTradeY
$LN98@lGetTradeY:
	mov	DWORD PTR tv735[ebp], 0
$LN99@lGetTradeY:
	mov	edx, DWORD PTR tv735[ebp]
	mov	DWORD PTR _pOriginPlot$229653[ebp], edx
$LN96@lGetTradeY:

; 3822 : 			CvPlot* pDestPlot = GC.getMap().plot(pConnection->m_iDestX, pConnection->m_iDestY);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T246705[ebp], eax
	mov	ecx, DWORD PTR _pConnection$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR $T246768[ebp], edx
	mov	eax, DWORD PTR _pConnection$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR $T246767[ebp], ecx
	cmp	DWORD PTR $T246767[ebp], -2147483647	; 80000001H
	je	SHORT $LN120@lGetTradeY
	cmp	DWORD PTR $T246768[ebp], -2147483647	; 80000001H
	jne	SHORT $LN121@lGetTradeY
$LN120@lGetTradeY:
	mov	DWORD PTR _pDestPlot$229654[ebp], 0
	jmp	$LN122@lGetTradeY
$LN121@lGetTradeY:
	mov	edx, DWORD PTR $T246705[ebp]
	mov	al, BYTE PTR [edx+4056]
	mov	BYTE PTR $T246712[ebp], al
	mov	ecx, DWORD PTR $T246705[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T246716[ebp], edx
	movzx	eax, BYTE PTR $T246712[ebp]
	test	eax, eax
	je	SHORT $LN133@lGetTradeY
	cmp	DWORD PTR $T246767[ebp], 0
	jge	SHORT $LN132@lGetTradeY
	mov	eax, DWORD PTR $T246767[ebp]
	cdq
	idiv	DWORD PTR $T246716[ebp]
	add	edx, DWORD PTR $T246716[ebp]
	mov	DWORD PTR _iMapX$246744[ebp], edx
	jmp	SHORT $LN134@lGetTradeY
	jmp	SHORT $LN133@lGetTradeY
$LN132@lGetTradeY:
	mov	ecx, DWORD PTR $T246767[ebp]
	cmp	ecx, DWORD PTR $T246716[ebp]
	jl	SHORT $LN133@lGetTradeY
	mov	eax, DWORD PTR $T246767[ebp]
	cdq
	idiv	DWORD PTR $T246716[ebp]
	mov	DWORD PTR _iMapX$246744[ebp], edx
	jmp	SHORT $LN134@lGetTradeY
$LN133@lGetTradeY:
	mov	edx, DWORD PTR $T246767[ebp]
	mov	DWORD PTR _iMapX$246744[ebp], edx
$LN134@lGetTradeY:
	mov	eax, DWORD PTR $T246705[ebp]
	mov	cl, BYTE PTR [eax+4057]
	mov	BYTE PTR $T246727[ebp], cl
	mov	edx, DWORD PTR $T246705[ebp]
	mov	eax, DWORD PTR [edx+4024]
	mov	DWORD PTR $T246731[ebp], eax
	movzx	ecx, BYTE PTR $T246727[ebp]
	push	ecx
	mov	edx, DWORD PTR $T246731[ebp]
	push	edx
	mov	eax, DWORD PTR $T246768[ebp]
	push	eax
	call	?coordRange@@YAHHH_N@Z			; coordRange
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iMapY$246745[ebp], eax
	mov	ecx, DWORD PTR _iMapY$246745[ebp]
	push	ecx
	mov	edx, DWORD PTR _iMapX$246744[ebp]
	push	edx
	mov	ecx, DWORD PTR $T246705[ebp]
	call	?isPlot@CvMap@@QBEHHH@Z			; CvMap::isPlot
	test	eax, eax
	je	SHORT $LN124@lGetTradeY
	mov	eax, DWORD PTR $T246705[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T246736[ebp], ecx
	mov	edx, DWORD PTR _iMapY$246745[ebp]
	imul	edx, DWORD PTR $T246736[ebp]
	add	edx, DWORD PTR _iMapX$246744[ebp]
	imul	edx, 484				; 000001e4H
	mov	eax, DWORD PTR $T246705[ebp]
	add	edx, DWORD PTR [eax+4068]
	mov	DWORD PTR tv766[ebp], edx
	jmp	SHORT $LN125@lGetTradeY
$LN124@lGetTradeY:
	mov	DWORD PTR tv766[ebp], 0
$LN125@lGetTradeY:
	mov	ecx, DWORD PTR tv766[ebp]
	mov	DWORD PTR _pDestPlot$229654[ebp], ecx
$LN122@lGetTradeY:

; 3823 : 			if (pOriginPlot == NULL || pDestPlot == NULL)

	cmp	DWORD PTR _pOriginPlot$229653[ebp], 0
	je	SHORT $LN46@lGetTradeY
	cmp	DWORD PTR _pDestPlot$229654[ebp], 0
	jne	SHORT $LN47@lGetTradeY
$LN46@lGetTradeY:

; 3824 : 			{
; 3825 : 				continue;

	jmp	$LN51@lGetTradeY
$LN47@lGetTradeY:

; 3826 : 			}
; 3827 : 
; 3828 : 			CvCity* pOriginCity = pOriginPlot->getPlotCity();

	mov	ecx, DWORD PTR _pOriginPlot$229653[ebp]
	call	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ	; CvPlot::getPlotCity
	mov	DWORD PTR _pOriginCity$229657[ebp], eax

; 3829 : 			CvCity* pDestCity = pDestPlot->getPlotCity();

	mov	ecx, DWORD PTR _pDestPlot$229654[ebp]
	call	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ	; CvPlot::getPlotCity
	mov	DWORD PTR _pDestCity$229658[ebp], eax

; 3830 : 
; 3831 : 			if (pOriginCity == NULL || pDestCity == NULL)

	cmp	DWORD PTR _pOriginCity$229657[ebp], 0
	je	SHORT $LN44@lGetTradeY
	cmp	DWORD PTR _pDestCity$229658[ebp], 0
	jne	SHORT $LN45@lGetTradeY
$LN44@lGetTradeY:

; 3832 : 			{
; 3833 : 				continue;

	jmp	$LN51@lGetTradeY
$LN45@lGetTradeY:

; 3834 : 			}
; 3835 : 
; 3836 : 
; 3837 : 			CvString strOriginYieldsStr = "";

	mov	edx, OFFSET ??_C@_00CNPNBAHC@?$AA@
	test	edx, edx
	je	SHORT $LN156@lGetTradeY
	mov	DWORD PTR tv818[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	SHORT $LN157@lGetTradeY
$LN156@lGetTradeY:
	mov	DWORD PTR tv818[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN157@lGetTradeY:
	mov	eax, DWORD PTR tv818[ebp]
	push	eax
	lea	ecx, DWORD PTR _strOriginYieldsStr$229661[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 3838 : 			for (uint uiYield = 0; uiYield < NUM_YIELD_TYPES; uiYield++)

	mov	DWORD PTR _uiYield$229662[ebp], 0
	jmp	SHORT $LN43@lGetTradeY
$LN42@lGetTradeY:
	mov	ecx, DWORD PTR _uiYield$229662[ebp]
	add	ecx, 1
	mov	DWORD PTR _uiYield$229662[ebp], ecx
$LN43@lGetTradeY:
	cmp	DWORD PTR _uiYield$229662[ebp], 6
	jae	$LN41@lGetTradeY

; 3839 : 			{
; 3840 : 				YieldTypes eYield = (YieldTypes)uiYield;

	mov	edx, DWORD PTR _uiYield$229662[ebp]
	mov	DWORD PTR _eYield$229666[ebp], edx

; 3841 : 				int iYieldQuantity = pPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, eYield, true);

	push	1
	mov	eax, DWORD PTR _eYield$229666[ebp]
	push	eax
	mov	ecx, DWORD PTR _pConnection$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerTrade$[ebp]
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	mov	DWORD PTR _iYieldQuantity$229668[ebp], eax

; 3842 : 				if (iYieldQuantity != 0)

	cmp	DWORD PTR _iYieldQuantity$229668[ebp], 0
	je	$LN40@lGetTradeY

; 3843 : 				{
; 3844 : 					if (strOriginYieldsStr != "") 

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	edx, DWORD PTR _strOriginYieldsStr$229661[ebp]
	push	edx
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN39@lGetTradeY

; 3845 : 					{
; 3846 : 						strOriginYieldsStr += ", ";

	push	OFFSET ??_C@_02KEGNLNML@?0?5?$AA@
	lea	ecx, DWORD PTR _strOriginYieldsStr$229661[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN39@lGetTradeY:

; 3847 : 					}
; 3848 : 
; 3849 : 					switch (eYield)

	mov	ecx, DWORD PTR _eYield$229666[ebp]
	mov	DWORD PTR tv192[ebp], ecx
	cmp	DWORD PTR tv192[ebp], 5
	ja	$LN40@lGetTradeY
	mov	edx, DWORD PTR tv192[ebp]
	jmp	DWORD PTR $LN224@lGetTradeY[edx*4]
$LN36@lGetTradeY:

; 3850 : 					{
; 3851 : 					case YIELD_FOOD:
; 3852 : 						strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_FOOD_YIELD_TT", iYieldQuantity / 100);

	mov	eax, DWORD PTR _iYieldQuantity$229668[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	push	OFFSET ??_C@_0CE@DLIGCDJI@TXT_KEY_TOP_PANEL_ITR_FOOD_YIELD@
	lea	edx, DWORD PTR $T246563[ebp]
	push	edx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv865[ebp], eax
	mov	eax, DWORD PTR tv865[ebp]
	mov	DWORD PTR tv652[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv652[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strOriginYieldsStr$229661[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T246563[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 3853 : 						break;

	jmp	$LN40@lGetTradeY
$LN35@lGetTradeY:

; 3854 : 					case YIELD_PRODUCTION:
; 3855 : 						strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_PRODUCTION_YIELD_TT", iYieldQuantity / 100);

	mov	eax, DWORD PTR _iYieldQuantity$229668[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	push	OFFSET ??_C@_0CK@CNOODEEB@TXT_KEY_TOP_PANEL_ITR_PRODUCTION@
	lea	edx, DWORD PTR $T246564[ebp]
	push	edx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv827[ebp], eax
	mov	eax, DWORD PTR tv827[ebp]
	mov	DWORD PTR tv654[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv654[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strOriginYieldsStr$229661[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T246564[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 3856 : 						break;

	jmp	$LN40@lGetTradeY
$LN34@lGetTradeY:

; 3857 : 					case YIELD_GOLD:
; 3858 : 						strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_GOLD_YIELD_TT", iYieldQuantity / 100);

	mov	eax, DWORD PTR _iYieldQuantity$229668[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	push	OFFSET ??_C@_0CE@NBBHBABO@TXT_KEY_TOP_PANEL_ITR_GOLD_YIELD@
	lea	edx, DWORD PTR $T246565[ebp]
	push	edx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv695[ebp], eax
	mov	eax, DWORD PTR tv695[ebp]
	mov	DWORD PTR tv656[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv656[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strOriginYieldsStr$229661[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T246565[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 3859 : 						break;

	jmp	$LN40@lGetTradeY
$LN33@lGetTradeY:

; 3860 : 					case YIELD_SCIENCE:
; 3861 : 						strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_SCIENCE_YIELD_TT", iYieldQuantity / 100);

	mov	eax, DWORD PTR _iYieldQuantity$229668[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	push	OFFSET ??_C@_0CH@BAOHBFEN@TXT_KEY_TOP_PANEL_ITR_SCIENCE_YI@
	lea	edx, DWORD PTR $T246566[ebp]
	push	edx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv689[ebp], eax
	mov	eax, DWORD PTR tv689[ebp]
	mov	DWORD PTR tv658[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv658[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strOriginYieldsStr$229661[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T246566[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 3862 : 						break;

	jmp	$LN40@lGetTradeY
$LN32@lGetTradeY:

; 3863 : 					case YIELD_CULTURE:
; 3864 : 						strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_CULTURE_YIELD_TT", iYieldQuantity / 100);

	mov	eax, DWORD PTR _iYieldQuantity$229668[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	push	OFFSET ??_C@_0CH@LOEJAADB@TXT_KEY_TOP_PANEL_ITR_CULTURE_YI@
	lea	edx, DWORD PTR $T246567[ebp]
	push	edx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv930[ebp], eax
	mov	eax, DWORD PTR tv930[ebp]
	mov	DWORD PTR tv660[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR tv660[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strOriginYieldsStr$229661[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T246567[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 3865 : 						break;

	jmp	SHORT $LN40@lGetTradeY
$LN31@lGetTradeY:

; 3866 : 					case YIELD_FAITH:
; 3867 : 						strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_FAITH_YIELD_TT", iYieldQuantity / 100);

	mov	eax, DWORD PTR _iYieldQuantity$229668[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	push	OFFSET ??_C@_0CF@IPBIHCLJ@TXT_KEY_TOP_PANEL_ITR_FAITH_YIEL@
	lea	edx, DWORD PTR $T246568[ebp]
	push	edx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv931[ebp], eax
	mov	eax, DWORD PTR tv931[ebp]
	mov	DWORD PTR tv662[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR tv662[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strOriginYieldsStr$229661[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T246568[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN40@lGetTradeY:

; 3868 : 						break;
; 3869 : 					}
; 3870 : 				}
; 3871 : 			}

	jmp	$LN42@lGetTradeY
$LN41@lGetTradeY:

; 3872 : 
; 3873 : 			CvString strDestYieldsStr = "";

	mov	edx, OFFSET ??_C@_00CNPNBAHC@?$AA@
	test	edx, edx
	je	SHORT $LN179@lGetTradeY
	mov	DWORD PTR tv867[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	SHORT $LN180@lGetTradeY
$LN179@lGetTradeY:
	mov	DWORD PTR tv867[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN180@lGetTradeY:
	mov	eax, DWORD PTR tv867[ebp]
	push	eax
	lea	ecx, DWORD PTR _strDestYieldsStr$229699[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 8

; 3874 : 			for (uint uiYield = 0; uiYield < NUM_YIELD_TYPES; uiYield++)

	mov	DWORD PTR _uiYield$229700[ebp], 0
	jmp	SHORT $LN30@lGetTradeY
$LN29@lGetTradeY:
	mov	ecx, DWORD PTR _uiYield$229700[ebp]
	add	ecx, 1
	mov	DWORD PTR _uiYield$229700[ebp], ecx
$LN30@lGetTradeY:
	cmp	DWORD PTR _uiYield$229700[ebp], 6
	jae	$LN28@lGetTradeY

; 3875 : 			{
; 3876 : 				YieldTypes eYield = (YieldTypes)uiYield;

	mov	edx, DWORD PTR _uiYield$229700[ebp]
	mov	DWORD PTR _eYield$229704[ebp], edx

; 3877 : 				int iYieldQuantity = pPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, eYield, false);

	push	0
	mov	eax, DWORD PTR _eYield$229704[ebp]
	push	eax
	mov	ecx, DWORD PTR _pConnection$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerTrade$[ebp]
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	mov	DWORD PTR _iYieldQuantity$229706[ebp], eax

; 3878 : 				if (iYieldQuantity != 0)

	cmp	DWORD PTR _iYieldQuantity$229706[ebp], 0
	je	$LN27@lGetTradeY

; 3879 : 				{
; 3880 : 					switch (eYield)

	mov	edx, DWORD PTR _eYield$229704[ebp]
	mov	DWORD PTR tv309[ebp], edx
	cmp	DWORD PTR tv309[ebp], 5
	ja	$LN27@lGetTradeY
	mov	eax, DWORD PTR tv309[ebp]
	jmp	DWORD PTR $LN225@lGetTradeY[eax*4]
$LN24@lGetTradeY:

; 3881 : 					{
; 3882 : 					case YIELD_FOOD:
; 3883 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_FOOD_YIELD_TT", iYieldQuantity / 100);

	mov	eax, DWORD PTR _iYieldQuantity$229706[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	push	OFFSET ??_C@_0CE@DLIGCDJI@TXT_KEY_TOP_PANEL_ITR_FOOD_YIELD@
	lea	edx, DWORD PTR $T246569[ebp]
	push	edx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv932[ebp], eax
	mov	eax, DWORD PTR tv932[ebp]
	mov	DWORD PTR tv665[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	ecx, DWORD PTR tv665[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strDestYieldsStr$229699[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T246569[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 3884 : 						break;

	jmp	$LN27@lGetTradeY
$LN23@lGetTradeY:

; 3885 : 					case YIELD_PRODUCTION:
; 3886 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_PRODUCTION_YIELD_TT", iYieldQuantity / 100);

	mov	eax, DWORD PTR _iYieldQuantity$229706[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	push	OFFSET ??_C@_0CK@CNOODEEB@TXT_KEY_TOP_PANEL_ITR_PRODUCTION@
	lea	edx, DWORD PTR $T246570[ebp]
	push	edx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv933[ebp], eax
	mov	eax, DWORD PTR tv933[ebp]
	mov	DWORD PTR tv667[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	ecx, DWORD PTR tv667[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strDestYieldsStr$229699[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T246570[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 3887 : 						break;

	jmp	$LN27@lGetTradeY
$LN22@lGetTradeY:

; 3888 : 					case YIELD_GOLD:
; 3889 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_GOLD_YIELD_TT", iYieldQuantity / 100);

	mov	eax, DWORD PTR _iYieldQuantity$229706[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	push	OFFSET ??_C@_0CE@NBBHBABO@TXT_KEY_TOP_PANEL_ITR_GOLD_YIELD@
	lea	edx, DWORD PTR $T246571[ebp]
	push	edx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv934[ebp], eax
	mov	eax, DWORD PTR tv934[ebp]
	mov	DWORD PTR tv669[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	ecx, DWORD PTR tv669[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strDestYieldsStr$229699[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T246571[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 3890 : 						break;

	jmp	$LN27@lGetTradeY
$LN21@lGetTradeY:

; 3891 : 					case YIELD_SCIENCE:
; 3892 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_SCIENCE_YIELD_TT", iYieldQuantity / 100);

	mov	eax, DWORD PTR _iYieldQuantity$229706[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	push	OFFSET ??_C@_0CH@BAOHBFEN@TXT_KEY_TOP_PANEL_ITR_SCIENCE_YI@
	lea	edx, DWORD PTR $T246572[ebp]
	push	edx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv935[ebp], eax
	mov	eax, DWORD PTR tv935[ebp]
	mov	DWORD PTR tv671[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	ecx, DWORD PTR tv671[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strDestYieldsStr$229699[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T246572[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 3893 : 						break;

	jmp	$LN27@lGetTradeY
$LN20@lGetTradeY:

; 3894 : 					case YIELD_CULTURE:
; 3895 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_CULTURE_YIELD_TT", iYieldQuantity / 100);

	mov	eax, DWORD PTR _iYieldQuantity$229706[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	push	OFFSET ??_C@_0CH@LOEJAADB@TXT_KEY_TOP_PANEL_ITR_CULTURE_YI@
	lea	edx, DWORD PTR $T246573[ebp]
	push	edx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv936[ebp], eax
	mov	eax, DWORD PTR tv936[ebp]
	mov	DWORD PTR tv673[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	ecx, DWORD PTR tv673[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strDestYieldsStr$229699[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T246573[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 3896 : 						break;

	jmp	SHORT $LN27@lGetTradeY
$LN19@lGetTradeY:

; 3897 : 					case YIELD_FAITH:
; 3898 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_FAITH_YIELD_TT", iYieldQuantity / 100);

	mov	eax, DWORD PTR _iYieldQuantity$229706[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	push	OFFSET ??_C@_0CF@IPBIHCLJ@TXT_KEY_TOP_PANEL_ITR_FAITH_YIEL@
	lea	edx, DWORD PTR $T246574[ebp]
	push	edx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv937[ebp], eax
	mov	eax, DWORD PTR tv937[ebp]
	mov	DWORD PTR tv675[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	ecx, DWORD PTR tv675[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strDestYieldsStr$229699[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T246574[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN27@lGetTradeY:

; 3899 : 						break;
; 3900 : 					}
; 3901 : 				}
; 3902 : 			}

	jmp	$LN29@lGetTradeY
$LN28@lGetTradeY:

; 3903 : 
; 3904 : 			//CvUnitEntry* pUnitEntry = GC.getUnitInfo(pPlayerTrade->GetTradeUnit(pConnection->m_eDomain));
; 3905 : 
; 3906 : 			Localization::String strBuffer;

	lea	ecx, DWORD PTR _strBuffer$229724[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH

; 3907 : 			if (pConnection->m_eConnectionType == TRADE_CONNECTION_INTERNATIONAL)

	mov	edx, DWORD PTR _pConnection$[ebp]
	cmp	DWORD PTR [edx+32], 0
	jne	$LN18@lGetTradeY

; 3908 : 			{
; 3909 : 				if (strOriginYieldsStr != "" && strDestYieldsStr != "")

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	eax, DWORD PTR _strOriginYieldsStr$229661[ebp]
	push	eax
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN17@lGetTradeY
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	edx, DWORD PTR _strDestYieldsStr$229699[ebp]
	push	edx
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN17@lGetTradeY

; 3910 : 				{
; 3911 : 					strBuffer = Localization::Lookup("TXT_KEY_TOP_PANEL_ITR_YOUR_ROUTE_BOTH_TT");

	push	OFFSET ??_C@_0CJ@FEECLHNE@TXT_KEY_TOP_PANEL_ITR_YOUR_ROUTE@
	lea	ecx, DWORD PTR $T246575[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv414[ebp], eax
	mov	edx, DWORD PTR tv414[ebp]
	mov	DWORD PTR tv678[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	eax, DWORD PTR tv678[ebp]
	push	eax
	lea	ecx, DWORD PTR _strBuffer$229724[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	lea	ecx, DWORD PTR $T246575[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN16@lGetTradeY
$LN17@lGetTradeY:

; 3912 : 				}
; 3913 : 				else if (strOriginYieldsStr != "")

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	ecx, DWORD PTR _strOriginYieldsStr$229661[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN15@lGetTradeY

; 3914 : 				{
; 3915 : 					strBuffer = Localization::Lookup("TXT_KEY_TOP_PANEL_ITR_YOUR_ROUTE_ONLY_ORIGIN_TT");

	push	OFFSET ??_C@_0DA@NEBFPNPJ@TXT_KEY_TOP_PANEL_ITR_YOUR_ROUTE@
	lea	eax, DWORD PTR $T246576[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv938[ebp], eax
	mov	ecx, DWORD PTR tv938[ebp]
	mov	DWORD PTR tv680[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	edx, DWORD PTR tv680[ebp]
	push	edx
	lea	ecx, DWORD PTR _strBuffer$229724[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	lea	ecx, DWORD PTR $T246576[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	SHORT $LN16@lGetTradeY
$LN15@lGetTradeY:

; 3916 : 				}
; 3917 : 				else if (strDestYieldsStr != "")

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	eax, DWORD PTR _strDestYieldsStr$229699[ebp]
	push	eax
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN16@lGetTradeY

; 3918 : 				{
; 3919 : 					strBuffer = Localization::Lookup("TXT_KEY_TOP_PANEL_ITR_YOUR_ROUTE_ONLY_DEST_TT");

	push	OFFSET ??_C@_0CO@INFODJMG@TXT_KEY_TOP_PANEL_ITR_YOUR_ROUTE@
	lea	edx, DWORD PTR $T246577[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv939[ebp], eax
	mov	eax, DWORD PTR tv939[ebp]
	mov	DWORD PTR tv682[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	mov	ecx, DWORD PTR tv682[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strBuffer$229724[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	lea	ecx, DWORD PTR $T246577[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN16@lGetTradeY:

; 3920 : 				}
; 3921 : 			}
; 3922 : 			else

	jmp	$LN12@lGetTradeY
$LN18@lGetTradeY:

; 3923 : 			{
; 3924 : 				if (strOriginYieldsStr != "" && strDestYieldsStr != "")

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	edx, DWORD PTR _strOriginYieldsStr$229661[ebp]
	push	edx
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN11@lGetTradeY
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	ecx, DWORD PTR _strDestYieldsStr$229699[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN11@lGetTradeY

; 3925 : 				{
; 3926 : 					strBuffer = Localization::Lookup("TXT_KEY_TOP_PANEL_ITR_INTERNAL_YOUR_ROUTE_BOTH_TT");

	push	OFFSET ??_C@_0DC@HDCJBEOD@TXT_KEY_TOP_PANEL_ITR_INTERNAL_Y@
	lea	eax, DWORD PTR $T246578[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv940[ebp], eax
	mov	ecx, DWORD PTR tv940[ebp]
	mov	DWORD PTR tv684[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	mov	edx, DWORD PTR tv684[ebp]
	push	edx
	lea	ecx, DWORD PTR _strBuffer$229724[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	lea	ecx, DWORD PTR $T246578[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN12@lGetTradeY
$LN11@lGetTradeY:

; 3927 : 				}
; 3928 : 				else if (strOriginYieldsStr != "")

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	eax, DWORD PTR _strOriginYieldsStr$229661[ebp]
	push	eax
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@lGetTradeY

; 3929 : 				{
; 3930 : 					strBuffer = Localization::Lookup("TXT_KEY_TOP_PANEL_ITR_INTERNAL_YOUR_ROUTE_ONLY_ORIGIN_TT");

	push	OFFSET ??_C@_0DJ@PFFONELO@TXT_KEY_TOP_PANEL_ITR_INTERNAL_Y@
	lea	edx, DWORD PTR $T246579[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv941[ebp], eax
	mov	eax, DWORD PTR tv941[ebp]
	mov	DWORD PTR tv686[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	mov	ecx, DWORD PTR tv686[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strBuffer$229724[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	lea	ecx, DWORD PTR $T246579[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	SHORT $LN12@lGetTradeY
$LN9@lGetTradeY:

; 3931 : 				}
; 3932 : 				else if (strDestYieldsStr != "")

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	edx, DWORD PTR _strDestYieldsStr$229699[ebp]
	push	edx
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@lGetTradeY

; 3933 : 				{
; 3934 : 					strBuffer = Localization::Lookup("TXT_KEY_TOP_PANEL_ITR_INTERNAL_YOUR_ROUTE_ONLY_DEST_TT");

	push	OFFSET ??_C@_0DH@FPMGHNBP@TXT_KEY_TOP_PANEL_ITR_INTERNAL_Y@
	lea	ecx, DWORD PTR $T246580[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv942[ebp], eax
	mov	edx, DWORD PTR tv942[ebp]
	mov	DWORD PTR tv688[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	mov	eax, DWORD PTR tv688[ebp]
	push	eax
	lea	ecx, DWORD PTR _strBuffer$229724[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	lea	ecx, DWORD PTR $T246580[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN12@lGetTradeY:

; 3935 : 				}
; 3936 : 			}
; 3937 : 
; 3938 : 			strBuffer << pOriginCity->getNameKey();

	mov	ecx, DWORD PTR _pOriginCity$229657[ebp]
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	mov	DWORD PTR $T246581[ebp], eax
	lea	ecx, DWORD PTR $T246581[ebp]
	push	ecx
	lea	edx, DWORD PTR _strBuffer$229724[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 3939 : 			if (strOriginYieldsStr != "")

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	eax, DWORD PTR _strOriginYieldsStr$229661[ebp]
	push	eax
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@lGetTradeY

; 3940 : 			{
; 3941 : 				strBuffer << strOriginYieldsStr;

	lea	edx, DWORD PTR _strOriginYieldsStr$229661[ebp]
	push	edx
	lea	eax, DWORD PTR _strBuffer$229724[ebp]
	push	eax
	call	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
	add	esp, 8
$LN6@lGetTradeY:

; 3942 : 			}
; 3943 : 			
; 3944 : 			if (pConnection->m_eConnectionType == TRADE_CONNECTION_INTERNATIONAL)

	mov	ecx, DWORD PTR _pConnection$[ebp]
	cmp	DWORD PTR [ecx+32], 0
	jne	$LN5@lGetTradeY

; 3945 : 			{
; 3946 : 				if (GET_PLAYER(pDestCity->getOwner()).isMinorCiv())

	mov	edx, DWORD PTR _pDestCity$229658[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR $T246851[ebp], eax
	mov	ecx, DWORD PTR $T246851[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246855[ebp], ecx
	mov	ecx, DWORD PTR $T246855[ebp]
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN208@lGetTradeY

; 3947 : 				{
; 3948 : 					strBuffer << "TXT_KEY_TOP_PANEL_ITR_CITY_STATE_TT";

	push	OFFSET ??_C@_0CE@FDBCHBCH@TXT_KEY_TOP_PANEL_ITR_CITY_STATE@
	lea	eax, DWORD PTR _strBuffer$229724[ebp]
	push	eax
	call	??$?6$0CE@@@YAAAVString@Localization@@AAV01@AAY0CE@$$CBD@Z ; operator<<<36>
	add	esp, 8

; 3949 : 				}
; 3950 : 				else

	jmp	SHORT $LN5@lGetTradeY

; 3951 : 				{
; 3952 : 					strBuffer << GET_PLAYER(pDestCity->getOwner()).getCivilizationShortDescription();

$LN208@lGetTradeY:
	mov	ecx, DWORD PTR _pDestCity$229658[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T246864[ebp], edx
	mov	eax, DWORD PTR $T246864[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T246868[ebp], eax
	mov	ecx, DWORD PTR $T246868[ebp]
	call	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescription
	mov	DWORD PTR $T246582[ebp], eax
	lea	ecx, DWORD PTR $T246582[ebp]
	push	ecx
	lea	edx, DWORD PTR _strBuffer$229724[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
$LN5@lGetTradeY:

; 3953 : 				}
; 3954 : 			}
; 3955 : 
; 3956 : 			strBuffer << pDestCity->getNameKey();

	mov	ecx, DWORD PTR _pDestCity$229658[ebp]
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	mov	DWORD PTR $T246583[ebp], eax
	lea	eax, DWORD PTR $T246583[ebp]
	push	eax
	lea	ecx, DWORD PTR _strBuffer$229724[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 3957 : 			if (strDestYieldsStr != "")

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	edx, DWORD PTR _strDestYieldsStr$229699[ebp]
	push	edx
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@lGetTradeY

; 3958 : 			{
; 3959 : 				strBuffer << strDestYieldsStr;

	lea	ecx, DWORD PTR _strDestYieldsStr$229699[ebp]
	push	ecx
	lea	edx, DWORD PTR _strBuffer$229724[ebp]
	push	edx
	call	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
	add	esp, 8
$LN2@lGetTradeY:

; 3960 : 			}
; 3961 : 
; 3962 : 			if (strResult != "")

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	eax, DWORD PTR _strResult$[ebp]
	push	eax
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@lGetTradeY

; 3963 : 			{
; 3964 : 				strResult += "[NEWLINE]";

	push	OFFSET ??_C@_09ODCIJKAA@?$FLNEWLINE?$FN?$AA@
	lea	ecx, DWORD PTR _strResult$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN1@lGetTradeY:

; 3965 : 			}
; 3966 : 
; 3967 : 			strResult += strBuffer.toUTF8();

	lea	ecx, DWORD PTR _strBuffer$229724[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strResult$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 3968 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR _strBuffer$229724[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _strDestYieldsStr$229699[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strOriginYieldsStr$229661[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN48@lGetTradeY:

; 3969 : 	}

	jmp	$LN51@lGetTradeY

; 3970 : 	
; 3971 : 	lua_pushstring(L, strResult);

$LN218@lGetTradeY:
	lea	ecx, DWORD PTR _strResult$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 3972 : 
; 3973 : 	return 1;

	mov	DWORD PTR $T246584[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strResult$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T246584[ebp]

; 3974 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN224@lGetTradeY:
	DD	$LN36@lGetTradeY
	DD	$LN35@lGetTradeY
	DD	$LN34@lGetTradeY
	DD	$LN33@lGetTradeY
	DD	$LN32@lGetTradeY
	DD	$LN31@lGetTradeY
$LN225@lGetTradeY:
	DD	$LN24@lGetTradeY
	DD	$LN23@lGetTradeY
	DD	$LN22@lGetTradeY
	DD	$LN21@lGetTradeY
	DD	$LN20@lGetTradeY
	DD	$LN19@lGetTradeY
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _strResult$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _strOriginYieldsStr$229661[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$2:
	lea	ecx, DWORD PTR $T246563[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$3:
	lea	ecx, DWORD PTR $T246564[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$4:
	lea	ecx, DWORD PTR $T246565[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$5:
	lea	ecx, DWORD PTR $T246566[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$6:
	lea	ecx, DWORD PTR $T246567[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$7:
	lea	ecx, DWORD PTR $T246568[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$8:
	lea	ecx, DWORD PTR _strDestYieldsStr$229699[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$9:
	lea	ecx, DWORD PTR $T246569[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$10:
	lea	ecx, DWORD PTR $T246570[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$11:
	lea	ecx, DWORD PTR $T246571[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$12:
	lea	ecx, DWORD PTR $T246572[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$13:
	lea	ecx, DWORD PTR $T246573[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$14:
	lea	ecx, DWORD PTR $T246574[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$15:
	lea	ecx, DWORD PTR _strBuffer$229724[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$16:
	lea	ecx, DWORD PTR $T246575[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$17:
	lea	ecx, DWORD PTR $T246576[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$18:
	lea	ecx, DWORD PTR $T246577[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$19:
	lea	ecx, DWORD PTR $T246578[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$20:
	lea	ecx, DWORD PTR $T246579[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$21:
	lea	ecx, DWORD PTR $T246580[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1352]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTradeYourRoutesTTString
PUBLIC	??_C@_0DA@PEFNMNMC@TXT_KEY_TOP_PANEL_ITR_TO_YOU_ROU@ ; `string'
PUBLIC	??_C@_0DC@KKJHHPL@TXT_KEY_TOP_PANEL_ITR_TO_YOU_ROU@ ; `string'
PUBLIC	??_C@_0CL@LDGJPPCO@TXT_KEY_TOP_PANEL_ITR_TO_YOU_ROU@ ; `string'
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_0DA@PEFNMNMC@TXT_KEY_TOP_PANEL_ITR_TO_YOU_ROU@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0DA@PEFNMNMC@TXT_KEY_TOP_PANEL_ITR_TO_YOU_ROU@ DB 'TXT_KEY_TOP_PANE'
	DB	'L_ITR_TO_YOU_ROUTE_ONLY_DEST_TT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@KKJHHPL@TXT_KEY_TOP_PANEL_ITR_TO_YOU_ROU@
CONST	SEGMENT
??_C@_0DC@KKJHHPL@TXT_KEY_TOP_PANEL_ITR_TO_YOU_ROU@ DB 'TXT_KEY_TOP_PANEL'
	DB	'_ITR_TO_YOU_ROUTE_ONLY_ORIGIN_TT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@LDGJPPCO@TXT_KEY_TOP_PANEL_ITR_TO_YOU_ROU@
CONST	SEGMENT
??_C@_0CL@LDGJPPCO@TXT_KEY_TOP_PANEL_ITR_TO_YOU_ROU@ DB 'TXT_KEY_TOP_PANE'
	DB	'L_ITR_TO_YOU_ROUTE_BOTH_TT', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	0dH
	DD	FLAT:__unwindtable$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$6
	DD	02H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$7
	DD	02H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$8
	DD	02H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$10
	DD	09H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$11
	DD	09H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$12
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv469 = -864						; size = 4
tv684 = -860						; size = 4
tv467 = -856						; size = 4
tv683 = -852						; size = 4
tv465 = -848						; size = 4
tv304 = -844						; size = 4
tv462 = -840						; size = 4
tv682 = -836						; size = 4
tv460 = -832						; size = 4
tv681 = -828						; size = 4
tv458 = -824						; size = 4
tv470 = -820						; size = 4
tv456 = -816						; size = 4
tv476 = -812						; size = 4
tv454 = -808						; size = 4
tv608 = -804						; size = 4
tv452 = -800						; size = 4
tv616 = -796						; size = 4
tv198 = -792						; size = 4
tv618 = -788						; size = 4
tv599 = -784						; size = 4
tv579 = -780						; size = 4
tv548 = -776						; size = 4
tv478 = -772						; size = 4
$T247158 = -768						; size = 4
$T247154 = -764						; size = 4
$T247145 = -760						; size = 4
$T247141 = -756						; size = 4
$T247082 = -744						; size = 4
$T247081 = -740						; size = 4
$T247050 = -736						; size = 4
$T247045 = -732						; size = 4
$T247041 = -725						; size = 1
$T247030 = -724						; size = 4
$T247026 = -717						; size = 1
_iMapY$247080 = -716					; size = 4
_iMapX$247079 = -712					; size = 4
$T247019 = -708						; size = 4
$T247015 = -704						; size = 4
$T247014 = -700						; size = 4
$T246983 = -696						; size = 4
$T246978 = -692						; size = 4
$T246974 = -685						; size = 1
$T246963 = -684						; size = 4
$T246959 = -677						; size = 1
_iMapY$247013 = -676					; size = 4
_iMapX$247012 = -672					; size = 4
$T246952 = -668						; size = 4
$T246948 = -664						; size = 4
$T246936 = -660						; size = 4
$T246924 = -656						; size = 4
$T246907 = -652						; size = 4
$T246906 = -648						; size = 4
$T246905 = -644						; size = 4
$T246904 = -640						; size = 4
$T246903 = -636						; size = 80
$T246902 = -556						; size = 80
$T246901 = -476						; size = 80
$T246900 = -396						; size = 28
$T246899 = -368						; size = 28
$T246898 = -340						; size = 28
$T246897 = -312						; size = 28
$T246896 = -284						; size = 28
$T246895 = -256						; size = 28
_eYield$229811 = -228					; size = 4
_iYieldQuantity$229813 = -224				; size = 4
_uiYield$229807 = -220					; size = 4
_strOriginYieldsStr$229805 = -216			; size = 28
_strDestYieldsStr$229806 = -188				; size = 28
_pOriginPlot$229797 = -160				; size = 4
_strBuffer$229832 = -156				; size = 80
_pDestPlot$229798 = -76					; size = 4
_pDestCity$229802 = -72					; size = 4
_pOriginCity$229801 = -68				; size = 4
_ui$229790 = -64					; size = 4
_pkPlayer$ = -60					; size = 4
_pConnection$ = -56					; size = 4
_pPlayerTrade$ = -52					; size = 4
_pTrade$ = -48						; size = 4
_strResult$ = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTradeToYouRoutesTTString, COMDAT

; 3978 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 852				; 00000354H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 3979 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 3980 : 	CvGameTrade* pTrade = GC.getGame().GetGameTrade();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T246924[ebp], ecx
	mov	ecx, DWORD PTR $T246924[ebp]
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	DWORD PTR _pTrade$[ebp], eax

; 3981 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	DWORD PTR _pPlayerTrade$[ebp], eax

; 3982 : 
; 3983 : 	CvString strResult = "";	

	mov	edx, OFFSET ??_C@_00CNPNBAHC@?$AA@
	test	edx, edx
	je	SHORT $LN54@lGetTradeT
	mov	DWORD PTR tv478[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	SHORT $LN55@lGetTradeT
$LN54@lGetTradeT:
	mov	DWORD PTR tv478[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN55@lGetTradeT:
	mov	eax, DWORD PTR tv478[ebp]
	push	eax
	lea	ecx, DWORD PTR _strResult$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3984 : 
; 3985 : 	TradeConnection* pConnection = NULL;

	mov	DWORD PTR _pConnection$[ebp], 0

; 3986 : 	for (uint ui = 0; ui < pTrade->m_aTradeConnections.size(); ui++)

	mov	DWORD PTR _ui$229790[ebp], 0
	jmp	SHORT $LN34@lGetTradeT
$LN33@lGetTradeT:
	mov	ecx, DWORD PTR _ui$229790[ebp]
	add	ecx, 1
	mov	DWORD PTR _ui$229790[ebp], ecx
$LN34@lGetTradeT:
	mov	edx, DWORD PTR _pTrade$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T246936[ebp], eax
	mov	ecx, DWORD PTR _ui$229790[ebp]
	cmp	ecx, DWORD PTR $T246936[ebp]
	jae	$LN173@lGetTradeT

; 3987 : 	{
; 3988 : 		if (pTrade->IsTradeRouteIndexEmpty(ui))

	mov	edx, DWORD PTR _ui$229790[ebp]
	push	edx
	mov	ecx, DWORD PTR _pTrade$[ebp]
	call	?IsTradeRouteIndexEmpty@CvGameTrade@@QAE_NH@Z ; CvGameTrade::IsTradeRouteIndexEmpty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN59@lGetTradeT

; 3989 : 		{
; 3990 : 			continue;

	jmp	SHORT $LN33@lGetTradeT

; 3991 : 		}
; 3992 : 
; 3993 : 		pConnection = &(pTrade->m_aTradeConnections[ui]);

$LN59@lGetTradeT:
	mov	ecx, DWORD PTR _ui$229790[ebp]
	imul	ecx, 444				; 000001bcH
	mov	edx, DWORD PTR _pTrade$[ebp]
	add	ecx, DWORD PTR [edx]
	mov	DWORD PTR _pConnection$[ebp], ecx

; 3994 : 
; 3995 : 		// don't include internal trade, but does this not count teams sharing stuff between each other
; 3996 : 		if (pConnection->m_eConnectionType != TRADE_CONNECTION_INTERNATIONAL)

	mov	eax, DWORD PTR _pConnection$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN63@lGetTradeT

; 3997 : 		{
; 3998 : 			continue;

	jmp	SHORT $LN33@lGetTradeT

; 3999 : 		}
; 4000 : 
; 4001 : 		if (pConnection->m_eDestOwner == pkPlayer->GetID())

$LN63@lGetTradeT:
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T246948[ebp], edx
	mov	eax, DWORD PTR _pConnection$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR $T246948[ebp]
	jne	$LN29@lGetTradeT

; 4002 : 		{
; 4003 : 			CvPlot* pOriginPlot = GC.getMap().plot(pConnection->m_iOriginX, pConnection->m_iOriginY);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T246952[ebp], edx
	mov	eax, DWORD PTR _pConnection$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T247015[ebp], ecx
	mov	edx, DWORD PTR _pConnection$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T247014[ebp], eax
	cmp	DWORD PTR $T247014[ebp], -2147483647	; 80000001H
	je	SHORT $LN67@lGetTradeT
	cmp	DWORD PTR $T247015[ebp], -2147483647	; 80000001H
	jne	SHORT $LN68@lGetTradeT
$LN67@lGetTradeT:
	mov	DWORD PTR _pOriginPlot$229797[ebp], 0
	jmp	$LN69@lGetTradeT
$LN68@lGetTradeT:
	mov	ecx, DWORD PTR $T246952[ebp]
	mov	dl, BYTE PTR [ecx+4056]
	mov	BYTE PTR $T246959[ebp], dl
	mov	eax, DWORD PTR $T246952[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T246963[ebp], ecx
	movzx	edx, BYTE PTR $T246959[ebp]
	test	edx, edx
	je	SHORT $LN80@lGetTradeT
	cmp	DWORD PTR $T247014[ebp], 0
	jge	SHORT $LN79@lGetTradeT
	mov	eax, DWORD PTR $T247014[ebp]
	cdq
	idiv	DWORD PTR $T246963[ebp]
	add	edx, DWORD PTR $T246963[ebp]
	mov	DWORD PTR _iMapX$247012[ebp], edx
	jmp	SHORT $LN81@lGetTradeT
	jmp	SHORT $LN80@lGetTradeT
$LN79@lGetTradeT:
	mov	eax, DWORD PTR $T247014[ebp]
	cmp	eax, DWORD PTR $T246963[ebp]
	jl	SHORT $LN80@lGetTradeT
	mov	eax, DWORD PTR $T247014[ebp]
	cdq
	idiv	DWORD PTR $T246963[ebp]
	mov	DWORD PTR _iMapX$247012[ebp], edx
	jmp	SHORT $LN81@lGetTradeT
$LN80@lGetTradeT:
	mov	ecx, DWORD PTR $T247014[ebp]
	mov	DWORD PTR _iMapX$247012[ebp], ecx
$LN81@lGetTradeT:
	mov	edx, DWORD PTR $T246952[ebp]
	mov	al, BYTE PTR [edx+4057]
	mov	BYTE PTR $T246974[ebp], al
	mov	ecx, DWORD PTR $T246952[ebp]
	mov	edx, DWORD PTR [ecx+4024]
	mov	DWORD PTR $T246978[ebp], edx
	movzx	eax, BYTE PTR $T246974[ebp]
	push	eax
	mov	ecx, DWORD PTR $T246978[ebp]
	push	ecx
	mov	edx, DWORD PTR $T247015[ebp]
	push	edx
	call	?coordRange@@YAHHH_N@Z			; coordRange
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iMapY$247013[ebp], eax
	mov	eax, DWORD PTR _iMapY$247013[ebp]
	push	eax
	mov	ecx, DWORD PTR _iMapX$247012[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T246952[ebp]
	call	?isPlot@CvMap@@QBEHHH@Z			; CvMap::isPlot
	test	eax, eax
	je	SHORT $LN71@lGetTradeT
	mov	edx, DWORD PTR $T246952[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T246983[ebp], eax
	mov	ecx, DWORD PTR _iMapY$247013[ebp]
	imul	ecx, DWORD PTR $T246983[ebp]
	add	ecx, DWORD PTR _iMapX$247012[ebp]
	imul	ecx, 484				; 000001e4H
	mov	edx, DWORD PTR $T246952[ebp]
	add	ecx, DWORD PTR [edx+4068]
	mov	DWORD PTR tv548[ebp], ecx
	jmp	SHORT $LN72@lGetTradeT
$LN71@lGetTradeT:
	mov	DWORD PTR tv548[ebp], 0
$LN72@lGetTradeT:
	mov	eax, DWORD PTR tv548[ebp]
	mov	DWORD PTR _pOriginPlot$229797[ebp], eax
$LN69@lGetTradeT:

; 4004 : 			CvPlot* pDestPlot = GC.getMap().plot(pConnection->m_iDestX, pConnection->m_iDestY);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T247019[ebp], ecx
	mov	edx, DWORD PTR _pConnection$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR $T247082[ebp], eax
	mov	ecx, DWORD PTR _pConnection$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR $T247081[ebp], edx
	cmp	DWORD PTR $T247081[ebp], -2147483647	; 80000001H
	je	SHORT $LN93@lGetTradeT
	cmp	DWORD PTR $T247082[ebp], -2147483647	; 80000001H
	jne	SHORT $LN94@lGetTradeT
$LN93@lGetTradeT:
	mov	DWORD PTR _pDestPlot$229798[ebp], 0
	jmp	$LN95@lGetTradeT
$LN94@lGetTradeT:
	mov	eax, DWORD PTR $T247019[ebp]
	mov	cl, BYTE PTR [eax+4056]
	mov	BYTE PTR $T247026[ebp], cl
	mov	edx, DWORD PTR $T247019[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T247030[ebp], eax
	movzx	ecx, BYTE PTR $T247026[ebp]
	test	ecx, ecx
	je	SHORT $LN106@lGetTradeT
	cmp	DWORD PTR $T247081[ebp], 0
	jge	SHORT $LN105@lGetTradeT
	mov	eax, DWORD PTR $T247081[ebp]
	cdq
	idiv	DWORD PTR $T247030[ebp]
	add	edx, DWORD PTR $T247030[ebp]
	mov	DWORD PTR _iMapX$247079[ebp], edx
	jmp	SHORT $LN107@lGetTradeT
	jmp	SHORT $LN106@lGetTradeT
$LN105@lGetTradeT:
	mov	edx, DWORD PTR $T247081[ebp]
	cmp	edx, DWORD PTR $T247030[ebp]
	jl	SHORT $LN106@lGetTradeT
	mov	eax, DWORD PTR $T247081[ebp]
	cdq
	idiv	DWORD PTR $T247030[ebp]
	mov	DWORD PTR _iMapX$247079[ebp], edx
	jmp	SHORT $LN107@lGetTradeT
$LN106@lGetTradeT:
	mov	eax, DWORD PTR $T247081[ebp]
	mov	DWORD PTR _iMapX$247079[ebp], eax
$LN107@lGetTradeT:
	mov	ecx, DWORD PTR $T247019[ebp]
	mov	dl, BYTE PTR [ecx+4057]
	mov	BYTE PTR $T247041[ebp], dl
	mov	eax, DWORD PTR $T247019[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T247045[ebp], ecx
	movzx	edx, BYTE PTR $T247041[ebp]
	push	edx
	mov	eax, DWORD PTR $T247045[ebp]
	push	eax
	mov	ecx, DWORD PTR $T247082[ebp]
	push	ecx
	call	?coordRange@@YAHHH_N@Z			; coordRange
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iMapY$247080[ebp], eax
	mov	edx, DWORD PTR _iMapY$247080[ebp]
	push	edx
	mov	eax, DWORD PTR _iMapX$247079[ebp]
	push	eax
	mov	ecx, DWORD PTR $T247019[ebp]
	call	?isPlot@CvMap@@QBEHHH@Z			; CvMap::isPlot
	test	eax, eax
	je	SHORT $LN97@lGetTradeT
	mov	ecx, DWORD PTR $T247019[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T247050[ebp], edx
	mov	eax, DWORD PTR _iMapY$247080[ebp]
	imul	eax, DWORD PTR $T247050[ebp]
	add	eax, DWORD PTR _iMapX$247079[ebp]
	imul	eax, 484				; 000001e4H
	mov	ecx, DWORD PTR $T247019[ebp]
	add	eax, DWORD PTR [ecx+4068]
	mov	DWORD PTR tv579[ebp], eax
	jmp	SHORT $LN98@lGetTradeT
$LN97@lGetTradeT:
	mov	DWORD PTR tv579[ebp], 0
$LN98@lGetTradeT:
	mov	edx, DWORD PTR tv579[ebp]
	mov	DWORD PTR _pDestPlot$229798[ebp], edx
$LN95@lGetTradeT:

; 4005 : 			if (pOriginPlot == NULL || pDestPlot == NULL)

	cmp	DWORD PTR _pOriginPlot$229797[ebp], 0
	je	SHORT $LN27@lGetTradeT
	cmp	DWORD PTR _pDestPlot$229798[ebp], 0
	jne	SHORT $LN28@lGetTradeT
$LN27@lGetTradeT:

; 4006 : 			{
; 4007 : 				continue;

	jmp	$LN33@lGetTradeT
$LN28@lGetTradeT:

; 4008 : 			}
; 4009 : 
; 4010 : 			CvCity* pOriginCity = pOriginPlot->getPlotCity();

	mov	ecx, DWORD PTR _pOriginPlot$229797[ebp]
	call	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ	; CvPlot::getPlotCity
	mov	DWORD PTR _pOriginCity$229801[ebp], eax

; 4011 : 			CvCity* pDestCity = pDestPlot->getPlotCity();

	mov	ecx, DWORD PTR _pDestPlot$229798[ebp]
	call	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ	; CvPlot::getPlotCity
	mov	DWORD PTR _pDestCity$229802[ebp], eax

; 4012 : 
; 4013 : 			if (pOriginCity == NULL || pDestCity == NULL)

	cmp	DWORD PTR _pOriginCity$229801[ebp], 0
	je	SHORT $LN25@lGetTradeT
	cmp	DWORD PTR _pDestCity$229802[ebp], 0
	jne	SHORT $LN26@lGetTradeT
$LN25@lGetTradeT:

; 4014 : 			{
; 4015 : 				continue;

	jmp	$LN33@lGetTradeT
$LN26@lGetTradeT:

; 4016 : 			}
; 4017 : 
; 4018 : 			CvString strOriginYieldsStr = "";

	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
	test	eax, eax
	je	SHORT $LN129@lGetTradeT
	mov	DWORD PTR tv599[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	SHORT $LN130@lGetTradeT
$LN129@lGetTradeT:
	mov	DWORD PTR tv599[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN130@lGetTradeT:
	mov	ecx, DWORD PTR tv599[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strOriginYieldsStr$229805[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 4019 : 			//for (uint uiYield = 0; uiYield < NUM_YIELD_TYPES; uiYield++)
; 4020 : 			//{
; 4021 : 			//	YieldTypes eYield = (YieldTypes)uiYield;
; 4022 : 			//	int iYieldQuantity = pPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, eYield, false);
; 4023 : 			//	if (iYieldQuantity != 0)
; 4024 : 			//	{
; 4025 : 			//		switch (eYield)
; 4026 : 			//		{
; 4027 : 			//		case YIELD_FOOD:
; 4028 : 			//			strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_FOOD_YIELD_TT", iYieldQuantity / 100);
; 4029 : 			//			break;
; 4030 : 			//		case YIELD_PRODUCTION:
; 4031 : 			//			strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_PRODUCTION_YIELD_TT", iYieldQuantity / 100);
; 4032 : 			//			break;
; 4033 : 			//		case YIELD_GOLD:
; 4034 : 			//			strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_GOLD_YIELD_TT", iYieldQuantity / 100);
; 4035 : 			//			break;
; 4036 : 			//		case YIELD_SCIENCE:
; 4037 : 			//			strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_SCIENCE_YIELD_TT", iYieldQuantity / 100);
; 4038 : 			//			break;
; 4039 : 			//		case YIELD_CULTURE:
; 4040 : 			//			strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_CULTURE_YIELD_TT", iYieldQuantity / 100);
; 4041 : 			//			break;
; 4042 : 			//		case YIELD_FAITH:
; 4043 : 			//			strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_FAITH_YIELD_TT", iYieldQuantity / 100);
; 4044 : 			//			break;
; 4045 : 			//		}
; 4046 : 			//	}
; 4047 : 			//}
; 4048 : 
; 4049 : 			CvString strDestYieldsStr = "";

	mov	edx, OFFSET ??_C@_00CNPNBAHC@?$AA@
	test	edx, edx
	je	SHORT $LN134@lGetTradeT
	mov	DWORD PTR tv618[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	SHORT $LN135@lGetTradeT
$LN134@lGetTradeT:
	mov	DWORD PTR tv618[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN135@lGetTradeT:
	mov	eax, DWORD PTR tv618[ebp]
	push	eax
	lea	ecx, DWORD PTR _strDestYieldsStr$229806[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 4050 : 			for (uint uiYield = 0; uiYield < NUM_YIELD_TYPES; uiYield++)

	mov	DWORD PTR _uiYield$229807[ebp], 0
	jmp	SHORT $LN24@lGetTradeT
$LN23@lGetTradeT:
	mov	ecx, DWORD PTR _uiYield$229807[ebp]
	add	ecx, 1
	mov	DWORD PTR _uiYield$229807[ebp], ecx
$LN24@lGetTradeT:
	cmp	DWORD PTR _uiYield$229807[ebp], 6
	jae	$LN22@lGetTradeT

; 4051 : 			{
; 4052 : 				YieldTypes eYield = (YieldTypes)uiYield;

	mov	edx, DWORD PTR _uiYield$229807[ebp]
	mov	DWORD PTR _eYield$229811[ebp], edx

; 4053 : 				int iYieldQuantity = pPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, eYield, false);

	push	0
	mov	eax, DWORD PTR _eYield$229811[ebp]
	push	eax
	mov	ecx, DWORD PTR _pConnection$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerTrade$[ebp]
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	mov	DWORD PTR _iYieldQuantity$229813[ebp], eax

; 4054 : 				if (iYieldQuantity != 0)

	cmp	DWORD PTR _iYieldQuantity$229813[ebp], 0
	je	$LN21@lGetTradeT

; 4055 : 				{
; 4056 : 					if (strDestYieldsStr != "") 

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	edx, DWORD PTR _strDestYieldsStr$229806[ebp]
	push	edx
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@lGetTradeT

; 4057 : 					{
; 4058 : 						strDestYieldsStr += ", ";

	push	OFFSET ??_C@_02KEGNLNML@?0?5?$AA@
	lea	ecx, DWORD PTR _strDestYieldsStr$229806[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN20@lGetTradeT:

; 4059 : 					}
; 4060 : 					switch (eYield)

	mov	ecx, DWORD PTR _eYield$229811[ebp]
	mov	DWORD PTR tv198[ebp], ecx
	cmp	DWORD PTR tv198[ebp], 5
	ja	$LN21@lGetTradeT
	mov	edx, DWORD PTR tv198[ebp]
	jmp	DWORD PTR $LN179@lGetTradeT[edx*4]
$LN17@lGetTradeT:

; 4061 : 					{
; 4062 : 					case YIELD_FOOD:
; 4063 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_FOOD_YIELD_TT", iYieldQuantity / 100);

	mov	eax, DWORD PTR _iYieldQuantity$229813[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	push	OFFSET ??_C@_0CE@DLIGCDJI@TXT_KEY_TOP_PANEL_ITR_FOOD_YIELD@
	lea	edx, DWORD PTR $T246895[ebp]
	push	edx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv616[ebp], eax
	mov	eax, DWORD PTR tv616[ebp]
	mov	DWORD PTR tv452[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv452[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strDestYieldsStr$229806[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T246895[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4064 : 						break;

	jmp	$LN21@lGetTradeT
$LN16@lGetTradeT:

; 4065 : 					case YIELD_PRODUCTION:
; 4066 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_PRODUCTION_YIELD_TT", iYieldQuantity / 100);

	mov	eax, DWORD PTR _iYieldQuantity$229813[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	push	OFFSET ??_C@_0CK@CNOODEEB@TXT_KEY_TOP_PANEL_ITR_PRODUCTION@
	lea	edx, DWORD PTR $T246896[ebp]
	push	edx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv608[ebp], eax
	mov	eax, DWORD PTR tv608[ebp]
	mov	DWORD PTR tv454[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv454[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strDestYieldsStr$229806[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T246896[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4067 : 						break;

	jmp	$LN21@lGetTradeT
$LN15@lGetTradeT:

; 4068 : 					case YIELD_GOLD:
; 4069 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_GOLD_YIELD_TT", iYieldQuantity / 100);

	mov	eax, DWORD PTR _iYieldQuantity$229813[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	push	OFFSET ??_C@_0CE@NBBHBABO@TXT_KEY_TOP_PANEL_ITR_GOLD_YIELD@
	lea	edx, DWORD PTR $T246897[ebp]
	push	edx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv476[ebp], eax
	mov	eax, DWORD PTR tv476[ebp]
	mov	DWORD PTR tv456[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv456[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strDestYieldsStr$229806[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T246897[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4070 : 						break;

	jmp	$LN21@lGetTradeT
$LN14@lGetTradeT:

; 4071 : 					case YIELD_SCIENCE:
; 4072 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_SCIENCE_YIELD_TT", iYieldQuantity / 100);

	mov	eax, DWORD PTR _iYieldQuantity$229813[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	push	OFFSET ??_C@_0CH@BAOHBFEN@TXT_KEY_TOP_PANEL_ITR_SCIENCE_YI@
	lea	edx, DWORD PTR $T246898[ebp]
	push	edx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv470[ebp], eax
	mov	eax, DWORD PTR tv470[ebp]
	mov	DWORD PTR tv458[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR tv458[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strDestYieldsStr$229806[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T246898[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4073 : 						break;

	jmp	$LN21@lGetTradeT
$LN13@lGetTradeT:

; 4074 : 					case YIELD_CULTURE:
; 4075 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_CULTURE_YIELD_TT", iYieldQuantity / 100);

	mov	eax, DWORD PTR _iYieldQuantity$229813[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	push	OFFSET ??_C@_0CH@LOEJAADB@TXT_KEY_TOP_PANEL_ITR_CULTURE_YI@
	lea	edx, DWORD PTR $T246899[ebp]
	push	edx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv681[ebp], eax
	mov	eax, DWORD PTR tv681[ebp]
	mov	DWORD PTR tv460[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR tv460[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strDestYieldsStr$229806[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T246899[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4076 : 						break;

	jmp	SHORT $LN21@lGetTradeT
$LN12@lGetTradeT:

; 4077 : 					case YIELD_FAITH:
; 4078 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_FAITH_YIELD_TT", iYieldQuantity / 100);

	mov	eax, DWORD PTR _iYieldQuantity$229813[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	push	OFFSET ??_C@_0CF@IPBIHCLJ@TXT_KEY_TOP_PANEL_ITR_FAITH_YIEL@
	lea	edx, DWORD PTR $T246900[ebp]
	push	edx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv682[ebp], eax
	mov	eax, DWORD PTR tv682[ebp]
	mov	DWORD PTR tv462[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR tv462[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strDestYieldsStr$229806[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T246900[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN21@lGetTradeT:

; 4079 : 						break;
; 4080 : 					}
; 4081 : 				}
; 4082 : 			}

	jmp	$LN23@lGetTradeT
$LN22@lGetTradeT:

; 4083 : 
; 4084 : 			//CvUnitEntry* pUnitEntry = GC.getUnitInfo(pPlayerTrade->GetTradeUnit(pConnection->m_eDomain));
; 4085 : 
; 4086 : 			Localization::String strBuffer;

	lea	ecx, DWORD PTR _strBuffer$229832[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 9

; 4087 : 			if (strOriginYieldsStr != "" && strDestYieldsStr != "")

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	edx, DWORD PTR _strOriginYieldsStr$229805[ebp]
	push	edx
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN11@lGetTradeT
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	ecx, DWORD PTR _strDestYieldsStr$229806[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN11@lGetTradeT

; 4088 : 			{
; 4089 : 				strBuffer = Localization::Lookup("TXT_KEY_TOP_PANEL_ITR_TO_YOU_ROUTE_BOTH_TT");

	push	OFFSET ??_C@_0CL@LDGJPPCO@TXT_KEY_TOP_PANEL_ITR_TO_YOU_ROU@
	lea	eax, DWORD PTR $T246901[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv304[ebp], eax
	mov	ecx, DWORD PTR tv304[ebp]
	mov	DWORD PTR tv465[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	edx, DWORD PTR tv465[ebp]
	push	edx
	lea	ecx, DWORD PTR _strBuffer$229832[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T246901[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN10@lGetTradeT
$LN11@lGetTradeT:

; 4090 : 			}
; 4091 : 			else if (strOriginYieldsStr != "")

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	eax, DWORD PTR _strOriginYieldsStr$229805[ebp]
	push	eax
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@lGetTradeT

; 4092 : 			{
; 4093 : 				strBuffer = Localization::Lookup("TXT_KEY_TOP_PANEL_ITR_TO_YOU_ROUTE_ONLY_ORIGIN_TT");

	push	OFFSET ??_C@_0DC@KKJHHPL@TXT_KEY_TOP_PANEL_ITR_TO_YOU_ROU@
	lea	edx, DWORD PTR $T246902[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv683[ebp], eax
	mov	eax, DWORD PTR tv683[ebp]
	mov	DWORD PTR tv467[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	ecx, DWORD PTR tv467[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strBuffer$229832[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T246902[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	SHORT $LN10@lGetTradeT
$LN9@lGetTradeT:

; 4094 : 			}
; 4095 : 			else if (strDestYieldsStr != "")

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	edx, DWORD PTR _strDestYieldsStr$229806[ebp]
	push	edx
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@lGetTradeT

; 4096 : 			{
; 4097 : 				strBuffer = Localization::Lookup("TXT_KEY_TOP_PANEL_ITR_TO_YOU_ROUTE_ONLY_DEST_TT");

	push	OFFSET ??_C@_0DA@PEFNMNMC@TXT_KEY_TOP_PANEL_ITR_TO_YOU_ROU@
	lea	ecx, DWORD PTR $T246903[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv684[ebp], eax
	mov	edx, DWORD PTR tv684[ebp]
	mov	DWORD PTR tv469[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	eax, DWORD PTR tv469[ebp]
	push	eax
	lea	ecx, DWORD PTR _strBuffer$229832[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T246903[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN10@lGetTradeT:

; 4098 : 			}
; 4099 : 
; 4100 : 			if (pConnection->m_eConnectionType == TRADE_CONNECTION_INTERNATIONAL)

	mov	ecx, DWORD PTR _pConnection$[ebp]
	cmp	DWORD PTR [ecx+32], 0
	jne	$LN6@lGetTradeT

; 4101 : 			{
; 4102 : 				if (GET_PLAYER(pDestCity->getOwner()).isMinorCiv())

	mov	edx, DWORD PTR _pDestCity$229802[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR $T247141[ebp], eax
	mov	ecx, DWORD PTR $T247141[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247145[ebp], ecx
	mov	ecx, DWORD PTR $T247145[ebp]
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN163@lGetTradeT

; 4103 : 				{
; 4104 : 					strBuffer << "TXT_KEY_TOP_PANEL_ITR_CITY_STATE_TT";

	push	OFFSET ??_C@_0CE@FDBCHBCH@TXT_KEY_TOP_PANEL_ITR_CITY_STATE@
	lea	eax, DWORD PTR _strBuffer$229832[ebp]
	push	eax
	call	??$?6$0CE@@@YAAAVString@Localization@@AAV01@AAY0CE@$$CBD@Z ; operator<<<36>
	add	esp, 8

; 4105 : 				}
; 4106 : 				else

	jmp	SHORT $LN6@lGetTradeT

; 4107 : 				{
; 4108 : 					strBuffer << GET_PLAYER(pOriginCity->getOwner()).getCivilizationShortDescription();

$LN163@lGetTradeT:
	mov	ecx, DWORD PTR _pOriginCity$229801[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T247154[ebp], edx
	mov	eax, DWORD PTR $T247154[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247158[ebp], eax
	mov	ecx, DWORD PTR $T247158[ebp]
	call	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescription
	mov	DWORD PTR $T246904[ebp], eax
	lea	ecx, DWORD PTR $T246904[ebp]
	push	ecx
	lea	edx, DWORD PTR _strBuffer$229832[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
$LN6@lGetTradeT:

; 4109 : 				}
; 4110 : 			}
; 4111 : 
; 4112 : 			strBuffer << pOriginCity->getNameKey();

	mov	ecx, DWORD PTR _pOriginCity$229801[ebp]
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	mov	DWORD PTR $T246905[ebp], eax
	lea	eax, DWORD PTR $T246905[ebp]
	push	eax
	lea	ecx, DWORD PTR _strBuffer$229832[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 4113 : 			if (strOriginYieldsStr != "")

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	edx, DWORD PTR _strOriginYieldsStr$229805[ebp]
	push	edx
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@lGetTradeT

; 4114 : 			{
; 4115 : 				strBuffer << strOriginYieldsStr;

	lea	ecx, DWORD PTR _strOriginYieldsStr$229805[ebp]
	push	ecx
	lea	edx, DWORD PTR _strBuffer$229832[ebp]
	push	edx
	call	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
	add	esp, 8
$LN3@lGetTradeT:

; 4116 : 			}
; 4117 : 
; 4118 : 			strBuffer << pDestCity->getNameKey();

	mov	ecx, DWORD PTR _pDestCity$229802[ebp]
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	mov	DWORD PTR $T246906[ebp], eax
	lea	eax, DWORD PTR $T246906[ebp]
	push	eax
	lea	ecx, DWORD PTR _strBuffer$229832[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 4119 : 			if (strDestYieldsStr != "")

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	edx, DWORD PTR _strDestYieldsStr$229806[ebp]
	push	edx
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@lGetTradeT

; 4120 : 			{
; 4121 : 				strBuffer << strDestYieldsStr;

	lea	ecx, DWORD PTR _strDestYieldsStr$229806[ebp]
	push	ecx
	lea	edx, DWORD PTR _strBuffer$229832[ebp]
	push	edx
	call	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
	add	esp, 8
$LN2@lGetTradeT:

; 4122 : 			}
; 4123 : 
; 4124 : 			if (strResult != "")

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	eax, DWORD PTR _strResult$[ebp]
	push	eax
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@lGetTradeT

; 4125 : 			{
; 4126 : 				strResult += "[NEWLINE]";

	push	OFFSET ??_C@_09ODCIJKAA@?$FLNEWLINE?$FN?$AA@
	lea	ecx, DWORD PTR _strResult$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN1@lGetTradeT:

; 4127 : 			}
; 4128 : 
; 4129 : 			strResult += strBuffer.toUTF8();

	lea	ecx, DWORD PTR _strBuffer$229832[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strResult$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 4130 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _strBuffer$229832[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _strDestYieldsStr$229806[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strOriginYieldsStr$229805[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN29@lGetTradeT:

; 4131 : 	}

	jmp	$LN33@lGetTradeT

; 4132 : 
; 4133 : 	lua_pushstring(L, strResult);

$LN173@lGetTradeT:
	lea	ecx, DWORD PTR _strResult$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 4134 : 
; 4135 : 	return 1;

	mov	DWORD PTR $T246907[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strResult$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T246907[ebp]

; 4136 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN179@lGetTradeT:
	DD	$LN17@lGetTradeT
	DD	$LN16@lGetTradeT
	DD	$LN15@lGetTradeT
	DD	$LN14@lGetTradeT
	DD	$LN13@lGetTradeT
	DD	$LN12@lGetTradeT
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _strResult$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _strOriginYieldsStr$229805[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$2:
	lea	ecx, DWORD PTR _strDestYieldsStr$229806[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$3:
	lea	ecx, DWORD PTR $T246895[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$4:
	lea	ecx, DWORD PTR $T246896[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$5:
	lea	ecx, DWORD PTR $T246897[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$6:
	lea	ecx, DWORD PTR $T246898[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$7:
	lea	ecx, DWORD PTR $T246899[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$8:
	lea	ecx, DWORD PTR $T246900[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$9:
	lea	ecx, DWORD PTR _strBuffer$229832[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$10:
	lea	ecx, DWORD PTR $T246901[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$11:
	lea	ecx, DWORD PTR $T246902[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$12:
	lea	ecx, DWORD PTR $T246903[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-856]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTradeToYouRoutesTTString
PUBLIC	??_C@_09DIAGFAAC@TurnsLeft?$AA@			; `string'
PUBLIC	??_C@_09JLPFGKEJ@ToTourism?$AA@			; `string'
PUBLIC	??_C@_0M@MEFPGMDL@FromTourism?$AA@		; `string'
PUBLIC	??_C@_0N@KHNECHIF@FromPressure?$AA@		; `string'
PUBLIC	??_C@_0L@BJIAJNJD@ToPressure?$AA@		; `string'
PUBLIC	??_C@_09LJGMJBJH@ToScience?$AA@			; `string'
PUBLIC	??_C@_0M@OGMGJHOF@FromScience?$AA@		; `string'
PUBLIC	??_C@_0N@PMLOMJJM@ToProduction?$AA@		; `string'
PUBLIC	??_C@_06LKEHDIKI@ToFood?$AA@			; `string'
PUBLIC	??_C@_05HGOICCEF@ToGPT?$AA@			; `string'
PUBLIC	??_C@_07CCHAPCOJ@FromGPT?$AA@			; `string'
PUBLIC	??_C@_06LINDMIIJ@ToCity?$AA@			; `string'
PUBLIC	??_C@_0L@FMJOCCPE@ToCityName?$AA@		; `string'
PUBLIC	??_C@_04HMFFLKPC@ToID?$AA@			; `string'
PUBLIC	??_C@_0BD@NGIEBJLD@ToCivilizationType?$AA@	; `string'
PUBLIC	??_C@_08GHOHLPJK@FromCity?$AA@			; `string'
PUBLIC	??_C@_0N@OCMKJIOC@FromCityName?$AA@		; `string'
PUBLIC	??_C@_06DKNCDPAE@FromID?$AA@			; `string'
PUBLIC	??_C@_0BF@NALNMNGF@FromCivilizationType?$AA@	; `string'
PUBLIC	??_C@_06HFDFFJHI@Domain?$AA@			; `string'
EXTRN	?getGameTurn@CvGame@@QAEHXZ:PROC		; CvGame::getGameTurn
EXTRN	?GetTourismMultiplier@CvCityCulture@@QBEHW4PlayerTypes@@_N1111@Z:PROC ; CvCityCulture::GetTourismMultiplier
EXTRN	?GetBaseTourism@CvCityCulture@@QAEHXZ:PROC	; CvCityCulture::GetBaseTourism
EXTRN	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ:PROC ; CvCity::GetCityCulture
EXTRN	?getName@CvCity@@QBE?BVCvString@@XZ:PROC	; CvCity::getName
;	COMDAT ??_C@_09DIAGFAAC@TurnsLeft?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
CONST	SEGMENT
??_C@_09DIAGFAAC@TurnsLeft?$AA@ DB 'TurnsLeft', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JLPFGKEJ@ToTourism?$AA@
CONST	SEGMENT
??_C@_09JLPFGKEJ@ToTourism?$AA@ DB 'ToTourism', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MEFPGMDL@FromTourism?$AA@
CONST	SEGMENT
??_C@_0M@MEFPGMDL@FromTourism?$AA@ DB 'FromTourism', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KHNECHIF@FromPressure?$AA@
CONST	SEGMENT
??_C@_0N@KHNECHIF@FromPressure?$AA@ DB 'FromPressure', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BJIAJNJD@ToPressure?$AA@
CONST	SEGMENT
??_C@_0L@BJIAJNJD@ToPressure?$AA@ DB 'ToPressure', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09LJGMJBJH@ToScience?$AA@
CONST	SEGMENT
??_C@_09LJGMJBJH@ToScience?$AA@ DB 'ToScience', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OGMGJHOF@FromScience?$AA@
CONST	SEGMENT
??_C@_0M@OGMGJHOF@FromScience?$AA@ DB 'FromScience', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PMLOMJJM@ToProduction?$AA@
CONST	SEGMENT
??_C@_0N@PMLOMJJM@ToProduction?$AA@ DB 'ToProduction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06LKEHDIKI@ToFood?$AA@
CONST	SEGMENT
??_C@_06LKEHDIKI@ToFood?$AA@ DB 'ToFood', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05HGOICCEF@ToGPT?$AA@
CONST	SEGMENT
??_C@_05HGOICCEF@ToGPT?$AA@ DB 'ToGPT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CCHAPCOJ@FromGPT?$AA@
CONST	SEGMENT
??_C@_07CCHAPCOJ@FromGPT?$AA@ DB 'FromGPT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LINDMIIJ@ToCity?$AA@
CONST	SEGMENT
??_C@_06LINDMIIJ@ToCity?$AA@ DB 'ToCity', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FMJOCCPE@ToCityName?$AA@
CONST	SEGMENT
??_C@_0L@FMJOCCPE@ToCityName?$AA@ DB 'ToCityName', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04HMFFLKPC@ToID?$AA@
CONST	SEGMENT
??_C@_04HMFFLKPC@ToID?$AA@ DB 'ToID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NGIEBJLD@ToCivilizationType?$AA@
CONST	SEGMENT
??_C@_0BD@NGIEBJLD@ToCivilizationType?$AA@ DB 'ToCivilizationType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08GHOHLPJK@FromCity?$AA@
CONST	SEGMENT
??_C@_08GHOHLPJK@FromCity?$AA@ DB 'FromCity', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OCMKJIOC@FromCityName?$AA@
CONST	SEGMENT
??_C@_0N@OCMKJIOC@FromCityName?$AA@ DB 'FromCityName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06DKNCDPAE@FromID?$AA@
CONST	SEGMENT
??_C@_06DKNCDPAE@FromID?$AA@ DB 'FromID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NALNMNGF@FromCivilizationType?$AA@
CONST	SEGMENT
??_C@_0BF@NALNMNGF@FromCivilizationType?$AA@ DB 'FromCivilizationType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06HFDFFJHI@Domain?$AA@
CONST	SEGMENT
??_C@_06HFDFFJHI@Domain?$AA@ DB 'Domain', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv429 = -312						; size = 4
tv591 = -308						; size = 4
tv418 = -304						; size = 4
tv548 = -300						; size = 4
tv469 = -296						; size = 4
tv513 = -292						; size = 4
$T247472 = -288						; size = 4
$T247468 = -284						; size = 4
$T247459 = -280						; size = 4
$T247450 = -276						; size = 4
$T247446 = -272						; size = 4
$T247438 = -268						; size = 4
$T247434 = -264						; size = 4
$T247425 = -260						; size = 4
$T247417 = -256						; size = 4
$T247413 = -252						; size = 4
$T247401 = -248						; size = 4
$T247387 = -240						; size = 4
$T247386 = -236						; size = 4
$T247385 = -232						; size = 4
$T247348 = -228						; size = 4
$T247336 = -224						; size = 4
$T247332 = -217						; size = 1
$T247321 = -216						; size = 4
$T247317 = -209						; size = 1
_iMapY$247384 = -208					; size = 4
_iMapX$247383 = -204					; size = 4
$T247310 = -200						; size = 4
$T247301 = -192						; size = 4
$T247300 = -188						; size = 4
$T247299 = -184						; size = 4
$T247260 = -180						; size = 4
$T247247 = -176						; size = 4
$T247243 = -172						; size = 4
$T247236 = -168						; size = 4
$T247232 = -161						; size = 1
$T247221 = -160						; size = 4
$T247217 = -153						; size = 1
_iMapY$247298 = -152					; size = 4
_iMapX$247297 = -148					; size = 4
$T247210 = -144						; size = 4
$T247206 = -140						; size = 4
$T247194 = -136						; size = 4
$T247190 = -132						; size = 4
$T247184 = -128						; size = 28
$T247183 = -100						; size = 28
_t$229870 = -72						; size = 4
_eToReligion$229888 = -68				; size = 4
_iToPressure$229889 = -64				; size = 4
_iFromDelta$229895 = -60				; size = 4
_pConnection$229865 = -56				; size = 4
_eFromReligion$229890 = -52				; size = 4
_pToPlayer$229869 = -48					; size = 4
_pFromCity$229867 = -44					; size = 4
_iToDelta$229894 = -40					; size = 4
_pToCity$229868 = -36					; size = 4
_iFromPressure$229891 = -32				; size = 4
_ui$229860 = -28					; size = 4
_pkPlayer$ = -24					; size = 4
_index$ = -20						; size = 4
_pTrade$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetTradeRoutes, COMDAT

; 4140 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 300				; 0000012cH
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 4141 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4142 : #ifdef AUI_WARNING_FIXES
; 4143 : 	const CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();
; 4144 : #endif
; 4145 : 
; 4146 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 4147 : 	int index = 1;

	mov	DWORD PTR _index$[ebp], 1

; 4148 : 
; 4149 : 	CvGameTrade* pTrade = GC.getGame().GetGameTrade();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T247190[ebp], edx
	mov	ecx, DWORD PTR $T247190[ebp]
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	DWORD PTR _pTrade$[ebp], eax

; 4150 : 	for (uint ui = 0; ui < pTrade->m_aTradeConnections.size(); ui++)

	mov	DWORD PTR _ui$229860[ebp], 0
	jmp	SHORT $LN5@lGetTradeR
$LN4@lGetTradeR:
	mov	eax, DWORD PTR _ui$229860[ebp]
	add	eax, 1
	mov	DWORD PTR _ui$229860[ebp], eax
$LN5@lGetTradeR:
	mov	ecx, DWORD PTR _pTrade$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T247194[ebp], edx
	mov	eax, DWORD PTR _ui$229860[ebp]
	cmp	eax, DWORD PTR $T247194[ebp]
	jae	$LN3@lGetTradeR

; 4151 : 	{
; 4152 : 		if (pTrade->IsTradeRouteIndexEmpty(ui))

	mov	ecx, DWORD PTR _ui$229860[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pTrade$[ebp]
	call	?IsTradeRouteIndexEmpty@CvGameTrade@@QAE_NH@Z ; CvGameTrade::IsTradeRouteIndexEmpty
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN14@lGetTradeR

; 4153 : 		{
; 4154 : 			continue;

	jmp	SHORT $LN4@lGetTradeR

; 4155 : 		}
; 4156 : 
; 4157 : 		TradeConnection* pConnection = &(pTrade->m_aTradeConnections[ui]);

$LN14@lGetTradeR:
	mov	eax, DWORD PTR _ui$229860[ebp]
	imul	eax, 444				; 000001bcH
	mov	ecx, DWORD PTR _pTrade$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	DWORD PTR _pConnection$229865[ebp], eax

; 4158 : 		if (pConnection->m_eOriginOwner != pkPlayer->GetID())

	mov	edx, DWORD PTR _pkPlayer$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T247206[ebp], eax
	mov	ecx, DWORD PTR _pConnection$229865[ebp]
	mov	edx, DWORD PTR [ecx+20]
	cmp	edx, DWORD PTR $T247206[ebp]
	je	SHORT $LN1@lGetTradeR

; 4159 : 		{
; 4160 : 			continue;

	jmp	SHORT $LN4@lGetTradeR
$LN1@lGetTradeR:

; 4161 : 		}
; 4162 : 
; 4163 : 		CvCity* pFromCity = GC.getMap().plot(pConnection->m_iOriginX, pConnection->m_iOriginY)->getPlotCity();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T247210[ebp], eax
	mov	ecx, DWORD PTR _pConnection$229865[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T247300[ebp], edx
	mov	eax, DWORD PTR _pConnection$229865[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T247299[ebp], ecx
	cmp	DWORD PTR $T247299[ebp], -2147483647	; 80000001H
	je	SHORT $LN22@lGetTradeR
	cmp	DWORD PTR $T247300[ebp], -2147483647	; 80000001H
	jne	SHORT $LN23@lGetTradeR
$LN22@lGetTradeR:
	mov	DWORD PTR $T247301[ebp], 0
	jmp	$LN24@lGetTradeR
$LN23@lGetTradeR:
	mov	edx, DWORD PTR $T247210[ebp]
	mov	al, BYTE PTR [edx+4056]
	mov	BYTE PTR $T247217[ebp], al
	mov	ecx, DWORD PTR $T247210[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T247221[ebp], edx
	movzx	eax, BYTE PTR $T247217[ebp]
	test	eax, eax
	je	SHORT $LN35@lGetTradeR
	cmp	DWORD PTR $T247299[ebp], 0
	jge	SHORT $LN34@lGetTradeR
	mov	eax, DWORD PTR $T247299[ebp]
	cdq
	idiv	DWORD PTR $T247221[ebp]
	add	edx, DWORD PTR $T247221[ebp]
	mov	DWORD PTR _iMapX$247297[ebp], edx
	jmp	SHORT $LN36@lGetTradeR
	jmp	SHORT $LN35@lGetTradeR
$LN34@lGetTradeR:
	mov	ecx, DWORD PTR $T247299[ebp]
	cmp	ecx, DWORD PTR $T247221[ebp]
	jl	SHORT $LN35@lGetTradeR
	mov	eax, DWORD PTR $T247299[ebp]
	cdq
	idiv	DWORD PTR $T247221[ebp]
	mov	DWORD PTR _iMapX$247297[ebp], edx
	jmp	SHORT $LN36@lGetTradeR
$LN35@lGetTradeR:
	mov	edx, DWORD PTR $T247299[ebp]
	mov	DWORD PTR _iMapX$247297[ebp], edx
$LN36@lGetTradeR:
	mov	eax, DWORD PTR $T247210[ebp]
	mov	cl, BYTE PTR [eax+4057]
	mov	BYTE PTR $T247232[ebp], cl
	mov	edx, DWORD PTR $T247210[ebp]
	mov	eax, DWORD PTR [edx+4024]
	mov	DWORD PTR $T247236[ebp], eax
	movzx	ecx, BYTE PTR $T247232[ebp]
	push	ecx
	mov	edx, DWORD PTR $T247236[ebp]
	push	edx
	mov	eax, DWORD PTR $T247300[ebp]
	push	eax
	call	?coordRange@@YAHHH_N@Z			; coordRange
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iMapY$247298[ebp], eax
	cmp	DWORD PTR _iMapX$247297[ebp], 0
	jl	SHORT $LN44@lGetTradeR
	mov	ecx, DWORD PTR $T247210[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T247243[ebp], edx
	mov	eax, DWORD PTR _iMapX$247297[ebp]
	cmp	eax, DWORD PTR $T247243[ebp]
	jge	SHORT $LN44@lGetTradeR
	cmp	DWORD PTR _iMapY$247298[ebp], 0
	jl	SHORT $LN44@lGetTradeR
	mov	ecx, DWORD PTR $T247210[ebp]
	mov	edx, DWORD PTR [ecx+4024]
	mov	DWORD PTR $T247247[ebp], edx
	mov	eax, DWORD PTR _iMapY$247298[ebp]
	cmp	eax, DWORD PTR $T247247[ebp]
	jge	SHORT $LN44@lGetTradeR
	mov	DWORD PTR tv513[ebp], 1
	jmp	SHORT $LN42@lGetTradeR
$LN44@lGetTradeR:
	mov	DWORD PTR tv513[ebp], 0
$LN42@lGetTradeR:
	cmp	DWORD PTR tv513[ebp], 0
	je	SHORT $LN26@lGetTradeR
	mov	ecx, DWORD PTR $T247210[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T247260[ebp], edx
	mov	eax, DWORD PTR _iMapY$247298[ebp]
	imul	eax, DWORD PTR $T247260[ebp]
	add	eax, DWORD PTR _iMapX$247297[ebp]
	imul	eax, 484				; 000001e4H
	mov	ecx, DWORD PTR $T247210[ebp]
	add	eax, DWORD PTR [ecx+4068]
	mov	DWORD PTR tv469[ebp], eax
	jmp	SHORT $LN27@lGetTradeR
$LN26@lGetTradeR:
	mov	DWORD PTR tv469[ebp], 0
$LN27@lGetTradeR:
	mov	edx, DWORD PTR tv469[ebp]
	mov	DWORD PTR $T247301[ebp], edx
$LN24@lGetTradeR:
	mov	ecx, DWORD PTR $T247301[ebp]
	call	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ	; CvPlot::getPlotCity
	mov	DWORD PTR _pFromCity$229867[ebp], eax

; 4164 : 		CvCity* pToCity = GC.getMap().plot(pConnection->m_iDestX, pConnection->m_iDestY)->getPlotCity();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T247310[ebp], eax
	mov	ecx, DWORD PTR _pConnection$229865[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR $T247386[ebp], edx
	mov	eax, DWORD PTR _pConnection$229865[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR $T247385[ebp], ecx
	cmp	DWORD PTR $T247385[ebp], -2147483647	; 80000001H
	je	SHORT $LN61@lGetTradeR
	cmp	DWORD PTR $T247386[ebp], -2147483647	; 80000001H
	jne	SHORT $LN62@lGetTradeR
$LN61@lGetTradeR:
	mov	DWORD PTR $T247387[ebp], 0
	jmp	$LN63@lGetTradeR
$LN62@lGetTradeR:
	mov	edx, DWORD PTR $T247310[ebp]
	mov	al, BYTE PTR [edx+4056]
	mov	BYTE PTR $T247317[ebp], al
	mov	ecx, DWORD PTR $T247310[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T247321[ebp], edx
	movzx	eax, BYTE PTR $T247317[ebp]
	test	eax, eax
	je	SHORT $LN74@lGetTradeR
	cmp	DWORD PTR $T247385[ebp], 0
	jge	SHORT $LN73@lGetTradeR
	mov	eax, DWORD PTR $T247385[ebp]
	cdq
	idiv	DWORD PTR $T247321[ebp]
	add	edx, DWORD PTR $T247321[ebp]
	mov	DWORD PTR _iMapX$247383[ebp], edx
	jmp	SHORT $LN75@lGetTradeR
	jmp	SHORT $LN74@lGetTradeR
$LN73@lGetTradeR:
	mov	ecx, DWORD PTR $T247385[ebp]
	cmp	ecx, DWORD PTR $T247321[ebp]
	jl	SHORT $LN74@lGetTradeR
	mov	eax, DWORD PTR $T247385[ebp]
	cdq
	idiv	DWORD PTR $T247321[ebp]
	mov	DWORD PTR _iMapX$247383[ebp], edx
	jmp	SHORT $LN75@lGetTradeR
$LN74@lGetTradeR:
	mov	edx, DWORD PTR $T247385[ebp]
	mov	DWORD PTR _iMapX$247383[ebp], edx
$LN75@lGetTradeR:
	mov	eax, DWORD PTR $T247310[ebp]
	mov	cl, BYTE PTR [eax+4057]
	mov	BYTE PTR $T247332[ebp], cl
	mov	edx, DWORD PTR $T247310[ebp]
	mov	eax, DWORD PTR [edx+4024]
	mov	DWORD PTR $T247336[ebp], eax
	movzx	ecx, BYTE PTR $T247332[ebp]
	test	ecx, ecx
	je	SHORT $LN84@lGetTradeR
	cmp	DWORD PTR $T247386[ebp], 0
	jge	SHORT $LN83@lGetTradeR
	mov	eax, DWORD PTR $T247386[ebp]
	cdq
	idiv	DWORD PTR $T247336[ebp]
	add	edx, DWORD PTR $T247336[ebp]
	mov	DWORD PTR _iMapY$247384[ebp], edx
	jmp	SHORT $LN85@lGetTradeR
	jmp	SHORT $LN84@lGetTradeR
$LN83@lGetTradeR:
	mov	edx, DWORD PTR $T247386[ebp]
	cmp	edx, DWORD PTR $T247336[ebp]
	jl	SHORT $LN84@lGetTradeR
	mov	eax, DWORD PTR $T247386[ebp]
	cdq
	idiv	DWORD PTR $T247336[ebp]
	mov	DWORD PTR _iMapY$247384[ebp], edx
	jmp	SHORT $LN85@lGetTradeR
$LN84@lGetTradeR:
	mov	eax, DWORD PTR $T247386[ebp]
	mov	DWORD PTR _iMapY$247384[ebp], eax
$LN85@lGetTradeR:
	mov	ecx, DWORD PTR _iMapY$247384[ebp]
	push	ecx
	mov	edx, DWORD PTR _iMapX$247383[ebp]
	push	edx
	mov	ecx, DWORD PTR $T247310[ebp]
	call	?isPlot@CvMap@@QBEHHH@Z			; CvMap::isPlot
	test	eax, eax
	je	SHORT $LN65@lGetTradeR
	mov	eax, DWORD PTR $T247310[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T247348[ebp], ecx
	mov	edx, DWORD PTR _iMapY$247384[ebp]
	imul	edx, DWORD PTR $T247348[ebp]
	add	edx, DWORD PTR _iMapX$247383[ebp]
	imul	edx, 484				; 000001e4H
	mov	eax, DWORD PTR $T247310[ebp]
	add	edx, DWORD PTR [eax+4068]
	mov	DWORD PTR tv548[ebp], edx
	jmp	SHORT $LN66@lGetTradeR
$LN65@lGetTradeR:
	mov	DWORD PTR tv548[ebp], 0
$LN66@lGetTradeR:
	mov	ecx, DWORD PTR tv548[ebp]
	mov	DWORD PTR $T247387[ebp], ecx
$LN63@lGetTradeR:
	mov	ecx, DWORD PTR $T247387[ebp]
	call	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ	; CvPlot::getPlotCity
	mov	DWORD PTR _pToCity$229868[ebp], eax

; 4165 : 
; 4166 : 		CvPlayer* pToPlayer = &GET_PLAYER(pToCity->getOwner());

	mov	edx, DWORD PTR _pToCity$229868[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR $T247401[ebp], eax
	mov	ecx, DWORD PTR $T247401[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pToPlayer$229869[ebp], ecx

; 4167 : 
; 4168 : 		lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 4169 : 		const int t = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$229870[ebp], eax

; 4170 : 
; 4171 : 		lua_pushinteger(L, pConnection->m_eDomain);

	mov	ecx, DWORD PTR _pConnection$229865[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4172 : 		lua_setfield(L, t, "Domain");

	push	OFFSET ??_C@_06HFDFFJHI@Domain?$AA@
	mov	ecx, DWORD PTR _t$229870[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4173 : 		lua_pushinteger(L, pkPlayer->getCivilizationType());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4174 : 		lua_setfield(L, t, "FromCivilizationType");

	push	OFFSET ??_C@_0BF@NALNMNGF@FromCivilizationType?$AA@
	mov	ecx, DWORD PTR _t$229870[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4175 : 		lua_pushinteger(L , pkPlayer->GetID());

	mov	eax, DWORD PTR _pkPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T247413[ebp], ecx
	mov	edx, DWORD PTR $T247413[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4176 : 		lua_setfield(L, t, "FromID");

	push	OFFSET ??_C@_06DKNCDPAE@FromID?$AA@
	mov	ecx, DWORD PTR _t$229870[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4177 : 		lua_pushstring(L, pFromCity->getName());

	lea	eax, DWORD PTR $T247183[ebp]
	push	eax
	mov	ecx, DWORD PTR _pFromCity$229867[ebp]
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	mov	DWORD PTR tv418[ebp], eax
	mov	ecx, DWORD PTR tv418[ebp]
	mov	DWORD PTR $T247417[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T247417[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T247183[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4178 : 		lua_setfield(L, t, "FromCityName");

	push	OFFSET ??_C@_0N@OCMKJIOC@FromCityName?$AA@
	mov	eax, DWORD PTR _t$229870[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4179 : 		CvLuaCity::Push(L, pFromCity);

	mov	edx, DWORD PTR _pFromCity$229867[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8

; 4180 : 		lua_setfield(L, t, "FromCity");

	push	OFFSET ??_C@_08GHOHLPJK@FromCity?$AA@
	mov	ecx, DWORD PTR _t$229870[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4181 : 		lua_pushinteger(L, GET_PLAYER(pConnection->m_eDestOwner).getCivilizationType());

	mov	eax, DWORD PTR _pConnection$229865[ebp]
	mov	ecx, DWORD PTR [eax+24]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247425[ebp], ecx
	mov	ecx, DWORD PTR $T247425[ebp]
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4182 : 		lua_setfield(L, t, "ToCivilizationType");

	push	OFFSET ??_C@_0BD@NGIEBJLD@ToCivilizationType?$AA@
	mov	eax, DWORD PTR _t$229870[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4183 : 		lua_pushinteger(L, pToPlayer->GetID());

	mov	edx, DWORD PTR _pToPlayer$229869[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T247434[ebp], eax
	mov	ecx, DWORD PTR $T247434[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4184 : 		lua_setfield(L, t, "ToID");

	push	OFFSET ??_C@_04HMFFLKPC@ToID?$AA@
	mov	eax, DWORD PTR _t$229870[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4185 : 		lua_pushstring(L, pToCity->getName());

	lea	edx, DWORD PTR $T247184[ebp]
	push	edx
	mov	ecx, DWORD PTR _pToCity$229868[ebp]
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	mov	DWORD PTR tv591[ebp], eax
	mov	eax, DWORD PTR tv591[ebp]
	mov	DWORD PTR $T247438[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T247438[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T247184[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4186 : 		lua_setfield(L, t, "ToCityName");

	push	OFFSET ??_C@_0L@FMJOCCPE@ToCityName?$AA@
	mov	edx, DWORD PTR _t$229870[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4187 : 		CvLuaCity::Push(L, pToCity);

	mov	ecx, DWORD PTR _pToCity$229868[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8

; 4188 : 		lua_setfield(L, t, "ToCity");

	push	OFFSET ??_C@_06LINDMIIJ@ToCity?$AA@
	mov	eax, DWORD PTR _t$229870[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4189 : #ifdef AUI_WARNING_FIXES
; 4190 : 		lua_pushinteger(L, pPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_GOLD, true));
; 4191 : 		lua_setfield(L, t, "FromGPT");
; 4192 : 		lua_pushinteger(L, pPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_GOLD, false));
; 4193 : 		lua_setfield(L, t, "ToGPT");
; 4194 : 		lua_pushinteger(L, pPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_FOOD, false));
; 4195 : 		lua_setfield(L, t, "ToFood");
; 4196 : 		lua_pushinteger(L, pPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_PRODUCTION, false));
; 4197 : 		lua_setfield(L, t, "ToProduction");
; 4198 : 		lua_pushinteger(L, pPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_SCIENCE, true));
; 4199 : 		lua_setfield(L, t, "FromScience");
; 4200 : 		lua_pushinteger(L, pPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_SCIENCE, false));
; 4201 : #else
; 4202 : 		lua_pushinteger(L, pkPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_GOLD, true));

	push	1
	push	2
	mov	edx, DWORD PTR _pConnection$229865[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4203 : 		lua_setfield(L, t, "FromGPT");

	push	OFFSET ??_C@_07CCHAPCOJ@FromGPT?$AA@
	mov	ecx, DWORD PTR _t$229870[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4204 : 		lua_pushinteger(L, pToPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_GOLD, false));

	push	0
	push	2
	mov	eax, DWORD PTR _pConnection$229865[ebp]
	push	eax
	mov	ecx, DWORD PTR _pToPlayer$229869[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4205 : 		lua_setfield(L, t, "ToGPT");

	push	OFFSET ??_C@_05HGOICCEF@ToGPT?$AA@
	mov	edx, DWORD PTR _t$229870[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4206 : 		lua_pushinteger(L, pToPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_FOOD, false));

	push	0
	push	0
	mov	ecx, DWORD PTR _pConnection$229865[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pToPlayer$229869[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4207 : 		lua_setfield(L, t, "ToFood");

	push	OFFSET ??_C@_06LKEHDIKI@ToFood?$AA@
	mov	eax, DWORD PTR _t$229870[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4208 : 		lua_pushinteger(L, pToPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_PRODUCTION, false));

	push	0
	push	1
	mov	edx, DWORD PTR _pConnection$229865[ebp]
	push	edx
	mov	ecx, DWORD PTR _pToPlayer$229869[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4209 : 		lua_setfield(L, t, "ToProduction");

	push	OFFSET ??_C@_0N@PMLOMJJM@ToProduction?$AA@
	mov	ecx, DWORD PTR _t$229870[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4210 : 		lua_pushinteger(L, pkPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_SCIENCE, true));

	push	1
	push	3
	mov	eax, DWORD PTR _pConnection$229865[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4211 : 		lua_setfield(L, t, "FromScience");

	push	OFFSET ??_C@_0M@OGMGJHOF@FromScience?$AA@
	mov	edx, DWORD PTR _t$229870[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4212 : 		lua_pushinteger(L, pToPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_SCIENCE, false));

	push	0
	push	3
	mov	ecx, DWORD PTR _pConnection$229865[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pToPlayer$229869[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4213 : #endif
; 4214 : 		lua_setfield(L, t, "ToScience");

	push	OFFSET ??_C@_09LJGMJBJH@ToScience?$AA@
	mov	eax, DWORD PTR _t$229870[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4215 : 
; 4216 : 
; 4217 : 		ReligionTypes eToReligion = NO_RELIGION;

	mov	DWORD PTR _eToReligion$229888[ebp], -1

; 4218 : 		int iToPressure = 0;

	mov	DWORD PTR _iToPressure$229889[ebp], 0

; 4219 : 		ReligionTypes eFromReligion = NO_RELIGION;

	mov	DWORD PTR _eFromReligion$229890[ebp], -1

; 4220 : 		int iFromPressure = 0;

	mov	DWORD PTR _iFromPressure$229891[ebp], 0

; 4221 : 
; 4222 : 		pFromCity->GetCityReligions()->WouldExertTradeRoutePressureToward(pToCity, eToReligion, iToPressure);

	lea	edx, DWORD PTR _iToPressure$229889[ebp]
	push	edx
	lea	eax, DWORD PTR _eToReligion$229888[ebp]
	push	eax
	mov	ecx, DWORD PTR _pToCity$229868[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pFromCity$229867[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z ; CvCityReligions::WouldExertTradeRoutePressureToward

; 4223 : 		pToCity->GetCityReligions()->WouldExertTradeRoutePressureToward(pFromCity, eFromReligion, iFromPressure);

	lea	edx, DWORD PTR _iFromPressure$229891[ebp]
	push	edx
	lea	eax, DWORD PTR _eFromReligion$229890[ebp]
	push	eax
	mov	ecx, DWORD PTR _pFromCity$229867[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pToCity$229868[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z ; CvCityReligions::WouldExertTradeRoutePressureToward

; 4224 : 		
; 4225 : 		// Internally pressure is now 10 times greater than what is shown to user
; 4226 : 		iToPressure /= GC.getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7900
	mov	DWORD PTR $T247446[ebp], edx
	mov	eax, DWORD PTR _iToPressure$229889[ebp]
	cdq
	idiv	DWORD PTR $T247446[ebp]
	mov	DWORD PTR _iToPressure$229889[ebp], eax

; 4227 : 		iFromPressure /= GC.getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7900
	mov	DWORD PTR $T247450[ebp], eax
	mov	eax, DWORD PTR _iFromPressure$229891[ebp]
	cdq
	idiv	DWORD PTR $T247450[ebp]
	mov	DWORD PTR _iFromPressure$229891[ebp], eax

; 4228 : 
; 4229 : 		lua_pushinteger(L, eToReligion);

	mov	ecx, DWORD PTR _eToReligion$229888[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4230 : 		lua_setfield(L, t, "ToReligion");

	push	OFFSET ??_C@_0L@OHINJIE@ToReligion?$AA@
	mov	eax, DWORD PTR _t$229870[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4231 : 		lua_pushinteger(L, iToPressure);

	mov	edx, DWORD PTR _iToPressure$229889[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4232 : 		lua_setfield(L, t, "ToPressure");

	push	OFFSET ??_C@_0L@BJIAJNJD@ToPressure?$AA@
	mov	ecx, DWORD PTR _t$229870[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4233 : 		lua_pushinteger(L, eFromReligion);

	mov	eax, DWORD PTR _eFromReligion$229890[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4234 : 		lua_setfield(L, t, "FromReligion");

	push	OFFSET ??_C@_0N@LACMGDJC@FromReligion?$AA@
	mov	edx, DWORD PTR _t$229870[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4235 : 		lua_pushinteger(L, iFromPressure);

	mov	ecx, DWORD PTR _iFromPressure$229891[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4236 : 		lua_setfield(L, t, "FromPressure");

	push	OFFSET ??_C@_0N@KHNECHIF@FromPressure?$AA@
	mov	eax, DWORD PTR _t$229870[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4237 : 
; 4238 : 		int iToDelta = pFromCity->GetCityCulture()->GetBaseTourism() * pFromCity->GetCityCulture()->GetTourismMultiplier(pToPlayer->GetID(), true, true, false, true, true);

	mov	edx, DWORD PTR _pToPlayer$229869[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T247459[ebp], eax
	mov	ecx, DWORD PTR _pFromCity$229867[ebp]
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetBaseTourism@CvCityCulture@@QAEHXZ	; CvCityCulture::GetBaseTourism
	mov	esi, eax
	push	1
	push	1
	push	0
	push	1
	push	1
	mov	ecx, DWORD PTR $T247459[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pFromCity$229867[ebp]
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetTourismMultiplier@CvCityCulture@@QBEHW4PlayerTypes@@_N1111@Z ; CvCityCulture::GetTourismMultiplier
	imul	esi, eax
	mov	DWORD PTR _iToDelta$229894[ebp], esi

; 4239 : 		int iFromDelta = pToCity->GetCityCulture()->GetBaseTourism() * pToCity->GetCityCulture()->GetTourismMultiplier(pkPlayer->GetID(), true, true, false, true, true);

	mov	edx, DWORD PTR _pkPlayer$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T247468[ebp], eax
	mov	ecx, DWORD PTR _pToCity$229868[ebp]
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetBaseTourism@CvCityCulture@@QAEHXZ	; CvCityCulture::GetBaseTourism
	mov	esi, eax
	push	1
	push	1
	push	0
	push	1
	push	1
	mov	ecx, DWORD PTR $T247468[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pToCity$229868[ebp]
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetTourismMultiplier@CvCityCulture@@QBEHW4PlayerTypes@@_N1111@Z ; CvCityCulture::GetTourismMultiplier
	imul	esi, eax
	mov	DWORD PTR _iFromDelta$229895[ebp], esi

; 4240 : 		lua_pushinteger(L, iFromDelta);

	mov	edx, DWORD PTR _iFromDelta$229895[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4241 : 		lua_setfield(L, t, "FromTourism");

	push	OFFSET ??_C@_0M@MEFPGMDL@FromTourism?$AA@
	mov	ecx, DWORD PTR _t$229870[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4242 : 		lua_pushinteger(L, iToDelta);

	mov	eax, DWORD PTR _iToDelta$229894[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4243 : 		lua_setfield(L, t, "ToTourism");

	push	OFFSET ??_C@_09JLPFGKEJ@ToTourism?$AA@
	mov	edx, DWORD PTR _t$229870[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4244 : 
; 4245 : 		lua_pushinteger(L, pConnection->m_iTurnRouteComplete - GC.getGame().getGameTurn());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T247472[ebp], ecx
	mov	ecx, DWORD PTR $T247472[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	mov	edx, DWORD PTR _pConnection$229865[ebp]
	mov	ecx, DWORD PTR [edx+392]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4246 : 		lua_setfield(L, t, "TurnsLeft");

	push	OFFSET ??_C@_09DIAGFAAC@TurnsLeft?$AA@
	mov	eax, DWORD PTR _t$229870[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4247 : 
; 4248 : 		lua_rawseti(L, -2, index++);

	mov	edx, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv429[ebp], edx
	mov	eax, DWORD PTR tv429[ebp]
	push	eax
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _index$[ebp]
	add	edx, 1
	mov	DWORD PTR _index$[ebp], edx

; 4249 : 	}

	jmp	$LN4@lGetTradeR
$LN3@lGetTradeR:

; 4250 : 
; 4251 : 	return 1;

	mov	eax, 1

; 4252 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T247183[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR $T247184[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-308]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetTradeRoutes
PUBLIC	__$ArrayPad$
EXTRN	?GetTradeConnection@CvPlayerTrade@@QAEPAUTradeConnection@@PAVCvCity@@0@Z:PROC ; CvPlayerTrade::GetTradeConnection
EXTRN	?CanCreateTradeRoute@CvPlayerTrade@@QAE_NPAVCvCity@@0W4DomainTypes@@W4TradeConnectionType@@_N3@Z:PROC ; CvPlayerTrade::CanCreateTradeRoute
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z$2
__ehfuncinfo$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv539 = -744						; size = 4
tv193 = -740						; size = 4
tv556 = -736						; size = 4
$T247648 = -720						; size = 4
$T247639 = -716						; size = 4
$T247635 = -712						; size = 4
$T247631 = -708						; size = 4
$T247627 = -704						; size = 4
$T247623 = -700						; size = 4
$T247619 = -696						; size = 4
$T247615 = -692						; size = 4
$T247611 = -688						; size = 4
$T247603 = -684						; size = 4
$T247599 = -680						; size = 4
$T247591 = -676						; size = 4
$T247587 = -672						; size = 4
$T247578 = -668						; size = 4
$T247574 = -664						; size = 4
$T247565 = -660						; size = 4
$T247556 = -656						; size = 4
$T247547 = -652						; size = 4
$T247538 = -648						; size = 4
$T247529 = -644						; size = 4
$T247511 = -640						; size = 4
$T247507 = -636						; size = 4
$T247503 = -632						; size = 4
$T247499 = -625						; size = 1
$T247490 = -624						; size = 4
$T247483 = -620						; size = 28
$T247482 = -592						; size = 28
_iTradeReligionModifer$229952 = -564			; size = 4
_t$229940 = -560					; size = 4
_eToReligion$229947 = -556				; size = 4
_iTurnsLeft$229942 = -552				; size = 4
_kConnection$229941 = -548				; size = 444
__$ArrayPad$ = -96					; size = 4
_iToPressure$229948 = -92				; size = 4
_iFromDelta$229955 = -88				; size = 4
_pConnection$229943 = -84				; size = 4
_eFromReligion$229949 = -80				; size = 4
_bTradeAvailable$229938 = -73				; size = 1
_iToDelta$229954 = -72					; size = 4
_iFromPressure$229950 = -68				; size = 4
_uiConnectionTypes$229933 = -64				; size = 4
_bCheckPath$229931 = -57				; size = 1
_eConnection$229932 = -56				; size = 4
_eDomain$229924 = -52					; size = 4
_iDestCityLoop$229918 = -48				; size = 4
_pDestCity$229919 = -44					; size = 4
_ui$229911 = -40					; size = 4
_eOtherPlayer$229910 = -36				; size = 4
_pkPlayer$ = -32					; size = 4
_index$ = -28						; size = 4
_pPlayerTrade$ = -24					; size = 4
_iOriginCityLoop$ = -20					; size = 4
_pOriginCity$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTradeRoutesAvailable, COMDAT

; 4256 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 732				; 000002dcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 4257 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4258 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 4259 : 	int index = 1;

	mov	DWORD PTR _index$[ebp], 1

; 4260 : 
; 4261 : 	//CvGameTrade* pTrade = GC.getGame().GetGameTrade();
; 4262 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	DWORD PTR _pPlayerTrade$[ebp], eax

; 4263 : 	// for each domain type
; 4264 : 	//  for each origin city
; 4265 : 	//    for each destination city
; 4266 : 	//      display if a connection can be made
; 4267 : 
; 4268 : 	int iOriginCityLoop;
; 4269 : 	CvCity* pOriginCity = NULL;

	mov	DWORD PTR _pOriginCity$[ebp], 0

; 4270 : 	for (pOriginCity = pkPlayer->firstCity(&iOriginCityLoop); pOriginCity != NULL; pOriginCity = pkPlayer->nextCity(&iOriginCityLoop))

	push	0
	lea	edx, DWORD PTR _iOriginCityLoop$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pOriginCity$[ebp], eax
	jmp	SHORT $LN23@lGetTradeR@2
$LN22@lGetTradeR@2:
	push	0
	lea	eax, DWORD PTR _iOriginCityLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pOriginCity$[ebp], eax
$LN23@lGetTradeR@2:
	cmp	DWORD PTR _pOriginCity$[ebp], 0
	je	$LN21@lGetTradeR@2

; 4271 : 	{
; 4272 : 		PlayerTypes eOtherPlayer = NO_PLAYER;

	mov	DWORD PTR _eOtherPlayer$229910[ebp], -1

; 4273 : 		for (uint ui = 0; ui < MAX_CIV_PLAYERS; ui++)

	mov	DWORD PTR _ui$229911[ebp], 0
	jmp	SHORT $LN20@lGetTradeR@2
$LN19@lGetTradeR@2:
	mov	ecx, DWORD PTR _ui$229911[ebp]
	add	ecx, 1
	mov	DWORD PTR _ui$229911[ebp], ecx
$LN20@lGetTradeR@2:
	cmp	DWORD PTR _ui$229911[ebp], 63		; 0000003fH
	jae	$LN18@lGetTradeR@2

; 4274 : 		{
; 4275 : 			eOtherPlayer = (PlayerTypes)ui;

	mov	edx, DWORD PTR _ui$229911[ebp]
	mov	DWORD PTR _eOtherPlayer$229910[ebp], edx

; 4276 : 
; 4277 : 			if (!GET_PLAYER(eOtherPlayer).isAlive())

	mov	eax, DWORD PTR _eOtherPlayer$229910[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247490[ebp], eax
	mov	ecx, DWORD PTR $T247490[ebp]
	mov	dl, BYTE PTR [ecx+2256]
	mov	BYTE PTR $T247499[ebp], dl
	movzx	eax, BYTE PTR $T247499[ebp]
	test	eax, eax
	jne	SHORT $LN17@lGetTradeR@2

; 4278 : 			{
; 4279 : 				continue;

	jmp	SHORT $LN19@lGetTradeR@2
$LN17@lGetTradeR@2:

; 4280 : 			}
; 4281 : 
; 4282 : 			if (GET_PLAYER(eOtherPlayer).isBarbarian())

	mov	ecx, DWORD PTR _eOtherPlayer$229910[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247503[ebp], ecx
	mov	ecx, DWORD PTR $T247503[ebp]
	call	?isBarbarian@CvPlayer@@QBE_NXZ		; CvPlayer::isBarbarian
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN16@lGetTradeR@2

; 4283 : 			{
; 4284 : 				continue;

	jmp	SHORT $LN19@lGetTradeR@2
$LN16@lGetTradeR@2:

; 4285 : 			}
; 4286 : 
; 4287 : #ifdef AUI_WARNING_FIXES
; 4288 : 			const CvPlayerTrade* pOtherPlayerTrade = GET_PLAYER(eOtherPlayer).GetTrade();
; 4289 : #endif
; 4290 : 
; 4291 : 			int iDestCityLoop;
; 4292 : 			CvCity* pDestCity = NULL;

	mov	DWORD PTR _pDestCity$229919[ebp], 0

; 4293 : 			for (pDestCity = GET_PLAYER(eOtherPlayer).firstCity(&iDestCityLoop); pDestCity != NULL; pDestCity = GET_PLAYER(eOtherPlayer).nextCity(&iDestCityLoop))

	mov	eax, DWORD PTR _eOtherPlayer$229910[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247507[ebp], eax
	push	0
	lea	ecx, DWORD PTR _iDestCityLoop$229918[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T247507[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pDestCity$229919[ebp], eax
	jmp	SHORT $LN15@lGetTradeR@2
$LN14@lGetTradeR@2:
	mov	edx, DWORD PTR _eOtherPlayer$229910[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247511[ebp], edx
	push	0
	lea	eax, DWORD PTR _iDestCityLoop$229918[ebp]
	push	eax
	mov	ecx, DWORD PTR $T247511[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pDestCity$229919[ebp], eax
$LN15@lGetTradeR@2:
	cmp	DWORD PTR _pDestCity$229919[ebp], 0
	je	$LN13@lGetTradeR@2

; 4294 : 			{
; 4295 : 				// if this is the same city
; 4296 : 				if (pOriginCity == pDestCity)

	mov	ecx, DWORD PTR _pOriginCity$[ebp]
	cmp	ecx, DWORD PTR _pDestCity$229919[ebp]
	jne	SHORT $LN12@lGetTradeR@2

; 4297 : 				{
; 4298 : 					continue;

	jmp	SHORT $LN14@lGetTradeR@2
$LN12@lGetTradeR@2:

; 4299 : 				}
; 4300 : 
; 4301 : 				DomainTypes eDomain = NO_DOMAIN;

	mov	DWORD PTR _eDomain$229924[ebp], -1

; 4302 : 				for (eDomain = (DomainTypes)0; eDomain < NUM_DOMAIN_TYPES; eDomain = (DomainTypes)(eDomain + 1))

	mov	DWORD PTR _eDomain$229924[ebp], 0
	jmp	SHORT $LN11@lGetTradeR@2
$LN10@lGetTradeR@2:
	mov	edx, DWORD PTR _eDomain$229924[ebp]
	add	edx, 1
	mov	DWORD PTR _eDomain$229924[ebp], edx
$LN11@lGetTradeR@2:
	cmp	DWORD PTR _eDomain$229924[ebp], 5
	jge	$LN9@lGetTradeR@2

; 4303 : 				{
; 4304 : 					// if this isn't a valid trade domain, ignore
; 4305 : 					if (eDomain != DOMAIN_LAND && eDomain != DOMAIN_SEA)

	cmp	DWORD PTR _eDomain$229924[ebp], 2
	je	SHORT $LN8@lGetTradeR@2
	cmp	DWORD PTR _eDomain$229924[ebp], 0
	je	SHORT $LN8@lGetTradeR@2

; 4306 : 					{
; 4307 : 						continue;

	jmp	SHORT $LN10@lGetTradeR@2
$LN8@lGetTradeR@2:

; 4308 : 					}
; 4309 : 
; 4310 : 					bool bCheckPath = true;

	mov	BYTE PTR _bCheckPath$229931[ebp], 1

; 4311 : 					TradeConnectionType eConnection = NUM_TRADE_CONNECTION_TYPES;

	mov	DWORD PTR _eConnection$229932[ebp], 3

; 4312 : 					for (uint uiConnectionTypes = 0; uiConnectionTypes < NUM_TRADE_CONNECTION_TYPES; uiConnectionTypes++)

	mov	DWORD PTR _uiConnectionTypes$229933[ebp], 0
	jmp	SHORT $LN7@lGetTradeR@2
$LN6@lGetTradeR@2:
	mov	eax, DWORD PTR _uiConnectionTypes$229933[ebp]
	add	eax, 1
	mov	DWORD PTR _uiConnectionTypes$229933[ebp], eax
$LN7@lGetTradeR@2:
	cmp	DWORD PTR _uiConnectionTypes$229933[ebp], 3
	jae	$LN5@lGetTradeR@2

; 4313 : 					{
; 4314 : 						eConnection = (TradeConnectionType)uiConnectionTypes;

	mov	ecx, DWORD PTR _uiConnectionTypes$229933[ebp]
	mov	DWORD PTR _eConnection$229932[ebp], ecx

; 4315 : 				
; 4316 : 						bool bTradeAvailable = pPlayerTrade->CanCreateTradeRoute(pOriginCity, pDestCity, eDomain, eConnection, true, bCheckPath);

	movzx	edx, BYTE PTR _bCheckPath$229931[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _eConnection$229932[ebp]
	push	eax
	mov	ecx, DWORD PTR _eDomain$229924[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDestCity$229919[ebp]
	push	edx
	mov	eax, DWORD PTR _pOriginCity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayerTrade$[ebp]
	call	?CanCreateTradeRoute@CvPlayerTrade@@QAE_NPAVCvCity@@0W4DomainTypes@@W4TradeConnectionType@@_N3@Z ; CvPlayerTrade::CanCreateTradeRoute
	mov	BYTE PTR _bTradeAvailable$229938[ebp], al

; 4317 : 						if (!bTradeAvailable)

	movzx	ecx, BYTE PTR _bTradeAvailable$229938[ebp]
	test	ecx, ecx
	jne	SHORT $LN4@lGetTradeR@2

; 4318 : 						{
; 4319 : 							continue;

	jmp	SHORT $LN6@lGetTradeR@2
$LN4@lGetTradeR@2:

; 4320 : 						}
; 4321 : 
; 4322 : 						bCheckPath = false;	// Once a trade route is valid for a domain, all further connections can assume the path is valid.

	mov	BYTE PTR _bCheckPath$229931[ebp], 0

; 4323 : 
; 4324 : 						lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 4325 : 						const int t = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$229940[ebp], eax

; 4326 : 
; 4327 : 						TradeConnection kConnection;

	lea	ecx, DWORD PTR _kConnection$229941[ebp+44]
	call	??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::FStaticVector<TradeConnectionPlot,40,0,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 4328 : 						kConnection.m_iOriginX = pOriginCity->getX();

	mov	ecx, DWORD PTR _pOriginCity$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR $T247529[ebp], edx
	mov	eax, DWORD PTR $T247529[ebp]
	mov	DWORD PTR _kConnection$229941[ebp+4], eax

; 4329 : 						kConnection.m_iOriginY = pOriginCity->getY();

	mov	ecx, DWORD PTR _pOriginCity$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR $T247538[ebp], edx
	mov	eax, DWORD PTR $T247538[ebp]
	mov	DWORD PTR _kConnection$229941[ebp+8], eax

; 4330 : 						kConnection.m_iDestX = pDestCity->getX();

	mov	ecx, DWORD PTR _pDestCity$229919[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR $T247547[ebp], edx
	mov	eax, DWORD PTR $T247547[ebp]
	mov	DWORD PTR _kConnection$229941[ebp+12], eax

; 4331 : 						kConnection.m_iDestY = pDestCity->getY();

	mov	ecx, DWORD PTR _pDestCity$229919[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR $T247556[ebp], edx
	mov	eax, DWORD PTR $T247556[ebp]
	mov	DWORD PTR _kConnection$229941[ebp+16], eax

; 4332 : 						kConnection.m_eConnectionType = eConnection;

	mov	ecx, DWORD PTR _eConnection$229932[ebp]
	mov	DWORD PTR _kConnection$229941[ebp+32], ecx

; 4333 : 						kConnection.m_eDomain = eDomain;

	mov	edx, DWORD PTR _eDomain$229924[ebp]
	mov	DWORD PTR _kConnection$229941[ebp+28], edx

; 4334 : 						kConnection.m_eOriginOwner = pOriginCity->getOwner();

	mov	eax, DWORD PTR _pOriginCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T247565[ebp], ecx
	mov	edx, DWORD PTR $T247565[ebp]
	mov	DWORD PTR _kConnection$229941[ebp+20], edx

; 4335 : 						kConnection.m_eDestOwner = pDestCity->getOwner();

	mov	eax, DWORD PTR _pDestCity$229919[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T247574[ebp], ecx
	mov	edx, DWORD PTR $T247574[ebp]
	mov	DWORD PTR _kConnection$229941[ebp+24], edx

; 4336 : 
; 4337 : 						int iTurnsLeft = -1;

	mov	DWORD PTR _iTurnsLeft$229942[ebp], -1

; 4338 : 						TradeConnection* pConnection = pPlayerTrade->GetTradeConnection(pOriginCity, pDestCity);

	mov	eax, DWORD PTR _pDestCity$229919[ebp]
	push	eax
	mov	ecx, DWORD PTR _pOriginCity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerTrade$[ebp]
	call	?GetTradeConnection@CvPlayerTrade@@QAEPAUTradeConnection@@PAVCvCity@@0@Z ; CvPlayerTrade::GetTradeConnection
	mov	DWORD PTR _pConnection$229943[ebp], eax

; 4339 : 						if (pConnection && pConnection->m_eDomain == eDomain)

	cmp	DWORD PTR _pConnection$229943[ebp], 0
	je	SHORT $LN3@lGetTradeR@2
	mov	edx, DWORD PTR _pConnection$229943[ebp]
	mov	eax, DWORD PTR [edx+28]
	cmp	eax, DWORD PTR _eDomain$229924[ebp]
	jne	SHORT $LN3@lGetTradeR@2

; 4340 : 						{
; 4341 : 							iTurnsLeft = pConnection->m_iTurnRouteComplete - GC.getGame().getGameTurn();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T247578[ebp], ecx
	mov	ecx, DWORD PTR $T247578[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	mov	edx, DWORD PTR _pConnection$229943[ebp]
	mov	ecx, DWORD PTR [edx+392]
	sub	ecx, eax
	mov	DWORD PTR _iTurnsLeft$229942[ebp], ecx
$LN3@lGetTradeR@2:

; 4342 : 						}
; 4343 : 
; 4344 : 						lua_pushinteger(L, eDomain);

	mov	edx, DWORD PTR _eDomain$229924[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4345 : 						lua_setfield(L, t, "Domain");

	push	OFFSET ??_C@_06HFDFFJHI@Domain?$AA@
	mov	ecx, DWORD PTR _t$229940[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4346 : 						lua_pushinteger(L, pkPlayer->getCivilizationType());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4347 : 						lua_setfield(L, t, "FromCivilizationType");

	push	OFFSET ??_C@_0BF@NALNMNGF@FromCivilizationType?$AA@
	mov	ecx, DWORD PTR _t$229940[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4348 : 						lua_pushinteger(L , pkPlayer->GetID());

	mov	eax, DWORD PTR _pkPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T247587[ebp], ecx
	mov	edx, DWORD PTR $T247587[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4349 : 						lua_setfield(L, t, "FromID");

	push	OFFSET ??_C@_06DKNCDPAE@FromID?$AA@
	mov	ecx, DWORD PTR _t$229940[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4350 : 						lua_pushstring(L, pOriginCity->getName());

	lea	eax, DWORD PTR $T247482[ebp]
	push	eax
	mov	ecx, DWORD PTR _pOriginCity$[ebp]
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	mov	DWORD PTR tv556[ebp], eax
	mov	ecx, DWORD PTR tv556[ebp]
	mov	DWORD PTR $T247591[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T247591[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T247482[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4351 : 						lua_setfield(L, t, "FromCityName");

	push	OFFSET ??_C@_0N@OCMKJIOC@FromCityName?$AA@
	mov	eax, DWORD PTR _t$229940[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4352 : 						CvLuaCity::Push(L, pOriginCity);

	mov	edx, DWORD PTR _pOriginCity$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8

; 4353 : 						lua_setfield(L, t, "FromCity");

	push	OFFSET ??_C@_08GHOHLPJK@FromCity?$AA@
	mov	ecx, DWORD PTR _t$229940[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4354 : 						lua_pushinteger(L, GET_PLAYER(eOtherPlayer).getCivilizationType());

	mov	eax, DWORD PTR _eOtherPlayer$229910[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247599[ebp], eax
	mov	ecx, DWORD PTR $T247599[ebp]
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4355 : 						lua_setfield(L, t, "ToCivilizationType");

	push	OFFSET ??_C@_0BD@NGIEBJLD@ToCivilizationType?$AA@
	mov	edx, DWORD PTR _t$229940[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4356 : 						lua_pushinteger(L, eOtherPlayer);

	mov	ecx, DWORD PTR _eOtherPlayer$229910[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4357 : 						lua_setfield(L, t, "ToID");

	push	OFFSET ??_C@_04HMFFLKPC@ToID?$AA@
	mov	eax, DWORD PTR _t$229940[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4358 : 						lua_pushstring(L, pDestCity->getName());

	lea	edx, DWORD PTR $T247483[ebp]
	push	edx
	mov	ecx, DWORD PTR _pDestCity$229919[ebp]
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	mov	DWORD PTR tv193[ebp], eax
	mov	eax, DWORD PTR tv193[ebp]
	mov	DWORD PTR $T247603[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR $T247603[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T247483[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4359 : 						lua_setfield(L, t, "ToCityName");

	push	OFFSET ??_C@_0L@FMJOCCPE@ToCityName?$AA@
	mov	edx, DWORD PTR _t$229940[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4360 : 						CvLuaCity::Push(L, pDestCity);

	mov	ecx, DWORD PTR _pDestCity$229919[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8

; 4361 : 						lua_setfield(L, t, "ToCity");

	push	OFFSET ??_C@_06LINDMIIJ@ToCity?$AA@
	mov	eax, DWORD PTR _t$229940[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4362 : #ifdef AUI_WARNING_FIXES
; 4363 : 						lua_pushinteger(L, pPlayerTrade->GetTradeConnectionValueTimes100(kConnection, YIELD_GOLD, true));
; 4364 : 						lua_setfield(L, t, "FromGPT");
; 4365 : 						lua_pushinteger(L, pOtherPlayerTrade->GetTradeConnectionValueTimes100(kConnection, YIELD_GOLD, false));
; 4366 : 						lua_setfield(L, t, "ToGPT");
; 4367 : 						lua_pushinteger(L, pOtherPlayerTrade->GetTradeConnectionValueTimes100(kConnection, YIELD_FOOD, false));
; 4368 : 						lua_setfield(L, t, "ToFood");
; 4369 : 						lua_pushinteger(L, pOtherPlayerTrade->GetTradeConnectionValueTimes100(kConnection, YIELD_PRODUCTION, false));
; 4370 : 						lua_setfield(L, t, "ToProduction");
; 4371 : 						lua_pushinteger(L, pOtherPlayerTrade->GetTradeConnectionValueTimes100(kConnection, YIELD_SCIENCE, true));
; 4372 : 						lua_setfield(L, t, "FromScience");
; 4373 : 						lua_pushinteger(L, pOtherPlayerTrade->GetTradeConnectionValueTimes100(kConnection, YIELD_SCIENCE, false));
; 4374 : #else
; 4375 : 						lua_pushinteger(L, pkPlayer->GetTrade()->GetTradeConnectionValueTimes100(kConnection, YIELD_GOLD, true));

	push	1
	push	2
	lea	edx, DWORD PTR _kConnection$229941[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4376 : 						lua_setfield(L, t, "FromGPT");

	push	OFFSET ??_C@_07CCHAPCOJ@FromGPT?$AA@
	mov	ecx, DWORD PTR _t$229940[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4377 : 						lua_pushinteger(L, GET_PLAYER(eOtherPlayer).GetTrade()->GetTradeConnectionValueTimes100(kConnection, YIELD_GOLD, false));

	mov	eax, DWORD PTR _eOtherPlayer$229910[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247611[ebp], eax
	push	0
	push	2
	lea	ecx, DWORD PTR _kConnection$229941[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T247611[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4378 : 						lua_setfield(L, t, "ToGPT");

	push	OFFSET ??_C@_05HGOICCEF@ToGPT?$AA@
	mov	eax, DWORD PTR _t$229940[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4379 : 						lua_pushinteger(L, GET_PLAYER(eOtherPlayer).GetTrade()->GetTradeConnectionValueTimes100(kConnection, YIELD_FOOD, false));

	mov	edx, DWORD PTR _eOtherPlayer$229910[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247615[ebp], edx
	push	0
	push	0
	lea	eax, DWORD PTR _kConnection$229941[ebp]
	push	eax
	mov	ecx, DWORD PTR $T247615[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4380 : 						lua_setfield(L, t, "ToFood");

	push	OFFSET ??_C@_06LKEHDIKI@ToFood?$AA@
	mov	edx, DWORD PTR _t$229940[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4381 : 						lua_pushinteger(L, GET_PLAYER(eOtherPlayer).GetTrade()->GetTradeConnectionValueTimes100(kConnection, YIELD_PRODUCTION, false));

	mov	ecx, DWORD PTR _eOtherPlayer$229910[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247619[ebp], ecx
	push	0
	push	1
	lea	edx, DWORD PTR _kConnection$229941[ebp]
	push	edx
	mov	ecx, DWORD PTR $T247619[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4382 : 						lua_setfield(L, t, "ToProduction");

	push	OFFSET ??_C@_0N@PMLOMJJM@ToProduction?$AA@
	mov	ecx, DWORD PTR _t$229940[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4383 : 						lua_pushinteger(L,  GET_PLAYER(eOtherPlayer).GetTrade()->GetTradeConnectionValueTimes100(kConnection, YIELD_SCIENCE, true));

	mov	eax, DWORD PTR _eOtherPlayer$229910[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247623[ebp], eax
	push	1
	push	3
	lea	ecx, DWORD PTR _kConnection$229941[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T247623[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4384 : 						lua_setfield(L, t, "FromScience");

	push	OFFSET ??_C@_0M@OGMGJHOF@FromScience?$AA@
	mov	eax, DWORD PTR _t$229940[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4385 : 						lua_pushinteger(L, GET_PLAYER(eOtherPlayer).GetTrade()->GetTradeConnectionValueTimes100(kConnection, YIELD_SCIENCE, false));

	mov	edx, DWORD PTR _eOtherPlayer$229910[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247627[ebp], edx
	push	0
	push	3
	lea	eax, DWORD PTR _kConnection$229941[ebp]
	push	eax
	mov	ecx, DWORD PTR $T247627[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4386 : #endif
; 4387 : 						lua_setfield(L, t, "ToScience");

	push	OFFSET ??_C@_09LJGMJBJH@ToScience?$AA@
	mov	edx, DWORD PTR _t$229940[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4388 : 
; 4389 : 						ReligionTypes eToReligion = NO_RELIGION;

	mov	DWORD PTR _eToReligion$229947[ebp], -1

; 4390 : 						int iToPressure = 0;

	mov	DWORD PTR _iToPressure$229948[ebp], 0

; 4391 : 						ReligionTypes eFromReligion = NO_RELIGION;

	mov	DWORD PTR _eFromReligion$229949[ebp], -1

; 4392 : 						int iFromPressure = 0;

	mov	DWORD PTR _iFromPressure$229950[ebp], 0

; 4393 : 
; 4394 : 						pOriginCity->GetCityReligions()->WouldExertTradeRoutePressureToward(pDestCity, eToReligion, iToPressure);

	lea	ecx, DWORD PTR _iToPressure$229948[ebp]
	push	ecx
	lea	edx, DWORD PTR _eToReligion$229947[ebp]
	push	edx
	mov	eax, DWORD PTR _pDestCity$229919[ebp]
	push	eax
	mov	ecx, DWORD PTR _pOriginCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z ; CvCityReligions::WouldExertTradeRoutePressureToward

; 4395 : 						pDestCity->GetCityReligions()->WouldExertTradeRoutePressureToward(pOriginCity, eFromReligion, iFromPressure);

	lea	ecx, DWORD PTR _iFromPressure$229950[ebp]
	push	ecx
	lea	edx, DWORD PTR _eFromReligion$229949[ebp]
	push	edx
	mov	eax, DWORD PTR _pOriginCity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDestCity$229919[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z ; CvCityReligions::WouldExertTradeRoutePressureToward

; 4396 : 
; 4397 : 						if (iTurnsLeft < 0)

	cmp	DWORD PTR _iTurnsLeft$229942[ebp], 0
	jge	SHORT $LN2@lGetTradeR@2

; 4398 : 						{
; 4399 : 							int iTradeReligionModifer = pkPlayer->GetPlayerTraits()->GetTradeReligionModifier();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T247631[ebp], eax
	mov	ecx, DWORD PTR $T247631[ebp]
	mov	edx, DWORD PTR [ecx+324]
	mov	DWORD PTR _iTradeReligionModifer$229952[ebp], edx

; 4400 : 							if (iTradeReligionModifer != 0)

	cmp	DWORD PTR _iTradeReligionModifer$229952[ebp], 0
	je	SHORT $LN2@lGetTradeR@2

; 4401 : 							{
; 4402 : 								iToPressure *= 100 + iTradeReligionModifer;

	mov	eax, DWORD PTR _iTradeReligionModifer$229952[ebp]
	add	eax, 100				; 00000064H
	imul	eax, DWORD PTR _iToPressure$229948[ebp]
	mov	DWORD PTR _iToPressure$229948[ebp], eax

; 4403 : 								iToPressure /= 100;

	mov	eax, DWORD PTR _iToPressure$229948[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iToPressure$229948[ebp], eax
$LN2@lGetTradeR@2:

; 4404 : 							}
; 4405 : 						}
; 4406 : 
; 4407 : 						// Internally pressure is now 10 times greater than what is shown to user
; 4408 : 						iToPressure /= GC.getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7900
	mov	DWORD PTR $T247635[ebp], edx
	mov	eax, DWORD PTR _iToPressure$229948[ebp]
	cdq
	idiv	DWORD PTR $T247635[ebp]
	mov	DWORD PTR _iToPressure$229948[ebp], eax

; 4409 : 						iFromPressure /= GC.getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7900
	mov	DWORD PTR $T247639[ebp], eax
	mov	eax, DWORD PTR _iFromPressure$229950[ebp]
	cdq
	idiv	DWORD PTR $T247639[ebp]
	mov	DWORD PTR _iFromPressure$229950[ebp], eax

; 4410 : 
; 4411 : 						lua_pushinteger(L, eToReligion);

	mov	ecx, DWORD PTR _eToReligion$229947[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4412 : 						lua_setfield(L, t, "ToReligion");

	push	OFFSET ??_C@_0L@OHINJIE@ToReligion?$AA@
	mov	eax, DWORD PTR _t$229940[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4413 : 						lua_pushinteger(L, iToPressure);

	mov	edx, DWORD PTR _iToPressure$229948[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4414 : 						lua_setfield(L, t, "ToPressure");

	push	OFFSET ??_C@_0L@BJIAJNJD@ToPressure?$AA@
	mov	ecx, DWORD PTR _t$229940[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4415 : 						lua_pushinteger(L, eFromReligion);

	mov	eax, DWORD PTR _eFromReligion$229949[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4416 : 						lua_setfield(L, t, "FromReligion");

	push	OFFSET ??_C@_0N@LACMGDJC@FromReligion?$AA@
	mov	edx, DWORD PTR _t$229940[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4417 : 						lua_pushinteger(L, iFromPressure);

	mov	ecx, DWORD PTR _iFromPressure$229950[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4418 : 						lua_setfield(L, t, "FromPressure");

	push	OFFSET ??_C@_0N@KHNECHIF@FromPressure?$AA@
	mov	eax, DWORD PTR _t$229940[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4419 : 
; 4420 : 						int iToDelta = pOriginCity->GetCityCulture()->GetBaseTourism() * pOriginCity->GetCityCulture()->GetTourismMultiplier(eOtherPlayer, true, true, false, true, true);

	mov	ecx, DWORD PTR _pOriginCity$[ebp]
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetBaseTourism@CvCityCulture@@QAEHXZ	; CvCityCulture::GetBaseTourism
	mov	esi, eax
	push	1
	push	1
	push	0
	push	1
	push	1
	mov	edx, DWORD PTR _eOtherPlayer$229910[ebp]
	push	edx
	mov	ecx, DWORD PTR _pOriginCity$[ebp]
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetTourismMultiplier@CvCityCulture@@QBEHW4PlayerTypes@@_N1111@Z ; CvCityCulture::GetTourismMultiplier
	imul	esi, eax
	mov	DWORD PTR _iToDelta$229954[ebp], esi

; 4421 : 						int iFromDelta = pDestCity->GetCityCulture()->GetBaseTourism() * pDestCity->GetCityCulture()->GetTourismMultiplier(pkPlayer->GetID(), true, true, false, true, true);

	mov	eax, DWORD PTR _pkPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T247648[ebp], ecx
	mov	ecx, DWORD PTR _pDestCity$229919[ebp]
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetBaseTourism@CvCityCulture@@QAEHXZ	; CvCityCulture::GetBaseTourism
	mov	esi, eax
	push	1
	push	1
	push	0
	push	1
	push	1
	mov	edx, DWORD PTR $T247648[ebp]
	push	edx
	mov	ecx, DWORD PTR _pDestCity$229919[ebp]
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetTourismMultiplier@CvCityCulture@@QBEHW4PlayerTypes@@_N1111@Z ; CvCityCulture::GetTourismMultiplier
	imul	esi, eax
	mov	DWORD PTR _iFromDelta$229955[ebp], esi

; 4422 : 						lua_pushinteger(L, iFromDelta);

	mov	eax, DWORD PTR _iFromDelta$229955[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4423 : 						lua_setfield(L, t, "FromTourism");

	push	OFFSET ??_C@_0M@MEFPGMDL@FromTourism?$AA@
	mov	edx, DWORD PTR _t$229940[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4424 : 						lua_pushinteger(L, iToDelta);

	mov	ecx, DWORD PTR _iToDelta$229954[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4425 : 						lua_setfield(L, t, "ToTourism");

	push	OFFSET ??_C@_09JLPFGKEJ@ToTourism?$AA@
	mov	eax, DWORD PTR _t$229940[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4426 : 
; 4427 : 						lua_pushinteger(L, iTurnsLeft);

	mov	edx, DWORD PTR _iTurnsLeft$229942[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4428 : 						lua_setfield(L, t, "TurnsLeft");

	push	OFFSET ??_C@_09DIAGFAAC@TurnsLeft?$AA@
	mov	ecx, DWORD PTR _t$229940[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4429 : 
; 4430 : 						lua_rawseti(L, -2, index++);

	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv539[ebp], eax
	mov	ecx, DWORD PTR tv539[ebp]
	push	ecx
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax

; 4431 : 
; 4432 : 
; 4433 : 					}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _kConnection$229941[ebp+44]
	call	??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::~FStaticVector<TradeConnectionPlot,40,0,297,0>
	jmp	$LN6@lGetTradeR@2
$LN5@lGetTradeR@2:

; 4434 : 				}

	jmp	$LN10@lGetTradeR@2
$LN9@lGetTradeR@2:

; 4435 : 			}

	jmp	$LN14@lGetTradeR@2
$LN13@lGetTradeR@2:

; 4436 : 		}

	jmp	$LN19@lGetTradeR@2
$LN18@lGetTradeR@2:

; 4437 : 	}

	jmp	$LN22@lGetTradeR@2
$LN21@lGetTradeR@2:

; 4438 : 
; 4439 : 	return 1;

	mov	eax, 1

; 4440 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kConnection$229941[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__unwindfunclet$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR $T247482[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z$2:
	lea	ecx, DWORD PTR $T247483[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-740]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTradeRoutesAvailable
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
xdata$x	SEGMENT
__unwindtable$?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv428 = -320						; size = 4
tv590 = -316						; size = 4
tv416 = -312						; size = 4
tv541 = -308						; size = 4
tv553 = -304						; size = 4
tv468 = -300						; size = 4
$T247976 = -296						; size = 4
$T247972 = -292						; size = 4
$T247963 = -288						; size = 4
$T247954 = -284						; size = 4
$T247950 = -280						; size = 4
$T247942 = -276						; size = 4
$T247938 = -272						; size = 4
$T247929 = -268						; size = 4
$T247921 = -264						; size = 4
$T247917 = -260						; size = 4
$T247905 = -256						; size = 4
$T247893 = -252						; size = 4
$T247879 = -244						; size = 4
$T247878 = -240						; size = 4
$T247877 = -236						; size = 4
$T247838 = -232						; size = 4
$T247825 = -228						; size = 4
$T247821 = -224						; size = 4
$T247814 = -220						; size = 4
$T247810 = -213						; size = 1
$T247799 = -212						; size = 4
$T247795 = -205						; size = 1
_iMapY$247863 = -204					; size = 4
_iMapX$247862 = -200					; size = 4
$T247788 = -196						; size = 4
$T247779 = -188						; size = 4
$T247778 = -184						; size = 4
$T247777 = -180						; size = 4
$T247746 = -176						; size = 4
$T247741 = -172						; size = 4
$T247737 = -165						; size = 1
$T247726 = -164						; size = 4
$T247722 = -157						; size = 1
_iMapY$247755 = -156					; size = 4
_iMapX$247754 = -152					; size = 4
$T247715 = -148						; size = 4
$T247711 = -144						; size = 4
$T247699 = -140						; size = 4
$T247695 = -136						; size = 4
$T247689 = -132						; size = 28
$T247688 = -104						; size = 28
_pFromPlayer$229972 = -76				; size = 4
_t$229974 = -72						; size = 4
_eToReligion$229977 = -68				; size = 4
_iToPressure$229978 = -64				; size = 4
_iFromDelta$229982 = -60				; size = 4
_pConnection$229967 = -56				; size = 4
_eFromReligion$229979 = -52				; size = 4
_pToPlayer$229973 = -48					; size = 4
_pFromCity$229970 = -44					; size = 4
_iToDelta$229981 = -40					; size = 4
_pToCity$229971 = -36					; size = 4
_iFromPressure$229980 = -32				; size = 4
_ui$229962 = -28					; size = 4
_pkPlayer$ = -24					; size = 4
_index$ = -20						; size = 4
_pTrade$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTradeRoutesToYou, COMDAT

; 4444 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 308				; 00000134H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 4445 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4446 : 
; 4447 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 4448 : 	int index = 1;

	mov	DWORD PTR _index$[ebp], 1

; 4449 : 
; 4450 : 	CvGameTrade* pTrade = GC.getGame().GetGameTrade();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T247695[ebp], edx
	mov	ecx, DWORD PTR $T247695[ebp]
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	DWORD PTR _pTrade$[ebp], eax

; 4451 : 	for (uint ui = 0; ui < pTrade->m_aTradeConnections.size(); ui++)

	mov	DWORD PTR _ui$229962[ebp], 0
	jmp	SHORT $LN6@lGetTradeR@3
$LN5@lGetTradeR@3:
	mov	eax, DWORD PTR _ui$229962[ebp]
	add	eax, 1
	mov	DWORD PTR _ui$229962[ebp], eax
$LN6@lGetTradeR@3:
	mov	ecx, DWORD PTR _pTrade$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T247699[ebp], edx
	mov	eax, DWORD PTR _ui$229962[ebp]
	cmp	eax, DWORD PTR $T247699[ebp]
	jae	$LN4@lGetTradeR@3

; 4452 : 	{
; 4453 : 		if (pTrade->IsTradeRouteIndexEmpty(ui))

	mov	ecx, DWORD PTR _ui$229962[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pTrade$[ebp]
	call	?IsTradeRouteIndexEmpty@CvGameTrade@@QAE_NH@Z ; CvGameTrade::IsTradeRouteIndexEmpty
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN15@lGetTradeR@3

; 4454 : 		{
; 4455 : 			continue;

	jmp	SHORT $LN5@lGetTradeR@3

; 4456 : 		}
; 4457 : 
; 4458 : 		TradeConnection* pConnection = &(pTrade->m_aTradeConnections[ui]);

$LN15@lGetTradeR@3:
	mov	eax, DWORD PTR _ui$229962[ebp]
	imul	eax, 444				; 000001bcH
	mov	ecx, DWORD PTR _pTrade$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	DWORD PTR _pConnection$229967[ebp], eax

; 4459 : 		// internal trade route. Ignore.
; 4460 : 		if (pConnection->m_eOriginOwner == pConnection->m_eDestOwner)

	mov	edx, DWORD PTR _pConnection$229967[ebp]
	mov	eax, DWORD PTR _pConnection$229967[ebp]
	mov	ecx, DWORD PTR [edx+20]
	cmp	ecx, DWORD PTR [eax+24]
	jne	SHORT $LN19@lGetTradeR@3

; 4461 : 		{
; 4462 : 			continue;

	jmp	SHORT $LN5@lGetTradeR@3

; 4463 : 		}
; 4464 : 
; 4465 : 		// trade route does not involve target player. Ignore.
; 4466 : 		if (pConnection->m_eDestOwner != pkPlayer->GetID())

$LN19@lGetTradeR@3:
	mov	edx, DWORD PTR _pkPlayer$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T247711[ebp], eax
	mov	ecx, DWORD PTR _pConnection$229967[ebp]
	mov	edx, DWORD PTR [ecx+24]
	cmp	edx, DWORD PTR $T247711[ebp]
	je	SHORT $LN1@lGetTradeR@3

; 4467 : 		{
; 4468 : 			continue;

	jmp	SHORT $LN5@lGetTradeR@3
$LN1@lGetTradeR@3:

; 4469 : 		}
; 4470 : 
; 4471 : 		CvCity* pFromCity = GC.getMap().plot(pConnection->m_iOriginX, pConnection->m_iOriginY)->getPlotCity();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T247715[ebp], eax
	mov	ecx, DWORD PTR _pConnection$229967[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T247778[ebp], edx
	mov	eax, DWORD PTR _pConnection$229967[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T247777[ebp], ecx
	cmp	DWORD PTR $T247777[ebp], -2147483647	; 80000001H
	je	SHORT $LN23@lGetTradeR@3
	cmp	DWORD PTR $T247778[ebp], -2147483647	; 80000001H
	jne	SHORT $LN24@lGetTradeR@3
$LN23@lGetTradeR@3:
	mov	DWORD PTR $T247779[ebp], 0
	jmp	$LN25@lGetTradeR@3
$LN24@lGetTradeR@3:
	mov	edx, DWORD PTR $T247715[ebp]
	mov	al, BYTE PTR [edx+4056]
	mov	BYTE PTR $T247722[ebp], al
	mov	ecx, DWORD PTR $T247715[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T247726[ebp], edx
	movzx	eax, BYTE PTR $T247722[ebp]
	test	eax, eax
	je	SHORT $LN36@lGetTradeR@3
	cmp	DWORD PTR $T247777[ebp], 0
	jge	SHORT $LN35@lGetTradeR@3
	mov	eax, DWORD PTR $T247777[ebp]
	cdq
	idiv	DWORD PTR $T247726[ebp]
	add	edx, DWORD PTR $T247726[ebp]
	mov	DWORD PTR _iMapX$247754[ebp], edx
	jmp	SHORT $LN37@lGetTradeR@3
	jmp	SHORT $LN36@lGetTradeR@3
$LN35@lGetTradeR@3:
	mov	ecx, DWORD PTR $T247777[ebp]
	cmp	ecx, DWORD PTR $T247726[ebp]
	jl	SHORT $LN36@lGetTradeR@3
	mov	eax, DWORD PTR $T247777[ebp]
	cdq
	idiv	DWORD PTR $T247726[ebp]
	mov	DWORD PTR _iMapX$247754[ebp], edx
	jmp	SHORT $LN37@lGetTradeR@3
$LN36@lGetTradeR@3:
	mov	edx, DWORD PTR $T247777[ebp]
	mov	DWORD PTR _iMapX$247754[ebp], edx
$LN37@lGetTradeR@3:
	mov	eax, DWORD PTR $T247715[ebp]
	mov	cl, BYTE PTR [eax+4057]
	mov	BYTE PTR $T247737[ebp], cl
	mov	edx, DWORD PTR $T247715[ebp]
	mov	eax, DWORD PTR [edx+4024]
	mov	DWORD PTR $T247741[ebp], eax
	movzx	ecx, BYTE PTR $T247737[ebp]
	push	ecx
	mov	edx, DWORD PTR $T247741[ebp]
	push	edx
	mov	eax, DWORD PTR $T247778[ebp]
	push	eax
	call	?coordRange@@YAHHH_N@Z			; coordRange
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iMapY$247755[ebp], eax
	mov	ecx, DWORD PTR _iMapY$247755[ebp]
	push	ecx
	mov	edx, DWORD PTR _iMapX$247754[ebp]
	push	edx
	mov	ecx, DWORD PTR $T247715[ebp]
	call	?isPlot@CvMap@@QBEHHH@Z			; CvMap::isPlot
	test	eax, eax
	je	SHORT $LN27@lGetTradeR@3
	mov	eax, DWORD PTR $T247715[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T247746[ebp], ecx
	mov	edx, DWORD PTR _iMapY$247755[ebp]
	imul	edx, DWORD PTR $T247746[ebp]
	add	edx, DWORD PTR _iMapX$247754[ebp]
	imul	edx, 484				; 000001e4H
	mov	eax, DWORD PTR $T247715[ebp]
	add	edx, DWORD PTR [eax+4068]
	mov	DWORD PTR tv468[ebp], edx
	jmp	SHORT $LN28@lGetTradeR@3
$LN27@lGetTradeR@3:
	mov	DWORD PTR tv468[ebp], 0
$LN28@lGetTradeR@3:
	mov	ecx, DWORD PTR tv468[ebp]
	mov	DWORD PTR $T247779[ebp], ecx
$LN25@lGetTradeR@3:
	mov	ecx, DWORD PTR $T247779[ebp]
	call	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ	; CvPlot::getPlotCity
	mov	DWORD PTR _pFromCity$229970[ebp], eax

; 4472 : 		CvCity* pToCity = GC.getMap().plot(pConnection->m_iDestX, pConnection->m_iDestY)->getPlotCity();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T247788[ebp], edx
	mov	eax, DWORD PTR _pConnection$229967[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR $T247878[ebp], ecx
	mov	edx, DWORD PTR _pConnection$229967[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR $T247877[ebp], eax
	cmp	DWORD PTR $T247877[ebp], -2147483647	; 80000001H
	je	SHORT $LN54@lGetTradeR@3
	cmp	DWORD PTR $T247878[ebp], -2147483647	; 80000001H
	jne	SHORT $LN55@lGetTradeR@3
$LN54@lGetTradeR@3:
	mov	DWORD PTR $T247879[ebp], 0
	jmp	$LN56@lGetTradeR@3
$LN55@lGetTradeR@3:
	mov	ecx, DWORD PTR $T247788[ebp]
	mov	dl, BYTE PTR [ecx+4056]
	mov	BYTE PTR $T247795[ebp], dl
	mov	eax, DWORD PTR $T247788[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T247799[ebp], ecx
	movzx	edx, BYTE PTR $T247795[ebp]
	test	edx, edx
	je	SHORT $LN67@lGetTradeR@3
	cmp	DWORD PTR $T247877[ebp], 0
	jge	SHORT $LN66@lGetTradeR@3
	mov	eax, DWORD PTR $T247877[ebp]
	cdq
	idiv	DWORD PTR $T247799[ebp]
	add	edx, DWORD PTR $T247799[ebp]
	mov	DWORD PTR _iMapX$247862[ebp], edx
	jmp	SHORT $LN68@lGetTradeR@3
	jmp	SHORT $LN67@lGetTradeR@3
$LN66@lGetTradeR@3:
	mov	eax, DWORD PTR $T247877[ebp]
	cmp	eax, DWORD PTR $T247799[ebp]
	jl	SHORT $LN67@lGetTradeR@3
	mov	eax, DWORD PTR $T247877[ebp]
	cdq
	idiv	DWORD PTR $T247799[ebp]
	mov	DWORD PTR _iMapX$247862[ebp], edx
	jmp	SHORT $LN68@lGetTradeR@3
$LN67@lGetTradeR@3:
	mov	ecx, DWORD PTR $T247877[ebp]
	mov	DWORD PTR _iMapX$247862[ebp], ecx
$LN68@lGetTradeR@3:
	mov	edx, DWORD PTR $T247788[ebp]
	mov	al, BYTE PTR [edx+4057]
	mov	BYTE PTR $T247810[ebp], al
	mov	ecx, DWORD PTR $T247788[ebp]
	mov	edx, DWORD PTR [ecx+4024]
	mov	DWORD PTR $T247814[ebp], edx
	movzx	eax, BYTE PTR $T247810[ebp]
	push	eax
	mov	ecx, DWORD PTR $T247814[ebp]
	push	ecx
	mov	edx, DWORD PTR $T247878[ebp]
	push	edx
	call	?coordRange@@YAHHH_N@Z			; coordRange
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iMapY$247863[ebp], eax
	cmp	DWORD PTR _iMapX$247862[ebp], 0
	jl	SHORT $LN76@lGetTradeR@3
	mov	eax, DWORD PTR $T247788[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T247821[ebp], ecx
	mov	edx, DWORD PTR _iMapX$247862[ebp]
	cmp	edx, DWORD PTR $T247821[ebp]
	jge	SHORT $LN76@lGetTradeR@3
	cmp	DWORD PTR _iMapY$247863[ebp], 0
	jl	SHORT $LN76@lGetTradeR@3
	mov	eax, DWORD PTR $T247788[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T247825[ebp], ecx
	mov	edx, DWORD PTR _iMapY$247863[ebp]
	cmp	edx, DWORD PTR $T247825[ebp]
	jge	SHORT $LN76@lGetTradeR@3
	mov	DWORD PTR tv553[ebp], 1
	jmp	SHORT $LN74@lGetTradeR@3
$LN76@lGetTradeR@3:
	mov	DWORD PTR tv553[ebp], 0
$LN74@lGetTradeR@3:
	cmp	DWORD PTR tv553[ebp], 0
	je	SHORT $LN58@lGetTradeR@3
	mov	eax, DWORD PTR $T247788[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T247838[ebp], ecx
	mov	edx, DWORD PTR _iMapY$247863[ebp]
	imul	edx, DWORD PTR $T247838[ebp]
	add	edx, DWORD PTR _iMapX$247862[ebp]
	imul	edx, 484				; 000001e4H
	mov	eax, DWORD PTR $T247788[ebp]
	add	edx, DWORD PTR [eax+4068]
	mov	DWORD PTR tv541[ebp], edx
	jmp	SHORT $LN59@lGetTradeR@3
$LN58@lGetTradeR@3:
	mov	DWORD PTR tv541[ebp], 0
$LN59@lGetTradeR@3:
	mov	ecx, DWORD PTR tv541[ebp]
	mov	DWORD PTR $T247879[ebp], ecx
$LN56@lGetTradeR@3:
	mov	ecx, DWORD PTR $T247879[ebp]
	call	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ	; CvPlot::getPlotCity
	mov	DWORD PTR _pToCity$229971[ebp], eax

; 4473 : 
; 4474 : 		CvPlayer* pFromPlayer = &GET_PLAYER(pFromCity->getOwner());

	mov	edx, DWORD PTR _pFromCity$229970[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR $T247893[ebp], eax
	mov	ecx, DWORD PTR $T247893[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pFromPlayer$229972[ebp], ecx

; 4475 : 		CvPlayer* pToPlayer = &GET_PLAYER(pToCity->getOwner());

	mov	edx, DWORD PTR _pToCity$229971[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR $T247905[ebp], eax
	mov	ecx, DWORD PTR $T247905[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pToPlayer$229973[ebp], ecx

; 4476 : 
; 4477 : 		lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 4478 : 		const int t = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$229974[ebp], eax

; 4479 : 
; 4480 : 		lua_pushinteger(L, pConnection->m_eDomain);

	mov	ecx, DWORD PTR _pConnection$229967[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4481 : 		lua_setfield(L, t, "Domain");

	push	OFFSET ??_C@_06HFDFFJHI@Domain?$AA@
	mov	ecx, DWORD PTR _t$229974[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4482 : 		lua_pushinteger(L, pkPlayer->getCivilizationType());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4483 : 		lua_setfield(L, t, "FromCivilizationType");

	push	OFFSET ??_C@_0BF@NALNMNGF@FromCivilizationType?$AA@
	mov	ecx, DWORD PTR _t$229974[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4484 : 		lua_pushinteger(L , pFromCity->getOwner());

	mov	eax, DWORD PTR _pFromCity$229970[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T247917[ebp], ecx
	mov	edx, DWORD PTR $T247917[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4485 : 		lua_setfield(L, t, "FromID");

	push	OFFSET ??_C@_06DKNCDPAE@FromID?$AA@
	mov	ecx, DWORD PTR _t$229974[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4486 : 		lua_pushstring(L, pFromCity->getName());

	lea	eax, DWORD PTR $T247688[ebp]
	push	eax
	mov	ecx, DWORD PTR _pFromCity$229970[ebp]
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	mov	DWORD PTR tv416[ebp], eax
	mov	ecx, DWORD PTR tv416[ebp]
	mov	DWORD PTR $T247921[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T247921[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T247688[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4487 : 		lua_setfield(L, t, "FromCityName");

	push	OFFSET ??_C@_0N@OCMKJIOC@FromCityName?$AA@
	mov	eax, DWORD PTR _t$229974[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4488 : 		CvLuaCity::Push(L, pFromCity);

	mov	edx, DWORD PTR _pFromCity$229970[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8

; 4489 : 		lua_setfield(L, t, "FromCity");

	push	OFFSET ??_C@_08GHOHLPJK@FromCity?$AA@
	mov	ecx, DWORD PTR _t$229974[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4490 : 		lua_pushinteger(L, GET_PLAYER(pConnection->m_eDestOwner).getCivilizationType());

	mov	eax, DWORD PTR _pConnection$229967[ebp]
	mov	ecx, DWORD PTR [eax+24]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247929[ebp], ecx
	mov	ecx, DWORD PTR $T247929[ebp]
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4491 : 		lua_setfield(L, t, "ToCivilizationType");

	push	OFFSET ??_C@_0BD@NGIEBJLD@ToCivilizationType?$AA@
	mov	eax, DWORD PTR _t$229974[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4492 : 		lua_pushinteger(L, pToCity->getOwner());

	mov	edx, DWORD PTR _pToCity$229971[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR $T247938[ebp], eax
	mov	ecx, DWORD PTR $T247938[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4493 : 		lua_setfield(L, t, "ToID");

	push	OFFSET ??_C@_04HMFFLKPC@ToID?$AA@
	mov	eax, DWORD PTR _t$229974[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4494 : 		lua_pushstring(L, pToCity->getName());

	lea	edx, DWORD PTR $T247689[ebp]
	push	edx
	mov	ecx, DWORD PTR _pToCity$229971[ebp]
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	mov	DWORD PTR tv590[ebp], eax
	mov	eax, DWORD PTR tv590[ebp]
	mov	DWORD PTR $T247942[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T247942[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T247689[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4495 : 		lua_setfield(L, t, "ToCityName");

	push	OFFSET ??_C@_0L@FMJOCCPE@ToCityName?$AA@
	mov	edx, DWORD PTR _t$229974[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4496 : 		CvLuaCity::Push(L, pToCity);

	mov	ecx, DWORD PTR _pToCity$229971[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8

; 4497 : 		lua_setfield(L, t, "ToCity");

	push	OFFSET ??_C@_06LINDMIIJ@ToCity?$AA@
	mov	eax, DWORD PTR _t$229974[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4498 : #ifdef AUI_WARNING_FIXES
; 4499 : 		const CvPlayerTrade* pFromPlayerTrade = pFromPlayer->GetTrade();
; 4500 : 		const CvPlayerTrade* pToPlayerTrade = pToPlayer->GetTrade();
; 4501 : 		lua_pushinteger(L, pFromPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_GOLD, true));
; 4502 : 		lua_setfield(L, t, "FromGPT");
; 4503 : 		lua_pushinteger(L, pToPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_GOLD, false));
; 4504 : 		lua_setfield(L, t, "ToGPT");
; 4505 : 		lua_pushinteger(L, pToPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_FOOD, false));
; 4506 : 		lua_setfield(L, t, "ToFood");
; 4507 : 		lua_pushinteger(L, pToPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_PRODUCTION, false));
; 4508 : 		lua_setfield(L, t, "ToProduction");
; 4509 : 		lua_pushinteger(L, pFromPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_SCIENCE, true));
; 4510 : 		lua_setfield(L, t, "FromScience");
; 4511 : 		lua_pushinteger(L, pToPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_SCIENCE, false));
; 4512 : #else
; 4513 : 		lua_pushinteger(L, pFromPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_GOLD, true));

	push	1
	push	2
	mov	edx, DWORD PTR _pConnection$229967[ebp]
	push	edx
	mov	ecx, DWORD PTR _pFromPlayer$229972[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4514 : 		lua_setfield(L, t, "FromGPT");

	push	OFFSET ??_C@_07CCHAPCOJ@FromGPT?$AA@
	mov	ecx, DWORD PTR _t$229974[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4515 : 		lua_pushinteger(L, pToPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_GOLD, false));

	push	0
	push	2
	mov	eax, DWORD PTR _pConnection$229967[ebp]
	push	eax
	mov	ecx, DWORD PTR _pToPlayer$229973[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4516 : 		lua_setfield(L, t, "ToGPT");

	push	OFFSET ??_C@_05HGOICCEF@ToGPT?$AA@
	mov	edx, DWORD PTR _t$229974[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4517 : 		lua_pushinteger(L, pToPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_FOOD, false));

	push	0
	push	0
	mov	ecx, DWORD PTR _pConnection$229967[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pToPlayer$229973[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4518 : 		lua_setfield(L, t, "ToFood");

	push	OFFSET ??_C@_06LKEHDIKI@ToFood?$AA@
	mov	eax, DWORD PTR _t$229974[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4519 : 		lua_pushinteger(L, pToPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_PRODUCTION, false));

	push	0
	push	1
	mov	edx, DWORD PTR _pConnection$229967[ebp]
	push	edx
	mov	ecx, DWORD PTR _pToPlayer$229973[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4520 : 		lua_setfield(L, t, "ToProduction");

	push	OFFSET ??_C@_0N@PMLOMJJM@ToProduction?$AA@
	mov	ecx, DWORD PTR _t$229974[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4521 : 		lua_pushinteger(L, pFromPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_SCIENCE, true));

	push	1
	push	3
	mov	eax, DWORD PTR _pConnection$229967[ebp]
	push	eax
	mov	ecx, DWORD PTR _pFromPlayer$229972[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4522 : 		lua_setfield(L, t, "FromScience");

	push	OFFSET ??_C@_0M@OGMGJHOF@FromScience?$AA@
	mov	edx, DWORD PTR _t$229974[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4523 : 		lua_pushinteger(L, pToPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_SCIENCE, false));

	push	0
	push	3
	mov	ecx, DWORD PTR _pConnection$229967[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pToPlayer$229973[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4524 : #endif
; 4525 : 		lua_setfield(L, t, "ToScience");

	push	OFFSET ??_C@_09LJGMJBJH@ToScience?$AA@
	mov	eax, DWORD PTR _t$229974[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4526 : 
; 4527 : 		ReligionTypes eToReligion = NO_RELIGION;

	mov	DWORD PTR _eToReligion$229977[ebp], -1

; 4528 : 		int iToPressure = 0;

	mov	DWORD PTR _iToPressure$229978[ebp], 0

; 4529 : 		ReligionTypes eFromReligion = NO_RELIGION;

	mov	DWORD PTR _eFromReligion$229979[ebp], -1

; 4530 : 		int iFromPressure = 0;

	mov	DWORD PTR _iFromPressure$229980[ebp], 0

; 4531 : 
; 4532 : 		pFromCity->GetCityReligions()->WouldExertTradeRoutePressureToward(pToCity, eToReligion, iToPressure);

	lea	edx, DWORD PTR _iToPressure$229978[ebp]
	push	edx
	lea	eax, DWORD PTR _eToReligion$229977[ebp]
	push	eax
	mov	ecx, DWORD PTR _pToCity$229971[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pFromCity$229970[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z ; CvCityReligions::WouldExertTradeRoutePressureToward

; 4533 : 		pToCity->GetCityReligions()->WouldExertTradeRoutePressureToward(pFromCity, eFromReligion, iFromPressure);

	lea	edx, DWORD PTR _iFromPressure$229980[ebp]
	push	edx
	lea	eax, DWORD PTR _eFromReligion$229979[ebp]
	push	eax
	mov	ecx, DWORD PTR _pFromCity$229970[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pToCity$229971[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z ; CvCityReligions::WouldExertTradeRoutePressureToward

; 4534 : 
; 4535 : 		// Internally pressure is now 10 times greater than what is shown to user
; 4536 : 		iToPressure /= GC.getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7900
	mov	DWORD PTR $T247950[ebp], edx
	mov	eax, DWORD PTR _iToPressure$229978[ebp]
	cdq
	idiv	DWORD PTR $T247950[ebp]
	mov	DWORD PTR _iToPressure$229978[ebp], eax

; 4537 : 		iFromPressure /= GC.getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7900
	mov	DWORD PTR $T247954[ebp], eax
	mov	eax, DWORD PTR _iFromPressure$229980[ebp]
	cdq
	idiv	DWORD PTR $T247954[ebp]
	mov	DWORD PTR _iFromPressure$229980[ebp], eax

; 4538 : 
; 4539 : 		lua_pushinteger(L, eToReligion);

	mov	ecx, DWORD PTR _eToReligion$229977[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4540 : 		lua_setfield(L, t, "ToReligion");

	push	OFFSET ??_C@_0L@OHINJIE@ToReligion?$AA@
	mov	eax, DWORD PTR _t$229974[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4541 : 		lua_pushinteger(L, iToPressure);

	mov	edx, DWORD PTR _iToPressure$229978[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4542 : 		lua_setfield(L, t, "ToPressure");

	push	OFFSET ??_C@_0L@BJIAJNJD@ToPressure?$AA@
	mov	ecx, DWORD PTR _t$229974[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4543 : 		lua_pushinteger(L, eFromReligion);

	mov	eax, DWORD PTR _eFromReligion$229979[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4544 : 		lua_setfield(L, t, "FromReligion");

	push	OFFSET ??_C@_0N@LACMGDJC@FromReligion?$AA@
	mov	edx, DWORD PTR _t$229974[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4545 : 		lua_pushinteger(L, iFromPressure);

	mov	ecx, DWORD PTR _iFromPressure$229980[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4546 : 		lua_setfield(L, t, "FromPressure");

	push	OFFSET ??_C@_0N@KHNECHIF@FromPressure?$AA@
	mov	eax, DWORD PTR _t$229974[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4547 : 
; 4548 : 		int iToDelta = pFromCity->GetCityCulture()->GetBaseTourism() * pFromCity->GetCityCulture()->GetTourismMultiplier(pToPlayer->GetID(), true, true, false, true, true);

	mov	edx, DWORD PTR _pToPlayer$229973[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T247963[ebp], eax
	mov	ecx, DWORD PTR _pFromCity$229970[ebp]
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetBaseTourism@CvCityCulture@@QAEHXZ	; CvCityCulture::GetBaseTourism
	mov	esi, eax
	push	1
	push	1
	push	0
	push	1
	push	1
	mov	ecx, DWORD PTR $T247963[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pFromCity$229970[ebp]
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetTourismMultiplier@CvCityCulture@@QBEHW4PlayerTypes@@_N1111@Z ; CvCityCulture::GetTourismMultiplier
	imul	esi, eax
	mov	DWORD PTR _iToDelta$229981[ebp], esi

; 4549 : 		int iFromDelta = pToCity->GetCityCulture()->GetBaseTourism() * pToCity->GetCityCulture()->GetTourismMultiplier(pkPlayer->GetID(), true, true, false, true, true);

	mov	edx, DWORD PTR _pkPlayer$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T247972[ebp], eax
	mov	ecx, DWORD PTR _pToCity$229971[ebp]
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetBaseTourism@CvCityCulture@@QAEHXZ	; CvCityCulture::GetBaseTourism
	mov	esi, eax
	push	1
	push	1
	push	0
	push	1
	push	1
	mov	ecx, DWORD PTR $T247972[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pToCity$229971[ebp]
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetTourismMultiplier@CvCityCulture@@QBEHW4PlayerTypes@@_N1111@Z ; CvCityCulture::GetTourismMultiplier
	imul	esi, eax
	mov	DWORD PTR _iFromDelta$229982[ebp], esi

; 4550 : 		lua_pushinteger(L, iFromDelta);

	mov	edx, DWORD PTR _iFromDelta$229982[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4551 : 		lua_setfield(L, t, "FromTourism");

	push	OFFSET ??_C@_0M@MEFPGMDL@FromTourism?$AA@
	mov	ecx, DWORD PTR _t$229974[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4552 : 		lua_pushinteger(L, iToDelta);

	mov	eax, DWORD PTR _iToDelta$229981[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4553 : 		lua_setfield(L, t, "ToTourism");

	push	OFFSET ??_C@_09JLPFGKEJ@ToTourism?$AA@
	mov	edx, DWORD PTR _t$229974[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4554 : 
; 4555 : 		lua_pushinteger(L, GC.getGame().getGameTurn() - pConnection->m_iTurnRouteComplete);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T247976[ebp], ecx
	mov	ecx, DWORD PTR $T247976[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	mov	edx, DWORD PTR _pConnection$229967[ebp]
	sub	eax, DWORD PTR [edx+392]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4556 : 		lua_setfield(L, t, "TurnsLeft");

	push	OFFSET ??_C@_09DIAGFAAC@TurnsLeft?$AA@
	mov	ecx, DWORD PTR _t$229974[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4557 : 
; 4558 : 		lua_rawseti(L, -2, index++);

	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv428[ebp], eax
	mov	ecx, DWORD PTR tv428[ebp]
	push	ecx
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax

; 4559 : 	}

	jmp	$LN5@lGetTradeR@3
$LN4@lGetTradeR@3:

; 4560 : 
; 4561 : 	return 1;

	mov	eax, 1

; 4562 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T247688[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR $T247689[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-316]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTradeRoutesToYou
EXTRN	?GetTechDifference@CvGameTrade@@QAEHW4PlayerTypes@@0@Z:PROC ; CvGameTrade::GetTechDifference
; Function compile flags: /Odtp
;	COMDAT ?lGetNumTechDifference@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T247997 = -16						; size = 4
$T247993 = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetNumTechDifference@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumTechDifference, COMDAT

; 4566 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 4567 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4568 : 	PlayerTypes eOtherPlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 4569 : 	lua_pushinteger(L, GC.getGame().GetGameTrade()->GetTechDifference(pkPlayer->GetID(), eOtherPlayer));

	mov	edx, DWORD PTR _pkPlayer$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T247993[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T247997[ebp], ecx
	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	eax, DWORD PTR $T247993[ebp]
	push	eax
	mov	ecx, DWORD PTR $T247997[ebp]
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	ecx, eax
	call	?GetTechDifference@CvGameTrade@@QAEHW4PlayerTypes@@0@Z ; CvGameTrade::GetTechDifference
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4570 : 	return 1;

	mov	eax, 1

; 4571 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumTechDifference@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumTechDifference
_TEXT	ENDS
PUBLIC	??_C@_03FJOCGODE@Era?$AA@			; `string'
PUBLIC	??_C@_07IMEECM@Creator?$AA@			; `string'
PUBLIC	??_C@_05FNNGFGLF@Index?$AA@			; `string'
EXTRN	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ:PROC ; CvGame::GetGameCulture
EXTRN	?GetBuildingGreatWork@CvCityBuildings@@QBEHW4BuildingClassTypes@@H@Z:PROC ; CvCityBuildings::GetBuildingGreatWork
EXTRN	?GetGreatWorkCount@CvBuildingEntry@@QBEHXZ:PROC	; CvBuildingEntry::GetGreatWorkCount
EXTRN	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetNumBuilding
EXTRN	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ:PROC ; CvCity::GetCityBuildings
EXTRN	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ:PROC ; CvPlayer::getCivilizationInfo
EXTRN	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ:PROC ; CvGlobals::getNumBuildingClassInfos
;	COMDAT ??_C@_03FJOCGODE@Era?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_03FJOCGODE@Era?$AA@ DB 'Era', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07IMEECM@Creator?$AA@
CONST	SEGMENT
??_C@_07IMEECM@Creator?$AA@ DB 'Creator', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05FNNGFGLF@Index?$AA@
CONST	SEGMENT
??_C@_05FNNGFGLF@Index?$AA@ DB 'Index', 00H		; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
CONST	ENDS
;	COMDAT ?lGetGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv216 = -84						; size = 4
$T248023 = -80						; size = 4
$T248019 = -76						; size = 4
$T248015 = -72						; size = 4
$T248011 = -68						; size = 4
$T248007 = -64						; size = 4
$T248003 = -60						; size = 4
_t$230022 = -56						; size = 4
_iEra$230025 = -52					; size = 4
_iGreatWorkIndex$230018 = -48				; size = 4
_iI$230014 = -44					; size = 4
_iNumSlots$230013 = -40					; size = 4
_pkBuilding$230010 = -36				; size = 4
_eBuilding$230006 = -32					; size = 4
_playerCivilizationInfo$230005 = -28			; size = 4
_iBuildingClassLoop$230001 = -24			; size = 4
_pkPlayer$ = -20					; size = 4
_iCityLoop$ = -16					; size = 4
_eGreatWorkClass$ = -12					; size = 4
_pCity$ = -8						; size = 4
_index$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetGreatWorks, COMDAT

; 4575 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H

; 4576 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4577 : 	GreatWorkClass eGreatWorkClass = (GreatWorkClass)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eGreatWorkClass$[ebp], eax

; 4578 : 
; 4579 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 4580 : 	int index = 1;

	mov	DWORD PTR _index$[ebp], 1

; 4581 : 
; 4582 : 	int iCityLoop;
; 4583 : 	CvCity* pCity = NULL;

	mov	DWORD PTR _pCity$[ebp], 0

; 4584 : 	for (pCity = pkPlayer->firstCity(&iCityLoop); pCity != NULL; pCity = pkPlayer->nextCity(&iCityLoop))

	push	0
	lea	eax, DWORD PTR _iCityLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pCity$[ebp], eax
	jmp	SHORT $LN14@lGetGreatW
$LN13@lGetGreatW:
	push	0
	lea	ecx, DWORD PTR _iCityLoop$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pCity$[ebp], eax
$LN14@lGetGreatW:
	cmp	DWORD PTR _pCity$[ebp], 0
	je	$LN12@lGetGreatW

; 4585 : 	{
; 4586 : #ifdef AUI_WARNING_FIXES
; 4587 : 		for (uint iBuildingClassLoop = 0; iBuildingClassLoop < GC.getNumBuildingClassInfos(); iBuildingClassLoop++)
; 4588 : #else
; 4589 : 		for(int iBuildingClassLoop = 0; iBuildingClassLoop < GC.getNumBuildingClassInfos(); iBuildingClassLoop++)

	mov	DWORD PTR _iBuildingClassLoop$230001[ebp], 0
	jmp	SHORT $LN11@lGetGreatW
$LN10@lGetGreatW:
	mov	edx, DWORD PTR _iBuildingClassLoop$230001[ebp]
	add	edx, 1
	mov	DWORD PTR _iBuildingClassLoop$230001[ebp], edx
$LN11@lGetGreatW:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	cmp	DWORD PTR _iBuildingClassLoop$230001[ebp], eax
	jge	$LN9@lGetGreatW

; 4590 : #endif
; 4591 : 		{
; 4592 : 			CvCivilizationInfo& playerCivilizationInfo = pkPlayer->getCivilizationInfo();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	DWORD PTR _playerCivilizationInfo$230005[ebp], eax

; 4593 : 			BuildingTypes eBuilding = (BuildingTypes)playerCivilizationInfo.getCivilizationBuildings((BuildingClassTypes)iBuildingClassLoop);

	mov	eax, DWORD PTR _iBuildingClassLoop$230001[ebp]
	push	eax
	mov	ecx, DWORD PTR _playerCivilizationInfo$230005[ebp]
	call	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationBuildings
	mov	DWORD PTR _eBuilding$230006[ebp], eax

; 4594 : 			if (eBuilding != NO_BUILDING)

	cmp	DWORD PTR _eBuilding$230006[ebp], -1
	je	$LN8@lGetGreatW

; 4595 : 			{
; 4596 : 				CvBuildingEntry *pkBuilding = GC.getBuildingInfo(eBuilding);

	mov	ecx, DWORD PTR _eBuilding$230006[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuilding$230010[ebp], eax

; 4597 : 				if (pkBuilding)

	cmp	DWORD PTR _pkBuilding$230010[ebp], 0
	je	$LN8@lGetGreatW

; 4598 : 				{
; 4599 : 					if (pCity->GetCityBuildings()->GetNumBuilding(eBuilding) > 0)

	mov	edx, DWORD PTR _eBuilding$230006[ebp]
	push	edx
	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	$LN8@lGetGreatW

; 4600 : 					{
; 4601 : 						int iNumSlots = pkBuilding->GetGreatWorkCount();

	mov	ecx, DWORD PTR _pkBuilding$230010[ebp]
	call	?GetGreatWorkCount@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetGreatWorkCount
	mov	DWORD PTR _iNumSlots$230013[ebp], eax

; 4602 : 						for (int iI = 0; iI < iNumSlots; iI++)

	mov	DWORD PTR _iI$230014[ebp], 0
	jmp	SHORT $LN5@lGetGreatW
$LN4@lGetGreatW:
	mov	eax, DWORD PTR _iI$230014[ebp]
	add	eax, 1
	mov	DWORD PTR _iI$230014[ebp], eax
$LN5@lGetGreatW:
	mov	ecx, DWORD PTR _iI$230014[ebp]
	cmp	ecx, DWORD PTR _iNumSlots$230013[ebp]
	jge	$LN8@lGetGreatW

; 4603 : 						{
; 4604 : 							int iGreatWorkIndex = pCity->GetCityBuildings()->GetBuildingGreatWork((BuildingClassTypes)iBuildingClassLoop, iI);

	mov	edx, DWORD PTR _iI$230014[ebp]
	push	edx
	mov	eax, DWORD PTR _iBuildingClassLoop$230001[ebp]
	push	eax
	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetBuildingGreatWork@CvCityBuildings@@QBEHW4BuildingClassTypes@@H@Z ; CvCityBuildings::GetBuildingGreatWork
	mov	DWORD PTR _iGreatWorkIndex$230018[ebp], eax

; 4605 : 							if (iGreatWorkIndex != -1)

	cmp	DWORD PTR _iGreatWorkIndex$230018[ebp], -1
	je	$LN2@lGetGreatW

; 4606 : 							{
; 4607 : 								if (GC.getGame().GetGameCulture()->m_CurrentGreatWorks[iGreatWorkIndex].m_eClassType == eGreatWorkClass)

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T248003[ebp], ecx
	mov	ecx, DWORD PTR $T248003[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	DWORD PTR $T248007[ebp], eax
	mov	edx, DWORD PTR _iGreatWorkIndex$230018[ebp]
	imul	edx, 48					; 00000030H
	mov	eax, DWORD PTR $T248007[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+edx+32]
	cmp	edx, DWORD PTR _eGreatWorkClass$[ebp]
	jne	$LN2@lGetGreatW

; 4608 : 								{
; 4609 : 									lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 4610 : 									const int t = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$230022[ebp], eax

; 4611 : 									lua_pushinteger(L, iGreatWorkIndex);

	mov	edx, DWORD PTR _iGreatWorkIndex$230018[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4612 : 									lua_setfield(L, t, "Index");

	push	OFFSET ??_C@_05FNNGFGLF@Index?$AA@
	mov	ecx, DWORD PTR _t$230022[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4613 : 									lua_pushinteger(L, GC.getGame().GetGameCulture()->m_CurrentGreatWorks[iGreatWorkIndex].m_ePlayer);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T248011[ebp], eax
	mov	ecx, DWORD PTR $T248011[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	DWORD PTR $T248015[ebp], eax
	mov	ecx, DWORD PTR _iGreatWorkIndex$230018[ebp]
	imul	ecx, 48					; 00000030H
	mov	edx, DWORD PTR $T248015[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+ecx+44]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4614 : 									lua_setfield(L, t, "Creator");

	push	OFFSET ??_C@_07IMEECM@Creator?$AA@
	mov	eax, DWORD PTR _t$230022[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4615 : 									int iEra = GC.getGame().GetGameCulture()->m_CurrentGreatWorks[iGreatWorkIndex].m_eEra;

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T248019[ebp], edx
	mov	ecx, DWORD PTR $T248019[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	DWORD PTR $T248023[ebp], eax
	mov	eax, DWORD PTR _iGreatWorkIndex$230018[ebp]
	imul	eax, 48					; 00000030H
	mov	ecx, DWORD PTR $T248023[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+eax+40]
	mov	DWORD PTR _iEra$230025[ebp], eax

; 4616 : 									lua_pushinteger(L, iEra);

	mov	ecx, DWORD PTR _iEra$230025[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4617 : 									lua_setfield(L, t, "Era");

	push	OFFSET ??_C@_03FJOCGODE@Era?$AA@
	mov	eax, DWORD PTR _t$230022[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4618 : 									lua_rawseti(L, -2, index++);

	mov	edx, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv216[ebp], edx
	mov	eax, DWORD PTR tv216[ebp]
	push	eax
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _index$[ebp]
	add	edx, 1
	mov	DWORD PTR _index$[ebp], edx
$LN2@lGetGreatW:

; 4619 : 								}
; 4620 : 							}
; 4621 : 						}

	jmp	$LN4@lGetGreatW
$LN8@lGetGreatW:

; 4622 : 					}
; 4623 : 				}
; 4624 : 			}
; 4625 : 		}

	jmp	$LN10@lGetGreatW
$LN9@lGetGreatW:

; 4626 : 	}

	jmp	$LN13@lGetGreatW
$LN12@lGetGreatW:

; 4627 : 
; 4628 : 	return 1;

	mov	eax, 1

; 4629 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetGreatWorks
_TEXT	ENDS
PUBLIC	??_C@_08HJCLEHJL@MusicEra?$AA@			; `string'
PUBLIC	??_C@_0N@DEOHMNP@MusicCreator?$AA@		; `string'
PUBLIC	??_C@_0L@DGPLEODG@MusicIndex?$AA@		; `string'
PUBLIC	??_C@_0M@LIOOKAGB@ArtifactEra?$AA@		; `string'
PUBLIC	??_C@_0BA@BMNGJNBE@ArtifactCreator?$AA@		; `string'
PUBLIC	??_C@_0O@OGMGPBBP@ArtifactIndex?$AA@		; `string'
PUBLIC	??_C@_06ENAOPKFO@ArtEra?$AA@			; `string'
PUBLIC	??_C@_0L@EGBMCLPK@ArtCreator?$AA@		; `string'
PUBLIC	??_C@_08DFKGJGCJ@ArtIndex?$AA@			; `string'
PUBLIC	??_C@_0L@GPAAPJBC@WritingEra?$AA@		; `string'
PUBLIC	??_C@_0P@NOHLBOEM@WritingCreator?$AA@		; `string'
PUBLIC	??_C@_0N@PAGDOFJE@WritingIndex?$AA@		; `string'
PUBLIC	??_C@_07OIOKBOME@iPlayer?$AA@			; `string'
EXTRN	?GetSwappableMusicIndex@CvPlayerCulture@@QBEHXZ:PROC ; CvPlayerCulture::GetSwappableMusicIndex
EXTRN	?GetSwappableArtifactIndex@CvPlayerCulture@@QBEHXZ:PROC ; CvPlayerCulture::GetSwappableArtifactIndex
EXTRN	?GetSwappableArtIndex@CvPlayerCulture@@QBEHXZ:PROC ; CvPlayerCulture::GetSwappableArtIndex
EXTRN	?GetSwappableWritingIndex@CvPlayerCulture@@QBEHXZ:PROC ; CvPlayerCulture::GetSwappableWritingIndex
EXTRN	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC	; CvTeam::isHasMet
EXTRN	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC	; CvTeam::isAtWar
EXTRN	?m_aTeams@CvTeam@@1PAV1@A:DWORD			; CvTeam::m_aTeams
;	COMDAT ??_C@_08HJCLEHJL@MusicEra?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_08HJCLEHJL@MusicEra?$AA@ DB 'MusicEra', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DEOHMNP@MusicCreator?$AA@
CONST	SEGMENT
??_C@_0N@DEOHMNP@MusicCreator?$AA@ DB 'MusicCreator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DGPLEODG@MusicIndex?$AA@
CONST	SEGMENT
??_C@_0L@DGPLEODG@MusicIndex?$AA@ DB 'MusicIndex', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LIOOKAGB@ArtifactEra?$AA@
CONST	SEGMENT
??_C@_0M@LIOOKAGB@ArtifactEra?$AA@ DB 'ArtifactEra', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BMNGJNBE@ArtifactCreator?$AA@
CONST	SEGMENT
??_C@_0BA@BMNGJNBE@ArtifactCreator?$AA@ DB 'ArtifactCreator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OGMGPBBP@ArtifactIndex?$AA@
CONST	SEGMENT
??_C@_0O@OGMGPBBP@ArtifactIndex?$AA@ DB 'ArtifactIndex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06ENAOPKFO@ArtEra?$AA@
CONST	SEGMENT
??_C@_06ENAOPKFO@ArtEra?$AA@ DB 'ArtEra', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EGBMCLPK@ArtCreator?$AA@
CONST	SEGMENT
??_C@_0L@EGBMCLPK@ArtCreator?$AA@ DB 'ArtCreator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08DFKGJGCJ@ArtIndex?$AA@
CONST	SEGMENT
??_C@_08DFKGJGCJ@ArtIndex?$AA@ DB 'ArtIndex', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GPAAPJBC@WritingEra?$AA@
CONST	SEGMENT
??_C@_0L@GPAAPJBC@WritingEra?$AA@ DB 'WritingEra', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NOHLBOEM@WritingCreator?$AA@
CONST	SEGMENT
??_C@_0P@NOHLBOEM@WritingCreator?$AA@ DB 'WritingCreator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PAGDOFJE@WritingIndex?$AA@
CONST	SEGMENT
??_C@_0N@PAGDOFJE@WritingIndex?$AA@ DB 'WritingIndex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07OIOKBOME@iPlayer?$AA@
CONST	SEGMENT
??_C@_07OIOKBOME@iPlayer?$AA@ DB 'iPlayer', 00H		; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
CONST	ENDS
;	COMDAT ?lGetOthersGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv375 = -196						; size = 4
$T248179 = -192						; size = 4
$T248175 = -188						; size = 4
$T248171 = -184						; size = 4
$T248167 = -180						; size = 4
$T248163 = -176						; size = 4
$T248159 = -172						; size = 4
$T248155 = -168						; size = 4
$T248151 = -164						; size = 4
$T248147 = -160						; size = 4
$T248143 = -156						; size = 4
$T248139 = -152						; size = 4
$T248135 = -148						; size = 4
$T248131 = -144						; size = 4
$T248127 = -140						; size = 4
$T248123 = -136						; size = 4
$T248119 = -132						; size = 4
$T248115 = -128						; size = 4
$T248111 = -124						; size = 4
$T248107 = -120						; size = 4
$T248103 = -116						; size = 4
$T248099 = -112						; size = 4
$T248095 = -108						; size = 4
$T248086 = -104						; size = 4
$T248077 = -100						; size = 4
$T248073 = -96						; size = 4
$T248069 = -92						; size = 4
$T248060 = -88						; size = 4
$T248051 = -84						; size = 4
$T248047 = -77						; size = 1
$T248038 = -76						; size = 4
$T248034 = -72						; size = 4
_iMusicWorkIndex$230065 = -68				; size = 4
_t$230042 = -64						; size = 4
_eWritingWorkPlayer$230045 = -60			; size = 4
_iWritingWorkIndex$230044 = -56				; size = 4
_iArtWorkIndex$230051 = -52				; size = 4
_eOtherPlayer$230036 = -48				; size = 4
_iArtifactWorkIndex$230058 = -44			; size = 4
_eMusicWorkEra$230067 = -40				; size = 4
_eArtWorkEra$230053 = -36				; size = 4
_eWritingWorkEra$230046 = -32				; size = 4
_eArtWorkPlayer$230052 = -28				; size = 4
_eMusicWorkPlayer$230066 = -24				; size = 4
_eArtifactWorkEra$230060 = -20				; size = 4
_eArtifactWorkPlayer$230059 = -16			; size = 4
_uiPlayer$230032 = -12					; size = 4
_pkPlayer$ = -8						; size = 4
_index$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetOthersGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetOthersGreatWorks, COMDAT

; 4633 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H

; 4634 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4635 : 
; 4636 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 4637 : 	int index = 1;

	mov	DWORD PTR _index$[ebp], 1

; 4638 : 
; 4639 : 	for (uint uiPlayer = 0; uiPlayer < MAX_MAJOR_CIVS; uiPlayer++)

	mov	DWORD PTR _uiPlayer$230032[ebp], 0
	jmp	SHORT $LN11@lGetOthers
$LN10@lGetOthers:
	mov	edx, DWORD PTR _uiPlayer$230032[ebp]
	add	edx, 1
	mov	DWORD PTR _uiPlayer$230032[ebp], edx
$LN11@lGetOthers:
	cmp	DWORD PTR _uiPlayer$230032[ebp], 22	; 00000016H
	jae	$LN9@lGetOthers

; 4640 : 	{
; 4641 : 		PlayerTypes eOtherPlayer = (PlayerTypes)uiPlayer;

	mov	eax, DWORD PTR _uiPlayer$230032[ebp]
	mov	DWORD PTR _eOtherPlayer$230036[ebp], eax

; 4642 : 
; 4643 : 		// skip if me
; 4644 : 		if (eOtherPlayer == pkPlayer->GetID())

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T248034[ebp], edx
	mov	eax, DWORD PTR _eOtherPlayer$230036[ebp]
	cmp	eax, DWORD PTR $T248034[ebp]
	jne	SHORT $LN8@lGetOthers

; 4645 : 		{
; 4646 : 			continue;

	jmp	SHORT $LN10@lGetOthers
$LN8@lGetOthers:

; 4647 : 		}
; 4648 : 
; 4649 : 		// skip if dead
; 4650 : 		if (!GET_PLAYER(eOtherPlayer).isAlive())

	mov	ecx, DWORD PTR _eOtherPlayer$230036[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T248038[ebp], ecx
	mov	edx, DWORD PTR $T248038[ebp]
	mov	al, BYTE PTR [edx+2256]
	mov	BYTE PTR $T248047[ebp], al
	movzx	ecx, BYTE PTR $T248047[ebp]
	test	ecx, ecx
	jne	SHORT $LN7@lGetOthers

; 4651 : 		{
; 4652 : 			continue;

	jmp	SHORT $LN10@lGetOthers
$LN7@lGetOthers:

; 4653 : 		}
; 4654 : 
; 4655 : 		// skip if at war
; 4656 : 		if (GET_TEAM(pkPlayer->getTeam()).isAtWar(GET_PLAYER(eOtherPlayer).getTeam()))

	mov	edx, DWORD PTR _eOtherPlayer$230036[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T248051[ebp], edx
	mov	eax, DWORD PTR $T248051[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T248060[ebp], eax
	mov	edx, DWORD PTR _pkPlayer$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T248069[ebp], eax
	mov	ecx, DWORD PTR $T248069[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T248073[ebp], ecx
	mov	edx, DWORD PTR $T248060[ebp]
	push	edx
	mov	ecx, DWORD PTR $T248073[ebp]
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@lGetOthers

; 4657 : 		{
; 4658 : 			continue;

	jmp	$LN10@lGetOthers
$LN6@lGetOthers:

; 4659 : 		}
; 4660 : 
; 4661 : 		// skip if have not met
; 4662 : 		if (!GET_TEAM(pkPlayer->getTeam()).isHasMet(GET_PLAYER(eOtherPlayer).getTeam()))

	mov	ecx, DWORD PTR _eOtherPlayer$230036[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T248077[ebp], ecx
	mov	edx, DWORD PTR $T248077[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T248086[ebp], eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T248095[ebp], eax
	mov	eax, DWORD PTR $T248095[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T248099[ebp], eax
	mov	ecx, DWORD PTR $T248086[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T248099[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN5@lGetOthers

; 4663 : 		{
; 4664 : 			continue;

	jmp	$LN10@lGetOthers
$LN5@lGetOthers:

; 4665 : 		}
; 4666 : 
; 4667 : 		lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 4668 : 		const int t = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$230042[ebp], eax

; 4669 : 
; 4670 : 		lua_pushinteger(L, eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$230036[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4671 : 		lua_setfield(L, t, "iPlayer");

	push	OFFSET ??_C@_07OIOKBOME@iPlayer?$AA@
	mov	ecx, DWORD PTR _t$230042[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4672 : 
; 4673 : 		// writing
; 4674 : 		int iWritingWorkIndex = GET_PLAYER(eOtherPlayer).GetCulture()->GetSwappableWritingIndex();

	mov	eax, DWORD PTR _eOtherPlayer$230036[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T248103[ebp], eax
	mov	ecx, DWORD PTR $T248103[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetSwappableWritingIndex@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetSwappableWritingIndex
	mov	DWORD PTR _iWritingWorkIndex$230044[ebp], eax

; 4675 : 		PlayerTypes eWritingWorkPlayer = NO_PLAYER;

	mov	DWORD PTR _eWritingWorkPlayer$230045[ebp], -1

; 4676 : 		EraTypes eWritingWorkEra = NO_ERA;

	mov	DWORD PTR _eWritingWorkEra$230046[ebp], -1

; 4677 : 		lua_pushinteger(L, iWritingWorkIndex);

	mov	ecx, DWORD PTR _iWritingWorkIndex$230044[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4678 : 		lua_setfield(L, t, "WritingIndex");

	push	OFFSET ??_C@_0N@PAGDOFJE@WritingIndex?$AA@
	mov	eax, DWORD PTR _t$230042[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4679 : 		if (iWritingWorkIndex != -1)

	cmp	DWORD PTR _iWritingWorkIndex$230044[ebp], -1
	je	SHORT $LN4@lGetOthers

; 4680 : 		{
; 4681 : 			eWritingWorkPlayer = GC.getGame().GetGameCulture()->m_CurrentGreatWorks[iWritingWorkIndex].m_ePlayer;

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T248107[ebp], edx
	mov	ecx, DWORD PTR $T248107[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	DWORD PTR $T248111[ebp], eax
	mov	eax, DWORD PTR _iWritingWorkIndex$230044[ebp]
	imul	eax, 48					; 00000030H
	mov	ecx, DWORD PTR $T248111[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+eax+44]
	mov	DWORD PTR _eWritingWorkPlayer$230045[ebp], eax

; 4682 : 			eWritingWorkEra = GC.getGame().GetGameCulture()->m_CurrentGreatWorks[iWritingWorkIndex].m_eEra;

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T248115[ebp], ecx
	mov	ecx, DWORD PTR $T248115[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	DWORD PTR $T248119[ebp], eax
	mov	edx, DWORD PTR _iWritingWorkIndex$230044[ebp]
	imul	edx, 48					; 00000030H
	mov	eax, DWORD PTR $T248119[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+edx+40]
	mov	DWORD PTR _eWritingWorkEra$230046[ebp], edx
$LN4@lGetOthers:

; 4683 : 		}
; 4684 : 		lua_pushinteger(L, eWritingWorkPlayer);

	mov	eax, DWORD PTR _eWritingWorkPlayer$230045[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4685 : 		lua_setfield(L, t, "WritingCreator");

	push	OFFSET ??_C@_0P@NOHLBOEM@WritingCreator?$AA@
	mov	edx, DWORD PTR _t$230042[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4686 : 		lua_pushinteger(L, eWritingWorkEra);

	mov	ecx, DWORD PTR _eWritingWorkEra$230046[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4687 : 		lua_setfield(L, t, "WritingEra");

	push	OFFSET ??_C@_0L@GPAAPJBC@WritingEra?$AA@
	mov	eax, DWORD PTR _t$230042[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4688 : 
; 4689 : 		// art
; 4690 : 		int iArtWorkIndex = GET_PLAYER(eOtherPlayer).GetCulture()->GetSwappableArtIndex();

	mov	edx, DWORD PTR _eOtherPlayer$230036[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T248123[ebp], edx
	mov	ecx, DWORD PTR $T248123[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetSwappableArtIndex@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetSwappableArtIndex
	mov	DWORD PTR _iArtWorkIndex$230051[ebp], eax

; 4691 : 		PlayerTypes eArtWorkPlayer = NO_PLAYER;

	mov	DWORD PTR _eArtWorkPlayer$230052[ebp], -1

; 4692 : 		EraTypes eArtWorkEra = NO_ERA;

	mov	DWORD PTR _eArtWorkEra$230053[ebp], -1

; 4693 : 		lua_pushinteger(L, iArtWorkIndex);

	mov	eax, DWORD PTR _iArtWorkIndex$230051[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4694 : 		lua_setfield(L, t, "ArtIndex");

	push	OFFSET ??_C@_08DFKGJGCJ@ArtIndex?$AA@
	mov	edx, DWORD PTR _t$230042[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4695 : 		if (iArtWorkIndex != -1)

	cmp	DWORD PTR _iArtWorkIndex$230051[ebp], -1
	je	SHORT $LN3@lGetOthers

; 4696 : 		{
; 4697 : 			eArtWorkPlayer = GC.getGame().GetGameCulture()->m_CurrentGreatWorks[iArtWorkIndex].m_ePlayer;

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T248127[ebp], ecx
	mov	ecx, DWORD PTR $T248127[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	DWORD PTR $T248131[ebp], eax
	mov	edx, DWORD PTR _iArtWorkIndex$230051[ebp]
	imul	edx, 48					; 00000030H
	mov	eax, DWORD PTR $T248131[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+edx+44]
	mov	DWORD PTR _eArtWorkPlayer$230052[ebp], edx

; 4698 : 			eArtWorkEra = GC.getGame().GetGameCulture()->m_CurrentGreatWorks[iArtWorkIndex].m_eEra;

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T248135[ebp], eax
	mov	ecx, DWORD PTR $T248135[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	DWORD PTR $T248139[ebp], eax
	mov	ecx, DWORD PTR _iArtWorkIndex$230051[ebp]
	imul	ecx, 48					; 00000030H
	mov	edx, DWORD PTR $T248139[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+ecx+40]
	mov	DWORD PTR _eArtWorkEra$230053[ebp], ecx
$LN3@lGetOthers:

; 4699 : 		}
; 4700 : 		lua_pushinteger(L, eArtWorkPlayer);

	mov	edx, DWORD PTR _eArtWorkPlayer$230052[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4701 : 		lua_setfield(L, t, "ArtCreator");

	push	OFFSET ??_C@_0L@EGBMCLPK@ArtCreator?$AA@
	mov	ecx, DWORD PTR _t$230042[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4702 : 		lua_pushinteger(L, eArtWorkEra);

	mov	eax, DWORD PTR _eArtWorkEra$230053[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4703 : 		lua_setfield(L, t, "ArtEra");

	push	OFFSET ??_C@_06ENAOPKFO@ArtEra?$AA@
	mov	edx, DWORD PTR _t$230042[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4704 : 
; 4705 : 		// artifact
; 4706 : 		int iArtifactWorkIndex = GET_PLAYER(eOtherPlayer).GetCulture()->GetSwappableArtifactIndex();

	mov	ecx, DWORD PTR _eOtherPlayer$230036[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T248143[ebp], ecx
	mov	ecx, DWORD PTR $T248143[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetSwappableArtifactIndex@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetSwappableArtifactIndex
	mov	DWORD PTR _iArtifactWorkIndex$230058[ebp], eax

; 4707 : 		PlayerTypes eArtifactWorkPlayer = NO_PLAYER;

	mov	DWORD PTR _eArtifactWorkPlayer$230059[ebp], -1

; 4708 : 		EraTypes eArtifactWorkEra = NO_ERA;

	mov	DWORD PTR _eArtifactWorkEra$230060[ebp], -1

; 4709 : 		lua_pushinteger(L, iArtifactWorkIndex);

	mov	edx, DWORD PTR _iArtifactWorkIndex$230058[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4710 : 		lua_setfield(L, t, "ArtifactIndex");

	push	OFFSET ??_C@_0O@OGMGPBBP@ArtifactIndex?$AA@
	mov	ecx, DWORD PTR _t$230042[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4711 : 		if (iArtifactWorkIndex != -1)

	cmp	DWORD PTR _iArtifactWorkIndex$230058[ebp], -1
	je	SHORT $LN2@lGetOthers

; 4712 : 		{
; 4713 : 			eArtifactWorkPlayer = GC.getGame().GetGameCulture()->m_CurrentGreatWorks[iArtifactWorkIndex].m_ePlayer;

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T248147[ebp], eax
	mov	ecx, DWORD PTR $T248147[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	DWORD PTR $T248151[ebp], eax
	mov	ecx, DWORD PTR _iArtifactWorkIndex$230058[ebp]
	imul	ecx, 48					; 00000030H
	mov	edx, DWORD PTR $T248151[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+ecx+44]
	mov	DWORD PTR _eArtifactWorkPlayer$230059[ebp], ecx

; 4714 : 			eArtifactWorkEra = GC.getGame().GetGameCulture()->m_CurrentGreatWorks[iArtifactWorkIndex].m_eEra;

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T248155[ebp], edx
	mov	ecx, DWORD PTR $T248155[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	DWORD PTR $T248159[ebp], eax
	mov	eax, DWORD PTR _iArtifactWorkIndex$230058[ebp]
	imul	eax, 48					; 00000030H
	mov	ecx, DWORD PTR $T248159[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+eax+40]
	mov	DWORD PTR _eArtifactWorkEra$230060[ebp], eax
$LN2@lGetOthers:

; 4715 : 		}
; 4716 : 		lua_pushinteger(L, eArtifactWorkPlayer);

	mov	ecx, DWORD PTR _eArtifactWorkPlayer$230059[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4717 : 		lua_setfield(L, t, "ArtifactCreator");

	push	OFFSET ??_C@_0BA@BMNGJNBE@ArtifactCreator?$AA@
	mov	eax, DWORD PTR _t$230042[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4718 : 		lua_pushinteger(L, eArtifactWorkEra);

	mov	edx, DWORD PTR _eArtifactWorkEra$230060[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4719 : 		lua_setfield(L, t, "ArtifactEra");

	push	OFFSET ??_C@_0M@LIOOKAGB@ArtifactEra?$AA@
	mov	ecx, DWORD PTR _t$230042[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4720 : 
; 4721 : 		// music
; 4722 : 		int iMusicWorkIndex = GET_PLAYER(eOtherPlayer).GetCulture()->GetSwappableMusicIndex();

	mov	eax, DWORD PTR _eOtherPlayer$230036[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T248163[ebp], eax
	mov	ecx, DWORD PTR $T248163[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetSwappableMusicIndex@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetSwappableMusicIndex
	mov	DWORD PTR _iMusicWorkIndex$230065[ebp], eax

; 4723 : 		PlayerTypes eMusicWorkPlayer = NO_PLAYER;

	mov	DWORD PTR _eMusicWorkPlayer$230066[ebp], -1

; 4724 : 		EraTypes eMusicWorkEra = NO_ERA;

	mov	DWORD PTR _eMusicWorkEra$230067[ebp], -1

; 4725 : 		lua_pushinteger(L, iMusicWorkIndex);

	mov	ecx, DWORD PTR _iMusicWorkIndex$230065[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4726 : 		lua_setfield(L, t, "MusicIndex");

	push	OFFSET ??_C@_0L@DGPLEODG@MusicIndex?$AA@
	mov	eax, DWORD PTR _t$230042[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4727 : 		if (iMusicWorkIndex != -1)

	cmp	DWORD PTR _iMusicWorkIndex$230065[ebp], -1
	je	SHORT $LN1@lGetOthers

; 4728 : 		{
; 4729 : 			eMusicWorkPlayer = GC.getGame().GetGameCulture()->m_CurrentGreatWorks[iMusicWorkIndex].m_ePlayer;

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T248167[ebp], edx
	mov	ecx, DWORD PTR $T248167[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	DWORD PTR $T248171[ebp], eax
	mov	eax, DWORD PTR _iMusicWorkIndex$230065[ebp]
	imul	eax, 48					; 00000030H
	mov	ecx, DWORD PTR $T248171[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+eax+44]
	mov	DWORD PTR _eMusicWorkPlayer$230066[ebp], eax

; 4730 : 			eMusicWorkEra = GC.getGame().GetGameCulture()->m_CurrentGreatWorks[iMusicWorkIndex].m_eEra;

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T248175[ebp], ecx
	mov	ecx, DWORD PTR $T248175[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	DWORD PTR $T248179[ebp], eax
	mov	edx, DWORD PTR _iMusicWorkIndex$230065[ebp]
	imul	edx, 48					; 00000030H
	mov	eax, DWORD PTR $T248179[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+edx+40]
	mov	DWORD PTR _eMusicWorkEra$230067[ebp], edx
$LN1@lGetOthers:

; 4731 : 		}
; 4732 : 		lua_pushinteger(L, eMusicWorkPlayer);

	mov	eax, DWORD PTR _eMusicWorkPlayer$230066[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4733 : 		lua_setfield(L, t, "MusicCreator");

	push	OFFSET ??_C@_0N@DEOHMNP@MusicCreator?$AA@
	mov	edx, DWORD PTR _t$230042[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4734 : 		lua_pushinteger(L, eMusicWorkEra);

	mov	ecx, DWORD PTR _eMusicWorkEra$230067[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4735 : 		lua_setfield(L, t, "MusicEra");

	push	OFFSET ??_C@_08HJCLEHJL@MusicEra?$AA@
	mov	eax, DWORD PTR _t$230042[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 4736 : 
; 4737 : 		lua_rawseti(L, -2, index++);

	mov	edx, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv375[ebp], edx
	mov	eax, DWORD PTR tv375[ebp]
	push	eax
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _index$[ebp]
	add	edx, 1
	mov	DWORD PTR _index$[ebp], edx

; 4738 : 	}

	jmp	$LN10@lGetOthers
$LN9@lGetOthers:

; 4739 : 
; 4740 : 	return 1;

	mov	eax, 1

; 4741 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetOthersGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetOthersGreatWorks
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetSwappableGreatWriting@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetSwappableGreatWriting@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetSwappableGreatWriting, COMDAT

; 4745 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 4746 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4747 : 	lua_pushinteger(L, pkPlayer->GetCulture()->GetSwappableWritingIndex());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetSwappableWritingIndex@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetSwappableWritingIndex
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4748 : 	return 1;

	mov	eax, 1

; 4749 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetSwappableGreatWriting@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetSwappableGreatWriting
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetSwappableGreatArt@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetSwappableGreatArt@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetSwappableGreatArt, COMDAT

; 4753 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 4754 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4755 : 	lua_pushinteger(L, pkPlayer->GetCulture()->GetSwappableArtIndex());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetSwappableArtIndex@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetSwappableArtIndex
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4756 : 	return 1;

	mov	eax, 1

; 4757 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetSwappableGreatArt@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetSwappableGreatArt
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetSwappableGreatArtifact@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetSwappableGreatArtifact@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetSwappableGreatArtifact, COMDAT

; 4761 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 4762 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4763 : 	lua_pushinteger(L, pkPlayer->GetCulture()->GetSwappableArtifactIndex());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetSwappableArtifactIndex@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetSwappableArtifactIndex
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4764 : 	return 1;

	mov	eax, 1

; 4765 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetSwappableGreatArtifact@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetSwappableGreatArtifact
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetSwappableGreatMusic@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetSwappableGreatMusic@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetSwappableGreatMusic, COMDAT

; 4769 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 4770 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4771 : 	lua_pushinteger(L, pkPlayer->GetCulture()->GetSwappableMusicIndex());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetSwappableMusicIndex@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetSwappableMusicIndex
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4772 : 	return 1;

	mov	eax, 1

; 4773 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetSwappableGreatMusic@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetSwappableGreatMusic
_TEXT	ENDS
EXTRN	?GetHappinessFromMinorCivs@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetHappinessFromMinorCivs
; Function compile flags: /Odtp
;	COMDAT ?lGetHappinessFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromMinorCivs, COMDAT

; 4778 : {

	push	ebp
	mov	ebp, esp

; 4779 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessFromMinorCivs);

	push	OFFSET ?GetHappinessFromMinorCivs@CvPlayer@@QBEHXZ ; CvPlayer::GetHappinessFromMinorCivs
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 4780 : }

	pop	ebp
	ret	0
?lGetHappinessFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromMinorCivs
_TEXT	ENDS
EXTRN	?GetHappinessFromMinor@CvPlayer@@QBEHW4PlayerTypes@@@Z:PROC ; CvPlayer::GetHappinessFromMinor
; Function compile flags: /Odtp
;	COMDAT ?lGetHappinessFromMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromMinor, COMDAT

; 4784 : {

	push	ebp
	mov	ebp, esp

; 4785 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessFromMinor);

	push	OFFSET ?GetHappinessFromMinor@CvPlayer@@QBEHW4PlayerTypes@@@Z ; CvPlayer::GetHappinessFromMinor
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum PlayerTypes>
	add	esp, 8

; 4786 : }

	pop	ebp
	ret	0
?lGetHappinessFromMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromMinor
_TEXT	ENDS
EXTRN	?GetBarbarianCombatBonus@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetBarbarianCombatBonus
; Function compile flags: /Odtp
;	COMDAT ?lGetBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBarbarianCombatBonus, COMDAT

; 4789 : {

	push	ebp
	mov	ebp, esp

; 4790 : 	return BasicLuaMethod(L, &CvPlayerAI::GetBarbarianCombatBonus);

	push	OFFSET ?GetBarbarianCombatBonus@CvPlayer@@QBEHXZ ; CvPlayer::GetBarbarianCombatBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 4791 : }

	pop	ebp
	ret	0
?lGetBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBarbarianCombatBonus
_TEXT	ENDS
EXTRN	?SetBarbarianCombatBonus@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::SetBarbarianCombatBonus
; Function compile flags: /Odtp
;	COMDAT ?lSetBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetBarbarianCombatBonus, COMDAT

; 4794 : {

	push	ebp
	mov	ebp, esp

; 4795 : 	return BasicLuaMethod(L, &CvPlayerAI::SetBarbarianCombatBonus);

	push	OFFSET ?SetBarbarianCombatBonus@CvPlayer@@QAEXH@Z ; CvPlayer::SetBarbarianCombatBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 4796 : }

	pop	ebp
	ret	0
?lSetBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetBarbarianCombatBonus
_TEXT	ENDS
EXTRN	?ChangeBarbarianCombatBonus@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeBarbarianCombatBonus
; Function compile flags: /Odtp
;	COMDAT ?lChangeBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeBarbarianCombatBonus, COMDAT

; 4799 : {

	push	ebp
	mov	ebp, esp

; 4800 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeBarbarianCombatBonus);

	push	OFFSET ?ChangeBarbarianCombatBonus@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeBarbarianCombatBonus
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 4801 : }

	pop	ebp
	ret	0
?lChangeBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeBarbarianCombatBonus
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetCombatBonusVsHigherTech@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T248204 = -12						; size = 4
$T248203 = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCombatBonusVsHigherTech@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCombatBonusVsHigherTech, COMDAT

; 4804 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 4805 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4806 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lGetCombat

; 4807 : 	{
; 4808 : 		lua_pushinteger(L, pkPlayer->GetPlayerTraits()->GetCombatBonusVsHigherTech());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T248203[ebp], eax
	mov	ecx, DWORD PTR $T248203[ebp]
	mov	edx, DWORD PTR [ecx+240]
	mov	DWORD PTR $T248204[ebp], edx
	mov	eax, DWORD PTR $T248204[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetCombat:

; 4809 : 	}
; 4810 : 	return 1;

	mov	eax, 1

; 4811 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCombatBonusVsHigherTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCombatBonusVsHigherTech
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetCombatBonusVsLargerCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T248211 = -12						; size = 4
$T248210 = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCombatBonusVsLargerCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCombatBonusVsLargerCiv, COMDAT

; 4814 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 4815 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4816 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lGetCombat@2

; 4817 : 	{
; 4818 : 		lua_pushinteger(L, pkPlayer->GetPlayerTraits()->GetCombatBonusVsLargerCiv());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T248210[ebp], eax
	mov	ecx, DWORD PTR $T248210[ebp]
	mov	edx, DWORD PTR [ecx+244]
	mov	DWORD PTR $T248211[ebp], edx
	mov	eax, DWORD PTR $T248211[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetCombat@2:

; 4819 : 	}
; 4820 : 	return 1;

	mov	eax, 1

; 4821 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCombatBonusVsLargerCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCombatBonusVsLargerCiv
_TEXT	ENDS
EXTRN	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z:PROC ; CvPlayerPolicies::GetNumericModifier
EXTRN	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ:PROC ; CvPlayer::GetPlayerPolicies
; Function compile flags: /Odtp
;	COMDAT ?lGetCombatBonusVsSmallerCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCombatBonusVsSmallerCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCombatBonusVsSmallerCiv, COMDAT

; 4825 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 4826 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4827 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lGetCombat@3

; 4828 : 	{
; 4829 : 		lua_pushinteger(L, pkPlayer->GetPlayerPolicies()->GetNumericModifier(POLICYMOD_COMBAT_BONUS_VS_SMALLER_CIV));

	push	46					; 0000002eH
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetCombat@3:

; 4830 : 	}
; 4831 : 	return 1;

	mov	eax, 1

; 4832 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCombatBonusVsSmallerCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCombatBonusVsSmallerCiv
_TEXT	ENDS
EXTRN	?IsAlwaysSeeBarbCamps@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::IsAlwaysSeeBarbCamps
; Function compile flags: /Odtp
;	COMDAT ?lIsAlwaysSeeBarbCamps@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAlwaysSeeBarbCamps@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsAlwaysSeeBarbCamps, COMDAT

; 4836 : {

	push	ebp
	mov	ebp, esp

; 4837 : 	return BasicLuaMethod(L, &CvPlayerAI::IsAlwaysSeeBarbCamps);

	push	OFFSET ?IsAlwaysSeeBarbCamps@CvPlayer@@QBE_NXZ ; CvPlayer::IsAlwaysSeeBarbCamps
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 4838 : }

	pop	ebp
	ret	0
?lIsAlwaysSeeBarbCamps@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsAlwaysSeeBarbCamps
_TEXT	ENDS
EXTRN	?SetAlwaysSeeBarbCampsCount@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::SetAlwaysSeeBarbCampsCount
; Function compile flags: /Odtp
;	COMDAT ?lSetAlwaysSeeBarbCampsCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetAlwaysSeeBarbCampsCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetAlwaysSeeBarbCampsCount, COMDAT

; 4841 : {

	push	ebp
	mov	ebp, esp

; 4842 : 	return BasicLuaMethod(L, &CvPlayerAI::SetAlwaysSeeBarbCampsCount);

	push	OFFSET ?SetAlwaysSeeBarbCampsCount@CvPlayer@@QAEXH@Z ; CvPlayer::SetAlwaysSeeBarbCampsCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 4843 : }

	pop	ebp
	ret	0
?lSetAlwaysSeeBarbCampsCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetAlwaysSeeBarbCampsCount
_TEXT	ENDS
EXTRN	?ChangeAlwaysSeeBarbCampsCount@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeAlwaysSeeBarbCampsCount
; Function compile flags: /Odtp
;	COMDAT ?lChangeAlwaysSeeBarbCampsCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeAlwaysSeeBarbCampsCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeAlwaysSeeBarbCampsCount, COMDAT

; 4846 : {

	push	ebp
	mov	ebp, esp

; 4847 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeAlwaysSeeBarbCampsCount);

	push	OFFSET ?ChangeAlwaysSeeBarbCampsCount@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeAlwaysSeeBarbCampsCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 4848 : }

	pop	ebp
	ret	0
?lChangeAlwaysSeeBarbCampsCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeAlwaysSeeBarbCampsCount
_TEXT	ENDS
EXTRN	?GetGarrisonedCityRangeStrikeModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetGarrisonedCityRangeStrikeModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetGarrisonedCityRangeStrikeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGarrisonedCityRangeStrikeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGarrisonedCityRangeStrikeModifier, COMDAT

; 4851 : {

	push	ebp
	mov	ebp, esp

; 4852 : 	return BasicLuaMethod(L, &CvPlayerAI::GetGarrisonedCityRangeStrikeModifier);

	push	OFFSET ?GetGarrisonedCityRangeStrikeModifier@CvPlayer@@QBEHXZ ; CvPlayer::GetGarrisonedCityRangeStrikeModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 4853 : }

	pop	ebp
	ret	0
?lGetGarrisonedCityRangeStrikeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGarrisonedCityRangeStrikeModifier
_TEXT	ENDS
EXTRN	?ChangeGarrisonedCityRangeStrikeModifier@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeGarrisonedCityRangeStrikeModifier
; Function compile flags: /Odtp
;	COMDAT ?lChangeGarrisonedCityRangeStrikeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeGarrisonedCityRangeStrikeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeGarrisonedCityRangeStrikeModifier, COMDAT

; 4856 : {

	push	ebp
	mov	ebp, esp

; 4857 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeGarrisonedCityRangeStrikeModifier);

	push	OFFSET ?ChangeGarrisonedCityRangeStrikeModifier@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeGarrisonedCityRangeStrikeModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 4858 : }

	pop	ebp
	ret	0
?lChangeGarrisonedCityRangeStrikeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeGarrisonedCityRangeStrikeModifier
_TEXT	ENDS
EXTRN	?IsPolicyBlocked@CvPlayerPolicies@@QBE_NW4PolicyTypes@@@Z:PROC ; CvPlayerPolicies::IsPolicyBlocked
; Function compile flags: /Odtp
;	COMDAT ?lIsPolicyBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bResult$ = -5						; size = 1
_ePolicy$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsPolicyBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsPolicyBlocked, COMDAT

; 4863 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 4864 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4865 : 	const PolicyTypes ePolicy = (PolicyTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePolicy$[ebp], eax

; 4866 : 
; 4867 : 	const bool bResult = pkPlayer->GetPlayerPolicies()->IsPolicyBlocked(ePolicy);

	mov	edx, DWORD PTR _ePolicy$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBlocked@CvPlayerPolicies@@QBE_NW4PolicyTypes@@@Z ; CvPlayerPolicies::IsPolicyBlocked
	mov	BYTE PTR _bResult$[ebp], al

; 4868 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 4869 : 	return 1;

	mov	eax, 1

; 4870 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPolicyBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsPolicyBlocked
_TEXT	ENDS
EXTRN	?IsPolicyBranchBlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z:PROC ; CvPlayerPolicies::IsPolicyBranchBlocked
; Function compile flags: /Odtp
;	COMDAT ?lIsPolicyBranchBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bResult$ = -5						; size = 1
_ePolicyBranch$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPolicyBranchBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPolicyBranchBlocked, COMDAT

; 4875 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 4876 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4877 : 	const PolicyBranchTypes ePolicyBranch = (PolicyBranchTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePolicyBranch$[ebp], eax

; 4878 : 
; 4879 : 	const bool bResult = pkPlayer->GetPlayerPolicies()->IsPolicyBranchBlocked(ePolicyBranch);

	mov	edx, DWORD PTR _ePolicyBranch$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchBlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchBlocked
	mov	BYTE PTR _bResult$[ebp], al

; 4880 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 4881 : 	return 1;

	mov	eax, 1

; 4882 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPolicyBranchBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPolicyBranchBlocked
_TEXT	ENDS
EXTRN	?IsPolicyBranchUnlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z:PROC ; CvPlayerPolicies::IsPolicyBranchUnlocked
; Function compile flags: /Odtp
;	COMDAT ?lIsPolicyBranchUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bResult$ = -5						; size = 1
_eBranchType$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPolicyBranchUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPolicyBranchUnlocked, COMDAT

; 4887 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 4888 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4889 : 	const PolicyBranchTypes eBranchType = (PolicyBranchTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBranchType$[ebp], eax

; 4890 : 
; 4891 : 	const bool bResult = pkPlayer->GetPlayerPolicies()->IsPolicyBranchUnlocked(eBranchType);

	mov	edx, DWORD PTR _eBranchType$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchUnlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchUnlocked
	mov	BYTE PTR _bResult$[ebp], al

; 4892 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 4893 : 	return 1;

	mov	eax, 1

; 4894 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPolicyBranchUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPolicyBranchUnlocked
_TEXT	ENDS
EXTRN	?SetPolicyBranchUnlocked@CvPlayerPolicies@@QAEXW4PolicyBranchTypes@@_N1@Z:PROC ; CvPlayerPolicies::SetPolicyBranchUnlocked
; Function compile flags: /Odtp
;	COMDAT ?lSetPolicyBranchUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bNewValue$ = -13					; size = 1
_pkPlayer$ = -12					; size = 4
_eBranchType$ = -8					; size = 4
_bRevolution$ = -1					; size = 1
_L$ = 8							; size = 4
?lSetPolicyBranchUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetPolicyBranchUnlocked, COMDAT

; 4899 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 4900 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4901 : 	const PolicyBranchTypes eBranchType = (PolicyBranchTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBranchType$[ebp], eax

; 4902 : 	const bool bNewValue = lua_toboolean(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bNewValue$[ebp], al

; 4903 : 	const bool bRevolution = lua_toboolean(L, 4);

	push	4
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bRevolution$[ebp], dl

; 4904 : 
; 4905 : 	pkPlayer->GetPlayerPolicies()->SetPolicyBranchUnlocked(eBranchType, bNewValue, bRevolution);

	movzx	eax, BYTE PTR _bRevolution$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bNewValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eBranchType$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?SetPolicyBranchUnlocked@CvPlayerPolicies@@QAEXW4PolicyBranchTypes@@_N1@Z ; CvPlayerPolicies::SetPolicyBranchUnlocked

; 4906 : 	return 1;

	mov	eax, 1

; 4907 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetPolicyBranchUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetPolicyBranchUnlocked
_TEXT	ENDS
EXTRN	?GetNumPolicyBranchesUnlocked@CvPlayerPolicies@@QBEHXZ:PROC ; CvPlayerPolicies::GetNumPolicyBranchesUnlocked
; Function compile flags: /Odtp
;	COMDAT ?lGetNumPolicyBranchesUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumPolicyBranchesUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumPolicyBranchesUnlocked, COMDAT

; 4912 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 4913 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4914 : 
; 4915 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetNumPolicyBranchesUnlocked();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumPolicyBranchesUnlocked@CvPlayerPolicies@@QBEHXZ ; CvPlayerPolicies::GetNumPolicyBranchesUnlocked
	mov	DWORD PTR _iResult$[ebp], eax

; 4916 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4917 : 	return 1;

	mov	eax, 1

; 4918 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumPolicyBranchesUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumPolicyBranchesUnlocked
_TEXT	ENDS
EXTRN	?GetNumPolicyBranchesAllowed@CvPlayerPolicies@@QBEHXZ:PROC ; CvPlayerPolicies::GetNumPolicyBranchesAllowed
; Function compile flags: /Odtp
;	COMDAT ?lGetNumPolicyBranchesAllowed@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumPolicyBranchesAllowed@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumPolicyBranchesAllowed, COMDAT

; 4923 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 4924 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4925 : 
; 4926 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetNumPolicyBranchesAllowed();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumPolicyBranchesAllowed@CvPlayerPolicies@@QBEHXZ ; CvPlayerPolicies::GetNumPolicyBranchesAllowed
	mov	DWORD PTR _iResult$[ebp], eax

; 4927 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4928 : 	return 1;

	mov	eax, 1

; 4929 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumPolicyBranchesAllowed@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumPolicyBranchesAllowed
_TEXT	ENDS
EXTRN	?GetPolicyBranchChosen@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@H@Z:PROC ; CvPlayerPolicies::GetPolicyBranchChosen
; Function compile flags: /Odtp
;	COMDAT ?lGetPolicyBranchChosen@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_iResult$ = -8						; size = 4
_iID$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetPolicyBranchChosen@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyBranchChosen, COMDAT

; 4934 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 4935 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4936 : 	const int iID = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iID$[ebp], eax

; 4937 : 
; 4938 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetPolicyBranchChosen(iID);

	mov	edx, DWORD PTR _iID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetPolicyBranchChosen@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@H@Z ; CvPlayerPolicies::GetPolicyBranchChosen
	mov	DWORD PTR _iResult$[ebp], eax

; 4939 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4940 : 	return 1;

	mov	eax, 1

; 4941 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPolicyBranchChosen@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyBranchChosen
_TEXT	ENDS
EXTRN	?GetNumPoliciesOwned@CvPlayerPolicies@@QBEHXZ:PROC ; CvPlayerPolicies::GetNumPoliciesOwned
; Function compile flags: /Odtp
;	COMDAT ?lGetNumPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNumPolicies, COMDAT

; 4947 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 4948 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4949 : 
; 4950 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetNumPoliciesOwned();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumPoliciesOwned@CvPlayerPolicies@@QBEHXZ ; CvPlayerPolicies::GetNumPoliciesOwned
	mov	DWORD PTR _iResult$[ebp], eax

; 4951 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 4952 : 	return 1;

	mov	eax, 1

; 4953 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNumPolicies
_TEXT	ENDS
EXTRN	?GetNumPoliciesOwnedInBranch@CvPlayerPolicies@@QBEHW4PolicyBranchTypes@@@Z:PROC ; CvPlayerPolicies::GetNumPoliciesOwnedInBranch
; Function compile flags: /Odtp
;	COMDAT ?lGetNumPoliciesInBranch@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eIndex$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumPoliciesInBranch@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumPoliciesInBranch, COMDAT

; 4958 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 4959 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4960 : 	const PolicyBranchTypes eIndex = (PolicyBranchTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eIndex$[ebp], eax

; 4961 : 
; 4962 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetNumPoliciesOwnedInBranch(eIndex);

	mov	edx, DWORD PTR _eIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumPoliciesOwnedInBranch@CvPlayerPolicies@@QBEHW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::GetNumPoliciesOwnedInBranch
	mov	DWORD PTR _iResult$[ebp], eax

; 4963 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 4964 : 	return 1;

	mov	eax, 1

; 4965 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumPoliciesInBranch@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumPoliciesInBranch
_TEXT	ENDS
EXTRN	?HasPolicy@CvPlayerPolicies@@QBE_NW4PolicyTypes@@@Z:PROC ; CvPlayerPolicies::HasPolicy
; Function compile flags: /Odtp
;	COMDAT ?lHasPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_iIndex$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lHasPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lHasPolicy, COMDAT

; 4970 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 4971 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4972 : 	const PolicyTypes iIndex = (PolicyTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 4973 : 
; 4974 : 	const bool bResult
; 4975 : 	    = pkPlayer->GetPlayerPolicies()->HasPolicy(iIndex);

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?HasPolicy@CvPlayerPolicies@@QBE_NW4PolicyTypes@@@Z ; CvPlayerPolicies::HasPolicy
	mov	BYTE PTR _bResult$[ebp], al

; 4976 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 4977 : 	return 1;

	mov	eax, 1

; 4978 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lHasPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lHasPolicy
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PolicyTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PolicyTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PolicyTypes,bool>
EXTRN	?setHasPolicy@CvPlayer@@QAEXW4PolicyTypes@@_N@Z:PROC ; CvPlayer::setHasPolicy
; Function compile flags: /Odtp
;	COMDAT ?lSetHasPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetHasPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lSetHasPolicy, COMDAT

; 4982 : {

	push	ebp
	mov	ebp, esp

; 4983 : 	return BasicLuaMethod(L, &CvPlayerAI::setHasPolicy);

	push	OFFSET ?setHasPolicy@CvPlayer@@QAEXW4PolicyTypes@@_N@Z ; CvPlayer::setHasPolicy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PolicyTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PolicyTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PolicyTypes,bool>
	add	esp, 8

; 4984 : }

	pop	ebp
	ret	0
?lSetHasPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lSetHasPolicy
_TEXT	ENDS
EXTRN	?getNextPolicyCost@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getNextPolicyCost
; Function compile flags: /Odtp
;	COMDAT ?lGetNextPolicyCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNextPolicyCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNextPolicyCost, COMDAT

; 4988 : {

	push	ebp
	mov	ebp, esp

; 4989 : 	return BasicLuaMethod(L, &CvPlayerAI::getNextPolicyCost);

	push	OFFSET ?getNextPolicyCost@CvPlayer@@QBEHXZ ; CvPlayer::getNextPolicyCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 4990 : }

	pop	ebp
	ret	0
?lGetNextPolicyCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNextPolicyCost
_TEXT	ENDS
EXTRN	?CanAdoptPolicy@CvPlayerPolicies@@QBE_NW4PolicyTypes@@_N@Z:PROC ; CvPlayerPolicies::CanAdoptPolicy
; Function compile flags: /Odtp
;	COMDAT ?lCanAdoptPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$230259 = -17					; size = 1
_pkPolicies$230257 = -16				; size = 4
_pkPlayer$ = -12					; size = 4
_ePolicy$ = -8						; size = 4
_bIgnoreCost$ = -1					; size = 1
_L$ = 8							; size = 4
?lCanAdoptPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanAdoptPolicy, COMDAT

; 4994 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 4995 : 	const PolicyTypes ePolicy = static_cast<PolicyTypes>(luaL_checkinteger(L, 2));

	push	2
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _ePolicy$[ebp], eax

; 4996 : 	bool bIgnoreCost = luaL_optbool(L, 3, false);

	push	0
	push	3
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _bIgnoreCost$[ebp], al

; 4997 : 
; 4998 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 4999 : 	CvAssert(pkPlayer != NULL);
; 5000 : 	if(pkPlayer != NULL)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN2@lCanAdoptP

; 5001 : 	{
; 5002 : 		CvPlayerPolicies* pkPolicies = pkPlayer->GetPlayerPolicies();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	DWORD PTR _pkPolicies$230257[ebp], eax

; 5003 : 		CvAssert(pkPolicies != NULL);
; 5004 : 		if(pkPolicies != NULL)

	cmp	DWORD PTR _pkPolicies$230257[ebp], 0
	je	SHORT $LN2@lCanAdoptP

; 5005 : 		{
; 5006 : 			bool bResult = pkPolicies->CanAdoptPolicy(ePolicy, bIgnoreCost);

	movzx	eax, BYTE PTR _bIgnoreCost$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePolicy$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPolicies$230257[ebp]
	call	?CanAdoptPolicy@CvPlayerPolicies@@QBE_NW4PolicyTypes@@_N@Z ; CvPlayerPolicies::CanAdoptPolicy
	mov	BYTE PTR _bResult$230259[ebp], al

; 5007 : 			lua_pushboolean(L, bResult);

	movzx	edx, BYTE PTR _bResult$230259[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 5008 : 			return 1;

	mov	eax, 1
	jmp	SHORT $LN3@lCanAdoptP
$LN2@lCanAdoptP:

; 5009 : 		}
; 5010 : 	}
; 5011 : 
; 5012 : 	return 0;

	xor	eax, eax
$LN3@lCanAdoptP:

; 5013 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanAdoptPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanAdoptPolicy
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PolicyTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PolicyTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PolicyTypes>
EXTRN	?doAdoptPolicy@CvPlayer@@QAEXW4PolicyTypes@@@Z:PROC ; CvPlayer::doAdoptPolicy
; Function compile flags: /Odtp
;	COMDAT ?lDoAdoptPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoAdoptPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lDoAdoptPolicy, COMDAT

; 5017 : {

	push	ebp
	mov	ebp, esp

; 5018 : 	return BasicLuaMethod(L, &CvPlayerAI::doAdoptPolicy);

	push	OFFSET ?doAdoptPolicy@CvPlayer@@QAEXW4PolicyTypes@@@Z ; CvPlayer::doAdoptPolicy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PolicyTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PolicyTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PolicyTypes>
	add	esp, 8

; 5019 : }

	pop	ebp
	ret	0
?lDoAdoptPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lDoAdoptPolicy
_TEXT	ENDS
EXTRN	?CanUnlockPolicyBranch@CvPlayerPolicies@@QAE_NW4PolicyBranchTypes@@@Z:PROC ; CvPlayerPolicies::CanUnlockPolicyBranch
; Function compile flags: /Odtp
;	COMDAT ?lCanUnlockPolicyBranch@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_iIndex$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lCanUnlockPolicyBranch@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCanUnlockPolicyBranch, COMDAT

; 5025 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 5026 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5027 : 	const PolicyBranchTypes iIndex = (PolicyBranchTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 5028 : 
; 5029 : 	const bool bResult
; 5030 : 	    = pkPlayer->GetPlayerPolicies()->CanUnlockPolicyBranch(iIndex);

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?CanUnlockPolicyBranch@CvPlayerPolicies@@QAE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::CanUnlockPolicyBranch
	mov	BYTE PTR _bResult$[ebp], al

; 5031 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 5032 : 	return 1;

	mov	eax, 1

; 5033 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanUnlockPolicyBranch@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCanUnlockPolicyBranch
_TEXT	ENDS
EXTRN	?GetDominantPolicyBranchForTitle@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ:PROC ; CvPlayerPolicies::GetDominantPolicyBranchForTitle
; Function compile flags: /Odtp
;	COMDAT ?lGetDominantPolicyBranchForTitle@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetDominantPolicyBranchForTitle@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetDominantPolicyBranchForTitle, COMDAT

; 5038 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 5039 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5040 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetDominantPolicyBranchForTitle();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetDominantPolicyBranchForTitle@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ ; CvPlayerPolicies::GetDominantPolicyBranchForTitle
	mov	DWORD PTR _iResult$[ebp], eax

; 5041 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 5042 : 	return 1;

	mov	eax, 1

; 5043 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetDominantPolicyBranchForTitle@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetDominantPolicyBranchForTitle
_TEXT	ENDS
EXTRN	?GetLateGamePolicyTree@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ:PROC ; CvPlayerPolicies::GetLateGamePolicyTree
; Function compile flags: /Odtp
;	COMDAT ?lGetLateGamePolicyTree@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetLateGamePolicyTree@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetLateGamePolicyTree, COMDAT

; 5048 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 5049 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5050 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetLateGamePolicyTree();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetLateGamePolicyTree@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ ; CvPlayerPolicies::GetLateGamePolicyTree
	mov	DWORD PTR _iResult$[ebp], eax

; 5051 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 5052 : 	return 1;

	mov	eax, 1

; 5053 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetLateGamePolicyTree@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetLateGamePolicyTree
_TEXT	ENDS
EXTRN	?GetBranchPicked1@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ:PROC ; CvPlayerPolicies::GetBranchPicked1
; Function compile flags: /Odtp
;	COMDAT ?lGetBranchPicked1@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetBranchPicked1@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBranchPicked1, COMDAT

; 5058 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 5059 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5060 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetBranchPicked1();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetBranchPicked1@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ ; CvPlayerPolicies::GetBranchPicked1
	mov	DWORD PTR _iResult$[ebp], eax

; 5061 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 5062 : 	return 1;

	mov	eax, 1

; 5063 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBranchPicked1@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBranchPicked1
_TEXT	ENDS
EXTRN	?GetBranchPicked2@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ:PROC ; CvPlayerPolicies::GetBranchPicked2
; Function compile flags: /Odtp
;	COMDAT ?lGetBranchPicked2@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetBranchPicked2@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBranchPicked2, COMDAT

; 5068 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 5069 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5070 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetBranchPicked2();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetBranchPicked2@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ ; CvPlayerPolicies::GetBranchPicked2
	mov	DWORD PTR _iResult$[ebp], eax

; 5071 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 5072 : 	return 1;

	mov	eax, 1

; 5073 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBranchPicked2@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBranchPicked2
_TEXT	ENDS
EXTRN	?GetBranchPicked3@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ:PROC ; CvPlayerPolicies::GetBranchPicked3
; Function compile flags: /Odtp
;	COMDAT ?lGetBranchPicked3@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetBranchPicked3@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBranchPicked3, COMDAT

; 5078 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 5079 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5080 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetBranchPicked3();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetBranchPicked3@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ ; CvPlayerPolicies::GetBranchPicked3
	mov	DWORD PTR _iResult$[ebp], eax

; 5081 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 5082 : 	return 1;

	mov	eax, 1

; 5083 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBranchPicked3@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBranchPicked3
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetPolicyCatchSpiesModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetPolicyCatchSpiesModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyCatchSpiesModifier, COMDAT

; 5088 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 5089 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5090 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetNumericModifier(POLICYMOD_CATCH_SPIES_MODIFIER);

	push	21					; 00000015H
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	mov	DWORD PTR _iResult$[ebp], eax

; 5091 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 5092 : 	return 1;

	mov	eax, 1

; 5093 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPolicyCatchSpiesModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyCatchSpiesModifier
_TEXT	ENDS
EXTRN	?GetNumPolicyBranchesFinished@CvPlayerPolicies@@QBEHXZ:PROC ; CvPlayerPolicies::GetNumPolicyBranchesFinished
; Function compile flags: /Odtp
;	COMDAT ?lGetNumPolicyBranchesFinished@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumPolicyBranchesFinished@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumPolicyBranchesFinished, COMDAT

; 5098 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 5099 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5100 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetNumPolicyBranchesFinished();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumPolicyBranchesFinished@CvPlayerPolicies@@QBEHXZ ; CvPlayerPolicies::GetNumPolicyBranchesFinished
	mov	DWORD PTR _iResult$[ebp], eax

; 5101 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 5102 : 	return 1;

	mov	eax, 1

; 5103 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumPolicyBranchesFinished@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumPolicyBranchesFinished
_TEXT	ENDS
EXTRN	?IsPolicyBranchFinished@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z:PROC ; CvPlayerPolicies::IsPolicyBranchFinished
; Function compile flags: /Odtp
;	COMDAT ?lIsPolicyBranchFinished@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_iResult$ = -5						; size = 1
_iID$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsPolicyBranchFinished@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPolicyBranchFinished, COMDAT

; 5108 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 5109 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5110 : 	const int iID = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iID$[ebp], eax

; 5111 : 
; 5112 : 	const bool iResult = pkPlayer->GetPlayerPolicies()->IsPolicyBranchFinished(PolicyBranchTypes(iID));

	mov	edx, DWORD PTR _iID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchFinished@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchFinished
	mov	BYTE PTR _iResult$[ebp], al

; 5113 : 	lua_pushboolean(L, iResult);

	movzx	eax, BYTE PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 5114 : 	return 1;

	mov	eax, 1

; 5115 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPolicyBranchFinished@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPolicyBranchFinished
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE@XZ ; std::_Vector_val<enum PolicyTypes,std::allocator<enum PolicyTypes> >::~_Vector_val<enum PolicyTypes,std::allocator<enum PolicyTypes> >
PUBLIC	?_Tidy@?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@IAEXXZ ; std::vector<enum PolicyTypes,std::allocator<enum PolicyTypes> >::_Tidy
EXTRN	?GetAvailableTenets@CvPlayerPolicies@@QAE?AV?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@W4PolicyBranchTypes@@H@Z:PROC ; CvPlayerPolicies::GetAvailableTenets
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?lGetAvailableTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetAvailableTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetAvailableTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetAvailableTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetAvailableTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv153 = -104						; size = 4
$T248307 = -68						; size = 4
$T248283 = -64						; size = 4
$T248272 = -60						; size = 4
_ePolicy$230816 = -56					; size = 4
_it$230810 = -52					; size = 4
_availableTenets$230657 = -48				; size = 16
_t$ = -32						; size = 4
_eBranch$ = -28						; size = 4
_pkPlayer$ = -24					; size = 4
_idx$ = -20						; size = 4
_iLevel$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetAvailableTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAvailableTenets, COMDAT

; 5120 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetAvailableTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 5121 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5122 : 	const int iLevel = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iLevel$[ebp], eax

; 5123 : 
; 5124 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 5125 : 	const int t = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$[ebp], eax

; 5126 : 	int idx = 1;

	mov	DWORD PTR _idx$[ebp], 1

; 5127 : 
; 5128 : 	PolicyBranchTypes eBranch = pkPlayer->GetPlayerPolicies()->GetLateGamePolicyTree();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetLateGamePolicyTree@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ ; CvPlayerPolicies::GetLateGamePolicyTree
	mov	DWORD PTR _eBranch$[ebp], eax

; 5129 : 	if (eBranch != NO_POLICY_BRANCH_TYPE)

	cmp	DWORD PTR _eBranch$[ebp], -1
	je	$LN4@lGetAvaila

; 5130 : 	{
; 5131 : 		std::vector<PolicyTypes> availableTenets = pkPlayer->GetPlayerPolicies()->GetAvailableTenets(eBranch, iLevel);

	mov	ecx, DWORD PTR _iLevel$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eBranch$[ebp]
	push	edx
	lea	eax, DWORD PTR _availableTenets$230657[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetAvailableTenets@CvPlayerPolicies@@QAE?AV?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@W4PolicyBranchTypes@@H@Z ; CvPlayerPolicies::GetAvailableTenets

; 5132 : 		for(std::vector<PolicyTypes>::iterator it = availableTenets.begin();

	mov	ecx, DWORD PTR _availableTenets$230657[ebp+4]
	mov	DWORD PTR $T248283[ebp], ecx
	mov	edx, DWORD PTR $T248283[ebp]
	mov	DWORD PTR _it$230810[ebp], edx

; 5133 : 			it!= availableTenets.end(); ++it)

	jmp	SHORT $LN3@lGetAvaila
$LN2@lGetAvaila:
	mov	eax, DWORD PTR _it$230810[ebp]
	add	eax, 4
	mov	DWORD PTR _it$230810[ebp], eax
$LN3@lGetAvaila:
	mov	ecx, DWORD PTR _availableTenets$230657[ebp+8]
	mov	DWORD PTR $T248307[ebp], ecx
	mov	edx, DWORD PTR $T248307[ebp]
	mov	DWORD PTR $T248272[ebp], edx
	mov	eax, DWORD PTR _it$230810[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T248272[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN1@lGetAvaila

; 5134 : 		{
; 5135 : 			const PolicyTypes ePolicy = (*it);

	mov	ecx, DWORD PTR _it$230810[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _ePolicy$230816[ebp], edx

; 5136 : 			lua_pushinteger(L, ePolicy);

	mov	eax, DWORD PTR _ePolicy$230816[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 5137 : 			lua_rawseti(L, t, idx++);

	mov	edx, DWORD PTR _idx$[ebp]
	mov	DWORD PTR tv153[ebp], edx
	mov	eax, DWORD PTR tv153[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$[ebp], eax

; 5138 : 		}

	jmp	SHORT $LN2@lGetAvaila
$LN1@lGetAvaila:

; 5139 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _availableTenets$230657[ebp]
	call	?_Tidy@?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@IAEXXZ ; std::vector<enum PolicyTypes,std::allocator<enum PolicyTypes> >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1
$LN4@lGetAvaila:

; 5140 : 
; 5141 : 	return 1;

	mov	eax, 1

; 5142 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetAvailableTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _availableTenets$230657[ebp]
	jmp	??1?$_Vector_val@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE@XZ
__ehhandler$?lGetAvailableTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetAvailableTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetAvailableTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAvailableTenets
EXTRN	?GetTenet@CvPlayerPolicies@@QAE?AW4PolicyTypes@@W4PolicyBranchTypes@@HH@Z:PROC ; CvPlayerPolicies::GetTenet
; Function compile flags: /Odtp
;	COMDAT ?lGetTenet@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eBranch$ = -20						; size = 4
_pkPlayer$ = -16					; size = 4
_iIndex$ = -12						; size = 4
_iResult$ = -8						; size = 4
_iLevel$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetTenet@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetTenet, COMDAT

; 5147 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 5148 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5149 : 	const PolicyBranchTypes eBranch = (PolicyBranchTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBranch$[ebp], eax

; 5150 : 	const int iLevel = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iLevel$[ebp], eax

; 5151 : 	const int iIndex = lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 5152 : 
; 5153 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetTenet(eBranch, iLevel, iIndex);

	mov	ecx, DWORD PTR _iIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iLevel$[ebp]
	push	edx
	mov	eax, DWORD PTR _eBranch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetTenet@CvPlayerPolicies@@QAE?AW4PolicyTypes@@W4PolicyBranchTypes@@HH@Z ; CvPlayerPolicies::GetTenet
	mov	DWORD PTR _iResult$[ebp], eax

; 5154 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 5155 : 	return 1;

	mov	eax, 1

; 5156 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTenet@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetTenet
_TEXT	ENDS
EXTRN	?IsAnarchy@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::IsAnarchy
; Function compile flags: /Odtp
;	COMDAT ?lIsAnarchy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAnarchy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsAnarchy, COMDAT

; 5161 : {

	push	ebp
	mov	ebp, esp

; 5162 : 	return BasicLuaMethod(L, &CvPlayerAI::IsAnarchy);

	push	OFFSET ?IsAnarchy@CvPlayer@@QBE_NXZ	; CvPlayer::IsAnarchy
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 5163 : }

	pop	ebp
	ret	0
?lIsAnarchy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsAnarchy
_TEXT	ENDS
EXTRN	?GetAnarchyNumTurns@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetAnarchyNumTurns
; Function compile flags: /Odtp
;	COMDAT ?lGetAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAnarchyNumTurns, COMDAT

; 5167 : {

	push	ebp
	mov	ebp, esp

; 5168 : 	return BasicLuaMethod(L, &CvPlayerAI::GetAnarchyNumTurns);

	push	OFFSET ?GetAnarchyNumTurns@CvPlayer@@QBEHXZ ; CvPlayer::GetAnarchyNumTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5169 : }

	pop	ebp
	ret	0
?lGetAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAnarchyNumTurns
_TEXT	ENDS
EXTRN	?SetAnarchyNumTurns@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::SetAnarchyNumTurns
; Function compile flags: /Odtp
;	COMDAT ?lSetAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetAnarchyNumTurns, COMDAT

; 5173 : {

	push	ebp
	mov	ebp, esp

; 5174 : 	return BasicLuaMethod(L, &CvPlayerAI::SetAnarchyNumTurns);

	push	OFFSET ?SetAnarchyNumTurns@CvPlayer@@QAEXH@Z ; CvPlayer::SetAnarchyNumTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5175 : }

	pop	ebp
	ret	0
?lSetAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetAnarchyNumTurns
_TEXT	ENDS
EXTRN	?ChangeAnarchyNumTurns@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::ChangeAnarchyNumTurns
; Function compile flags: /Odtp
;	COMDAT ?lChangeAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeAnarchyNumTurns, COMDAT

; 5179 : {

	push	ebp
	mov	ebp, esp

; 5180 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeAnarchyNumTurns);

	push	OFFSET ?ChangeAnarchyNumTurns@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeAnarchyNumTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5181 : }

	pop	ebp
	ret	0
?lChangeAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeAnarchyNumTurns
_TEXT	ENDS
EXTRN	?getAdvancedStartPoints@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getAdvancedStartPoints
; Function compile flags: /Odtp
;	COMDAT ?lGetAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAdvancedStartPoints, COMDAT

; 5186 : {

	push	ebp
	mov	ebp, esp

; 5187 : 	return BasicLuaMethod(L, &CvPlayerAI::getAdvancedStartPoints);

	push	OFFSET ?getAdvancedStartPoints@CvPlayer@@QBEHXZ ; CvPlayer::getAdvancedStartPoints
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5188 : }

	pop	ebp
	ret	0
?lGetAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAdvancedStartPoints
_TEXT	ENDS
EXTRN	?setAdvancedStartPoints@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::setAdvancedStartPoints
; Function compile flags: /Odtp
;	COMDAT ?lSetAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetAdvancedStartPoints, COMDAT

; 5192 : {

	push	ebp
	mov	ebp, esp

; 5193 : 	return BasicLuaMethod(L, &CvPlayerAI::setAdvancedStartPoints);

	push	OFFSET ?setAdvancedStartPoints@CvPlayer@@QAEXH@Z ; CvPlayer::setAdvancedStartPoints
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5194 : }

	pop	ebp
	ret	0
?lSetAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetAdvancedStartPoints
_TEXT	ENDS
EXTRN	?changeAdvancedStartPoints@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::changeAdvancedStartPoints
; Function compile flags: /Odtp
;	COMDAT ?lChangeAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeAdvancedStartPoints, COMDAT

; 5198 : {

	push	ebp
	mov	ebp, esp

; 5199 : 	return BasicLuaMethod(L, &CvPlayerAI::changeAdvancedStartPoints);

	push	OFFSET ?changeAdvancedStartPoints@CvPlayer@@QAEXH@Z ; CvPlayer::changeAdvancedStartPoints
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5200 : }

	pop	ebp
	ret	0
?lChangeAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeAdvancedStartPoints
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4UnitTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4UnitTypes@@_NPAVCvPlot@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum UnitTypes,bool,CvPlot *>
EXTRN	?getAdvancedStartUnitCost@CvPlayer@@QAEHW4UnitTypes@@_NPAVCvPlot@@@Z:PROC ; CvPlayer::getAdvancedStartUnitCost
; Function compile flags: /Odtp
;	COMDAT ?lGetAdvancedStartUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAdvancedStartUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAdvancedStartUnitCost, COMDAT

; 5204 : {

	push	ebp
	mov	ebp, esp

; 5205 : 	return BasicLuaMethod(L, &CvPlayerAI::getAdvancedStartUnitCost);

	push	OFFSET ?getAdvancedStartUnitCost@CvPlayer@@QAEHW4UnitTypes@@_NPAVCvPlot@@@Z ; CvPlayer::getAdvancedStartUnitCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4UnitTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4UnitTypes@@_NPAVCvPlot@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum UnitTypes,bool,CvPlot *>
	add	esp, 8

; 5206 : }

	pop	ebp
	ret	0
?lGetAdvancedStartUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAdvancedStartUnitCost
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEH_NPAVCvPlot@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,CvPlot *>
EXTRN	?getAdvancedStartCityCost@CvPlayer@@QAEH_NPAVCvPlot@@@Z:PROC ; CvPlayer::getAdvancedStartCityCost
; Function compile flags: /Odtp
;	COMDAT ?lGetAdvancedStartCityCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAdvancedStartCityCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAdvancedStartCityCost, COMDAT

; 5210 : {

	push	ebp
	mov	ebp, esp

; 5211 : 	return BasicLuaMethod(L, &CvPlayerAI::getAdvancedStartCityCost);

	push	OFFSET ?getAdvancedStartCityCost@CvPlayer@@QAEH_NPAVCvPlot@@@Z ; CvPlayer::getAdvancedStartCityCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEH_NPAVCvPlot@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,CvPlot *>
	add	esp, 8

; 5212 : }

	pop	ebp
	ret	0
?lGetAdvancedStartCityCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAdvancedStartCityCost
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H_NPAVCvCity@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEH_NPAVCvCity@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,CvCity *>
EXTRN	?getAdvancedStartPopCost@CvPlayer@@QAEH_NPAVCvCity@@@Z:PROC ; CvPlayer::getAdvancedStartPopCost
; Function compile flags: /Odtp
;	COMDAT ?lGetAdvancedStartPopCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAdvancedStartPopCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAdvancedStartPopCost, COMDAT

; 5216 : {

	push	ebp
	mov	ebp, esp

; 5217 : 	return BasicLuaMethod(L, &CvPlayerAI::getAdvancedStartPopCost);

	push	OFFSET ?getAdvancedStartPopCost@CvPlayer@@QAEH_NPAVCvCity@@@Z ; CvPlayer::getAdvancedStartPopCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H_NPAVCvCity@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEH_NPAVCvCity@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,CvCity *>
	add	esp, 8

; 5218 : }

	pop	ebp
	ret	0
?lGetAdvancedStartPopCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAdvancedStartPopCost
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4BuildingTypes@@_NPAVCvCity@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4BuildingTypes@@_NPAVCvCity@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes,bool,CvCity *>
EXTRN	?getAdvancedStartBuildingCost@CvPlayer@@QAEHW4BuildingTypes@@_NPAVCvCity@@@Z:PROC ; CvPlayer::getAdvancedStartBuildingCost
; Function compile flags: /Odtp
;	COMDAT ?lGetAdvancedStartBuildingCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAdvancedStartBuildingCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAdvancedStartBuildingCost, COMDAT

; 5222 : {

	push	ebp
	mov	ebp, esp

; 5223 : 	return BasicLuaMethod(L, &CvPlayerAI::getAdvancedStartBuildingCost);

	push	OFFSET ?getAdvancedStartBuildingCost@CvPlayer@@QAEHW4BuildingTypes@@_NPAVCvCity@@@Z ; CvPlayer::getAdvancedStartBuildingCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4BuildingTypes@@_NPAVCvCity@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4BuildingTypes@@_NPAVCvCity@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes,bool,CvCity *>
	add	esp, 8

; 5224 : }

	pop	ebp
	ret	0
?lGetAdvancedStartBuildingCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAdvancedStartBuildingCost
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ImprovementTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4ImprovementTypes@@_NPAVCvPlot@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ImprovementTypes,bool,CvPlot *>
EXTRN	?getAdvancedStartImprovementCost@CvPlayer@@QAEHW4ImprovementTypes@@_NPAVCvPlot@@@Z:PROC ; CvPlayer::getAdvancedStartImprovementCost
; Function compile flags: /Odtp
;	COMDAT ?lGetAdvancedStartImprovementCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAdvancedStartImprovementCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAdvancedStartImprovementCost, COMDAT

; 5228 : {

	push	ebp
	mov	ebp, esp

; 5229 : 	return BasicLuaMethod(L, &CvPlayerAI::getAdvancedStartImprovementCost);

	push	OFFSET ?getAdvancedStartImprovementCost@CvPlayer@@QAEHW4ImprovementTypes@@_NPAVCvPlot@@@Z ; CvPlayer::getAdvancedStartImprovementCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4ImprovementTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4ImprovementTypes@@_NPAVCvPlot@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ImprovementTypes,bool,CvPlot *>
	add	esp, 8

; 5230 : }

	pop	ebp
	ret	0
?lGetAdvancedStartImprovementCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAdvancedStartImprovementCost
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4RouteTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4RouteTypes@@_NPAVCvPlot@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum RouteTypes,bool,CvPlot *>
EXTRN	?getAdvancedStartRouteCost@CvPlayer@@QAEHW4RouteTypes@@_NPAVCvPlot@@@Z:PROC ; CvPlayer::getAdvancedStartRouteCost
; Function compile flags: /Odtp
;	COMDAT ?lGetAdvancedStartRouteCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAdvancedStartRouteCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAdvancedStartRouteCost, COMDAT

; 5234 : {

	push	ebp
	mov	ebp, esp

; 5235 : 	return BasicLuaMethod(L, &CvPlayerAI::getAdvancedStartRouteCost);

	push	OFFSET ?getAdvancedStartRouteCost@CvPlayer@@QAEHW4RouteTypes@@_NPAVCvPlot@@@Z ; CvPlayer::getAdvancedStartRouteCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4RouteTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4RouteTypes@@_NPAVCvPlot@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum RouteTypes,bool,CvPlot *>
	add	esp, 8

; 5236 : }

	pop	ebp
	ret	0
?lGetAdvancedStartRouteCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAdvancedStartRouteCost
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4TechTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes,bool>
EXTRN	?getAdvancedStartTechCost@CvPlayer@@QAEHW4TechTypes@@_N@Z:PROC ; CvPlayer::getAdvancedStartTechCost
; Function compile flags: /Odtp
;	COMDAT ?lGetAdvancedStartTechCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAdvancedStartTechCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAdvancedStartTechCost, COMDAT

; 5240 : {

	push	ebp
	mov	ebp, esp

; 5241 : 	return BasicLuaMethod(L, &CvPlayerAI::getAdvancedStartTechCost);

	push	OFFSET ?getAdvancedStartTechCost@CvPlayer@@QAEHW4TechTypes@@_N@Z ; CvPlayer::getAdvancedStartTechCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4TechTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes,bool>
	add	esp, 8

; 5242 : }

	pop	ebp
	ret	0
?lGetAdvancedStartTechCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAdvancedStartTechCost
_TEXT	ENDS
EXTRN	?getAdvancedStartVisibilityCost@CvPlayer@@QAEH_NPAVCvPlot@@@Z:PROC ; CvPlayer::getAdvancedStartVisibilityCost
; Function compile flags: /Odtp
;	COMDAT ?lGetAdvancedStartVisibilityCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAdvancedStartVisibilityCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAdvancedStartVisibilityCost, COMDAT

; 5246 : {

	push	ebp
	mov	ebp, esp

; 5247 : 	return BasicLuaMethod(L, &CvPlayerAI::getAdvancedStartVisibilityCost);

	push	OFFSET ?getAdvancedStartVisibilityCost@CvPlayer@@QAEH_NPAVCvPlot@@@Z ; CvPlayer::getAdvancedStartVisibilityCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEH_NPAVCvPlot@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,CvPlot *>
	add	esp, 8

; 5248 : }

	pop	ebp
	ret	0
?lGetAdvancedStartVisibilityCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAdvancedStartVisibilityCost
_TEXT	ENDS
EXTRN	?GetAttackBonusTurns@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetAttackBonusTurns
; Function compile flags: /Odtp
;	COMDAT ?lGetAttackBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAttackBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAttackBonusTurns, COMDAT

; 5253 : {

	push	ebp
	mov	ebp, esp

; 5254 : 	return BasicLuaMethod(L, &CvPlayerAI::GetAttackBonusTurns);

	push	OFFSET ?GetAttackBonusTurns@CvPlayer@@QBEHXZ ; CvPlayer::GetAttackBonusTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5255 : }

	pop	ebp
	ret	0
?lGetAttackBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAttackBonusTurns
_TEXT	ENDS
EXTRN	?GetCultureBonusTurns@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetCultureBonusTurns
; Function compile flags: /Odtp
;	COMDAT ?lGetCultureBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCultureBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCultureBonusTurns, COMDAT

; 5260 : {

	push	ebp
	mov	ebp, esp

; 5261 : 	return BasicLuaMethod(L, &CvPlayerAI::GetCultureBonusTurns);

	push	OFFSET ?GetCultureBonusTurns@CvPlayer@@QBEHXZ ; CvPlayer::GetCultureBonusTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5262 : }

	pop	ebp
	ret	0
?lGetCultureBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCultureBonusTurns
_TEXT	ENDS
EXTRN	?GetTourismBonusTurns@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetTourismBonusTurns
; Function compile flags: /Odtp
;	COMDAT ?lGetTourismBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTourismBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTourismBonusTurns, COMDAT

; 5267 : {

	push	ebp
	mov	ebp, esp

; 5268 : 	return BasicLuaMethod(L, &CvPlayerAI::GetTourismBonusTurns);

	push	OFFSET ?GetTourismBonusTurns@CvPlayer@@QBEHXZ ; CvPlayer::GetTourismBonusTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5269 : }

	pop	ebp
	ret	0
?lGetTourismBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTourismBonusTurns
_TEXT	ENDS
EXTRN	?GetGoldenAgeProgressThreshold@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetGoldenAgeProgressThreshold
; Function compile flags: /Odtp
;	COMDAT ?lGetGoldenAgeProgressThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldenAgeProgressThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldenAgeProgressThreshold, COMDAT

; 5273 : {

	push	ebp
	mov	ebp, esp

; 5274 : 	return BasicLuaMethod(L, &CvPlayerAI::GetGoldenAgeProgressThreshold);

	push	OFFSET ?GetGoldenAgeProgressThreshold@CvPlayer@@QBEHXZ ; CvPlayer::GetGoldenAgeProgressThreshold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5275 : }

	pop	ebp
	ret	0
?lGetGoldenAgeProgressThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldenAgeProgressThreshold
_TEXT	ENDS
EXTRN	?GetGoldenAgeProgressMeter@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetGoldenAgeProgressMeter
; Function compile flags: /Odtp
;	COMDAT ?lGetGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldenAgeProgressMeter, COMDAT

; 5279 : {

	push	ebp
	mov	ebp, esp

; 5280 : 	return BasicLuaMethod(L, &CvPlayerAI::GetGoldenAgeProgressMeter);

	push	OFFSET ?GetGoldenAgeProgressMeter@CvPlayer@@QBEHXZ ; CvPlayer::GetGoldenAgeProgressMeter
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5281 : }

	pop	ebp
	ret	0
?lGetGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldenAgeProgressMeter
_TEXT	ENDS
EXTRN	?SetGoldenAgeProgressMeter@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::SetGoldenAgeProgressMeter
; Function compile flags: /Odtp
;	COMDAT ?lSetGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetGoldenAgeProgressMeter, COMDAT

; 5285 : {

	push	ebp
	mov	ebp, esp

; 5286 : 	return BasicLuaMethod(L, &CvPlayerAI::SetGoldenAgeProgressMeter);

	push	OFFSET ?SetGoldenAgeProgressMeter@CvPlayer@@QAEXH@Z ; CvPlayer::SetGoldenAgeProgressMeter
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5287 : }

	pop	ebp
	ret	0
?lSetGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetGoldenAgeProgressMeter
_TEXT	ENDS
EXTRN	?ChangeGoldenAgeProgressMeter@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeGoldenAgeProgressMeter
; Function compile flags: /Odtp
;	COMDAT ?lChangeGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeGoldenAgeProgressMeter, COMDAT

; 5291 : {

	push	ebp
	mov	ebp, esp

; 5292 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeGoldenAgeProgressMeter);

	push	OFFSET ?ChangeGoldenAgeProgressMeter@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeGoldenAgeProgressMeter
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5293 : }

	pop	ebp
	ret	0
?lChangeGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeGoldenAgeProgressMeter
_TEXT	ENDS
EXTRN	?GetNumGoldenAges@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetNumGoldenAges
; Function compile flags: /Odtp
;	COMDAT ?lGetNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumGoldenAges, COMDAT

; 5297 : {

	push	ebp
	mov	ebp, esp

; 5298 : 	return BasicLuaMethod(L, &CvPlayerAI::GetNumGoldenAges);

	push	OFFSET ?GetNumGoldenAges@CvPlayer@@QBEHXZ ; CvPlayer::GetNumGoldenAges
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5299 : }

	pop	ebp
	ret	0
?lGetNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumGoldenAges
_TEXT	ENDS
EXTRN	?SetNumGoldenAges@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::SetNumGoldenAges
; Function compile flags: /Odtp
;	COMDAT ?lSetNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetNumGoldenAges, COMDAT

; 5303 : {

	push	ebp
	mov	ebp, esp

; 5304 : 	return BasicLuaMethod(L, &CvPlayerAI::SetNumGoldenAges);

	push	OFFSET ?SetNumGoldenAges@CvPlayer@@QAEXH@Z ; CvPlayer::SetNumGoldenAges
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5305 : }

	pop	ebp
	ret	0
?lSetNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetNumGoldenAges
_TEXT	ENDS
EXTRN	?ChangeNumGoldenAges@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::ChangeNumGoldenAges
; Function compile flags: /Odtp
;	COMDAT ?lChangeNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNumGoldenAges, COMDAT

; 5309 : {

	push	ebp
	mov	ebp, esp

; 5310 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeNumGoldenAges);

	push	OFFSET ?ChangeNumGoldenAges@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeNumGoldenAges
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5311 : }

	pop	ebp
	ret	0
?lChangeNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNumGoldenAges
_TEXT	ENDS
EXTRN	?getGoldenAgeTurns@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getGoldenAgeTurns
; Function compile flags: /Odtp
;	COMDAT ?lGetGoldenAgeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldenAgeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldenAgeTurns, COMDAT

; 5316 : {

	push	ebp
	mov	ebp, esp

; 5317 : 	return BasicLuaMethod(L, &CvPlayerAI::getGoldenAgeTurns);

	push	OFFSET ?getGoldenAgeTurns@CvPlayer@@QBEHXZ ; CvPlayer::getGoldenAgeTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5318 : }

	pop	ebp
	ret	0
?lGetGoldenAgeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldenAgeTurns
_TEXT	ENDS
EXTRN	?getGoldenAgeLength@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getGoldenAgeLength
; Function compile flags: /Odtp
;	COMDAT ?lGetGoldenAgeLength@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldenAgeLength@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldenAgeLength, COMDAT

; 5322 : {

	push	ebp
	mov	ebp, esp

; 5323 : 	return BasicLuaMethod(L, &CvPlayerAI::getGoldenAgeLength);

	push	OFFSET ?getGoldenAgeLength@CvPlayer@@QBEHXZ ; CvPlayer::getGoldenAgeLength
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5324 : }

	pop	ebp
	ret	0
?lGetGoldenAgeLength@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldenAgeLength
_TEXT	ENDS
EXTRN	?isGoldenAge@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isGoldenAge
; Function compile flags: /Odtp
;	COMDAT ?lIsGoldenAge@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsGoldenAge@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsGoldenAge, COMDAT

; 5328 : {

	push	ebp
	mov	ebp, esp

; 5329 : 	return BasicLuaMethod(L, &CvPlayerAI::isGoldenAge);

	push	OFFSET ?isGoldenAge@CvPlayer@@QBE_NXZ	; CvPlayer::isGoldenAge
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 5330 : }

	pop	ebp
	ret	0
?lIsGoldenAge@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsGoldenAge
_TEXT	ENDS
EXTRN	?changeGoldenAgeTurns@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::changeGoldenAgeTurns
; Function compile flags: /Odtp
;	COMDAT ?lChangeGoldenAgeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeGoldenAgeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeGoldenAgeTurns, COMDAT

; 5334 : {

	push	ebp
	mov	ebp, esp

; 5335 : 	return BasicLuaMethod(L, &CvPlayerAI::changeGoldenAgeTurns);

	push	OFFSET ?changeGoldenAgeTurns@CvPlayer@@QAEXH@Z ; CvPlayer::changeGoldenAgeTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5336 : }

	pop	ebp
	ret	0
?lChangeGoldenAgeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeGoldenAgeTurns
_TEXT	ENDS
EXTRN	?getNumUnitGoldenAges@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getNumUnitGoldenAges
; Function compile flags: /Odtp
;	COMDAT ?lGetNumUnitGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumUnitGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumUnitGoldenAges, COMDAT

; 5340 : {

	push	ebp
	mov	ebp, esp

; 5341 : 	return BasicLuaMethod(L, &CvPlayerAI::getNumUnitGoldenAges);

	push	OFFSET ?getNumUnitGoldenAges@CvPlayer@@QBEHXZ ; CvPlayer::getNumUnitGoldenAges
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5342 : }

	pop	ebp
	ret	0
?lGetNumUnitGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumUnitGoldenAges
_TEXT	ENDS
EXTRN	?changeNumUnitGoldenAges@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::changeNumUnitGoldenAges
; Function compile flags: /Odtp
;	COMDAT ?lChangeNumUnitGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeNumUnitGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNumUnitGoldenAges, COMDAT

; 5346 : {

	push	ebp
	mov	ebp, esp

; 5347 : 	return BasicLuaMethod(L, &CvPlayerAI::changeNumUnitGoldenAges);

	push	OFFSET ?changeNumUnitGoldenAges@CvPlayer@@QAEXH@Z ; CvPlayer::changeNumUnitGoldenAges
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5348 : }

	pop	ebp
	ret	0
?lChangeNumUnitGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNumUnitGoldenAges
_TEXT	ENDS
EXTRN	?getStrikeTurns@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getStrikeTurns
; Function compile flags: /Odtp
;	COMDAT ?lGetStrikeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetStrikeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetStrikeTurns, COMDAT

; 5352 : {

	push	ebp
	mov	ebp, esp

; 5353 : 	return BasicLuaMethod(L, &CvPlayerAI::getStrikeTurns);

	push	OFFSET ?getStrikeTurns@CvPlayer@@QBEHXZ	; CvPlayer::getStrikeTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5354 : }

	pop	ebp
	ret	0
?lGetStrikeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetStrikeTurns
_TEXT	ENDS
EXTRN	?getGoldenAgeModifier@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getGoldenAgeModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetGoldenAgeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldenAgeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldenAgeModifier, COMDAT

; 5358 : {

	push	ebp
	mov	ebp, esp

; 5359 : 	return BasicLuaMethod(L, &CvPlayerAI::getGoldenAgeModifier);

	push	OFFSET ?getGoldenAgeModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGoldenAgeModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5360 : }

	pop	ebp
	ret	0
?lGetGoldenAgeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldenAgeModifier
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetGoldenAgeTourismModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T248494 = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetGoldenAgeTourismModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldenAgeTourismModifier, COMDAT

; 5363 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 5364 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5365 : 	const int iResult = pkPlayer->GetPlayerTraits()->GetGoldenAgeTourismModifier();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T248494[ebp], eax
	mov	ecx, DWORD PTR $T248494[ebp]
	mov	edx, DWORD PTR [ecx+184]
	mov	DWORD PTR _iResult$[ebp], edx

; 5366 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 5367 : 	return 1;

	mov	eax, 1

; 5368 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetGoldenAgeTourismModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldenAgeTourismModifier
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetGoldenAgeGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T248500 = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetGoldenAgeGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldenAgeGreatWriterRateModifier, COMDAT

; 5371 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 5372 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5373 : 	const int iResult = pkPlayer->GetPlayerTraits()->GetGoldenAgeGreatWriterRateModifier();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T248500[ebp], eax
	mov	ecx, DWORD PTR $T248500[ebp]
	mov	edx, DWORD PTR [ecx+196]
	mov	DWORD PTR _iResult$[ebp], edx

; 5374 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 5375 : 	return 1;

	mov	eax, 1

; 5376 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetGoldenAgeGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldenAgeGreatWriterRateModifier
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetGoldenAgeGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T248506 = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetGoldenAgeGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldenAgeGreatArtistRateModifier, COMDAT

; 5379 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 5380 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5381 : 	const int iResult = pkPlayer->GetPlayerTraits()->GetGoldenAgeGreatArtistRateModifier();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T248506[ebp], eax
	mov	ecx, DWORD PTR $T248506[ebp]
	mov	edx, DWORD PTR [ecx+188]
	mov	DWORD PTR _iResult$[ebp], edx

; 5382 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 5383 : 	return 1;

	mov	eax, 1

; 5384 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetGoldenAgeGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldenAgeGreatArtistRateModifier
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetGoldenAgeGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T248512 = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetGoldenAgeGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldenAgeGreatMusicianRateModifier, COMDAT

; 5387 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 5388 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5389 : 	const int iResult = pkPlayer->GetPlayerTraits()->GetGoldenAgeGreatMusicianRateModifier();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T248512[ebp], eax
	mov	ecx, DWORD PTR $T248512[ebp]
	mov	edx, DWORD PTR [ecx+192]
	mov	DWORD PTR _iResult$[ebp], edx

; 5390 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 5391 : 	return 1;

	mov	eax, 1

; 5392 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetGoldenAgeGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldenAgeGreatMusicianRateModifier
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum HurryTypes>
EXTRN	?getHurryModifier@CvPlayer@@QBEHW4HurryTypes@@@Z:PROC ; CvPlayer::getHurryModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetHurryModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHurryModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHurryModifier, COMDAT

; 5396 : {

	push	ebp
	mov	ebp, esp

; 5397 : 	return BasicLuaMethod(L, &CvPlayerAI::getHurryModifier);

	push	OFFSET ?getHurryModifier@CvPlayer@@QBEHW4HurryTypes@@@Z ; CvPlayer::getHurryModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum HurryTypes>
	add	esp, 8

; 5398 : }

	pop	ebp
	ret	0
?lGetHurryModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHurryModifier
_TEXT	ENDS
EXTRN	?createGreatGeneral@CvPlayer@@QAEXW4UnitTypes@@HH@Z:PROC ; CvPlayer::createGreatGeneral
; Function compile flags: /Odtp
;	COMDAT ?lCreateGreatGeneral@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -16					; size = 4
_eGreatPersonUnit$ = -12				; size = 4
_x$ = -8						; size = 4
_y$ = -4						; size = 4
_L$ = 8							; size = 4
?lCreateGreatGeneral@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCreateGreatGeneral, COMDAT

; 5402 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 5403 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5404 : 	const UnitTypes eGreatPersonUnit = (UnitTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eGreatPersonUnit$[ebp], eax

; 5405 : 	const int x = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _x$[ebp], eax

; 5406 : 	const int y = lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _y$[ebp], eax

; 5407 : 
; 5408 : 	pkPlayer->createGreatGeneral(eGreatPersonUnit, x, y);

	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _eGreatPersonUnit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?createGreatGeneral@CvPlayer@@QAEXW4UnitTypes@@HH@Z ; CvPlayer::createGreatGeneral

; 5409 : 	return 0;

	xor	eax, eax

; 5410 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCreateGreatGeneral@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCreateGreatGeneral
_TEXT	ENDS
EXTRN	?getGreatPeopleCreated@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getGreatPeopleCreated
; Function compile flags: /Odtp
;	COMDAT ?lGetGreatPeopleCreated@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatPeopleCreated@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatPeopleCreated, COMDAT

; 5414 : {

	push	ebp
	mov	ebp, esp

; 5415 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatPeopleCreated);

	push	OFFSET ?getGreatPeopleCreated@CvPlayer@@QBEHXZ ; CvPlayer::getGreatPeopleCreated
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5416 : }

	pop	ebp
	ret	0
?lGetGreatPeopleCreated@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatPeopleCreated
_TEXT	ENDS
EXTRN	?getGreatGeneralsCreated@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getGreatGeneralsCreated
; Function compile flags: /Odtp
;	COMDAT ?lGetGreatGeneralsCreated@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatGeneralsCreated@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatGeneralsCreated, COMDAT

; 5420 : {

	push	ebp
	mov	ebp, esp

; 5421 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatGeneralsCreated);

	push	OFFSET ?getGreatGeneralsCreated@CvPlayer@@QBEHXZ ; CvPlayer::getGreatGeneralsCreated
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5422 : }

	pop	ebp
	ret	0
?lGetGreatGeneralsCreated@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatGeneralsCreated
_TEXT	ENDS
EXTRN	?getGreatPeopleThresholdModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatPeopleThresholdModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetGreatPeopleThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatPeopleThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatPeopleThresholdModifier, COMDAT

; 5426 : {

	push	ebp
	mov	ebp, esp

; 5427 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatPeopleThresholdModifier);

	push	OFFSET ?getGreatPeopleThresholdModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatPeopleThresholdModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5428 : }

	pop	ebp
	ret	0
?lGetGreatPeopleThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatPeopleThresholdModifier
_TEXT	ENDS
EXTRN	?getGreatGeneralsThresholdModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatGeneralsThresholdModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetGreatGeneralsThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatGeneralsThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatGeneralsThresholdModifier, COMDAT

; 5432 : {

	push	ebp
	mov	ebp, esp

; 5433 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatGeneralsThresholdModifier);

	push	OFFSET ?getGreatGeneralsThresholdModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatGeneralsThresholdModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5434 : }

	pop	ebp
	ret	0
?lGetGreatGeneralsThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatGeneralsThresholdModifier
_TEXT	ENDS
EXTRN	?getGreatAdmiralsThresholdModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatAdmiralsThresholdModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetGreatAdmiralsThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatAdmiralsThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatAdmiralsThresholdModifier, COMDAT

; 5438 : {

	push	ebp
	mov	ebp, esp

; 5439 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatAdmiralsThresholdModifier);

	push	OFFSET ?getGreatAdmiralsThresholdModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatAdmiralsThresholdModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5440 : }

	pop	ebp
	ret	0
?lGetGreatAdmiralsThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatAdmiralsThresholdModifier
_TEXT	ENDS
EXTRN	?getGreatPeopleRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatPeopleRateModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetGreatPeopleRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatPeopleRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatPeopleRateModifier, COMDAT

; 5444 : {

	push	ebp
	mov	ebp, esp

; 5445 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatPeopleRateModifier);

	push	OFFSET ?getGreatPeopleRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatPeopleRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5446 : }

	pop	ebp
	ret	0
?lGetGreatPeopleRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatPeopleRateModifier
_TEXT	ENDS
EXTRN	?getGreatGeneralRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatGeneralRateModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetGreatGeneralRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatGeneralRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatGeneralRateModifier, COMDAT

; 5450 : {

	push	ebp
	mov	ebp, esp

; 5451 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatGeneralRateModifier);

	push	OFFSET ?getGreatGeneralRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatGeneralRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5452 : }

	pop	ebp
	ret	0
?lGetGreatGeneralRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatGeneralRateModifier
_TEXT	ENDS
EXTRN	?getDomesticGreatGeneralRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getDomesticGreatGeneralRateModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetDomesticGreatGeneralRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetDomesticGreatGeneralRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetDomesticGreatGeneralRateModifier, COMDAT

; 5456 : {

	push	ebp
	mov	ebp, esp

; 5457 : 	return BasicLuaMethod(L, &CvPlayerAI::getDomesticGreatGeneralRateModifier);

	push	OFFSET ?getDomesticGreatGeneralRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getDomesticGreatGeneralRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5458 : }

	pop	ebp
	ret	0
?lGetDomesticGreatGeneralRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetDomesticGreatGeneralRateModifier
_TEXT	ENDS
EXTRN	?getGreatWriterRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatWriterRateModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatWriterRateModifier, COMDAT

; 5463 : {

	push	ebp
	mov	ebp, esp

; 5464 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatWriterRateModifier);

	push	OFFSET ?getGreatWriterRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatWriterRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5465 : }

	pop	ebp
	ret	0
?lGetGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatWriterRateModifier
_TEXT	ENDS
EXTRN	?getGreatArtistRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatArtistRateModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatArtistRateModifier, COMDAT

; 5470 : {

	push	ebp
	mov	ebp, esp

; 5471 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatArtistRateModifier);

	push	OFFSET ?getGreatArtistRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatArtistRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5472 : }

	pop	ebp
	ret	0
?lGetGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatArtistRateModifier
_TEXT	ENDS
EXTRN	?getGreatMusicianRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatMusicianRateModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatMusicianRateModifier, COMDAT

; 5477 : {

	push	ebp
	mov	ebp, esp

; 5478 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatMusicianRateModifier);

	push	OFFSET ?getGreatMusicianRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatMusicianRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5479 : }

	pop	ebp
	ret	0
?lGetGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatMusicianRateModifier
_TEXT	ENDS
EXTRN	?getGreatScientistRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatScientistRateModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatScientistRateModifier, COMDAT

; 5484 : {

	push	ebp
	mov	ebp, esp

; 5485 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatScientistRateModifier);

	push	OFFSET ?getGreatScientistRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatScientistRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5486 : }

	pop	ebp
	ret	0
?lGetGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatScientistRateModifier
_TEXT	ENDS
EXTRN	?getGreatMerchantRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatMerchantRateModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetGreatMerchantRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatMerchantRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatMerchantRateModifier, COMDAT

; 5491 : {

	push	ebp
	mov	ebp, esp

; 5492 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatMerchantRateModifier);

	push	OFFSET ?getGreatMerchantRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatMerchantRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5493 : }

	pop	ebp
	ret	0
?lGetGreatMerchantRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatMerchantRateModifier
_TEXT	ENDS
EXTRN	?getGreatEngineerRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatEngineerRateModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetGreatEngineerRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatEngineerRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatEngineerRateModifier, COMDAT

; 5498 : {

	push	ebp
	mov	ebp, esp

; 5499 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatEngineerRateModifier);

	push	OFFSET ?getGreatEngineerRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatEngineerRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5500 : }

	pop	ebp
	ret	0
?lGetGreatEngineerRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatEngineerRateModifier
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetPolicyGreatPeopleRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetPolicyGreatPeopleRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyGreatPeopleRateModifier, COMDAT

; 5505 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 5506 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5507 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lGetPolicy

; 5508 : 	{
; 5509 : 		lua_pushinteger(L, pkPlayer->GetPlayerPolicies()->GetNumericModifier(POLICYMOD_GREAT_PERSON_RATE));

	push	2
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetPolicy:

; 5510 : 	}
; 5511 : 	return 1;

	mov	eax, 1

; 5512 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPolicyGreatPeopleRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyGreatPeopleRateModifier
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetPolicyGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetPolicyGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyGreatWriterRateModifier, COMDAT

; 5517 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 5518 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5519 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lGetPolicy@2

; 5520 : 	{
; 5521 : 		lua_pushinteger(L, pkPlayer->GetPlayerPolicies()->GetNumericModifier(POLICYMOD_GREAT_WRITER_RATE));

	push	23					; 00000017H
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetPolicy@2:

; 5522 : 	}
; 5523 : 	return 1;

	mov	eax, 1

; 5524 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPolicyGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyGreatWriterRateModifier
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetPolicyGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetPolicyGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyGreatArtistRateModifier, COMDAT

; 5529 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 5530 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5531 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lGetPolicy@3

; 5532 : 	{
; 5533 : 		lua_pushinteger(L, pkPlayer->GetPlayerPolicies()->GetNumericModifier(POLICYMOD_GREAT_ARTIST_RATE));

	push	24					; 00000018H
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetPolicy@3:

; 5534 : 	}
; 5535 : 	return 1;

	mov	eax, 1

; 5536 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPolicyGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyGreatArtistRateModifier
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetPolicyGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iMod$231222 = -12					; size = 4
_iProductionToGreatMusiciansModifier$231223 = -8	; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetPolicyGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyGreatMusicianRateModifier, COMDAT

; 5541 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 5542 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5543 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN2@lGetPolicy@4

; 5544 : 	{
; 5545 : 		
; 5546 : #ifdef NQ_PRODUCTION_TO_GREAT_MUSICIANS_MODIFIER_FROM_POLICIES
; 5547 : 		int iMod = pkPlayer->GetPlayerPolicies()->GetNumericModifier(POLICYMOD_GREAT_MUSICIAN_RATE);

	push	25					; 00000019H
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	mov	DWORD PTR _iMod$231222[ebp], eax

; 5548 : 		int iProductionToGreatMusiciansModifier = pkPlayer->GetPlayerPolicies()->GetNumericModifier(POLICYMOD_PRODUCTION_TO_GREAT_MUSICIANS_MODIFIER);

	push	47					; 0000002fH
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	mov	DWORD PTR _iProductionToGreatMusiciansModifier$231223[ebp], eax

; 5549 : 		if (iProductionToGreatMusiciansModifier > 0)

	cmp	DWORD PTR _iProductionToGreatMusiciansModifier$231223[ebp], 0
	jle	SHORT $LN1@lGetPolicy@4

; 5550 : 		{
; 5551 : 			iMod += pkPlayer->calculateTotalYield(YIELD_PRODUCTION) * iProductionToGreatMusiciansModifier / 100;

	push	1
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?calculateTotalYield@CvPlayer@@QBEHW4YieldTypes@@@Z ; CvPlayer::calculateTotalYield
	imul	eax, DWORD PTR _iProductionToGreatMusiciansModifier$231223[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	add	eax, DWORD PTR _iMod$231222[ebp]
	mov	DWORD PTR _iMod$231222[ebp], eax
$LN1@lGetPolicy@4:

; 5552 : 		}
; 5553 : 		lua_pushinteger(L, iMod);

	mov	edx, DWORD PTR _iMod$231222[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
$LN2@lGetPolicy@4:

; 5554 : #else
; 5555 : 		lua_pushinteger(L, pkPlayer->GetPlayerPolicies()->GetNumericModifier(POLICYMOD_GREAT_MUSICIAN_RATE));
; 5556 : #endif
; 5557 : 	}
; 5558 : 	return 1;

	mov	eax, 1

; 5559 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPolicyGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyGreatMusicianRateModifier
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetPolicyGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetPolicyGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyGreatScientistRateModifier, COMDAT

; 5564 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 5565 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5566 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lGetPolicy@5

; 5567 : 	{
; 5568 : 		lua_pushinteger(L, pkPlayer->GetPlayerPolicies()->GetNumericModifier(POLICYMOD_GREAT_SCIENTIST_RATE));

	push	27					; 0000001bH
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetPolicy@5:

; 5569 : 	}
; 5570 : 	return 1;

	mov	eax, 1

; 5571 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPolicyGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyGreatScientistRateModifier
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetPolicyGreatMerchantRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetPolicyGreatMerchantRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyGreatMerchantRateModifier, COMDAT

; 5576 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 5577 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5578 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lGetPolicy@6

; 5579 : 	{
; 5580 : 		lua_pushinteger(L, pkPlayer->GetPlayerPolicies()->GetNumericModifier(POLICYMOD_GREAT_MERCHANT_RATE));

	push	26					; 0000001aH
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetPolicy@6:

; 5581 : 	}
; 5582 : 	return 1;

	mov	eax, 1

; 5583 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPolicyGreatMerchantRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyGreatMerchantRateModifier
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetPolicyGreatEngineerRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetPolicyGreatEngineerRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyGreatEngineerRateModifier, COMDAT

; 5588 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 5589 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5590 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lGetPolicy@7

; 5591 : 	{
; 5592 : 		lua_pushinteger(L, 0);

	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetPolicy@7:

; 5593 : 	}
; 5594 : 	return 1;

	mov	eax, 1

; 5595 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPolicyGreatEngineerRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyGreatEngineerRateModifier
_TEXT	ENDS
EXTRN	?getProductionModifier@CvPlayer@@QBEHPAVCvString@@@Z:PROC ; CvPlayer::getProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetProductionModifier, COMDAT

; 5600 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 5601 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5602 : 	lua_pushinteger(L, pkPlayer->getProductionModifier());

	push	0
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getProductionModifier@CvPlayer@@QBEHPAVCvString@@@Z ; CvPlayer::getProductionModifier
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 5603 : 	return 1;

	mov	eax, 1

; 5604 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetProductionModifier
_TEXT	ENDS
EXTRN	?getProductionModifier@CvPlayer@@QBEHW4UnitTypes@@PAVCvString@@@Z:PROC ; CvPlayer::getProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetUnitProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_eUnit$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetUnitProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnitProductionModifier, COMDAT

; 5607 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 5608 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5609 : 	const UnitTypes eUnit = (UnitTypes)luaL_checkinteger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eUnit$[ebp], eax

; 5610 : 	lua_pushinteger(L, pkPlayer->getProductionModifier(eUnit));

	push	0
	mov	edx, DWORD PTR _eUnit$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getProductionModifier@CvPlayer@@QBEHW4UnitTypes@@PAVCvString@@@Z ; CvPlayer::getProductionModifier
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 5611 : 	return 1;

	mov	eax, 1

; 5612 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetUnitProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnitProductionModifier
_TEXT	ENDS
EXTRN	?getProductionModifier@CvPlayer@@QBEHW4BuildingTypes@@PAVCvString@@@Z:PROC ; CvPlayer::getProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_eBuilding$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBuildingProductionModifier, COMDAT

; 5615 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 5616 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5617 : 	const BuildingTypes eBuilding = (BuildingTypes)luaL_checkinteger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eBuilding$[ebp], eax

; 5618 : 	lua_pushinteger(L, pkPlayer->getProductionModifier(eBuilding));

	push	0
	mov	edx, DWORD PTR _eBuilding$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getProductionModifier@CvPlayer@@QBEHW4BuildingTypes@@PAVCvString@@@Z ; CvPlayer::getProductionModifier
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 5619 : 	return 1;

	mov	eax, 1

; 5620 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBuildingProductionModifier
_TEXT	ENDS
EXTRN	?getProductionModifier@CvPlayer@@QBEHW4ProjectTypes@@PAVCvString@@@Z:PROC ; CvPlayer::getProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetProjectProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_eProject$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetProjectProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetProjectProductionModifier, COMDAT

; 5623 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 5624 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5625 : 	const ProjectTypes eProject = (ProjectTypes)luaL_checkinteger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eProject$[ebp], eax

; 5626 : 	lua_pushinteger(L, pkPlayer->getProductionModifier(eProject));

	push	0
	mov	edx, DWORD PTR _eProject$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getProductionModifier@CvPlayer@@QBEHW4ProjectTypes@@PAVCvString@@@Z ; CvPlayer::getProductionModifier
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 5627 : 	return 1;

	mov	eax, 1

; 5628 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetProjectProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetProjectProductionModifier
_TEXT	ENDS
EXTRN	?getProductionModifier@CvPlayer@@QBEHW4SpecialistTypes@@PAVCvString@@@Z:PROC ; CvPlayer::getProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetSpecialistProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_eSpecialist$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetSpecialistProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetSpecialistProductionModifier, COMDAT

; 5631 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 5632 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5633 : 	const SpecialistTypes eSpecialist = (SpecialistTypes)luaL_checkinteger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eSpecialist$[ebp], eax

; 5634 : 	lua_pushinteger(L, pkPlayer->getProductionModifier(eSpecialist));

	push	0
	mov	edx, DWORD PTR _eSpecialist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getProductionModifier@CvPlayer@@QBEHW4SpecialistTypes@@PAVCvString@@@Z ; CvPlayer::getProductionModifier
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 5635 : 	return 1;

	mov	eax, 1

; 5636 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetSpecialistProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetSpecialistProductionModifier
_TEXT	ENDS
EXTRN	?getMaxGlobalBuildingProductionModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getMaxGlobalBuildingProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetMaxGlobalBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMaxGlobalBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMaxGlobalBuildingProductionModifier, COMDAT

; 5640 : {

	push	ebp
	mov	ebp, esp

; 5641 : 	return BasicLuaMethod(L, &CvPlayerAI::getMaxGlobalBuildingProductionModifier);

	push	OFFSET ?getMaxGlobalBuildingProductionModifier@CvPlayer@@QBEHXZ ; CvPlayer::getMaxGlobalBuildingProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5642 : }

	pop	ebp
	ret	0
?lGetMaxGlobalBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMaxGlobalBuildingProductionModifier
_TEXT	ENDS
EXTRN	?getMaxTeamBuildingProductionModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getMaxTeamBuildingProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetMaxTeamBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMaxTeamBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMaxTeamBuildingProductionModifier, COMDAT

; 5646 : {

	push	ebp
	mov	ebp, esp

; 5647 : 	return BasicLuaMethod(L, &CvPlayerAI::getMaxTeamBuildingProductionModifier);

	push	OFFSET ?getMaxTeamBuildingProductionModifier@CvPlayer@@QBEHXZ ; CvPlayer::getMaxTeamBuildingProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5648 : }

	pop	ebp
	ret	0
?lGetMaxTeamBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMaxTeamBuildingProductionModifier
_TEXT	ENDS
EXTRN	?getMaxPlayerBuildingProductionModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getMaxPlayerBuildingProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetMaxPlayerBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMaxPlayerBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMaxPlayerBuildingProductionModifier, COMDAT

; 5652 : {

	push	ebp
	mov	ebp, esp

; 5653 : 	return BasicLuaMethod(L, &CvPlayerAI::getMaxPlayerBuildingProductionModifier);

	push	OFFSET ?getMaxPlayerBuildingProductionModifier@CvPlayer@@QBEHXZ ; CvPlayer::getMaxPlayerBuildingProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5654 : }

	pop	ebp
	ret	0
?lGetMaxPlayerBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMaxPlayerBuildingProductionModifier
_TEXT	ENDS
EXTRN	?getFreeExperience@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getFreeExperience
; Function compile flags: /Odtp
;	COMDAT ?lGetFreeExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFreeExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFreeExperience, COMDAT

; 5658 : {

	push	ebp
	mov	ebp, esp

; 5659 : 	return BasicLuaMethod(L, &CvPlayerAI::getFreeExperience);

	push	OFFSET ?getFreeExperience@CvPlayer@@QBEHXZ ; CvPlayer::getFreeExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5660 : }

	pop	ebp
	ret	0
?lGetFreeExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFreeExperience
_TEXT	ENDS
EXTRN	?getFeatureProductionModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getFeatureProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetFeatureProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFeatureProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFeatureProductionModifier, COMDAT

; 5664 : {

	push	ebp
	mov	ebp, esp

; 5665 : 	return BasicLuaMethod(L, &CvPlayerAI::getFeatureProductionModifier);

	push	OFFSET ?getFeatureProductionModifier@CvPlayer@@QBEHXZ ; CvPlayer::getFeatureProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5666 : }

	pop	ebp
	ret	0
?lGetFeatureProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFeatureProductionModifier
_TEXT	ENDS
EXTRN	?getWorkerSpeedModifier@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getWorkerSpeedModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetWorkerSpeedModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetWorkerSpeedModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetWorkerSpeedModifier, COMDAT

; 5670 : {

	push	ebp
	mov	ebp, esp

; 5671 : 	return BasicLuaMethod(L, &CvPlayerAI::getWorkerSpeedModifier);

	push	OFFSET ?getWorkerSpeedModifier@CvPlayer@@QBEHXZ ; CvPlayer::getWorkerSpeedModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5672 : }

	pop	ebp
	ret	0
?lGetWorkerSpeedModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetWorkerSpeedModifier
_TEXT	ENDS
EXTRN	?getImprovementUpgradeRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getImprovementUpgradeRateModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetImprovementUpgradeRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetImprovementUpgradeRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetImprovementUpgradeRateModifier, COMDAT

; 5676 : {

	push	ebp
	mov	ebp, esp

; 5677 : 	return BasicLuaMethod(L, &CvPlayerAI::getImprovementUpgradeRateModifier);

	push	OFFSET ?getImprovementUpgradeRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getImprovementUpgradeRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5678 : }

	pop	ebp
	ret	0
?lGetImprovementUpgradeRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetImprovementUpgradeRateModifier
_TEXT	ENDS
EXTRN	?getMilitaryProductionModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getMilitaryProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetMilitaryProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMilitaryProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMilitaryProductionModifier, COMDAT

; 5682 : {

	push	ebp
	mov	ebp, esp

; 5683 : 	return BasicLuaMethod(L, &CvPlayerAI::getMilitaryProductionModifier);

	push	OFFSET ?getMilitaryProductionModifier@CvPlayer@@QBEHXZ ; CvPlayer::getMilitaryProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5684 : }

	pop	ebp
	ret	0
?lGetMilitaryProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMilitaryProductionModifier
_TEXT	ENDS
EXTRN	?getSpaceProductionModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getSpaceProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetSpaceProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSpaceProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetSpaceProductionModifier, COMDAT

; 5688 : {

	push	ebp
	mov	ebp, esp

; 5689 : 	return BasicLuaMethod(L, &CvPlayerAI::getSpaceProductionModifier);

	push	OFFSET ?getSpaceProductionModifier@CvPlayer@@QBEHXZ ; CvPlayer::getSpaceProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5690 : }

	pop	ebp
	ret	0
?lGetSpaceProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetSpaceProductionModifier
_TEXT	ENDS
EXTRN	?getSettlerProductionModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getSettlerProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetSettlerProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSettlerProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetSettlerProductionModifier, COMDAT

; 5694 : {

	push	ebp
	mov	ebp, esp

; 5695 : 	return BasicLuaMethod(L, &CvPlayerAI::getSettlerProductionModifier);

	push	OFFSET ?getSettlerProductionModifier@CvPlayer@@QBEHXZ ; CvPlayer::getSettlerProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5696 : }

	pop	ebp
	ret	0
?lGetSettlerProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetSettlerProductionModifier
_TEXT	ENDS
EXTRN	?getCapitalSettlerProductionModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getCapitalSettlerProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetCapitalSettlerProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCapitalSettlerProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCapitalSettlerProductionModifier, COMDAT

; 5700 : {

	push	ebp
	mov	ebp, esp

; 5701 : 	return BasicLuaMethod(L, &CvPlayerAI::getCapitalSettlerProductionModifier);

	push	OFFSET ?getCapitalSettlerProductionModifier@CvPlayer@@QBEHXZ ; CvPlayer::getCapitalSettlerProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5702 : }

	pop	ebp
	ret	0
?lGetCapitalSettlerProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCapitalSettlerProductionModifier
_TEXT	ENDS
EXTRN	?getWonderProductionModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getWonderProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetWonderProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetWonderProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetWonderProductionModifier, COMDAT

; 5706 : {

	push	ebp
	mov	ebp, esp

; 5707 : 	return BasicLuaMethod(L, &CvPlayerAI::getWonderProductionModifier);

	push	OFFSET ?getWonderProductionModifier@CvPlayer@@QBEHXZ ; CvPlayer::getWonderProductionModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5708 : }

	pop	ebp
	ret	0
?lGetWonderProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetWonderProductionModifier
_TEXT	ENDS
EXTRN	?GetUnitProductionMaintenanceMod@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetUnitProductionMaintenanceMod
; Function compile flags: /Odtp
;	COMDAT ?lGetUnitProductionMaintenanceMod@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitProductionMaintenanceMod@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnitProductionMaintenanceMod, COMDAT

; 5712 : {

	push	ebp
	mov	ebp, esp

; 5713 : 	return BasicLuaMethod(L, &CvPlayerAI::GetUnitProductionMaintenanceMod);

	push	OFFSET ?GetUnitProductionMaintenanceMod@CvPlayer@@QBEHXZ ; CvPlayer::GetUnitProductionMaintenanceMod
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5714 : }

	pop	ebp
	ret	0
?lGetUnitProductionMaintenanceMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnitProductionMaintenanceMod
_TEXT	ENDS
EXTRN	?GetNumUnitsSupplied@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetNumUnitsSupplied
; Function compile flags: /Odtp
;	COMDAT ?lGetNumUnitsSupplied@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumUnitsSupplied@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumUnitsSupplied, COMDAT

; 5718 : {

	push	ebp
	mov	ebp, esp

; 5719 : 	return BasicLuaMethod(L, &CvPlayerAI::GetNumUnitsSupplied);

	push	OFFSET ?GetNumUnitsSupplied@CvPlayer@@QBEHXZ ; CvPlayer::GetNumUnitsSupplied
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5720 : }

	pop	ebp
	ret	0
?lGetNumUnitsSupplied@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumUnitsSupplied
_TEXT	ENDS
EXTRN	?GetNumUnitsSuppliedByHandicap@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetNumUnitsSuppliedByHandicap
; Function compile flags: /Odtp
;	COMDAT ?lGetNumUnitsSuppliedByHandicap@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumUnitsSuppliedByHandicap@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumUnitsSuppliedByHandicap, COMDAT

; 5724 : {

	push	ebp
	mov	ebp, esp

; 5725 : 	return BasicLuaMethod(L, &CvPlayerAI::GetNumUnitsSuppliedByHandicap);

	push	OFFSET ?GetNumUnitsSuppliedByHandicap@CvPlayer@@QBEHXZ ; CvPlayer::GetNumUnitsSuppliedByHandicap
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5726 : }

	pop	ebp
	ret	0
?lGetNumUnitsSuppliedByHandicap@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumUnitsSuppliedByHandicap
_TEXT	ENDS
EXTRN	?GetNumUnitsSuppliedByCities@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetNumUnitsSuppliedByCities
; Function compile flags: /Odtp
;	COMDAT ?lGetNumUnitsSuppliedByCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumUnitsSuppliedByCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumUnitsSuppliedByCities, COMDAT

; 5730 : {

	push	ebp
	mov	ebp, esp

; 5731 : 	return BasicLuaMethod(L, &CvPlayerAI::GetNumUnitsSuppliedByCities);

	push	OFFSET ?GetNumUnitsSuppliedByCities@CvPlayer@@QBEHXZ ; CvPlayer::GetNumUnitsSuppliedByCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5732 : }

	pop	ebp
	ret	0
?lGetNumUnitsSuppliedByCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumUnitsSuppliedByCities
_TEXT	ENDS
EXTRN	?GetNumUnitsSuppliedByPopulation@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetNumUnitsSuppliedByPopulation
; Function compile flags: /Odtp
;	COMDAT ?lGetNumUnitsSuppliedByPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumUnitsSuppliedByPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumUnitsSuppliedByPopulation, COMDAT

; 5736 : {

	push	ebp
	mov	ebp, esp

; 5737 : 	return BasicLuaMethod(L, &CvPlayerAI::GetNumUnitsSuppliedByPopulation);

	push	OFFSET ?GetNumUnitsSuppliedByPopulation@CvPlayer@@QBEHXZ ; CvPlayer::GetNumUnitsSuppliedByPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5738 : }

	pop	ebp
	ret	0
?lGetNumUnitsSuppliedByPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumUnitsSuppliedByPopulation
_TEXT	ENDS
EXTRN	?GetNumUnitsOutOfSupply@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetNumUnitsOutOfSupply
; Function compile flags: /Odtp
;	COMDAT ?lGetNumUnitsOutOfSupply@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumUnitsOutOfSupply@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumUnitsOutOfSupply, COMDAT

; 5742 : {

	push	ebp
	mov	ebp, esp

; 5743 : 	return BasicLuaMethod(L, &CvPlayerAI::GetNumUnitsOutOfSupply);

	push	OFFSET ?GetNumUnitsOutOfSupply@CvPlayer@@QBEHXZ ; CvPlayer::GetNumUnitsOutOfSupply
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5744 : }

	pop	ebp
	ret	0
?lGetNumUnitsOutOfSupply@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumUnitsOutOfSupply
_TEXT	ENDS
EXTRN	?getCityDefenseModifier@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getCityDefenseModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetCityDefenseModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCityDefenseModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCityDefenseModifier, COMDAT

; 5748 : {

	push	ebp
	mov	ebp, esp

; 5749 : 	return BasicLuaMethod(L, &CvPlayerAI::getCityDefenseModifier);

	push	OFFSET ?getCityDefenseModifier@CvPlayer@@QBEHXZ ; CvPlayer::getCityDefenseModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5750 : }

	pop	ebp
	ret	0
?lGetCityDefenseModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCityDefenseModifier
_TEXT	ENDS
EXTRN	?getNumNukeUnits@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getNumNukeUnits
; Function compile flags: /Odtp
;	COMDAT ?lGetNumNukeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumNukeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNumNukeUnits, COMDAT

; 5754 : {

	push	ebp
	mov	ebp, esp

; 5755 : 	return BasicLuaMethod(L, &CvPlayerAI::getNumNukeUnits);

	push	OFFSET ?getNumNukeUnits@CvPlayer@@QBEHXZ ; CvPlayer::getNumNukeUnits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5756 : }

	pop	ebp
	ret	0
?lGetNumNukeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNumNukeUnits
_TEXT	ENDS
EXTRN	?getNumOutsideUnits@CvPlayer@@QAEHXZ:PROC	; CvPlayer::getNumOutsideUnits
; Function compile flags: /Odtp
;	COMDAT ?lGetNumOutsideUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumOutsideUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumOutsideUnits, COMDAT

; 5760 : {

	push	ebp
	mov	ebp, esp

; 5761 : 	return BasicLuaMethod(L, &CvPlayerAI::getNumOutsideUnits);

	push	OFFSET ?getNumOutsideUnits@CvPlayer@@QAEHXZ ; CvPlayer::getNumOutsideUnits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5762 : }

	pop	ebp
	ret	0
?lGetNumOutsideUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumOutsideUnits
_TEXT	ENDS
EXTRN	?getGoldPerUnit@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getGoldPerUnit
; Function compile flags: /Odtp
;	COMDAT ?lGetGoldPerUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldPerUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetGoldPerUnit, COMDAT

; 5767 : {

	push	ebp
	mov	ebp, esp

; 5768 : 	return BasicLuaMethod(L, &CvPlayerAI::getGoldPerUnit);

	push	OFFSET ?getGoldPerUnit@CvPlayer@@QBEHXZ	; CvPlayer::getGoldPerUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5769 : }

	pop	ebp
	ret	0
?lGetGoldPerUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetGoldPerUnit
_TEXT	ENDS
EXTRN	?changeGoldPerUnitTimes100@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::changeGoldPerUnitTimes100
; Function compile flags: /Odtp
;	COMDAT ?lChangeGoldPerUnitTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeGoldPerUnitTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeGoldPerUnitTimes100, COMDAT

; 5773 : {

	push	ebp
	mov	ebp, esp

; 5774 : 	return BasicLuaMethod(L, &CvPlayerAI::changeGoldPerUnitTimes100);

	push	OFFSET ?changeGoldPerUnitTimes100@CvPlayer@@QAEXH@Z ; CvPlayer::changeGoldPerUnitTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5775 : }

	pop	ebp
	ret	0
?lChangeGoldPerUnitTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeGoldPerUnitTimes100
_TEXT	ENDS
EXTRN	?getGoldPerMilitaryUnit@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getGoldPerMilitaryUnit
; Function compile flags: /Odtp
;	COMDAT ?lGetGoldPerMilitaryUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldPerMilitaryUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldPerMilitaryUnit, COMDAT

; 5779 : {

	push	ebp
	mov	ebp, esp

; 5780 : 	return BasicLuaMethod(L, &CvPlayerAI::getGoldPerMilitaryUnit);

	push	OFFSET ?getGoldPerMilitaryUnit@CvPlayer@@QBEHXZ ; CvPlayer::getGoldPerMilitaryUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5781 : }

	pop	ebp
	ret	0
?lGetGoldPerMilitaryUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldPerMilitaryUnit
_TEXT	ENDS
EXTRN	?getExtraUnitCost@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getExtraUnitCost
; Function compile flags: /Odtp
;	COMDAT ?lGetExtraUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetExtraUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetExtraUnitCost, COMDAT

; 5785 : {

	push	ebp
	mov	ebp, esp

; 5786 : 	return BasicLuaMethod(L, &CvPlayerAI::getExtraUnitCost);

	push	OFFSET ?getExtraUnitCost@CvPlayer@@QBEHXZ ; CvPlayer::getExtraUnitCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5787 : }

	pop	ebp
	ret	0
?lGetExtraUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetExtraUnitCost
_TEXT	ENDS
EXTRN	?getNumMilitaryUnits@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getNumMilitaryUnits
; Function compile flags: /Odtp
;	COMDAT ?lGetNumMilitaryUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumMilitaryUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumMilitaryUnits, COMDAT

; 5791 : {

	push	ebp
	mov	ebp, esp

; 5792 : 	return BasicLuaMethod(L, &CvPlayerAI::getNumMilitaryUnits);

	push	OFFSET ?getNumMilitaryUnits@CvPlayer@@QBEHXZ ; CvPlayer::getNumMilitaryUnits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5793 : }

	pop	ebp
	ret	0
?lGetNumMilitaryUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumMilitaryUnits
_TEXT	ENDS
EXTRN	?getHappyPerMilitaryUnit@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getHappyPerMilitaryUnit
; Function compile flags: /Odtp
;	COMDAT ?lGetHappyPerMilitaryUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappyPerMilitaryUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappyPerMilitaryUnit, COMDAT

; 5797 : {

	push	ebp
	mov	ebp, esp

; 5798 : 	return BasicLuaMethod(L, &CvPlayerAI::getHappyPerMilitaryUnit);

	push	OFFSET ?getHappyPerMilitaryUnit@CvPlayer@@QBEHXZ ; CvPlayer::getHappyPerMilitaryUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5799 : }

	pop	ebp
	ret	0
?lGetHappyPerMilitaryUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappyPerMilitaryUnit
_TEXT	ENDS
EXTRN	?isMilitaryFoodProduction@CvPlayer@@QBE_NXZ:PROC ; CvPlayer::isMilitaryFoodProduction
; Function compile flags: /Odtp
;	COMDAT ?lIsMilitaryFoodProduction@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMilitaryFoodProduction@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsMilitaryFoodProduction, COMDAT

; 5803 : {

	push	ebp
	mov	ebp, esp

; 5804 : 	return BasicLuaMethod(L, &CvPlayerAI::isMilitaryFoodProduction);

	push	OFFSET ?isMilitaryFoodProduction@CvPlayer@@QBE_NXZ ; CvPlayer::isMilitaryFoodProduction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 5805 : }

	pop	ebp
	ret	0
?lIsMilitaryFoodProduction@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsMilitaryFoodProduction
_TEXT	ENDS
EXTRN	?getHighestUnitLevel@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getHighestUnitLevel
; Function compile flags: /Odtp
;	COMDAT ?lGetHighestUnitLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHighestUnitLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHighestUnitLevel, COMDAT

; 5809 : {

	push	ebp
	mov	ebp, esp

; 5810 : 	return BasicLuaMethod(L, &CvPlayerAI::getHighestUnitLevel);

	push	OFFSET ?getHighestUnitLevel@CvPlayer@@QBEHXZ ; CvPlayer::getHighestUnitLevel
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5811 : }

	pop	ebp
	ret	0
?lGetHighestUnitLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHighestUnitLevel
_TEXT	ENDS
EXTRN	?getConscriptCount@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getConscriptCount
; Function compile flags: /Odtp
;	COMDAT ?lGetConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetConscriptCount, COMDAT

; 5816 : {

	push	ebp
	mov	ebp, esp

; 5817 : 	return BasicLuaMethod(L, &CvPlayerAI::getConscriptCount);

	push	OFFSET ?getConscriptCount@CvPlayer@@QBEHXZ ; CvPlayer::getConscriptCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5818 : }

	pop	ebp
	ret	0
?lGetConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetConscriptCount
_TEXT	ENDS
EXTRN	?setConscriptCount@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::setConscriptCount
; Function compile flags: /Odtp
;	COMDAT ?lSetConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetConscriptCount, COMDAT

; 5822 : {

	push	ebp
	mov	ebp, esp

; 5823 : 	return BasicLuaMethod(L, &CvPlayerAI::setConscriptCount);

	push	OFFSET ?setConscriptCount@CvPlayer@@QAEXH@Z ; CvPlayer::setConscriptCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5824 : }

	pop	ebp
	ret	0
?lSetConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetConscriptCount
_TEXT	ENDS
EXTRN	?changeConscriptCount@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::changeConscriptCount
; Function compile flags: /Odtp
;	COMDAT ?lChangeConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeConscriptCount, COMDAT

; 5828 : {

	push	ebp
	mov	ebp, esp

; 5829 : 	return BasicLuaMethod(L, &CvPlayerAI::changeConscriptCount);

	push	OFFSET ?changeConscriptCount@CvPlayer@@QAEXH@Z ; CvPlayer::changeConscriptCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5830 : }

	pop	ebp
	ret	0
?lChangeConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeConscriptCount
_TEXT	ENDS
EXTRN	?getMaxConscript@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getMaxConscript
; Function compile flags: /Odtp
;	COMDAT ?lGetMaxConscript@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMaxConscript@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetMaxConscript, COMDAT

; 5835 : {

	push	ebp
	mov	ebp, esp

; 5836 : 	return BasicLuaMethod(L, &CvPlayerAI::getMaxConscript);

	push	OFFSET ?getMaxConscript@CvPlayer@@QBEHXZ ; CvPlayer::getMaxConscript
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5837 : }

	pop	ebp
	ret	0
?lGetMaxConscript@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetMaxConscript
_TEXT	ENDS
EXTRN	?getOverflowResearch@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getOverflowResearch
; Function compile flags: /Odtp
;	COMDAT ?lGetOverflowResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetOverflowResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetOverflowResearch, COMDAT

; 5841 : {

	push	ebp
	mov	ebp, esp

; 5842 : 	return BasicLuaMethod(L, &CvPlayerAI::getOverflowResearch);

	push	OFFSET ?getOverflowResearch@CvPlayer@@QBEHXZ ; CvPlayer::getOverflowResearch
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5843 : }

	pop	ebp
	ret	0
?lGetOverflowResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetOverflowResearch
_TEXT	ENDS
EXTRN	?getExpInBorderModifier@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getExpInBorderModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetExpInBorderModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetExpInBorderModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetExpInBorderModifier, COMDAT

; 5847 : {

	push	ebp
	mov	ebp, esp

; 5848 : 	return BasicLuaMethod(L, &CvPlayerAI::getExpInBorderModifier);

	push	OFFSET ?getExpInBorderModifier@CvPlayer@@QBEHXZ ; CvPlayer::getExpInBorderModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5849 : }

	pop	ebp
	ret	0
?lGetExpInBorderModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetExpInBorderModifier
_TEXT	ENDS
EXTRN	?getLevelExperienceModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getLevelExperienceModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetLevelExperienceModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLevelExperienceModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetLevelExperienceModifier, COMDAT

; 5853 : {

	push	ebp
	mov	ebp, esp

; 5854 : 	return BasicLuaMethod(L, &CvPlayerAI::getLevelExperienceModifier);

	push	OFFSET ?getLevelExperienceModifier@CvPlayer@@QBEHXZ ; CvPlayer::getLevelExperienceModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5855 : }

	pop	ebp
	ret	0
?lGetLevelExperienceModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetLevelExperienceModifier
_TEXT	ENDS
EXTRN	?getCultureBombTimer@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getCultureBombTimer
; Function compile flags: /Odtp
;	COMDAT ?lGetCultureBombTimer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCultureBombTimer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCultureBombTimer, COMDAT

; 5859 : {

	push	ebp
	mov	ebp, esp

; 5860 : 	return BasicLuaMethod(L, &CvPlayerAI::getCultureBombTimer);

	push	OFFSET ?getCultureBombTimer@CvPlayer@@QBEHXZ ; CvPlayer::getCultureBombTimer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5861 : }

	pop	ebp
	ret	0
?lGetCultureBombTimer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCultureBombTimer
_TEXT	ENDS
EXTRN	?getConversionTimer@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getConversionTimer
; Function compile flags: /Odtp
;	COMDAT ?lGetConversionTimer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetConversionTimer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetConversionTimer, COMDAT

; 5865 : {

	push	ebp
	mov	ebp, esp

; 5866 : 	return BasicLuaMethod(L, &CvPlayerAI::getConversionTimer);

	push	OFFSET ?getConversionTimer@CvPlayer@@QBEHXZ ; CvPlayer::getConversionTimer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5867 : }

	pop	ebp
	ret	0
?lGetConversionTimer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetConversionTimer
_TEXT	ENDS
EXTRN	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ:PROC	; CvPlayer::getCapitalCity
; Function compile flags: /Odtp
;	COMDAT ?lGetCapitalCity@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCapitalCity@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetCapitalCity, COMDAT

; 5871 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 5872 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5873 : 
; 5874 : 	CvCity* pkCity = pkPlayer->getCapitalCity();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pkCity$[ebp], eax

; 5875 : 	CvLuaCity::Push(L, pkCity);

	mov	ecx, DWORD PTR _pkCity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8

; 5876 : 	return 1;

	mov	eax, 1

; 5877 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCapitalCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetCapitalCity
_TEXT	ENDS
EXTRN	?IsHasLostCapital@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::IsHasLostCapital
; Function compile flags: /Odtp
;	COMDAT ?lIsHasLostCapital@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHasLostCapital@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsHasLostCapital, COMDAT

; 5881 : {

	push	ebp
	mov	ebp, esp

; 5882 : 	return BasicLuaMethod(L, &CvPlayerAI::IsHasLostCapital);

	push	OFFSET ?IsHasLostCapital@CvPlayer@@QBE_NXZ ; CvPlayer::IsHasLostCapital
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 5883 : }

	pop	ebp
	ret	0
?lIsHasLostCapital@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsHasLostCapital
_TEXT	ENDS
EXTRN	?getCitiesLost@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getCitiesLost
; Function compile flags: /Odtp
;	COMDAT ?lGetCitiesLost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCitiesLost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetCitiesLost, COMDAT

; 5887 : {

	push	ebp
	mov	ebp, esp

; 5888 : 	return BasicLuaMethod(L, &CvPlayerAI::getCitiesLost);

	push	OFFSET ?getCitiesLost@CvPlayer@@QBEHXZ	; CvPlayer::getCitiesLost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5889 : }

	pop	ebp
	ret	0
?lGetCitiesLost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetCitiesLost
_TEXT	ENDS
EXTRN	?getPower@CvPlayer@@QBEHXZ:PROC			; CvPlayer::getPower
; Function compile flags: /Odtp
;	COMDAT ?lGetPower@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPower@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetPower, COMDAT

; 5894 : {

	push	ebp
	mov	ebp, esp

; 5895 : 	return BasicLuaMethod(L, &CvPlayerAI::getPower);

	push	OFFSET ?getPower@CvPlayer@@QBEHXZ	; CvPlayer::getPower
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5896 : }

	pop	ebp
	ret	0
?lGetPower@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetPower
_TEXT	ENDS
EXTRN	?GetMilitaryMight@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetMilitaryMight
; Function compile flags: /Odtp
;	COMDAT ?lGetMilitaryMight@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMilitaryMight@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMilitaryMight, COMDAT

; 5900 : {

	push	ebp
	mov	ebp, esp

; 5901 : 	return BasicLuaMethod(L, &CvPlayerAI::GetMilitaryMight);

	push	OFFSET ?GetMilitaryMight@CvPlayer@@QBEHXZ ; CvPlayer::GetMilitaryMight
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5902 : }

	pop	ebp
	ret	0
?lGetMilitaryMight@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMilitaryMight
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEIXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<unsigned int>
EXTRN	?getTotalTimePlayed@CvPlayer@@QBEIXZ:PROC	; CvPlayer::getTotalTimePlayed
; Function compile flags: /Odtp
;	COMDAT ?lGetTotalTimePlayed@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalTimePlayed@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTotalTimePlayed, COMDAT

; 5906 : {

	push	ebp
	mov	ebp, esp

; 5907 : 	return BasicLuaMethod(L, &CvPlayerAI::getTotalTimePlayed);

	push	OFFSET ?getTotalTimePlayed@CvPlayer@@QBEIXZ ; CvPlayer::getTotalTimePlayed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEIXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<unsigned int>
	add	esp, 8

; 5908 : }

	pop	ebp
	ret	0
?lGetTotalTimePlayed@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTotalTimePlayed
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEH_N1@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,bool>
EXTRN	?GetScore@CvPlayer@@QBEH_N0@Z:PROC		; CvPlayer::GetScore
; Function compile flags: /Odtp
;	COMDAT ?lGetScore@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScore@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetScore, COMDAT

; 5911 : {

	push	ebp
	mov	ebp, esp

; 5912 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScore);

	push	OFFSET ?GetScore@CvPlayer@@QBEH_N0@Z	; CvPlayer::GetScore
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEH_N1@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,bool>
	add	esp, 8

; 5913 : }

	pop	ebp
	ret	0
?lGetScore@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetScore
_TEXT	ENDS
EXTRN	?GetScoreFromCities@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromCities
; Function compile flags: /Odtp
;	COMDAT ?lGetScoreFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromCities, COMDAT

; 5916 : {

	push	ebp
	mov	ebp, esp

; 5917 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromCities);

	push	OFFSET ?GetScoreFromCities@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5918 : }

	pop	ebp
	ret	0
?lGetScoreFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromCities
_TEXT	ENDS
EXTRN	?GetScoreFromPopulation@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromPopulation
; Function compile flags: /Odtp
;	COMDAT ?lGetScoreFromPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromPopulation, COMDAT

; 5921 : {

	push	ebp
	mov	ebp, esp

; 5922 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromPopulation);

	push	OFFSET ?GetScoreFromPopulation@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5923 : }

	pop	ebp
	ret	0
?lGetScoreFromPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromPopulation
_TEXT	ENDS
EXTRN	?GetScoreFromLand@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetScoreFromLand
; Function compile flags: /Odtp
;	COMDAT ?lGetScoreFromLand@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromLand@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromLand, COMDAT

; 5926 : {

	push	ebp
	mov	ebp, esp

; 5927 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromLand);

	push	OFFSET ?GetScoreFromLand@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromLand
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5928 : }

	pop	ebp
	ret	0
?lGetScoreFromLand@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromLand
_TEXT	ENDS
EXTRN	?GetScoreFromWonders@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromWonders
; Function compile flags: /Odtp
;	COMDAT ?lGetScoreFromWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromWonders, COMDAT

; 5931 : {

	push	ebp
	mov	ebp, esp

; 5932 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromWonders);

	push	OFFSET ?GetScoreFromWonders@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromWonders
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5933 : }

	pop	ebp
	ret	0
?lGetScoreFromWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromWonders
_TEXT	ENDS
EXTRN	?GetScoreFromTechs@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromTechs
; Function compile flags: /Odtp
;	COMDAT ?lGetScoreFromTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromTechs, COMDAT

; 5936 : {

	push	ebp
	mov	ebp, esp

; 5937 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromTechs);

	push	OFFSET ?GetScoreFromTechs@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromTechs
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5938 : }

	pop	ebp
	ret	0
?lGetScoreFromTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromTechs
_TEXT	ENDS
EXTRN	?GetScoreFromFutureTech@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromFutureTech
; Function compile flags: /Odtp
;	COMDAT ?lGetScoreFromFutureTech@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromFutureTech@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromFutureTech, COMDAT

; 5941 : {

	push	ebp
	mov	ebp, esp

; 5942 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromFutureTech);

	push	OFFSET ?GetScoreFromFutureTech@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromFutureTech
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5943 : }

	pop	ebp
	ret	0
?lGetScoreFromFutureTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromFutureTech
_TEXT	ENDS
EXTRN	?ChangeScoreFromFutureTech@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeScoreFromFutureTech
; Function compile flags: /Odtp
;	COMDAT ?lChangeScoreFromFutureTech@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iChange$ = -4						; size = 4
_L$ = 8							; size = 4
?lChangeScoreFromFutureTech@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeScoreFromFutureTech, COMDAT

; 5947 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 5948 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5949 : 	int iChange = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iChange$[ebp], eax

; 5950 : 
; 5951 : 	pkPlayer->ChangeScoreFromFutureTech(iChange);

	mov	edx, DWORD PTR _iChange$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?ChangeScoreFromFutureTech@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeScoreFromFutureTech

; 5952 : 	return 1;

	mov	eax, 1

; 5953 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChangeScoreFromFutureTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeScoreFromFutureTech
_TEXT	ENDS
EXTRN	?GetScoreFromScenario1@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromScenario1
; Function compile flags: /Odtp
;	COMDAT ?lGetScoreFromScenario1@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromScenario1@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromScenario1, COMDAT

; 5956 : {

	push	ebp
	mov	ebp, esp

; 5957 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromScenario1);

	push	OFFSET ?GetScoreFromScenario1@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromScenario1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5958 : }

	pop	ebp
	ret	0
?lGetScoreFromScenario1@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromScenario1
_TEXT	ENDS
EXTRN	?ChangeScoreFromScenario1@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeScoreFromScenario1
; Function compile flags: /Odtp
;	COMDAT ?lChangeScoreFromScenario1@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iChange$ = -4						; size = 4
_L$ = 8							; size = 4
?lChangeScoreFromScenario1@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeScoreFromScenario1, COMDAT

; 5962 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 5963 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5964 : 	int iChange = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iChange$[ebp], eax

; 5965 : 
; 5966 : 	pkPlayer->ChangeScoreFromScenario1(iChange);

	mov	edx, DWORD PTR _iChange$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?ChangeScoreFromScenario1@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeScoreFromScenario1

; 5967 : 	return 1;

	mov	eax, 1

; 5968 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChangeScoreFromScenario1@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeScoreFromScenario1
_TEXT	ENDS
EXTRN	?GetScoreFromScenario2@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromScenario2
; Function compile flags: /Odtp
;	COMDAT ?lGetScoreFromScenario2@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromScenario2@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromScenario2, COMDAT

; 5971 : {

	push	ebp
	mov	ebp, esp

; 5972 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromScenario2);

	push	OFFSET ?GetScoreFromScenario2@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromScenario2
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5973 : }

	pop	ebp
	ret	0
?lGetScoreFromScenario2@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromScenario2
_TEXT	ENDS
EXTRN	?ChangeScoreFromScenario2@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeScoreFromScenario2
; Function compile flags: /Odtp
;	COMDAT ?lChangeScoreFromScenario2@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iChange$ = -4						; size = 4
_L$ = 8							; size = 4
?lChangeScoreFromScenario2@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeScoreFromScenario2, COMDAT

; 5977 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 5978 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5979 : 	int iChange = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iChange$[ebp], eax

; 5980 : 
; 5981 : 	pkPlayer->ChangeScoreFromScenario2(iChange);

	mov	edx, DWORD PTR _iChange$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?ChangeScoreFromScenario2@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeScoreFromScenario2

; 5982 : 	return 1;

	mov	eax, 1

; 5983 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChangeScoreFromScenario2@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeScoreFromScenario2
_TEXT	ENDS
EXTRN	?GetScoreFromScenario3@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromScenario3
; Function compile flags: /Odtp
;	COMDAT ?lGetScoreFromScenario3@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromScenario3@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromScenario3, COMDAT

; 5986 : {

	push	ebp
	mov	ebp, esp

; 5987 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromScenario3);

	push	OFFSET ?GetScoreFromScenario3@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromScenario3
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5988 : }

	pop	ebp
	ret	0
?lGetScoreFromScenario3@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromScenario3
_TEXT	ENDS
EXTRN	?ChangeScoreFromScenario3@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeScoreFromScenario3
; Function compile flags: /Odtp
;	COMDAT ?lChangeScoreFromScenario3@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iChange$ = -4						; size = 4
_L$ = 8							; size = 4
?lChangeScoreFromScenario3@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeScoreFromScenario3, COMDAT

; 5992 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 5993 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 5994 : 	int iChange = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iChange$[ebp], eax

; 5995 : 
; 5996 : 	pkPlayer->ChangeScoreFromScenario3(iChange);

	mov	edx, DWORD PTR _iChange$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?ChangeScoreFromScenario3@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeScoreFromScenario3

; 5997 : 	return 1;

	mov	eax, 1

; 5998 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChangeScoreFromScenario3@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeScoreFromScenario3
_TEXT	ENDS
EXTRN	?GetScoreFromScenario4@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromScenario4
; Function compile flags: /Odtp
;	COMDAT ?lGetScoreFromScenario4@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromScenario4@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromScenario4, COMDAT

; 6001 : {

	push	ebp
	mov	ebp, esp

; 6002 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromScenario4);

	push	OFFSET ?GetScoreFromScenario4@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromScenario4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 6003 : }

	pop	ebp
	ret	0
?lGetScoreFromScenario4@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromScenario4
_TEXT	ENDS
EXTRN	?ChangeScoreFromScenario4@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeScoreFromScenario4
; Function compile flags: /Odtp
;	COMDAT ?lChangeScoreFromScenario4@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iChange$ = -4						; size = 4
_L$ = 8							; size = 4
?lChangeScoreFromScenario4@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeScoreFromScenario4, COMDAT

; 6007 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 6008 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6009 : 	int iChange = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iChange$[ebp], eax

; 6010 : 
; 6011 : 	pkPlayer->ChangeScoreFromScenario4(iChange);

	mov	edx, DWORD PTR _iChange$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?ChangeScoreFromScenario4@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeScoreFromScenario4

; 6012 : 	return 1;

	mov	eax, 1

; 6013 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChangeScoreFromScenario4@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeScoreFromScenario4
_TEXT	ENDS
EXTRN	?GetScoreFromPolicies@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromPolicies
; Function compile flags: /Odtp
;	COMDAT ?lGetScoreFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromPolicies, COMDAT

; 6016 : {

	push	ebp
	mov	ebp, esp

; 6017 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromPolicies);

	push	OFFSET ?GetScoreFromPolicies@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromPolicies
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 6018 : }

	pop	ebp
	ret	0
?lGetScoreFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromPolicies
_TEXT	ENDS
EXTRN	?GetScoreFromGreatWorks@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromGreatWorks
; Function compile flags: /Odtp
;	COMDAT ?lGetScoreFromGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromGreatWorks, COMDAT

; 6021 : {

	push	ebp
	mov	ebp, esp

; 6022 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromGreatWorks);

	push	OFFSET ?GetScoreFromGreatWorks@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromGreatWorks
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 6023 : }

	pop	ebp
	ret	0
?lGetScoreFromGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromGreatWorks
_TEXT	ENDS
EXTRN	?GetScoreFromReligion@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromReligion
; Function compile flags: /Odtp
;	COMDAT ?lGetScoreFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromReligion, COMDAT

; 6026 : {

	push	ebp
	mov	ebp, esp

; 6027 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromReligion);

	push	OFFSET ?GetScoreFromReligion@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 6028 : }

	pop	ebp
	ret	0
?lGetScoreFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromReligion
_TEXT	ENDS
EXTRN	?IsGoldenAgeCultureBonusDisabled@CvPlayer@@QBE_NXZ:PROC ; CvPlayer::IsGoldenAgeCultureBonusDisabled
; Function compile flags: /Odtp
;	COMDAT ?lIsGoldenAgeCultureBonusDisabled@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsGoldenAgeCultureBonusDisabled@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsGoldenAgeCultureBonusDisabled, COMDAT

; 6031 : {

	push	ebp
	mov	ebp, esp

; 6032 : 	return BasicLuaMethod(L, &CvPlayerAI::IsGoldenAgeCultureBonusDisabled);

	push	OFFSET ?IsGoldenAgeCultureBonusDisabled@CvPlayer@@QBE_NXZ ; CvPlayer::IsGoldenAgeCultureBonusDisabled
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 6033 : }

	pop	ebp
	ret	0
?lIsGoldenAgeCultureBonusDisabled@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsGoldenAgeCultureBonusDisabled
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lIsMinorCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMinorCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsMinorCiv, COMDAT

; 6039 : {

	push	ebp
	mov	ebp, esp

; 6040 : 	return BasicLuaMethod(L, &CvPlayerAI::isMinorCiv);

	push	OFFSET ?isMinorCiv@CvPlayer@@QBE_NXZ	; CvPlayer::isMinorCiv
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 6041 : }

	pop	ebp
	ret	0
?lIsMinorCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsMinorCiv
_TEXT	ENDS
EXTRN	?GetMinorCivType@CvMinorCivAI@@QBE?AW4MinorCivTypes@@XZ:PROC ; CvMinorCivAI::GetMinorCivType
EXTRN	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ:PROC ; CvPlayer::GetMinorCivAI
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorCivType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetMinorCivType, COMDAT

; 6045 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 6046 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6047 : 
; 6048 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetMinorCivType();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetMinorCivType@CvMinorCivAI@@QBE?AW4MinorCivTypes@@XZ ; CvMinorCivAI::GetMinorCivType
	mov	DWORD PTR _iResult$[ebp], eax

; 6049 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 6050 : 	return 1;

	mov	eax, 1

; 6051 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetMinorCivType
_TEXT	ENDS
EXTRN	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ:PROC ; CvMinorCivAI::GetTrait
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorCivTrait@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivTrait@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivTrait, COMDAT

; 6054 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 6055 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6056 : 
; 6057 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetTrait();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait
	mov	DWORD PTR _iResult$[ebp], eax

; 6058 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 6059 : 	return 1;

	mov	eax, 1

; 6060 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivTrait@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivTrait
_TEXT	ENDS
EXTRN	?GetPersonality@CvMinorCivAI@@QBE?AW4MinorCivPersonalityTypes@@XZ:PROC ; CvMinorCivAI::GetPersonality
; Function compile flags: /Odtp
;	COMDAT ?lGetPersonality@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetPersonality@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetPersonality, COMDAT

; 6063 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 6064 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6065 : 
; 6066 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetPersonality();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetPersonality@CvMinorCivAI@@QBE?AW4MinorCivPersonalityTypes@@XZ ; CvMinorCivAI::GetPersonality
	mov	DWORD PTR _iResult$[ebp], eax

; 6067 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 6068 : 	return 1;

	mov	eax, 1

; 6069 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPersonality@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetPersonality
_TEXT	ENDS
EXTRN	?IsHasUniqueUnit@CvMinorCivAI@@QBE_NXZ:PROC	; CvMinorCivAI::IsHasUniqueUnit
; Function compile flags: /Odtp
;	COMDAT ?lIsMinorCivHasUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsMinorCivHasUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsMinorCivHasUniqueUnit, COMDAT

; 6072 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 6073 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6074 : 
; 6075 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsHasUniqueUnit();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsHasUniqueUnit@CvMinorCivAI@@QBE_NXZ	; CvMinorCivAI::IsHasUniqueUnit
	mov	BYTE PTR _bResult$[ebp], al

; 6076 : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 6077 : 	return 1;

	mov	eax, 1

; 6078 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsMinorCivHasUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsMinorCivHasUniqueUnit
_TEXT	ENDS
EXTRN	?GetUniqueUnit@CvMinorCivAI@@QBE?AW4UnitTypes@@XZ:PROC ; CvMinorCivAI::GetUniqueUnit
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorCivUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivUniqueUnit, COMDAT

; 6081 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 6082 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6083 : 
; 6084 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetUniqueUnit();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetUniqueUnit@CvMinorCivAI@@QBE?AW4UnitTypes@@XZ ; CvMinorCivAI::GetUniqueUnit
	mov	DWORD PTR _iResult$[ebp], eax

; 6085 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 6086 : 	return 1;

	mov	eax, 1

; 6087 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivUniqueUnit
_TEXT	ENDS
EXTRN	?SetUniqueUnit@CvMinorCivAI@@QAEXW4UnitTypes@@@Z:PROC ; CvMinorCivAI::SetUniqueUnit
; Function compile flags: /Odtp
;	COMDAT ?lSetMinorCivUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_eUnit$ = -4						; size = 4
_L$ = 8							; size = 4
?lSetMinorCivUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetMinorCivUniqueUnit, COMDAT

; 6090 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 6091 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6092 : 	const UnitTypes eUnit = (UnitTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eUnit$[ebp], eax

; 6093 : 
; 6094 : 	pkPlayer->GetMinorCivAI()->SetUniqueUnit(eUnit);

	mov	edx, DWORD PTR _eUnit$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?SetUniqueUnit@CvMinorCivAI@@QAEXW4UnitTypes@@@Z ; CvMinorCivAI::SetUniqueUnit

; 6095 : 	return 0;

	xor	eax, eax

; 6096 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetMinorCivUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetMinorCivUniqueUnit
_TEXT	ENDS
EXTRN	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ:PROC ; CvMinorCivAI::GetAlly
; Function compile flags: /Odtp
;	COMDAT ?lGetAlly@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetAlly@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lGetAlly, COMDAT

; 6099 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 6100 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6101 : 
; 6102 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetAlly();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetAlly
	mov	DWORD PTR _iResult$[ebp], eax

; 6103 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 6104 : 	return 1;

	mov	eax, 1

; 6105 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetAlly@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lGetAlly
_TEXT	ENDS
EXTRN	?GetAlliedTurns@CvMinorCivAI@@QBEHXZ:PROC	; CvMinorCivAI::GetAlliedTurns
; Function compile flags: /Odtp
;	COMDAT ?lGetAlliedTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetAlliedTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetAlliedTurns, COMDAT

; 6108 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 6109 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6110 : 
; 6111 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetAlliedTurns();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetAlliedTurns@CvMinorCivAI@@QBEHXZ	; CvMinorCivAI::GetAlliedTurns
	mov	DWORD PTR _iResult$[ebp], eax

; 6112 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 6113 : 	return 1;

	mov	eax, 1

; 6114 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetAlliedTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetAlliedTurns
_TEXT	ENDS
EXTRN	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsFriends
; Function compile flags: /Odtp
;	COMDAT ?lIsFriends@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsFriends@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsFriends, COMDAT

; 6117 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6118 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6119 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6120 : 
; 6121 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsFriends(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	mov	BYTE PTR _bResult$[ebp], al

; 6122 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 6123 : 	return 1;

	mov	eax, 1

; 6124 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsFriends@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsFriends
_TEXT	ENDS
EXTRN	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsAllies
; Function compile flags: /Odtp
;	COMDAT ?lIsAllies@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsAllies@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsAllies, COMDAT

; 6127 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6128 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6129 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6130 : 
; 6131 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsAllies(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAllies
	mov	BYTE PTR _bResult$[ebp], al

; 6132 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 6133 : 	return 1;

	mov	eax, 1

; 6134 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsAllies@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsAllies
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
_TEXT	ENDS
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
_TEXT	ENDS
EXTRN	?IsPlayerHasOpenBorders@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsPlayerHasOpenBorders
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
;	COMDAT ?lIsPlayerHasOpenBorders@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsPlayerHasOpenBorders@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerHasOpenBorders, COMDAT

; 6137 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6138 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6139 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6140 : 
; 6141 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsPlayerHasOpenBorders(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsPlayerHasOpenBorders@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsPlayerHasOpenBorders
	mov	BYTE PTR _bResult$[ebp], al

; 6142 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 6143 : 	return 1;

	mov	eax, 1

; 6144 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerHasOpenBorders@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerHasOpenBorders
_TEXT	ENDS
EXTRN	?IsPlayerHasOpenBordersAutomatically@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsPlayerHasOpenBordersAutomatically
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerHasOpenBordersAutomatically@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsPlayerHasOpenBordersAutomatically@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerHasOpenBordersAutomatically, COMDAT

; 6147 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6148 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6149 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6150 : 
; 6151 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsPlayerHasOpenBordersAutomatically(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsPlayerHasOpenBordersAutomatically@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsPlayerHasOpenBordersAutomatically
	mov	BYTE PTR _bResult$[ebp], al

; 6152 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 6153 : 	return 1;

	mov	eax, 1

; 6154 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerHasOpenBordersAutomatically@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerHasOpenBordersAutomatically
_TEXT	ENDS
EXTRN	?GetFriendshipChangePerTurnTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetFriendshipChangePerTurnTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetFriendshipChangePerTurnTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetFriendshipChangePerTurnTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFriendshipChangePerTurnTimes100, COMDAT

; 6157 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6158 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6159 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6160 : 
; 6161 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetFriendshipChangePerTurnTimes100(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetFriendshipChangePerTurnTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetFriendshipChangePerTurnTimes100
	mov	DWORD PTR _iResult$[ebp], eax

; 6162 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 6163 : 	return 1;

	mov	eax, 1

; 6164 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetFriendshipChangePerTurnTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFriendshipChangePerTurnTimes100
_TEXT	ENDS
EXTRN	?GetEffectiveFriendshipWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetEffectiveFriendshipWithMajor
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorCivFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivFriendshipWithMajor, COMDAT

; 6167 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6168 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6169 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6170 : 
; 6171 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetEffectiveFriendshipWithMajor(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetEffectiveFriendshipWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajor
	mov	DWORD PTR _iResult$[ebp], eax

; 6172 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 6173 : 	return 1;

	mov	eax, 1

; 6174 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivFriendshipWithMajor
_TEXT	ENDS
EXTRN	?GetBaseFriendshipWithMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetBaseFriendshipWithMajor
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorCivBaseFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivBaseFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivBaseFriendshipWithMajor, COMDAT

; 6178 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6179 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6180 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6181 : 
; 6182 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetBaseFriendshipWithMajor(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetBaseFriendshipWithMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBaseFriendshipWithMajor
	mov	DWORD PTR _iResult$[ebp], eax

; 6183 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 6184 : 	return 1;

	mov	eax, 1

; 6185 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivBaseFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivBaseFriendshipWithMajor
_TEXT	ENDS
EXTRN	?ChangeFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z:PROC ; CvMinorCivAI::ChangeFriendshipWithMajor
; Function compile flags: /Odtp
;	COMDAT ?lChangeMinorCivFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iChange$ = -4						; size = 4
_L$ = 8							; size = 4
?lChangeMinorCivFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeMinorCivFriendshipWithMajor, COMDAT

; 6190 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6191 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6192 : 	PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6193 : 	int iChange = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iChange$[ebp], eax

; 6194 : 
; 6195 : 	pkPlayer->GetMinorCivAI()->ChangeFriendshipWithMajor(ePlayer, iChange);

	push	0
	mov	eax, DWORD PTR _iChange$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?ChangeFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::ChangeFriendshipWithMajor

; 6196 : 	return 1;

	mov	eax, 1

; 6197 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChangeMinorCivFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeMinorCivFriendshipWithMajor
_TEXT	ENDS
EXTRN	?GetFriendshipAnchorWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetFriendshipAnchorWithMajor
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorCivFriendshipAnchorWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eMajor$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivFriendshipAnchorWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivFriendshipAnchorWithMajor, COMDAT

; 6201 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6202 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6203 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMajor$[ebp], eax

; 6204 : 
; 6205 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetFriendshipAnchorWithMajor(eMajor);

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetFriendshipAnchorWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetFriendshipAnchorWithMajor
	mov	DWORD PTR _iResult$[ebp], eax

; 6206 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 6207 : 	return 1;

	mov	eax, 1

; 6208 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivFriendshipAnchorWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivFriendshipAnchorWithMajor
_TEXT	ENDS
EXTRN	?IsPeaceBlocked@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z:PROC ; CvMinorCivAI::IsPeaceBlocked
; Function compile flags: /Odtp
;	COMDAT ?lIsPeaceBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bResult$ = -5						; size = 1
_eTeam$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsPeaceBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsPeaceBlocked, COMDAT

; 6211 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6212 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6213 : 	const TeamTypes eTeam = (TeamTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eTeam$[ebp], eax

; 6214 : 
; 6215 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsPeaceBlocked(eTeam);

	mov	edx, DWORD PTR _eTeam$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsPeaceBlocked@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z ; CvMinorCivAI::IsPeaceBlocked
	mov	BYTE PTR _bResult$[ebp], al

; 6216 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 6217 : 	return 1;

	mov	eax, 1

; 6218 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPeaceBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsPeaceBlocked
_TEXT	ENDS
EXTRN	?IsInfluenceTooLowForPeace@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsInfluenceTooLowForPeace
; Function compile flags: /Odtp
;	COMDAT ?lIsInfluenceTooLowForPeace@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsInfluenceTooLowForPeace@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsInfluenceTooLowForPeace, COMDAT

; 6222 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6223 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6224 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6225 : 
; 6226 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsInfluenceTooLowForPeace(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsInfluenceTooLowForPeace@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsInfluenceTooLowForPeace
	mov	BYTE PTR _bResult$[ebp], al

; 6227 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 6228 : 	return 1;

	mov	eax, 1

; 6229 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsInfluenceTooLowForPeace@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsInfluenceTooLowForPeace
_TEXT	ENDS
EXTRN	?IsPermanentWar@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z:PROC ; CvMinorCivAI::IsPermanentWar
; Function compile flags: /Odtp
;	COMDAT ?lIsMinorPermanentWar@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bResult$ = -5						; size = 1
_eTeam$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsMinorPermanentWar@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsMinorPermanentWar, COMDAT

; 6233 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6234 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6235 : 	const TeamTypes eTeam = (TeamTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eTeam$[ebp], eax

; 6236 : 
; 6237 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsPermanentWar(eTeam);

	mov	edx, DWORD PTR _eTeam$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsPermanentWar@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z ; CvMinorCivAI::IsPermanentWar
	mov	BYTE PTR _bResult$[ebp], al

; 6238 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 6239 : 	return 1;

	mov	eax, 1

; 6240 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsMinorPermanentWar@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsMinorPermanentWar
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetNumMinorCivsMet@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T248767 = -28						; size = 4
$T248755 = -24						; size = 4
_eOtherTeam$231650 = -20				; size = 4
_i$231646 = -16						; size = 4
_pkPlayer$ = -12					; size = 4
_iNumMinorCivsMet$ = -8					; size = 4
_eTeam$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumMinorCivsMet@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumMinorCivsMet, COMDAT

; 6243 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 6244 : 	int iNumMinorCivsMet = 0;

	mov	DWORD PTR _iNumMinorCivsMet$[ebp], 0

; 6245 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6246 : 	TeamTypes eTeam = pkPlayer->getTeam();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR _eTeam$[ebp], eax

; 6247 : 
; 6248 : 	for(int i = MAX_MAJOR_CIVS; i < MAX_CIV_PLAYERS; i++)

	mov	DWORD PTR _i$231646[ebp], 22		; 00000016H
	jmp	SHORT $LN5@lGetNumMin
$LN4@lGetNumMin:
	mov	eax, DWORD PTR _i$231646[ebp]
	add	eax, 1
	mov	DWORD PTR _i$231646[ebp], eax
$LN5@lGetNumMin:
	cmp	DWORD PTR _i$231646[ebp], 63		; 0000003fH
	jge	SHORT $LN3@lGetNumMin

; 6249 : 	{
; 6250 : 		TeamTypes eOtherTeam = GET_PLAYER((PlayerTypes)i).getTeam();

	mov	ecx, DWORD PTR _i$231646[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T248755[ebp], ecx
	mov	edx, DWORD PTR $T248755[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR _eOtherTeam$231650[ebp], eax

; 6251 : 
; 6252 : 		if(eOtherTeam == eTeam)

	mov	ecx, DWORD PTR _eOtherTeam$231650[ebp]
	cmp	ecx, DWORD PTR _eTeam$[ebp]
	jne	SHORT $LN2@lGetNumMin

; 6253 : 		{
; 6254 : 			continue;

	jmp	SHORT $LN4@lGetNumMin
$LN2@lGetNumMin:

; 6255 : 		}
; 6256 : 
; 6257 : 		if(GET_TEAM(eTeam).isHasMet(eOtherTeam))

	mov	edx, DWORD PTR _eTeam$[ebp]
	imul	edx, 2984				; 00000ba8H
	add	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T248767[ebp], edx
	mov	eax, DWORD PTR _eOtherTeam$231650[ebp]
	push	eax
	mov	ecx, DWORD PTR $T248767[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@lGetNumMin

; 6258 : 		{
; 6259 : 			iNumMinorCivsMet += 1;

	mov	edx, DWORD PTR _iNumMinorCivsMet$[ebp]
	add	edx, 1
	mov	DWORD PTR _iNumMinorCivsMet$[ebp], edx
$LN1@lGetNumMin:

; 6260 : 		}
; 6261 : 	}

	jmp	SHORT $LN4@lGetNumMin
$LN3@lGetNumMin:

; 6262 : 
; 6263 : 	lua_pushinteger(L, iNumMinorCivsMet);

	mov	eax, DWORD PTR _iNumMinorCivsMet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 6264 : 	return 1;

	mov	eax, 1

; 6265 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumMinorCivsMet@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumMinorCivsMet
_TEXT	ENDS
EXTRN	?GetFriendshipNeededForNextLevel@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetFriendshipNeededForNextLevel
; Function compile flags: /Odtp
;	COMDAT ?lGetFriendshipNeededForNextLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetFriendshipNeededForNextLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFriendshipNeededForNextLevel, COMDAT

; 6268 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6269 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6270 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6271 : 
; 6272 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetFriendshipNeededForNextLevel(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetFriendshipNeededForNextLevel@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetFriendshipNeededForNextLevel
	mov	DWORD PTR _iResult$[ebp], eax

; 6273 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 6274 : 	return 1;

	mov	eax, 1

; 6275 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetFriendshipNeededForNextLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFriendshipNeededForNextLevel
_TEXT	ENDS
EXTRN	?GetFriendshipLevelWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetFriendshipLevelWithMajor
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorCivFriendshipLevelWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivFriendshipLevelWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivFriendshipLevelWithMajor, COMDAT

; 6278 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6279 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6280 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6281 : 
; 6282 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetFriendshipLevelWithMajor(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetFriendshipLevelWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetFriendshipLevelWithMajor
	mov	DWORD PTR _iResult$[ebp], eax

; 6283 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 6284 : 	return 1;

	mov	eax, 1

; 6285 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivFriendshipLevelWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivFriendshipLevelWithMajor
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetActiveQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetActiveQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetActiveQuestForPlayer, COMDAT

; 6289 : {

	push	ebp
	mov	ebp, esp

; 6290 : 	return lIsMinorCivActiveQuestForPlayer(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?lIsMinorCivActiveQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivActiveQuestForPlayer
	add	esp, 4

; 6291 : }

	pop	ebp
	ret	0
?lGetActiveQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetActiveQuestForPlayer
_TEXT	ENDS
EXTRN	?IsActiveQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z:PROC ; CvMinorCivAI::IsActiveQuestForPlayer
; Function compile flags: /Odtp
;	COMDAT ?lIsMinorCivActiveQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -16						; size = 4
_pkPlayer$ = -12					; size = 4
_bResult$ = -8						; size = 4
_eType$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsMinorCivActiveQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsMinorCivActiveQuestForPlayer, COMDAT

; 6294 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 6295 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6296 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6297 : 	const MinorCivQuestTypes eType = (MinorCivQuestTypes) lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eType$[ebp], eax

; 6298 : 
; 6299 : 	const int bResult = pkPlayer->GetMinorCivAI()->IsActiveQuestForPlayer(ePlayer, eType);

	mov	eax, DWORD PTR _eType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsActiveQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsActiveQuestForPlayer
	movzx	edx, al
	mov	DWORD PTR _bResult$[ebp], edx

; 6300 : 	lua_pushboolean(L, bResult);

	mov	eax, DWORD PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 6301 : 	return 1;

	mov	eax, 1

; 6302 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsMinorCivActiveQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsMinorCivActiveQuestForPlayer
_TEXT	ENDS
EXTRN	?GetNumActiveQuestsForPlayer@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetNumActiveQuestsForPlayer
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorCivNumActiveQuestsForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivNumActiveQuestsForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivNumActiveQuestsForPlayer, COMDAT

; 6305 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6306 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6307 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6308 : 
; 6309 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetNumActiveQuestsForPlayer(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetNumActiveQuestsForPlayer@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetNumActiveQuestsForPlayer
	mov	DWORD PTR _iResult$[ebp], eax

; 6310 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 6311 : 	return 1;

	mov	eax, 1

; 6312 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivNumActiveQuestsForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivNumActiveQuestsForPlayer
_TEXT	ENDS
EXTRN	?IsDisplayedQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z:PROC ; CvMinorCivAI::IsDisplayedQuestForPlayer
; Function compile flags: /Odtp
;	COMDAT ?lIsMinorCivDisplayedQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -16						; size = 4
_pkPlayer$ = -12					; size = 4
_bResult$ = -8						; size = 4
_eType$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsMinorCivDisplayedQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsMinorCivDisplayedQuestForPlayer, COMDAT

; 6315 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 6316 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6317 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6318 : 	const MinorCivQuestTypes eType = (MinorCivQuestTypes) lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eType$[ebp], eax

; 6319 : 
; 6320 : 	const int bResult = pkPlayer->GetMinorCivAI()->IsDisplayedQuestForPlayer(ePlayer, eType);

	mov	eax, DWORD PTR _eType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsDisplayedQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsDisplayedQuestForPlayer
	movzx	edx, al
	mov	DWORD PTR _bResult$[ebp], edx

; 6321 : 	lua_pushboolean(L, bResult);

	mov	eax, DWORD PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 6322 : 	return 1;

	mov	eax, 1

; 6323 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsMinorCivDisplayedQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsMinorCivDisplayedQuestForPlayer
_TEXT	ENDS
EXTRN	?GetNumDisplayedQuestsForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetNumDisplayedQuestsForPlayer
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorCivNumDisplayedQuestsForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivNumDisplayedQuestsForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivNumDisplayedQuestsForPlayer, COMDAT

; 6326 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6327 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6328 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6329 : 
; 6330 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetNumDisplayedQuestsForPlayer(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetNumDisplayedQuestsForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetNumDisplayedQuestsForPlayer
	mov	DWORD PTR _iResult$[ebp], eax

; 6331 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 6332 : 	return 1;

	mov	eax, 1

; 6333 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivNumDisplayedQuestsForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivNumDisplayedQuestsForPlayer
_TEXT	ENDS
EXTRN	?GetQuestData1@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z:PROC ; CvMinorCivAI::GetQuestData1
; Function compile flags: /Odtp
;	COMDAT ?lGetQuestData1@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -16						; size = 4
_pkPlayer$ = -12					; size = 4
_iResult$ = -8						; size = 4
_eType$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetQuestData1@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetQuestData1, COMDAT

; 6336 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 6337 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6338 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6339 : 	const MinorCivQuestTypes eType = (MinorCivQuestTypes) lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eType$[ebp], eax

; 6340 : 
; 6341 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetQuestData1(ePlayer, eType);

	mov	eax, DWORD PTR _eType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetQuestData1@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::GetQuestData1
	mov	DWORD PTR _iResult$[ebp], eax

; 6342 : 	lua_pushinteger(L, iResult);

	mov	edx, DWORD PTR _iResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 6343 : 	return 1;

	mov	eax, 1

; 6344 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetQuestData1@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetQuestData1
_TEXT	ENDS
EXTRN	?GetQuestData2@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z:PROC ; CvMinorCivAI::GetQuestData2
; Function compile flags: /Odtp
;	COMDAT ?lGetQuestData2@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -16						; size = 4
_pkPlayer$ = -12					; size = 4
_iResult$ = -8						; size = 4
_eType$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetQuestData2@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetQuestData2, COMDAT

; 6347 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 6348 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6349 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6350 : 	const MinorCivQuestTypes eType = (MinorCivQuestTypes) lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eType$[ebp], eax

; 6351 : 
; 6352 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetQuestData2(ePlayer, eType);

	mov	eax, DWORD PTR _eType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetQuestData2@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::GetQuestData2
	mov	DWORD PTR _iResult$[ebp], eax

; 6353 : 	lua_pushinteger(L, iResult);

	mov	edx, DWORD PTR _iResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 6354 : 	return 1;

	mov	eax, 1

; 6355 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetQuestData2@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetQuestData2
_TEXT	ENDS
EXTRN	?GetQuestTurnsRemaining@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z:PROC ; CvMinorCivAI::GetQuestTurnsRemaining
; Function compile flags: /Odtp
;	COMDAT ?lGetQuestTurnsRemaining@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -20						; size = 4
_pkPlayer$ = -16					; size = 4
_iGameTurn$ = -12					; size = 4
_iResult$ = -8						; size = 4
_eType$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetQuestTurnsRemaining@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetQuestTurnsRemaining, COMDAT

; 6358 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 6359 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6360 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6361 : 	const MinorCivQuestTypes eType = (MinorCivQuestTypes) lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eType$[ebp], eax

; 6362 : 	const int iGameTurn = lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iGameTurn$[ebp], eax

; 6363 : 
; 6364 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetQuestTurnsRemaining(ePlayer, eType, iGameTurn);

	mov	ecx, DWORD PTR _iGameTurn$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eType$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetQuestTurnsRemaining@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z ; CvMinorCivAI::GetQuestTurnsRemaining
	mov	DWORD PTR _iResult$[ebp], eax

; 6365 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 6366 : 	return 1;

	mov	eax, 1

; 6367 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetQuestTurnsRemaining@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetQuestTurnsRemaining
_TEXT	ENDS
EXTRN	?IsContestLeader@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z:PROC ; CvMinorCivAI::IsContestLeader
; Function compile flags: /Odtp
;	COMDAT ?lIsMinorCivContestLeader@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -16						; size = 4
_pkPlayer$ = -12					; size = 4
_bResult$ = -5						; size = 1
_eType$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsMinorCivContestLeader@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsMinorCivContestLeader, COMDAT

; 6370 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 6371 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6372 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6373 : 	const MinorCivQuestTypes eType = (MinorCivQuestTypes) lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eType$[ebp], eax

; 6374 : 	
; 6375 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsContestLeader(ePlayer, eType);

	mov	eax, DWORD PTR _eType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsContestLeader@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsContestLeader
	mov	BYTE PTR _bResult$[ebp], al

; 6376 : 	lua_pushboolean(L, bResult);

	movzx	edx, BYTE PTR _bResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 6377 : 	return 1;

	mov	eax, 1

; 6378 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsMinorCivContestLeader@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsMinorCivContestLeader
_TEXT	ENDS
EXTRN	?GetContestValueForLeader@CvMinorCivAI@@QAEHW4MinorCivQuestTypes@@@Z:PROC ; CvMinorCivAI::GetContestValueForLeader
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorCivContestValueForLeader@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_iResult$ = -8						; size = 4
_eType$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivContestValueForLeader@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivContestValueForLeader, COMDAT

; 6381 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6382 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6383 : 	const MinorCivQuestTypes eType = (MinorCivQuestTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eType$[ebp], eax

; 6384 : 
; 6385 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetContestValueForLeader(eType);

	mov	edx, DWORD PTR _eType$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetContestValueForLeader@CvMinorCivAI@@QAEHW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::GetContestValueForLeader
	mov	DWORD PTR _iResult$[ebp], eax

; 6386 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 6387 : 	return 1;

	mov	eax, 1

; 6388 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivContestValueForLeader@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivContestValueForLeader
_TEXT	ENDS
EXTRN	?GetContestValueForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z:PROC ; CvMinorCivAI::GetContestValueForPlayer
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorCivContestValueForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -16						; size = 4
_pkPlayer$ = -12					; size = 4
_iResult$ = -8						; size = 4
_eType$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivContestValueForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivContestValueForPlayer, COMDAT

; 6391 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 6392 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6393 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6394 : 	const MinorCivQuestTypes eType = (MinorCivQuestTypes) lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eType$[ebp], eax

; 6395 : 
; 6396 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetContestValueForPlayer(ePlayer, eType);

	mov	eax, DWORD PTR _eType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetContestValueForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::GetContestValueForPlayer
	mov	DWORD PTR _iResult$[ebp], eax

; 6397 : 	lua_pushinteger(L, iResult);

	mov	edx, DWORD PTR _iResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 6398 : 	return 1;

	mov	eax, 1

; 6399 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivContestValueForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivContestValueForPlayer
_TEXT	ENDS
EXTRN	?IsUnitSpawningDisabled@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsUnitSpawningDisabled
; Function compile flags: /Odtp
;	COMDAT ?lIsMinorCivUnitSpawningDisabled@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsMinorCivUnitSpawningDisabled@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsMinorCivUnitSpawningDisabled, COMDAT

; 6402 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6403 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6404 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6405 : 
; 6406 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsUnitSpawningDisabled(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsUnitSpawningDisabled@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsUnitSpawningDisabled
	mov	BYTE PTR _bResult$[ebp], al

; 6407 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 6408 : 	return 1;

	mov	eax, 1

; 6409 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsMinorCivUnitSpawningDisabled@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsMinorCivUnitSpawningDisabled
_TEXT	ENDS
EXTRN	?IsRouteConnectionEstablished@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsRouteConnectionEstablished
; Function compile flags: /Odtp
;	COMDAT ?lIsMinorCivRouteEstablishedWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsMinorCivRouteEstablishedWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsMinorCivRouteEstablishedWithMajor, COMDAT

; 6412 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6413 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6414 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6415 : 
; 6416 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsRouteConnectionEstablished(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsRouteConnectionEstablished@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsRouteConnectionEstablished
	mov	BYTE PTR _bResult$[ebp], al

; 6417 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 6418 : 	return 1;

	mov	eax, 1

; 6419 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsMinorCivRouteEstablishedWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsMinorCivRouteEstablishedWithMajor
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lIsMinorWarQuestWithMajorActive@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsMinorWarQuestWithMajorActive@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsMinorWarQuestWithMajorActive, COMDAT

; 6422 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 6423 : 	const bool bResult = false;

	mov	BYTE PTR _bResult$[ebp], 0

; 6424 : 	lua_pushboolean(L, bResult);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 6425 : 	return 1;

	mov	eax, 1

; 6426 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsMinorWarQuestWithMajorActive@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsMinorWarQuestWithMajorActive
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetMinorWarQuestWithMajorRemainingCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorWarQuestWithMajorRemainingCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorWarQuestWithMajorRemainingCount, COMDAT

; 6429 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 6430 : 	const int iResult = 0;

	mov	DWORD PTR _iResult$[ebp], 0

; 6431 : 	lua_pushinteger(L, iResult);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 6432 : 	return 1;

	mov	eax, 1

; 6433 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorWarQuestWithMajorRemainingCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorWarQuestWithMajorRemainingCount
_TEXT	ENDS
EXTRN	?IsProxyWarActiveForMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsProxyWarActiveForMajor
; Function compile flags: /Odtp
;	COMDAT ?lIsProxyWarActiveForMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eMajor$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsProxyWarActiveForMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsProxyWarActiveForMajor, COMDAT

; 6436 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6437 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6438 : 	const PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMajor$[ebp], eax

; 6439 : 
; 6440 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsProxyWarActiveForMajor(eMajor);

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsProxyWarActiveForMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsProxyWarActiveForMajor
	mov	BYTE PTR _bResult$[ebp], al

; 6441 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 6442 : 	return 1;

	mov	eax, 1

; 6443 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsProxyWarActiveForMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsProxyWarActiveForMajor
_TEXT	ENDS
EXTRN	?IsThreateningBarbariansEventActiveForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsThreateningBarbariansEventActiveForPlayer
; Function compile flags: /Odtp
;	COMDAT ?lIsThreateningBarbariansEventActiveForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsThreateningBarbariansEventActiveForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsThreateningBarbariansEventActiveForPlayer, COMDAT

; 6446 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6447 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6448 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6449 : 
; 6450 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsThreateningBarbariansEventActiveForPlayer(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsThreateningBarbariansEventActiveForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsThreateningBarbariansEventActiveForPlayer
	mov	BYTE PTR _bResult$[ebp], al

; 6451 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 6452 : 	return 1;

	mov	eax, 1

; 6453 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsThreateningBarbariansEventActiveForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsThreateningBarbariansEventActiveForPlayer
_TEXT	ENDS
EXTRN	?GetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QBEHXZ:PROC ; CvMinorCivAI::GetTurnsSinceThreatenedAnnouncement
; Function compile flags: /Odtp
;	COMDAT ?lGetTurnsSinceThreatenedByBarbarians@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetTurnsSinceThreatenedByBarbarians@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTurnsSinceThreatenedByBarbarians, COMDAT

; 6457 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 6458 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6459 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetTurnsSinceThreatenedAnnouncement();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetTurnsSinceThreatenedAnnouncement
	mov	DWORD PTR _iResult$[ebp], eax

; 6460 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 6461 : 	return 1;

	mov	eax, 1

; 6462 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTurnsSinceThreatenedByBarbarians@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTurnsSinceThreatenedByBarbarians
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetTurnsSinceThreatenedAnnouncement@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetTurnsSinceThreatenedAnnouncement@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTurnsSinceThreatenedAnnouncement, COMDAT

; 6465 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 6466 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6467 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetTurnsSinceThreatenedAnnouncement();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetTurnsSinceThreatenedAnnouncement
	mov	DWORD PTR _iResult$[ebp], eax

; 6468 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 6469 : 	return 1;

	mov	eax, 1

; 6470 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTurnsSinceThreatenedAnnouncement@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTurnsSinceThreatenedAnnouncement
_TEXT	ENDS
EXTRN	?GetFriendshipFromGoldGift@CvMinorCivAI@@QAEHW4PlayerTypes@@H@Z:PROC ; CvMinorCivAI::GetFriendshipFromGoldGift
; Function compile flags: /Odtp
;	COMDAT ?lGetFriendshipFromGoldGift@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eMajor$ = -16						; size = 4
_pkPlayer$ = -12					; size = 4
_iResult$ = -8						; size = 4
_iGold$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetFriendshipFromGoldGift@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFriendshipFromGoldGift, COMDAT

; 6473 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 6474 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6475 : 	const PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMajor$[ebp], eax

; 6476 : 	const int iGold = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iGold$[ebp], eax

; 6477 : 
; 6478 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetFriendshipFromGoldGift(eMajor, iGold);

	mov	eax, DWORD PTR _iGold$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eMajor$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetFriendshipFromGoldGift@CvMinorCivAI@@QAEHW4PlayerTypes@@H@Z ; CvMinorCivAI::GetFriendshipFromGoldGift
	mov	DWORD PTR _iResult$[ebp], eax

; 6479 : 	lua_pushinteger(L, iResult);

	mov	edx, DWORD PTR _iResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 6480 : 	return 1;

	mov	eax, 1

; 6481 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetFriendshipFromGoldGift@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFriendshipFromGoldGift
_TEXT	ENDS
EXTRN	?GetFriendshipFromFaithGift@CvMinorCivAI@@QAEHW4PlayerTypes@@H@Z:PROC ; CvMinorCivAI::GetFriendshipFromFaithGift
; Function compile flags: /Odtp
;	COMDAT ?lGetFriendshipFromFaithGift@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eMajor$ = -16						; size = 4
_pkPlayer$ = -12					; size = 4
_iFaith$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetFriendshipFromFaithGift@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFriendshipFromFaithGift, COMDAT

; 6485 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 6486 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6487 : 	const PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMajor$[ebp], eax

; 6488 : 	const int iFaith = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iFaith$[ebp], eax

; 6489 : 
; 6490 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetFriendshipFromFaithGift(eMajor, iFaith);

	mov	eax, DWORD PTR _iFaith$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eMajor$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetFriendshipFromFaithGift@CvMinorCivAI@@QAEHW4PlayerTypes@@H@Z ; CvMinorCivAI::GetFriendshipFromFaithGift
	mov	DWORD PTR _iResult$[ebp], eax

; 6491 : 	lua_pushinteger(L, iResult);

	mov	edx, DWORD PTR _iResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 6492 : 	return 1;

	mov	eax, 1

; 6493 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetFriendshipFromFaithGift@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFriendshipFromFaithGift
_TEXT	ENDS
EXTRN	?IsSameReligionAsMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsSameReligionAsMajor
; Function compile flags: /Odtp
;	COMDAT ?lIsSameReligionAsMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eMajor$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsSameReligionAsMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsSameReligionAsMajor, COMDAT

; 6497 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6498 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6499 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMajor$[ebp], eax

; 6500 : 
; 6501 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsSameReligionAsMajor(eMajor);

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsSameReligionAsMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsSameReligionAsMajor
	mov	BYTE PTR _bResult$[ebp], al

; 6502 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 6503 : 	return 1;

	mov	eax, 1

; 6504 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsSameReligionAsMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsSameReligionAsMajor
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetMinorCivFavoriteMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivFavoriteMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivFavoriteMajor, COMDAT

; 6508 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 6509 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6510 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetAlly());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetAlly
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 6511 : 	return 1;

	mov	eax, 1

; 6512 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivFavoriteMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivFavoriteMajor
_TEXT	ENDS
EXTRN	?GetScienceFriendshipBonus@CvMinorCivAI@@QAEHXZ:PROC ; CvMinorCivAI::GetScienceFriendshipBonus
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorCivScienceFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivScienceFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivScienceFriendshipBonus, COMDAT

; 6515 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 6516 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6517 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetScienceFriendshipBonus());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetScienceFriendshipBonus@CvMinorCivAI@@QAEHXZ ; CvMinorCivAI::GetScienceFriendshipBonus
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 6518 : 	return 1;

	mov	eax, 1

; 6519 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivScienceFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivScienceFriendshipBonus
_TEXT	ENDS
EXTRN	?GetCulturePerBuildingFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z:PROC ; CvMinorCivAI::GetCulturePerBuildingFriendshipBonus
EXTRN	?GetCultureFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z:PROC ; CvMinorCivAI::GetCultureFlatFriendshipBonus
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorCivCultureFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivCultureFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivCultureFriendshipBonus, COMDAT

; 6523 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6524 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6525 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6526 : 
; 6527 : 	int iValue = 0;

	mov	DWORD PTR _iValue$[ebp], 0

; 6528 : 	iValue += pkPlayer->GetMinorCivAI()->GetCultureFlatFriendshipBonus(ePlayer);

	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCultureFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCultureFlatFriendshipBonus
	add	eax, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _iValue$[ebp], eax

; 6529 : 	iValue += pkPlayer->GetMinorCivAI()->GetCulturePerBuildingFriendshipBonus(ePlayer);

	push	-1
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCulturePerBuildingFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCulturePerBuildingFriendshipBonus
	add	eax, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _iValue$[ebp], eax

; 6530 : 	lua_pushinteger(L, iValue);

	mov	ecx, DWORD PTR _iValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 6531 : 	return 1;

	mov	eax, 1

; 6532 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivCultureFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivCultureFriendshipBonus
_TEXT	ENDS
EXTRN	?GetCurrentCultureFlatBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetCurrentCultureFlatBonus
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorCivCurrentCultureFlatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivCurrentCultureFlatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivCurrentCultureFlatBonus, COMDAT

; 6535 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 6536 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6537 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6538 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetCurrentCultureFlatBonus(ePlayer));

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCurrentCultureFlatBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentCultureFlatBonus
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 6539 : 	return 1;

	mov	eax, 1

; 6540 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivCurrentCultureFlatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivCurrentCultureFlatBonus
_TEXT	ENDS
EXTRN	?GetCurrentCulturePerBuildingBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetCurrentCulturePerBuildingBonus
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorCivCurrentCulturePerBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivCurrentCulturePerBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivCurrentCulturePerBuildingBonus, COMDAT

; 6543 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 6544 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6545 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6546 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetCurrentCulturePerBuildingBonus(ePlayer));

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCurrentCulturePerBuildingBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentCulturePerBuildingBonus
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 6547 : 	return 1;

	mov	eax, 1

; 6548 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivCurrentCulturePerBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivCurrentCulturePerBuildingBonus
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetCurrentCultureBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCurrentCultureBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCurrentCultureBonus, COMDAT

; 6552 : {

	push	ebp
	mov	ebp, esp

; 6553 : 	return lGetMinorCivCurrentCultureBonus(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?lGetMinorCivCurrentCultureBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentCultureBonus
	add	esp, 4

; 6554 : }

	pop	ebp
	ret	0
?lGetCurrentCultureBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCurrentCultureBonus
_TEXT	ENDS
EXTRN	?GetCurrentCultureBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetCurrentCultureBonus
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorCivCurrentCultureBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivCurrentCultureBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivCurrentCultureBonus, COMDAT

; 6557 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 6558 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6559 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6560 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetCurrentCultureBonus(ePlayer));

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCurrentCultureBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentCultureBonus
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 6561 : 	return 1;

	mov	eax, 1

; 6562 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivCurrentCultureBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivCurrentCultureBonus
_TEXT	ENDS
EXTRN	?GetHappinessPerLuxuryFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z:PROC ; CvMinorCivAI::GetHappinessPerLuxuryFriendshipBonus
EXTRN	?GetHappinessFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z:PROC ; CvMinorCivAI::GetHappinessFlatFriendshipBonus
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorCivHappinessFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivHappinessFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivHappinessFriendshipBonus, COMDAT

; 6566 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6567 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6568 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6569 : 
; 6570 : 	int iValue = 0;

	mov	DWORD PTR _iValue$[ebp], 0

; 6571 : 	iValue += pkPlayer->GetMinorCivAI()->GetHappinessFlatFriendshipBonus(ePlayer);

	push	-1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetHappinessFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessFlatFriendshipBonus
	add	eax, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _iValue$[ebp], eax

; 6572 : 	iValue += pkPlayer->GetMinorCivAI()->GetHappinessPerLuxuryFriendshipBonus(ePlayer);

	push	-1
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetHappinessPerLuxuryFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessPerLuxuryFriendshipBonus
	add	eax, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _iValue$[ebp], eax

; 6573 : 	lua_pushinteger(L, iValue);

	mov	ecx, DWORD PTR _iValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 6574 : 	return 1;

	mov	eax, 1

; 6575 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivHappinessFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivHappinessFriendshipBonus
_TEXT	ENDS
EXTRN	?GetCurrentHappinessFlatBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetCurrentHappinessFlatBonus
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorCivCurrentHappinessFlatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivCurrentHappinessFlatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivCurrentHappinessFlatBonus, COMDAT

; 6578 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 6579 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6580 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6581 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetCurrentHappinessFlatBonus(ePlayer));

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCurrentHappinessFlatBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentHappinessFlatBonus
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 6582 : 	return 1;

	mov	eax, 1

; 6583 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivCurrentHappinessFlatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivCurrentHappinessFlatBonus
_TEXT	ENDS
EXTRN	?GetCurrentHappinessPerLuxuryBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetCurrentHappinessPerLuxuryBonus
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorCivCurrentHappinessPerLuxuryBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivCurrentHappinessPerLuxuryBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivCurrentHappinessPerLuxuryBonus, COMDAT

; 6586 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 6587 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6588 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6589 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetCurrentHappinessPerLuxuryBonus(ePlayer));

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCurrentHappinessPerLuxuryBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentHappinessPerLuxuryBonus
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 6590 : 	return 1;

	mov	eax, 1

; 6591 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivCurrentHappinessPerLuxuryBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivCurrentHappinessPerLuxuryBonus
_TEXT	ENDS
EXTRN	?GetCurrentHappinessBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetCurrentHappinessBonus
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorCivCurrentHappinessBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivCurrentHappinessBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivCurrentHappinessBonus, COMDAT

; 6594 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 6595 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6596 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6597 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetCurrentHappinessBonus(ePlayer));

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCurrentHappinessBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentHappinessBonus
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 6598 : 	return 1;

	mov	eax, 1

; 6599 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivCurrentHappinessBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivCurrentHappinessBonus
_TEXT	ENDS
EXTRN	?GetCurrentFaithBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetCurrentFaithBonus
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorCivCurrentFaithBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivCurrentFaithBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivCurrentFaithBonus, COMDAT

; 6602 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 6603 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6604 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6605 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetCurrentFaithBonus(ePlayer));

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCurrentFaithBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentFaithBonus
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 6606 : 	return 1;

	mov	eax, 1

; 6607 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivCurrentFaithBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivCurrentFaithBonus
_TEXT	ENDS
EXTRN	?GetCurrentCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetCurrentCapitalFoodBonus
; Function compile flags: /Odtp
;	COMDAT ?lGetCurrentCapitalFoodBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCurrentCapitalFoodBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCurrentCapitalFoodBonus, COMDAT

; 6610 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 6611 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6612 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6613 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetCurrentCapitalFoodBonus(ePlayer));

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCurrentCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentCapitalFoodBonus
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 6614 : 	return 1;

	mov	eax, 1

; 6615 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCurrentCapitalFoodBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCurrentCapitalFoodBonus
_TEXT	ENDS
EXTRN	?GetCurrentOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetCurrentOtherCityFoodBonus
; Function compile flags: /Odtp
;	COMDAT ?lGetCurrentOtherCityFoodBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCurrentOtherCityFoodBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCurrentOtherCityFoodBonus, COMDAT

; 6618 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 6619 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6620 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6621 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetCurrentOtherCityFoodBonus(ePlayer));

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCurrentOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentOtherCityFoodBonus
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 6622 : 	return 1;

	mov	eax, 1

; 6623 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCurrentOtherCityFoodBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCurrentOtherCityFoodBonus
_TEXT	ENDS
EXTRN	?GetCurrentSpawnEstimate@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetCurrentSpawnEstimate
; Function compile flags: /Odtp
;	COMDAT ?lGetCurrentSpawnEstimate@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCurrentSpawnEstimate@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCurrentSpawnEstimate, COMDAT

; 6626 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 6627 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6628 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6629 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetCurrentSpawnEstimate(ePlayer));

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCurrentSpawnEstimate@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentSpawnEstimate
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 6630 : 	return 1;

	mov	eax, 1

; 6631 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCurrentSpawnEstimate@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCurrentSpawnEstimate
_TEXT	ENDS
EXTRN	?GetCurrentScienceFriendshipBonusTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetCurrentScienceFriendshipBonusTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetCurrentScienceFriendshipBonusTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCurrentScienceFriendshipBonusTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCurrentScienceFriendshipBonusTimes100, COMDAT

; 6634 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 6635 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6636 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 6637 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetCurrentScienceFriendshipBonusTimes100(ePlayer));

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCurrentScienceFriendshipBonusTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentScienceFriendshipBonusTimes100
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 6638 : 	return 1;

	mov	eax, 1

; 6639 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCurrentScienceFriendshipBonusTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCurrentScienceFriendshipBonusTimes100
_TEXT	ENDS
EXTRN	?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z:PROC ; CvMinorCivAI::DoLiberationByMajor
; Function compile flags: /Odtp
;	COMDAT ?lDoMinorLiberationByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eLiberator$ = -8					; size = 4
_eConquerorTeam$ = -4					; size = 4
_L$ = 8							; size = 4
?lDoMinorLiberationByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lDoMinorLiberationByMajor, COMDAT

; 6643 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6644 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6645 : 	PlayerTypes eLiberator = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eLiberator$[ebp], eax

; 6646 : 	TeamTypes eConquerorTeam = (TeamTypes) lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eConquerorTeam$[ebp], eax

; 6647 : 
; 6648 : 	pkPlayer->GetMinorCivAI()->DoLiberationByMajor(eLiberator, eConquerorTeam);

	mov	eax, DWORD PTR _eConquerorTeam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eLiberator$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z ; CvMinorCivAI::DoLiberationByMajor

; 6649 : 	return 1;

	mov	eax, 1

; 6650 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lDoMinorLiberationByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lDoMinorLiberationByMajor
_TEXT	ENDS
EXTRN	?IsProtectedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsProtectedByMajor
; Function compile flags: /Odtp
;	COMDAT ?lIsProtectedByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eMajor$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsProtectedByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsProtectedByMajor, COMDAT

; 6654 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6655 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6656 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMajor$[ebp], eax

; 6657 : 
; 6658 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsProtectedByMajor(eMajor);

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsProtectedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsProtectedByMajor
	mov	BYTE PTR _bResult$[ebp], al

; 6659 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 6660 : 	return 1;

	mov	eax, 1

; 6661 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsProtectedByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsProtectedByMajor
_TEXT	ENDS
EXTRN	?CanMajorProtect@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::CanMajorProtect
; Function compile flags: /Odtp
;	COMDAT ?lCanMajorProtect@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eMajor$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lCanMajorProtect@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanMajorProtect, COMDAT

; 6665 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6666 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6667 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMajor$[ebp], eax

; 6668 : 
; 6669 : 	const bool bResult = pkPlayer->GetMinorCivAI()->CanMajorProtect(eMajor);

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?CanMajorProtect@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorProtect
	mov	BYTE PTR _bResult$[ebp], al

; 6670 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 6671 : 	return 1;

	mov	eax, 1

; 6672 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanMajorProtect@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanMajorProtect
_TEXT	ENDS
EXTRN	?CanMajorStartProtection@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::CanMajorStartProtection
; Function compile flags: /Odtp
;	COMDAT ?lCanMajorStartProtection@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eMajor$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lCanMajorStartProtection@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCanMajorStartProtection, COMDAT

; 6676 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6677 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6678 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMajor$[ebp], eax

; 6679 : 
; 6680 : 	const bool bResult = pkPlayer->GetMinorCivAI()->CanMajorStartProtection(eMajor);

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?CanMajorStartProtection@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorStartProtection
	mov	BYTE PTR _bResult$[ebp], al

; 6681 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 6682 : 	return 1;

	mov	eax, 1

; 6683 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanMajorStartProtection@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCanMajorStartProtection
_TEXT	ENDS
EXTRN	?CanMajorWithdrawProtection@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::CanMajorWithdrawProtection
; Function compile flags: /Odtp
;	COMDAT ?lCanMajorWithdrawProtection@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eMajor$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lCanMajorWithdrawProtection@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCanMajorWithdrawProtection, COMDAT

; 6687 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6688 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6689 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMajor$[ebp], eax

; 6690 : 
; 6691 : 	const bool bResult = pkPlayer->GetMinorCivAI()->CanMajorWithdrawProtection(eMajor);

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?CanMajorWithdrawProtection@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorWithdrawProtection
	mov	BYTE PTR _bResult$[ebp], al

; 6692 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 6693 : 	return 1;

	mov	eax, 1

; 6694 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanMajorWithdrawProtection@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCanMajorWithdrawProtection
_TEXT	ENDS
EXTRN	?GetTurnLastPledgedProtectionByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetTurnLastPledgedProtectionByMajor
; Function compile flags: /Odtp
;	COMDAT ?lGetTurnLastPledgedProtectionByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eMajor$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetTurnLastPledgedProtectionByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTurnLastPledgedProtectionByMajor, COMDAT

; 6698 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6699 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6700 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMajor$[ebp], eax

; 6701 : 
; 6702 : 	const int iValue = pkPlayer->GetMinorCivAI()->GetTurnLastPledgedProtectionByMajor(eMajor);

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetTurnLastPledgedProtectionByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetTurnLastPledgedProtectionByMajor
	mov	DWORD PTR _iValue$[ebp], eax

; 6703 : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 6704 : 	return 1;

	mov	eax, 1

; 6705 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTurnLastPledgedProtectionByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTurnLastPledgedProtectionByMajor
_TEXT	ENDS
EXTRN	?GetTurnLastPledgeBrokenByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetTurnLastPledgeBrokenByMajor
; Function compile flags: /Odtp
;	COMDAT ?lGetTurnLastPledgeBrokenByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eMajor$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetTurnLastPledgeBrokenByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTurnLastPledgeBrokenByMajor, COMDAT

; 6709 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6710 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6711 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMajor$[ebp], eax

; 6712 : 
; 6713 : 	const int iValue = pkPlayer->GetMinorCivAI()->GetTurnLastPledgeBrokenByMajor(eMajor);

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetTurnLastPledgeBrokenByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetTurnLastPledgeBrokenByMajor
	mov	DWORD PTR _iValue$[ebp], eax

; 6714 : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 6715 : 	return 1;

	mov	eax, 1

; 6716 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTurnLastPledgeBrokenByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTurnLastPledgeBrokenByMajor
_TEXT	ENDS
EXTRN	?GetBullyGoldAmount@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetBullyGoldAmount
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorCivBullyGoldAmount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eMajor$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivBullyGoldAmount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivBullyGoldAmount, COMDAT

; 6720 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6721 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6722 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMajor$[ebp], eax

; 6723 : 
; 6724 : 	const int iValue = pkPlayer->GetMinorCivAI()->GetBullyGoldAmount(eMajor);

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetBullyGoldAmount@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBullyGoldAmount
	mov	DWORD PTR _iValue$[ebp], eax

; 6725 : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 6726 : 	return 1;

	mov	eax, 1

; 6727 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivBullyGoldAmount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivBullyGoldAmount
_TEXT	ENDS
EXTRN	?CanMajorBullyGold@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::CanMajorBullyGold
; Function compile flags: /Odtp
;	COMDAT ?lCanMajorBullyGold@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eMajor$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lCanMajorBullyGold@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCanMajorBullyGold, COMDAT

; 6731 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6732 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6733 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMajor$[ebp], eax

; 6734 : 
; 6735 : 	const bool bResult = pkPlayer->GetMinorCivAI()->CanMajorBullyGold(eMajor);

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?CanMajorBullyGold@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorBullyGold
	mov	BYTE PTR _bResult$[ebp], al

; 6736 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 6737 : 	return 1;

	mov	eax, 1

; 6738 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanMajorBullyGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCanMajorBullyGold
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetMajorBullyGoldDetails
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T248869 = -56						; size = 4
_eMajor$ = -52						; size = 4
_pkPlayer$ = -48					; size = 4
_sResult$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMajorBullyGoldDetails, COMDAT

; 6742 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 6743 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6744 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMajor$[ebp], eax

; 6745 : 
; 6746 : 	const CvString sResult = pkPlayer->GetMinorCivAI()->GetMajorBullyGoldDetails(eMajor);

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	lea	eax, DWORD PTR _sResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z ; CvMinorCivAI::GetMajorBullyGoldDetails
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 6747 : 	lua_pushstring(L, sResult);

	lea	ecx, DWORD PTR _sResult$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 6748 : 	return 1;

	mov	DWORD PTR $T248869[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sResult$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T248869[ebp]

; 6749 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sResult$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMajorBullyGoldDetails
EXTRN	?CanMajorBullyUnit@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::CanMajorBullyUnit
; Function compile flags: /Odtp
;	COMDAT ?lCanMajorBullyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eMajor$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lCanMajorBullyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCanMajorBullyUnit, COMDAT

; 6753 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6754 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6755 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMajor$[ebp], eax

; 6756 : 
; 6757 : 	const bool bResult = pkPlayer->GetMinorCivAI()->CanMajorBullyUnit(eMajor);

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?CanMajorBullyUnit@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorBullyUnit
	mov	BYTE PTR _bResult$[ebp], al

; 6758 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 6759 : 	return 1;

	mov	eax, 1

; 6760 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanMajorBullyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCanMajorBullyUnit
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetMajorBullyUnitDetails
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T248889 = -56						; size = 4
_eMajor$ = -52						; size = 4
_pkPlayer$ = -48					; size = 4
_sResult$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMajorBullyUnitDetails, COMDAT

; 6764 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 6765 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6766 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMajor$[ebp], eax

; 6767 : 
; 6768 : 	const CvString sResult = pkPlayer->GetMinorCivAI()->GetMajorBullyUnitDetails(eMajor);

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	lea	eax, DWORD PTR _sResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z ; CvMinorCivAI::GetMajorBullyUnitDetails
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 6769 : 	lua_pushstring(L, sResult);

	lea	ecx, DWORD PTR _sResult$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 6770 : 	return 1;

	mov	DWORD PTR $T248889[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sResult$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T248889[ebp]

; 6771 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sResult$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMajorBullyUnitDetails
EXTRN	?CanMajorBuyout@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::CanMajorBuyout
; Function compile flags: /Odtp
;	COMDAT ?lCanMajorBuyout@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eMajor$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lCanMajorBuyout@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanMajorBuyout, COMDAT

; 6775 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6776 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6777 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMajor$[ebp], eax

; 6778 : 
; 6779 : 	const bool bResult = pkPlayer->GetMinorCivAI()->CanMajorBuyout(eMajor);

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?CanMajorBuyout@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorBuyout
	mov	BYTE PTR _bResult$[ebp], al

; 6780 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 6781 : 	return 1;

	mov	eax, 1

; 6782 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanMajorBuyout@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanMajorBuyout
_TEXT	ENDS
EXTRN	?GetBuyoutCost@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetBuyoutCost
; Function compile flags: /Odtp
;	COMDAT ?lGetBuyoutCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eMajor$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iCost$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetBuyoutCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetBuyoutCost, COMDAT

; 6786 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6787 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6788 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMajor$[ebp], eax

; 6789 : 
; 6790 : 	const int iCost = pkPlayer->GetMinorCivAI()->GetBuyoutCost(eMajor);

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetBuyoutCost@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBuyoutCost
	mov	DWORD PTR _iCost$[ebp], eax

; 6791 : 	lua_pushinteger(L, iCost);

	mov	eax, DWORD PTR _iCost$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 6792 : 	return 1;

	mov	eax, 1

; 6793 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBuyoutCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetBuyoutCost
_TEXT	ENDS
EXTRN	?CanMajorGiftTileImprovement@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::CanMajorGiftTileImprovement
; Function compile flags: /Odtp
;	COMDAT ?lCanMajorGiftTileImprovement@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eMajor$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lCanMajorGiftTileImprovement@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCanMajorGiftTileImprovement, COMDAT

; 6797 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6798 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6799 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMajor$[ebp], eax

; 6800 : 
; 6801 : 	const bool bResult = pkPlayer->GetMinorCivAI()->CanMajorGiftTileImprovement(eMajor);

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?CanMajorGiftTileImprovement@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorGiftTileImprovement
	mov	BYTE PTR _bResult$[ebp], al

; 6802 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 6803 : 	return 1;

	mov	eax, 1

; 6804 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanMajorGiftTileImprovement@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCanMajorGiftTileImprovement
_TEXT	ENDS
EXTRN	?CanMajorGiftTileImprovementAtPlot@CvMinorCivAI@@QAE_NW4PlayerTypes@@HH@Z:PROC ; CvMinorCivAI::CanMajorGiftTileImprovementAtPlot
; Function compile flags: /Odtp
;	COMDAT ?lCanMajorGiftTileImprovementAtPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eMajor$ = -20						; size = 4
_pkPlayer$ = -16					; size = 4
_bResult$ = -9						; size = 1
_iX$ = -8						; size = 4
_iY$ = -4						; size = 4
_L$ = 8							; size = 4
?lCanMajorGiftTileImprovementAtPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCanMajorGiftTileImprovementAtPlot, COMDAT

; 6808 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 6809 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6810 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMajor$[ebp], eax

; 6811 : 	const int iX = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iX$[ebp], eax

; 6812 : 	const int iY = lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iY$[ebp], eax

; 6813 : 
; 6814 : 	const bool bResult = pkPlayer->GetMinorCivAI()->CanMajorGiftTileImprovementAtPlot(eMajor, iX, iY);

	mov	ecx, DWORD PTR _iY$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iX$[ebp]
	push	edx
	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?CanMajorGiftTileImprovementAtPlot@CvMinorCivAI@@QAE_NW4PlayerTypes@@HH@Z ; CvMinorCivAI::CanMajorGiftTileImprovementAtPlot
	mov	BYTE PTR _bResult$[ebp], al

; 6815 : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 6816 : 	return 1;

	mov	eax, 1

; 6817 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanMajorGiftTileImprovementAtPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCanMajorGiftTileImprovementAtPlot
_TEXT	ENDS
EXTRN	?GetGiftTileImprovementCost@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetGiftTileImprovementCost
; Function compile flags: /Odtp
;	COMDAT ?lGetGiftTileImprovementCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eMajor$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_iCost$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetGiftTileImprovementCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGiftTileImprovementCost, COMDAT

; 6821 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6822 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6823 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMajor$[ebp], eax

; 6824 : 
; 6825 : 	const int iCost = pkPlayer->GetMinorCivAI()->GetGiftTileImprovementCost(eMajor);

	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetGiftTileImprovementCost@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetGiftTileImprovementCost
	mov	DWORD PTR _iCost$[ebp], eax

; 6826 : 	lua_pushinteger(L, iCost);

	mov	eax, DWORD PTR _iCost$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 6827 : 	return 1;

	mov	eax, 1

; 6828 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetGiftTileImprovementCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGiftTileImprovementCost
_TEXT	ENDS
EXTRN	?AddQuestIfAble@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z:PROC ; CvMinorCivAI::AddQuestIfAble
; Function compile flags: /Odtp
;	COMDAT ?lAddMinorCivQuestIfAble@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eMajor$ = -16						; size = 4
_pkPlayer$ = -12					; size = 4
_bResult$ = -5						; size = 1
_eQuest$ = -4						; size = 4
_L$ = 8							; size = 4
?lAddMinorCivQuestIfAble@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lAddMinorCivQuestIfAble, COMDAT

; 6832 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 6833 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6834 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMajor$[ebp], eax

; 6835 : 	MinorCivQuestTypes eQuest = (MinorCivQuestTypes) lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eQuest$[ebp], eax

; 6836 : 
; 6837 : 	const bool bResult = pkPlayer->GetMinorCivAI()->AddQuestIfAble(eMajor, eQuest);

	mov	eax, DWORD PTR _eQuest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eMajor$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?AddQuestIfAble@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::AddQuestIfAble
	mov	BYTE PTR _bResult$[ebp], al

; 6838 : 	lua_pushboolean(L, bResult);

	movzx	edx, BYTE PTR _bResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 6839 : 	return 1;

	mov	eax, 1

; 6840 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lAddMinorCivQuestIfAble@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lAddMinorCivQuestIfAble
_TEXT	ENDS
EXTRN	?GetFriendshipFromUnitGift@CvMinorCivAI@@QAEHW4PlayerTypes@@_N1@Z:PROC ; CvMinorCivAI::GetFriendshipFromUnitGift
; Function compile flags: /Odtp
;	COMDAT ?lGetFriendshipFromUnitGift@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eMajor$ = -16						; size = 4
_pkPlayer$ = -12					; size = 4
_iResult$ = -8						; size = 4
_bDistanceGift$ = -2					; size = 1
_bGreatPerson$ = -1					; size = 1
_L$ = 8							; size = 4
?lGetFriendshipFromUnitGift@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFriendshipFromUnitGift, COMDAT

; 6844 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 6845 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6846 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMajor$[ebp], eax

; 6847 : 	bool bGreatPerson = lua_toboolean(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bGreatPerson$[ebp], al

; 6848 : 	bool bDistanceGift = lua_toboolean(L, 4);

	push	4
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bDistanceGift$[ebp], dl

; 6849 : 
; 6850 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetFriendshipFromUnitGift(eMajor, bGreatPerson, bDistanceGift);

	movzx	eax, BYTE PTR _bDistanceGift$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bGreatPerson$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eMajor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetFriendshipFromUnitGift@CvMinorCivAI@@QAEHW4PlayerTypes@@_N1@Z ; CvMinorCivAI::GetFriendshipFromUnitGift
	mov	DWORD PTR _iResult$[ebp], eax

; 6851 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 6852 : 	return 1;

	mov	eax, 1

; 6853 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetFriendshipFromUnitGift@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFriendshipFromUnitGift
_TEXT	ENDS
PUBLIC	?isAlive@CvPlayer@@QBE_NXZ			; CvPlayer::isAlive
; Function compile flags: /Odtp
;	COMDAT ?lIsAlive@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAlive@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lIsAlive, COMDAT

; 6857 : {

	push	ebp
	mov	ebp, esp

; 6858 : 	return BasicLuaMethod(L, &CvPlayerAI::isAlive);

	push	OFFSET ?isAlive@CvPlayer@@QBE_NXZ	; CvPlayer::isAlive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 6859 : }

	pop	ebp
	ret	0
?lIsAlive@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lIsAlive
_TEXT	ENDS
PUBLIC	?isEverAlive@CvPlayer@@QBE_NXZ			; CvPlayer::isEverAlive
; Function compile flags: /Odtp
;	COMDAT ?lIsEverAlive@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsEverAlive@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsEverAlive, COMDAT

; 6863 : {

	push	ebp
	mov	ebp, esp

; 6864 : 	return BasicLuaMethod(L, &CvPlayerAI::isEverAlive);

	push	OFFSET ?isEverAlive@CvPlayer@@QBE_NXZ	; CvPlayer::isEverAlive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 6865 : }

	pop	ebp
	ret	0
?lIsEverAlive@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsEverAlive
_TEXT	ENDS
EXTRN	?isExtendedGame@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isExtendedGame
; Function compile flags: /Odtp
;	COMDAT ?lIsExtendedGame@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsExtendedGame@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsExtendedGame, COMDAT

; 6869 : {

	push	ebp
	mov	ebp, esp

; 6870 : 	return BasicLuaMethod(L, &CvPlayerAI::isExtendedGame);

	push	OFFSET ?isExtendedGame@CvPlayer@@QBE_NXZ ; CvPlayer::isExtendedGame
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 6871 : }

	pop	ebp
	ret	0
?lIsExtendedGame@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsExtendedGame
_TEXT	ENDS
EXTRN	?isFoundedFirstCity@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::isFoundedFirstCity
; Function compile flags: /Odtp
;	COMDAT ?lIsFoundedFirstCity@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsFoundedFirstCity@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsFoundedFirstCity, COMDAT

; 6875 : {

	push	ebp
	mov	ebp, esp

; 6876 : 	return BasicLuaMethod(L, &CvPlayerAI::isFoundedFirstCity);

	push	OFFSET ?isFoundedFirstCity@CvPlayer@@QBE_NXZ ; CvPlayer::isFoundedFirstCity
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 6877 : }

	pop	ebp
	ret	0
?lIsFoundedFirstCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsFoundedFirstCity
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4EndTurnBlockingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4EndTurnBlockingTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum EndTurnBlockingTypes>
EXTRN	?GetEndTurnBlockingType@CvPlayer@@QBE?AW4EndTurnBlockingTypes@@XZ:PROC ; CvPlayer::GetEndTurnBlockingType
; Function compile flags: /Odtp
;	COMDAT ?lGetEndTurnBlockingType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetEndTurnBlockingType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetEndTurnBlockingType, COMDAT

; 6882 : {

	push	ebp
	mov	ebp, esp

; 6883 : 	return BasicLuaMethod(L, &CvPlayerAI::GetEndTurnBlockingType);

	push	OFFSET ?GetEndTurnBlockingType@CvPlayer@@QBE?AW4EndTurnBlockingTypes@@XZ ; CvPlayer::GetEndTurnBlockingType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4EndTurnBlockingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4EndTurnBlockingTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum EndTurnBlockingTypes>
	add	esp, 8

; 6884 : }

	pop	ebp
	ret	0
?lGetEndTurnBlockingType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetEndTurnBlockingType
_TEXT	ENDS
EXTRN	?GetEndTurnBlockingNotificationIndex@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetEndTurnBlockingNotificationIndex
; Function compile flags: /Odtp
;	COMDAT ?lGetEndTurnBlockingNotificationIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetEndTurnBlockingNotificationIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetEndTurnBlockingNotificationIndex, COMDAT

; 6888 : {

	push	ebp
	mov	ebp, esp

; 6889 : 	return BasicLuaMethod(L, &CvPlayerAI::GetEndTurnBlockingNotificationIndex);

	push	OFFSET ?GetEndTurnBlockingNotificationIndex@CvPlayer@@QBEHXZ ; CvPlayer::GetEndTurnBlockingNotificationIndex
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 6890 : }

	pop	ebp
	ret	0
?lGetEndTurnBlockingNotificationIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetEndTurnBlockingNotificationIndex
_TEXT	ENDS
EXTRN	?isStrike@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isStrike
; Function compile flags: /Odtp
;	COMDAT ?lIsStrike@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsStrike@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsStrike, COMDAT

; 6895 : {

	push	ebp
	mov	ebp, esp

; 6896 : 	return BasicLuaMethod(L, &CvPlayerAI::isStrike);

	push	OFFSET ?isStrike@CvPlayer@@QBE_NXZ	; CvPlayer::isStrike
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 6897 : }

	pop	ebp
	ret	0
?lIsStrike@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsStrike
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerTypes>
PUBLIC	?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ		; CvPlayer::GetID
; Function compile flags: /Odtp
;	COMDAT ?lGetID@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetID@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lGetID, COMDAT

; 6901 : {

	push	ebp
	mov	ebp, esp

; 6902 : 	return BasicLuaMethod(L, &CvPlayerAI::GetID);

	push	OFFSET ?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ ; CvPlayer::GetID
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 6903 : }

	pop	ebp
	ret	0
?lGetID@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lGetID
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4HandicapTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum HandicapTypes>
EXTRN	?getHandicapType@CvPlayer@@QBE?AW4HandicapTypes@@XZ:PROC ; CvPlayer::getHandicapType
; Function compile flags: /Odtp
;	COMDAT ?lGetHandicapType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHandicapType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetHandicapType, COMDAT

; 6907 : {

	push	ebp
	mov	ebp, esp

; 6908 : 	return BasicLuaMethod(L, &CvPlayerAI::getHandicapType);

	push	OFFSET ?getHandicapType@CvPlayer@@QBE?AW4HandicapTypes@@XZ ; CvPlayer::getHandicapType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4HandicapTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum HandicapTypes>
	add	esp, 8

; 6909 : }

	pop	ebp
	ret	0
?lGetHandicapType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetHandicapType
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4CivilizationTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum CivilizationTypes>
; Function compile flags: /Odtp
;	COMDAT ?lGetCivilizationType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCivilizationType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCivilizationType, COMDAT

; 6913 : {

	push	ebp
	mov	ebp, esp

; 6914 : 	return BasicLuaMethod(L, &CvPlayerAI::getCivilizationType);

	push	OFFSET ?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4CivilizationTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum CivilizationTypes>
	add	esp, 8

; 6915 : }

	pop	ebp
	ret	0
?lGetCivilizationType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCivilizationType
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4LeaderHeadTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum LeaderHeadTypes>
EXTRN	?getLeaderType@CvPlayer@@QBE?AW4LeaderHeadTypes@@XZ:PROC ; CvPlayer::getLeaderType
; Function compile flags: /Odtp
;	COMDAT ?lGetLeaderType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLeaderType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetLeaderType, COMDAT

; 6919 : {

	push	ebp
	mov	ebp, esp

; 6920 : 	return BasicLuaMethod(L, &CvPlayerAI::getLeaderType);

	push	OFFSET ?getLeaderType@CvPlayer@@QBE?AW4LeaderHeadTypes@@XZ ; CvPlayer::getLeaderType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4LeaderHeadTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum LeaderHeadTypes>
	add	esp, 8

; 6921 : }

	pop	ebp
	ret	0
?lGetLeaderType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetLeaderType
_TEXT	ENDS
EXTRN	?getPersonalityType@CvPlayer@@QBE?AW4LeaderHeadTypes@@XZ:PROC ; CvPlayer::getPersonalityType
; Function compile flags: /Odtp
;	COMDAT ?lGetPersonalityType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPersonalityType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPersonalityType, COMDAT

; 6925 : {

	push	ebp
	mov	ebp, esp

; 6926 : 	return BasicLuaMethod(L, &CvPlayerAI::getPersonalityType);

	push	OFFSET ?getPersonalityType@CvPlayer@@QBE?AW4LeaderHeadTypes@@XZ ; CvPlayer::getPersonalityType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4LeaderHeadTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum LeaderHeadTypes>
	add	esp, 8

; 6927 : }

	pop	ebp
	ret	0
?lGetPersonalityType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPersonalityType
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4LeaderHeadTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum LeaderHeadTypes>
EXTRN	?setPersonalityType@CvPlayer@@QAEXW4LeaderHeadTypes@@@Z:PROC ; CvPlayer::setPersonalityType
; Function compile flags: /Odtp
;	COMDAT ?lSetPersonalityType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetPersonalityType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetPersonalityType, COMDAT

; 6931 : {

	push	ebp
	mov	ebp, esp

; 6932 : 	return BasicLuaMethod(L, &CvPlayerAI::setPersonalityType);

	push	OFFSET ?setPersonalityType@CvPlayer@@QAEXW4LeaderHeadTypes@@@Z ; CvPlayer::setPersonalityType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4LeaderHeadTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum LeaderHeadTypes>
	add	esp, 8

; 6933 : }

	pop	ebp
	ret	0
?lSetPersonalityType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetPersonalityType
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4EraTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum EraTypes>
EXTRN	?GetCurrentEra@CvPlayer@@QBE?AW4EraTypes@@XZ:PROC ; CvPlayer::GetCurrentEra
; Function compile flags: /Odtp
;	COMDAT ?lGetCurrentEra@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCurrentEra@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetCurrentEra, COMDAT

; 6937 : {

	push	ebp
	mov	ebp, esp

; 6938 : 	return BasicLuaMethod(L, &CvPlayerAI::GetCurrentEra);

	push	OFFSET ?GetCurrentEra@CvPlayer@@QBE?AW4EraTypes@@XZ ; CvPlayer::GetCurrentEra
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4EraTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum EraTypes>
	add	esp, 8

; 6939 : }

	pop	ebp
	ret	0
?lGetCurrentEra@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetCurrentEra
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TeamTypes>
PUBLIC	?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ		; CvPlayer::getTeam
; Function compile flags: /Odtp
;	COMDAT ?lGetTeam@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTeam@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lGetTeam, COMDAT

; 6943 : {

	push	ebp
	mov	ebp, esp

; 6944 : #ifdef AUI_WARNING_FIXES
; 6945 : 	return BasicLuaMethod<TeamTypes>(L, (&CvPlayerAI::getTeam));
; 6946 : #else
; 6947 : 	return BasicLuaMethod(L, &CvPlayerAI::getTeam);

	push	OFFSET ?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ ; CvPlayer::getTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TeamTypes>
	add	esp, 8

; 6948 : #endif
; 6949 : }

	pop	ebp
	ret	0
?lGetTeam@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lGetTeam
_TEXT	ENDS
EXTRN	?playerColor@CvPreGame@@YA?AW4PlayerColorTypes@@W4PlayerTypes@@@Z:PROC ; CvPreGame::playerColor
; Function compile flags: /Odtp
;	COMDAT ?lGetPlayerColor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T248958 = -12						; size = 4
_eColor$ = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetPlayerColor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetPlayerColor, COMDAT

; 6953 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 6954 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6955 : 	const PlayerColorTypes eColor = CvPreGame::playerColor(pkPlayer->GetID());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T248958[ebp], edx
	mov	eax, DWORD PTR $T248958[ebp]
	push	eax
	call	?playerColor@CvPreGame@@YA?AW4PlayerColorTypes@@W4PlayerTypes@@@Z ; CvPreGame::playerColor
	add	esp, 4
	mov	DWORD PTR _eColor$[ebp], eax

; 6956 : 	lua_pushinteger(L, eColor);

	mov	ecx, DWORD PTR _eColor$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 6957 : 	return 1;

	mov	eax, 1

; 6958 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPlayerColor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetPlayerColor
_TEXT	ENDS
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_01GLPGHMHM@z?$AA@				; `string'
PUBLIC	??_C@_01EANLCPLP@y?$AA@				; `string'
PUBLIC	??_C@_01FJMABOPO@x?$AA@				; `string'
PUBLIC	??_C@_0CJ@EGHNLAEN@Could?5not?5find?5secondary?5color?5a@ ; `string'
PUBLIC	??_C@_0CH@FMCIDKKA@Could?5not?5find?5primary?5color?5at?5@ ; `string'
PUBLIC	??_C@_0CG@GPPFAJDJ@Could?5not?5find?5player?5color?5at?5r@ ; `string'
EXTRN	_lua_pushnumber:PROC
EXTRN	?GetColor@CvColorInfo@@QBEABUCvColorA@@XZ:PROC	; CvColorInfo::GetColor
EXTRN	?GetColorInfo@CvGlobals@@QAEPAVCvColorInfo@@W4ColorTypes@@@Z:PROC ; CvGlobals::GetColorInfo
EXTRN	?GetColorTypeSecondary@CvPlayerColorInfo@@QBEHXZ:PROC ; CvPlayerColorInfo::GetColorTypeSecondary
EXTRN	?GetColorTypePrimary@CvPlayerColorInfo@@QBEHXZ:PROC ; CvPlayerColorInfo::GetColorTypePrimary
EXTRN	_luaL_error:PROC
EXTRN	?GetPlayerColorInfo@CvGlobals@@QAEPAVCvPlayerColorInfo@@W4PlayerColorTypes@@@Z:PROC ; CvGlobals::GetPlayerColorInfo
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fautovariable.h
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01GLPGHMHM@z?$AA@
CONST	SEGMENT
??_C@_01GLPGHMHM@z?$AA@ DB 'z', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01EANLCPLP@y?$AA@
CONST	SEGMENT
??_C@_01EANLCPLP@y?$AA@ DB 'y', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01FJMABOPO@x?$AA@
CONST	SEGMENT
??_C@_01FJMABOPO@x?$AA@ DB 'x', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@EGHNLAEN@Could?5not?5find?5secondary?5color?5a@
CONST	SEGMENT
??_C@_0CJ@EGHNLAEN@Could?5not?5find?5secondary?5color?5a@ DB 'Could not f'
	DB	'ind secondary color at row %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@FMCIDKKA@Could?5not?5find?5primary?5color?5at?5@
CONST	SEGMENT
??_C@_0CH@FMCIDKKA@Could?5not?5find?5primary?5color?5at?5@ DB 'Could not '
	DB	'find primary color at row %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@GPPFAJDJ@Could?5not?5find?5player?5color?5at?5r@
CONST	SEGMENT
??_C@_0CG@GPPFAJDJ@Could?5not?5find?5player?5color?5at?5r@ DB 'Could not '
	DB	'find player color at row %d', 00H		; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
CONST	ENDS
;	COMDAT ?lGetPlayerColors@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T248969 = -40						; size = 4
_kSecondaryColor$ = -36					; size = 4
_eColor$ = -32						; size = 4
_pkPlayer$ = -28					; size = 4
_pkSecondaryColor$ = -24				; size = 4
_pkPlayerColor$ = -20					; size = 4
_eSecondaryColor$ = -16					; size = 4
_pkPrimaryColor$ = -12					; size = 4
_ePrimaryColor$ = -8					; size = 4
_kPrimaryColor$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetPlayerColors@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetPlayerColors, COMDAT

; 6962 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H

; 6963 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 6964 : 	const PlayerColorTypes eColor = CvPreGame::playerColor(pkPlayer->GetID());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T248969[ebp], edx
	mov	eax, DWORD PTR $T248969[ebp]
	push	eax
	call	?playerColor@CvPreGame@@YA?AW4PlayerColorTypes@@W4PlayerTypes@@@Z ; CvPreGame::playerColor
	add	esp, 4
	mov	DWORD PTR _eColor$[ebp], eax

; 6965 : 
; 6966 : 	CvPlayerColorInfo* pkPlayerColor = GC.GetPlayerColorInfo(eColor);

	mov	ecx, DWORD PTR _eColor$[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetPlayerColorInfo@CvGlobals@@QAEPAVCvPlayerColorInfo@@W4PlayerColorTypes@@@Z ; CvGlobals::GetPlayerColorInfo
	mov	DWORD PTR _pkPlayerColor$[ebp], eax

; 6967 : 
; 6968 : 	if(pkPlayerColor == NULL)

	cmp	DWORD PTR _pkPlayerColor$[ebp], 0
	jne	SHORT $LN3@lGetPlayer

; 6969 : 	{
; 6970 : 		luaL_error(L, "Could not find player color at row %d", eColor);

	mov	edx, DWORD PTR _eColor$[ebp]
	push	edx
	push	OFFSET ??_C@_0CG@GPPFAJDJ@Could?5not?5find?5player?5color?5at?5r@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_error
	add	esp, 12					; 0000000cH

; 6971 : 		return 0;

	xor	eax, eax
	jmp	$LN4@lGetPlayer
$LN3@lGetPlayer:

; 6972 : 	}
; 6973 : 
; 6974 : 	const ColorTypes ePrimaryColor	 = (ColorTypes)pkPlayerColor->GetColorTypePrimary();

	mov	ecx, DWORD PTR _pkPlayerColor$[ebp]
	call	?GetColorTypePrimary@CvPlayerColorInfo@@QBEHXZ ; CvPlayerColorInfo::GetColorTypePrimary
	mov	DWORD PTR _ePrimaryColor$[ebp], eax

; 6975 : 	const ColorTypes eSecondaryColor = (ColorTypes)pkPlayerColor->GetColorTypeSecondary();

	mov	ecx, DWORD PTR _pkPlayerColor$[ebp]
	call	?GetColorTypeSecondary@CvPlayerColorInfo@@QBEHXZ ; CvPlayerColorInfo::GetColorTypeSecondary
	mov	DWORD PTR _eSecondaryColor$[ebp], eax

; 6976 : 
; 6977 : 	CvColorInfo* pkPrimaryColor = GC.GetColorInfo(ePrimaryColor);

	mov	ecx, DWORD PTR _ePrimaryColor$[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetColorInfo@CvGlobals@@QAEPAVCvColorInfo@@W4ColorTypes@@@Z ; CvGlobals::GetColorInfo
	mov	DWORD PTR _pkPrimaryColor$[ebp], eax

; 6978 : 	if(pkPrimaryColor == NULL)

	cmp	DWORD PTR _pkPrimaryColor$[ebp], 0
	jne	SHORT $LN2@lGetPlayer

; 6979 : 	{
; 6980 : 		luaL_error(L, "Could not find primary color at row %d", ePrimaryColor);

	mov	edx, DWORD PTR _ePrimaryColor$[ebp]
	push	edx
	push	OFFSET ??_C@_0CH@FMCIDKKA@Could?5not?5find?5primary?5color?5at?5@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_error
	add	esp, 12					; 0000000cH

; 6981 : 		return 0;

	xor	eax, eax
	jmp	$LN4@lGetPlayer
$LN2@lGetPlayer:

; 6982 : 	}
; 6983 : 	const CvColorA& kPrimaryColor = pkPrimaryColor->GetColor();

	mov	ecx, DWORD PTR _pkPrimaryColor$[ebp]
	call	?GetColor@CvColorInfo@@QBEABUCvColorA@@XZ ; CvColorInfo::GetColor
	mov	DWORD PTR _kPrimaryColor$[ebp], eax

; 6984 : 
; 6985 : 	CvColorInfo* pkSecondaryColor = GC.GetColorInfo(eSecondaryColor);

	mov	ecx, DWORD PTR _eSecondaryColor$[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetColorInfo@CvGlobals@@QAEPAVCvColorInfo@@W4ColorTypes@@@Z ; CvGlobals::GetColorInfo
	mov	DWORD PTR _pkSecondaryColor$[ebp], eax

; 6986 : 	if(pkSecondaryColor == NULL)

	cmp	DWORD PTR _pkSecondaryColor$[ebp], 0
	jne	SHORT $LN1@lGetPlayer

; 6987 : 	{
; 6988 : 		luaL_error(L, "Could not find secondary color at row %d", eSecondaryColor);

	mov	edx, DWORD PTR _eSecondaryColor$[ebp]
	push	edx
	push	OFFSET ??_C@_0CJ@EGHNLAEN@Could?5not?5find?5secondary?5color?5a@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_error
	add	esp, 12					; 0000000cH

; 6989 : 		return 0;

	xor	eax, eax
	jmp	$LN4@lGetPlayer
$LN1@lGetPlayer:

; 6990 : 	}
; 6991 : 	const CvColorA& kSecondaryColor = pkSecondaryColor->GetColor();

	mov	ecx, DWORD PTR _pkSecondaryColor$[ebp]
	call	?GetColor@CvColorInfo@@QBEABUCvColorA@@XZ ; CvColorInfo::GetColor
	mov	DWORD PTR _kSecondaryColor$[ebp], eax

; 6992 : 
; 6993 : 	//Now export colors
; 6994 : 	lua_createtable(L, 0, 4);

	push	4
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 6995 : 	lua_pushnumber(L, kPrimaryColor.r);

	mov	edx, DWORD PTR _kPrimaryColor$[ebp]
	cvtss2sd xmm0, DWORD PTR [edx]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushnumber
	add	esp, 12					; 0000000cH

; 6996 : 	lua_setfield(L, -2, "x");

	push	OFFSET ??_C@_01FJMABOPO@x?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 6997 : 	lua_pushnumber(L, kPrimaryColor.g);

	mov	edx, DWORD PTR _kPrimaryColor$[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+4]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushnumber
	add	esp, 12					; 0000000cH

; 6998 : 	lua_setfield(L, -2, "y");

	push	OFFSET ??_C@_01EANLCPLP@y?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 6999 : 	lua_pushnumber(L, kPrimaryColor.b);

	mov	edx, DWORD PTR _kPrimaryColor$[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+8]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushnumber
	add	esp, 12					; 0000000cH

; 7000 : 	lua_setfield(L, -2, "z");

	push	OFFSET ??_C@_01GLPGHMHM@z?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 7001 : 	lua_pushnumber(L, kPrimaryColor.a);

	mov	edx, DWORD PTR _kPrimaryColor$[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+12]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushnumber
	add	esp, 12					; 0000000cH

; 7002 : 	lua_setfield(L, -2, "w");

	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 7003 : 
; 7004 : 	lua_createtable(L, 0, 4);

	push	4
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 7005 : 	lua_pushnumber(L, kSecondaryColor.r);

	mov	eax, DWORD PTR _kSecondaryColor$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushnumber
	add	esp, 12					; 0000000cH

; 7006 : 	lua_setfield(L, -2, "x");

	push	OFFSET ??_C@_01FJMABOPO@x?$AA@
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 7007 : 	lua_pushnumber(L, kSecondaryColor.g);

	mov	eax, DWORD PTR _kSecondaryColor$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+4]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushnumber
	add	esp, 12					; 0000000cH

; 7008 : 	lua_setfield(L, -2, "y");

	push	OFFSET ??_C@_01EANLCPLP@y?$AA@
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 7009 : 	lua_pushnumber(L, kSecondaryColor.b);

	mov	eax, DWORD PTR _kSecondaryColor$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+8]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushnumber
	add	esp, 12					; 0000000cH

; 7010 : 	lua_setfield(L, -2, "z");

	push	OFFSET ??_C@_01GLPGHMHM@z?$AA@
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 7011 : 	lua_pushnumber(L, kSecondaryColor.a);

	mov	eax, DWORD PTR _kSecondaryColor$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+12]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushnumber
	add	esp, 12					; 0000000cH

; 7012 : 	lua_setfield(L, -2, "w");

	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 7013 : 
; 7014 : 	return 2;

	mov	eax, 2
$LN4@lGetPlayer:

; 7015 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPlayerColors@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetPlayerColors
_TEXT	ENDS
EXTRN	?getSeaPlotYield@CvPlayer@@QBEHW4YieldTypes@@@Z:PROC ; CvPlayer::getSeaPlotYield
; Function compile flags: /Odtp
;	COMDAT ?lGetSeaPlotYield@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSeaPlotYield@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetSeaPlotYield, COMDAT

; 7019 : {

	push	ebp
	mov	ebp, esp

; 7020 : 	return BasicLuaMethod(L, &CvPlayerAI::getSeaPlotYield);

	push	OFFSET ?getSeaPlotYield@CvPlayer@@QBEHW4YieldTypes@@@Z ; CvPlayer::getSeaPlotYield
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 7021 : }

	pop	ebp
	ret	0
?lGetSeaPlotYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetSeaPlotYield
_TEXT	ENDS
EXTRN	?getYieldRateModifier@CvPlayer@@QBEHW4YieldTypes@@@Z:PROC ; CvPlayer::getYieldRateModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetYieldRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetYieldRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetYieldRateModifier, COMDAT

; 7025 : {

	push	ebp
	mov	ebp, esp

; 7026 : 	return BasicLuaMethod(L, &CvPlayerAI::getYieldRateModifier);

	push	OFFSET ?getYieldRateModifier@CvPlayer@@QBEHW4YieldTypes@@@Z ; CvPlayer::getYieldRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 7027 : }

	pop	ebp
	ret	0
?lGetYieldRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetYieldRateModifier
_TEXT	ENDS
EXTRN	?getCapitalYieldRateModifier@CvPlayer@@QBEHW4YieldTypes@@@Z:PROC ; CvPlayer::getCapitalYieldRateModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetCapitalYieldRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCapitalYieldRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCapitalYieldRateModifier, COMDAT

; 7031 : {

	push	ebp
	mov	ebp, esp

; 7032 : 	return BasicLuaMethod(L, &CvPlayerAI::getCapitalYieldRateModifier);

	push	OFFSET ?getCapitalYieldRateModifier@CvPlayer@@QBEHW4YieldTypes@@@Z ; CvPlayer::getCapitalYieldRateModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 7033 : }

	pop	ebp
	ret	0
?lGetCapitalYieldRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCapitalYieldRateModifier
_TEXT	ENDS
EXTRN	?getExtraYieldThreshold@CvPlayer@@QBEHW4YieldTypes@@@Z:PROC ; CvPlayer::getExtraYieldThreshold
; Function compile flags: /Odtp
;	COMDAT ?lGetExtraYieldThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetExtraYieldThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetExtraYieldThreshold, COMDAT

; 7037 : {

	push	ebp
	mov	ebp, esp

; 7038 : 	return BasicLuaMethod(L, &CvPlayerAI::getExtraYieldThreshold);

	push	OFFSET ?getExtraYieldThreshold@CvPlayer@@QBEHW4YieldTypes@@@Z ; CvPlayer::getExtraYieldThreshold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 7039 : }

	pop	ebp
	ret	0
?lGetExtraYieldThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetExtraYieldThreshold
_TEXT	ENDS
EXTRN	?GetScience@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetScience
; Function compile flags: /Odtp
;	COMDAT ?lGetScience@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScience@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetScience, COMDAT

; 7043 : {

	push	ebp
	mov	ebp, esp

; 7044 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScience);

	push	OFFSET ?GetScience@CvPlayer@@QBEHXZ	; CvPlayer::GetScience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7045 : }

	pop	ebp
	ret	0
?lGetScience@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetScience
_TEXT	ENDS
EXTRN	?GetScienceTimes100@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScienceTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetScienceTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScienceTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScienceTimes100, COMDAT

; 7049 : {

	push	ebp
	mov	ebp, esp

; 7050 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScienceTimes100);

	push	OFFSET ?GetScienceTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetScienceTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7051 : }

	pop	ebp
	ret	0
?lGetScienceTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScienceTimes100
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEH_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool>
EXTRN	?GetScienceFromCitiesTimes100@CvPlayer@@QBEH_N@Z:PROC ; CvPlayer::GetScienceFromCitiesTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetScienceFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScienceFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScienceFromCitiesTimes100, COMDAT

; 7054 : {

	push	ebp
	mov	ebp, esp

; 7055 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScienceFromCitiesTimes100);

	push	OFFSET ?GetScienceFromCitiesTimes100@CvPlayer@@QBEH_N@Z ; CvPlayer::GetScienceFromCitiesTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEH_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool>
	add	esp, 8

; 7056 : }

	pop	ebp
	ret	0
?lGetScienceFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScienceFromCitiesTimes100
_TEXT	ENDS
EXTRN	?GetScienceFromOtherPlayersTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetScienceFromOtherPlayersTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetScienceFromOtherPlayersTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScienceFromOtherPlayersTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScienceFromOtherPlayersTimes100, COMDAT

; 7059 : {

	push	ebp
	mov	ebp, esp

; 7060 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScienceFromOtherPlayersTimes100);

	push	OFFSET ?GetScienceFromOtherPlayersTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetScienceFromOtherPlayersTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7061 : }

	pop	ebp
	ret	0
?lGetScienceFromOtherPlayersTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScienceFromOtherPlayersTimes100
_TEXT	ENDS
EXTRN	?GetScienceFromHappinessTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetScienceFromHappinessTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetScienceFromHappinessTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScienceFromHappinessTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScienceFromHappinessTimes100, COMDAT

; 7064 : {

	push	ebp
	mov	ebp, esp

; 7065 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScienceFromHappinessTimes100);

	push	OFFSET ?GetScienceFromHappinessTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetScienceFromHappinessTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7066 : }

	pop	ebp
	ret	0
?lGetScienceFromHappinessTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScienceFromHappinessTimes100
_TEXT	ENDS
EXTRN	?GetScienceFromGoldTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetScienceFromGoldTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetScienceFromGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScienceFromGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScienceFromGoldTimes100, COMDAT

; 7070 : {

	push	ebp
	mov	ebp, esp

; 7071 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScienceFromGoldTimes100);

	push	OFFSET ?GetScienceFromGoldTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetScienceFromGoldTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7072 : }

	pop	ebp
	ret	0
?lGetScienceFromGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScienceFromGoldTimes100
_TEXT	ENDS
EXTRN	?GetMinorFriendshipGainBullyGoldSuccess@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetMinorFriendshipGainBullyGoldSuccess
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorFriendshipGainBullyGoldSuccess@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorFriendshipGainBullyGoldSuccess@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorFriendshipGainBullyGoldSuccess, COMDAT

; 7077 : {

	push	ebp
	mov	ebp, esp

; 7078 : 	return BasicLuaMethod(L, &CvPlayerAI::GetMinorFriendshipGainBullyGoldSuccess);

	push	OFFSET ?GetMinorFriendshipGainBullyGoldSuccess@CvPlayer@@QBEHXZ ; CvPlayer::GetMinorFriendshipGainBullyGoldSuccess
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7079 : }

	pop	ebp
	ret	0
?lGetMinorFriendshipGainBullyGoldSuccess@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorFriendshipGainBullyGoldSuccess
_TEXT	ENDS
EXTRN	?GetScienceFromResearchAgreementsTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetScienceFromResearchAgreementsTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetScienceFromResearchAgreementsTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScienceFromResearchAgreementsTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScienceFromResearchAgreementsTimes100, COMDAT

; 7083 : {

	push	ebp
	mov	ebp, esp

; 7084 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScienceFromResearchAgreementsTimes100);

	push	OFFSET ?GetScienceFromResearchAgreementsTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetScienceFromResearchAgreementsTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7085 : }

	pop	ebp
	ret	0
?lGetScienceFromResearchAgreementsTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScienceFromResearchAgreementsTimes100
_TEXT	ENDS
EXTRN	?GetScienceFromBudgetDeficitTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetScienceFromBudgetDeficitTimes100
; Function compile flags: /Odtp
;	COMDAT ?lGetScienceFromBudgetDeficitTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScienceFromBudgetDeficitTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScienceFromBudgetDeficitTimes100, COMDAT

; 7088 : {

	push	ebp
	mov	ebp, esp

; 7089 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScienceFromBudgetDeficitTimes100);

	push	OFFSET ?GetScienceFromBudgetDeficitTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetScienceFromBudgetDeficitTimes100
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7090 : }

	pop	ebp
	ret	0
?lGetScienceFromBudgetDeficitTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScienceFromBudgetDeficitTimes100
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerProximityTypes@@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4PlayerProximityTypes@@W4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerProximityTypes,enum PlayerTypes>
EXTRN	?GetProximityToPlayer@CvPlayer@@QBE?AW4PlayerProximityTypes@@W4PlayerTypes@@@Z:PROC ; CvPlayer::GetProximityToPlayer
; Function compile flags: /Odtp
;	COMDAT ?lGetProximityToPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProximityToPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetProximityToPlayer, COMDAT

; 7094 : {

	push	ebp
	mov	ebp, esp

; 7095 : 	return BasicLuaMethod(L, &CvPlayerAI::GetProximityToPlayer);

	push	OFFSET ?GetProximityToPlayer@CvPlayer@@QBE?AW4PlayerProximityTypes@@W4PlayerTypes@@@Z ; CvPlayer::GetProximityToPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerProximityTypes@@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4PlayerProximityTypes@@W4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerProximityTypes,enum PlayerTypes>
	add	esp, 8

; 7096 : }

	pop	ebp
	ret	0
?lGetProximityToPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetProximityToPlayer
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerTypes>
EXTRN	?DoUpdateProximityToPlayer@CvPlayer@@QAEXW4PlayerTypes@@@Z:PROC ; CvPlayer::DoUpdateProximityToPlayer
; Function compile flags: /Odtp
;	COMDAT ?lDoUpdateProximityToPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoUpdateProximityToPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lDoUpdateProximityToPlayer, COMDAT

; 7100 : {

	push	ebp
	mov	ebp, esp

; 7101 : 	return BasicLuaMethod(L, &CvPlayerAI::DoUpdateProximityToPlayer);

	push	OFFSET ?DoUpdateProximityToPlayer@CvPlayer@@QAEXW4PlayerTypes@@@Z ; CvPlayer::DoUpdateProximityToPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 7102 : }

	pop	ebp
	ret	0
?lDoUpdateProximityToPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lDoUpdateProximityToPlayer
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4UnitTypes@@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4UnitTypes@@W4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum UnitTypes,enum PlayerTypes>
EXTRN	?GetIncomingUnitType@CvPlayer@@QBE?AW4UnitTypes@@W4PlayerTypes@@@Z:PROC ; CvPlayer::GetIncomingUnitType
; Function compile flags: /Odtp
;	COMDAT ?lGetIncomingUnitType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetIncomingUnitType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetIncomingUnitType, COMDAT

; 7106 : {

	push	ebp
	mov	ebp, esp

; 7107 : 	return BasicLuaMethod(L, &CvPlayer::GetIncomingUnitType);

	push	OFFSET ?GetIncomingUnitType@CvPlayer@@QBE?AW4UnitTypes@@W4PlayerTypes@@@Z ; CvPlayer::GetIncomingUnitType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4UnitTypes@@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4UnitTypes@@W4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum UnitTypes,enum PlayerTypes>
	add	esp, 8

; 7108 : }

	pop	ebp
	ret	0
?lGetIncomingUnitType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetIncomingUnitType
_TEXT	ENDS
EXTRN	?GetIncomingUnitCountdown@CvPlayer@@QBEHW4PlayerTypes@@@Z:PROC ; CvPlayer::GetIncomingUnitCountdown
; Function compile flags: /Odtp
;	COMDAT ?lGetIncomingUnitCountdown@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetIncomingUnitCountdown@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetIncomingUnitCountdown, COMDAT

; 7112 : {

	push	ebp
	mov	ebp, esp

; 7113 : 	return BasicLuaMethod(L, &CvPlayer::GetIncomingUnitCountdown);

	push	OFFSET ?GetIncomingUnitCountdown@CvPlayer@@QBEHW4PlayerTypes@@@Z ; CvPlayer::GetIncomingUnitCountdown
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum PlayerTypes>
	add	esp, 8

; 7114 : }

	pop	ebp
	ret	0
?lGetIncomingUnitCountdown@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetIncomingUnitCountdown
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4PlayerOptionTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4PlayerOptionTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum PlayerOptionTypes>
EXTRN	?isOption@CvPlayer@@QBE_NW4PlayerOptionTypes@@@Z:PROC ; CvPlayer::isOption
; Function compile flags: /Odtp
;	COMDAT ?lIsOption@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsOption@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsOption, COMDAT

; 7118 : {

	push	ebp
	mov	ebp, esp

; 7119 : 	return BasicLuaMethod(L, &CvPlayerAI::isOption);

	push	OFFSET ?isOption@CvPlayer@@QBE_NW4PlayerOptionTypes@@@Z ; CvPlayer::isOption
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4PlayerOptionTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4PlayerOptionTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum PlayerOptionTypes>
	add	esp, 8

; 7120 : }

	pop	ebp
	ret	0
?lIsOption@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsOption
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerOptionTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PlayerOptionTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerOptionTypes,bool>
EXTRN	?setOption@CvPlayer@@QAEXW4PlayerOptionTypes@@_N@Z:PROC ; CvPlayer::setOption
; Function compile flags: /Odtp
;	COMDAT ?lSetOption@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetOption@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lSetOption, COMDAT

; 7124 : {

	push	ebp
	mov	ebp, esp

; 7125 : 	return BasicLuaMethod(L, &CvPlayerAI::setOption);

	push	OFFSET ?setOption@CvPlayer@@QAEXW4PlayerOptionTypes@@_N@Z ; CvPlayer::setOption
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerOptionTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PlayerOptionTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerOptionTypes,bool>
	add	esp, 8

; 7126 : }

	pop	ebp
	ret	0
?lSetOption@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lSetOption
_TEXT	ENDS
EXTRN	?isPlayable@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isPlayable
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayable@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayable@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsPlayable, COMDAT

; 7130 : {

	push	ebp
	mov	ebp, esp

; 7131 : 	return BasicLuaMethod(L, &CvPlayerAI::isPlayable);

	push	OFFSET ?isPlayable@CvPlayer@@QBE_NXZ	; CvPlayer::isPlayable
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 7132 : }

	pop	ebp
	ret	0
?lIsPlayable@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsPlayable
_TEXT	ENDS
EXTRN	?setPlayable@CvPlayer@@QAEX_N@Z:PROC		; CvPlayer::setPlayable
; Function compile flags: /Odtp
;	COMDAT ?lSetPlayable@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetPlayable@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lSetPlayable, COMDAT

; 7136 : {

	push	ebp
	mov	ebp, esp

; 7137 : 	return BasicLuaMethod(L, &CvPlayerAI::setPlayable);

	push	OFFSET ?setPlayable@CvPlayer@@QAEX_N@Z	; CvPlayer::setPlayable
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 7138 : }

	pop	ebp
	ret	0
?lSetPlayable@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lSetPlayable
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes>
EXTRN	?getNumResourceUsed@CvPlayer@@QBEHW4ResourceTypes@@@Z:PROC ; CvPlayer::getNumResourceUsed
; Function compile flags: /Odtp
;	COMDAT ?lGetNumResourceUsed@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumResourceUsed@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumResourceUsed, COMDAT

; 7142 : {

	push	ebp
	mov	ebp, esp

; 7143 : 	return BasicLuaMethod(L, &CvPlayerAI::getNumResourceUsed);

	push	OFFSET ?getNumResourceUsed@CvPlayer@@QBEHW4ResourceTypes@@@Z ; CvPlayer::getNumResourceUsed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes>
	add	esp, 8

; 7144 : }

	pop	ebp
	ret	0
?lGetNumResourceUsed@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumResourceUsed
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ResourceTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes,bool>
EXTRN	?getNumResourceTotal@CvPlayer@@QBEHW4ResourceTypes@@_N@Z:PROC ; CvPlayer::getNumResourceTotal
; Function compile flags: /Odtp
;	COMDAT ?lGetNumResourceTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumResourceTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumResourceTotal, COMDAT

; 7148 : {

	push	ebp
	mov	ebp, esp

; 7149 : 	return BasicLuaMethod(L, &CvPlayerAI::getNumResourceTotal);

	push	OFFSET ?getNumResourceTotal@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceTotal
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4ResourceTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes,bool>
	add	esp, 8

; 7150 : }

	pop	ebp
	ret	0
?lGetNumResourceTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumResourceTotal
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4ResourceTypes@@H_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4ResourceTypes@@H_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum ResourceTypes,int,bool>
EXTRN	?changeNumResourceTotal@CvPlayer@@QAEXW4ResourceTypes@@H_N@Z:PROC ; CvPlayer::changeNumResourceTotal
; Function compile flags: /Odtp
;	COMDAT ?lChangeNumResourceTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeNumResourceTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNumResourceTotal, COMDAT

; 7154 : {

	push	ebp
	mov	ebp, esp

; 7155 : 	return BasicLuaMethod(L, &CvPlayerAI::changeNumResourceTotal);

	push	OFFSET ?changeNumResourceTotal@CvPlayer@@QAEXW4ResourceTypes@@H_N@Z ; CvPlayer::changeNumResourceTotal
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4ResourceTypes@@H_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4ResourceTypes@@H_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum ResourceTypes,int,bool>
	add	esp, 8

; 7156 : }

	pop	ebp
	ret	0
?lChangeNumResourceTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNumResourceTotal
_TEXT	ENDS
EXTRN	?getNumResourceAvailable@CvPlayer@@QBEHW4ResourceTypes@@_N@Z:PROC ; CvPlayer::getNumResourceAvailable
; Function compile flags: /Odtp
;	COMDAT ?lGetNumResourceAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumResourceAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumResourceAvailable, COMDAT

; 7160 : {

	push	ebp
	mov	ebp, esp

; 7161 : 	return BasicLuaMethod(L, &CvPlayerAI::getNumResourceAvailable);

	push	OFFSET ?getNumResourceAvailable@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceAvailable
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4ResourceTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes,bool>
	add	esp, 8

; 7162 : }

	pop	ebp
	ret	0
?lGetNumResourceAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumResourceAvailable
_TEXT	ENDS
EXTRN	?getResourceExport@CvPlayer@@QBEHW4ResourceTypes@@@Z:PROC ; CvPlayer::getResourceExport
; Function compile flags: /Odtp
;	COMDAT ?lGetResourceExport@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResourceExport@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetResourceExport, COMDAT

; 7167 : {

	push	ebp
	mov	ebp, esp

; 7168 : 	return BasicLuaMethod(L, &CvPlayerAI::getResourceExport);

	push	OFFSET ?getResourceExport@CvPlayer@@QBEHW4ResourceTypes@@@Z ; CvPlayer::getResourceExport
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes>
	add	esp, 8

; 7169 : }

	pop	ebp
	ret	0
?lGetResourceExport@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetResourceExport
_TEXT	ENDS
EXTRN	?getResourceImport@CvPlayer@@QBEHW4ResourceTypes@@@Z:PROC ; CvPlayer::getResourceImport
; Function compile flags: /Odtp
;	COMDAT ?lGetResourceImport@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResourceImport@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetResourceImport, COMDAT

; 7173 : {

	push	ebp
	mov	ebp, esp

; 7174 : 	return BasicLuaMethod(L, &CvPlayerAI::getResourceImport);

	push	OFFSET ?getResourceImport@CvPlayer@@QBEHW4ResourceTypes@@@Z ; CvPlayer::getResourceImport
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes>
	add	esp, 8

; 7175 : }

	pop	ebp
	ret	0
?lGetResourceImport@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetResourceImport
_TEXT	ENDS
EXTRN	?getResourceFromMinors@CvPlayer@@QBEHW4ResourceTypes@@@Z:PROC ; CvPlayer::getResourceFromMinors
; Function compile flags: /Odtp
;	COMDAT ?lGetResourceFromMinors@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResourceFromMinors@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetResourceFromMinors, COMDAT

; 7179 : {

	push	ebp
	mov	ebp, esp

; 7180 : 	return BasicLuaMethod(L, &CvPlayerAI::getResourceFromMinors);

	push	OFFSET ?getResourceFromMinors@CvPlayer@@QBEHW4ResourceTypes@@@Z ; CvPlayer::getResourceFromMinors
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes>
	add	esp, 8

; 7181 : }

	pop	ebp
	ret	0
?lGetResourceFromMinors@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetResourceFromMinors
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ImprovementTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ImprovementTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ImprovementTypes>
EXTRN	?getImprovementCount@CvPlayer@@QBEHW4ImprovementTypes@@@Z:PROC ; CvPlayer::getImprovementCount
; Function compile flags: /Odtp
;	COMDAT ?lGetImprovementCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetImprovementCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetImprovementCount, COMDAT

; 7186 : {

	push	ebp
	mov	ebp, esp

; 7187 : 	return BasicLuaMethod(L, &CvPlayerAI::getImprovementCount);

	push	OFFSET ?getImprovementCount@CvPlayer@@QBEHW4ImprovementTypes@@@Z ; CvPlayer::getImprovementCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4ImprovementTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ImprovementTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ImprovementTypes>
	add	esp, 8

; 7188 : }

	pop	ebp
	ret	0
?lGetImprovementCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetImprovementCount
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingTypes>
EXTRN	?isBuildingFree@CvPlayer@@QBE_NW4BuildingTypes@@@Z:PROC ; CvPlayer::isBuildingFree
; Function compile flags: /Odtp
;	COMDAT ?lIsBuildingFree@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBuildingFree@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsBuildingFree, COMDAT

; 7193 : {

	push	ebp
	mov	ebp, esp

; 7194 : 	return BasicLuaMethod(L, &CvPlayerAI::isBuildingFree);

	push	OFFSET ?isBuildingFree@CvPlayer@@QBE_NW4BuildingTypes@@@Z ; CvPlayer::isBuildingFree
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingTypes>
	add	esp, 8

; 7195 : }

	pop	ebp
	ret	0
?lIsBuildingFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsBuildingFree
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4UnitClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum UnitClassTypes>
EXTRN	?getUnitClassCount@CvPlayer@@QBEHW4UnitClassTypes@@@Z:PROC ; CvPlayer::getUnitClassCount
; Function compile flags: /Odtp
;	COMDAT ?lGetUnitClassCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitClassCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnitClassCount, COMDAT

; 7199 : {

	push	ebp
	mov	ebp, esp

; 7200 : 	return BasicLuaMethod(L, &CvPlayerAI::getUnitClassCount);

	push	OFFSET ?getUnitClassCount@CvPlayer@@QBEHW4UnitClassTypes@@@Z ; CvPlayer::getUnitClassCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4UnitClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum UnitClassTypes>
	add	esp, 8

; 7201 : }

	pop	ebp
	ret	0
?lGetUnitClassCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnitClassCount
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4UnitClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum UnitClassTypes,int>
EXTRN	?isUnitClassMaxedOut@CvPlayer@@QBE_NW4UnitClassTypes@@H@Z:PROC ; CvPlayer::isUnitClassMaxedOut
; Function compile flags: /Odtp
;	COMDAT ?lIsUnitClassMaxedOut@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsUnitClassMaxedOut@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsUnitClassMaxedOut, COMDAT

; 7205 : {

	push	ebp
	mov	ebp, esp

; 7206 : 	return BasicLuaMethod(L, &CvPlayerAI::isUnitClassMaxedOut);

	push	OFFSET ?isUnitClassMaxedOut@CvPlayer@@QBE_NW4UnitClassTypes@@H@Z ; CvPlayer::isUnitClassMaxedOut
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4UnitClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum UnitClassTypes,int>
	add	esp, 8

; 7207 : }

	pop	ebp
	ret	0
?lIsUnitClassMaxedOut@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsUnitClassMaxedOut
_TEXT	ENDS
EXTRN	?getUnitClassMaking@CvPlayer@@QBEHW4UnitClassTypes@@@Z:PROC ; CvPlayer::getUnitClassMaking
; Function compile flags: /Odtp
;	COMDAT ?lGetUnitClassMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitClassMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnitClassMaking, COMDAT

; 7211 : {

	push	ebp
	mov	ebp, esp

; 7212 : 	return BasicLuaMethod(L, &CvPlayerAI::getUnitClassMaking);

	push	OFFSET ?getUnitClassMaking@CvPlayer@@QBEHW4UnitClassTypes@@@Z ; CvPlayer::getUnitClassMaking
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4UnitClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum UnitClassTypes>
	add	esp, 8

; 7213 : }

	pop	ebp
	ret	0
?lGetUnitClassMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnitClassMaking
_TEXT	ENDS
EXTRN	?getUnitClassCountPlusMaking@CvPlayer@@QBEHW4UnitClassTypes@@@Z:PROC ; CvPlayer::getUnitClassCountPlusMaking
; Function compile flags: /Odtp
;	COMDAT ?lGetUnitClassCountPlusMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitClassCountPlusMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnitClassCountPlusMaking, COMDAT

; 7217 : {

	push	ebp
	mov	ebp, esp

; 7218 : 	return BasicLuaMethod(L, &CvPlayerAI::getUnitClassCountPlusMaking);

	push	OFFSET ?getUnitClassCountPlusMaking@CvPlayer@@QBEHW4UnitClassTypes@@@Z ; CvPlayer::getUnitClassCountPlusMaking
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4UnitClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum UnitClassTypes>
	add	esp, 8

; 7219 : }

	pop	ebp
	ret	0
?lGetUnitClassCountPlusMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnitClassCountPlusMaking
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingClassTypes>
EXTRN	?getBuildingClassCount@CvPlayer@@QBEHW4BuildingClassTypes@@@Z:PROC ; CvPlayer::getBuildingClassCount
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingClassCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingClassCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBuildingClassCount, COMDAT

; 7223 : {

	push	ebp
	mov	ebp, esp

; 7224 : 	return BasicLuaMethod(L, &CvPlayerAI::getBuildingClassCount);

	push	OFFSET ?getBuildingClassCount@CvPlayer@@QBEHW4BuildingClassTypes@@@Z ; CvPlayer::getBuildingClassCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingClassTypes>
	add	esp, 8

; 7225 : }

	pop	ebp
	ret	0
?lGetBuildingClassCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBuildingClassCount
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingClassTypes,int>
EXTRN	?isBuildingClassMaxedOut@CvPlayer@@QBE_NW4BuildingClassTypes@@H@Z:PROC ; CvPlayer::isBuildingClassMaxedOut
; Function compile flags: /Odtp
;	COMDAT ?lIsBuildingClassMaxedOut@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBuildingClassMaxedOut@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsBuildingClassMaxedOut, COMDAT

; 7229 : {

	push	ebp
	mov	ebp, esp

; 7230 : 	return BasicLuaMethod(L, &CvPlayerAI::isBuildingClassMaxedOut);

	push	OFFSET ?isBuildingClassMaxedOut@CvPlayer@@QBE_NW4BuildingClassTypes@@H@Z ; CvPlayer::isBuildingClassMaxedOut
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingClassTypes,int>
	add	esp, 8

; 7231 : }

	pop	ebp
	ret	0
?lIsBuildingClassMaxedOut@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsBuildingClassMaxedOut
_TEXT	ENDS
EXTRN	?getBuildingClassMaking@CvPlayer@@QBEHW4BuildingClassTypes@@@Z:PROC ; CvPlayer::getBuildingClassMaking
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingClassMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingClassMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBuildingClassMaking, COMDAT

; 7235 : {

	push	ebp
	mov	ebp, esp

; 7236 : 	return BasicLuaMethod(L, &CvPlayerAI::getBuildingClassMaking);

	push	OFFSET ?getBuildingClassMaking@CvPlayer@@QBEHW4BuildingClassTypes@@@Z ; CvPlayer::getBuildingClassMaking
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingClassTypes>
	add	esp, 8

; 7237 : }

	pop	ebp
	ret	0
?lGetBuildingClassMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBuildingClassMaking
_TEXT	ENDS
EXTRN	?getBuildingClassCountPlusMaking@CvPlayer@@QBEHW4BuildingClassTypes@@@Z:PROC ; CvPlayer::getBuildingClassCountPlusMaking
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingClassCountPlusMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingClassCountPlusMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBuildingClassCountPlusMaking, COMDAT

; 7241 : {

	push	ebp
	mov	ebp, esp

; 7242 : 	return BasicLuaMethod(L, &CvPlayerAI::getBuildingClassCountPlusMaking);

	push	OFFSET ?getBuildingClassCountPlusMaking@CvPlayer@@QBEHW4BuildingClassTypes@@@Z ; CvPlayer::getBuildingClassCountPlusMaking
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingClassTypes>
	add	esp, 8

; 7243 : }

	pop	ebp
	ret	0
?lGetBuildingClassCountPlusMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBuildingClassCountPlusMaking
_TEXT	ENDS
EXTRN	?getHurryCount@CvPlayer@@QBEHW4HurryTypes@@@Z:PROC ; CvPlayer::getHurryCount
; Function compile flags: /Odtp
;	COMDAT ?lGetHurryCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHurryCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetHurryCount, COMDAT

; 7247 : {

	push	ebp
	mov	ebp, esp

; 7248 : 	return BasicLuaMethod(L, &CvPlayerAI::getHurryCount);

	push	OFFSET ?getHurryCount@CvPlayer@@QBEHW4HurryTypes@@@Z ; CvPlayer::getHurryCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum HurryTypes>
	add	esp, 8

; 7249 : }

	pop	ebp
	ret	0
?lGetHurryCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetHurryCount
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum HurryTypes>
EXTRN	?IsHasAccessToHurry@CvPlayer@@QBE_NW4HurryTypes@@@Z:PROC ; CvPlayer::IsHasAccessToHurry
; Function compile flags: /Odtp
;	COMDAT ?lIsHasAccessToHurry@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHasAccessToHurry@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsHasAccessToHurry, COMDAT

; 7253 : {

	push	ebp
	mov	ebp, esp

; 7254 : 	return BasicLuaMethod(L, &CvPlayerAI::IsHasAccessToHurry);

	push	OFFSET ?IsHasAccessToHurry@CvPlayer@@QBE_NW4HurryTypes@@@Z ; CvPlayer::IsHasAccessToHurry
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum HurryTypes>
	add	esp, 8

; 7255 : }

	pop	ebp
	ret	0
?lIsHasAccessToHurry@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsHasAccessToHurry
_TEXT	ENDS
EXTRN	?IsCanHurry@CvPlayer@@QBE_NW4HurryTypes@@@Z:PROC ; CvPlayer::IsCanHurry
; Function compile flags: /Odtp
;	COMDAT ?lIsCanHurry@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsCanHurry@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsCanHurry, COMDAT

; 7259 : {

	push	ebp
	mov	ebp, esp

; 7260 : 	return BasicLuaMethod(L, &CvPlayerAI::IsCanHurry);

	push	OFFSET ?IsCanHurry@CvPlayer@@QBE_NW4HurryTypes@@@Z ; CvPlayer::IsCanHurry
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum HurryTypes>
	add	esp, 8

; 7261 : }

	pop	ebp
	ret	0
?lIsCanHurry@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsCanHurry
_TEXT	ENDS
EXTRN	?GetHurryGoldCost@CvPlayer@@QBEHW4HurryTypes@@@Z:PROC ; CvPlayer::GetHurryGoldCost
; Function compile flags: /Odtp
;	COMDAT ?lGetHurryGoldCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHurryGoldCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHurryGoldCost, COMDAT

; 7265 : {

	push	ebp
	mov	ebp, esp

; 7266 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHurryGoldCost);

	push	OFFSET ?GetHurryGoldCost@CvPlayer@@QBEHW4HurryTypes@@@Z ; CvPlayer::GetHurryGoldCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum HurryTypes>
	add	esp, 8

; 7267 : }

	pop	ebp
	ret	0
?lGetHurryGoldCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHurryGoldCost
_TEXT	ENDS
EXTRN	?IsResearchingTech@CvPlayerTechs@@QBE_NW4TechTypes@@@Z:PROC ; CvPlayerTechs::IsResearchingTech
; Function compile flags: /Odtp
;	COMDAT ?lIsResearchingTech@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_iIndex$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsResearchingTech@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsResearchingTech, COMDAT

; 7272 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 7273 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7274 : 	const TechTypes iIndex = (TechTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 7275 : 
; 7276 : 	const bool bResult = pkPlayer->GetPlayerTechs()->IsResearchingTech(iIndex);

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?IsResearchingTech@CvPlayerTechs@@QBE_NW4TechTypes@@@Z ; CvPlayerTechs::IsResearchingTech
	mov	BYTE PTR _bResult$[ebp], al

; 7277 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 7278 : 	return 1;

	mov	eax, 1

; 7279 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsResearchingTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsResearchingTech
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4TechTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TechTypes,bool>
EXTRN	?setResearchingTech@CvPlayer@@QAEXW4TechTypes@@_N@Z:PROC ; CvPlayer::setResearchingTech
; Function compile flags: /Odtp
;	COMDAT ?lSetResearchingTech@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetResearchingTech@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetResearchingTech, COMDAT

; 7283 : {

	push	ebp
	mov	ebp, esp

; 7284 : 	return BasicLuaMethod(L, &CvPlayerAI::setResearchingTech);

	push	OFFSET ?setResearchingTech@CvPlayer@@QAEXW4TechTypes@@_N@Z ; CvPlayer::setResearchingTech
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4TechTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TechTypes,bool>
	add	esp, 8

; 7285 : }

	pop	ebp
	ret	0
?lSetResearchingTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetResearchingTech
_TEXT	ENDS
EXTRN	?getCombatExperience@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getCombatExperience
; Function compile flags: /Odtp
;	COMDAT ?lGetCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCombatExperience, COMDAT

; 7290 : {

	push	ebp
	mov	ebp, esp

; 7291 : 	return BasicLuaMethod(L, &CvPlayerAI::getCombatExperience);

	push	OFFSET ?getCombatExperience@CvPlayer@@QBEHXZ ; CvPlayer::getCombatExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7292 : }

	pop	ebp
	ret	0
?lGetCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCombatExperience
_TEXT	ENDS
EXTRN	?changeCombatExperience@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::changeCombatExperience
; Function compile flags: /Odtp
;	COMDAT ?lChangeCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeCombatExperience, COMDAT

; 7296 : {

	push	ebp
	mov	ebp, esp

; 7297 : 	return BasicLuaMethod(L, &CvPlayerAI::changeCombatExperience);

	push	OFFSET ?changeCombatExperience@CvPlayer@@QAEXH@Z ; CvPlayer::changeCombatExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7298 : }

	pop	ebp
	ret	0
?lChangeCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeCombatExperience
_TEXT	ENDS
EXTRN	?setCombatExperience@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::setCombatExperience
; Function compile flags: /Odtp
;	COMDAT ?lSetCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetCombatExperience, COMDAT

; 7302 : {

	push	ebp
	mov	ebp, esp

; 7303 : 	return BasicLuaMethod(L, &CvPlayerAI::setCombatExperience);

	push	OFFSET ?setCombatExperience@CvPlayer@@QAEXH@Z ; CvPlayer::setCombatExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7304 : }

	pop	ebp
	ret	0
?lSetCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetCombatExperience
_TEXT	ENDS
EXTRN	?getLifetimeCombatExperience@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getLifetimeCombatExperience
; Function compile flags: /Odtp
;	COMDAT ?lGetLifetimeCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLifetimeCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetLifetimeCombatExperience, COMDAT

; 7308 : {

	push	ebp
	mov	ebp, esp

; 7309 : 	return BasicLuaMethod(L, &CvPlayerAI::getLifetimeCombatExperience);

	push	OFFSET ?getLifetimeCombatExperience@CvPlayer@@QBEHXZ ; CvPlayer::getLifetimeCombatExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7310 : }

	pop	ebp
	ret	0
?lGetLifetimeCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetLifetimeCombatExperience
_TEXT	ENDS
EXTRN	?getNavalCombatExperience@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getNavalCombatExperience
; Function compile flags: /Odtp
;	COMDAT ?lGetNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNavalCombatExperience, COMDAT

; 7314 : {

	push	ebp
	mov	ebp, esp

; 7315 : 	return BasicLuaMethod(L, &CvPlayerAI::getNavalCombatExperience);

	push	OFFSET ?getNavalCombatExperience@CvPlayer@@QBEHXZ ; CvPlayer::getNavalCombatExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7316 : }

	pop	ebp
	ret	0
?lGetNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNavalCombatExperience
_TEXT	ENDS
EXTRN	?changeNavalCombatExperience@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::changeNavalCombatExperience
; Function compile flags: /Odtp
;	COMDAT ?lChangeNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNavalCombatExperience, COMDAT

; 7320 : {

	push	ebp
	mov	ebp, esp

; 7321 : 	return BasicLuaMethod(L, &CvPlayerAI::changeNavalCombatExperience);

	push	OFFSET ?changeNavalCombatExperience@CvPlayer@@QAEXH@Z ; CvPlayer::changeNavalCombatExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7322 : }

	pop	ebp
	ret	0
?lChangeNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNavalCombatExperience
_TEXT	ENDS
EXTRN	?setNavalCombatExperience@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::setNavalCombatExperience
; Function compile flags: /Odtp
;	COMDAT ?lSetNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetNavalCombatExperience, COMDAT

; 7326 : {

	push	ebp
	mov	ebp, esp

; 7327 : 	return BasicLuaMethod(L, &CvPlayerAI::setNavalCombatExperience);

	push	OFFSET ?setNavalCombatExperience@CvPlayer@@QAEXH@Z ; CvPlayer::setNavalCombatExperience
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7328 : }

	pop	ebp
	ret	0
?lSetNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetNavalCombatExperience
_TEXT	ENDS
EXTRN	?GetSpecialistYieldChange@CvPlayerTraits@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z:PROC ; CvPlayerTraits::GetSpecialistYieldChange
EXTRN	?getSpecialistExtraYield@CvPlayer@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z:PROC ; CvPlayer::getSpecialistExtraYield
; Function compile flags: /Odtp
;	COMDAT ?lGetSpecialistExtraYield@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eIndex1$ = -16						; size = 4
_pkPlayer$ = -12					; size = 4
_iResult$ = -8						; size = 4
_eIndex2$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetSpecialistExtraYield@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetSpecialistExtraYield, COMDAT

; 7332 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi

; 7333 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7334 : 	const SpecialistTypes eIndex1 = (SpecialistTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eIndex1$[ebp], eax

; 7335 : 	const YieldTypes eIndex2 = (YieldTypes)lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eIndex2$[ebp], eax

; 7336 : 
; 7337 : #ifdef LEK_TRAIT_SPECIALIST_YIELD_MAX_ONE
; 7338 : 	const int iResult = pkPlayer->getSpecialistExtraYield(eIndex1, eIndex2) +
; 7339 : 	                    pkPlayer->GetPlayerTraits()->GetSpecialistYieldChange(eIndex1, eIndex2) +
; 7340 : 						pkPlayer->GetPlayerTraits()->GetAnySpecificSpecialistYieldChange(eIndex1, eIndex2);
; 7341 : #else
; 7342 : 	const int iResult = pkPlayer->getSpecialistExtraYield(eIndex1, eIndex2) +
; 7343 : 	                    pkPlayer->GetPlayerTraits()->GetSpecialistYieldChange(eIndex1, eIndex2);

	mov	eax, DWORD PTR _eIndex2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eIndex1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getSpecialistExtraYield@CvPlayer@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z ; CvPlayer::getSpecialistExtraYield
	mov	esi, eax
	mov	edx, DWORD PTR _eIndex2$[ebp]
	push	edx
	mov	eax, DWORD PTR _eIndex1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	ecx, eax
	call	?GetSpecialistYieldChange@CvPlayerTraits@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z ; CvPlayerTraits::GetSpecialistYieldChange
	add	esi, eax
	mov	DWORD PTR _iResult$[ebp], esi

; 7344 : #endif
; 7345 : 	
; 7346 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 7347 : 	return 1;

	mov	eax, 1

; 7348 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?lGetSpecialistExtraYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetSpecialistExtraYield
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4TechTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes,bool>
EXTRN	?findPathLength@CvPlayer@@QBEHW4TechTypes@@_N@Z:PROC ; CvPlayer::findPathLength
; Function compile flags: /Odtp
;	COMDAT ?lFindPathLength@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lFindPathLength@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lFindPathLength, COMDAT

; 7352 : {

	push	ebp
	mov	ebp, esp

; 7353 : 	return BasicLuaMethod(L, &CvPlayerAI::findPathLength);

	push	OFFSET ?findPathLength@CvPlayer@@QBEHW4TechTypes@@_N@Z ; CvPlayer::findPathLength
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4TechTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes,bool>
	add	esp, 8

; 7354 : }

	pop	ebp
	ret	0
?lFindPathLength@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lFindPathLength
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes>
EXTRN	?getQueuePosition@CvPlayer@@QBEHW4TechTypes@@@Z:PROC ; CvPlayer::getQueuePosition
; Function compile flags: /Odtp
;	COMDAT ?lGetQueuePosition@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetQueuePosition@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetQueuePosition, COMDAT

; 7358 : {

	push	ebp
	mov	ebp, esp

; 7359 : 	return BasicLuaMethod(L, &CvPlayerAI::getQueuePosition);

	push	OFFSET ?getQueuePosition@CvPlayer@@QBEHW4TechTypes@@@Z ; CvPlayer::getQueuePosition
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes>
	add	esp, 8

; 7360 : }

	pop	ebp
	ret	0
?lGetQueuePosition@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetQueuePosition
_TEXT	ENDS
EXTRN	?clearResearchQueue@CvPlayer@@QAEXXZ:PROC	; CvPlayer::clearResearchQueue
; Function compile flags: /Odtp
;	COMDAT ?lClearResearchQueue@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lClearResearchQueue@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lClearResearchQueue, COMDAT

; 7364 : {

	push	ebp
	mov	ebp, esp

; 7365 : 	return BasicLuaMethod(L, &CvPlayerAI::clearResearchQueue);

	push	OFFSET ?clearResearchQueue@CvPlayer@@QAEXXZ ; CvPlayer::clearResearchQueue
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod
	add	esp, 8

; 7366 : }

	pop	ebp
	ret	0
?lClearResearchQueue@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lClearResearchQueue
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AE_NW4TechTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum TechTypes,bool>
EXTRN	?pushResearch@CvPlayer@@QAE_NW4TechTypes@@_N@Z:PROC ; CvPlayer::pushResearch
; Function compile flags: /Odtp
;	COMDAT ?lPushResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lPushResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lPushResearch, COMDAT

; 7370 : {

	push	ebp
	mov	ebp, esp

; 7371 : 	return BasicLuaMethod(L, &CvPlayerAI::pushResearch);

	push	OFFSET ?pushResearch@CvPlayer@@QAE_NW4TechTypes@@_N@Z ; CvPlayer::pushResearch
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AE_NW4TechTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum TechTypes,bool>
	add	esp, 8

; 7372 : }

	pop	ebp
	ret	0
?lPushResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lPushResearch
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TechTypes>
EXTRN	?popResearch@CvPlayer@@QAEXW4TechTypes@@@Z:PROC	; CvPlayer::popResearch
; Function compile flags: /Odtp
;	COMDAT ?lPopResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lPopResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lPopResearch, COMDAT

; 7376 : {

	push	ebp
	mov	ebp, esp

; 7377 : 	return BasicLuaMethod(L, &CvPlayerAI::popResearch);

	push	OFFSET ?popResearch@CvPlayer@@QAEXW4TechTypes@@@Z ; CvPlayer::popResearch
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TechTypes>
	add	esp, 8

; 7378 : }

	pop	ebp
	ret	0
?lPopResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lPopResearch
_TEXT	ENDS
EXTRN	?getLengthResearchQueue@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getLengthResearchQueue
; Function compile flags: /Odtp
;	COMDAT ?lGetLengthResearchQueue@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLengthResearchQueue@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetLengthResearchQueue, COMDAT

; 7382 : {

	push	ebp
	mov	ebp, esp

; 7383 : 	return BasicLuaMethod(L, &CvPlayerAI::getLengthResearchQueue);

	push	OFFSET ?getLengthResearchQueue@CvPlayer@@QBEHXZ ; CvPlayer::getLengthResearchQueue
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7384 : }

	pop	ebp
	ret	0
?lGetLengthResearchQueue@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetLengthResearchQueue
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?addCityName@CvPlayer@@QAEXABVCvString@@@Z:PROC	; CvPlayer::addCityName
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv91 = -56						; size = 4
$T249099 = -52						; size = 4
_cityName$232991 = -48					; size = 28
__$ArrayPad$ = -20					; size = 4
_pkPlayer$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lAddCityName, COMDAT

; 7388 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 7389 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7390 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lAddCityNa

; 7391 : 	{
; 7392 : 		CvString cityName = lua_tostring(L, 2);

	push	0
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tolstring
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T249099[ebp], eax
	cmp	DWORD PTR $T249099[ebp], 0
	je	SHORT $LN7@lAddCityNa
	mov	edx, DWORD PTR $T249099[ebp]
	mov	DWORD PTR tv91[ebp], edx
	jmp	SHORT $LN8@lAddCityNa
$LN7@lAddCityNa:
	mov	DWORD PTR tv91[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN8@lAddCityNa:
	mov	eax, DWORD PTR tv91[ebp]
	push	eax
	lea	ecx, DWORD PTR _cityName$232991[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 7393 : 		pkPlayer->addCityName(cityName);

	lea	ecx, DWORD PTR _cityName$232991[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?addCityName@CvPlayer@@QAEXABVCvString@@@Z ; CvPlayer::addCityName

; 7394 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cityName$232991[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN1@lAddCityNa:

; 7395 : 
; 7396 : 	return 0;

	xor	eax, eax

; 7397 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _cityName$232991[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lAddCityName
EXTRN	?getNumCityNames@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getNumCityNames
; Function compile flags: /Odtp
;	COMDAT ?lGetNumCityNames@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumCityNames@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNumCityNames, COMDAT

; 7401 : {

	push	ebp
	mov	ebp, esp

; 7402 : 	return BasicLuaMethod(L, &CvPlayerAI::getNumCityNames);

	push	OFFSET ?getNumCityNames@CvPlayer@@QBEHXZ ; CvPlayer::getNumCityNames
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7403 : }

	pop	ebp
	ret	0
?lGetNumCityNames@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNumCityNames
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?getCityName@CvPlayer@@QBE?AVCvString@@H@Z:PROC	; CvPlayer::getCityName
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T249115 = -56						; size = 4
_cityName$233002 = -52					; size = 28
__$ArrayPad$ = -24					; size = 4
_index$233000 = -20					; size = 4
_pkPlayer$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetCityName, COMDAT

; 7407 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 7408 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7409 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lGetCityNa

; 7410 : 	{
; 7411 : 		const int index = luaL_checkint(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _index$233000[ebp], eax

; 7412 : 		CvString cityName = pkPlayer->getCityName(index);

	mov	edx, DWORD PTR _index$233000[ebp]
	push	edx
	lea	eax, DWORD PTR _cityName$233002[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getCityName@CvPlayer@@QBE?AVCvString@@H@Z ; CvPlayer::getCityName
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 7413 : 		lua_pushstring(L, cityName.c_str());

	lea	ecx, DWORD PTR _cityName$233002[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 7414 : 		return 1;

	mov	DWORD PTR $T249115[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cityName$233002[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T249115[ebp]
	jmp	SHORT $LN2@lGetCityNa
$LN1@lGetCityNa:

; 7415 : 	}
; 7416 : 
; 7417 : 	return 0;

	xor	eax, eax
$LN2@lGetCityNa:

; 7418 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _cityName$233002[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetCityName
PUBLIC	?lCitiesAux@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCitiesAux
EXTRN	_lua_rawgeti:PROC
; Function compile flags: /Odtp
;	COMDAT ?lCitiesAux@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv133 = -20						; size = 4
_t$ = -16						; size = 4
_pkPlayer$ = -12					; size = 4
_pkCity$ = -8						; size = 4
_i$ = -4						; size = 4
_L$ = 8							; size = 4
?lCitiesAux@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCitiesAux, COMDAT

; 7422 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 7423 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7424 : 	CvCity* pkCity = NULL;

	mov	DWORD PTR _pkCity$[ebp], 0

; 7425 : 
; 7426 : 	int i = -1;

	mov	DWORD PTR _i$[ebp], -1

; 7427 : 	lua_pushvalue(L, lua_upvalueindex(1));

	push	-10003					; ffffd8edH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushvalue
	add	esp, 8

; 7428 : 	int t = lua_gettop(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$[ebp], eax

; 7429 : 
; 7430 : 	lua_rawgeti(L, t, 1);

	push	1
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawgeti
	add	esp, 12					; 0000000cH

; 7431 : 	if(!lua_isnil(L, -1))

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@lCitiesAux

; 7432 : 	{
; 7433 : 		i = lua_tointeger(L, -1);

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _i$[ebp], eax
$LN2@lCitiesAux:

; 7434 : 	}
; 7435 : 	lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_settop
	add	esp, 8

; 7436 : 
; 7437 : 	pkCity = (i == -1)? pkPlayer->firstCity(&i) : pkPlayer->nextCity(&i);

	cmp	DWORD PTR _i$[ebp], -1
	jne	SHORT $LN5@lCitiesAux
	push	0
	lea	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR tv133[ebp], eax
	jmp	SHORT $LN6@lCitiesAux
$LN5@lCitiesAux:
	push	0
	lea	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR tv133[ebp], eax
$LN6@lCitiesAux:
	mov	ecx, DWORD PTR tv133[ebp]
	mov	DWORD PTR _pkCity$[ebp], ecx

; 7438 : 
; 7439 : 	lua_pushinteger(L, i);

	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 7440 : 	lua_rawseti(L, t, 1);

	push	1
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH

; 7441 : 
; 7442 : 	if(pkCity)

	cmp	DWORD PTR _pkCity$[ebp], 0
	je	SHORT $LN1@lCitiesAux

; 7443 : 	{
; 7444 : 		CvLuaCity::Push(L, pkCity);

	mov	eax, DWORD PTR _pkCity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8

; 7445 : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN3@lCitiesAux
$LN1@lCitiesAux:

; 7446 : 	}
; 7447 : 
; 7448 : 	return 0;

	xor	eax, eax
$LN3@lCitiesAux:

; 7449 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCitiesAux@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCitiesAux
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lCities, COMDAT

; 7453 : {

	push	ebp
	mov	ebp, esp

; 7454 : 	lua_createtable(L, 1, 0);

	push	0
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 7455 : 	lua_pushcclosure(L, lCitiesAux, 1);		/* generator, */

	push	1
	push	OFFSET ?lCitiesAux@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCitiesAux
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH

; 7456 : 	lua_pushvalue(L, 1);					/* state (self) */

	push	1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushvalue
	add	esp, 8

; 7457 : 	return 2;

	mov	eax, 2

; 7458 : }

	pop	ebp
	ret	0
?lCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lCities
_TEXT	ENDS
EXTRN	?getNumCities@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getNumCities
; Function compile flags: /Odtp
;	COMDAT ?lGetNumCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNumCities, COMDAT

; 7462 : {

	push	ebp
	mov	ebp, esp

; 7463 : 	return BasicLuaMethod(L, &CvPlayerAI::getNumCities);

	push	OFFSET ?getNumCities@CvPlayer@@QBEHXZ	; CvPlayer::getNumCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7464 : }

	pop	ebp
	ret	0
?lGetNumCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNumCities
_TEXT	ENDS
EXTRN	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z:PROC	; CvPlayer::getCity
; Function compile flags: /Odtp
;	COMDAT ?lGetCityByID@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_pkCity$ = -8						; size = 4
_id$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCityByID@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetCityByID, COMDAT

; 7468 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 7469 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7470 : 	const int id = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _id$[ebp], eax

; 7471 : 
; 7472 : 	CvCity* pkCity = pkPlayer->getCity(id);

	mov	edx, DWORD PTR _id$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	DWORD PTR _pkCity$[ebp], eax

; 7473 : 	CvLuaCity::Push(L, pkCity);

	mov	eax, DWORD PTR _pkCity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8

; 7474 : 	return 1;

	mov	eax, 1

; 7475 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCityByID@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetCityByID
_TEXT	ENDS
PUBLIC	?lUnitsAux@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lUnitsAux
; Function compile flags: /Odtp
;	COMDAT ?lUnitsAux@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv133 = -20						; size = 4
_pkUnit$ = -16						; size = 4
_t$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_i$ = -4						; size = 4
_L$ = 8							; size = 4
?lUnitsAux@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lUnitsAux, COMDAT

; 7479 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 7480 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7481 : 	CvUnit* pkUnit = NULL;

	mov	DWORD PTR _pkUnit$[ebp], 0

; 7482 : 
; 7483 : 	lua_pushvalue(L, lua_upvalueindex(1));

	push	-10003					; ffffd8edH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushvalue
	add	esp, 8

; 7484 : 	int t = lua_gettop(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$[ebp], eax

; 7485 : 
; 7486 : 	lua_rawgeti(L, t, 1);

	push	1
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawgeti
	add	esp, 12					; 0000000cH

; 7487 : 	int i = -1;

	mov	DWORD PTR _i$[ebp], -1

; 7488 : 	if(!lua_isnil(L, -1))

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@lUnitsAux

; 7489 : 	{
; 7490 : 		i = lua_tointeger(L, -1);

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _i$[ebp], eax
$LN2@lUnitsAux:

; 7491 : 	}
; 7492 : 	lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_settop
	add	esp, 8

; 7493 : 
; 7494 : 	pkUnit = (i == -1)? pkPlayer->firstUnit(&i) : pkPlayer->nextUnit(&i);

	cmp	DWORD PTR _i$[ebp], -1
	jne	SHORT $LN5@lUnitsAux
	push	0
	lea	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::firstUnit
	mov	DWORD PTR tv133[ebp], eax
	jmp	SHORT $LN6@lUnitsAux
$LN5@lUnitsAux:
	push	0
	lea	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::nextUnit
	mov	DWORD PTR tv133[ebp], eax
$LN6@lUnitsAux:
	mov	ecx, DWORD PTR tv133[ebp]
	mov	DWORD PTR _pkUnit$[ebp], ecx

; 7495 : 
; 7496 : 	lua_pushinteger(L, i);

	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 7497 : 	lua_rawseti(L, t, 1);

	push	1
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH

; 7498 : 
; 7499 : 	if(pkUnit)

	cmp	DWORD PTR _pkUnit$[ebp], 0
	je	SHORT $LN1@lUnitsAux

; 7500 : 	{
; 7501 : 		CvLuaUnit::Push(L, pkUnit);

	mov	eax, DWORD PTR _pkUnit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
	add	esp, 8

; 7502 : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN3@lUnitsAux
$LN1@lUnitsAux:

; 7503 : 	}
; 7504 : 
; 7505 : 	return 0;

	xor	eax, eax
$LN3@lUnitsAux:

; 7506 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lUnitsAux@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lUnitsAux
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lUnits, COMDAT

; 7510 : {

	push	ebp
	mov	ebp, esp

; 7511 : 	lua_createtable(L, 1, 0);

	push	0
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 7512 : 	lua_pushcclosure(L, lUnitsAux, 1);		/* generator, */

	push	1
	push	OFFSET ?lUnitsAux@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lUnitsAux
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH

; 7513 : 	lua_pushvalue(L, 1);					/* state (self)*/

	push	1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushvalue
	add	esp, 8

; 7514 : 	return 2;

	mov	eax, 2

; 7515 : }

	pop	ebp
	ret	0
?lUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lUnits
_TEXT	ENDS
EXTRN	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z:PROC	; CvPlayer::getUnit
; Function compile flags: /Odtp
;	COMDAT ?lGetUnitByID@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_id$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetUnitByID@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetUnitByID, COMDAT

; 7519 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 7520 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7521 : 	int id = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _id$[ebp], eax

; 7522 : 
; 7523 : 	CvLuaUnit::Push(L, pkPlayer->getUnit(id));

	mov	edx, DWORD PTR _id$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z	; CvPlayer::getUnit
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
	add	esp, 8

; 7524 : 	return 1;

	mov	eax, 1

; 7525 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetUnitByID@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetUnitByID
_TEXT	ENDS
EXTRN	?getNumUnits@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getNumUnits
; Function compile flags: /Odtp
;	COMDAT ?lGetNumUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNumUnits, COMDAT

; 7529 : {

	push	ebp
	mov	ebp, esp

; 7530 : 	return BasicLuaMethod(L, &CvPlayerAI::getNumUnits);

	push	OFFSET ?getNumUnits@CvPlayer@@QBEHXZ	; CvPlayer::getNumUnits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7531 : }

	pop	ebp
	ret	0
?lGetNumUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNumUnits
_TEXT	ENDS
PUBLIC	??_9CvPlayerAI@@$BCE@AE				; CvPlayerAI::`vcall'{36}'
; Function compile flags: /Odtp
;	COMDAT ?lAI_updateFoundValues@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAI_updateFoundValues@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lAI_updateFoundValues, COMDAT

; 7535 : {

	push	ebp
	mov	ebp, esp

; 7536 : 	return BasicLuaMethod(L, &CvPlayerAI::AI_updateFoundValues);

	push	OFFSET ??_9CvPlayerAI@@$BCE@AE		; CvPlayerAI::`vcall'{36}'
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 7537 : }

	pop	ebp
	ret	0
?lAI_updateFoundValues@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lAI_updateFoundValues
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HHHH_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHHHH_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,int,int,int,bool>
PUBLIC	??_9CvPlayerAI@@$BDA@AE				; CvPlayerAI::`vcall'{48}'
; Function compile flags: /Odtp
;	COMDAT ?lAI_foundValue@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAI_foundValue@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lAI_foundValue, COMDAT

; 7541 : {

	push	ebp
	mov	ebp, esp

; 7542 : 	return BasicLuaMethod(L, &CvPlayerAI::AI_foundValue);

	push	OFFSET ??_9CvPlayerAI@@$BDA@AE		; CvPlayerAI::`vcall'{48}'
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HHHH_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHHHH_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,int,int,int,bool>
	add	esp, 8

; 7543 : }

	pop	ebp
	ret	0
?lAI_foundValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lAI_foundValue
_TEXT	ENDS
PUBLIC	??_C@_0BE@NOLPBEHI@REPLAYDATASET_SCORE?$AA@	; `string'
EXTRN	?getReplayDataValue@CvPlayer@@QBEHII@Z:PROC	; CvPlayer::getReplayDataValue
EXTRN	?getReplayDataSetIndex@CvPlayer@@QAEIPBD@Z:PROC	; CvPlayer::getReplayDataSetIndex
;	COMDAT ??_C@_0BE@NOLPBEHI@REPLAYDATASET_SCORE?$AA@
CONST	SEGMENT
??_C@_0BE@NOLPBEHI@REPLAYDATASET_SCORE?$AA@ DB 'REPLAYDATASET_SCORE', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?lGetScoreHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_uiDataSet$ = -12					; size = 4
_pkPlayer$ = -8						; size = 4
_uiTurn$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetScoreHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetScoreHistory, COMDAT

; 7548 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 7549 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7550 : 	unsigned int uiTurn = (unsigned int)luaL_checkint(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _uiTurn$[ebp], eax

; 7551 : 	unsigned int uiDataSet = pkPlayer->getReplayDataSetIndex("REPLAYDATASET_SCORE");

	push	OFFSET ??_C@_0BE@NOLPBEHI@REPLAYDATASET_SCORE?$AA@
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getReplayDataSetIndex@CvPlayer@@QAEIPBD@Z ; CvPlayer::getReplayDataSetIndex
	mov	DWORD PTR _uiDataSet$[ebp], eax

; 7552 : 	lua_pushinteger(L, pkPlayer->getReplayDataValue(uiDataSet, uiTurn));

	mov	edx, DWORD PTR _uiTurn$[ebp]
	push	edx
	mov	eax, DWORD PTR _uiDataSet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getReplayDataValue@CvPlayer@@QBEHII@Z	; CvPlayer::getReplayDataValue
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 7553 : 	return 1;

	mov	eax, 1

; 7554 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetScoreHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetScoreHistory
_TEXT	ENDS
PUBLIC	??_C@_0BG@JOHOKDPJ@REPLAYDATASET_ECONOMY?$AA@	; `string'
;	COMDAT ??_C@_0BG@JOHOKDPJ@REPLAYDATASET_ECONOMY?$AA@
CONST	SEGMENT
??_C@_0BG@JOHOKDPJ@REPLAYDATASET_ECONOMY?$AA@ DB 'REPLAYDATASET_ECONOMY', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?lGetEconomyHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_uiDataSet$ = -12					; size = 4
_pkPlayer$ = -8						; size = 4
_uiTurn$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetEconomyHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetEconomyHistory, COMDAT

; 7558 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 7559 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7560 : 	unsigned int uiTurn = (unsigned int)luaL_checkint(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _uiTurn$[ebp], eax

; 7561 : 	unsigned int uiDataSet = pkPlayer->getReplayDataSetIndex("REPLAYDATASET_ECONOMY");

	push	OFFSET ??_C@_0BG@JOHOKDPJ@REPLAYDATASET_ECONOMY?$AA@
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getReplayDataSetIndex@CvPlayer@@QAEIPBD@Z ; CvPlayer::getReplayDataSetIndex
	mov	DWORD PTR _uiDataSet$[ebp], eax

; 7562 : 	lua_pushinteger(L, pkPlayer->getReplayDataValue(uiDataSet, uiTurn));

	mov	edx, DWORD PTR _uiTurn$[ebp]
	push	edx
	mov	eax, DWORD PTR _uiDataSet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getReplayDataValue@CvPlayer@@QBEHII@Z	; CvPlayer::getReplayDataValue
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 7563 : 	return 1;

	mov	eax, 1

; 7564 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetEconomyHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetEconomyHistory
_TEXT	ENDS
PUBLIC	??_C@_0BK@EGPMII@REPLAYDATASET_AGRICULTURE?$AA@	; `string'
;	COMDAT ??_C@_0BK@EGPMII@REPLAYDATASET_AGRICULTURE?$AA@
CONST	SEGMENT
??_C@_0BK@EGPMII@REPLAYDATASET_AGRICULTURE?$AA@ DB 'REPLAYDATASET_AGRICUL'
	DB	'TURE', 00H					; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?lGetIndustryHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_uiDataSet$ = -12					; size = 4
_pkPlayer$ = -8						; size = 4
_uiTurn$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetIndustryHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetIndustryHistory, COMDAT

; 7568 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 7569 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7570 : 	unsigned int uiTurn = (unsigned int)luaL_checkint(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _uiTurn$[ebp], eax

; 7571 : 	unsigned int uiDataSet = pkPlayer->getReplayDataSetIndex("REPLAYDATASET_AGRICULTURE");

	push	OFFSET ??_C@_0BK@EGPMII@REPLAYDATASET_AGRICULTURE?$AA@
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getReplayDataSetIndex@CvPlayer@@QAEIPBD@Z ; CvPlayer::getReplayDataSetIndex
	mov	DWORD PTR _uiDataSet$[ebp], eax

; 7572 : 	lua_pushinteger(L, pkPlayer->getReplayDataValue(uiDataSet, uiTurn));

	mov	edx, DWORD PTR _uiTurn$[ebp]
	push	edx
	mov	eax, DWORD PTR _uiDataSet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getReplayDataValue@CvPlayer@@QBEHII@Z	; CvPlayer::getReplayDataValue
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 7573 : 	return 1;

	mov	eax, 1

; 7574 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetIndustryHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetIndustryHistory
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetAgricultureHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_uiDataSet$ = -12					; size = 4
_pkPlayer$ = -8						; size = 4
_uiTurn$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetAgricultureHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAgricultureHistory, COMDAT

; 7578 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 7579 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7580 : 	unsigned int uiTurn = (unsigned int)luaL_checkint(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _uiTurn$[ebp], eax

; 7581 : 	unsigned int uiDataSet = pkPlayer->getReplayDataSetIndex("REPLAYDATASET_AGRICULTURE");

	push	OFFSET ??_C@_0BK@EGPMII@REPLAYDATASET_AGRICULTURE?$AA@
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getReplayDataSetIndex@CvPlayer@@QAEIPBD@Z ; CvPlayer::getReplayDataSetIndex
	mov	DWORD PTR _uiDataSet$[ebp], eax

; 7582 : 	lua_pushinteger(L, pkPlayer->getReplayDataValue(uiDataSet, uiTurn));

	mov	edx, DWORD PTR _uiTurn$[ebp]
	push	edx
	mov	eax, DWORD PTR _uiDataSet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getReplayDataValue@CvPlayer@@QBEHII@Z	; CvPlayer::getReplayDataValue
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 7583 : 	return 1;

	mov	eax, 1

; 7584 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetAgricultureHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAgricultureHistory
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetPowerHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?lGetPowerHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetPowerHistory, COMDAT

; 7588 : {

	push	ebp
	mov	ebp, esp

; 7589 : 	return 0;

	xor	eax, eax

; 7590 : }

	pop	ebp
	ret	0
?lGetPowerHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetPowerHistory
_TEXT	ENDS
PUBLIC	??1?$_Tree_val@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >
PUBLIC	??1?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@QAE@XZ ; std::map<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> > >::~map<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> > >
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Tidy
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::_Inc
EXTRN	_lua_rawset:PROC
EXTRN	?getReplayDataHistory@CvPlayer@@QBE?AV?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@I@Z:PROC ; CvPlayer::getReplayDataHistory
EXTRN	?getReplayDataSetName@CvPlayer@@QBEPBDI@Z:PROC	; CvPlayer::getReplayDataSetName
EXTRN	?getNumReplayDataSets@CvPlayer@@QBEIXZ:PROC	; CvPlayer::getNumReplayDataSets
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?lGetReplayData@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetReplayData@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetReplayData@CvLuaPlayer@@KAHPAUlua_State@@@Z$2
__ehfuncinfo$?lGetReplayData@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetReplayData@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetReplayData@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T249260 = -76						; size = 4
$T249187 = -56						; size = 4
$T249174 = -52						; size = 4
$T249168 = -48						; size = 4
$T249163 = -44						; size = 4
_it$233229 = -40					; size = 4
_data$233133 = -36					; size = 12
_uiDataSet$233129 = -24					; size = 4
_pkPlayer$ = -20					; size = 4
_numDataSets$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetReplayData@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetReplayData, COMDAT

; 7594 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetReplayData@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 148				; 00000094H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 7595 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7596 : 
; 7597 : 	const unsigned int numDataSets = pkPlayer->getNumReplayDataSets();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getNumReplayDataSets@CvPlayer@@QBEIXZ	; CvPlayer::getNumReplayDataSets
	mov	DWORD PTR _numDataSets$[ebp], eax

; 7598 : 
; 7599 : 	lua_createtable(L, 0, numDataSets);

	mov	ecx, DWORD PTR _numDataSets$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 7600 : 	for(unsigned int uiDataSet = 0; uiDataSet < numDataSets; ++uiDataSet)

	mov	DWORD PTR _uiDataSet$233129[ebp], 0
	jmp	SHORT $LN6@lGetReplay
$LN5@lGetReplay:
	mov	eax, DWORD PTR _uiDataSet$233129[ebp]
	add	eax, 1
	mov	DWORD PTR _uiDataSet$233129[ebp], eax
$LN6@lGetReplay:
	mov	ecx, DWORD PTR _uiDataSet$233129[ebp]
	cmp	ecx, DWORD PTR _numDataSets$[ebp]
	jae	$LN4@lGetReplay

; 7601 : 	{
; 7602 : 		lua_pushstring(L, pkPlayer->getReplayDataSetName(uiDataSet));

	mov	edx, DWORD PTR _uiDataSet$233129[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getReplayDataSetName@CvPlayer@@QBEPBDI@Z ; CvPlayer::getReplayDataSetName
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 7603 : 
; 7604 : 		CvPlayer::TurnData data = pkPlayer->getReplayDataHistory(uiDataSet);

	mov	ecx, DWORD PTR _uiDataSet$233129[ebp]
	push	ecx
	lea	edx, DWORD PTR _data$233133[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getReplayDataHistory@CvPlayer@@QBE?AV?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@I@Z ; CvPlayer::getReplayDataHistory
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 7605 : 
; 7606 : 		lua_createtable(L, data.size() - 1, 1);

	mov	eax, DWORD PTR _data$233133[ebp+8]
	mov	DWORD PTR $T249168[ebp], eax
	push	1
	mov	ecx, DWORD PTR $T249168[ebp]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 7607 : 
; 7608 : 		for(CvPlayer::TurnData::iterator it = data.begin(); it != data.end(); ++it)

	mov	eax, DWORD PTR _data$233133[ebp+4]
	mov	DWORD PTR $T249174[ebp], eax
	mov	ecx, DWORD PTR $T249174[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T249187[ebp], edx
	mov	eax, DWORD PTR $T249187[ebp]
	mov	DWORD PTR _it$233229[ebp], eax
	jmp	SHORT $LN3@lGetReplay
$LN2@lGetReplay:
	lea	ecx, DWORD PTR _it$233229[ebp]
	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::_Inc
$LN3@lGetReplay:
	mov	ecx, DWORD PTR _data$233133[ebp+4]
	mov	DWORD PTR $T249260[ebp], ecx
	mov	edx, DWORD PTR $T249260[ebp]
	mov	DWORD PTR $T249163[ebp], edx
	mov	eax, DWORD PTR _it$233229[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T249163[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN1@lGetReplay

; 7609 : 		{
; 7610 : 			lua_pushinteger(L, (*it).second);

	mov	ecx, DWORD PTR _it$233229[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 7611 : 			lua_rawseti(L, -2, (*it).first);

	mov	ecx, DWORD PTR _it$233229[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawseti
	add	esp, 12					; 0000000cH

; 7612 : 		}

	jmp	SHORT $LN2@lGetReplay
$LN1@lGetReplay:

; 7613 : 
; 7614 : 		lua_rawset(L, -3);

	push	-3					; fffffffdH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawset
	add	esp, 8

; 7615 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _data$233133[ebp]
	call	?_Tidy@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	jmp	$LN5@lGetReplay
$LN4@lGetReplay:

; 7616 : 
; 7617 : 	return 1;

	mov	eax, 1

; 7618 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetReplayData@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _data$233133[ebp]
	jmp	??1?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@QAE@XZ
__unwindfunclet$?lGetReplayData@CvLuaPlayer@@KAHPAUlua_State@@@Z$2:
	lea	ecx, DWORD PTR _data$233133[ebp]
	jmp	??1?$_Tree_val@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@XZ
__ehhandler$?lGetReplayData@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-152]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetReplayData@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetReplayData@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetReplayData
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@QAE@XZ$1
__ehfuncinfo$??1?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -100						; size = 4
__$EHRec$ = -12						; size = 12
??1?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@QAE@XZ PROC ; std::map<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> > >::~map<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_val@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@XZ
__ehhandler$??1?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@QAE@XZ ENDP ; std::map<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> > >::~map<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> > >
EXTRN	?setReplayDataValue@CvPlayer@@QAEXIIH@Z:PROC	; CvPlayer::setReplayDataValue
EXTRN	_luaL_checklstring:PROC
; Function compile flags: /Odtp
;	COMDAT ?lSetReplayDataValue@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_uiDataSet$ = -20					; size = 4
_pkPlayer$ = -16					; size = 4
_iTurn$ = -12						; size = 4
_szDataSet$ = -8					; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lSetReplayDataValue@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetReplayDataValue, COMDAT

; 7622 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 7623 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7624 : 	const char* szDataSet = luaL_checkstring(L, 2);

	push	0
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checklstring
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _szDataSet$[ebp], eax

; 7625 : 	int iTurn = luaL_checkint(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _iTurn$[ebp], eax

; 7626 : 	int iValue = luaL_checkint(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _iValue$[ebp], eax

; 7627 : 
; 7628 : 	unsigned int uiDataSet = pkPlayer->getReplayDataSetIndex(szDataSet);

	mov	ecx, DWORD PTR _szDataSet$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getReplayDataSetIndex@CvPlayer@@QAEIPBD@Z ; CvPlayer::getReplayDataSetIndex
	mov	DWORD PTR _uiDataSet$[ebp], eax

; 7629 : 	pkPlayer->setReplayDataValue(uiDataSet, iTurn, iValue);

	mov	edx, DWORD PTR _iValue$[ebp]
	push	edx
	mov	eax, DWORD PTR _iTurn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _uiDataSet$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?setReplayDataValue@CvPlayer@@QAEXIIH@Z	; CvPlayer::setReplayDataValue

; 7630 : 
; 7631 : 	return 0;

	xor	eax, eax

; 7632 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetReplayDataValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetReplayDataValue
_TEXT	ENDS
EXTRN	?getScriptData@CvPlayer@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:PROC ; CvPlayer::getScriptData
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv82 = -52						; size = 4
tv83 = -48						; size = 4
$T249862 = -44						; size = 28
_pkPlayer$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetScriptData, COMDAT

; 7636 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 7637 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7638 : 	lua_pushstring(L, pkPlayer->getScriptData().c_str());

	lea	ecx, DWORD PTR $T249862[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getScriptData@CvPlayer@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CvPlayer::getScriptData
	mov	DWORD PTR tv83[ebp], eax
	mov	edx, DWORD PTR tv83[ebp]
	mov	DWORD PTR tv82[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv82[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T249862[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 7639 : 	return 1;

	mov	eax, 1

; 7640 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T249862[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetScriptData
EXTRN	?setScriptData@CvPlayer@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; CvPlayer::setScriptData
; Function compile flags: /Odtp
;	COMDAT ?lSetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv92 = -16						; size = 4
$T249872 = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_strScriptData$ = -4					; size = 4
_L$ = 8							; size = 4
?lSetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lSetScriptData, COMDAT

; 7644 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 7645 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7646 : 	const char* strScriptData = lua_tostring(L, 2);

	push	0
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tolstring
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _strScriptData$[ebp], eax

; 7647 : 
; 7648 : 	pkPlayer->setScriptData(strScriptData);

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T249872[ebp], esp
	mov	edx, DWORD PTR _strScriptData$[ebp]
	push	edx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv92[ebp], eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?setScriptData@CvPlayer@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvPlayer::setScriptData

; 7649 : 	return 0;

	xor	eax, eax

; 7650 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lSetScriptData
_TEXT	ENDS
EXTRN	?GetNumPlots@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetNumPlots
; Function compile flags: /Odtp
;	COMDAT ?lGetNumPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNumPlots, COMDAT

; 7654 : {

	push	ebp
	mov	ebp, esp

; 7655 : 	return BasicLuaMethod(L, &CvPlayerAI::GetNumPlots);

	push	OFFSET ?GetNumPlots@CvPlayer@@QBEHXZ	; CvPlayer::GetNumPlots
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7656 : }

	pop	ebp
	ret	0
?lGetNumPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNumPlots
_TEXT	ENDS
EXTRN	?GetNumPlotsBought@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetNumPlotsBought
; Function compile flags: /Odtp
;	COMDAT ?lGetNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumPlotsBought, COMDAT

; 7660 : {

	push	ebp
	mov	ebp, esp

; 7661 : 	return BasicLuaMethod(L, &CvPlayerAI::GetNumPlotsBought);

	push	OFFSET ?GetNumPlotsBought@CvPlayer@@QBEHXZ ; CvPlayer::GetNumPlotsBought
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7662 : }

	pop	ebp
	ret	0
?lGetNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumPlotsBought
_TEXT	ENDS
EXTRN	?SetNumPlotsBought@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::SetNumPlotsBought
; Function compile flags: /Odtp
;	COMDAT ?lSetNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetNumPlotsBought, COMDAT

; 7666 : {

	push	ebp
	mov	ebp, esp

; 7667 : 	return BasicLuaMethod(L, &CvPlayerAI::SetNumPlotsBought);

	push	OFFSET ?SetNumPlotsBought@CvPlayer@@QAEXH@Z ; CvPlayer::SetNumPlotsBought
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7668 : }

	pop	ebp
	ret	0
?lSetNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetNumPlotsBought
_TEXT	ENDS
EXTRN	?ChangeNumPlotsBought@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::ChangeNumPlotsBought
; Function compile flags: /Odtp
;	COMDAT ?lChangeNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNumPlotsBought, COMDAT

; 7672 : {

	push	ebp
	mov	ebp, esp

; 7673 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeNumPlotsBought);

	push	OFFSET ?ChangeNumPlotsBought@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeNumPlotsBought
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7674 : }

	pop	ebp
	ret	0
?lChangeNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNumPlotsBought
_TEXT	ENDS
EXTRN	?GetBuyPlotCost@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetBuyPlotCost
; Function compile flags: /Odtp
;	COMDAT ?lGetBuyPlotCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuyPlotCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetBuyPlotCost, COMDAT

; 7678 : {

	push	ebp
	mov	ebp, esp

; 7679 : 	return BasicLuaMethod(L, &CvPlayerAI::GetBuyPlotCost);

	push	OFFSET ?GetBuyPlotCost@CvPlayer@@QBEHXZ	; CvPlayer::GetBuyPlotCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7680 : }

	pop	ebp
	ret	0
?lGetBuyPlotCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetBuyPlotCost
_TEXT	ENDS
EXTRN	?GetPlotDanger@CvPlayer@@QBEHAAVCvPlot@@@Z:PROC	; CvPlayer::GetPlotDanger
; Function compile flags: /Odtp
;	COMDAT ?lGetPlotDanger@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_pkPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetPlotDanger@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetPlotDanger, COMDAT

; 7684 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 7685 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7686 : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlot$[ebp], eax

; 7687 : 
; 7688 : 	lua_pushinteger(L, pkPlayer->GetPlotDanger(*pkPlot));

	mov	edx, DWORD PTR _pkPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlotDanger@CvPlayer@@QBEHAAVCvPlot@@@Z ; CvPlayer::GetPlotDanger
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 7689 : 	return 1;

	mov	eax, 1

; 7690 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPlotDanger@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetPlotDanger
_TEXT	ENDS
EXTRN	?DoBeginDiploWithHuman@CvDiplomacyAI@@QAEXXZ:PROC ; CvDiplomacyAI::DoBeginDiploWithHuman
; Function compile flags: /Odtp
;	COMDAT ?lDoBeginDiploWithHuman@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lDoBeginDiploWithHuman@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lDoBeginDiploWithHuman, COMDAT

; 7694 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 7695 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7696 : 
; 7697 : 	pkPlayer->GetDiplomacyAI()->DoBeginDiploWithHuman();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?DoBeginDiploWithHuman@CvDiplomacyAI@@QAEXXZ ; CvDiplomacyAI::DoBeginDiploWithHuman

; 7698 : 	return 1;

	mov	eax, 1

; 7699 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lDoBeginDiploWithHuman@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lDoBeginDiploWithHuman
_TEXT	ENDS
EXTRN	?DoTradeScreenOpened@CvDealAI@@QAEXXZ:PROC	; CvDealAI::DoTradeScreenOpened
EXTRN	?GetDealAI@CvPlayer@@QBEPAVCvDealAI@@XZ:PROC	; CvPlayer::GetDealAI
; Function compile flags: /Odtp
;	COMDAT ?lDoTradeScreenOpened@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lDoTradeScreenOpened@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lDoTradeScreenOpened, COMDAT

; 7703 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 7704 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7705 : 
; 7706 : 	pkPlayer->GetDealAI()->DoTradeScreenOpened();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDealAI@CvPlayer@@QBEPAVCvDealAI@@XZ	; CvPlayer::GetDealAI
	mov	ecx, eax
	call	?DoTradeScreenOpened@CvDealAI@@QAEXXZ	; CvDealAI::DoTradeScreenOpened

; 7707 : 	return 1;

	mov	eax, 1

; 7708 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lDoTradeScreenOpened@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lDoTradeScreenOpened
_TEXT	ENDS
EXTRN	?DoTradeScreenClosed@CvDealAI@@QAEX_N@Z:PROC	; CvDealAI::DoTradeScreenClosed
; Function compile flags: /Odtp
;	COMDAT ?lDoTradeScreenClosed@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_bAIWasMakingOffer$ = -1				; size = 1
_L$ = 8							; size = 4
?lDoTradeScreenClosed@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lDoTradeScreenClosed, COMDAT

; 7712 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 7713 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7714 : 	bool bAIWasMakingOffer = lua_toboolean(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bAIWasMakingOffer$[ebp], dl

; 7715 : 
; 7716 : 	pkPlayer->GetDealAI()->DoTradeScreenClosed(bAIWasMakingOffer);

	movzx	eax, BYTE PTR _bAIWasMakingOffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDealAI@CvPlayer@@QBEPAVCvDealAI@@XZ	; CvPlayer::GetDealAI
	mov	ecx, eax
	call	?DoTradeScreenClosed@CvDealAI@@QAEX_N@Z	; CvDealAI::DoTradeScreenClosed

; 7717 : 	return 1;

	mov	eax, 1

; 7718 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lDoTradeScreenClosed@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lDoTradeScreenClosed
_TEXT	ENDS
EXTRN	?GetApproachTowardsUsGuess@CvDiplomacyAI@@QAE?AW4MajorCivApproachTypes@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetApproachTowardsUsGuess
; Function compile flags: /Odtp
;	COMDAT ?lGetApproachTowardsUsGuess@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetApproachTowardsUsGuess@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetApproachTowardsUsGuess, COMDAT

; 7722 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 7723 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7724 : 	PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 7725 : 
; 7726 : 	lua_pushinteger(L, pkPlayer->GetDiplomacyAI()->GetApproachTowardsUsGuess(ePlayer));

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetApproachTowardsUsGuess@CvDiplomacyAI@@QAE?AW4MajorCivApproachTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetApproachTowardsUsGuess
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 7727 : 	return 1;

	mov	eax, 1

; 7728 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetApproachTowardsUsGuess@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetApproachTowardsUsGuess
_TEXT	ENDS
EXTRN	?GetMajorCivApproach@CvDiplomacyAI@@QBE?AW4MajorCivApproachTypes@@W4PlayerTypes@@_N@Z:PROC ; CvDiplomacyAI::GetMajorCivApproach
; Function compile flags: /Odtp
;	COMDAT ?lGetMajorCivApproach@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMajorCivApproach@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMajorCivApproach, COMDAT

; 7731 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 7732 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7733 : 	PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 7734 : 
; 7735 : 	lua_pushinteger(L, pkPlayer->GetDiplomacyAI()->GetMajorCivApproach(ePlayer, /*bHideTrueFeelings*/ false));

	push	0
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetMajorCivApproach@CvDiplomacyAI@@QBE?AW4MajorCivApproachTypes@@W4PlayerTypes@@_N@Z ; CvDiplomacyAI::GetMajorCivApproach
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 7736 : 	return 1;

	mov	eax, 1

; 7737 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMajorCivApproach@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMajorCivApproach
_TEXT	ENDS
EXTRN	?IsWantsPeaceWithPlayer@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsWantsPeaceWithPlayer
; Function compile flags: /Odtp
;	COMDAT ?lIsWillAcceptPeaceWithPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_bWantsPeace$ = -1					; size = 1
_L$ = 8							; size = 4
?lIsWillAcceptPeaceWithPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsWillAcceptPeaceWithPlayer, COMDAT

; 7741 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 7742 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7743 : 	PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 7744 : 
; 7745 : 	const bool bWantsPeace = pkPlayer->GetDiplomacyAI()->IsWantsPeaceWithPlayer(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsWantsPeaceWithPlayer@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsWantsPeaceWithPlayer
	mov	BYTE PTR _bWantsPeace$[ebp], al

; 7746 : 
; 7747 : 	lua_pushboolean(L, bWantsPeace);

	movzx	eax, BYTE PTR _bWantsPeace$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 7748 : 	return 1;

	mov	eax, 1

; 7749 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsWillAcceptPeaceWithPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsWillAcceptPeaceWithPlayer
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lIsProtectingMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T249912 = -20						; size = 4
$T249908 = -16						; size = 4
_pkPlayer$ = -12					; size = 4
_bProtecting$ = -5					; size = 1
_eMinor$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsProtectingMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsProtectingMinor, COMDAT

; 7753 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 7754 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7755 : 	PlayerTypes eMinor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMinor$[ebp], eax

; 7756 : 
; 7757 : 	const bool bProtecting = GET_PLAYER(eMinor).GetMinorCivAI()->IsProtectedByMajor(pkPlayer->GetID());

	mov	edx, DWORD PTR _pkPlayer$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T249908[ebp], eax
	mov	ecx, DWORD PTR _eMinor$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T249912[ebp], ecx
	mov	edx, DWORD PTR $T249908[ebp]
	push	edx
	mov	ecx, DWORD PTR $T249912[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsProtectedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsProtectedByMajor
	mov	BYTE PTR _bProtecting$[ebp], al

; 7758 : 
; 7759 : 	lua_pushboolean(L, bProtecting);

	movzx	eax, BYTE PTR _bProtecting$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 7760 : 	return 1;

	mov	eax, 1

; 7761 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsProtectingMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsProtectingMinor
_TEXT	ENDS
EXTRN	?IsDontSettleMessageTooSoon@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsDontSettleMessageTooSoon
; Function compile flags: /Odtp
;	COMDAT ?lIsDontSettleMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bTooSoon$ = -5						; size = 1
_eWithPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsDontSettleMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsDontSettleMessageTooSoon, COMDAT

; 7765 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 7766 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7767 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eWithPlayer$[ebp], eax

; 7768 : 
; 7769 : 	const bool bTooSoon = pkPlayer->GetDiplomacyAI()->IsDontSettleMessageTooSoon(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsDontSettleMessageTooSoon@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsDontSettleMessageTooSoon
	mov	BYTE PTR _bTooSoon$[ebp], al

; 7770 : 
; 7771 : 	lua_pushboolean(L, bTooSoon);

	movzx	eax, BYTE PTR _bTooSoon$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 7772 : 	return 1;

	mov	eax, 1

; 7773 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsDontSettleMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsDontSettleMessageTooSoon
_TEXT	ENDS
EXTRN	?IsStopSpyingMessageTooSoon@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsStopSpyingMessageTooSoon
; Function compile flags: /Odtp
;	COMDAT ?lIsStopSpyingMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bTooSoon$ = -5						; size = 1
_eWithPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsStopSpyingMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsStopSpyingMessageTooSoon, COMDAT

; 7777 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 7778 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7779 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eWithPlayer$[ebp], eax

; 7780 : 
; 7781 : 	const bool bTooSoon = pkPlayer->GetDiplomacyAI()->IsStopSpyingMessageTooSoon(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsStopSpyingMessageTooSoon@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsStopSpyingMessageTooSoon
	mov	BYTE PTR _bTooSoon$[ebp], al

; 7782 : 
; 7783 : 	lua_pushboolean(L, bTooSoon);

	movzx	eax, BYTE PTR _bTooSoon$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 7784 : 	return 1;

	mov	eax, 1

; 7785 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsStopSpyingMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsStopSpyingMessageTooSoon
_TEXT	ENDS
EXTRN	?IsPlayerAskedNotToConvert@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerAskedNotToConvert
; Function compile flags: /Odtp
;	COMDAT ?lIsAskedToStopConverting@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bAsked$ = -5						; size = 1
_eWithPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsAskedToStopConverting@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsAskedToStopConverting, COMDAT

; 7790 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 7791 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7792 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eWithPlayer$[ebp], eax

; 7793 : 
; 7794 : 	const bool bAsked = pkPlayer->GetDiplomacyAI()->IsPlayerAskedNotToConvert(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerAskedNotToConvert@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerAskedNotToConvert
	mov	BYTE PTR _bAsked$[ebp], al

; 7795 : 
; 7796 : 	lua_pushboolean(L, bAsked);

	movzx	eax, BYTE PTR _bAsked$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 7797 : 	return 1;

	mov	eax, 1

; 7798 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsAskedToStopConverting@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsAskedToStopConverting
_TEXT	ENDS
EXTRN	?IsPlayerAskedNotToDig@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerAskedNotToDig
; Function compile flags: /Odtp
;	COMDAT ?lIsAskedToStopDigging@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bAsked$ = -5						; size = 1
_eWithPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsAskedToStopDigging@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsAskedToStopDigging, COMDAT

; 7803 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 7804 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7805 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eWithPlayer$[ebp], eax

; 7806 : 
; 7807 : 	const bool bAsked = pkPlayer->GetDiplomacyAI()->IsPlayerAskedNotToDig(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerAskedNotToDig@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerAskedNotToDig
	mov	BYTE PTR _bAsked$[ebp], al

; 7808 : 
; 7809 : 	lua_pushboolean(L, bAsked);

	movzx	eax, BYTE PTR _bAsked$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 7810 : 	return 1;

	mov	eax, 1

; 7811 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsAskedToStopDigging@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsAskedToStopDigging
_TEXT	ENDS
EXTRN	?IsDoFMessageTooSoon@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsDoFMessageTooSoon
; Function compile flags: /Odtp
;	COMDAT ?lIsDoFMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bTooSoon$ = -5						; size = 1
_eWithPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsDoFMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsDoFMessageTooSoon, COMDAT

; 7816 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 7817 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7818 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eWithPlayer$[ebp], eax

; 7819 : 
; 7820 : 	const bool bTooSoon = pkPlayer->GetDiplomacyAI()->IsDoFMessageTooSoon(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsDoFMessageTooSoon@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsDoFMessageTooSoon
	mov	BYTE PTR _bTooSoon$[ebp], al

; 7821 : 
; 7822 : 	lua_pushboolean(L, bTooSoon);

	movzx	eax, BYTE PTR _bTooSoon$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 7823 : 	return 1;

	mov	eax, 1

; 7824 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsDoFMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsDoFMessageTooSoon
_TEXT	ENDS
EXTRN	?IsDoFAccepted@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsDoFAccepted
; Function compile flags: /Odtp
;	COMDAT ?lIsDoF@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bTooSoon$ = -5						; size = 1
_eWithPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsDoF@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lIsDoF, COMDAT

; 7828 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 7829 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7830 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eWithPlayer$[ebp], eax

; 7831 : 
; 7832 : 	const bool bTooSoon = pkPlayer->GetDiplomacyAI()->IsDoFAccepted(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsDoFAccepted@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsDoFAccepted
	mov	BYTE PTR _bTooSoon$[ebp], al

; 7833 : 
; 7834 : 	lua_pushboolean(L, bTooSoon);

	movzx	eax, BYTE PTR _bTooSoon$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 7835 : 	return 1;

	mov	eax, 1

; 7836 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsDoF@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lIsDoF
_TEXT	ENDS
EXTRN	?GetDoFCounter@CvDiplomacyAI@@QBEFW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDoFCounter
; Function compile flags: /Odtp
;	COMDAT ?lGetDoFCounter@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_iTurnsLeft$ = -8					; size = 4
_eWithPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetDoFCounter@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetDoFCounter, COMDAT

; 7839 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 7840 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7841 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eWithPlayer$[ebp], eax

; 7842 : 
; 7843 : 	const int iTurnsLeft = pkPlayer->GetDiplomacyAI()->GetDoFCounter(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetDoFCounter@CvDiplomacyAI@@QBEFW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDoFCounter
	cwde
	mov	DWORD PTR _iTurnsLeft$[ebp], eax

; 7844 : 
; 7845 : 	lua_pushinteger(L, iTurnsLeft);

	mov	ecx, DWORD PTR _iTurnsLeft$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 7846 : 	return 1;

	mov	eax, 1

; 7847 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetDoFCounter@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetDoFCounter
_TEXT	ENDS
EXTRN	?IsPlayerDoFwithAnyFriend@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerDoFwithAnyFriend
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerDoFwithAnyFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bTooSoon$ = -5						; size = 1
_eWithPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerDoFwithAnyFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerDoFwithAnyFriend, COMDAT

; 7850 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 7851 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7852 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eWithPlayer$[ebp], eax

; 7853 : 
; 7854 : 	const bool bTooSoon = pkPlayer->GetDiplomacyAI()->IsPlayerDoFwithAnyFriend(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerDoFwithAnyFriend@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerDoFwithAnyFriend
	mov	BYTE PTR _bTooSoon$[ebp], al

; 7855 : 
; 7856 : 	lua_pushboolean(L, bTooSoon);

	movzx	eax, BYTE PTR _bTooSoon$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 7857 : 	return 1;

	mov	eax, 1

; 7858 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerDoFwithAnyFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerDoFwithAnyFriend
_TEXT	ENDS
EXTRN	?IsPlayerDoFwithAnyEnemy@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerDoFwithAnyEnemy
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerDoFwithAnyEnemy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bTooSoon$ = -5						; size = 1
_eWithPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerDoFwithAnyEnemy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerDoFwithAnyEnemy, COMDAT

; 7861 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 7862 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7863 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eWithPlayer$[ebp], eax

; 7864 : 
; 7865 : 	const bool bTooSoon = pkPlayer->GetDiplomacyAI()->IsPlayerDoFwithAnyEnemy(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerDoFwithAnyEnemy@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerDoFwithAnyEnemy
	mov	BYTE PTR _bTooSoon$[ebp], al

; 7866 : 
; 7867 : 	lua_pushboolean(L, bTooSoon);

	movzx	eax, BYTE PTR _bTooSoon$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 7868 : 	return 1;

	mov	eax, 1

; 7869 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerDoFwithAnyEnemy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerDoFwithAnyEnemy
_TEXT	ENDS
EXTRN	?IsPlayerDenouncedFriend@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerDenouncedFriend
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerDenouncedFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bTooSoon$ = -5						; size = 1
_eWithPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerDenouncedFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerDenouncedFriend, COMDAT

; 7872 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 7873 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7874 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eWithPlayer$[ebp], eax

; 7875 : 
; 7876 : 	const bool bTooSoon = pkPlayer->GetDiplomacyAI()->IsPlayerDenouncedFriend(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerDenouncedFriend@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerDenouncedFriend
	mov	BYTE PTR _bTooSoon$[ebp], al

; 7877 : 
; 7878 : 	lua_pushboolean(L, bTooSoon);

	movzx	eax, BYTE PTR _bTooSoon$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 7879 : 	return 1;

	mov	eax, 1

; 7880 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerDenouncedFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerDenouncedFriend
_TEXT	ENDS
EXTRN	?IsPlayerDenouncedEnemy@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerDenouncedEnemy
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerDenouncedEnemy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bTooSoon$ = -5						; size = 1
_eWithPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerDenouncedEnemy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerDenouncedEnemy, COMDAT

; 7883 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 7884 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7885 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eWithPlayer$[ebp], eax

; 7886 : 
; 7887 : 	const bool bTooSoon = pkPlayer->GetDiplomacyAI()->IsPlayerDenouncedEnemy(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerDenouncedEnemy@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerDenouncedEnemy
	mov	BYTE PTR _bTooSoon$[ebp], al

; 7888 : 
; 7889 : 	lua_pushboolean(L, bTooSoon);

	movzx	eax, BYTE PTR _bTooSoon$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 7890 : 	return 1;

	mov	eax, 1

; 7891 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerDenouncedEnemy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerDenouncedEnemy
_TEXT	ENDS
EXTRN	?IsUntrustworthyFriend@CvDiplomacyAI@@QAE_NXZ:PROC ; CvDiplomacyAI::IsUntrustworthyFriend
; Function compile flags: /Odtp
;	COMDAT ?lIsUntrustworthyFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -5						; size = 1
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsUntrustworthyFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsUntrustworthyFriend, COMDAT

; 7894 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 7895 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7896 : 
; 7897 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsUntrustworthyFriend();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsUntrustworthyFriend@CvDiplomacyAI@@QAE_NXZ ; CvDiplomacyAI::IsUntrustworthyFriend
	mov	BYTE PTR _bValue$[ebp], al

; 7898 : 
; 7899 : 	lua_pushboolean(L, bValue);

	movzx	ecx, BYTE PTR _bValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 7900 : 	return 1;

	mov	eax, 1

; 7901 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsUntrustworthyFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsUntrustworthyFriend
_TEXT	ENDS
EXTRN	?GetNumFriendsDenouncedBy@CvDiplomacyAI@@QAEHXZ:PROC ; CvDiplomacyAI::GetNumFriendsDenouncedBy
; Function compile flags: /Odtp
;	COMDAT ?lGetNumFriendsDenouncedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumFriendsDenouncedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumFriendsDenouncedBy, COMDAT

; 7904 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 7905 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7906 : 
; 7907 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetNumFriendsDenouncedBy();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetNumFriendsDenouncedBy@CvDiplomacyAI@@QAEHXZ ; CvDiplomacyAI::GetNumFriendsDenouncedBy
	mov	DWORD PTR _iValue$[ebp], eax

; 7908 : 
; 7909 : 	lua_pushinteger(L, iValue);

	mov	ecx, DWORD PTR _iValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 7910 : 	return 1;

	mov	eax, 1

; 7911 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumFriendsDenouncedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumFriendsDenouncedBy
_TEXT	ENDS
EXTRN	?IsFriendDenouncedUs@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsFriendDenouncedUs
; Function compile flags: /Odtp
;	COMDAT ?lIsFriendDenouncedUs@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_ePlayer$ = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsFriendDenouncedUs@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsFriendDenouncedUs, COMDAT

; 7914 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 7915 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7916 : 	PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 7917 : 
; 7918 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsFriendDenouncedUs(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsFriendDenouncedUs@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsFriendDenouncedUs
	mov	BYTE PTR _bValue$[ebp], al

; 7919 : 
; 7920 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 7921 : 	return 1;

	mov	eax, 1

; 7922 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsFriendDenouncedUs@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsFriendDenouncedUs
_TEXT	ENDS
EXTRN	?GetWeDenouncedFriendCount@CvDiplomacyAI@@QAEHXZ:PROC ; CvDiplomacyAI::GetWeDenouncedFriendCount
; Function compile flags: /Odtp
;	COMDAT ?lGetWeDenouncedFriendCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetWeDenouncedFriendCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetWeDenouncedFriendCount, COMDAT

; 7925 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 7926 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7927 : 
; 7928 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetWeDenouncedFriendCount();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetWeDenouncedFriendCount@CvDiplomacyAI@@QAEHXZ ; CvDiplomacyAI::GetWeDenouncedFriendCount
	mov	DWORD PTR _iValue$[ebp], eax

; 7929 : 
; 7930 : 	lua_pushinteger(L, iValue);

	mov	ecx, DWORD PTR _iValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 7931 : 	return 1;

	mov	eax, 1

; 7932 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetWeDenouncedFriendCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetWeDenouncedFriendCount
_TEXT	ENDS
EXTRN	?IsFriendDeclaredWarOnUs@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsFriendDeclaredWarOnUs
; Function compile flags: /Odtp
;	COMDAT ?lIsFriendDeclaredWarOnUs@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_ePlayer$ = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsFriendDeclaredWarOnUs@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsFriendDeclaredWarOnUs, COMDAT

; 7935 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 7936 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7937 : 	PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 7938 : 
; 7939 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsFriendDeclaredWarOnUs(ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsFriendDeclaredWarOnUs@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsFriendDeclaredWarOnUs
	mov	BYTE PTR _bValue$[ebp], al

; 7940 : 
; 7941 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 7942 : 	return 1;

	mov	eax, 1

; 7943 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsFriendDeclaredWarOnUs@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsFriendDeclaredWarOnUs
_TEXT	ENDS
EXTRN	?GetWeDeclaredWarOnFriendCount@CvDiplomacyAI@@QAEHXZ:PROC ; CvDiplomacyAI::GetWeDeclaredWarOnFriendCount
; Function compile flags: /Odtp
;	COMDAT ?lGetWeDeclaredWarOnFriendCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetWeDeclaredWarOnFriendCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetWeDeclaredWarOnFriendCount, COMDAT

; 7946 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 7947 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7948 : 
; 7949 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetWeDeclaredWarOnFriendCount();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetWeDeclaredWarOnFriendCount@CvDiplomacyAI@@QAEHXZ ; CvDiplomacyAI::GetWeDeclaredWarOnFriendCount
	mov	DWORD PTR _iValue$[ebp], eax

; 7950 : 
; 7951 : 	lua_pushinteger(L, iValue);

	mov	ecx, DWORD PTR _iValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 7952 : 	return 1;

	mov	eax, 1

; 7953 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetWeDeclaredWarOnFriendCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetWeDeclaredWarOnFriendCount
_TEXT	ENDS
EXTRN	?GetCoopWarAcceptedState@CvDiplomacyAI@@QBE?AW4CoopWarStates@@W4PlayerTypes@@0@Z:PROC ; CvDiplomacyAI::GetCoopWarAcceptedState
; Function compile flags: /Odtp
;	COMDAT ?lGetCoopWarAcceptedState@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -16					; size = 4
_iState$ = -12						; size = 4
_eAgainstPlayer$ = -8					; size = 4
_eWithPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetCoopWarAcceptedState@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCoopWarAcceptedState, COMDAT

; 7970 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 7971 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7972 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eWithPlayer$[ebp], eax

; 7973 : 	PlayerTypes eAgainstPlayer = (PlayerTypes) lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eAgainstPlayer$[ebp], eax

; 7974 : 
; 7975 : 	const int iState = pkPlayer->GetDiplomacyAI()->GetCoopWarAcceptedState(eWithPlayer, eAgainstPlayer);

	mov	eax, DWORD PTR _eAgainstPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetCoopWarAcceptedState@CvDiplomacyAI@@QBE?AW4CoopWarStates@@W4PlayerTypes@@0@Z ; CvDiplomacyAI::GetCoopWarAcceptedState
	mov	DWORD PTR _iState$[ebp], eax

; 7976 : 
; 7977 : 	lua_pushinteger(L, iState);

	mov	edx, DWORD PTR _iState$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 7978 : 	return 1;

	mov	eax, 1

; 7979 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCoopWarAcceptedState@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCoopWarAcceptedState
_TEXT	ENDS
EXTRN	?GetNumWarsFought@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetNumWarsFought
; Function compile flags: /Odtp
;	COMDAT ?lGetNumWarsFought@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iNum$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_eWithPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetNumWarsFought@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumWarsFought, COMDAT

; 7982 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 7983 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7984 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eWithPlayer$[ebp], eax

; 7985 : 
; 7986 : 	const int iNum = pkPlayer->GetDiplomacyAI()->GetNumWarsFought(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetNumWarsFought@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNumWarsFought
	mov	DWORD PTR _iNum$[ebp], eax

; 7987 : 
; 7988 : 	lua_pushinteger(L, iNum);

	mov	eax, DWORD PTR _iNum$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 7989 : 	return 1;

	mov	eax, 1

; 7990 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumWarsFought@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumWarsFought
_TEXT	ENDS
EXTRN	?GetLandDisputeLevel@CvDiplomacyAI@@QBE?AW4DisputeLevelTypes@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetLandDisputeLevel
; Function compile flags: /Odtp
;	COMDAT ?lGetLandDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eOtherPlayer$ = -8					; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetLandDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetLandDisputeLevel, COMDAT

; 7994 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 7995 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 7996 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 7997 : 
; 7998 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetLandDisputeLevel(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetLandDisputeLevel@CvDiplomacyAI@@QBE?AW4DisputeLevelTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetLandDisputeLevel
	mov	DWORD PTR _iValue$[ebp], eax

; 7999 : 
; 8000 : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 8001 : 	return 1;

	mov	eax, 1

; 8002 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetLandDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetLandDisputeLevel
_TEXT	ENDS
EXTRN	?GetVictoryDisputeLevel@CvDiplomacyAI@@QBE?AW4DisputeLevelTypes@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetVictoryDisputeLevel
; Function compile flags: /Odtp
;	COMDAT ?lGetVictoryDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eOtherPlayer$ = -8					; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetVictoryDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetVictoryDisputeLevel, COMDAT

; 8005 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8006 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8007 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8008 : 
; 8009 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetVictoryDisputeLevel(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetVictoryDisputeLevel@CvDiplomacyAI@@QBE?AW4DisputeLevelTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetVictoryDisputeLevel
	mov	DWORD PTR _iValue$[ebp], eax

; 8010 : 
; 8011 : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 8012 : 	return 1;

	mov	eax, 1

; 8013 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetVictoryDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetVictoryDisputeLevel
_TEXT	ENDS
EXTRN	?GetWonderDisputeLevel@CvDiplomacyAI@@QBE?AW4DisputeLevelTypes@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetWonderDisputeLevel
; Function compile flags: /Odtp
;	COMDAT ?lGetWonderDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eOtherPlayer$ = -8					; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetWonderDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetWonderDisputeLevel, COMDAT

; 8016 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8017 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8018 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8019 : 
; 8020 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetWonderDisputeLevel(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetWonderDisputeLevel@CvDiplomacyAI@@QBE?AW4DisputeLevelTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetWonderDisputeLevel
	mov	DWORD PTR _iValue$[ebp], eax

; 8021 : 
; 8022 : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 8023 : 	return 1;

	mov	eax, 1

; 8024 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetWonderDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetWonderDisputeLevel
_TEXT	ENDS
EXTRN	?GetMinorCivDisputeLevel@CvDiplomacyAI@@QBE?AW4DisputeLevelTypes@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetMinorCivDisputeLevel
; Function compile flags: /Odtp
;	COMDAT ?lGetMinorCivDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eOtherPlayer$ = -8					; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinorCivDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivDisputeLevel, COMDAT

; 8027 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8028 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8029 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8030 : 
; 8031 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetMinorCivDisputeLevel(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetMinorCivDisputeLevel@CvDiplomacyAI@@QBE?AW4DisputeLevelTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetMinorCivDisputeLevel
	mov	DWORD PTR _iValue$[ebp], eax

; 8032 : 
; 8033 : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 8034 : 	return 1;

	mov	eax, 1

; 8035 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinorCivDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivDisputeLevel
_TEXT	ENDS
EXTRN	?GetWarmongerThreat@CvDiplomacyAI@@QBE?AW4ThreatTypes@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetWarmongerThreat
; Function compile flags: /Odtp
;	COMDAT ?lGetWarmongerThreat@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eOtherPlayer$ = -8					; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetWarmongerThreat@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetWarmongerThreat, COMDAT

; 8038 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8039 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8040 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8041 : 
; 8042 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetWarmongerThreat(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetWarmongerThreat@CvDiplomacyAI@@QBE?AW4ThreatTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetWarmongerThreat
	mov	DWORD PTR _iValue$[ebp], eax

; 8043 : 
; 8044 : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 8045 : 	return 1;

	mov	eax, 1

; 8046 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetWarmongerThreat@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetWarmongerThreat
_TEXT	ENDS
EXTRN	?IsPlayerNoSettleRequestEverAsked@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerNoSettleRequestEverAsked
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerNoSettleRequestEverAsked@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerNoSettleRequestEverAsked@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerNoSettleRequestEverAsked, COMDAT

; 8049 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8050 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8051 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8052 : 
; 8053 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerNoSettleRequestEverAsked(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerNoSettleRequestEverAsked@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerNoSettleRequestEverAsked
	mov	BYTE PTR _bValue$[ebp], al

; 8054 : 
; 8055 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8056 : 	return 1;

	mov	eax, 1

; 8057 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerNoSettleRequestEverAsked@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerNoSettleRequestEverAsked
_TEXT	ENDS
EXTRN	?IsPlayerStopSpyingRequestEverAsked@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerStopSpyingRequestEverAsked
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerStopSpyingRequestEverAsked@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerStopSpyingRequestEverAsked@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerStopSpyingRequestEverAsked, COMDAT

; 8060 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8061 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8062 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8063 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerStopSpyingRequestEverAsked(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerStopSpyingRequestEverAsked@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerStopSpyingRequestEverAsked
	mov	BYTE PTR _bValue$[ebp], al

; 8064 : 
; 8065 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8066 : 	return 1;

	mov	eax, 1

; 8067 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerStopSpyingRequestEverAsked@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerStopSpyingRequestEverAsked
_TEXT	ENDS
EXTRN	?IsDemandEverMade@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsDemandEverMade
; Function compile flags: /Odtp
;	COMDAT ?lIsDemandEverMade@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsDemandEverMade@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsDemandEverMade, COMDAT

; 8070 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8071 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8072 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8073 : 
; 8074 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsDemandEverMade(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsDemandEverMade@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsDemandEverMade
	mov	BYTE PTR _bValue$[ebp], al

; 8075 : 
; 8076 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8077 : 	return 1;

	mov	eax, 1

; 8078 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsDemandEverMade@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsDemandEverMade
_TEXT	ENDS
EXTRN	?GetNumCiviliansReturnedToMe@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetNumCiviliansReturnedToMe
; Function compile flags: /Odtp
;	COMDAT ?lGetNumCiviliansReturnedToMe@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eOtherPlayer$ = -8					; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumCiviliansReturnedToMe@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumCiviliansReturnedToMe, COMDAT

; 8081 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8082 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8083 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8084 : 
; 8085 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetNumCiviliansReturnedToMe(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetNumCiviliansReturnedToMe@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNumCiviliansReturnedToMe
	mov	DWORD PTR _iValue$[ebp], eax

; 8086 : 
; 8087 : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 8088 : 	return 1;

	mov	eax, 1

; 8089 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumCiviliansReturnedToMe@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumCiviliansReturnedToMe
_TEXT	ENDS
EXTRN	?GetNumLandmarksBuiltForMe@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetNumLandmarksBuiltForMe
; Function compile flags: /Odtp
;	COMDAT ?lGetNumLandmarksBuiltForMe@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eOtherPlayer$ = -8					; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumLandmarksBuiltForMe@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumLandmarksBuiltForMe, COMDAT

; 8092 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8093 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8094 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8095 : 
; 8096 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetNumLandmarksBuiltForMe(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetNumLandmarksBuiltForMe@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNumLandmarksBuiltForMe
	mov	DWORD PTR _iValue$[ebp], eax

; 8097 : 
; 8098 : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 8099 : 	return 1;

	mov	eax, 1

; 8100 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumLandmarksBuiltForMe@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumLandmarksBuiltForMe
_TEXT	ENDS
EXTRN	?GetNumTimesCultureBombed@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetNumTimesCultureBombed
; Function compile flags: /Odtp
;	COMDAT ?lGetNumTimesCultureBombed@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eOtherPlayer$ = -8					; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumTimesCultureBombed@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumTimesCultureBombed, COMDAT

; 8103 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8104 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8105 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8106 : 
; 8107 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetNumTimesCultureBombed(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetNumTimesCultureBombed@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNumTimesCultureBombed
	mov	DWORD PTR _iValue$[ebp], eax

; 8108 : 
; 8109 : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 8110 : 	return 1;

	mov	eax, 1

; 8111 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumTimesCultureBombed@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumTimesCultureBombed
_TEXT	ENDS
EXTRN	?GetNegativeReligiousConversionPoints@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetNegativeReligiousConversionPoints
; Function compile flags: /Odtp
;	COMDAT ?lGetNegativeReligiousConversionPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eOtherPlayer$ = -8					; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNegativeReligiousConversionPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNegativeReligiousConversionPoints, COMDAT

; 8114 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8115 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8116 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8117 : 
; 8118 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetNegativeReligiousConversionPoints(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetNegativeReligiousConversionPoints@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNegativeReligiousConversionPoints
	mov	DWORD PTR _iValue$[ebp], eax

; 8119 : 
; 8120 : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 8121 : 	return 1;

	mov	eax, 1

; 8122 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNegativeReligiousConversionPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNegativeReligiousConversionPoints
_TEXT	ENDS
EXTRN	?GetNegativeArchaeologyPoints@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetNegativeArchaeologyPoints
; Function compile flags: /Odtp
;	COMDAT ?lGetNegativeArchaeologyPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eOtherPlayer$ = -8					; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNegativeArchaeologyPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNegativeArchaeologyPoints, COMDAT

; 8125 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8126 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8127 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8128 : 
; 8129 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetNegativeArchaeologyPoints(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetNegativeArchaeologyPoints@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNegativeArchaeologyPoints
	mov	DWORD PTR _iValue$[ebp], eax

; 8130 : 
; 8131 : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 8132 : 	return 1;

	mov	eax, 1

; 8133 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNegativeArchaeologyPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNegativeArchaeologyPoints
_TEXT	ENDS
EXTRN	?HasOthersReligionInMostCities@CvPlayerReligions@@QBE_NW4PlayerTypes@@@Z:PROC ; CvPlayerReligions::HasOthersReligionInMostCities
; Function compile flags: /Odtp
;	COMDAT ?lHasOthersReligionInMostCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lHasOthersReligionInMostCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lHasOthersReligionInMostCities, COMDAT

; 8136 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8137 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8138 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8139 : 
; 8140 : 	const bool bValue = pkPlayer->GetReligions()->HasOthersReligionInMostCities(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?HasOthersReligionInMostCities@CvPlayerReligions@@QBE_NW4PlayerTypes@@@Z ; CvPlayerReligions::HasOthersReligionInMostCities
	mov	BYTE PTR _bValue$[ebp], al

; 8141 : 
; 8142 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8143 : 	return 1;

	mov	eax, 1

; 8144 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lHasOthersReligionInMostCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lHasOthersReligionInMostCities
_TEXT	ENDS
EXTRN	?IsPlayerBrokenMilitaryPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerBrokenMilitaryPromise
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerBrokenMilitaryPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerBrokenMilitaryPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerBrokenMilitaryPromise, COMDAT

; 8147 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8148 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8149 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8150 : 
; 8151 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerBrokenMilitaryPromise(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerBrokenMilitaryPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerBrokenMilitaryPromise
	mov	BYTE PTR _bValue$[ebp], al

; 8152 : 
; 8153 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8154 : 	return 1;

	mov	eax, 1

; 8155 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerBrokenMilitaryPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerBrokenMilitaryPromise
_TEXT	ENDS
EXTRN	?IsPlayerIgnoredMilitaryPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerIgnoredMilitaryPromise
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerIgnoredMilitaryPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerIgnoredMilitaryPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerIgnoredMilitaryPromise, COMDAT

; 8158 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8159 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8160 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8161 : 
; 8162 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerIgnoredMilitaryPromise(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerIgnoredMilitaryPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerIgnoredMilitaryPromise
	mov	BYTE PTR _bValue$[ebp], al

; 8163 : 
; 8164 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8165 : 	return 1;

	mov	eax, 1

; 8166 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerIgnoredMilitaryPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerIgnoredMilitaryPromise
_TEXT	ENDS
EXTRN	?IsPlayerBrokenExpansionPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerBrokenExpansionPromise
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerBrokenExpansionPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerBrokenExpansionPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerBrokenExpansionPromise, COMDAT

; 8169 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8170 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8171 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8172 : 
; 8173 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerBrokenExpansionPromise(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerBrokenExpansionPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerBrokenExpansionPromise
	mov	BYTE PTR _bValue$[ebp], al

; 8174 : 
; 8175 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8176 : 	return 1;

	mov	eax, 1

; 8177 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerBrokenExpansionPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerBrokenExpansionPromise
_TEXT	ENDS
EXTRN	?IsPlayerIgnoredExpansionPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerIgnoredExpansionPromise
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerIgnoredExpansionPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerIgnoredExpansionPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerIgnoredExpansionPromise, COMDAT

; 8180 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8181 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8182 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8183 : 
; 8184 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerIgnoredExpansionPromise(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerIgnoredExpansionPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerIgnoredExpansionPromise
	mov	BYTE PTR _bValue$[ebp], al

; 8185 : 
; 8186 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8187 : 	return 1;

	mov	eax, 1

; 8188 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerIgnoredExpansionPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerIgnoredExpansionPromise
_TEXT	ENDS
EXTRN	?IsPlayerBrokenBorderPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerBrokenBorderPromise
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerBrokenBorderPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerBrokenBorderPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerBrokenBorderPromise, COMDAT

; 8191 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8192 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8193 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8194 : 
; 8195 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerBrokenBorderPromise(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerBrokenBorderPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerBrokenBorderPromise
	mov	BYTE PTR _bValue$[ebp], al

; 8196 : 
; 8197 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8198 : 	return 1;

	mov	eax, 1

; 8199 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerBrokenBorderPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerBrokenBorderPromise
_TEXT	ENDS
EXTRN	?IsPlayerIgnoredBorderPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerIgnoredBorderPromise
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerIgnoredBorderPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerIgnoredBorderPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerIgnoredBorderPromise, COMDAT

; 8202 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8203 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8204 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8205 : 
; 8206 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerIgnoredBorderPromise(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerIgnoredBorderPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerIgnoredBorderPromise
	mov	BYTE PTR _bValue$[ebp], al

; 8207 : 
; 8208 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8209 : 	return 1;

	mov	eax, 1

; 8210 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerIgnoredBorderPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerIgnoredBorderPromise
_TEXT	ENDS
EXTRN	?IsPlayerBrokenAttackCityStatePromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerBrokenAttackCityStatePromise
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerBrokenAttackCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerBrokenAttackCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerBrokenAttackCityStatePromise, COMDAT

; 8213 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8214 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8215 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8216 : 
; 8217 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerBrokenAttackCityStatePromise(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerBrokenAttackCityStatePromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerBrokenAttackCityStatePromise
	mov	BYTE PTR _bValue$[ebp], al

; 8218 : 
; 8219 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8220 : 	return 1;

	mov	eax, 1

; 8221 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerBrokenAttackCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerBrokenAttackCityStatePromise
_TEXT	ENDS
EXTRN	?IsPlayerIgnoredAttackCityStatePromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerIgnoredAttackCityStatePromise
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerIgnoredAttackCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerIgnoredAttackCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerIgnoredAttackCityStatePromise, COMDAT

; 8224 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8225 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8226 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8227 : 
; 8228 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerIgnoredAttackCityStatePromise(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerIgnoredAttackCityStatePromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerIgnoredAttackCityStatePromise
	mov	BYTE PTR _bValue$[ebp], al

; 8229 : 
; 8230 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8231 : 	return 1;

	mov	eax, 1

; 8232 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerIgnoredAttackCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerIgnoredAttackCityStatePromise
_TEXT	ENDS
EXTRN	?IsPlayerBrokenBullyCityStatePromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerBrokenBullyCityStatePromise
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerBrokenBullyCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerBrokenBullyCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerBrokenBullyCityStatePromise, COMDAT

; 8235 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8236 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8237 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8238 : 
; 8239 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerBrokenBullyCityStatePromise(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerBrokenBullyCityStatePromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerBrokenBullyCityStatePromise
	mov	BYTE PTR _bValue$[ebp], al

; 8240 : 
; 8241 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8242 : 	return 1;

	mov	eax, 1

; 8243 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerBrokenBullyCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerBrokenBullyCityStatePromise
_TEXT	ENDS
EXTRN	?IsPlayerIgnoredBullyCityStatePromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerIgnoredBullyCityStatePromise
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerIgnoredBullyCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerIgnoredBullyCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerIgnoredBullyCityStatePromise, COMDAT

; 8246 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8247 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8248 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8249 : 
; 8250 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerIgnoredBullyCityStatePromise(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerIgnoredBullyCityStatePromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerIgnoredBullyCityStatePromise
	mov	BYTE PTR _bValue$[ebp], al

; 8251 : 
; 8252 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8253 : 	return 1;

	mov	eax, 1

; 8254 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerIgnoredBullyCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerIgnoredBullyCityStatePromise
_TEXT	ENDS
EXTRN	?IsPlayerBrokenSpyPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerBrokenSpyPromise
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerBrokenSpyPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerBrokenSpyPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerBrokenSpyPromise, COMDAT

; 8257 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8258 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8259 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8260 : 
; 8261 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerBrokenSpyPromise(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerBrokenSpyPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerBrokenSpyPromise
	mov	BYTE PTR _bValue$[ebp], al

; 8262 : 
; 8263 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8264 : 	return 1;

	mov	eax, 1

; 8265 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerBrokenSpyPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerBrokenSpyPromise
_TEXT	ENDS
EXTRN	?IsPlayerIgnoredSpyPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerIgnoredSpyPromise
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerIgnoredSpyPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerIgnoredSpyPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerIgnoredSpyPromise, COMDAT

; 8268 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8269 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8270 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8271 : 
; 8272 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerIgnoredSpyPromise(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerIgnoredSpyPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerIgnoredSpyPromise
	mov	BYTE PTR _bValue$[ebp], al

; 8273 : 
; 8274 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8275 : 	return 1;

	mov	eax, 1

; 8276 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerIgnoredSpyPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerIgnoredSpyPromise
_TEXT	ENDS
EXTRN	?IsPlayerForgaveForSpying@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerForgaveForSpying
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerForgivenForSpying@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerForgivenForSpying@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerForgivenForSpying, COMDAT

; 8279 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8280 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8281 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8282 : 
; 8283 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerForgaveForSpying(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerForgaveForSpying@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerForgaveForSpying
	mov	BYTE PTR _bValue$[ebp], al

; 8284 : 
; 8285 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8286 : 	return 1;

	mov	eax, 1

; 8287 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerForgivenForSpying@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerForgivenForSpying
_TEXT	ENDS
EXTRN	?IsPlayerBrokenNoConvertPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerBrokenNoConvertPromise
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerBrokenNoConvertPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerBrokenNoConvertPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerBrokenNoConvertPromise, COMDAT

; 8290 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8291 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8292 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8293 : 
; 8294 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerBrokenNoConvertPromise(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerBrokenNoConvertPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerBrokenNoConvertPromise
	mov	BYTE PTR _bValue$[ebp], al

; 8295 : 
; 8296 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8297 : 	return 1;

	mov	eax, 1

; 8298 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerBrokenNoConvertPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerBrokenNoConvertPromise
_TEXT	ENDS
EXTRN	?IsPlayerIgnoredNoConvertPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerIgnoredNoConvertPromise
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerIgnoredNoConvertPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerIgnoredNoConvertPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerIgnoredNoConvertPromise, COMDAT

; 8301 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8302 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8303 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8304 : 
; 8305 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerIgnoredNoConvertPromise(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerIgnoredNoConvertPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerIgnoredNoConvertPromise
	mov	BYTE PTR _bValue$[ebp], al

; 8306 : 
; 8307 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8308 : 	return 1;

	mov	eax, 1

; 8309 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerIgnoredNoConvertPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerIgnoredNoConvertPromise
_TEXT	ENDS
EXTRN	?IsPlayerBrokenNoDiggingPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerBrokenNoDiggingPromise
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerBrokenNoDiggingPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerBrokenNoDiggingPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerBrokenNoDiggingPromise, COMDAT

; 8312 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8313 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8314 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8315 : 
; 8316 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerBrokenNoDiggingPromise(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerBrokenNoDiggingPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerBrokenNoDiggingPromise
	mov	BYTE PTR _bValue$[ebp], al

; 8317 : 
; 8318 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8319 : 	return 1;

	mov	eax, 1

; 8320 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerBrokenNoDiggingPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerBrokenNoDiggingPromise
_TEXT	ENDS
EXTRN	?IsPlayerIgnoredNoDiggingPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerIgnoredNoDiggingPromise
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerIgnoredNoDiggingPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerIgnoredNoDiggingPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerIgnoredNoDiggingPromise, COMDAT

; 8323 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8324 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8325 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8326 : 
; 8327 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerIgnoredNoDiggingPromise(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerIgnoredNoDiggingPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerIgnoredNoDiggingPromise
	mov	BYTE PTR _bValue$[ebp], al

; 8328 : 
; 8329 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8330 : 	return 1;

	mov	eax, 1

; 8331 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerIgnoredNoDiggingPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerIgnoredNoDiggingPromise
_TEXT	ENDS
EXTRN	?IsPlayerBrokenCoopWarPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerBrokenCoopWarPromise
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerBrokenCoopWarPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerBrokenCoopWarPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerBrokenCoopWarPromise, COMDAT

; 8334 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8335 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8336 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8337 : 
; 8338 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerBrokenCoopWarPromise(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerBrokenCoopWarPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerBrokenCoopWarPromise
	mov	BYTE PTR _bValue$[ebp], al

; 8339 : 
; 8340 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8341 : 	return 1;

	mov	eax, 1

; 8342 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerBrokenCoopWarPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerBrokenCoopWarPromise
_TEXT	ENDS
EXTRN	?GetOtherPlayerNumProtectedMinorsKilled@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetOtherPlayerNumProtectedMinorsKilled
; Function compile flags: /Odtp
;	COMDAT ?lGetOtherPlayerNumProtectedMinorsKilled@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eOtherPlayer$ = -8					; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetOtherPlayerNumProtectedMinorsKilled@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetOtherPlayerNumProtectedMinorsKilled, COMDAT

; 8345 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8346 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8347 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8348 : 
; 8349 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetOtherPlayerNumProtectedMinorsKilled(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetOtherPlayerNumProtectedMinorsKilled@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetOtherPlayerNumProtectedMinorsKilled
	mov	DWORD PTR _iValue$[ebp], eax

; 8350 : 
; 8351 : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 8352 : 	return 1;

	mov	eax, 1

; 8353 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetOtherPlayerNumProtectedMinorsKilled@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetOtherPlayerNumProtectedMinorsKilled
_TEXT	ENDS
EXTRN	?GetOtherPlayerNumProtectedMinorsAttacked@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetOtherPlayerNumProtectedMinorsAttacked
; Function compile flags: /Odtp
;	COMDAT ?lGetOtherPlayerNumProtectedMinorsAttacked@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eOtherPlayer$ = -8					; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetOtherPlayerNumProtectedMinorsAttacked@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetOtherPlayerNumProtectedMinorsAttacked, COMDAT

; 8356 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8357 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8358 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8359 : 
; 8360 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetOtherPlayerNumProtectedMinorsAttacked(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetOtherPlayerNumProtectedMinorsAttacked@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetOtherPlayerNumProtectedMinorsAttacked
	mov	DWORD PTR _iValue$[ebp], eax

; 8361 : 
; 8362 : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 8363 : 	return 1;

	mov	eax, 1

; 8364 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetOtherPlayerNumProtectedMinorsAttacked@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetOtherPlayerNumProtectedMinorsAttacked
_TEXT	ENDS
EXTRN	?GetTurnsSincePlayerBulliedProtectedMinor@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetTurnsSincePlayerBulliedProtectedMinor
; Function compile flags: /Odtp
;	COMDAT ?lGetTurnsSincePlayerBulliedProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eOtherPlayer$ = -8					; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetTurnsSincePlayerBulliedProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTurnsSincePlayerBulliedProtectedMinor, COMDAT

; 8369 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8370 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8371 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8372 : 
; 8373 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetTurnsSincePlayerBulliedProtectedMinor(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetTurnsSincePlayerBulliedProtectedMinor@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetTurnsSincePlayerBulliedProtectedMinor
	mov	DWORD PTR _iValue$[ebp], eax

; 8374 : 
; 8375 : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 8376 : 	return 1;

	mov	eax, 1

; 8377 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTurnsSincePlayerBulliedProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTurnsSincePlayerBulliedProtectedMinor
_TEXT	ENDS
EXTRN	?GetOtherPlayerProtectedMinorBullied@CvDiplomacyAI@@QAE?AW4PlayerTypes@@W42@@Z:PROC ; CvDiplomacyAI::GetOtherPlayerProtectedMinorBullied
; Function compile flags: /Odtp
;	COMDAT ?lIsHasPlayerBulliedProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsHasPlayerBulliedProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsHasPlayerBulliedProtectedMinor, COMDAT

; 8381 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8382 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8383 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8384 : 
; 8385 : 	const bool bValue = (pkPlayer->GetDiplomacyAI()->GetOtherPlayerProtectedMinorBullied(eOtherPlayer) != NO_PLAYER);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetOtherPlayerProtectedMinorBullied@CvDiplomacyAI@@QAE?AW4PlayerTypes@@W42@@Z ; CvDiplomacyAI::GetOtherPlayerProtectedMinorBullied
	cmp	eax, -1
	setne	al
	mov	BYTE PTR _bValue$[ebp], al

; 8386 : 
; 8387 : 	lua_pushboolean(L, bValue);

	movzx	ecx, BYTE PTR _bValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 8388 : 	return 1;

	mov	eax, 1

; 8389 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsHasPlayerBulliedProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsHasPlayerBulliedProtectedMinor
_TEXT	ENDS
EXTRN	?IsDenouncedPlayer@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsDenouncedPlayer
; Function compile flags: /Odtp
;	COMDAT ?lIsDenouncedPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsDenouncedPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsDenouncedPlayer, COMDAT

; 8392 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8393 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8394 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8395 : 
; 8396 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsDenouncedPlayer(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsDenouncedPlayer@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsDenouncedPlayer
	mov	BYTE PTR _bValue$[ebp], al

; 8397 : 
; 8398 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8399 : 	return 1;

	mov	eax, 1

; 8400 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsDenouncedPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsDenouncedPlayer
_TEXT	ENDS
EXTRN	?GetDenouncedPlayerCounter@CvDiplomacyAI@@QBEFW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDenouncedPlayerCounter
; Function compile flags: /Odtp
;	COMDAT ?lGetDenouncedPlayerCounter@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eOtherPlayer$ = -8					; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetDenouncedPlayerCounter@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetDenouncedPlayerCounter, COMDAT

; 8403 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8404 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8405 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8406 : 
; 8407 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetDenouncedPlayerCounter(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetDenouncedPlayerCounter@CvDiplomacyAI@@QBEFW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDenouncedPlayerCounter
	cwde
	mov	DWORD PTR _iValue$[ebp], eax

; 8408 : 
; 8409 : 	lua_pushinteger(L, iValue);

	mov	ecx, DWORD PTR _iValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 8410 : 	return 1;

	mov	eax, 1

; 8411 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetDenouncedPlayerCounter@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetDenouncedPlayerCounter
_TEXT	ENDS
EXTRN	?IsDenouncingPlayer@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsDenouncingPlayer
; Function compile flags: /Odtp
;	COMDAT ?lIsDenouncingPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsDenouncingPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsDenouncingPlayer, COMDAT

; 8414 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8415 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8416 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8417 : 
; 8418 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsDenouncingPlayer(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsDenouncingPlayer@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsDenouncingPlayer
	mov	BYTE PTR _bValue$[ebp], al

; 8419 : 
; 8420 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8421 : 	return 1;

	mov	eax, 1

; 8422 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsDenouncingPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsDenouncingPlayer
_TEXT	ENDS
EXTRN	?IsPlayerRecklessExpander@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerRecklessExpander
; Function compile flags: /Odtp
;	COMDAT ?lIsPlayerRecklessExpander@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlayerRecklessExpander@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerRecklessExpander, COMDAT

; 8425 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8426 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8427 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8428 : 
; 8429 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerRecklessExpander(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerRecklessExpander@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerRecklessExpander
	mov	BYTE PTR _bValue$[ebp], al

; 8430 : 
; 8431 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8432 : 	return 1;

	mov	eax, 1

; 8433 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsPlayerRecklessExpander@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerRecklessExpander
_TEXT	ENDS
EXTRN	?GetRecentTradeValue@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetRecentTradeValue
; Function compile flags: /Odtp
;	COMDAT ?lGetRecentTradeValue@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eOtherPlayer$ = -8					; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetRecentTradeValue@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetRecentTradeValue, COMDAT

; 8436 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8437 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8438 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8439 : 
; 8440 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetRecentTradeValue(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetRecentTradeValue@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetRecentTradeValue
	mov	DWORD PTR _iValue$[ebp], eax

; 8441 : 
; 8442 : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 8443 : 	return 1;

	mov	eax, 1

; 8444 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetRecentTradeValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetRecentTradeValue
_TEXT	ENDS
EXTRN	?GetCommonFoeValue@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetCommonFoeValue
; Function compile flags: /Odtp
;	COMDAT ?lGetCommonFoeValue@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eOtherPlayer$ = -8					; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCommonFoeValue@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCommonFoeValue, COMDAT

; 8447 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8448 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8449 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8450 : 
; 8451 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetCommonFoeValue(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetCommonFoeValue@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetCommonFoeValue
	mov	DWORD PTR _iValue$[ebp], eax

; 8452 : 
; 8453 : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 8454 : 	return 1;

	mov	eax, 1

; 8455 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCommonFoeValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCommonFoeValue
_TEXT	ENDS
EXTRN	?GetRecentAssistValue@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetRecentAssistValue
; Function compile flags: /Odtp
;	COMDAT ?lGetRecentAssistValue@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eOtherPlayer$ = -8					; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetRecentAssistValue@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetRecentAssistValue, COMDAT

; 8458 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8459 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8460 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8461 : 
; 8462 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetRecentAssistValue(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetRecentAssistValue@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetRecentAssistValue
	mov	DWORD PTR _iValue$[ebp], eax

; 8463 : 
; 8464 : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 8465 : 	return 1;

	mov	eax, 1

; 8466 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetRecentAssistValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetRecentAssistValue
_TEXT	ENDS
EXTRN	?IsGaveAssistanceTo@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsGaveAssistanceTo
; Function compile flags: /Odtp
;	COMDAT ?lIsGaveAssistanceTo@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsGaveAssistanceTo@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsGaveAssistanceTo, COMDAT

; 8469 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8470 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8471 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8472 : 
; 8473 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsGaveAssistanceTo(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsGaveAssistanceTo@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsGaveAssistanceTo
	mov	BYTE PTR _bValue$[ebp], al

; 8474 : 
; 8475 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8476 : 	return 1;

	mov	eax, 1

; 8477 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsGaveAssistanceTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsGaveAssistanceTo
_TEXT	ENDS
EXTRN	?IsHasPaidTributeTo@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsHasPaidTributeTo
; Function compile flags: /Odtp
;	COMDAT ?lIsHasPaidTributeTo@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsHasPaidTributeTo@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsHasPaidTributeTo, COMDAT

; 8480 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8481 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8482 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8483 : 
; 8484 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsHasPaidTributeTo(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsHasPaidTributeTo@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsHasPaidTributeTo
	mov	BYTE PTR _bValue$[ebp], al

; 8485 : 
; 8486 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8487 : 	return 1;

	mov	eax, 1

; 8488 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsHasPaidTributeTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsHasPaidTributeTo
_TEXT	ENDS
EXTRN	?IsNukedBy@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsNukedBy
; Function compile flags: /Odtp
;	COMDAT ?lIsNukedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsNukedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsNukedBy, COMDAT

; 8491 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8492 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8493 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8494 : 
; 8495 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsNukedBy(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsNukedBy@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsNukedBy
	mov	BYTE PTR _bValue$[ebp], al

; 8496 : 
; 8497 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8498 : 	return 1;

	mov	eax, 1

; 8499 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsNukedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsNukedBy
_TEXT	ENDS
EXTRN	?IsCapitalCapturedBy@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsCapitalCapturedBy
; Function compile flags: /Odtp
;	COMDAT ?lIsCapitalCapturedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsCapitalCapturedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsCapitalCapturedBy, COMDAT

; 8502 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8503 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8504 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8505 : 
; 8506 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsCapitalCapturedBy(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsCapitalCapturedBy@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsCapitalCapturedBy
	mov	BYTE PTR _bValue$[ebp], al

; 8507 : 
; 8508 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8509 : 	return 1;

	mov	eax, 1

; 8510 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsCapitalCapturedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsCapitalCapturedBy
_TEXT	ENDS
EXTRN	?IsAngryAboutProtectedMinorKilled@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsAngryAboutProtectedMinorKilled
; Function compile flags: /Odtp
;	COMDAT ?lIsAngryAboutProtectedMinorKilled@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsAngryAboutProtectedMinorKilled@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsAngryAboutProtectedMinorKilled, COMDAT

; 8513 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8514 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8515 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8516 : 
; 8517 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsAngryAboutProtectedMinorKilled(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsAngryAboutProtectedMinorKilled@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsAngryAboutProtectedMinorKilled
	mov	BYTE PTR _bValue$[ebp], al

; 8518 : 
; 8519 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8520 : 	return 1;

	mov	eax, 1

; 8521 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsAngryAboutProtectedMinorKilled@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsAngryAboutProtectedMinorKilled
_TEXT	ENDS
EXTRN	?IsAngryAboutProtectedMinorAttacked@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsAngryAboutProtectedMinorAttacked
; Function compile flags: /Odtp
;	COMDAT ?lIsAngryAboutProtectedMinorAttacked@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsAngryAboutProtectedMinorAttacked@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsAngryAboutProtectedMinorAttacked, COMDAT

; 8524 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8525 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8526 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8527 : 
; 8528 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsAngryAboutProtectedMinorAttacked(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsAngryAboutProtectedMinorAttacked@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsAngryAboutProtectedMinorAttacked
	mov	BYTE PTR _bValue$[ebp], al

; 8529 : 
; 8530 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8531 : 	return 1;

	mov	eax, 1

; 8532 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsAngryAboutProtectedMinorAttacked@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsAngryAboutProtectedMinorAttacked
_TEXT	ENDS
EXTRN	?IsAngryAboutProtectedMinorBullied@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsAngryAboutProtectedMinorBullied
; Function compile flags: /Odtp
;	COMDAT ?lIsAngryAboutProtectedMinorBullied@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsAngryAboutProtectedMinorBullied@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsAngryAboutProtectedMinorBullied, COMDAT

; 8535 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8536 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8537 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8538 : 
; 8539 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsAngryAboutProtectedMinorBullied(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsAngryAboutProtectedMinorBullied@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsAngryAboutProtectedMinorBullied
	mov	BYTE PTR _bValue$[ebp], al

; 8540 : 
; 8541 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8542 : 	return 1;

	mov	eax, 1

; 8543 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsAngryAboutProtectedMinorBullied@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsAngryAboutProtectedMinorBullied
_TEXT	ENDS
EXTRN	?IsAngryAboutSidedWithTheirProtectedMinor@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsAngryAboutSidedWithTheirProtectedMinor
; Function compile flags: /Odtp
;	COMDAT ?lIsAngryAboutSidedWithTheirProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -9						; size = 1
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsAngryAboutSidedWithTheirProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsAngryAboutSidedWithTheirProtectedMinor, COMDAT

; 8546 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8547 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8548 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8549 : 
; 8550 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsAngryAboutSidedWithTheirProtectedMinor(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsAngryAboutSidedWithTheirProtectedMinor@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsAngryAboutSidedWithTheirProtectedMinor
	mov	BYTE PTR _bValue$[ebp], al

; 8551 : 
; 8552 : 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8553 : 	return 1;

	mov	eax, 1

; 8554 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsAngryAboutSidedWithTheirProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsAngryAboutSidedWithTheirProtectedMinor
_TEXT	ENDS
EXTRN	?GetNumTimesRobbedBy@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetNumTimesRobbedBy
; Function compile flags: /Odtp
;	COMDAT ?lGetNumTimesRobbedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eOtherPlayer$ = -8					; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumTimesRobbedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumTimesRobbedBy, COMDAT

; 8557 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8558 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8559 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8560 : 
; 8561 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetNumTimesRobbedBy(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetNumTimesRobbedBy@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNumTimesRobbedBy
	mov	DWORD PTR _iValue$[ebp], eax

; 8562 : 
; 8563 : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 8564 : 	return 1;

	mov	eax, 1

; 8565 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumTimesRobbedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumTimesRobbedBy
_TEXT	ENDS
EXTRN	?GetNumTimesIntrigueSharedBy@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetNumTimesIntrigueSharedBy
; Function compile flags: /Odtp
;	COMDAT ?lGetNumTimesIntrigueSharedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_eOtherPlayer$ = -8					; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumTimesIntrigueSharedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumTimesIntrigueSharedBy, COMDAT

; 8568 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8569 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8570 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8571 : 
; 8572 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetNumTimesIntrigueSharedBy(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetNumTimesIntrigueSharedBy@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNumTimesIntrigueSharedBy
	mov	DWORD PTR _iValue$[ebp], eax

; 8573 : 
; 8574 : 	lua_pushinteger(L, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 8575 : 	return 1;

	mov	eax, 1

; 8576 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumTimesIntrigueSharedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumTimesIntrigueSharedBy
_TEXT	ENDS
EXTRN	?SetDoFAccepted@CvDiplomacyAI@@QAEXW4PlayerTypes@@_N@Z:PROC ; CvDiplomacyAI::SetDoFAccepted
EXTRN	?SetDoFCounter@CvDiplomacyAI@@QAEXW4PlayerTypes@@H@Z:PROC ; CvDiplomacyAI::SetDoFCounter
; Function compile flags: /Odtp
;	COMDAT ?lDoForceDoF@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T250084 = -24						; size = 4
$T250080 = -20						; size = 4
$T250071 = -16						; size = 4
$T250067 = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lDoForceDoF@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lDoForceDoF, COMDAT

; 8579 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 8580 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8581 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8582 : 
; 8583 : 	pkPlayer->GetDiplomacyAI()->SetDoFCounter(eOtherPlayer, 0);

	push	0
	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?SetDoFCounter@CvDiplomacyAI@@QAEXW4PlayerTypes@@H@Z ; CvDiplomacyAI::SetDoFCounter

; 8584 : 	pkPlayer->GetDiplomacyAI()->SetDoFAccepted(eOtherPlayer, true);

	push	1
	mov	eax, DWORD PTR _eOtherPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?SetDoFAccepted@CvDiplomacyAI@@QAEXW4PlayerTypes@@_N@Z ; CvDiplomacyAI::SetDoFAccepted

; 8585 : 	GET_PLAYER(eOtherPlayer).GetDiplomacyAI()->SetDoFCounter(pkPlayer->GetID(), 0);

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T250067[ebp], edx
	mov	eax, DWORD PTR _eOtherPlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T250071[ebp], eax
	push	0
	mov	ecx, DWORD PTR $T250067[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T250071[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?SetDoFCounter@CvDiplomacyAI@@QAEXW4PlayerTypes@@H@Z ; CvDiplomacyAI::SetDoFCounter

; 8586 : 	GET_PLAYER(eOtherPlayer).GetDiplomacyAI()->SetDoFAccepted(pkPlayer->GetID(), true);

	mov	edx, DWORD PTR _pkPlayer$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T250080[ebp], eax
	mov	ecx, DWORD PTR _eOtherPlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T250084[ebp], ecx
	push	1
	mov	edx, DWORD PTR $T250080[ebp]
	push	edx
	mov	ecx, DWORD PTR $T250084[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?SetDoFAccepted@CvDiplomacyAI@@QAEXW4PlayerTypes@@_N@Z ; CvDiplomacyAI::SetDoFAccepted

; 8587 : 
; 8588 : 	return 1;

	mov	eax, 1

; 8589 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lDoForceDoF@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lDoForceDoF
_TEXT	ENDS
EXTRN	?GetDiploStringForMessage@CvDiplomacyAI@@QAEPBDW4DiploMessageTypes@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDiploStringForMessage
EXTRN	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ:PROC ; CvGame::getActivePlayer
EXTRN	?DoDenouncePlayer@CvDiplomacyAI@@QAEXW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::DoDenouncePlayer
; Function compile flags: /Odtp
;	COMDAT ?lDoForceDenounce@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv133 = -28						; size = 4
$T250103 = -24						; size = 4
$T250094 = -20						; size = 4
$T250090 = -16						; size = 4
_strText$233852 = -12					; size = 4
_pkPlayer$ = -8						; size = 4
_eOtherPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lDoForceDenounce@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lDoForceDenounce, COMDAT

; 8592 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 8593 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8594 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 8595 : 
; 8596 : 	pkPlayer->GetDiplomacyAI()->DoDenouncePlayer(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?DoDenouncePlayer@CvDiplomacyAI@@QAEXW4PlayerTypes@@@Z ; CvDiplomacyAI::DoDenouncePlayer

; 8597 : 
; 8598 : 	// Show leader if active player is being denounced
; 8599 : 	if(GC.getGame().getActivePlayer() == eOtherPlayer)

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T250090[ebp], eax
	mov	ecx, DWORD PTR $T250090[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	eax, DWORD PTR _eOtherPlayer$[ebp]
	jne	SHORT $LN1@lDoForceDe

; 8600 : 	{
; 8601 : 		const char* strText = pkPlayer->GetDiplomacyAI()->GetDiploStringForMessage(DIPLO_MESSAGE_REPEAT_NO);

	push	-1
	push	84					; 00000054H
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetDiploStringForMessage@CvDiplomacyAI@@QAEPBDW4DiploMessageTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetDiploStringForMessage
	mov	DWORD PTR _strText$233852[ebp], eax

; 8602 : 		gDLL->GameplayDiplomacyAILeaderMessage(pkPlayer->GetID(), DIPLO_UI_STATE_BLANK_DISCUSSION_MEAN_AI, strText, LEADERHEAD_ANIM_NEGATIVE);

	mov	ecx, DWORD PTR $T250094[ebp]
	mov	DWORD PTR tv133[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv133[ebp], edx
	mov	eax, DWORD PTR _pkPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T250103[ebp], ecx
	push	-1
	push	31					; 0000001fH
	mov	edx, DWORD PTR _strText$233852[ebp]
	push	edx
	push	14					; 0000000eH
	mov	eax, DWORD PTR $T250103[ebp]
	push	eax
	mov	ecx, DWORD PTR tv133[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv133[ebp]
	mov	eax, DWORD PTR [edx+736]
	call	eax
$LN1@lDoForceDe:

; 8603 : 	}
; 8604 : 
; 8605 : 	return 1;

	mov	eax, 1

; 8606 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lDoForceDenounce@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lDoForceDenounce
_TEXT	ENDS
EXTRN	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z:PROC ; CvNotifications::Add
EXTRN	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ:PROC ; CvPlayer::GetNotifications
; Function compile flags: /Odtp
;	COMDAT ?lAddNotification@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iExtraData$233860 = -16				; size = 4
_pNotifications$ = -12					; size = 4
_pkPlayer$ = -8						; size = 4
_notificationID$ = -4					; size = 4
_L$ = 8							; size = 4
?lAddNotification@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lAddNotification, COMDAT

; 8611 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 8612 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8613 : 	CvNotifications* pNotifications = pkPlayer->GetNotifications();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	DWORD PTR _pNotifications$[ebp], eax

; 8614 : 	int notificationID = -1;

	mov	DWORD PTR _notificationID$[ebp], -1

; 8615 : 	if(pNotifications)

	cmp	DWORD PTR _pNotifications$[ebp], 0
	je	$LN2@lAddNotifi

; 8616 : 	{
; 8617 : 		int iExtraData = -1;

	mov	DWORD PTR _iExtraData$233860[ebp], -1

; 8618 : 		if(lua_gettop(L) >= 8)

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	cmp	eax, 8
	jl	SHORT $LN1@lAddNotifi

; 8619 : 			iExtraData = lua_tointeger(L, 8);

	push	8
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iExtraData$233860[ebp], eax
$LN1@lAddNotifi:

; 8620 : 
; 8621 : 		notificationID = pNotifications->Add((NotificationTypes) lua_tointeger(L, 2),
; 8622 : 		                                     lua_tostring(L, 3),
; 8623 : 		                                     lua_tostring(L, 4),
; 8624 : 		                                     lua_tointeger(L, 5),
; 8625 : 		                                     lua_tointeger(L, 6),
; 8626 : 		                                     lua_tointeger(L, 7),
; 8627 : 		                                     iExtraData);

	mov	eax, DWORD PTR _iExtraData$233860[ebp]
	push	eax
	push	7
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	6
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	5
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	0
	push	4
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tolstring
	add	esp, 12					; 0000000cH
	push	eax
	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tolstring
	add	esp, 12					; 0000000cH
	push	eax
	push	2
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pNotifications$[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add
	mov	DWORD PTR _notificationID$[ebp], eax
$LN2@lAddNotifi:

; 8628 : 	}
; 8629 : 	lua_pushinteger(L, notificationID);

	mov	ecx, DWORD PTR _notificationID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 8630 : 
; 8631 : 	return 1;

	mov	eax, 1

; 8632 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lAddNotification@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lAddNotification
_TEXT	ENDS
EXTRN	?GetNumNotifications@CvNotifications@@QAEHXZ:PROC ; CvNotifications::GetNumNotifications
; Function compile flags: /Odtp
;	COMDAT ?lGetNumNotifications@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumNotifications@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumNotifications, COMDAT

; 8637 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 8638 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8639 : 	lua_pushinteger(L, pkPlayer->GetNotifications()->GetNumNotifications());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?GetNumNotifications@CvNotifications@@QAEHXZ ; CvNotifications::GetNumNotifications
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 8640 : 	return 1;

	mov	eax, 1

; 8641 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumNotifications@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumNotifications
_TEXT	ENDS
EXTRN	?GetNotificationStr@CvNotifications@@QAE?AVCvString@@H@Z:PROC ; CvNotifications::GetNotificationStr
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv81 = -56						; size = 4
$T250115 = -52						; size = 4
$T250110 = -48						; size = 28
_pkPlayer$ = -20					; size = 4
_iIndex$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNotificationStr, COMDAT

; 8645 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 8646 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8647 : 	int iIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 8648 : 
; 8649 : 	lua_pushstring(L, pkPlayer->GetNotifications()->GetNotificationStr(iIndex));

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	lea	eax, DWORD PTR $T250110[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?GetNotificationStr@CvNotifications@@QAE?AVCvString@@H@Z ; CvNotifications::GetNotificationStr
	mov	DWORD PTR tv81[ebp], eax
	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR $T250115[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T250115[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T250110[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 8650 : 	return 1;

	mov	eax, 1

; 8651 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T250110[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNotificationStr
EXTRN	?GetNotificationSummary@CvNotifications@@QAE?AVCvString@@H@Z:PROC ; CvNotifications::GetNotificationSummary
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv81 = -56						; size = 4
$T250133 = -52						; size = 4
$T250128 = -48						; size = 28
_pkPlayer$ = -20					; size = 4
_iIndex$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNotificationSummaryStr, COMDAT

; 8654 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 8655 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8656 : 	int iIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 8657 : 
; 8658 : 	lua_pushstring(L, pkPlayer->GetNotifications()->GetNotificationSummary(iIndex));

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	lea	eax, DWORD PTR $T250128[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?GetNotificationSummary@CvNotifications@@QAE?AVCvString@@H@Z ; CvNotifications::GetNotificationSummary
	mov	DWORD PTR tv81[ebp], eax
	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR $T250133[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T250133[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T250128[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 8659 : 	return 1;

	mov	eax, 1

; 8660 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T250128[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNotificationSummaryStr
EXTRN	?GetNotificationID@CvNotifications@@QAEHH@Z:PROC ; CvNotifications::GetNotificationID
; Function compile flags: /Odtp
;	COMDAT ?lGetNotificationIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iIndex$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNotificationIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNotificationIndex, COMDAT

; 8664 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 8665 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8666 : 	int iIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 8667 : 
; 8668 : 	lua_pushinteger(L, pkPlayer->GetNotifications()->GetNotificationID(iIndex));

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?GetNotificationID@CvNotifications@@QAEHH@Z ; CvNotifications::GetNotificationID
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 8669 : 	return 1;

	mov	eax, 1

; 8670 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNotificationIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNotificationIndex
_TEXT	ENDS
EXTRN	?GetNotificationTurn@CvNotifications@@QAEHH@Z:PROC ; CvNotifications::GetNotificationTurn
; Function compile flags: /Odtp
;	COMDAT ?lGetNotificationTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iIndex$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNotificationTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNotificationTurn, COMDAT

; 8674 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 8675 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8676 : 	int iIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 8677 : 
; 8678 : 	lua_pushinteger(L, pkPlayer->GetNotifications()->GetNotificationTurn(iIndex));

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?GetNotificationTurn@CvNotifications@@QAEHH@Z ; CvNotifications::GetNotificationTurn
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 8679 : 	return 1;

	mov	eax, 1

; 8680 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNotificationTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNotificationTurn
_TEXT	ENDS
EXTRN	?IsNotificationDismissed@CvNotifications@@QAE_NH@Z:PROC ; CvNotifications::IsNotificationDismissed
; Function compile flags: /Odtp
;	COMDAT ?lGetNotificationDismissed@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iIndex$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNotificationDismissed@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNotificationDismissed, COMDAT

; 8684 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 8685 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8686 : 	int iIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 8687 : 	lua_pushboolean(L, pkPlayer->GetNotifications()->IsNotificationDismissed(iIndex));

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?IsNotificationDismissed@CvNotifications@@QAE_NH@Z ; CvNotifications::IsNotificationDismissed
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 8688 : 	return 1;

	mov	eax, 1

; 8689 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNotificationDismissed@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNotificationDismissed
_TEXT	ENDS
PUBLIC	??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ		; std::auto_ptr<ICvUnit1>::~auto_ptr<ICvUnit1>
PUBLIC	??1?$CvEnumerator@VICvUnit1@@@@QAE@XZ		; CvEnumerator<ICvUnit1>::~CvEnumerator<ICvUnit1>
PUBLIC	??_C@_09PEFLGELM@buildType?$AA@			; `string'
PUBLIC	??_C@_04LJCHJAHJ@plot?$AA@			; `string'
PUBLIC	?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ ; CvEnumerator<ICvUnit1>::GetCurrent
EXTRN	?getImprovementType@CvPlot@@QBE?AW4ImprovementTypes@@XZ:PROC ; CvPlot::getImprovementType
EXTRN	?EvaluateBuilder@CvBuilderTaskingAI@@QAE_NPAVCvUnit@@PAUBuilderDirective@@I_N2@Z:PROC ; CvBuilderTaskingAI::EvaluateBuilder
EXTRN	?GetBuilderTaskingAI@CvPlayer@@QBEPAVCvBuilderTaskingAI@@XZ:PROC ; CvPlayer::GetBuilderTaskingAI
EXTRN	?UnwrapUnitPointer@CvGlobals@@QAEPAVCvUnit@@PAVICvUnit1@@@Z:PROC ; CvGlobals::UnwrapUnitPointer
EXTRN	?GetWorkRate@CvUnitEntry@@QBEHXZ:PROC		; CvUnitEntry::GetWorkRate
EXTRN	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z:PROC ; CvGlobals::getUnitInfo
;	COMDAT ??_C@_09PEFLGELM@buildType?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces.h
CONST	SEGMENT
??_C@_09PEFLGELM@buildType?$AA@ DB 'buildType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04LJCHJAHJ@plot?$AA@
CONST	SEGMENT
??_C@_04LJCHJAHJ@plot?$AA@ DB 'plot', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv330 = -356						; size = 4
tv345 = -352						; size = 4
tv133 = -348						; size = 4
tv245 = -341						; size = 1
tv241 = -340						; size = 4
tv77 = -336						; size = 4
_inst$250468 = -332					; size = 4
$T250464 = -328						; size = 4
$T250443 = -324						; size = 4
$T250442 = -320						; size = 4
$T250397 = -316						; size = 4
$T250384 = -312						; size = 4
$T250380 = -308						; size = 4
$T250366 = -304						; size = 4
$T250362 = -297						; size = 1
$T250351 = -296						; size = 4
$T250347 = -289						; size = 1
_iMapY$250441 = -288					; size = 4
_iMapX$250440 = -284					; size = 4
$T250340 = -280						; size = 4
$T250336 = -276						; size = 4
$T250335 = -272						; size = 4
_inst$250322 = -268					; size = 4
$T250318 = -264						; size = 4
_inst$250298 = -260					; size = 4
$T250294 = -256						; size = 4
_inst$250284 = -252					; size = 4
$T250280 = -248						; size = 4
$T250271 = -244						; size = 4
$T250256 = -240						; size = 4
$T250169 = -180						; size = 4
$T250159 = -176						; size = 4
$T250153 = -172						; size = 4
$T250152 = -168						; size = 4
_ui$234001 = -164					; size = 4
_pPlot$233995 = -160					; size = 4
_ui$233990 = -156					; size = 4
_pUnitEntry$233980 = -152				; size = 4
_pUnit$233969 = -148					; size = 4
_pkPlayer$ = -144					; size = 4
_aDirective$ = -140					; size = 80
_cuiMaxDirectives$ = -56				; size = 4
_cuiDirectiveSize$ = -52				; size = 4
_pWorkerUnit$ = -48					; size = 4
_iPositionIndex$ = -44					; size = 4
_selectedUnits$ = -40					; size = 4
_i$ = -36						; size = 4
_pDirectivePlots$ = -32					; size = 16
_bUseDirective$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetRecommendedWorkerPlots, COMDAT

; 8692 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 344				; 00000158H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 8693 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8694 : 
; 8695 : 	CvUnit* pWorkerUnit = NULL;

	mov	DWORD PTR _pWorkerUnit$[ebp], 0

; 8696 : 
; 8697 : 	//Get first selected worker.
; 8698 : 	CvEnumerator<ICvUnit1> selectedUnits(GC.GetEngineUserInterface()->GetSelectedUnits());

	mov	ecx, DWORD PTR $T250159[ebp]
	mov	DWORD PTR tv77[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv77[ebp], edx
	mov	eax, DWORD PTR tv77[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv77[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	mov	DWORD PTR $T250169[ebp], eax
	mov	ecx, DWORD PTR $T250169[ebp]
	mov	DWORD PTR _selectedUnits$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 8699 : 	while(selectedUnits.MoveNext())

$LN32@lGetRecomm:
	cmp	DWORD PTR _selectedUnits$[ebp], 0
	je	SHORT $LN30@lGetRecomm
	mov	edx, DWORD PTR _selectedUnits$[ebp]
	mov	DWORD PTR tv241[ebp], edx
	mov	eax, DWORD PTR tv241[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv241[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	mov	BYTE PTR tv245[ebp], al
	jmp	SHORT $LN28@lGetRecomm
$LN30@lGetRecomm:
	mov	BYTE PTR tv245[ebp], 0
$LN28@lGetRecomm:
	movzx	ecx, BYTE PTR tv245[ebp]
	test	ecx, ecx
	je	$LN15@lGetRecomm

; 8700 : 	{
; 8701 : 		auto_ptr<ICvUnit1> pUnit(selectedUnits.GetCurrent());

	lea	ecx, DWORD PTR _selectedUnits$[ebp]
	call	?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ ; CvEnumerator<ICvUnit1>::GetCurrent
	mov	DWORD PTR $T250256[ebp], eax
	mov	edx, DWORD PTR $T250256[ebp]
	mov	DWORD PTR _pUnit$233969[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 8702 : 		if(pUnit.get() != NULL)

	cmp	DWORD PTR _pUnit$233969[ebp], 0
	je	$LN14@lGetRecomm

; 8703 : 		{
; 8704 : 			CvUnitEntry* pUnitEntry = GC.getUnitInfo(pUnit->GetUnitType());

	mov	eax, DWORD PTR _pUnit$233969[ebp]
	mov	DWORD PTR tv133[ebp], eax
	mov	ecx, DWORD PTR tv133[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR tv133[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+120]
	call	ecx
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	DWORD PTR _pUnitEntry$233980[ebp], eax

; 8705 : 			if(pUnitEntry && pUnitEntry->GetWorkRate() > 0)

	cmp	DWORD PTR _pUnitEntry$233980[ebp], 0
	je	SHORT $LN14@lGetRecomm
	mov	ecx, DWORD PTR _pUnitEntry$233980[ebp]
	call	?GetWorkRate@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetWorkRate
	test	eax, eax
	jle	SHORT $LN14@lGetRecomm

; 8706 : 			{
; 8707 : 				pWorkerUnit = GC.UnwrapUnitPointer(pUnit.get());

	mov	edx, DWORD PTR _pUnit$233969[ebp]
	mov	DWORD PTR $T250271[ebp], edx
	mov	eax, DWORD PTR $T250271[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?UnwrapUnitPointer@CvGlobals@@QAEPAVCvUnit@@PAVICvUnit1@@@Z ; CvGlobals::UnwrapUnitPointer
	mov	DWORD PTR _pWorkerUnit$[ebp], eax

; 8708 : 				break;

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _pUnit$233969[ebp]
	mov	DWORD PTR $T250280[ebp], ecx
	cmp	DWORD PTR $T250280[ebp], 0
	je	SHORT $LN78@lGetRecomm
	mov	edx, DWORD PTR $T250280[ebp]
	mov	DWORD PTR _inst$250284[ebp], edx
	mov	eax, DWORD PTR _inst$250284[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$250284[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN78@lGetRecomm:
	jmp	SHORT $LN15@lGetRecomm
$LN14@lGetRecomm:

; 8709 : 			}
; 8710 : 		}
; 8711 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _pUnit$233969[ebp]
	mov	DWORD PTR $T250294[ebp], ecx
	cmp	DWORD PTR $T250294[ebp], 0
	je	SHORT $LN83@lGetRecomm
	mov	edx, DWORD PTR $T250294[ebp]
	mov	DWORD PTR _inst$250298[ebp], edx
	mov	eax, DWORD PTR _inst$250298[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$250298[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN83@lGetRecomm:
	jmp	$LN32@lGetRecomm
$LN15@lGetRecomm:

; 8712 : 
; 8713 : 	//Early out
; 8714 : 	if(pWorkerUnit == NULL)

	cmp	DWORD PTR _pWorkerUnit$[ebp], 0
	jne	SHORT $LN12@lGetRecomm

; 8715 : 	{
; 8716 : 		return 0;

	mov	DWORD PTR $T250152[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _selectedUnits$[ebp]
	mov	DWORD PTR $T250318[ebp], ecx
	cmp	DWORD PTR $T250318[ebp], 0
	je	SHORT $LN91@lGetRecomm
	mov	edx, DWORD PTR $T250318[ebp]
	mov	DWORD PTR _inst$250322[ebp], edx
	mov	eax, DWORD PTR _inst$250322[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$250322[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN91@lGetRecomm:
	mov	eax, DWORD PTR $T250152[ebp]
	jmp	$LN17@lGetRecomm
$LN12@lGetRecomm:

; 8717 : 	}
; 8718 : 
; 8719 : 	const size_t cuiMaxDirectives = 3;

	mov	DWORD PTR _cuiMaxDirectives$[ebp], 3

; 8720 : 	const size_t cuiDirectiveSize = 4;

	mov	DWORD PTR _cuiDirectiveSize$[ebp], 4

; 8721 : 	BuilderDirective aDirective[ cuiDirectiveSize ];

	mov	DWORD PTR $T250336[ebp], 4
	lea	ecx, DWORD PTR _aDirective$[ebp]
	mov	DWORD PTR $T250335[ebp], ecx
$LN97@lGetRecomm:
	mov	edx, DWORD PTR $T250336[ebp]
	sub	edx, 1
	mov	DWORD PTR $T250336[ebp], edx
	js	SHORT $LN98@lGetRecomm
	mov	eax, DWORD PTR $T250335[ebp]
	mov	DWORD PTR [eax], 6
	mov	ecx, DWORD PTR $T250335[ebp]
	mov	DWORD PTR [ecx+4], -1
	mov	edx, DWORD PTR $T250335[ebp]
	mov	DWORD PTR [edx+8], -1
	or	eax, -1
	mov	ecx, DWORD PTR $T250335[ebp]
	mov	WORD PTR [ecx+12], ax
	or	edx, -1
	mov	eax, DWORD PTR $T250335[ebp]
	mov	WORD PTR [eax+14], dx
	or	ecx, -1
	mov	edx, DWORD PTR $T250335[ebp]
	mov	WORD PTR [edx+16], cx
	mov	eax, DWORD PTR $T250335[ebp]
	add	eax, 20					; 00000014H
	mov	DWORD PTR $T250335[ebp], eax
	jmp	SHORT $LN97@lGetRecomm
$LN98@lGetRecomm:

; 8722 : 	bool bUseDirective[cuiDirectiveSize];
; 8723 : 	CvPlot* pDirectivePlots[cuiDirectiveSize] = {0};

	mov	DWORD PTR _pDirectivePlots$[ebp], 0
	xor	ecx, ecx
	mov	DWORD PTR _pDirectivePlots$[ebp+4], ecx
	mov	DWORD PTR _pDirectivePlots$[ebp+8], ecx
	mov	DWORD PTR _pDirectivePlots$[ebp+12], ecx

; 8724 : 
; 8725 : 	pkPlayer->GetBuilderTaskingAI()->EvaluateBuilder(pWorkerUnit, aDirective, cuiDirectiveSize, true);

	push	0
	push	1
	push	4
	lea	edx, DWORD PTR _aDirective$[ebp]
	push	edx
	mov	eax, DWORD PTR _pWorkerUnit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetBuilderTaskingAI@CvPlayer@@QBEPAVCvBuilderTaskingAI@@XZ ; CvPlayer::GetBuilderTaskingAI
	mov	ecx, eax
	call	?EvaluateBuilder@CvBuilderTaskingAI@@QAE_NPAVCvUnit@@PAUBuilderDirective@@I_N2@Z ; CvBuilderTaskingAI::EvaluateBuilder

; 8726 : 
; 8727 : 	for(uint ui = 0; ui < cuiDirectiveSize; ui++)

	mov	DWORD PTR _ui$233990[ebp], 0
	jmp	SHORT $LN11@lGetRecomm
$LN10@lGetRecomm:
	mov	ecx, DWORD PTR _ui$233990[ebp]
	add	ecx, 1
	mov	DWORD PTR _ui$233990[ebp], ecx
$LN11@lGetRecomm:
	cmp	DWORD PTR _ui$233990[ebp], 4
	jae	$LN9@lGetRecomm

; 8728 : 	{
; 8729 : 		bUseDirective[ui] = false;

	mov	edx, DWORD PTR _ui$233990[ebp]
	mov	BYTE PTR _bUseDirective$[ebp+edx], 0

; 8730 : 
; 8731 : 		if(aDirective[ui].m_eDirective != BuilderDirective::NUM_DIRECTIVES)

	mov	eax, DWORD PTR _ui$233990[ebp]
	imul	eax, 20					; 00000014H
	cmp	DWORD PTR _aDirective$[ebp+eax], 6
	je	$LN8@lGetRecomm

; 8732 : 		{
; 8733 : 			CvPlot* pPlot = GC.getMap().plot(aDirective[ui].m_sX, aDirective[ui].m_sY);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T250340[ebp], ecx
	mov	edx, DWORD PTR _ui$233990[ebp]
	imul	edx, 20					; 00000014H
	movsx	eax, WORD PTR _aDirective$[ebp+edx+14]
	mov	DWORD PTR $T250443[ebp], eax
	mov	ecx, DWORD PTR _ui$233990[ebp]
	imul	ecx, 20					; 00000014H
	movsx	edx, WORD PTR _aDirective$[ebp+ecx+12]
	mov	DWORD PTR $T250442[ebp], edx
	cmp	DWORD PTR $T250442[ebp], -2147483647	; 80000001H
	je	SHORT $LN104@lGetRecomm
	cmp	DWORD PTR $T250443[ebp], -2147483647	; 80000001H
	jne	SHORT $LN105@lGetRecomm
$LN104@lGetRecomm:
	mov	DWORD PTR _pPlot$233995[ebp], 0
	jmp	$LN106@lGetRecomm
$LN105@lGetRecomm:
	mov	eax, DWORD PTR $T250340[ebp]
	mov	cl, BYTE PTR [eax+4056]
	mov	BYTE PTR $T250347[ebp], cl
	mov	edx, DWORD PTR $T250340[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T250351[ebp], eax
	movzx	ecx, BYTE PTR $T250347[ebp]
	test	ecx, ecx
	je	SHORT $LN117@lGetRecomm
	cmp	DWORD PTR $T250442[ebp], 0
	jge	SHORT $LN116@lGetRecomm
	mov	eax, DWORD PTR $T250442[ebp]
	cdq
	idiv	DWORD PTR $T250351[ebp]
	add	edx, DWORD PTR $T250351[ebp]
	mov	DWORD PTR _iMapX$250440[ebp], edx
	jmp	SHORT $LN118@lGetRecomm
	jmp	SHORT $LN117@lGetRecomm
$LN116@lGetRecomm:
	mov	edx, DWORD PTR $T250442[ebp]
	cmp	edx, DWORD PTR $T250351[ebp]
	jl	SHORT $LN117@lGetRecomm
	mov	eax, DWORD PTR $T250442[ebp]
	cdq
	idiv	DWORD PTR $T250351[ebp]
	mov	DWORD PTR _iMapX$250440[ebp], edx
	jmp	SHORT $LN118@lGetRecomm
$LN117@lGetRecomm:
	mov	eax, DWORD PTR $T250442[ebp]
	mov	DWORD PTR _iMapX$250440[ebp], eax
$LN118@lGetRecomm:
	mov	ecx, DWORD PTR $T250340[ebp]
	mov	dl, BYTE PTR [ecx+4057]
	mov	BYTE PTR $T250362[ebp], dl
	mov	eax, DWORD PTR $T250340[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T250366[ebp], ecx
	movzx	edx, BYTE PTR $T250362[ebp]
	test	edx, edx
	je	SHORT $LN127@lGetRecomm
	cmp	DWORD PTR $T250443[ebp], 0
	jge	SHORT $LN126@lGetRecomm
	mov	eax, DWORD PTR $T250443[ebp]
	cdq
	idiv	DWORD PTR $T250366[ebp]
	add	edx, DWORD PTR $T250366[ebp]
	mov	DWORD PTR _iMapY$250441[ebp], edx
	jmp	SHORT $LN128@lGetRecomm
	jmp	SHORT $LN127@lGetRecomm
$LN126@lGetRecomm:
	mov	eax, DWORD PTR $T250443[ebp]
	cmp	eax, DWORD PTR $T250366[ebp]
	jl	SHORT $LN127@lGetRecomm
	mov	eax, DWORD PTR $T250443[ebp]
	cdq
	idiv	DWORD PTR $T250366[ebp]
	mov	DWORD PTR _iMapY$250441[ebp], edx
	jmp	SHORT $LN128@lGetRecomm
$LN127@lGetRecomm:
	mov	ecx, DWORD PTR $T250443[ebp]
	mov	DWORD PTR _iMapY$250441[ebp], ecx
$LN128@lGetRecomm:
	cmp	DWORD PTR _iMapX$250440[ebp], 0
	jl	SHORT $LN132@lGetRecomm
	mov	edx, DWORD PTR $T250340[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T250380[ebp], eax
	mov	ecx, DWORD PTR _iMapX$250440[ebp]
	cmp	ecx, DWORD PTR $T250380[ebp]
	jge	SHORT $LN132@lGetRecomm
	cmp	DWORD PTR _iMapY$250441[ebp], 0
	jl	SHORT $LN132@lGetRecomm
	mov	edx, DWORD PTR $T250340[ebp]
	mov	eax, DWORD PTR [edx+4024]
	mov	DWORD PTR $T250384[ebp], eax
	mov	ecx, DWORD PTR _iMapY$250441[ebp]
	cmp	ecx, DWORD PTR $T250384[ebp]
	jge	SHORT $LN132@lGetRecomm
	mov	DWORD PTR tv345[ebp], 1
	jmp	SHORT $LN130@lGetRecomm
$LN132@lGetRecomm:
	mov	DWORD PTR tv345[ebp], 0
$LN130@lGetRecomm:
	cmp	DWORD PTR tv345[ebp], 0
	je	SHORT $LN108@lGetRecomm
	mov	edx, DWORD PTR $T250340[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T250397[ebp], eax
	mov	ecx, DWORD PTR _iMapY$250441[ebp]
	imul	ecx, DWORD PTR $T250397[ebp]
	add	ecx, DWORD PTR _iMapX$250440[ebp]
	imul	ecx, 484				; 000001e4H
	mov	edx, DWORD PTR $T250340[ebp]
	add	ecx, DWORD PTR [edx+4068]
	mov	DWORD PTR tv330[ebp], ecx
	jmp	SHORT $LN109@lGetRecomm
$LN108@lGetRecomm:
	mov	DWORD PTR tv330[ebp], 0
$LN109@lGetRecomm:
	mov	eax, DWORD PTR tv330[ebp]
	mov	DWORD PTR _pPlot$233995[ebp], eax
$LN106@lGetRecomm:

; 8734 : 			if(pPlot != NULL)

	cmp	DWORD PTR _pPlot$233995[ebp], 0
	je	SHORT $LN8@lGetRecomm

; 8735 : 			{
; 8736 : 				// Don't recommend plots that are already improved
; 8737 : 				if(aDirective[ui].m_eDirective != BuilderDirective::BUILD_IMPROVEMENT || pPlot->getImprovementType() == NO_IMPROVEMENT)

	mov	ecx, DWORD PTR _ui$233990[ebp]
	imul	ecx, 20					; 00000014H
	cmp	DWORD PTR _aDirective$[ebp+ecx], 1
	jne	SHORT $LN5@lGetRecomm
	mov	ecx, DWORD PTR _pPlot$233995[ebp]
	call	?getImprovementType@CvPlot@@QBE?AW4ImprovementTypes@@XZ ; CvPlot::getImprovementType
	cmp	eax, -1
	jne	SHORT $LN8@lGetRecomm
$LN5@lGetRecomm:

; 8738 : 				{
; 8739 : 					pDirectivePlots[ui] = pPlot;

	mov	edx, DWORD PTR _ui$233990[ebp]
	mov	eax, DWORD PTR _pPlot$233995[ebp]
	mov	DWORD PTR _pDirectivePlots$[ebp+edx*4], eax

; 8740 : 					bUseDirective[ui] = true;

	mov	ecx, DWORD PTR _ui$233990[ebp]
	mov	BYTE PTR _bUseDirective$[ebp+ecx], 1
$LN8@lGetRecomm:

; 8741 : 				}
; 8742 : 			}
; 8743 : 		}
; 8744 : 	}

	jmp	$LN10@lGetRecomm
$LN9@lGetRecomm:

; 8745 : 
; 8746 : 	lua_createtable(L, cuiMaxDirectives, 0);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 8747 : 	int iPositionIndex = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _iPositionIndex$[ebp], eax

; 8748 : 	int i = 1;

	mov	DWORD PTR _i$[ebp], 1

; 8749 : 
; 8750 : 	for(uint ui = 0; ui < cuiDirectiveSize && i < cuiMaxDirectives; ui++)

	mov	DWORD PTR _ui$234001[ebp], 0
	jmp	SHORT $LN4@lGetRecomm
$LN3@lGetRecomm:
	mov	ecx, DWORD PTR _ui$234001[ebp]
	add	ecx, 1
	mov	DWORD PTR _ui$234001[ebp], ecx
$LN4@lGetRecomm:
	cmp	DWORD PTR _ui$234001[ebp], 4
	jae	$LN2@lGetRecomm
	cmp	DWORD PTR _i$[ebp], 3
	jae	$LN2@lGetRecomm

; 8751 : 	{
; 8752 : 		if(bUseDirective[ui] == true)

	mov	edx, DWORD PTR _ui$234001[ebp]
	movzx	eax, BYTE PTR _bUseDirective$[ebp+edx]
	cmp	eax, 1
	jne	$LN1@lGetRecomm

; 8753 : 		{
; 8754 : 			lua_createtable(L, 0, 2);

	push	2
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 8755 : 			CvLuaPlot::Push(L, pDirectivePlots[ui]);

	mov	edx, DWORD PTR _ui$234001[ebp]
	mov	eax, DWORD PTR _pDirectivePlots$[ebp+edx*4]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8

; 8756 : 			lua_setfield(L, -2, "plot");

	push	OFFSET ??_C@_04LJCHJAHJ@plot?$AA@
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 8757 : 			lua_pushinteger(L, aDirective[ui].m_eBuild);

	mov	eax, DWORD PTR _ui$234001[ebp]
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR _aDirective$[ebp+eax+4]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 8758 : 			lua_setfield(L, -2, "buildType");

	push	OFFSET ??_C@_09PEFLGELM@buildType?$AA@
	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 8759 : 
; 8760 : 			lua_rawseti(L, iPositionIndex, i);

	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iPositionIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawseti
	add	esp, 12					; 0000000cH

; 8761 : 			i++;

	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN1@lGetRecomm:

; 8762 : 		}
; 8763 : 	}

	jmp	$LN3@lGetRecomm
$LN2@lGetRecomm:

; 8764 : 
; 8765 : 	return 1;

	mov	DWORD PTR $T250153[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _selectedUnits$[ebp]
	mov	DWORD PTR $T250464[ebp], edx
	cmp	DWORD PTR $T250464[ebp], 0
	je	SHORT $LN145@lGetRecomm
	mov	eax, DWORD PTR $T250464[ebp]
	mov	DWORD PTR _inst$250468[ebp], eax
	mov	ecx, DWORD PTR _inst$250468[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _inst$250468[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+4]
	call	ecx
$LN145@lGetRecomm:
	mov	eax, DWORD PTR $T250153[ebp]
$LN17@lGetRecomm:

; 8766 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _selectedUnits$[ebp]
	jmp	??1?$CvEnumerator@VICvUnit1@@@@QAE@XZ
__unwindfunclet$?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _pUnit$233969[ebp]
	jmp	??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ	; std::auto_ptr<ICvUnit1>::~auto_ptr<ICvUnit1>
__ehhandler$?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-348]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetRecommendedWorkerPlots
; Function compile flags: /Odtp
;	COMDAT ??1?$CvEnumerator@VICvUnit1@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_inst$250491 = -8					; size = 4
$T250487 = -4						; size = 4
??1?$CvEnumerator@VICvUnit1@@@@QAE@XZ PROC		; CvEnumerator<ICvUnit1>::~CvEnumerator<ICvUnit1>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T250487[ebp], ecx
	cmp	DWORD PTR $T250487[ebp], 0
	je	SHORT $LN4@CvEnumerat
	mov	edx, DWORD PTR $T250487[ebp]
	mov	DWORD PTR _inst$250491[ebp], edx
	mov	eax, DWORD PTR _inst$250491[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$250491[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN4@CvEnumerat:
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CvEnumerator@VICvUnit1@@@@QAE@XZ ENDP		; CvEnumerator<ICvUnit1>::~CvEnumerator<ICvUnit1>
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Odtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	mov	ecx, DWORD PTR ___t$[ebp]
	add	ecx, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], ecx
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??1?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAE@XZ ; CvWeightedVector<CvPlot *,800,1>::~CvWeightedVector<CvPlot *,800,1>
PUBLIC	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::~FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>
PUBLIC	?SortItems@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAEXXZ ; CvWeightedVector<CvPlot *,800,1>::SortItems
PUBLIC	?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@Z ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::push_back
PUBLIC	?plotDistance@@YAHHHHH@Z			; plotDistance
PUBLIC	?GrowSizeToFit@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::GrowSizeToFit
PUBLIC	??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>
PUBLIC	__$ArrayPad$
EXTRN	?GeneratePath@CvUnit@@QBE_NPBVCvPlot@@H_NPAH@Z:PROC ; CvUnit::GeneratePath
EXTRN	?isVisibleEnemyUnit@CvPlot@@QBE_NW4PlayerTypes@@@Z:PROC ; CvPlot::isVisibleEnemyUnit
EXTRN	?getArea@CvCity@@QBEHXZ:PROC			; CvCity::getArea
EXTRN	?getTeam@CvUnit@@QBE?AW4TeamTypes@@XZ:PROC	; CvUnit::getTeam
EXTRN	?isFound@CvUnit@@QBE_NXZ:PROC			; CvUnit::isFound
EXTRN	__chkstk:PROC
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces.h
xdata$x	SEGMENT
__unwindtable$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z$2
__ehfuncinfo$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv406 = -6864						; size = 4
tv331 = -6857						; size = 1
tv327 = -6856						; size = 4
tv77 = -6852						; size = 4
_inst$250989 = -6848					; size = 4
$T250985 = -6844					; size = 4
$T250885 = -6808					; size = 4
_weightedElem$250877 = -6796				; size = 8
$T250798 = -6720					; size = 4
_uiOffset$250788 = -6716				; size = 4
$T250779 = -6712					; size = 4
$T250742 = -6708					; size = 4
$T250730 = -6704					; size = 4
$T250726 = -6697					; size = 1
$T250715 = -6696					; size = 4
$T250711 = -6689					; size = 1
_iMapY$250751 = -6688					; size = 4
_iMapX$250750 = -6684					; size = 4
_inst$250662 = -6680					; size = 4
$T250658 = -6676					; size = 4
_inst$250637 = -6672					; size = 4
$T250633 = -6668					; size = 4
_inst$250623 = -6664					; size = 4
$T250619 = -6660					; size = 4
$T250609 = -6656					; size = 4
$T250602 = -6652					; size = 4
$T250515 = -6592					; size = 4
$T250505 = -6588					; size = 4
$T250498 = -6584					; size = 4
$T250497 = -6580					; size = 4
_i$234305 = -6576					; size = 4
_iPositionIndex$234304 = -6572				; size = 4
_pPlot$234297 = -6568					; size = 4
_bCanFindPath$234298 = -6561				; size = 1
_i$234293 = -6560					; size = 4
_pPlot$234282 = -6556					; size = 4
_iPlotY$234278 = -6552					; size = 4
_iPlotX$234274 = -6548					; size = 4
_pkUnit$234038 = -6544					; size = 4
_pUnit$234036 = -6540					; size = 4
_iEndSearchX$ = -6536					; size = 4
_kMap$ = -6532						; size = 4
_pCapital$ = -6528					; size = 4
_aBestPlots$ = -6524					; size = 6416
__$ArrayPad$ = -108					; size = 4
_aPlots$ = -104						; size = 12
_pkPlayer$ = -92					; size = 4
_iDanger$ = -88						; size = 4
_uiListSize$ = -84					; size = 4
_iSettlerY$ = -80					; size = 4
_iPathTurns$ = -76					; size = 4
_eUnitTeam$ = -72					; size = 4
_iEndSearchY$ = -68					; size = 4
_iCapArea$ = -64					; size = 4
_iEvalDistance$ = -60					; size = 4
_iDistanceDropoffMod$ = -56				; size = 4
_selectedUnits$ = -52					; size = 4
_iBeginSearchX$ = -48					; size = 4
_iValue$ = -44						; size = 4
_iSettlerDistance$ = -40				; size = 4
_iDistanceDropoff$ = -36				; size = 4
_iFailLimit$ = -32					; size = 4
_pFoundingUnit$ = -28					; size = 4
_iSettlerX$ = -24					; size = 4
_iBeginSearchY$ = -20					; size = 4
_iReturnSize$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetRecommendedFoundCityPlots, COMDAT

; 8772 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 6852				; 00001ac4H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 8773 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8774 : 
; 8775 : 	CvUnit* pFoundingUnit = NULL;

	mov	DWORD PTR _pFoundingUnit$[ebp], 0

; 8776 : 
; 8777 : 	//Get first selected unit that can found cities.
; 8778 : 	CvEnumerator<ICvUnit1> selectedUnits(GC.GetEngineUserInterface()->GetSelectedUnits());

	mov	ecx, DWORD PTR $T250505[ebp]
	mov	DWORD PTR tv77[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv77[ebp], edx
	mov	eax, DWORD PTR tv77[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv77[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	mov	DWORD PTR $T250515[ebp], eax
	mov	ecx, DWORD PTR $T250515[ebp]
	mov	DWORD PTR _selectedUnits$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 8779 : 	while(selectedUnits.MoveNext())

$LN46@lGetRecomm@2:
	cmp	DWORD PTR _selectedUnits$[ebp], 0
	je	SHORT $LN44@lGetRecomm@2
	mov	edx, DWORD PTR _selectedUnits$[ebp]
	mov	DWORD PTR tv327[ebp], edx
	mov	eax, DWORD PTR tv327[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv327[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	mov	BYTE PTR tv331[ebp], al
	jmp	SHORT $LN42@lGetRecomm@2
$LN44@lGetRecomm@2:
	mov	BYTE PTR tv331[ebp], 0
$LN42@lGetRecomm@2:
	movzx	ecx, BYTE PTR tv331[ebp]
	test	ecx, ecx
	je	$LN28@lGetRecomm@2

; 8780 : 	{
; 8781 : 		auto_ptr<ICvUnit1> pUnit(selectedUnits.GetCurrent());

	lea	ecx, DWORD PTR _selectedUnits$[ebp]
	call	?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ ; CvEnumerator<ICvUnit1>::GetCurrent
	mov	DWORD PTR $T250602[ebp], eax
	mov	edx, DWORD PTR $T250602[ebp]
	mov	DWORD PTR _pUnit$234036[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 8782 : 		if(pUnit.get() != NULL)

	cmp	DWORD PTR _pUnit$234036[ebp], 0
	je	$LN27@lGetRecomm@2

; 8783 : 		{
; 8784 : 			CvUnit* pkUnit = GC.UnwrapUnitPointer(pUnit.get());

	mov	eax, DWORD PTR _pUnit$234036[ebp]
	mov	DWORD PTR $T250609[ebp], eax
	mov	ecx, DWORD PTR $T250609[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?UnwrapUnitPointer@CvGlobals@@QAEPAVCvUnit@@PAVICvUnit1@@@Z ; CvGlobals::UnwrapUnitPointer
	mov	DWORD PTR _pkUnit$234038[ebp], eax

; 8785 : 			if(pkUnit != NULL && pkUnit->isFound())

	cmp	DWORD PTR _pkUnit$234038[ebp], 0
	je	SHORT $LN27@lGetRecomm@2
	mov	ecx, DWORD PTR _pkUnit$234038[ebp]
	call	?isFound@CvUnit@@QBE_NXZ		; CvUnit::isFound
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN27@lGetRecomm@2

; 8786 : 			{
; 8787 : 				pFoundingUnit = pkUnit;

	mov	eax, DWORD PTR _pkUnit$234038[ebp]
	mov	DWORD PTR _pFoundingUnit$[ebp], eax

; 8788 : 				break;

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _pUnit$234036[ebp]
	mov	DWORD PTR $T250619[ebp], ecx
	cmp	DWORD PTR $T250619[ebp], 0
	je	SHORT $LN88@lGetRecomm@2
	mov	edx, DWORD PTR $T250619[ebp]
	mov	DWORD PTR _inst$250623[ebp], edx
	mov	eax, DWORD PTR _inst$250623[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$250623[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN88@lGetRecomm@2:
	jmp	SHORT $LN28@lGetRecomm@2
$LN27@lGetRecomm@2:

; 8789 : 			}
; 8790 : 		}
; 8791 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _pUnit$234036[ebp]
	mov	DWORD PTR $T250633[ebp], ecx
	cmp	DWORD PTR $T250633[ebp], 0
	je	SHORT $LN93@lGetRecomm@2
	mov	edx, DWORD PTR $T250633[ebp]
	mov	DWORD PTR _inst$250637[ebp], edx
	mov	eax, DWORD PTR _inst$250637[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$250637[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN93@lGetRecomm@2:
	jmp	$LN46@lGetRecomm@2
$LN28@lGetRecomm@2:

; 8792 : 
; 8793 : 	if(pFoundingUnit == NULL)

	cmp	DWORD PTR _pFoundingUnit$[ebp], 0
	jne	SHORT $LN108@lGetRecomm@2

; 8794 : 		return 0;

	mov	DWORD PTR $T250497[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _selectedUnits$[ebp]
	mov	DWORD PTR $T250658[ebp], ecx
	cmp	DWORD PTR $T250658[ebp], 0
	je	SHORT $LN101@lGetRecomm@2
	mov	edx, DWORD PTR $T250658[ebp]
	mov	DWORD PTR _inst$250662[ebp], edx
	mov	eax, DWORD PTR _inst$250662[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$250662[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN101@lGetRecomm@2:
	mov	eax, DWORD PTR $T250497[ebp]
	jmp	$LN30@lGetRecomm@2

; 8795 : 
; 8796 : 	int iSettlerDistance;
; 8797 : 	int iDistanceDropoff;
; 8798 : 	int iSettlerX, iSettlerY;
; 8799 : 	int iPathTurns;
; 8800 : 	int iValue;
; 8801 : 	int iDanger;
; 8802 : 
; 8803 : 	// Get coordinates for settler's plot
; 8804 : 	iSettlerX = pFoundingUnit->getX();

$LN108@lGetRecomm@2:
	mov	ecx, DWORD PTR _pFoundingUnit$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	DWORD PTR _iSettlerX$[ebp], edx

; 8805 : 	iSettlerY = pFoundingUnit->getY();

	mov	eax, DWORD PTR _pFoundingUnit$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	DWORD PTR _iSettlerY$[ebp], ecx

; 8806 : 
; 8807 : 	int iEvalDistance = GC.getSETTLER_EVALUATION_DISTANCE();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7252
	mov	DWORD PTR _iEvalDistance$[ebp], edx

; 8808 : 	int iDistanceDropoffMod = GC.getSETTLER_DISTANCE_DROPOFF_MODIFIER();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7256
	mov	DWORD PTR _iDistanceDropoffMod$[ebp], eax

; 8809 : #ifndef AUI_HEXSPACE_DX_LOOPS
; 8810 : 	int iBeginSearchX = iSettlerX - iEvalDistance;

	mov	ecx, DWORD PTR _iSettlerX$[ebp]
	sub	ecx, DWORD PTR _iEvalDistance$[ebp]
	mov	DWORD PTR _iBeginSearchX$[ebp], ecx

; 8811 : 	int iBeginSearchY = iSettlerY - iEvalDistance;

	mov	edx, DWORD PTR _iSettlerY$[ebp]
	sub	edx, DWORD PTR _iEvalDistance$[ebp]
	mov	DWORD PTR _iBeginSearchY$[ebp], edx

; 8812 : 	int iEndSearchX   = iSettlerX + iEvalDistance;

	mov	eax, DWORD PTR _iSettlerX$[ebp]
	add	eax, DWORD PTR _iEvalDistance$[ebp]
	mov	DWORD PTR _iEndSearchX$[ebp], eax

; 8813 : 	int iEndSearchY   = iSettlerY + iEvalDistance;

	mov	ecx, DWORD PTR _iSettlerY$[ebp]
	add	ecx, DWORD PTR _iEvalDistance$[ebp]
	mov	DWORD PTR _iEndSearchY$[ebp], ecx

; 8814 : 
; 8815 : 	CvMap& kMap = GC.getMap();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR _kMap$[ebp], edx

; 8816 : #endif
; 8817 : 
; 8818 : 	TeamTypes eUnitTeam = pFoundingUnit->getTeam();

	mov	ecx, DWORD PTR _pFoundingUnit$[ebp]
	call	?getTeam@CvUnit@@QBE?AW4TeamTypes@@XZ	; CvUnit::getTeam
	mov	DWORD PTR _eUnitTeam$[ebp], eax

; 8819 : 
; 8820 : 	CvCity* pCapital = pkPlayer->getCapitalCity();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pCapital$[ebp], eax

; 8821 : 	int iCapArea = NULL;

	mov	DWORD PTR _iCapArea$[ebp], 0

; 8822 : 	if(pCapital)

	cmp	DWORD PTR _pCapital$[ebp], 0
	je	SHORT $LN24@lGetRecomm@2

; 8823 : 	{
; 8824 : 		iCapArea = pCapital->getArea();

	mov	ecx, DWORD PTR _pCapital$[ebp]
	call	?getArea@CvCity@@QBEHXZ			; CvCity::getArea
	mov	DWORD PTR _iCapArea$[ebp], eax
$LN24@lGetRecomm@2:

; 8825 : 	}
; 8826 : 
; 8827 : 	WeightedPlotVector aBestPlots;

	lea	ecx, DWORD PTR _aBestPlots$[ebp]
	call	??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 8828 : 	aBestPlots.reserve((iEvalDistance+1) * 2);

	mov	eax, DWORD PTR _iEvalDistance$[ebp]
	lea	ecx, DWORD PTR [eax+eax+2]
	push	ecx
	lea	ecx, DWORD PTR _aBestPlots$[ebp]
	call	?GrowSizeToFit@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::GrowSizeToFit

; 8829 : 
; 8830 : #ifdef AUI_HEXSPACE_DX_LOOPS
; 8831 : 	int iMaxDX, iDX;
; 8832 : 	CvPlot* pPlot;
; 8833 : 	for (int iDY = -iEvalDistance; iDY <= iEvalDistance; iDY++)
; 8834 : 	{
; 8835 : 		iMaxDX = iEvalDistance - MAX(0, iDY);
; 8836 : 		for (iDX = -iEvalDistance - MIN(0, iDY); iDX <= iMaxDX; iDX++) // MIN() and MAX() stuff is to reduce loops (hexspace!)
; 8837 : 		{
; 8838 : 			// No need for range check because loops are set up properly
; 8839 : 			pPlot = plotXY(iSettlerX, iSettlerY, iDX, iDY);
; 8840 : #else
; 8841 : 	for(int iPlotX = iBeginSearchX; iPlotX != iEndSearchX; iPlotX++)

	mov	edx, DWORD PTR _iBeginSearchX$[ebp]
	mov	DWORD PTR _iPlotX$234274[ebp], edx
	jmp	SHORT $LN23@lGetRecomm@2
$LN22@lGetRecomm@2:
	mov	eax, DWORD PTR _iPlotX$234274[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlotX$234274[ebp], eax
$LN23@lGetRecomm@2:
	mov	ecx, DWORD PTR _iPlotX$234274[ebp]
	cmp	ecx, DWORD PTR _iEndSearchX$[ebp]
	je	$LN21@lGetRecomm@2

; 8842 : 	{
; 8843 : 		for(int iPlotY = iBeginSearchY; iPlotY != iEndSearchY; iPlotY++)

	mov	edx, DWORD PTR _iBeginSearchY$[ebp]
	mov	DWORD PTR _iPlotY$234278[ebp], edx
	jmp	SHORT $LN20@lGetRecomm@2
$LN19@lGetRecomm@2:
	mov	eax, DWORD PTR _iPlotY$234278[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlotY$234278[ebp], eax
$LN20@lGetRecomm@2:
	mov	ecx, DWORD PTR _iPlotY$234278[ebp]
	cmp	ecx, DWORD PTR _iEndSearchY$[ebp]
	je	$LN18@lGetRecomm@2

; 8844 : 		{
; 8845 : 			CvPlot* pPlot = kMap.plot(iPlotX, iPlotY);

	cmp	DWORD PTR _iPlotX$234274[ebp], -2147483647 ; 80000001H
	je	SHORT $LN132@lGetRecomm@2
	cmp	DWORD PTR _iPlotY$234278[ebp], -2147483647 ; 80000001H
	jne	SHORT $LN133@lGetRecomm@2
$LN132@lGetRecomm@2:
	mov	DWORD PTR $T250779[ebp], 0
	jmp	$LN134@lGetRecomm@2
$LN133@lGetRecomm@2:
	mov	edx, DWORD PTR _kMap$[ebp]
	mov	al, BYTE PTR [edx+4056]
	mov	BYTE PTR $T250711[ebp], al
	mov	ecx, DWORD PTR _kMap$[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T250715[ebp], edx
	movzx	eax, BYTE PTR $T250711[ebp]
	test	eax, eax
	je	SHORT $LN145@lGetRecomm@2
	cmp	DWORD PTR _iPlotX$234274[ebp], 0
	jge	SHORT $LN144@lGetRecomm@2
	mov	eax, DWORD PTR _iPlotX$234274[ebp]
	cdq
	idiv	DWORD PTR $T250715[ebp]
	add	edx, DWORD PTR $T250715[ebp]
	mov	DWORD PTR _iMapX$250750[ebp], edx
	jmp	SHORT $LN146@lGetRecomm@2
	jmp	SHORT $LN145@lGetRecomm@2
$LN144@lGetRecomm@2:
	mov	ecx, DWORD PTR _iPlotX$234274[ebp]
	cmp	ecx, DWORD PTR $T250715[ebp]
	jl	SHORT $LN145@lGetRecomm@2
	mov	eax, DWORD PTR _iPlotX$234274[ebp]
	cdq
	idiv	DWORD PTR $T250715[ebp]
	mov	DWORD PTR _iMapX$250750[ebp], edx
	jmp	SHORT $LN146@lGetRecomm@2
$LN145@lGetRecomm@2:
	mov	edx, DWORD PTR _iPlotX$234274[ebp]
	mov	DWORD PTR _iMapX$250750[ebp], edx
$LN146@lGetRecomm@2:
	mov	eax, DWORD PTR _kMap$[ebp]
	mov	cl, BYTE PTR [eax+4057]
	mov	BYTE PTR $T250726[ebp], cl
	mov	edx, DWORD PTR _kMap$[ebp]
	mov	eax, DWORD PTR [edx+4024]
	mov	DWORD PTR $T250730[ebp], eax
	movzx	ecx, BYTE PTR $T250726[ebp]
	test	ecx, ecx
	je	SHORT $LN155@lGetRecomm@2
	cmp	DWORD PTR _iPlotY$234278[ebp], 0
	jge	SHORT $LN154@lGetRecomm@2
	mov	eax, DWORD PTR _iPlotY$234278[ebp]
	cdq
	idiv	DWORD PTR $T250730[ebp]
	add	edx, DWORD PTR $T250730[ebp]
	mov	DWORD PTR _iMapY$250751[ebp], edx
	jmp	SHORT $LN156@lGetRecomm@2
	jmp	SHORT $LN155@lGetRecomm@2
$LN154@lGetRecomm@2:
	mov	edx, DWORD PTR _iPlotY$234278[ebp]
	cmp	edx, DWORD PTR $T250730[ebp]
	jl	SHORT $LN155@lGetRecomm@2
	mov	eax, DWORD PTR _iPlotY$234278[ebp]
	cdq
	idiv	DWORD PTR $T250730[ebp]
	mov	DWORD PTR _iMapY$250751[ebp], edx
	jmp	SHORT $LN156@lGetRecomm@2
$LN155@lGetRecomm@2:
	mov	eax, DWORD PTR _iPlotY$234278[ebp]
	mov	DWORD PTR _iMapY$250751[ebp], eax
$LN156@lGetRecomm@2:
	mov	ecx, DWORD PTR _iMapY$250751[ebp]
	push	ecx
	mov	edx, DWORD PTR _iMapX$250750[ebp]
	push	edx
	mov	ecx, DWORD PTR _kMap$[ebp]
	call	?isPlot@CvMap@@QBEHHH@Z			; CvMap::isPlot
	test	eax, eax
	je	SHORT $LN136@lGetRecomm@2
	mov	eax, DWORD PTR _kMap$[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T250742[ebp], ecx
	mov	edx, DWORD PTR _iMapY$250751[ebp]
	imul	edx, DWORD PTR $T250742[ebp]
	add	edx, DWORD PTR _iMapX$250750[ebp]
	imul	edx, 484				; 000001e4H
	mov	eax, DWORD PTR _kMap$[ebp]
	add	edx, DWORD PTR [eax+4068]
	mov	DWORD PTR tv406[ebp], edx
	jmp	SHORT $LN137@lGetRecomm@2
$LN136@lGetRecomm@2:
	mov	DWORD PTR tv406[ebp], 0
$LN137@lGetRecomm@2:
	mov	ecx, DWORD PTR tv406[ebp]
	mov	DWORD PTR $T250779[ebp], ecx
$LN134@lGetRecomm@2:
	mov	edx, DWORD PTR $T250779[ebp]
	mov	DWORD PTR _pPlot$234282[ebp], edx

; 8846 : #endif
; 8847 : 			if(!pPlot)

	cmp	DWORD PTR _pPlot$234282[ebp], 0
	jne	SHORT $LN17@lGetRecomm@2

; 8848 : 			{
; 8849 : 				continue;

	jmp	$LN19@lGetRecomm@2
$LN17@lGetRecomm@2:

; 8850 : 			}
; 8851 : 
; 8852 : 			//if (!pPlot->isVisible(pUnit->getTeam(), false /*bDebug*/))
; 8853 : 			if(!pPlot->isRevealed(eUnitTeam))

	mov	eax, DWORD PTR _eUnitTeam$[ebp]
	shr	eax, 5
	mov	DWORD PTR _uiOffset$250788[ebp], eax
	mov	ecx, DWORD PTR _uiOffset$250788[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR _eUnitTeam$[ebp]
	sub	edx, ecx
	mov	eax, 1
	mov	ecx, edx
	shl	eax, cl
	mov	ecx, DWORD PTR _uiOffset$250788[ebp]
	mov	edx, DWORD PTR _pPlot$234282[ebp]
	and	eax, DWORD PTR [edx+ecx*4+8]
	setne	al
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN16@lGetRecomm@2

; 8854 : 			{
; 8855 : 				continue;

	jmp	$LN19@lGetRecomm@2
$LN16@lGetRecomm@2:

; 8856 : 			}
; 8857 : 
; 8858 : 			// Can't actually found here!
; 8859 : #ifdef AUI_HEXSPACE_DX_LOOPS
; 8860 : 			if (!pkPlayer->canFound(pPlot->getX(), pPlot->getY()))
; 8861 : #else
; 8862 : 			if(!pkPlayer->canFound(iPlotX, iPlotY))

	push	0
	mov	edx, DWORD PTR _iPlotY$234278[ebp]
	push	edx
	mov	eax, DWORD PTR _iPlotX$234274[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?canFound@CvPlayer@@QBE_NHH_N@Z		; CvPlayer::canFound
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN168@lGetRecomm@2

; 8863 : #endif
; 8864 : 			{
; 8865 : 				continue;

	jmp	$LN19@lGetRecomm@2

; 8866 : 			}
; 8867 : 
; 8868 : 			//// This operation is just for settling on the same continent as the capital
; 8869 : 			//if(pCapital && pPlot->getArea() != iCapArea)
; 8870 : 			//{
; 8871 : 			//	continue;
; 8872 : 			//}
; 8873 : 
; 8874 : 			// Do we have to check if this is a safe place to go?
; 8875 : 			if(!pPlot->isVisibleEnemyUnit(pkPlayer->GetID()))

$LN168@lGetRecomm@2:
	mov	edx, DWORD PTR _pkPlayer$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T250798[ebp], eax
	mov	ecx, DWORD PTR $T250798[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlot$234282[ebp]
	call	?isVisibleEnemyUnit@CvPlot@@QBE_NW4PlayerTypes@@@Z ; CvPlot::isVisibleEnemyUnit
	movzx	edx, al
	test	edx, edx
	jne	$LN14@lGetRecomm@2

; 8876 : 			{
; 8877 : #ifdef AUI_HEXSPACE_DX_LOOPS
; 8878 : 				iSettlerDistance = hexDistance(iDX, iDY);
; 8879 : #else
; 8880 : 				iSettlerDistance = plotDistance(iPlotX, iPlotY, iSettlerX, iSettlerY);

	mov	eax, DWORD PTR _iSettlerY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iSettlerX$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iPlotY$234278[ebp]
	push	edx
	mov	eax, DWORD PTR _iPlotX$234274[ebp]
	push	eax
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H
	mov	DWORD PTR _iSettlerDistance$[ebp], eax

; 8881 : #endif
; 8882 : 
; 8883 : 				//iValue = pPlot->getFoundValue(pkPlayer->GetID());
; 8884 : #ifdef AUI_HEXSPACE_DX_LOOPS
; 8885 : 				iValue = pkPlayer->AI_foundValue(pPlot->getX(), pPlot->getY(), -1, false);
; 8886 : #else
; 8887 : 				iValue = pkPlayer->AI_foundValue(iPlotX, iPlotY, -1, false);

	push	0
	push	-1
	mov	ecx, DWORD PTR _iPlotY$234278[ebp]
	push	ecx
	mov	edx, DWORD PTR _iPlotX$234274[ebp]
	push	edx
	mov	eax, DWORD PTR _pkPlayer$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	mov	DWORD PTR _iValue$[ebp], eax

; 8888 : #endif
; 8889 : 
; 8890 : 				iDistanceDropoff = (iDistanceDropoffMod * iSettlerDistance) / iEvalDistance;

	mov	eax, DWORD PTR _iDistanceDropoffMod$[ebp]
	imul	eax, DWORD PTR _iSettlerDistance$[ebp]
	cdq
	idiv	DWORD PTR _iEvalDistance$[ebp]
	mov	DWORD PTR _iDistanceDropoff$[ebp], eax

; 8891 : 				iValue = iValue * (100 - iDistanceDropoff) / 100;

	mov	ecx, 100				; 00000064H
	sub	ecx, DWORD PTR _iDistanceDropoff$[ebp]
	mov	eax, ecx
	imul	eax, DWORD PTR _iValue$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iValue$[ebp], eax

; 8892 : 				iDanger = pkPlayer->GetPlotDanger(*pPlot);

	mov	edx, DWORD PTR _pPlot$234282[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlotDanger@CvPlayer@@QBEHAAVCvPlot@@@Z ; CvPlayer::GetPlotDanger
	mov	DWORD PTR _iDanger$[ebp], eax

; 8893 : 				if(iDanger < 1000)

	cmp	DWORD PTR _iDanger$[ebp], 1000		; 000003e8H
	jge	SHORT $LN14@lGetRecomm@2

; 8894 : 				{
; 8895 : 					iValue = ((1000 - iDanger) * iValue) / 1000;

	mov	eax, 1000				; 000003e8H
	sub	eax, DWORD PTR _iDanger$[ebp]
	imul	eax, DWORD PTR _iValue$[ebp]
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	ecx
	mov	DWORD PTR _iValue$[ebp], eax

; 8896 : 
; 8897 : 					aBestPlots.push_back(pPlot, iValue);

	mov	DWORD PTR _weightedElem$250877[ebp], 0
	mov	DWORD PTR _weightedElem$250877[ebp+4], 0
	mov	edx, DWORD PTR _pPlot$234282[ebp]
	mov	DWORD PTR _weightedElem$250877[ebp], edx
	mov	eax, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _weightedElem$250877[ebp+4], eax
	lea	ecx, DWORD PTR _weightedElem$250877[ebp]
	push	ecx
	lea	ecx, DWORD PTR _aBestPlots$[ebp]
	call	?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@Z ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::push_back
$LN14@lGetRecomm@2:

; 8898 : 				}
; 8899 : 			}
; 8900 : 		}

	jmp	$LN19@lGetRecomm@2
$LN18@lGetRecomm@2:

; 8901 : 	}

	jmp	$LN22@lGetRecomm@2
$LN21@lGetRecomm@2:

; 8902 : 
; 8903 : 	int iReturnSize = 0;

	mov	DWORD PTR _iReturnSize$[ebp], 0

; 8904 : 	int iFailLimit = 20;		// Paths can be really slow to create, bail if we fail too many times.

	mov	DWORD PTR _iFailLimit$[ebp], 20		; 00000014H

; 8905 : 	#define MAX_RECCOMEND_RETURN 3
; 8906 : 	CvPlot* aPlots[MAX_RECCOMEND_RETURN];
; 8907 : 
; 8908 : 	uint uiListSize;
; 8909 : 	if ((uiListSize = aBestPlots.size()) > 0)

	mov	edx, DWORD PTR _aBestPlots$[ebp+4]
	mov	DWORD PTR $T250885[ebp], edx
	mov	eax, DWORD PTR $T250885[ebp]
	mov	DWORD PTR _uiListSize$[ebp], eax
	cmp	DWORD PTR _uiListSize$[ebp], 0
	jbe	$LN12@lGetRecomm@2

; 8910 : 	{
; 8911 : 		aBestPlots.SortItems();	// highest score will be first.

	lea	ecx, DWORD PTR _aBestPlots$[ebp]
	call	?SortItems@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAEXXZ ; CvWeightedVector<CvPlot *,800,1>::SortItems

; 8912 : 		for (uint i = 0; i < uiListSize; ++i )	

	mov	DWORD PTR _i$234293[ebp], 0
	jmp	SHORT $LN11@lGetRecomm@2
$LN10@lGetRecomm@2:
	mov	ecx, DWORD PTR _i$234293[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$234293[ebp], ecx
$LN11@lGetRecomm@2:
	mov	edx, DWORD PTR _i$234293[ebp]
	cmp	edx, DWORD PTR _uiListSize$[ebp]
	jae	SHORT $LN12@lGetRecomm@2

; 8913 : 		{
; 8914 : #ifdef AUI_HEXSPACE_DX_LOOPS
; 8915 : 			pPlot = aBestPlots.GetElement(i);
; 8916 : #else
; 8917 : 			CvPlot* pPlot = aBestPlots.GetElement(i);

	mov	eax, DWORD PTR _i$234293[ebp]
	mov	ecx, DWORD PTR _aBestPlots$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8]
	mov	DWORD PTR _pPlot$234297[ebp], edx

; 8918 : #endif
; 8919 : 			bool bCanFindPath = pFoundingUnit->GeneratePath(pPlot, MOVE_TERRITORY_NO_UNEXPLORED, true, &iPathTurns);

	lea	eax, DWORD PTR _iPathTurns$[ebp]
	push	eax
	push	1
	push	1
	mov	ecx, DWORD PTR _pPlot$234297[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pFoundingUnit$[ebp]
	call	?GeneratePath@CvUnit@@QBE_NPBVCvPlot@@H_NPAH@Z ; CvUnit::GeneratePath
	mov	BYTE PTR _bCanFindPath$234298[ebp], al

; 8920 : 			if(bCanFindPath)

	movzx	edx, BYTE PTR _bCanFindPath$234298[ebp]
	test	edx, edx
	je	SHORT $LN8@lGetRecomm@2

; 8921 : 			{
; 8922 : 				aPlots[iReturnSize] = pPlot;

	mov	eax, DWORD PTR _iReturnSize$[ebp]
	mov	ecx, DWORD PTR _pPlot$234297[ebp]
	mov	DWORD PTR _aPlots$[ebp+eax*4], ecx

; 8923 : 				++iReturnSize;

	mov	edx, DWORD PTR _iReturnSize$[ebp]
	add	edx, 1
	mov	DWORD PTR _iReturnSize$[ebp], edx

; 8924 : 				if (iReturnSize == MAX_RECCOMEND_RETURN)

	cmp	DWORD PTR _iReturnSize$[ebp], 3
	jne	SHORT $LN7@lGetRecomm@2

; 8925 : 					break;

	jmp	SHORT $LN12@lGetRecomm@2
$LN7@lGetRecomm@2:

; 8926 : 			}
; 8927 : 			else

	jmp	SHORT $LN6@lGetRecomm@2
$LN8@lGetRecomm@2:

; 8928 : 			{
; 8929 : 				if (iFailLimit-- == 0)

	mov	eax, DWORD PTR _iFailLimit$[ebp]
	mov	ecx, DWORD PTR _iFailLimit$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _iFailLimit$[ebp], ecx
	test	eax, eax
	jne	SHORT $LN6@lGetRecomm@2

; 8930 : 					break;

	jmp	SHORT $LN12@lGetRecomm@2
$LN6@lGetRecomm@2:

; 8931 : 			}
; 8932 : 		}

	jmp	$LN10@lGetRecomm@2
$LN12@lGetRecomm@2:

; 8933 : 	}
; 8934 : 
; 8935 : 	lua_createtable(L, iReturnSize, 0);

	push	0
	mov	edx, DWORD PTR _iReturnSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 8936 : 	if (iReturnSize > 0)

	cmp	DWORD PTR _iReturnSize$[ebp], 0
	jle	SHORT $LN4@lGetRecomm@2

; 8937 : 	{
; 8938 : 		int iPositionIndex = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _iPositionIndex$234304[ebp], eax

; 8939 : 		for(int i = 0; i < iReturnSize; i++)

	mov	DWORD PTR _i$234305[ebp], 0
	jmp	SHORT $LN3@lGetRecomm@2
$LN2@lGetRecomm@2:
	mov	edx, DWORD PTR _i$234305[ebp]
	add	edx, 1
	mov	DWORD PTR _i$234305[ebp], edx
$LN3@lGetRecomm@2:
	mov	eax, DWORD PTR _i$234305[ebp]
	cmp	eax, DWORD PTR _iReturnSize$[ebp]
	jge	SHORT $LN4@lGetRecomm@2

; 8940 : 		{
; 8941 : 			CvLuaPlot::Push(L, aPlots[i]);

	mov	ecx, DWORD PTR _i$234305[ebp]
	mov	edx, DWORD PTR _aPlots$[ebp+ecx*4]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8

; 8942 : 			lua_rawseti(L, iPositionIndex, i + 1);

	mov	ecx, DWORD PTR _i$234305[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _iPositionIndex$234304[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawseti
	add	esp, 12					; 0000000cH

; 8943 : 		}

	jmp	SHORT $LN2@lGetRecomm@2
$LN4@lGetRecomm@2:

; 8944 : 	}
; 8945 : 
; 8946 : 	return 1;

	mov	DWORD PTR $T250498[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _aBestPlots$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::~FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _selectedUnits$[ebp]
	mov	DWORD PTR $T250985[ebp], ecx
	cmp	DWORD PTR $T250985[ebp], 0
	je	SHORT $LN283@lGetRecomm@2
	mov	edx, DWORD PTR $T250985[ebp]
	mov	DWORD PTR _inst$250989[ebp], edx
	mov	eax, DWORD PTR _inst$250989[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$250989[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN283@lGetRecomm@2:
	mov	eax, DWORD PTR $T250498[ebp]
$LN30@lGetRecomm@2:

; 8947 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _selectedUnits$[ebp]
	jmp	??1?$CvEnumerator@VICvUnit1@@@@QAE@XZ
__unwindfunclet$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _pUnit$234036[ebp]
	jmp	??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ	; std::auto_ptr<ICvUnit1>::~auto_ptr<ICvUnit1>
__unwindfunclet$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z$2:
	lea	ecx, DWORD PTR _aBestPlots$[ebp]
	jmp	??1?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAE@XZ ; CvWeightedVector<CvPlot *,800,1>::~CvWeightedVector<CvPlot *,800,1>
__ehhandler$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-6856]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetRecommendedFoundCityPlots
PUBLIC	?dyWrap@@YAHH@Z					; dyWrap
PUBLIC	?dxWrap@@YAHH@Z					; dxWrap
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
;	COMDAT ?plotDistance@@YAHHHHH@Z
_TEXT	SEGMENT
tv157 = -92						; size = 4
tv138 = -88						; size = 4
tv135 = -84						; size = 4
$T251081 = -80						; size = 4
$T251055 = -60						; size = 4
_iDY$ = -24						; size = 4
_iDX$ = -20						; size = 4
_iWrappedDX$ = -16					; size = 4
_iHX1$ = -12						; size = 4
_iHX2$ = -8						; size = 4
_iWrappedDY$ = -4					; size = 4
_iX1$ = 8						; size = 4
_iY1$ = 12						; size = 4
_iX2$ = 16						; size = 4
_iY2$ = 20						; size = 4
?plotDistance@@YAHHHHH@Z PROC				; plotDistance, COMDAT

; 144  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH

; 145  : 	int iDX;
; 146  : 	int iWrappedDX = dxWrap(iX2 - iX1);

	mov	eax, DWORD PTR _iX2$[ebp]
	sub	eax, DWORD PTR _iX1$[ebp]
	push	eax
	call	?dxWrap@@YAHH@Z				; dxWrap
	add	esp, 4
	mov	DWORD PTR _iWrappedDX$[ebp], eax

; 147  : 	int iWrappedDY = dyWrap(iY2 - iY1);

	mov	ecx, DWORD PTR _iY2$[ebp]
	sub	ecx, DWORD PTR _iY1$[ebp]
	push	ecx
	call	?dyWrap@@YAHH@Z				; dyWrap
	add	esp, 4
	mov	DWORD PTR _iWrappedDY$[ebp], eax

; 148  : 	int iDY = abs(iWrappedDY);

	mov	eax, DWORD PTR _iWrappedDY$[ebp]
	cdq
	xor	eax, edx
	sub	eax, edx
	mov	DWORD PTR _iDY$[ebp], eax

; 149  : 
; 150  : 	// convert to hex-space coordinates - the coordinate system axes are E and NE (not orthogonal)
; 151  : 	int iHX1 = xToHexspaceX(iX1, iY1);

	cmp	DWORD PTR _iY1$[ebp], 0
	jl	SHORT $LN35@plotDistan
	mov	edx, DWORD PTR _iY1$[ebp]
	sar	edx, 1
	mov	DWORD PTR tv135[ebp], edx
	jmp	SHORT $LN33@plotDistan
$LN35@plotDistan:
	mov	eax, DWORD PTR _iY1$[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR tv135[ebp], eax
$LN33@plotDistan:
	mov	eax, DWORD PTR _iX1$[ebp]
	sub	eax, DWORD PTR tv135[ebp]
	mov	DWORD PTR _iHX1$[ebp], eax

; 152  : 	int iHX2 = xToHexspaceX(iX1 + iWrappedDX, iY1 + iWrappedDY);

	mov	ecx, DWORD PTR _iY1$[ebp]
	add	ecx, DWORD PTR _iWrappedDY$[ebp]
	mov	DWORD PTR $T251055[ebp], ecx
	js	SHORT $LN39@plotDistan
	mov	edx, DWORD PTR $T251055[ebp]
	sar	edx, 1
	mov	DWORD PTR tv138[ebp], edx
	jmp	SHORT $LN37@plotDistan
$LN39@plotDistan:
	mov	eax, DWORD PTR $T251055[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR tv138[ebp], eax
$LN37@plotDistan:
	mov	eax, DWORD PTR _iX1$[ebp]
	add	eax, DWORD PTR _iWrappedDX$[ebp]
	sub	eax, DWORD PTR tv138[ebp]
	mov	DWORD PTR _iHX2$[ebp], eax

; 153  : 
; 154  : 	iDX = abs(dxWrap(iHX2 - iHX1));

	mov	ecx, DWORD PTR _iHX2$[ebp]
	sub	ecx, DWORD PTR _iHX1$[ebp]
	push	ecx
	call	?dxWrap@@YAHH@Z				; dxWrap
	add	esp, 4
	cdq
	xor	eax, edx
	sub	eax, edx
	mov	DWORD PTR _iDX$[ebp], eax

; 155  : 
; 156  : #ifdef NQM_GAME_CORE_UTILS_OPTIMIZATIONS
; 157  : 	if (((iHX2 - iHX1) ^ (iWrappedDY)) >= 0)  // the signs match
; 158  : #else
; 159  : 	if((iHX2 - iHX1 >= 0) == (iWrappedDY >= 0))  // the signs match

	mov	edx, DWORD PTR _iHX2$[ebp]
	sub	edx, DWORD PTR _iHX1$[ebp]
	xor	eax, eax
	test	edx, edx
	setge	al
	xor	ecx, ecx
	cmp	DWORD PTR _iWrappedDY$[ebp], 0
	setge	cl
	cmp	eax, ecx
	jne	SHORT $LN2@plotDistan

; 160  : #endif
; 161  : 	{
; 162  : 		return iDX + iDY;

	mov	eax, DWORD PTR _iDX$[ebp]
	add	eax, DWORD PTR _iDY$[ebp]
	jmp	SHORT $LN3@plotDistan

; 163  : 	}
; 164  : 	else

	jmp	SHORT $LN3@plotDistan
$LN2@plotDistan:

; 165  : 	{
; 166  : #ifdef NQM_FAST_COMP
; 167  : 		return (MAX(iDX, iDY));
; 168  : #else
; 169  : 		return (std::max(iDX, iDY));

	mov	edx, DWORD PTR _iDX$[ebp]
	cmp	edx, DWORD PTR _iDY$[ebp]
	jge	SHORT $LN57@plotDistan
	lea	eax, DWORD PTR _iDY$[ebp]
	mov	DWORD PTR tv157[ebp], eax
	jmp	SHORT $LN58@plotDistan
$LN57@plotDistan:
	lea	ecx, DWORD PTR _iDX$[ebp]
	mov	DWORD PTR tv157[ebp], ecx
$LN58@plotDistan:
	mov	edx, DWORD PTR tv157[ebp]
	mov	DWORD PTR $T251081[ebp], edx
	mov	eax, DWORD PTR $T251081[ebp]
	mov	eax, DWORD PTR [eax]
$LN3@plotDistan:

; 170  : #endif
; 171  : 	}
; 172  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?plotDistance@@YAHHHHH@Z ENDP				; plotDistance
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?dxWrap@@YAHH@Z
_TEXT	SEGMENT
$T251105 = -16						; size = 4
$T251097 = -12						; size = 4
$T251093 = -5						; size = 1
_kMap$ = -4						; size = 4
_iDX$ = 8						; size = 4
?dxWrap@@YAHH@Z PROC					; dxWrap, COMDAT

; 73   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 74   : 	const CvMap& kMap = GC.getMap();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR _kMap$[ebp], eax

; 75   : 	return wrapCoordDifference(iDX, kMap.getGridWidth(), kMap.isWrapX());

	mov	ecx, DWORD PTR _kMap$[ebp]
	mov	dl, BYTE PTR [ecx+4056]
	mov	BYTE PTR $T251093[ebp], dl
	mov	eax, DWORD PTR _kMap$[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T251097[ebp], ecx
	movzx	edx, BYTE PTR $T251093[ebp]
	test	edx, edx
	je	SHORT $LN12@dxWrap
	mov	eax, DWORD PTR $T251097[ebp]
	shr	eax, 1
	cmp	DWORD PTR _iDX$[ebp], eax
	jle	SHORT $LN11@dxWrap
	mov	ecx, DWORD PTR _iDX$[ebp]
	sub	ecx, DWORD PTR $T251097[ebp]
	mov	DWORD PTR $T251105[ebp], ecx
	jmp	SHORT $LN13@dxWrap
	jmp	SHORT $LN12@dxWrap
$LN11@dxWrap:
	mov	edx, DWORD PTR $T251097[ebp]
	shr	edx, 1
	neg	edx
	cmp	DWORD PTR _iDX$[ebp], edx
	jge	SHORT $LN12@dxWrap
	mov	eax, DWORD PTR _iDX$[ebp]
	add	eax, DWORD PTR $T251097[ebp]
	mov	DWORD PTR $T251105[ebp], eax
	jmp	SHORT $LN13@dxWrap
$LN12@dxWrap:
	mov	ecx, DWORD PTR _iDX$[ebp]
	mov	DWORD PTR $T251105[ebp], ecx
$LN13@dxWrap:
	mov	eax, DWORD PTR $T251105[ebp]

; 76   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?dxWrap@@YAHH@Z ENDP					; dxWrap
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?dyWrap@@YAHH@Z
_TEXT	SEGMENT
$T251126 = -16						; size = 4
$T251118 = -12						; size = 4
$T251114 = -5						; size = 1
_kMap$ = -4						; size = 4
_iDY$ = 8						; size = 4
?dyWrap@@YAHH@Z PROC					; dyWrap, COMDAT

; 79   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 80   : 	const CvMap& kMap = GC.getMap();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR _kMap$[ebp], eax

; 81   : 	return wrapCoordDifference(iDY, kMap.getGridHeight(), kMap.isWrapY());

	mov	ecx, DWORD PTR _kMap$[ebp]
	mov	dl, BYTE PTR [ecx+4057]
	mov	BYTE PTR $T251114[ebp], dl
	mov	eax, DWORD PTR _kMap$[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T251118[ebp], ecx
	movzx	edx, BYTE PTR $T251114[ebp]
	test	edx, edx
	je	SHORT $LN12@dyWrap
	mov	eax, DWORD PTR $T251118[ebp]
	shr	eax, 1
	cmp	DWORD PTR _iDY$[ebp], eax
	jle	SHORT $LN11@dyWrap
	mov	ecx, DWORD PTR _iDY$[ebp]
	sub	ecx, DWORD PTR $T251118[ebp]
	mov	DWORD PTR $T251126[ebp], ecx
	jmp	SHORT $LN13@dyWrap
	jmp	SHORT $LN12@dyWrap
$LN11@dyWrap:
	mov	edx, DWORD PTR $T251118[ebp]
	shr	edx, 1
	neg	edx
	cmp	DWORD PTR _iDY$[ebp], edx
	jge	SHORT $LN12@dyWrap
	mov	eax, DWORD PTR _iDY$[ebp]
	add	eax, DWORD PTR $T251118[ebp]
	mov	DWORD PTR $T251126[ebp], eax
	jmp	SHORT $LN13@dyWrap
$LN12@dyWrap:
	mov	ecx, DWORD PTR _iDY$[ebp]
	mov	DWORD PTR $T251126[ebp], ecx
$LN13@dyWrap:
	mov	eax, DWORD PTR $T251126[ebp]

; 82   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?dyWrap@@YAHH@Z ENDP					; dyWrap
_TEXT	ENDS
EXTRN	_lua_pushnil:PROC
EXTRN	?getBuildTurnsLeft@CvPlot@@QBEHW4BuildTypes@@W4PlayerTypes@@HH@Z:PROC ; CvPlot::getBuildTurnsLeft
EXTRN	?getImprovement@CvBuildInfo@@QBEHXZ:PROC	; CvBuildInfo::getImprovement
EXTRN	?getBuildInfo@CvGlobals@@QAEPAVCvBuildInfo@@W4BuildTypes@@@Z:PROC ; CvGlobals::getBuildInfo
EXTRN	?getNumBuildInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumBuildInfos
EXTRN	?IsImprovementResourceTrade@CvImprovementEntry@@QBE_NH@Z:PROC ; CvImprovementEntry::IsImprovementResourceTrade
EXTRN	?getImprovementInfo@CvGlobals@@QAEPAVCvImprovementEntry@@W4ImprovementTypes@@@Z:PROC ; CvGlobals::getImprovementInfo
EXTRN	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ:PROC ; CvResourceInfo::getResourceUsage
EXTRN	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z:PROC ; CvGlobals::getResourceInfo
EXTRN	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z:PROC ; CvPlot::getResourceType
EXTRN	?GetPlots@CvPlayer@@QAEAAV?$FStaticVector@H$0DJAA@$00$0BCJ@$0A@@@XZ:PROC ; CvPlayer::GetPlots
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
;	COMDAT ?lGetUnimprovedAvailableLuxuryResource@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv232 = -92						; size = 4
$T251175 = -88						; size = 4
$T251166 = -84						; size = 4
$T251157 = -80						; size = 4
$T251150 = -76						; size = 4
$T251143 = -72						; size = 4
$T251139 = -68						; size = 4
$T251132 = -64						; size = 4
_pkImprovementInfo$234344 = -60				; size = 4
_eImprovement$234341 = -56				; size = 4
_eBuild$234337 = -52					; size = 4
_iBuildTurnsLeft$234348 = -48				; size = 4
_buildInfo$234339 = -44					; size = 4
_iBuildIndex$234333 = -40				; size = 4
_pkImprovement$234330 = -36				; size = 4
_eExistingPlotImprovement$234328 = -32			; size = 4
_pPlot$234321 = -28					; size = 4
_eResource$234322 = -24					; size = 4
_pkResource$234324 = -20				; size = 4
_uiPlotIndex$234316 = -16				; size = 4
_pResultPlot$ = -12					; size = 4
_aiPlots$ = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetUnimprovedAvailableLuxuryResource@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnimprovedAvailableLuxuryResource, COMDAT

; 8952 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH

; 8953 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 8954 : 
; 8955 : 	CvPlot* pResultPlot = NULL;

	mov	DWORD PTR _pResultPlot$[ebp], 0

; 8956 : 
; 8957 : 	const CvPlotsVector& aiPlots = pkPlayer->GetPlots();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlots@CvPlayer@@QAEAAV?$FStaticVector@H$0DJAA@$00$0BCJ@$0A@@@XZ ; CvPlayer::GetPlots
	mov	DWORD PTR _aiPlots$[ebp], eax

; 8958 : 	// go through all the plots the player has under their control
; 8959 : 	for(uint uiPlotIndex = 0; uiPlotIndex < aiPlots.size(); uiPlotIndex++)

	mov	DWORD PTR _uiPlotIndex$234316[ebp], 0
	jmp	SHORT $LN23@lGetUnimpr
$LN22@lGetUnimpr:
	mov	ecx, DWORD PTR _uiPlotIndex$234316[ebp]
	add	ecx, 1
	mov	DWORD PTR _uiPlotIndex$234316[ebp], ecx
$LN23@lGetUnimpr:
	mov	edx, DWORD PTR _aiPlots$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T251132[ebp], eax
	mov	ecx, DWORD PTR _uiPlotIndex$234316[ebp]
	cmp	ecx, DWORD PTR $T251132[ebp]
	jae	$LN21@lGetUnimpr

; 8960 : 	{
; 8961 : 		// when we encounter the first plot that is invalid, the rest of the list will be invalid
; 8962 : 		if(aiPlots[uiPlotIndex] == -1)

	mov	edx, DWORD PTR _aiPlots$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _uiPlotIndex$234316[ebp]
	cmp	DWORD PTR [eax+ecx*4], -1
	jne	SHORT $LN20@lGetUnimpr

; 8963 : 		{
; 8964 : 			break;

	jmp	$LN21@lGetUnimpr
$LN20@lGetUnimpr:

; 8965 : 		}
; 8966 : 
; 8967 : 		CvPlot* pPlot = GC.getMap().plotByIndex(aiPlots[uiPlotIndex]);

	mov	edx, DWORD PTR _aiPlots$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _uiPlotIndex$234316[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR $T251139[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T251143[ebp], eax
	mov	ecx, DWORD PTR $T251139[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T251157[ebp], edx
	cmp	DWORD PTR $T251157[ebp], 0
	jl	SHORT $LN36@lGetUnimpr
	mov	eax, DWORD PTR $T251143[ebp]
	mov	ecx, DWORD PTR [eax+4028]
	mov	DWORD PTR $T251150[ebp], ecx
	mov	edx, DWORD PTR $T251157[ebp]
	cmp	edx, DWORD PTR $T251150[ebp]
	jge	SHORT $LN36@lGetUnimpr
	mov	eax, DWORD PTR $T251157[ebp]
	imul	eax, 484				; 000001e4H
	mov	ecx, DWORD PTR $T251143[ebp]
	add	eax, DWORD PTR [ecx+4068]
	mov	DWORD PTR tv232[ebp], eax
	jmp	SHORT $LN34@lGetUnimpr
$LN36@lGetUnimpr:
	mov	DWORD PTR tv232[ebp], 0
$LN34@lGetUnimpr:
	mov	edx, DWORD PTR tv232[ebp]
	mov	DWORD PTR _pPlot$234321[ebp], edx

; 8968 : #ifdef AUI_WARNING_FIXES
; 8969 : 		if (!pPlot)
; 8970 : 			continue;
; 8971 : #endif
; 8972 : 
; 8973 : 		// check to see if a resource is here. If not, bail out!
; 8974 : 		ResourceTypes eResource = pPlot->getResourceType(pkPlayer->getTeam());

	mov	eax, DWORD PTR _pkPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T251166[ebp], eax
	mov	edx, DWORD PTR $T251166[ebp]
	push	edx
	mov	ecx, DWORD PTR _pPlot$234321[ebp]
	call	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z ; CvPlot::getResourceType
	mov	DWORD PTR _eResource$234322[ebp], eax

; 8975 : 		if(eResource == NO_RESOURCE)

	cmp	DWORD PTR _eResource$234322[ebp], -1
	jne	SHORT $LN19@lGetUnimpr

; 8976 : 		{
; 8977 : 			continue;

	jmp	$LN22@lGetUnimpr
$LN19@lGetUnimpr:

; 8978 : 		}
; 8979 : 
; 8980 : 		CvResourceInfo* pkResource = GC.getResourceInfo(eResource);

	mov	eax, DWORD PTR _eResource$234322[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	DWORD PTR _pkResource$234324[ebp], eax

; 8981 : 		if(pkResource == NULL)

	cmp	DWORD PTR _pkResource$234324[ebp], 0
	jne	SHORT $LN18@lGetUnimpr

; 8982 : 		{
; 8983 : 			continue;

	jmp	$LN22@lGetUnimpr
$LN18@lGetUnimpr:

; 8984 : 		}
; 8985 : 
; 8986 : 		// Is this a Luxury Resource?
; 8987 : 		if(pkResource->getResourceUsage() != RESOURCEUSAGE_LUXURY)

	mov	ecx, DWORD PTR _pkResource$234324[ebp]
	call	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ ; CvResourceInfo::getResourceUsage
	cmp	eax, 2
	je	SHORT $LN17@lGetUnimpr

; 8988 : 		{
; 8989 : 			continue;

	jmp	$LN22@lGetUnimpr
$LN17@lGetUnimpr:

; 8990 : 		}
; 8991 : 
; 8992 : 		if(pkPlayer->getNumResourceTotal(eResource) > 0)

	push	1
	mov	ecx, DWORD PTR _eResource$234322[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getNumResourceTotal@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceTotal
	test	eax, eax
	jle	SHORT $LN16@lGetUnimpr

; 8993 : 		{
; 8994 : 			continue;

	jmp	$LN22@lGetUnimpr
$LN16@lGetUnimpr:

; 8995 : 		}
; 8996 : 
; 8997 : 		// if the resource is already improved
; 8998 : 		ImprovementTypes eExistingPlotImprovement = pPlot->getImprovementType();

	mov	ecx, DWORD PTR _pPlot$234321[ebp]
	call	?getImprovementType@CvPlot@@QBE?AW4ImprovementTypes@@XZ ; CvPlot::getImprovementType
	mov	DWORD PTR _eExistingPlotImprovement$234328[ebp], eax

; 8999 : 		if(eExistingPlotImprovement != NO_IMPROVEMENT)

	cmp	DWORD PTR _eExistingPlotImprovement$234328[ebp], -1
	je	SHORT $LN15@lGetUnimpr

; 9000 : 		{
; 9001 : 			CvImprovementEntry* pkImprovement = GC.getImprovementInfo(eExistingPlotImprovement);

	mov	edx, DWORD PTR _eExistingPlotImprovement$234328[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getImprovementInfo@CvGlobals@@QAEPAVCvImprovementEntry@@W4ImprovementTypes@@@Z ; CvGlobals::getImprovementInfo
	mov	DWORD PTR _pkImprovement$234330[ebp], eax

; 9002 : 			if(pkImprovement != NULL)

	cmp	DWORD PTR _pkImprovement$234330[ebp], 0
	je	SHORT $LN15@lGetUnimpr

; 9003 : 			{
; 9004 : 				if(pkImprovement->IsImprovementResourceTrade(eResource))

	mov	eax, DWORD PTR _eResource$234322[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkImprovement$234330[ebp]
	call	?IsImprovementResourceTrade@CvImprovementEntry@@QBE_NH@Z ; CvImprovementEntry::IsImprovementResourceTrade
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN15@lGetUnimpr

; 9005 : 				{
; 9006 : 					continue;

	jmp	$LN22@lGetUnimpr
$LN15@lGetUnimpr:

; 9007 : 				}
; 9008 : 			}
; 9009 : 		}
; 9010 : 
; 9011 : 		// see if we can improve the resource
; 9012 : #ifdef AUI_WARNING_FIXES
; 9013 : 		for (uint iBuildIndex = 0; iBuildIndex < GC.getNumBuildInfos(); iBuildIndex++)
; 9014 : #else
; 9015 : 		for(int iBuildIndex = 0; iBuildIndex < GC.getNumBuildInfos(); iBuildIndex++)

	mov	DWORD PTR _iBuildIndex$234333[ebp], 0
	jmp	SHORT $LN12@lGetUnimpr
$LN11@lGetUnimpr:
	mov	edx, DWORD PTR _iBuildIndex$234333[ebp]
	add	edx, 1
	mov	DWORD PTR _iBuildIndex$234333[ebp], edx
$LN12@lGetUnimpr:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildInfos
	cmp	DWORD PTR _iBuildIndex$234333[ebp], eax
	jge	$LN10@lGetUnimpr

; 9016 : #endif
; 9017 : 		{
; 9018 : 			BuildTypes eBuild = (BuildTypes)iBuildIndex;

	mov	eax, DWORD PTR _iBuildIndex$234333[ebp]
	mov	DWORD PTR _eBuild$234337[ebp], eax

; 9019 : 			CvBuildInfo* buildInfo = GC.getBuildInfo(eBuild);

	mov	ecx, DWORD PTR _eBuild$234337[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildInfo@CvGlobals@@QAEPAVCvBuildInfo@@W4BuildTypes@@@Z ; CvGlobals::getBuildInfo
	mov	DWORD PTR _buildInfo$234339[ebp], eax

; 9020 : 			if(buildInfo == NULL)

	cmp	DWORD PTR _buildInfo$234339[ebp], 0
	jne	SHORT $LN9@lGetUnimpr

; 9021 : 				continue;

	jmp	SHORT $LN11@lGetUnimpr
$LN9@lGetUnimpr:

; 9022 : 
; 9023 : 			ImprovementTypes eImprovement = (ImprovementTypes)buildInfo->getImprovement();

	mov	ecx, DWORD PTR _buildInfo$234339[ebp]
	call	?getImprovement@CvBuildInfo@@QBEHXZ	; CvBuildInfo::getImprovement
	mov	DWORD PTR _eImprovement$234341[ebp], eax

; 9024 : 			if(eImprovement == NO_IMPROVEMENT)

	cmp	DWORD PTR _eImprovement$234341[ebp], -1
	jne	SHORT $LN8@lGetUnimpr

; 9025 : 			{
; 9026 : 				continue;

	jmp	SHORT $LN11@lGetUnimpr
$LN8@lGetUnimpr:

; 9027 : 			}
; 9028 : 
; 9029 : 			CvImprovementEntry* pkImprovementInfo = GC.getImprovementInfo(eImprovement);

	mov	edx, DWORD PTR _eImprovement$234341[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getImprovementInfo@CvGlobals@@QAEPAVCvImprovementEntry@@W4ImprovementTypes@@@Z ; CvGlobals::getImprovementInfo
	mov	DWORD PTR _pkImprovementInfo$234344[ebp], eax

; 9030 : 			if(pkImprovementInfo == NULL)

	cmp	DWORD PTR _pkImprovementInfo$234344[ebp], 0
	jne	SHORT $LN7@lGetUnimpr

; 9031 : 			{
; 9032 : 				continue;

	jmp	SHORT $LN11@lGetUnimpr
$LN7@lGetUnimpr:

; 9033 : 			}
; 9034 : 
; 9035 : 			if(!pkImprovementInfo->IsImprovementResourceTrade(eResource))

	mov	eax, DWORD PTR _eResource$234322[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkImprovementInfo$234344[ebp]
	call	?IsImprovementResourceTrade@CvImprovementEntry@@QBE_NH@Z ; CvImprovementEntry::IsImprovementResourceTrade
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN6@lGetUnimpr

; 9036 : 			{
; 9037 : 				continue;

	jmp	SHORT $LN11@lGetUnimpr
$LN6@lGetUnimpr:

; 9038 : 			}
; 9039 : 
; 9040 : 			if(!pkPlayer->canBuild(pPlot, eBuild, false, true /*bTestVisible*/, false /*bTestGold*/))

	push	1
	push	0
	push	1
	push	0
	mov	edx, DWORD PTR _eBuild$234337[ebp]
	push	edx
	mov	eax, DWORD PTR _pPlot$234321[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?canBuild@CvPlayer@@QBE_NPBVCvPlot@@W4BuildTypes@@_N222@Z ; CvPlayer::canBuild
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN46@lGetUnimpr

; 9041 : 			{
; 9042 : 				continue;

	jmp	$LN11@lGetUnimpr

; 9043 : 			}
; 9044 : 
; 9045 : 			int iBuildTurnsLeft = pPlot->getBuildTurnsLeft(eBuild, pkPlayer->GetID(), 0, 0);

$LN46@lGetUnimpr:
	mov	edx, DWORD PTR _pkPlayer$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T251175[ebp], eax
	push	0
	push	0
	mov	ecx, DWORD PTR $T251175[ebp]
	push	ecx
	mov	edx, DWORD PTR _eBuild$234337[ebp]
	push	edx
	mov	ecx, DWORD PTR _pPlot$234321[ebp]
	call	?getBuildTurnsLeft@CvPlot@@QBEHW4BuildTypes@@W4PlayerTypes@@HH@Z ; CvPlot::getBuildTurnsLeft
	mov	DWORD PTR _iBuildTurnsLeft$234348[ebp], eax

; 9046 : 			if(iBuildTurnsLeft > 0 && iBuildTurnsLeft < 4000)

	cmp	DWORD PTR _iBuildTurnsLeft$234348[ebp], 0
	jle	SHORT $LN4@lGetUnimpr
	cmp	DWORD PTR _iBuildTurnsLeft$234348[ebp], 4000 ; 00000fa0H
	jge	SHORT $LN4@lGetUnimpr

; 9047 : 			{
; 9048 : 				continue;

	jmp	$LN11@lGetUnimpr
$LN4@lGetUnimpr:

; 9049 : 			}
; 9050 : 
; 9051 : 			pResultPlot = pPlot;

	mov	eax, DWORD PTR _pPlot$234321[ebp]
	mov	DWORD PTR _pResultPlot$[ebp], eax

; 9052 : 			break;

	jmp	SHORT $LN10@lGetUnimpr

; 9053 : 		}

	jmp	$LN11@lGetUnimpr
$LN10@lGetUnimpr:

; 9054 : 
; 9055 : 		if(pResultPlot != NULL)

	cmp	DWORD PTR _pResultPlot$[ebp], 0
	je	SHORT $LN3@lGetUnimpr

; 9056 : 		{
; 9057 : 			break;

	jmp	SHORT $LN21@lGetUnimpr
$LN3@lGetUnimpr:

; 9058 : 		}
; 9059 : 	}

	jmp	$LN22@lGetUnimpr
$LN21@lGetUnimpr:

; 9060 : 
; 9061 : 	if(pResultPlot)

	cmp	DWORD PTR _pResultPlot$[ebp], 0
	je	SHORT $LN2@lGetUnimpr

; 9062 : 	{
; 9063 : 		CvLuaPlot::Push(L, pResultPlot);

	mov	ecx, DWORD PTR _pResultPlot$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8

; 9064 : 	}
; 9065 : 	else

	jmp	SHORT $LN1@lGetUnimpr
$LN2@lGetUnimpr:

; 9066 : 	{
; 9067 : 		lua_pushnil(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushnil
	add	esp, 4
$LN1@lGetUnimpr:

; 9068 : 	}
; 9069 : 
; 9070 : 	return 1;

	mov	eax, 1

; 9071 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetUnimprovedAvailableLuxuryResource@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnimprovedAvailableLuxuryResource
_TEXT	ENDS
EXTRN	?getRouteType@CvPlot@@QBE?AW4RouteTypes@@XZ:PROC ; CvPlot::getRouteType
; Function compile flags: /Odtp
;	COMDAT ?lIsAnyPlotImproved@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv154 = -48						; size = 4
$T251206 = -40						; size = 4
$T251199 = -36						; size = 4
$T251192 = -32						; size = 4
$T251188 = -28						; size = 4
$T251181 = -24						; size = 4
_pPlot$234364 = -20					; size = 4
_uiPlotIndex$234359 = -16				; size = 4
_aiPlots$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsAnyPlotImproved@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsAnyPlotImproved, COMDAT

; 9075 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H

; 9076 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9077 : 
; 9078 : 	const CvPlotsVector& aiPlots = pkPlayer->GetPlots();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlots@CvPlayer@@QAEAAV?$FStaticVector@H$0DJAA@$00$0BCJ@$0A@@@XZ ; CvPlayer::GetPlots
	mov	DWORD PTR _aiPlots$[ebp], eax

; 9079 : 
; 9080 : 	bool bResult = false;

	mov	BYTE PTR _bResult$[ebp], 0

; 9081 : 
; 9082 : 	// go through all the plots the player has under their control
; 9083 : 	for(uint uiPlotIndex = 0; uiPlotIndex < aiPlots.size(); uiPlotIndex++)

	mov	DWORD PTR _uiPlotIndex$234359[ebp], 0
	jmp	SHORT $LN8@lIsAnyPlot
$LN7@lIsAnyPlot:
	mov	ecx, DWORD PTR _uiPlotIndex$234359[ebp]
	add	ecx, 1
	mov	DWORD PTR _uiPlotIndex$234359[ebp], ecx
$LN8@lIsAnyPlot:
	mov	edx, DWORD PTR _aiPlots$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T251181[ebp], eax
	mov	ecx, DWORD PTR _uiPlotIndex$234359[ebp]
	cmp	ecx, DWORD PTR $T251181[ebp]
	jae	$LN6@lIsAnyPlot

; 9084 : 	{
; 9085 : 		// when we encounter the first plot that is invalid, the rest of the list will be invalid
; 9086 : 		if(aiPlots[uiPlotIndex] == -1)

	mov	edx, DWORD PTR _aiPlots$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _uiPlotIndex$234359[ebp]
	cmp	DWORD PTR [eax+ecx*4], -1
	jne	SHORT $LN5@lIsAnyPlot

; 9087 : 		{
; 9088 : 			break;

	jmp	$LN6@lIsAnyPlot
$LN5@lIsAnyPlot:

; 9089 : 		}
; 9090 : 
; 9091 : 		CvPlot* pPlot = GC.getMap().plotByIndex(aiPlots[uiPlotIndex]);

	mov	edx, DWORD PTR _aiPlots$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _uiPlotIndex$234359[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR $T251188[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T251192[ebp], eax
	mov	ecx, DWORD PTR $T251188[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T251206[ebp], edx
	cmp	DWORD PTR $T251206[ebp], 0
	jl	SHORT $LN21@lIsAnyPlot
	mov	eax, DWORD PTR $T251192[ebp]
	mov	ecx, DWORD PTR [eax+4028]
	mov	DWORD PTR $T251199[ebp], ecx
	mov	edx, DWORD PTR $T251206[ebp]
	cmp	edx, DWORD PTR $T251199[ebp]
	jge	SHORT $LN21@lIsAnyPlot
	mov	eax, DWORD PTR $T251206[ebp]
	imul	eax, 484				; 000001e4H
	mov	ecx, DWORD PTR $T251192[ebp]
	add	eax, DWORD PTR [ecx+4068]
	mov	DWORD PTR tv154[ebp], eax
	jmp	SHORT $LN19@lIsAnyPlot
$LN21@lIsAnyPlot:
	mov	DWORD PTR tv154[ebp], 0
$LN19@lIsAnyPlot:
	mov	edx, DWORD PTR tv154[ebp]
	mov	DWORD PTR _pPlot$234364[ebp], edx

; 9092 : 		if(!pPlot)

	cmp	DWORD PTR _pPlot$234364[ebp], 0
	jne	SHORT $LN4@lIsAnyPlot

; 9093 : 		{
; 9094 : 			continue;

	jmp	$LN7@lIsAnyPlot
$LN4@lIsAnyPlot:

; 9095 : 		}
; 9096 : 
; 9097 : 		if(pPlot->getPlotCity())

	mov	ecx, DWORD PTR _pPlot$234364[ebp]
	call	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ	; CvPlot::getPlotCity
	test	eax, eax
	je	SHORT $LN3@lIsAnyPlot

; 9098 : 		{
; 9099 : 			continue;

	jmp	$LN7@lIsAnyPlot
$LN3@lIsAnyPlot:

; 9100 : 		}
; 9101 : 
; 9102 : 		if(pPlot->getImprovementType() != NO_IMPROVEMENT || pPlot->getRouteType() != NO_ROUTE)

	mov	ecx, DWORD PTR _pPlot$234364[ebp]
	call	?getImprovementType@CvPlot@@QBE?AW4ImprovementTypes@@XZ ; CvPlot::getImprovementType
	cmp	eax, -1
	jne	SHORT $LN1@lIsAnyPlot
	mov	ecx, DWORD PTR _pPlot$234364[ebp]
	call	?getRouteType@CvPlot@@QBE?AW4RouteTypes@@XZ ; CvPlot::getRouteType
	cmp	eax, -1
	je	SHORT $LN2@lIsAnyPlot
$LN1@lIsAnyPlot:

; 9103 : 		{
; 9104 : 			bResult = true;

	mov	BYTE PTR _bResult$[ebp], 1

; 9105 : 			break;

	jmp	SHORT $LN6@lIsAnyPlot
$LN2@lIsAnyPlot:

; 9106 : 		}
; 9107 : 	}

	jmp	$LN7@lIsAnyPlot
$LN6@lIsAnyPlot:

; 9108 : 
; 9109 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 9110 : 
; 9111 : 	return 1;

	mov	eax, 1

; 9112 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsAnyPlotImproved@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsAnyPlotImproved
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetPlayerVisiblePlot@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv160 = -52						; size = 4
_uiOffset$251260 = -48					; size = 4
$T251251 = -44						; size = 4
$T251242 = -40						; size = 4
$T251235 = -36						; size = 4
$T251228 = -32						; size = 4
$T251224 = -28						; size = 4
$T251217 = -24						; size = 4
_pPlot$234380 = -20					; size = 4
_uiPlotIndex$234375 = -16				; size = 4
_aiPlots$ = -12						; size = 4
_pkPlayer$ = -8						; size = 4
_pkPlayer2$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetPlayerVisiblePlot@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPlayerVisiblePlot, COMDAT

; 9116 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H

; 9117 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9118 : 	CvPlayerAI* pkPlayer2 = CvLuaPlayer::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer2$[ebp], eax

; 9119 : 
; 9120 : 	const CvPlotsVector& aiPlots = pkPlayer->GetPlots();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlots@CvPlayer@@QAEAAV?$FStaticVector@H$0DJAA@$00$0BCJ@$0A@@@XZ ; CvPlayer::GetPlots
	mov	DWORD PTR _aiPlots$[ebp], eax

; 9121 : 
; 9122 : 	// go through all the plots the player has under their control
; 9123 : 	for(uint uiPlotIndex = 0; uiPlotIndex < aiPlots.size(); uiPlotIndex++)

	mov	DWORD PTR _uiPlotIndex$234375[ebp], 0
	jmp	SHORT $LN6@lGetPlayer@2
$LN5@lGetPlayer@2:
	mov	edx, DWORD PTR _uiPlotIndex$234375[ebp]
	add	edx, 1
	mov	DWORD PTR _uiPlotIndex$234375[ebp], edx
$LN6@lGetPlayer@2:
	mov	eax, DWORD PTR _aiPlots$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T251217[ebp], ecx
	mov	edx, DWORD PTR _uiPlotIndex$234375[ebp]
	cmp	edx, DWORD PTR $T251217[ebp]
	jae	$LN4@lGetPlayer@2

; 9124 : 	{
; 9125 : 		// when we encounter the first plot that is invalid, the rest of the list will be invalid
; 9126 : 		if(aiPlots[uiPlotIndex] == -1)

	mov	eax, DWORD PTR _aiPlots$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _uiPlotIndex$234375[ebp]
	cmp	DWORD PTR [ecx+edx*4], -1
	jne	SHORT $LN3@lGetPlayer@2

; 9127 : 		{
; 9128 : 			break;

	jmp	$LN4@lGetPlayer@2
$LN3@lGetPlayer@2:

; 9129 : 		}
; 9130 : 
; 9131 : 		CvPlot* pPlot = GC.getMap().plotByIndex(aiPlots[uiPlotIndex]);

	mov	eax, DWORD PTR _aiPlots$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _uiPlotIndex$234375[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR $T251224[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T251228[ebp], ecx
	mov	edx, DWORD PTR $T251224[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T251242[ebp], eax
	cmp	DWORD PTR $T251242[ebp], 0
	jl	SHORT $LN19@lGetPlayer@2
	mov	ecx, DWORD PTR $T251228[ebp]
	mov	edx, DWORD PTR [ecx+4028]
	mov	DWORD PTR $T251235[ebp], edx
	mov	eax, DWORD PTR $T251242[ebp]
	cmp	eax, DWORD PTR $T251235[ebp]
	jge	SHORT $LN19@lGetPlayer@2
	mov	ecx, DWORD PTR $T251242[ebp]
	imul	ecx, 484				; 000001e4H
	mov	edx, DWORD PTR $T251228[ebp]
	add	ecx, DWORD PTR [edx+4068]
	mov	DWORD PTR tv160[ebp], ecx
	jmp	SHORT $LN17@lGetPlayer@2
$LN19@lGetPlayer@2:
	mov	DWORD PTR tv160[ebp], 0
$LN17@lGetPlayer@2:
	mov	eax, DWORD PTR tv160[ebp]
	mov	DWORD PTR _pPlot$234380[ebp], eax

; 9132 : 		if(!pPlot)

	cmp	DWORD PTR _pPlot$234380[ebp], 0
	jne	SHORT $LN25@lGetPlayer@2

; 9133 : 		{
; 9134 : 			continue;

	jmp	$LN5@lGetPlayer@2

; 9135 : 		}
; 9136 : 
; 9137 : 		if(pPlot->isRevealed(pkPlayer2->getTeam()))

$LN25@lGetPlayer@2:
	mov	ecx, DWORD PTR _pkPlayer2$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T251251[ebp], eax
	mov	eax, DWORD PTR $T251251[ebp]
	shr	eax, 5
	mov	DWORD PTR _uiOffset$251260[ebp], eax
	mov	ecx, DWORD PTR _uiOffset$251260[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR $T251251[ebp]
	sub	edx, ecx
	mov	eax, 1
	mov	ecx, edx
	shl	eax, cl
	mov	ecx, DWORD PTR _uiOffset$251260[ebp]
	mov	edx, DWORD PTR _pPlot$234380[ebp]
	and	eax, DWORD PTR [edx+ecx*4+8]
	setne	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@lGetPlayer@2

; 9138 : 		{
; 9139 : 			CvLuaPlot::Push(L, pPlot);

	mov	edx, DWORD PTR _pPlot$234380[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8

; 9140 : 			return 1;

	mov	eax, 1
	jmp	SHORT $LN7@lGetPlayer@2
$LN1@lGetPlayer@2:

; 9141 : 		}
; 9142 : 	}

	jmp	$LN5@lGetPlayer@2
$LN4@lGetPlayer@2:

; 9143 : 
; 9144 : 	lua_pushnil(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushnil
	add	esp, 4

; 9145 : 	return 1;

	mov	eax, 1
$LN7@lGetPlayer@2:

; 9146 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPlayerVisiblePlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPlayerVisiblePlot
_TEXT	ENDS
EXTRN	?GetEverPoppedGoody@CvPlayer@@QAE_NXZ:PROC	; CvPlayer::GetEverPoppedGoody
; Function compile flags: /Odtp
;	COMDAT ?lGetEverPoppedGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetEverPoppedGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetEverPoppedGoody, COMDAT

; 9152 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 9153 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9154 : 	lua_pushboolean(L, pkPlayer->GetEverPoppedGoody());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetEverPoppedGoody@CvPlayer@@QAE_NXZ	; CvPlayer::GetEverPoppedGoody
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 9155 : 	return 1;

	mov	eax, 1

; 9156 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetEverPoppedGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetEverPoppedGoody
_TEXT	ENDS
EXTRN	?GetClosestGoodyPlot@CvPlayer@@QAEPAVCvPlot@@_N@Z:PROC ; CvPlayer::GetClosestGoodyPlot
; Function compile flags: /Odtp
;	COMDAT ?lGetClosestGoodyPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_pPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetClosestGoodyPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetClosestGoodyPlot, COMDAT

; 9160 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 9161 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9162 : 	CvPlot* pPlot = pkPlayer->GetClosestGoodyPlot();

	push	0
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetClosestGoodyPlot@CvPlayer@@QAEPAVCvPlot@@_N@Z ; CvPlayer::GetClosestGoodyPlot
	mov	DWORD PTR _pPlot$[ebp], eax

; 9163 : 
; 9164 : 	if(pPlot)

	cmp	DWORD PTR _pPlot$[ebp], 0
	je	SHORT $LN2@lGetCloses

; 9165 : 	{
; 9166 : 		CvLuaPlot::Push(L, pPlot);

	mov	ecx, DWORD PTR _pPlot$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8

; 9167 : 	}
; 9168 : 	else

	jmp	SHORT $LN1@lGetCloses
$LN2@lGetCloses:

; 9169 : 	{
; 9170 : 		lua_pushnil(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushnil
	add	esp, 4
$LN1@lGetCloses:

; 9171 : 	}
; 9172 : 
; 9173 : 	return 1;

	mov	eax, 1

; 9174 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetClosestGoodyPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetClosestGoodyPlot
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lIsAnyGoodyPlotAccessible@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_pPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsAnyGoodyPlotAccessible@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsAnyGoodyPlotAccessible, COMDAT

; 9178 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 9179 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9180 : 	CvPlot* pPlot = pkPlayer->GetClosestGoodyPlot(true /*bStopAfterFindingFirst*/);

	push	1
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetClosestGoodyPlot@CvPlayer@@QAEPAVCvPlot@@_N@Z ; CvPlayer::GetClosestGoodyPlot
	mov	DWORD PTR _pPlot$[ebp], eax

; 9181 : 
; 9182 : 	lua_pushboolean(L, pPlot ? true : false);

	cmp	DWORD PTR _pPlot$[ebp], 0
	setne	cl
	movzx	edx, cl
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 9183 : 
; 9184 : 	return 1;

	mov	eax, 1

; 9185 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsAnyGoodyPlotAccessible@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsAnyGoodyPlotAccessible
_TEXT	ENDS
EXTRN	?GetPlotHasOrder@CvPlayer@@QAE_NPAVCvPlot@@@Z:PROC ; CvPlayer::GetPlotHasOrder
; Function compile flags: /Odtp
;	COMDAT ?lGetPlotHasOrder@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_pkPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetPlotHasOrder@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetPlotHasOrder, COMDAT

; 9190 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 9191 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9192 : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlot$[ebp], eax

; 9193 : 
; 9194 : 	lua_pushboolean(L, pkPlayer->GetPlotHasOrder(pkPlot));

	mov	edx, DWORD PTR _pkPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlotHasOrder@CvPlayer@@QAE_NPAVCvPlot@@@Z ; CvPlayer::GetPlotHasOrder
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 9195 : 	return 1;

	mov	eax, 1

; 9196 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPlotHasOrder@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetPlotHasOrder
_TEXT	ENDS
EXTRN	?GetAnyUnitHasOrderToGoody@CvPlayer@@QAE_NXZ:PROC ; CvPlayer::GetAnyUnitHasOrderToGoody
; Function compile flags: /Odtp
;	COMDAT ?lGetAnyUnitHasOrderToGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetAnyUnitHasOrderToGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAnyUnitHasOrderToGoody, COMDAT

; 9200 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 9201 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9202 : 	lua_pushboolean(L, pkPlayer->GetAnyUnitHasOrderToGoody());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetAnyUnitHasOrderToGoody@CvPlayer@@QAE_NXZ ; CvPlayer::GetAnyUnitHasOrderToGoody
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 9203 : 	return 1;

	mov	eax, 1

; 9204 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetAnyUnitHasOrderToGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAnyUnitHasOrderToGoody
_TEXT	ENDS
EXTRN	?GetEverTrainedBuilder@CvPlayer@@QAE_NXZ:PROC	; CvPlayer::GetEverTrainedBuilder
; Function compile flags: /Odtp
;	COMDAT ?lGetEverTrainedBuilder@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetEverTrainedBuilder@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetEverTrainedBuilder, COMDAT

; 9208 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 9209 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9210 : 	lua_pushboolean(L, pkPlayer->GetEverTrainedBuilder());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetEverTrainedBuilder@CvPlayer@@QAE_NXZ ; CvPlayer::GetEverTrainedBuilder
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 9211 : 	return 1;

	mov	eax, 1

; 9212 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetEverTrainedBuilder@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetEverTrainedBuilder
_TEXT	ENDS
EXTRN	?GetNumFreeTechs@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetNumFreeTechs
; Function compile flags: /Odtp
;	COMDAT ?lGetNumFreeTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumFreeTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNumFreeTechs, COMDAT

; 9215 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 9216 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9217 : 	lua_pushnumber(L, pkPlayer->GetNumFreeTechs());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetNumFreeTechs@CvPlayer@@QBEHXZ	; CvPlayer::GetNumFreeTechs
	cvtsi2sd xmm0, eax
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushnumber
	add	esp, 12					; 0000000cH

; 9218 : 	return 1;

	mov	eax, 1

; 9219 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumFreeTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNumFreeTechs
_TEXT	ENDS
EXTRN	?SetNumFreeTechs@CvPlayer@@QAEXH@Z:PROC		; CvPlayer::SetNumFreeTechs
; Function compile flags: /Odtp
;	COMDAT ?lSetNumFreeTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iNumTechs$ = -4					; size = 4
_L$ = 8							; size = 4
?lSetNumFreeTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lSetNumFreeTechs, COMDAT

; 9222 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 9223 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9224 : 	const int iNumTechs = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iNumTechs$[ebp], eax

; 9225 : 
; 9226 : 	pkPlayer->SetNumFreeTechs(iNumTechs);

	mov	edx, DWORD PTR _iNumTechs$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?SetNumFreeTechs@CvPlayer@@QAEXH@Z	; CvPlayer::SetNumFreeTechs

; 9227 : 	return 1;

	mov	eax, 1

; 9228 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetNumFreeTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lSetNumFreeTechs
_TEXT	ENDS
EXTRN	?GetNumFreePolicies@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetNumFreePolicies
; Function compile flags: /Odtp
;	COMDAT ?lGetNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumFreePolicies, COMDAT

; 9231 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 9232 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9233 : 	lua_pushnumber(L, pkPlayer->GetNumFreePolicies());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetNumFreePolicies@CvPlayer@@QBEHXZ	; CvPlayer::GetNumFreePolicies
	cvtsi2sd xmm0, eax
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushnumber
	add	esp, 12					; 0000000cH

; 9234 : 	return 1;

	mov	eax, 1

; 9235 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumFreePolicies
_TEXT	ENDS
EXTRN	?SetNumFreePolicies@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::SetNumFreePolicies
; Function compile flags: /Odtp
;	COMDAT ?lSetNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iNumPolicies$ = -8					; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lSetNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetNumFreePolicies, COMDAT

; 9238 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 9239 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9240 : 	const int iNumPolicies = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iNumPolicies$[ebp], eax

; 9241 : 
; 9242 : 	pkPlayer->SetNumFreePolicies(iNumPolicies);

	mov	edx, DWORD PTR _iNumPolicies$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?SetNumFreePolicies@CvPlayer@@QAEXH@Z	; CvPlayer::SetNumFreePolicies

; 9243 : 	return 1;

	mov	eax, 1

; 9244 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetNumFreePolicies
_TEXT	ENDS
EXTRN	?ChangeNumFreePolicies@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::ChangeNumFreePolicies
; Function compile flags: /Odtp
;	COMDAT ?lChangeNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iNumPolicies$ = -8					; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lChangeNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNumFreePolicies, COMDAT

; 9247 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 9248 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9249 : 	const int iNumPolicies = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iNumPolicies$[ebp], eax

; 9250 : 
; 9251 : 	pkPlayer->ChangeNumFreePolicies(iNumPolicies);

	mov	edx, DWORD PTR _iNumPolicies$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?ChangeNumFreePolicies@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeNumFreePolicies

; 9252 : 	return 1;

	mov	eax, 1

; 9253 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChangeNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNumFreePolicies
_TEXT	ENDS
EXTRN	?GetNumFreeTenets@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetNumFreeTenets
; Function compile flags: /Odtp
;	COMDAT ?lGetNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumFreeTenets, COMDAT

; 9256 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 9257 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9258 : 	lua_pushnumber(L, pkPlayer->GetNumFreeTenets());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetNumFreeTenets@CvPlayer@@QBEHXZ	; CvPlayer::GetNumFreeTenets
	cvtsi2sd xmm0, eax
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushnumber
	add	esp, 12					; 0000000cH

; 9259 : 	return 1;

	mov	eax, 1

; 9260 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumFreeTenets
_TEXT	ENDS
EXTRN	?SetNumFreeTenets@CvPlayer@@QAEXH_N@Z:PROC	; CvPlayer::SetNumFreeTenets
; Function compile flags: /Odtp
;	COMDAT ?lSetNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_iNumTenets$ = -8					; size = 4
_bCountAsFreePolicies$ = -1				; size = 1
_L$ = 8							; size = 4
?lSetNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetNumFreeTenets, COMDAT

; 9263 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 9264 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9265 : 	const int iNumTenets = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iNumTenets$[ebp], eax

; 9266 : 	const bool bCountAsFreePolicies = lua_toboolean(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bCountAsFreePolicies$[ebp], al

; 9267 : 
; 9268 : 	pkPlayer->SetNumFreeTenets(iNumTenets, bCountAsFreePolicies);

	movzx	ecx, BYTE PTR _bCountAsFreePolicies$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iNumTenets$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?SetNumFreeTenets@CvPlayer@@QAEXH_N@Z	; CvPlayer::SetNumFreeTenets

; 9269 : 	return 1;

	mov	eax, 1

; 9270 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetNumFreeTenets
_TEXT	ENDS
EXTRN	?ChangeNumFreeTenets@CvPlayer@@QAEXH_N@Z:PROC	; CvPlayer::ChangeNumFreeTenets
; Function compile flags: /Odtp
;	COMDAT ?lChangeNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_iNumTenets$ = -8					; size = 4
_bCountAsFreePolicies$ = -1				; size = 1
_L$ = 8							; size = 4
?lChangeNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNumFreeTenets, COMDAT

; 9273 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 9274 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9275 : 	const int iNumTenets = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iNumTenets$[ebp], eax

; 9276 : 	const bool bCountAsFreePolicies = lua_toboolean(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bCountAsFreePolicies$[ebp], al

; 9277 : 
; 9278 : 	pkPlayer->ChangeNumFreeTenets(iNumTenets, bCountAsFreePolicies);

	movzx	ecx, BYTE PTR _bCountAsFreePolicies$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iNumTenets$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?ChangeNumFreeTenets@CvPlayer@@QAEXH_N@Z ; CvPlayer::ChangeNumFreeTenets

; 9279 : 	return 1;

	mov	eax, 1

; 9280 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChangeNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNumFreeTenets
_TEXT	ENDS
EXTRN	?GetNumFreeGreatPeople@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetNumFreeGreatPeople
; Function compile flags: /Odtp
;	COMDAT ?lGetNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumFreeGreatPeople, COMDAT

; 9283 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 9284 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9285 : 	lua_pushnumber(L, pkPlayer->GetNumFreeGreatPeople());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetNumFreeGreatPeople@CvPlayer@@QBEHXZ	; CvPlayer::GetNumFreeGreatPeople
	cvtsi2sd xmm0, eax
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushnumber
	add	esp, 12					; 0000000cH

; 9286 : 	return 1;

	mov	eax, 1

; 9287 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumFreeGreatPeople
_TEXT	ENDS
EXTRN	?SetNumFreeGreatPeople@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::SetNumFreeGreatPeople
; Function compile flags: /Odtp
;	COMDAT ?lSetNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iNumGreatPeople$ = -4					; size = 4
_L$ = 8							; size = 4
?lSetNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetNumFreeGreatPeople, COMDAT

; 9290 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 9291 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9292 : 	const int iNumGreatPeople = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iNumGreatPeople$[ebp], eax

; 9293 : 
; 9294 : 	pkPlayer->SetNumFreeGreatPeople(iNumGreatPeople);

	mov	edx, DWORD PTR _iNumGreatPeople$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?SetNumFreeGreatPeople@CvPlayer@@QAEXH@Z ; CvPlayer::SetNumFreeGreatPeople

; 9295 : 	return 1;

	mov	eax, 1

; 9296 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetNumFreeGreatPeople
_TEXT	ENDS
EXTRN	?ChangeNumFreeGreatPeople@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeNumFreeGreatPeople
; Function compile flags: /Odtp
;	COMDAT ?lChangeNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iNumGreatPeople$ = -4					; size = 4
_L$ = 8							; size = 4
?lChangeNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNumFreeGreatPeople, COMDAT

; 9299 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 9300 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9301 : 	const int iNumGreatPeople = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iNumGreatPeople$[ebp], eax

; 9302 : 
; 9303 : 	pkPlayer->ChangeNumFreeGreatPeople(iNumGreatPeople);

	mov	edx, DWORD PTR _iNumGreatPeople$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?ChangeNumFreeGreatPeople@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeNumFreeGreatPeople

; 9304 : 	return 1;

	mov	eax, 1

; 9305 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChangeNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNumFreeGreatPeople
_TEXT	ENDS
EXTRN	?GetNumMayaBoosts@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetNumMayaBoosts
; Function compile flags: /Odtp
;	COMDAT ?lGetNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumMayaBoosts, COMDAT

; 9308 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 9309 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9310 : 	lua_pushnumber(L, pkPlayer->GetNumMayaBoosts());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetNumMayaBoosts@CvPlayer@@QBEHXZ	; CvPlayer::GetNumMayaBoosts
	cvtsi2sd xmm0, eax
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushnumber
	add	esp, 12					; 0000000cH

; 9311 : 	return 1;

	mov	eax, 1

; 9312 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumMayaBoosts
_TEXT	ENDS
EXTRN	?SetNumMayaBoosts@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::SetNumMayaBoosts
; Function compile flags: /Odtp
;	COMDAT ?lSetNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iNumBoosts$ = -4					; size = 4
_L$ = 8							; size = 4
?lSetNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetNumMayaBoosts, COMDAT

; 9315 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 9316 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9317 : 	const int iNumBoosts = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iNumBoosts$[ebp], eax

; 9318 : 
; 9319 : 	pkPlayer->SetNumMayaBoosts(iNumBoosts);

	mov	edx, DWORD PTR _iNumBoosts$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?SetNumMayaBoosts@CvPlayer@@QAEXH@Z	; CvPlayer::SetNumMayaBoosts

; 9320 : 	return 1;

	mov	eax, 1

; 9321 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetNumMayaBoosts
_TEXT	ENDS
EXTRN	?ChangeNumMayaBoosts@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::ChangeNumMayaBoosts
; Function compile flags: /Odtp
;	COMDAT ?lChangeNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iNumBoosts$ = -4					; size = 4
_L$ = 8							; size = 4
?lChangeNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNumMayaBoosts, COMDAT

; 9324 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 9325 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9326 : 	const int iNumBoosts = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iNumBoosts$[ebp], eax

; 9327 : 
; 9328 : 	pkPlayer->ChangeNumMayaBoosts(iNumBoosts);

	mov	edx, DWORD PTR _iNumBoosts$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?ChangeNumMayaBoosts@CvPlayer@@QAEXH@Z	; CvPlayer::ChangeNumMayaBoosts

; 9329 : 	return 1;

	mov	eax, 1

; 9330 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChangeNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNumMayaBoosts
_TEXT	ENDS
EXTRN	?GetNumFaithGreatPeople@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetNumFaithGreatPeople
; Function compile flags: /Odtp
;	COMDAT ?lGetNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumFaithGreatPeople, COMDAT

; 9333 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 9334 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9335 : 	lua_pushnumber(L, pkPlayer->GetNumFaithGreatPeople());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetNumFaithGreatPeople@CvPlayer@@QBEHXZ ; CvPlayer::GetNumFaithGreatPeople
	cvtsi2sd xmm0, eax
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushnumber
	add	esp, 12					; 0000000cH

; 9336 : 	return 1;

	mov	eax, 1

; 9337 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumFaithGreatPeople
_TEXT	ENDS
EXTRN	?SetNumFaithGreatPeople@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::SetNumFaithGreatPeople
; Function compile flags: /Odtp
;	COMDAT ?lSetNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iNumGreatPeople$ = -4					; size = 4
_L$ = 8							; size = 4
?lSetNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetNumFaithGreatPeople, COMDAT

; 9340 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 9341 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9342 : 	const int iNumGreatPeople = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iNumGreatPeople$[ebp], eax

; 9343 : 
; 9344 : 	pkPlayer->SetNumFaithGreatPeople(iNumGreatPeople);

	mov	edx, DWORD PTR _iNumGreatPeople$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?SetNumFaithGreatPeople@CvPlayer@@QAEXH@Z ; CvPlayer::SetNumFaithGreatPeople

; 9345 : 	return 1;

	mov	eax, 1

; 9346 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetNumFaithGreatPeople
_TEXT	ENDS
EXTRN	?ChangeNumFaithGreatPeople@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeNumFaithGreatPeople
; Function compile flags: /Odtp
;	COMDAT ?lChangeNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iNumGreatPeople$ = -4					; size = 4
_L$ = 8							; size = 4
?lChangeNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNumFaithGreatPeople, COMDAT

; 9349 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 9350 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9351 : 	const int iNumGreatPeople = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iNumGreatPeople$[ebp], eax

; 9352 : 
; 9353 : 	pkPlayer->ChangeNumFaithGreatPeople(iNumGreatPeople);

	mov	edx, DWORD PTR _iNumGreatPeople$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?ChangeNumFaithGreatPeople@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeNumFaithGreatPeople

; 9354 : 	return 1;

	mov	eax, 1

; 9355 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChangeNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNumFaithGreatPeople
_TEXT	ENDS
EXTRN	?GetUnitBaktun@CvPlayerTraits@@QBEHW4UnitTypes@@@Z:PROC ; CvPlayerTraits::GetUnitBaktun
; Function compile flags: /Odtp
;	COMDAT ?lGetUnitBaktun@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_eUnit$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetUnitBaktun@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetUnitBaktun, COMDAT

; 9358 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 9359 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9360 : 	const UnitTypes eUnit = (UnitTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eUnit$[ebp], eax

; 9361 : 	lua_pushnumber(L, pkPlayer->GetPlayerTraits()->GetUnitBaktun(eUnit));

	mov	edx, DWORD PTR _eUnit$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	ecx, eax
	call	?GetUnitBaktun@CvPlayerTraits@@QBEHW4UnitTypes@@@Z ; CvPlayerTraits::GetUnitBaktun
	cvtsi2sd xmm0, eax
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushnumber
	add	esp, 12					; 0000000cH

; 9362 : 	return 1;

	mov	eax, 1

; 9363 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetUnitBaktun@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetUnitBaktun
_TEXT	ENDS
EXTRN	?IsFreeMayaGreatPersonChoice@CvPlayerTraits@@QBE_NXZ:PROC ; CvPlayerTraits::IsFreeMayaGreatPersonChoice
; Function compile flags: /Odtp
;	COMDAT ?lIsFreeMayaGreatPersonChoice@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsFreeMayaGreatPersonChoice@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsFreeMayaGreatPersonChoice, COMDAT

; 9366 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 9367 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9368 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lIsFreeMay

; 9369 : 	{
; 9370 : 		lua_pushboolean(L, pkPlayer->GetPlayerTraits()->IsFreeMayaGreatPersonChoice());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	ecx, eax
	call	?IsFreeMayaGreatPersonChoice@CvPlayerTraits@@QBE_NXZ ; CvPlayerTraits::IsFreeMayaGreatPersonChoice
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8
$LN1@lIsFreeMay:

; 9371 : 	}
; 9372 : 	return 1;

	mov	eax, 1

; 9373 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsFreeMayaGreatPersonChoice@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsFreeMayaGreatPersonChoice
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lHasReceivedNetTurnComplete@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv80 = -16						; size = 4
$T251326 = -12						; size = 4
$T251317 = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lHasReceivedNetTurnComplete@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lHasReceivedNetTurnComplete, COMDAT

; 9376 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 9377 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9378 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lHasReceiv

; 9379 : 	{
; 9380 : 		lua_pushboolean(L, gDLL->HasReceivedTurnComplete(pkPlayer->GetID()));

	mov	ecx, DWORD PTR $T251317[ebp]
	mov	DWORD PTR tv80[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv80[ebp], edx
	mov	eax, DWORD PTR _pkPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T251326[ebp], ecx
	mov	edx, DWORD PTR $T251326[ebp]
	push	edx
	mov	eax, DWORD PTR tv80[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv80[ebp]
	mov	eax, DWORD PTR [edx+132]
	call	eax
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8
$LN1@lHasReceiv:

; 9381 : 	}
; 9382 : 	return 1;

	mov	eax, 1

; 9383 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lHasReceivedNetTurnComplete@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lHasReceivedNetTurnComplete
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetTraitGoldenAgeCombatModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T251333 = -12						; size = 4
$T251332 = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetTraitGoldenAgeCombatModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTraitGoldenAgeCombatModifier, COMDAT

; 9386 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 9387 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9388 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lGetTraitG

; 9389 : 	{
; 9390 : 		lua_pushinteger(L, pkPlayer->GetPlayerTraits()->GetGoldenAgeCombatModifier());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T251332[ebp], eax
	mov	ecx, DWORD PTR $T251332[ebp]
	mov	edx, DWORD PTR [ecx+180]
	mov	DWORD PTR $T251333[ebp], edx
	mov	eax, DWORD PTR $T251333[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetTraitG:

; 9391 : 	}
; 9392 : 	return 1;

	mov	eax, 1

; 9393 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTraitGoldenAgeCombatModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTraitGoldenAgeCombatModifier
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetTraitCityStateCombatModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T251340 = -12						; size = 4
$T251339 = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetTraitCityStateCombatModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTraitCityStateCombatModifier, COMDAT

; 9396 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 9397 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9398 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lGetTraitC

; 9399 : 	{
; 9400 : 		lua_pushinteger(L, pkPlayer->GetPlayerTraits()->GetCityStateCombatModifier());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T251339[ebp], eax
	mov	ecx, DWORD PTR $T251339[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR $T251340[ebp], edx
	mov	eax, DWORD PTR $T251340[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetTraitC:

; 9401 : 	}
; 9402 : 	return 1;

	mov	eax, 1

; 9403 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTraitCityStateCombatModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTraitCityStateCombatModifier
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetTraitGreatGeneralExtraBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T251347 = -12						; size = 4
$T251346 = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetTraitGreatGeneralExtraBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTraitGreatGeneralExtraBonus, COMDAT

; 9406 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 9407 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9408 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lGetTraitG@2

; 9409 : 	{
; 9410 : 		lua_pushinteger(L, pkPlayer->GetPlayerTraits()->GetGreatGeneralExtraBonus());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T251346[ebp], eax
	mov	ecx, DWORD PTR $T251346[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	DWORD PTR $T251347[ebp], edx
	mov	eax, DWORD PTR $T251347[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetTraitG@2:

; 9411 : 	}
; 9412 : 	return 1;

	mov	eax, 1

; 9413 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTraitGreatGeneralExtraBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTraitGreatGeneralExtraBonus
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetTraitGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T251354 = -12						; size = 4
$T251353 = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetTraitGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTraitGreatScientistRateModifier, COMDAT

; 9416 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 9417 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9418 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lGetTraitG@3

; 9419 : 	{
; 9420 : 		lua_pushinteger(L, pkPlayer->GetPlayerTraits()->GetGreatScientistRateModifier());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T251353[ebp], eax
	mov	ecx, DWORD PTR $T251353[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR $T251354[ebp], edx
	mov	eax, DWORD PTR $T251354[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetTraitG@3:

; 9421 : 	}
; 9422 : 	return 1;

	mov	eax, 1

; 9423 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTraitGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTraitGreatScientistRateModifier
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lIsTraitBonusReligiousBelief@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T251361 = -9						; size = 1
$T251360 = -8						; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsTraitBonusReligiousBelief@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsTraitBonusReligiousBelief, COMDAT

; 9426 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 9427 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9428 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lIsTraitBo

; 9429 : 	{
; 9430 : 		lua_pushboolean(L, pkPlayer->GetPlayerTraits()->IsBonusReligiousBelief());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T251360[ebp], eax
	mov	ecx, DWORD PTR $T251360[ebp]
	mov	dl, BYTE PTR [ecx+347]
	mov	BYTE PTR $T251361[ebp], dl
	movzx	eax, BYTE PTR $T251361[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8
$LN1@lIsTraitBo:

; 9431 : 	}
; 9432 : 	return 1;

	mov	eax, 1

; 9433 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsTraitBonusReligiousBelief@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsTraitBonusReligiousBelief
_TEXT	ENDS
EXTRN	?GetHappinessFromLuxury@CvPlayer@@QBEHW4ResourceTypes@@@Z:PROC ; CvPlayer::GetHappinessFromLuxury
; Function compile flags: /Odtp
;	COMDAT ?lGetHappinessFromLuxury@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iLuxuryHappiness$234541 = -12				; size = 4
_eResource$234539 = -8					; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetHappinessFromLuxury@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromLuxury, COMDAT

; 9436 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 9437 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9438 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN2@lGetHappin

; 9439 : 	{
; 9440 : 		const ResourceTypes eResource = (ResourceTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eResource$234539[ebp], eax

; 9441 : 		int iLuxuryHappiness = pkPlayer->GetHappinessFromLuxury(eResource);

	mov	edx, DWORD PTR _eResource$234539[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetHappinessFromLuxury@CvPlayer@@QBEHW4ResourceTypes@@@Z ; CvPlayer::GetHappinessFromLuxury
	mov	DWORD PTR _iLuxuryHappiness$234541[ebp], eax

; 9442 : 		if (iLuxuryHappiness > 0) 

	cmp	DWORD PTR _iLuxuryHappiness$234541[ebp], 0
	jle	SHORT $LN1@lGetHappin

; 9443 : 		{
; 9444 : 			iLuxuryHappiness += pkPlayer->GetExtraHappinessPerLuxury();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetExtraHappinessPerLuxury@CvPlayer@@QBEHXZ ; CvPlayer::GetExtraHappinessPerLuxury
	add	eax, DWORD PTR _iLuxuryHappiness$234541[ebp]
	mov	DWORD PTR _iLuxuryHappiness$234541[ebp], eax
$LN1@lGetHappin:

; 9445 : 		}
; 9446 : 		lua_pushinteger(L, iLuxuryHappiness);

	mov	eax, DWORD PTR _iLuxuryHappiness$234541[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8
$LN2@lGetHappin:

; 9447 : 	}
; 9448 : 	return 1;

	mov	eax, 1

; 9449 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetHappinessFromLuxury@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromLuxury
_TEXT	ENDS
EXTRN	?IsAbleToAnnexCityStates@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::IsAbleToAnnexCityStates
; Function compile flags: /Odtp
;	COMDAT ?lIsAbleToAnnexCityStates@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsAbleToAnnexCityStates@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsAbleToAnnexCityStates, COMDAT

; 9452 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 9453 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9454 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lIsAbleToA

; 9455 : 	{
; 9456 : 		lua_pushboolean(L, pkPlayer->IsAbleToAnnexCityStates());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?IsAbleToAnnexCityStates@CvPlayer@@QBE_NXZ ; CvPlayer::IsAbleToAnnexCityStates
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8
$LN1@lIsAbleToA:

; 9457 : 	}
; 9458 : 	return 1;

	mov	eax, 1

; 9459 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsAbleToAnnexCityStates@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsAbleToAnnexCityStates
_TEXT	ENDS
EXTRN	?GetNumTurnsBeforeMinorAlliesRefuseBribes@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetNumTurnsBeforeMinorAlliesRefuseBribes
; Function compile flags: /Odtp
;	COMDAT ?lGetNumTurnsBeforeMinorAlliesRefuseBribes@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -8						; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumTurnsBeforeMinorAlliesRefuseBribes@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumTurnsBeforeMinorAlliesRefuseBribes, COMDAT

; 9463 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 9464 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9465 : 
; 9466 : 	const int iResult = pkPlayer->GetNumTurnsBeforeMinorAlliesRefuseBribes();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetNumTurnsBeforeMinorAlliesRefuseBribes@CvPlayer@@QBEHXZ ; CvPlayer::GetNumTurnsBeforeMinorAlliesRefuseBribes
	mov	DWORD PTR _iResult$[ebp], eax

; 9467 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 9468 : 	return 1;

	mov	eax, 1

; 9469 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumTurnsBeforeMinorAlliesRefuseBribes@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumTurnsBeforeMinorAlliesRefuseBribes
_TEXT	ENDS
EXTRN	?IsUsingMayaCalendar@CvPlayerTraits@@QBE_NXZ:PROC ; CvPlayerTraits::IsUsingMayaCalendar
; Function compile flags: /Odtp
;	COMDAT ?lIsUsingMayaCalendar@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsUsingMayaCalendar@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsUsingMayaCalendar, COMDAT

; 9473 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 9474 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9475 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lIsUsingMa

; 9476 : 	{
; 9477 : 		lua_pushboolean(L, pkPlayer->GetPlayerTraits()->IsUsingMayaCalendar());

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	ecx, eax
	call	?IsUsingMayaCalendar@CvPlayerTraits@@QBE_NXZ ; CvPlayerTraits::IsUsingMayaCalendar
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8
$LN1@lIsUsingMa:

; 9478 : 	}
; 9479 : 	return 1;

	mov	eax, 1

; 9480 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsUsingMayaCalendar@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsUsingMayaCalendar
_TEXT	ENDS
EXTRN	?GetMayaCalendarString@CvPlayerTraits@@QAE?AVCvString@@XZ:PROC ; CvPlayerTraits::GetMayaCalendarString
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv78 = -52						; size = 4
$T251377 = -48						; size = 4
$T251372 = -44						; size = 28
_pkPlayer$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMayaCalendarString, COMDAT

; 9483 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 9484 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9485 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lGetMayaCa

; 9486 : 	{
; 9487 : 		lua_pushstring(L, pkPlayer->GetPlayerTraits()->GetMayaCalendarString());

	lea	ecx, DWORD PTR $T251372[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	ecx, eax
	call	?GetMayaCalendarString@CvPlayerTraits@@QAE?AVCvString@@XZ ; CvPlayerTraits::GetMayaCalendarString
	mov	DWORD PTR tv78[ebp], eax
	mov	edx, DWORD PTR tv78[ebp]
	mov	DWORD PTR $T251377[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T251377[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T251372[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN1@lGetMayaCa:

; 9488 : 	}
; 9489 : 	return 1;

	mov	eax, 1

; 9490 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T251372[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMayaCalendarString
EXTRN	?GetMayaCalendarLongString@CvPlayerTraits@@QAE?AVCvString@@XZ:PROC ; CvPlayerTraits::GetMayaCalendarLongString
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv78 = -52						; size = 4
$T251395 = -48						; size = 4
$T251390 = -44						; size = 28
_pkPlayer$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMayaCalendarLongString, COMDAT

; 9493 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 9494 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9495 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lGetMayaCa@2

; 9496 : 	{
; 9497 : 		lua_pushstring(L, pkPlayer->GetPlayerTraits()->GetMayaCalendarLongString());

	lea	ecx, DWORD PTR $T251390[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	ecx, eax
	call	?GetMayaCalendarLongString@CvPlayerTraits@@QAE?AVCvString@@XZ ; CvPlayerTraits::GetMayaCalendarLongString
	mov	DWORD PTR tv78[ebp], eax
	mov	edx, DWORD PTR tv78[ebp]
	mov	DWORD PTR $T251395[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T251395[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T251390[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN1@lGetMayaCa@2:

; 9498 : 	}
; 9499 : 	return 1;

	mov	eax, 1

; 9500 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T251390[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMayaCalendarLongString
EXTRN	?GetBuildingClassHappiness@CvPolicyEntry@@QBEHH@Z:PROC ; CvPolicyEntry::GetBuildingClassHappiness
EXTRN	?getPolicyInfo@CvGlobals@@QAEPAVCvPolicyEntry@@W4PolicyTypes@@@Z:PROC ; CvGlobals::getPolicyInfo
EXTRN	?getNumPolicyInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumPolicyInfos
EXTRN	?GetBuildingClassType@CvBuildingEntry@@QBEHXZ:PROC ; CvBuildingEntry::GetBuildingClassType
; Function compile flags: /Odtp
;	COMDAT ?lGetExtraBuildingHappinessFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPolicyInfo$234588 = -32				; size = 4
_ePolicy$234586 = -28					; size = 4
_iPolicyLoop$234582 = -24				; size = 4
_iExtraHappiness$234581 = -20				; size = 4
_eBuildingClass$234579 = -16				; size = 4
_eBuilding$234575 = -12					; size = 4
_pkBuildingInfo$234577 = -8				; size = 4
_pkPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetExtraBuildingHappinessFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetExtraBuildingHappinessFromPolicies, COMDAT

; 9503 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 9504 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9505 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	$LN7@lGetExtraB

; 9506 : 	{
; 9507 : 		const BuildingTypes eBuilding = (BuildingTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBuilding$234575[ebp], eax

; 9508 : 		CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);

	mov	edx, DWORD PTR _eBuilding$234575[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingInfo$234577[ebp], eax

; 9509 : 		if(pkBuildingInfo)

	cmp	DWORD PTR _pkBuildingInfo$234577[ebp], 0
	je	$LN7@lGetExtraB

; 9510 : 		{
; 9511 : 			BuildingClassTypes eBuildingClass = (BuildingClassTypes)pkBuildingInfo->GetBuildingClassType();

	mov	ecx, DWORD PTR _pkBuildingInfo$234577[ebp]
	call	?GetBuildingClassType@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetBuildingClassType
	mov	DWORD PTR _eBuildingClass$234579[ebp], eax

; 9512 : 
; 9513 : 			int iExtraHappiness = 0;

	mov	DWORD PTR _iExtraHappiness$234581[ebp], 0

; 9514 : 
; 9515 : #ifdef AUI_WARNING_FIXES
; 9516 : 			for (uint iPolicyLoop = 0; iPolicyLoop < GC.getNumPolicyInfos(); iPolicyLoop++)
; 9517 : #else
; 9518 : 			for(int iPolicyLoop = 0; iPolicyLoop < GC.getNumPolicyInfos(); iPolicyLoop++)

	mov	DWORD PTR _iPolicyLoop$234582[ebp], 0
	jmp	SHORT $LN5@lGetExtraB
$LN4@lGetExtraB:
	mov	eax, DWORD PTR _iPolicyLoop$234582[ebp]
	add	eax, 1
	mov	DWORD PTR _iPolicyLoop$234582[ebp], eax
$LN5@lGetExtraB:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumPolicyInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumPolicyInfos
	cmp	DWORD PTR _iPolicyLoop$234582[ebp], eax
	jge	SHORT $LN3@lGetExtraB

; 9519 : #endif
; 9520 : 			{
; 9521 : 				const PolicyTypes ePolicy = static_cast<PolicyTypes>(iPolicyLoop);

	mov	ecx, DWORD PTR _iPolicyLoop$234582[ebp]
	mov	DWORD PTR _ePolicy$234586[ebp], ecx

; 9522 : 				CvPolicyEntry* pkPolicyInfo = GC.getPolicyInfo(ePolicy);

	mov	edx, DWORD PTR _ePolicy$234586[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getPolicyInfo@CvGlobals@@QAEPAVCvPolicyEntry@@W4PolicyTypes@@@Z ; CvGlobals::getPolicyInfo
	mov	DWORD PTR _pkPolicyInfo$234588[ebp], eax

; 9523 : 				if(pkPolicyInfo)

	cmp	DWORD PTR _pkPolicyInfo$234588[ebp], 0
	je	SHORT $LN2@lGetExtraB

; 9524 : 				{
; 9525 : 					if(pkPlayer->GetPlayerPolicies()->HasPolicy(ePolicy) && !pkPlayer->GetPlayerPolicies()->IsPolicyBlocked(ePolicy))

	mov	eax, DWORD PTR _ePolicy$234586[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?HasPolicy@CvPlayerPolicies@@QBE_NW4PolicyTypes@@@Z ; CvPlayerPolicies::HasPolicy
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@lGetExtraB
	mov	edx, DWORD PTR _ePolicy$234586[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBlocked@CvPlayerPolicies@@QBE_NW4PolicyTypes@@@Z ; CvPlayerPolicies::IsPolicyBlocked
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@lGetExtraB

; 9526 : 					{
; 9527 : 						iExtraHappiness += pkPolicyInfo->GetBuildingClassHappiness(eBuildingClass);

	mov	ecx, DWORD PTR _eBuildingClass$234579[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPolicyInfo$234588[ebp]
	call	?GetBuildingClassHappiness@CvPolicyEntry@@QBEHH@Z ; CvPolicyEntry::GetBuildingClassHappiness
	add	eax, DWORD PTR _iExtraHappiness$234581[ebp]
	mov	DWORD PTR _iExtraHappiness$234581[ebp], eax
$LN2@lGetExtraB:

; 9528 : 					}
; 9529 : 				}
; 9530 : 			}

	jmp	SHORT $LN4@lGetExtraB
$LN3@lGetExtraB:

; 9531 : 
; 9532 : 			lua_pushinteger(L, iExtraHappiness);

	mov	edx, DWORD PTR _iExtraHappiness$234581[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 9533 : 			return 1;

	mov	eax, 1
	jmp	SHORT $LN8@lGetExtraB
$LN7@lGetExtraB:

; 9534 : 		}
; 9535 : 	}
; 9536 : 
; 9537 : 	//BUG: This can't be right...
; 9538 : 	lua_pushinteger(L, -1);

	push	-1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 9539 : 	return 0;

	xor	eax, eax
$LN8@lGetExtraB:

; 9540 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetExtraBuildingHappinessFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetExtraBuildingHappinessFromPolicies
_TEXT	ENDS
EXTRN	?IsPuppet@CvCity@@QBE_NXZ:PROC			; CvCity::IsPuppet
EXTRN	?getIndex@CvCity@@QBEHXZ:PROC			; CvCity::getIndex
; Function compile flags: /Odtp
;	COMDAT ?lGetNextCity@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pCurrentCity$ = -20					; size = 4
_pkPlayer$ = -16					; size = 4
_pNextCity$ = -12					; size = 4
_pLoopCity$ = -8					; size = 4
_iLoop$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNextCity@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNextCity, COMDAT

; 9545 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 9546 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9547 : 	CvCity* pCurrentCity = CvLuaCity::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pCurrentCity$[ebp], eax

; 9548 : 	CvCity* pLoopCity = NULL;

	mov	DWORD PTR _pLoopCity$[ebp], 0

; 9549 : 	CvCity* pNextCity = NULL;

	mov	DWORD PTR _pNextCity$[ebp], 0

; 9550 : 	int	iLoop = pCurrentCity->getIndex();

	mov	ecx, DWORD PTR _pCurrentCity$[ebp]
	call	?getIndex@CvCity@@QBEHXZ		; CvCity::getIndex
	mov	DWORD PTR _iLoop$[ebp], eax

; 9551 : 	iLoop++;

	mov	edx, DWORD PTR _iLoop$[ebp]
	add	edx, 1
	mov	DWORD PTR _iLoop$[ebp], edx
$LN6@lGetNextCi:

; 9552 : 
; 9553 : 	do
; 9554 : 	{
; 9555 : 		pLoopCity = pkPlayer->nextCity(&iLoop, false);

	push	0
	lea	eax, DWORD PTR _iLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$[ebp], eax

; 9556 : 
; 9557 : 		if(pLoopCity == NULL)

	cmp	DWORD PTR _pLoopCity$[ebp], 0
	jne	SHORT $LN3@lGetNextCi

; 9558 : 		{
; 9559 : 			pLoopCity = pkPlayer->firstCity(&iLoop, false);

	push	0
	lea	ecx, DWORD PTR _iLoop$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
$LN3@lGetNextCi:

; 9560 : 		}
; 9561 : 
; 9562 : 		if((pLoopCity != NULL) && (pLoopCity != pCurrentCity) && !pLoopCity->IsPuppet())  // we don't want the player to be able to cycle to puppeted cities - it kind of defeats teh whole purpose

	cmp	DWORD PTR _pLoopCity$[ebp], 0
	je	SHORT $LN5@lGetNextCi
	mov	edx, DWORD PTR _pLoopCity$[ebp]
	cmp	edx, DWORD PTR _pCurrentCity$[ebp]
	je	SHORT $LN5@lGetNextCi
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?IsPuppet@CvCity@@QBE_NXZ		; CvCity::IsPuppet
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@lGetNextCi

; 9563 : 		{
; 9564 : 			pNextCity = pLoopCity;

	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	mov	DWORD PTR _pNextCity$[ebp], ecx
$LN5@lGetNextCi:

; 9565 : 		}
; 9566 : 
; 9567 : 	}
; 9568 : 	while((pLoopCity != pCurrentCity) && !pNextCity);

	mov	edx, DWORD PTR _pLoopCity$[ebp]
	cmp	edx, DWORD PTR _pCurrentCity$[ebp]
	je	SHORT $LN4@lGetNextCi
	cmp	DWORD PTR _pNextCity$[ebp], 0
	je	SHORT $LN6@lGetNextCi
$LN4@lGetNextCi:

; 9569 : 
; 9570 : 
; 9571 : 	CvLuaCity::Push(L, pNextCity);

	mov	eax, DWORD PTR _pNextCity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8

; 9572 : 	return 1;

	mov	eax, 1

; 9573 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNextCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNextCity
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetPrevCity@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pPrevCity$ = -20					; size = 4
_pCurrentCity$ = -16					; size = 4
_pkPlayer$ = -12					; size = 4
_pLoopCity$ = -8					; size = 4
_iLoop$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetPrevCity@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetPrevCity, COMDAT

; 9576 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 9577 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9578 : 	CvCity* pCurrentCity = CvLuaCity::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pCurrentCity$[ebp], eax

; 9579 : 	CvCity* pLoopCity = NULL;

	mov	DWORD PTR _pLoopCity$[ebp], 0

; 9580 : 	CvCity* pPrevCity = NULL;

	mov	DWORD PTR _pPrevCity$[ebp], 0

; 9581 : 	int	iLoop = pCurrentCity->getIndex();

	mov	ecx, DWORD PTR _pCurrentCity$[ebp]
	call	?getIndex@CvCity@@QBEHXZ		; CvCity::getIndex
	mov	DWORD PTR _iLoop$[ebp], eax

; 9582 : 	iLoop--;

	mov	edx, DWORD PTR _iLoop$[ebp]
	sub	edx, 1
	mov	DWORD PTR _iLoop$[ebp], edx
$LN6@lGetPrevCi:

; 9583 : 
; 9584 : 	do
; 9585 : 	{
; 9586 : 		pLoopCity = pkPlayer->nextCity(&iLoop, true);

	push	1
	lea	eax, DWORD PTR _iLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$[ebp], eax

; 9587 : 
; 9588 : 		if(pLoopCity == NULL)

	cmp	DWORD PTR _pLoopCity$[ebp], 0
	jne	SHORT $LN3@lGetPrevCi

; 9589 : 		{
; 9590 : 			pLoopCity = pkPlayer->firstCity(&iLoop, true);

	push	1
	lea	ecx, DWORD PTR _iLoop$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
$LN3@lGetPrevCi:

; 9591 : 		}
; 9592 : 
; 9593 : 		if((pLoopCity != NULL) && (pLoopCity != pCurrentCity) && !pLoopCity->IsPuppet())  // we don't want the player to be able to cycle to puppeted cities - it kind of defeats teh whole purpose

	cmp	DWORD PTR _pLoopCity$[ebp], 0
	je	SHORT $LN5@lGetPrevCi
	mov	edx, DWORD PTR _pLoopCity$[ebp]
	cmp	edx, DWORD PTR _pCurrentCity$[ebp]
	je	SHORT $LN5@lGetPrevCi
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?IsPuppet@CvCity@@QBE_NXZ		; CvCity::IsPuppet
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@lGetPrevCi

; 9594 : 		{
; 9595 : 			pPrevCity = pLoopCity;

	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	mov	DWORD PTR _pPrevCity$[ebp], ecx
$LN5@lGetPrevCi:

; 9596 : 		}
; 9597 : 
; 9598 : 	}
; 9599 : 	while((pLoopCity != pCurrentCity) && !pPrevCity);

	mov	edx, DWORD PTR _pLoopCity$[ebp]
	cmp	edx, DWORD PTR _pCurrentCity$[ebp]
	je	SHORT $LN4@lGetPrevCi
	cmp	DWORD PTR _pPrevCity$[ebp], 0
	je	SHORT $LN6@lGetPrevCi
$LN4@lGetPrevCi:

; 9600 : 
; 9601 : 	CvLuaCity::Push(L, pPrevCity);

	mov	eax, DWORD PTR _pPrevCity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8

; 9602 : 	return 1;

	mov	eax, 1

; 9603 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPrevCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetPrevCity
_TEXT	ENDS
EXTRN	?GetFreePromotionCount@CvPlayer@@QBEHW4PromotionTypes@@@Z:PROC ; CvPlayer::GetFreePromotionCount
; Function compile flags: /Odtp
;	COMDAT ?lGetFreePromotionCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_iPromotionIndex$ = -8					; size = 4
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetFreePromotionCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFreePromotionCount, COMDAT

; 9608 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 9609 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9610 : 	int iPromotionIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iPromotionIndex$[ebp], eax

; 9611 : 	int iResult = pkPlayer->GetFreePromotionCount((PromotionTypes)iPromotionIndex);

	mov	edx, DWORD PTR _iPromotionIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetFreePromotionCount@CvPlayer@@QBEHW4PromotionTypes@@@Z ; CvPlayer::GetFreePromotionCount
	mov	DWORD PTR _iResult$[ebp], eax

; 9612 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 9613 : 	return 1;

	mov	eax, 1

; 9614 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetFreePromotionCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFreePromotionCount
_TEXT	ENDS
EXTRN	?IsFreePromotion@CvPlayer@@QBE_NW4PromotionTypes@@@Z:PROC ; CvPlayer::IsFreePromotion
; Function compile flags: /Odtp
;	COMDAT ?lIsFreePromotion@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_iPromotionIndex$ = -8					; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsFreePromotion@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsFreePromotion, COMDAT

; 9619 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 9620 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9621 : 	int iPromotionIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iPromotionIndex$[ebp], eax

; 9622 : 	bool bResult = pkPlayer->IsFreePromotion((PromotionTypes)iPromotionIndex);

	mov	edx, DWORD PTR _iPromotionIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?IsFreePromotion@CvPlayer@@QBE_NW4PromotionTypes@@@Z ; CvPlayer::IsFreePromotion
	mov	BYTE PTR _bResult$[ebp], al

; 9623 : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 9624 : 	return 1;

	mov	eax, 1

; 9625 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsFreePromotion@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsFreePromotion
_TEXT	ENDS
EXTRN	?ChangeFreePromotionCount@CvPlayer@@QAEXW4PromotionTypes@@H@Z:PROC ; CvPlayer::ChangeFreePromotionCount
; Function compile flags: /Odtp
;	COMDAT ?lChangeFreePromotionCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_iPromotionIndex$ = -8					; size = 4
_iValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lChangeFreePromotionCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeFreePromotionCount, COMDAT

; 9630 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 9631 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9632 : 	int iPromotionIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iPromotionIndex$[ebp], eax

; 9633 : 	const int iValue = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iValue$[ebp], eax

; 9634 : 	pkPlayer->ChangeFreePromotionCount((PromotionTypes)iPromotionIndex, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iPromotionIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?ChangeFreePromotionCount@CvPlayer@@QAEXW4PromotionTypes@@H@Z ; CvPlayer::ChangeFreePromotionCount

; 9635 : 	return 1;

	mov	eax, 1

; 9636 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChangeFreePromotionCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeFreePromotionCount
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pPlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetEmbarkedGraphicOverride, COMDAT

; 9641 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 9642 : 	CvPlayer* pPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pPlayer$[ebp], eax

; 9643 : 	lua_pushstring(L, pPlayer->GetEmbarkedGraphicOverride());

	mov	ecx, DWORD PTR _pPlayer$[ebp]
	add	ecx, 3132				; 00000c3cH
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 9644 : 	return 1;

	mov	eax, 1

; 9645 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetEmbarkedGraphicOverride
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z:PROC
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z$4
__ehfuncinfo$?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv129 = -108						; size = 4
tv138 = -104						; size = 4
$T251465 = -100						; size = 28
$T251453 = -72						; size = 4
$T251446 = -64						; size = 4
$T251441 = -60						; size = 4
$T251430 = -56						; size = 4
_pPlayer$ = -48						; size = 4
_szGraphic$ = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetEmbarkedGraphicOverride, COMDAT

; 9650 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 96					; 00000060H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 9651 : 	CvPlayer* pPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pPlayer$[ebp], eax

; 9652 : 	const CvString szGraphic = lua_tostring(L, 2);

	push	0
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tolstring
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T251441[ebp], eax
	cmp	DWORD PTR $T251441[ebp], 0
	je	SHORT $LN7@lSetEmbark
	mov	edx, DWORD PTR $T251441[ebp]
	mov	DWORD PTR tv138[ebp], edx
	jmp	SHORT $LN8@lSetEmbark
$LN7@lSetEmbark:
	mov	DWORD PTR tv138[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN8@lSetEmbark:
	mov	eax, DWORD PTR tv138[ebp]
	push	eax
	lea	ecx, DWORD PTR _szGraphic$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 9653 : 
; 9654 : 	pPlayer->SetEmbarkedGraphicOverride(szGraphic);

	lea	ecx, DWORD PTR $T251465[ebp]
	mov	DWORD PTR $T251446[ebp], ecx
	lea	edx, DWORD PTR _szGraphic$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T251446[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T251446[ebp]
	mov	DWORD PTR tv129[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	add	ecx, 3132				; 00000c3cH
	mov	DWORD PTR $T251453[ebp], ecx
	lea	edx, DWORD PTR $T251465[ebp]
	push	edx
	mov	ecx, DWORD PTR $T251453[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T251465[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 9655 : 	return 0;

	mov	DWORD PTR $T251430[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _szGraphic$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T251430[ebp]

; 9656 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _szGraphic$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z$4:
	lea	ecx, DWORD PTR $T251465[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-100]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetEmbarkedGraphicOverride
EXTRN	?AddTemporaryZone@CvTacticalAI@@QAEXVCvTemporaryZone@@@Z:PROC ; CvTacticalAI::AddTemporaryZone
EXTRN	?GetTacticalAI@CvPlayer@@QBEPAVCvTacticalAI@@XZ:PROC ; CvPlayer::GetTacticalAI
; Function compile flags: /Odtp
;	COMDAT ?lAddTemporaryDominanceZone@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T251506 = -44						; size = 4
$T251502 = -40						; size = 4
$T251498 = -36						; size = 4
_zone$ = -32						; size = 20
_pkPlayer$ = -12					; size = 4
_iX$ = -8						; size = 4
_iY$ = -4						; size = 4
_L$ = 8							; size = 4
?lAddTemporaryDominanceZone@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lAddTemporaryDominanceZone, COMDAT

; 9659 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH

; 9660 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9661 : 	const int iX = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iX$[ebp], eax

; 9662 : 	const int iY = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iY$[ebp], eax

; 9663 : 
; 9664 : 	// Notify tactical AI to focus on this area
; 9665 : 	CvTemporaryZone zone;

	mov	DWORD PTR _zone$[ebp], 0
	mov	DWORD PTR _zone$[ebp+4], 0
	mov	DWORD PTR _zone$[ebp+8], 0
	mov	DWORD PTR _zone$[ebp+12], 0

; 9666 : 	zone.SetX(iX);

	mov	eax, DWORD PTR _iX$[ebp]
	mov	DWORD PTR _zone$[ebp], eax

; 9667 : 	zone.SetY(iY);

	mov	ecx, DWORD PTR _iY$[ebp]
	mov	DWORD PTR _zone$[ebp+4], ecx

; 9668 : 	zone.SetTargetType(AI_TACTICAL_TARGET_CITY);

	mov	DWORD PTR _zone$[ebp+8], 1

; 9669 : 	zone.SetLastTurn(GC.getGame().getGameTurn() + GC.getAI_TACTICAL_MAP_TEMP_ZONE_TURNS());

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T251498[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2452
	mov	DWORD PTR $T251502[ebp], eax
	mov	ecx, DWORD PTR $T251498[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	add	eax, DWORD PTR $T251502[ebp]
	mov	DWORD PTR $T251506[ebp], eax
	mov	ecx, DWORD PTR $T251506[ebp]
	mov	DWORD PTR _zone$[ebp+12], ecx

; 9670 : 	pkPlayer->GetTacticalAI()->AddTemporaryZone(zone);

	sub	esp, 20					; 00000014H
	mov	edx, esp
	mov	eax, DWORD PTR _zone$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _zone$[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR _zone$[ebp+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR _zone$[ebp+12]
	mov	DWORD PTR [edx+12], ecx
	mov	eax, DWORD PTR _zone$[ebp+16]
	mov	DWORD PTR [edx+16], eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetTacticalAI@CvPlayer@@QBEPAVCvTacticalAI@@XZ ; CvPlayer::GetTacticalAI
	mov	ecx, eax
	call	?AddTemporaryZone@CvTacticalAI@@QAEXVCvTemporaryZone@@@Z ; CvTacticalAI::AddTemporaryZone

; 9671 : 
; 9672 : 	return 1;

	mov	eax, 1

; 9673 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lAddTemporaryDominanceZone@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lAddTemporaryDominanceZone
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetNaturalWonderYieldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayerTraits$234664 = -12				; size = 4
_pkPlayer$ = -8						; size = 4
_iYieldModifier$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetNaturalWonderYieldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNaturalWonderYieldModifier, COMDAT

; 9676 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 9677 : 	int iYieldModifier = 0;

	mov	DWORD PTR _iYieldModifier$[ebp], 0

; 9678 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9679 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN2@lGetNatura

; 9680 : 	{
; 9681 : 		CvPlayerTraits* pkPlayerTraits = pkPlayer->GetPlayerTraits();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR _pkPlayerTraits$234664[ebp], eax

; 9682 : 		if(pkPlayerTraits)

	cmp	DWORD PTR _pkPlayerTraits$234664[ebp], 0
	je	SHORT $LN2@lGetNatura

; 9683 : 		{
; 9684 : 			iYieldModifier = pkPlayerTraits->GetNaturalWonderYieldModifier();

	mov	ecx, DWORD PTR _pkPlayerTraits$234664[ebp]
	mov	edx, DWORD PTR [ecx+212]
	mov	DWORD PTR _iYieldModifier$[ebp], edx
$LN2@lGetNatura:

; 9685 : 		}
; 9686 : 	}
; 9687 : 
; 9688 : 	lua_pushinteger(L, iYieldModifier);

	mov	eax, DWORD PTR _iYieldModifier$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 9689 : 	return 1;

	mov	eax, 1

; 9690 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNaturalWonderYieldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNaturalWonderYieldModifier
_TEXT	ENDS
EXTRN	?GetBuildingClassYieldModifier@CvPlayerPolicies@@QAEHW4BuildingClassTypes@@W4YieldTypes@@@Z:PROC ; CvPlayerPolicies::GetBuildingClassYieldModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetPolicyBuildingClassYieldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_modifier$234677 = -16					; size = 4
_eYieldType$ = -12					; size = 4
_pkPlayer$ = -8						; size = 4
_eBuildingClass$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetPolicyBuildingClassYieldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyBuildingClassYieldModifier, COMDAT

; 9693 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 9694 : 	const BuildingClassTypes eBuildingClass = (BuildingClassTypes)luaL_checkint(L, 2);

	push	2
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eBuildingClass$[ebp], eax

; 9695 : 	const YieldTypes eYieldType = (YieldTypes)luaL_checkint(L, 3);

	push	3
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eYieldType$[ebp], eax

; 9696 : 
; 9697 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9698 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lGetPolicy@8

; 9699 : 	{
; 9700 : 		int modifier = pkPlayer->GetPlayerPolicies()->GetBuildingClassYieldModifier(eBuildingClass, eYieldType);

	mov	eax, DWORD PTR _eYieldType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eBuildingClass$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetBuildingClassYieldModifier@CvPlayerPolicies@@QAEHW4BuildingClassTypes@@W4YieldTypes@@@Z ; CvPlayerPolicies::GetBuildingClassYieldModifier
	mov	DWORD PTR _modifier$234677[ebp], eax

; 9701 : 		lua_pushinteger(L, modifier);

	mov	edx, DWORD PTR _modifier$234677[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 9702 : 
; 9703 : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN2@lGetPolicy@8
$LN1@lGetPolicy@8:

; 9704 : 	}
; 9705 : 
; 9706 : 	return 0;

	xor	eax, eax
$LN2@lGetPolicy@8:

; 9707 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPolicyBuildingClassYieldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyBuildingClassYieldModifier
_TEXT	ENDS
EXTRN	?GetBuildingClassYieldChange@CvPlayerPolicies@@QAEHW4BuildingClassTypes@@W4YieldTypes@@@Z:PROC ; CvPlayerPolicies::GetBuildingClassYieldChange
; Function compile flags: /Odtp
;	COMDAT ?lGetPolicyBuildingClassYieldChange@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_modifier$234689 = -16					; size = 4
_eYieldType$ = -12					; size = 4
_pkPlayer$ = -8						; size = 4
_eBuildingClass$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetPolicyBuildingClassYieldChange@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyBuildingClassYieldChange, COMDAT

; 9711 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 9712 : 	const BuildingClassTypes eBuildingClass = (BuildingClassTypes)luaL_checkint(L, 2);

	push	2
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eBuildingClass$[ebp], eax

; 9713 : 	const YieldTypes eYieldType = (YieldTypes)luaL_checkint(L, 3);

	push	3
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eYieldType$[ebp], eax

; 9714 : 
; 9715 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9716 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lGetPolicy@9

; 9717 : 	{
; 9718 : 		int modifier = pkPlayer->GetPlayerPolicies()->GetBuildingClassYieldChange(eBuildingClass, eYieldType);

	mov	eax, DWORD PTR _eYieldType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eBuildingClass$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetBuildingClassYieldChange@CvPlayerPolicies@@QAEHW4BuildingClassTypes@@W4YieldTypes@@@Z ; CvPlayerPolicies::GetBuildingClassYieldChange
	mov	DWORD PTR _modifier$234689[ebp], eax

; 9719 : 		lua_pushinteger(L, modifier);

	mov	edx, DWORD PTR _modifier$234689[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 9720 : 
; 9721 : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN2@lGetPolicy@9
$LN1@lGetPolicy@9:

; 9722 : 	}
; 9723 : 
; 9724 : 	return 0;

	xor	eax, eax
$LN2@lGetPolicy@9:

; 9725 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPolicyBuildingClassYieldChange@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyBuildingClassYieldChange
_TEXT	ENDS
EXTRN	?GetStealTechSlowerModifier@CvPolicyEntry@@QBEHXZ:PROC ; CvPolicyEntry::GetStealTechSlowerModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetPolicyEspionageModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iIndex$ = -8						; size = 4
_pkPolicyInfo$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetPolicyEspionageModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyEspionageModifier, COMDAT

; 9729 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 9730 : 	const PolicyTypes iIndex = (PolicyTypes)lua_tointeger(L, 2);

	push	2
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 9731 : 	CvPolicyEntry* pkPolicyInfo = GC.getPolicyInfo(iIndex);

	mov	ecx, DWORD PTR _iIndex$[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getPolicyInfo@CvGlobals@@QAEPAVCvPolicyEntry@@W4PolicyTypes@@@Z ; CvGlobals::getPolicyInfo
	mov	DWORD PTR _pkPolicyInfo$[ebp], eax

; 9732 : 	CvAssertMsg(pkPolicyInfo, "pkPolicyInfo is null!");
; 9733 : 	if (!pkPolicyInfo)

	cmp	DWORD PTR _pkPolicyInfo$[ebp], 0
	jne	SHORT $LN1@lGetPolicy@10

; 9734 : 	{
; 9735 : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN2@lGetPolicy@10
$LN1@lGetPolicy@10:

; 9736 : 	}
; 9737 : 
; 9738 : 	lua_pushinteger(L, pkPolicyInfo->GetStealTechSlowerModifier());

	mov	ecx, DWORD PTR _pkPolicyInfo$[ebp]
	call	?GetStealTechSlowerModifier@CvPolicyEntry@@QBEHXZ ; CvPolicyEntry::GetStealTechSlowerModifier
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 9739 : 	return 1;

	mov	eax, 1
$LN2@lGetPolicy@10:

; 9740 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPolicyEspionageModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyEspionageModifier
_TEXT	ENDS
EXTRN	?GetCatchSpiesModifier@CvPolicyEntry@@QBEHXZ:PROC ; CvPolicyEntry::GetCatchSpiesModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetPolicyEspionageCatchSpiesModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iIndex$ = -8						; size = 4
_pkPolicyInfo$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetPolicyEspionageCatchSpiesModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyEspionageCatchSpiesModifier, COMDAT

; 9744 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 9745 : 	const PolicyTypes iIndex = (PolicyTypes)lua_tointeger(L, 2);

	push	2
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 9746 : 	CvPolicyEntry* pkPolicyInfo = GC.getPolicyInfo(iIndex);

	mov	ecx, DWORD PTR _iIndex$[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getPolicyInfo@CvGlobals@@QAEPAVCvPolicyEntry@@W4PolicyTypes@@@Z ; CvGlobals::getPolicyInfo
	mov	DWORD PTR _pkPolicyInfo$[ebp], eax

; 9747 : 	CvAssertMsg(pkPolicyInfo, "pkPolicyInfo is null!");
; 9748 : 	if (!pkPolicyInfo)

	cmp	DWORD PTR _pkPolicyInfo$[ebp], 0
	jne	SHORT $LN1@lGetPolicy@11

; 9749 : 	{
; 9750 : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN2@lGetPolicy@11
$LN1@lGetPolicy@11:

; 9751 : 	}
; 9752 : 
; 9753 : 	lua_pushinteger(L, pkPolicyInfo->GetCatchSpiesModifier());

	mov	ecx, DWORD PTR _pkPolicyInfo$[ebp]
	call	?GetCatchSpiesModifier@CvPolicyEntry@@QBEHXZ ; CvPolicyEntry::GetCatchSpiesModifier
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 9754 : 	return 1;

	mov	eax, 1
$LN2@lGetPolicy@11:

; 9755 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPolicyEspionageCatchSpiesModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyEspionageCatchSpiesModifier
_TEXT	ENDS
EXTRN	?GetBuildingClassYieldChange@CvPlayer@@QAEHW4BuildingClassTypes@@W4YieldTypes@@@Z:PROC ; CvPlayer::GetBuildingClassYieldChange
; Function compile flags: /Odtp
;	COMDAT ?lGetPlayerBuildingClassYieldChange@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iChange$234715 = -16					; size = 4
_eYieldType$ = -12					; size = 4
_pkPlayer$ = -8						; size = 4
_eBuildingClass$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetPlayerBuildingClassYieldChange@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPlayerBuildingClassYieldChange, COMDAT

; 9759 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 9760 : 	const BuildingClassTypes eBuildingClass = (BuildingClassTypes)luaL_checkint(L, 2);

	push	2
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eBuildingClass$[ebp], eax

; 9761 : 	const YieldTypes eYieldType = (YieldTypes)luaL_checkint(L, 3);

	push	3
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eYieldType$[ebp], eax

; 9762 : 
; 9763 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9764 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN1@lGetPlayer@3

; 9765 : 	{
; 9766 : 		int iChange = pkPlayer->GetBuildingClassYieldChange(eBuildingClass, eYieldType);

	mov	eax, DWORD PTR _eYieldType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eBuildingClass$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetBuildingClassYieldChange@CvPlayer@@QAEHW4BuildingClassTypes@@W4YieldTypes@@@Z ; CvPlayer::GetBuildingClassYieldChange
	mov	DWORD PTR _iChange$234715[ebp], eax

; 9767 : 		lua_pushinteger(L, iChange);

	mov	edx, DWORD PTR _iChange$234715[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 9768 : 
; 9769 : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN2@lGetPlayer@3
$LN1@lGetPlayer@3:

; 9770 : 	}
; 9771 : 
; 9772 : 	return 0;

	xor	eax, eax
$LN2@lGetPlayer@3:

; 9773 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPlayerBuildingClassYieldChange@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPlayerBuildingClassYieldChange
_TEXT	ENDS
EXTRN	?GetBuildingClassHappiness@CvBuildingEntry@@QBEHH@Z:PROC ; CvBuildingEntry::GetBuildingClassHappiness
EXTRN	?getBuildingClassInfo@CvGlobals@@QAEPAVCvBuildingClassInfo@@W4BuildingClassTypes@@@Z:PROC ; CvGlobals::getBuildingClassInfo
; Function compile flags: /Odtp
;	COMDAT ?lGetPlayerBuildingClassHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkParentBuilding$234736 = -32				; size = 4
_eParentBuilding$234733 = -28				; size = 4
_pkBuildingClassInfo$234731 = -24			; size = 4
_eParentBuildingClass$234729 = -20			; size = 4
_iI$234725 = -16					; size = 4
_iChange$234724 = -12					; size = 4
_pkPlayer$ = -8						; size = 4
_eOtherBuildingClass$ = -4				; size = 4
_L$ = 8							; size = 4
?lGetPlayerBuildingClassHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPlayerBuildingClassHappiness, COMDAT

; 9777 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 9778 : 	const BuildingClassTypes eOtherBuildingClass = (BuildingClassTypes)luaL_checkint(L, 2);

	push	2
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eOtherBuildingClass$[ebp], eax

; 9779 : 
; 9780 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9781 : 	if(pkPlayer)

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	$LN7@lGetPlayer@4

; 9782 : 	{
; 9783 : 		int iChange = 0;

	mov	DWORD PTR _iChange$234724[ebp], 0

; 9784 : 
; 9785 : #ifdef AUI_WARNING_FIXES
; 9786 : 		for (uint iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)
; 9787 : #else
; 9788 : 		for(int iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)

	mov	DWORD PTR _iI$234725[ebp], 0
	jmp	SHORT $LN6@lGetPlayer@4
$LN5@lGetPlayer@4:
	mov	edx, DWORD PTR _iI$234725[ebp]
	add	edx, 1
	mov	DWORD PTR _iI$234725[ebp], edx
$LN6@lGetPlayer@4:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	cmp	DWORD PTR _iI$234725[ebp], eax
	jge	SHORT $LN4@lGetPlayer@4

; 9789 : #endif
; 9790 : 		{
; 9791 : 			BuildingClassTypes eParentBuildingClass = (BuildingClassTypes) iI;

	mov	eax, DWORD PTR _iI$234725[ebp]
	mov	DWORD PTR _eParentBuildingClass$234729[ebp], eax

; 9792 : 
; 9793 : 			CvBuildingClassInfo* pkBuildingClassInfo = GC.getBuildingClassInfo(eParentBuildingClass);

	mov	ecx, DWORD PTR _eParentBuildingClass$234729[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingClassInfo@CvGlobals@@QAEPAVCvBuildingClassInfo@@W4BuildingClassTypes@@@Z ; CvGlobals::getBuildingClassInfo
	mov	DWORD PTR _pkBuildingClassInfo$234731[ebp], eax

; 9794 : 			if(!pkBuildingClassInfo)

	cmp	DWORD PTR _pkBuildingClassInfo$234731[ebp], 0
	jne	SHORT $LN3@lGetPlayer@4

; 9795 : 			{
; 9796 : 				continue;

	jmp	SHORT $LN5@lGetPlayer@4
$LN3@lGetPlayer@4:

; 9797 : 			}
; 9798 : 			
; 9799 : 			BuildingTypes eParentBuilding = (BuildingTypes)pkPlayer->getCivilizationInfo().getCivilizationBuildings(eParentBuildingClass);

	mov	edx, DWORD PTR _eParentBuildingClass$234729[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationBuildings
	mov	DWORD PTR _eParentBuilding$234733[ebp], eax

; 9800 : 			if (eParentBuilding != NO_BUILDING && pkPlayer->countNumBuildings(eParentBuilding) > 0)

	cmp	DWORD PTR _eParentBuilding$234733[ebp], -1
	je	SHORT $LN2@lGetPlayer@4
	mov	eax, DWORD PTR _eParentBuilding$234733[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?countNumBuildings@CvPlayer@@QBEHW4BuildingTypes@@@Z ; CvPlayer::countNumBuildings
	test	eax, eax
	jle	SHORT $LN2@lGetPlayer@4

; 9801 : 			{
; 9802 : 				CvBuildingEntry* pkParentBuilding = GC.getBuildingInfo(eParentBuilding);

	mov	ecx, DWORD PTR _eParentBuilding$234733[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkParentBuilding$234736[ebp], eax

; 9803 : 				if (pkParentBuilding)

	cmp	DWORD PTR _pkParentBuilding$234736[ebp], 0
	je	SHORT $LN2@lGetPlayer@4

; 9804 : 				{
; 9805 : 					iChange += pkParentBuilding->GetBuildingClassHappiness(eOtherBuildingClass);

	mov	edx, DWORD PTR _eOtherBuildingClass$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkParentBuilding$234736[ebp]
	call	?GetBuildingClassHappiness@CvBuildingEntry@@QBEHH@Z ; CvBuildingEntry::GetBuildingClassHappiness
	add	eax, DWORD PTR _iChange$234724[ebp]
	mov	DWORD PTR _iChange$234724[ebp], eax
$LN2@lGetPlayer@4:

; 9806 : 				}
; 9807 : 			}
; 9808 : 		}

	jmp	$LN5@lGetPlayer@4
$LN4@lGetPlayer@4:

; 9809 : 
; 9810 : 		lua_pushinteger(L, iChange);

	mov	eax, DWORD PTR _iChange$234724[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 9811 : 
; 9812 : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN8@lGetPlayer@4
$LN7@lGetPlayer@4:

; 9813 : 	}
; 9814 : 
; 9815 : 	return 0;

	xor	eax, eax
$LN8@lGetPlayer@4:

; 9816 : 	
; 9817 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPlayerBuildingClassHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPlayerBuildingClassHappiness
_TEXT	ENDS
EXTRN	?WasResurrectedBy@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::WasResurrectedBy
; Function compile flags: /Odtp
;	COMDAT ?lWasResurrectedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bResurrected$ = -5					; size = 1
_eWithPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lWasResurrectedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lWasResurrectedBy, COMDAT

; 9822 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 9823 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9824 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eWithPlayer$[ebp], eax

; 9825 : 
; 9826 : 	const bool bResurrected = pkPlayer->GetDiplomacyAI()->WasResurrectedBy(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?WasResurrectedBy@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::WasResurrectedBy
	mov	BYTE PTR _bResurrected$[ebp], al

; 9827 : 
; 9828 : 	lua_pushboolean(L, bResurrected);

	movzx	eax, BYTE PTR _bResurrected$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 9829 : 	return 1;

	mov	eax, 1

; 9830 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lWasResurrectedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lWasResurrectedBy
_TEXT	ENDS
EXTRN	?WasResurrectedThisTurnBy@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::WasResurrectedThisTurnBy
; Function compile flags: /Odtp
;	COMDAT ?lWasResurrectedThisTurnBy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bResurrected$ = -5					; size = 1
_eWithPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lWasResurrectedThisTurnBy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lWasResurrectedThisTurnBy, COMDAT

; 9834 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 9835 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9836 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eWithPlayer$[ebp], eax

; 9837 : 
; 9838 : 	const bool bResurrected = pkPlayer->GetDiplomacyAI()->WasResurrectedThisTurnBy(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?WasResurrectedThisTurnBy@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::WasResurrectedThisTurnBy
	mov	BYTE PTR _bResurrected$[ebp], al

; 9839 : 
; 9840 : 	lua_pushboolean(L, bResurrected);

	movzx	eax, BYTE PTR _bResurrected$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 9841 : 	return 1;

	mov	eax, 1

; 9842 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lWasResurrectedThisTurnBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lWasResurrectedThisTurnBy
_TEXT	ENDS
PUBLIC	??1?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ ; std::vector<Opinion,std::allocator<Opinion> >::~vector<Opinion,std::allocator<Opinion> >
PUBLIC	??A?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAUOpinion@@I@Z ; std::vector<Opinion,std::allocator<Opinion> >::operator[]
PUBLIC	?size@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEIXZ ; std::vector<Opinion,std::allocator<Opinion> >::size
PUBLIC	??_C@_0BG@LALIDOFE@?$FLCOLOR_NEGATIVE_TEXT?$FN?$AA@ ; `string'
PUBLIC	??_C@_0BN@JKLEEGAK@?$FLCOLOR_FADING_NEGATIVE_TEXT?$FN?$AA@ ; `string'
PUBLIC	??_C@_0N@MLIKMHMN@?$FLCOLOR_GREY?$FN?$AA@	; `string'
PUBLIC	??_C@_0BN@JDCAKBBJ@?$FLCOLOR_FADING_POSITIVE_TEXT?$FN?$AA@ ; `string'
PUBLIC	??_C@_0BG@LJCMNJEH@?$FLCOLOR_POSITIVE_TEXT?$FN?$AA@ ; `string'
PUBLIC	??_C@_01LBDDMOBJ@?$FN?$AA@			; `string'
PUBLIC	??_C@_07BFBDFODN@?$FLCOLOR_?$AA@		; `string'
PUBLIC	??_C@_0L@LJEHDPKM@?$FLENDCOLOR?$FN?$AA@		; `string'
PUBLIC	??$stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@@Z ; std::stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>
PUBLIC	?begin@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@XZ ; std::vector<Opinion,std::allocator<Opinion> >::begin
PUBLIC	?end@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@XZ ; std::vector<Opinion,std::allocator<Opinion> >::end
PUBLIC	??_C@_0CA@LIJDABPL@TXT_KEY_SPECIFIC_DIPLO_STRING_3?$AA@ ; `string'
PUBLIC	??_C@_0CA@KBIIDALK@TXT_KEY_SPECIFIC_DIPLO_STRING_2?$AA@ ; `string'
PUBLIC	??0Opinion@@QAE@XZ				; Opinion::Opinion
PUBLIC	??1Opinion@@QAE@XZ				; Opinion::~Opinion
PUBLIC	??_C@_0CA@IKKFGDHJ@TXT_KEY_SPECIFIC_DIPLO_STRING_1?$AA@ ; `string'
PUBLIC	??_C@_0CG@BBGPMMAI@TXT_KEY_DIPLO_SUPPORTED_THEIR_HO@ ; `string'
PUBLIC	??_C@_0CE@BOKEFDBM@TXT_KEY_DIPLO_FOILED_THEIR_PROPO@ ; `string'
PUBLIC	??_C@_0CH@LAPBJBJI@TXT_KEY_DIPLO_SUPPORTED_THEIR_PR@ ; `string'
PUBLIC	??_C@_0CE@MNKFJFJE@TXT_KEY_DIPLO_DISLIKED_OUR_PROPO@ ; `string'
PUBLIC	??_C@_0CB@IIEFPJAO@TXT_KEY_DIPLO_LIKED_OUR_PROPOSAL@ ; `string'
PUBLIC	??_C@_0BL@DFNKHEFF@TXT_KEY_DIPLO_PAID_TRIBUTE?$AA@ ; `string'
PUBLIC	??_C@_0CD@NELFONGC@TXT_KEY_DIPLO_ASSISTANCE_FROM_TH@ ; `string'
PUBLIC	??_C@_0BP@IIMJMBNJ@TXT_KEY_DIPLO_CAPTURED_CAPITAL?$AA@ ; `string'
PUBLIC	??_C@_0BE@FEHNBBKF@TXT_KEY_DIPLO_NUKED?$AA@	; `string'
PUBLIC	??_C@_0CB@PLFCIKEO@TXT_KEY_DIPLO_ASSISTANCE_TO_THEM@ ; `string'
PUBLIC	??_C@_0BP@HOJOFCMK@TXT_KEY_DIPLO_REFUSED_REQUESTS?$AA@ ; `string'
PUBLIC	??_C@_0BJ@EMNKGMPG@TXT_KEY_DIPLO_COMMON_FOE?$AA@ ; `string'
PUBLIC	??_C@_0BM@EHNFCJBO@TXT_KEY_DIPLO_TRADE_PARTNER?$AA@ ; `string'
PUBLIC	??_C@_0CA@JBGMOIGM@TXT_KEY_DIPLO_RECKLESS_EXPANDER?$AA@ ; `string'
PUBLIC	??_C@_0BL@NJMBGKJC@TXT_KEY_DIPLO_MUTUAL_ENEMY?$AA@ ; `string'
PUBLIC	??_C@_0CF@GILKKBEK@TXT_KEY_DIPLO_HUMAN_DENOUNCED_FR@ ; `string'
PUBLIC	??_C@_0CA@FNLADHBO@TXT_KEY_DIPLO_DENOUNCED_BY_THEM?$AA@ ; `string'
PUBLIC	??_C@_0BO@IPHFDEFH@TXT_KEY_DIPLO_DENOUNCED_BY_US?$AA@ ; `string'
PUBLIC	??_C@_0CI@GOGEGDOJ@TXT_KEY_DIPLO_HUMAN_FRIEND_DECLA@ ; `string'
PUBLIC	??_C@_0CM@IMOFGMGN@TXT_KEY_DIPLO_HUMAN_DECLARED_WAR@ ; `string'
PUBLIC	??_C@_0CF@KIFANCHN@TXT_KEY_DIPLO_HUMAN_FRIEND_DENOU@ ; `string'
PUBLIC	??_C@_0CG@HPHBMLI@TXT_KEY_DIPLO_HUMAN_DENOUNCED_FR@ ; `string'
PUBLIC	??_C@_0DA@CENMHNAM@TXT_KEY_DIPLO_DENOUNCED_BY_PEOPL@ ; `string'
PUBLIC	??_C@_0CD@OIPADGDM@TXT_KEY_DIPLO_HUMAN_DOF_WITH_ENE@ ; `string'
PUBLIC	??_C@_0BJ@BNMOMJHL@TXT_KEY_DIPLO_MUTUAL_DOF?$AA@ ; `string'
PUBLIC	??_C@_0BC@DHJIIPLG@TXT_KEY_DIPLO_DOF?$AA@	; `string'
PUBLIC	??_C@_0BP@JLJPLJKF@TXT_KEY_DIPLO_SIDED_WITH_MINOR?$AA@ ; `string'
PUBLIC	??_C@_0CH@MFPLMFOO@TXT_KEY_DIPLO_PROTECTED_MINORS_B@ ; `string'
PUBLIC	??_C@_0CI@GFEHEGDC@TXT_KEY_DIPLO_PROTECTED_MINORS_A@ ; `string'
PUBLIC	??_C@_0CG@MBMCJKCH@TXT_KEY_DIPLO_PROTECTED_MINORS_K@ ; `string'
PUBLIC	??_C@_0BP@FGIJJCKA@TXT_KEY_DIPLO_COOP_WAR_PROMISE?$AA@ ; `string'
PUBLIC	??_C@_0CC@MBECMOA@TXT_KEY_DIPLO_SPY_PROMISE_IGNORE@ ; `string'
PUBLIC	??_C@_0CB@MKAFEIEJ@TXT_KEY_DIPLO_SPY_PROMISE_BROKEN@ ; `string'
PUBLIC	??_C@_0CF@EPFDJEKE@TXT_KEY_DIPLO_NO_DIG_PROMISE_IGN@ ; `string'
PUBLIC	??_C@_0CE@OEFEGGCB@TXT_KEY_DIPLO_NO_DIG_PROMISE_BRO@ ; `string'
PUBLIC	??_C@_0CJ@NMNAOCPP@TXT_KEY_DIPLO_NO_CONVERT_PROMISE@ ; `string'
PUBLIC	??_C@_0CI@GONNKAKM@TXT_KEY_DIPLO_NO_CONVERT_PROMISE@ ; `string'
PUBLIC	??_C@_0CP@NEAJLHO@TXT_KEY_DIPLO_BULLY_CITY_STATE_P@ ; `string'
PUBLIC	??_C@_0CO@EFMDNAAI@TXT_KEY_DIPLO_BULLY_CITY_STATE_P@ ; `string'
PUBLIC	??_C@_0CJ@OPLBCFKL@TXT_KEY_DIPLO_CITY_STATE_PROMISE@ ; `string'
PUBLIC	??_C@_0DE@CNIFHHEM@TXT_KEY_DIPLO_CITY_STATE_PROMISE@ ; `string'
PUBLIC	??_C@_0CB@INJHDJBK@TXT_KEY_DIPLO_CITY_STATE_PROMISE@ ; `string'
PUBLIC	??_C@_0CF@MNPHNFNK@TXT_KEY_DIPLO_BORDER_PROMISE_IGN@ ; `string'
PUBLIC	??_C@_0BN@DGKILGEH@TXT_KEY_DIPLO_BORDER_PROMISE?$AA@ ; `string'
PUBLIC	??_C@_0CI@EDJJPONK@TXT_KEY_DIPLO_EXPANSION_PROMISE_@ ; `string'
PUBLIC	??_C@_0CA@GDLBCNLC@TXT_KEY_DIPLO_EXPANSION_PROMISE?$AA@ ; `string'
PUBLIC	??_C@_0CH@NLIMKKKG@TXT_KEY_DIPLO_MILITARY_PROMISE_I@ ; `string'
PUBLIC	??_C@_0DC@CPOGBCMF@TXT_KEY_DIPLO_MILITARY_PROMISE_B@ ; `string'
PUBLIC	??_C@_0BP@FGLNAEAF@TXT_KEY_DIPLO_MILITARY_PROMISE?$AA@ ; `string'
PUBLIC	??_C@_0BO@IBMPMCGE@TXT_KEY_DIPLO_SHARED_INTRIGUE?$AA@ ; `string'
PUBLIC	??_C@_0BO@GNPBFMBN@TXT_KEY_DIPLO_CAUGHT_STEALING?$AA@ ; `string'
PUBLIC	??_C@_0CK@HLBLNAOO@TXT_KEY_DIPLO_DIFFERENT_LATE_POL@ ; `string'
PUBLIC	??_C@_0CF@DHLEPEKC@TXT_KEY_DIPLO_SAME_LATE_POLICY_T@ ; `string'
PUBLIC	??_C@_0CE@GDDOIAHJ@TXT_KEY_DIPLO_ADOPTING_HIS_RELIG@ ; `string'
PUBLIC	??_C@_0CD@IFPMBAHL@TXT_KEY_DIPLO_ADOPTING_MY_RELIGI@ ; `string'
PUBLIC	??_C@_0CE@EBOJCECO@TXT_KEY_DIPLO_RELIGIOUS_CONVERSI@ ; `string'
PUBLIC	??_C@_0BL@CCFFDMHE@TXT_KEY_DIPLO_CULTURE_BOMB?$AA@ ; `string'
PUBLIC	??_C@_0BL@HGOPDNEC@TXT_KEY_DIPLO_TRADE_DEMAND?$AA@ ; `string'
PUBLIC	??_C@_0CA@GPMAMGKA@TXT_KEY_DIPLO_STOP_SPYING_ASKED?$AA@ ; `string'
PUBLIC	??_C@_0BO@CGAJOBJA@TXT_KEY_DIPLO_NO_SETTLE_ASKED?$AA@ ; `string'
PUBLIC	??_C@_0CB@FDHCBPND@TXT_KEY_DIPLO_FORGAVE_FOR_SPYING@ ; `string'
PUBLIC	??_C@_0BK@IHKMDBJ@TXT_KEY_DIPLO_HAS_EMBASSY?$AA@ ; `string'
PUBLIC	??_C@_0BP@IFJFJGKE@TXT_KEY_DIPLO_CITIES_LIBERATED?$AA@ ; `string'
PUBLIC	??_C@_0BK@DBJPADDC@TXT_KEY_DIPLO_RESURRECTED?$AA@ ; `string'
PUBLIC	??_C@_0BO@JCNLPMBA@TXT_KEY_DIPLO_LANDMARKS_BUILT?$AA@ ; `string'
PUBLIC	??_C@_0CB@OGEDBACO@TXT_KEY_DIPLO_CIVILIANS_RETURNED@ ; `string'
PUBLIC	??_C@_0BF@KLLNFBFM@TXT_KEY_DIPLO_AFRAID?$AA@	; `string'
PUBLIC	??_C@_0BL@LOJDILAJ@TXT_KEY_WARMONGER_HATE_LOW?$AA@ ; `string'
PUBLIC	??_C@_0BL@GDENNBEM@TXT_KEY_WARMONGER_HATE_MID?$AA@ ; `string'
PUBLIC	??_C@_0BM@INAPLEEO@TXT_KEY_WARMONGER_HATE_HIGH?$AA@ ; `string'
PUBLIC	??_C@_01CLKCMJKC@?5?$AA@			; `string'
PUBLIC	??_C@_0CF@JMEGLBMB@TXT_KEY_DIPLO_WARMONGER_THREAT_M@ ; `string'
PUBLIC	??_C@_0CF@CDFEGNFH@TXT_KEY_DIPLO_WARMONGER_THREAT_M@ ; `string'
PUBLIC	??_C@_0CG@BOPPBEBI@TXT_KEY_DIPLO_WARMONGER_THREAT_S@ ; `string'
PUBLIC	??_C@_0CI@EKMALDA@TXT_KEY_DIPLO_WARMONGER_THREAT_C@ ; `string'
PUBLIC	??_C@_0CA@EBALGONA@TXT_KEY_DIPLO_MINOR_CIV_DISPUTE?$AA@ ; `string'
PUBLIC	??_C@_0BN@BDMBADG@TXT_KEY_DIPLO_WONDER_DISPUTE?$AA@ ; `string'
PUBLIC	??_C@_0BL@JDFDGCPH@TXT_KEY_DIPLO_LAND_DISPUTE?$AA@ ; `string'
PUBLIC	??_C@_0BO@DNOBGCJD@TXT_KEY_DIPLO_NO_LAND_DISPUTE?$AA@ ; `string'
PUBLIC	??_C@_0BL@LJMNHGNF@TXT_KEY_DIPLO_PAST_WAR_BAD?$AA@ ; `string'
PUBLIC	??_C@_0BP@GHHGFGNM@TXT_KEY_DIPLO_PAST_WAR_NEUTRAL?$AA@ ; `string'
PUBLIC	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back
PUBLIC	??_C@_0BF@HKMKNKFB@TXT_KEY_DIPLO_AT_WAR?$AA@	; `string'
PUBLIC	??0?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ ; std::vector<Opinion,std::allocator<Opinion> >::vector<Opinion,std::allocator<Opinion> >
PUBLIC	__$ArrayPad$
EXTRN	__imp_?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@@Z:PROC
EXTRN	__imp_?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z:PROC
EXTRN	__imp_?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIABV12@I@Z:PROC
EXTRN	__imp_?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIPBD@Z:PROC
EXTRN	__imp_?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ:PROC
EXTRN	__imp_?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIABV12@I@Z:PROC
EXTRN	__imp_?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB:DWORD
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:PROC
EXTRN	?GetScenarioModifier3@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetScenarioModifier3
EXTRN	?GetScenarioModifier2@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetScenarioModifier2
EXTRN	?GetScenarioModifier1@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetScenarioModifier1
EXTRN	?GetSupportedMyHostingScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetSupportedMyHostingScore
EXTRN	?GetFoiledMyProposalScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetFoiledMyProposalScore
EXTRN	?GetSupportedMyProposalScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetSupportedMyProposalScore
EXTRN	?GetDislikedTheirProposalScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDislikedTheirProposalScore
EXTRN	?GetLikedTheirProposalScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetLikedTheirProposalScore
EXTRN	?GetPaidTributeToScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetPaidTributeToScore
EXTRN	?GetGaveAssistanceToScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetGaveAssistanceToScore
EXTRN	?GetCapitalCapturedByScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetCapitalCapturedByScore
EXTRN	?GetNukedByScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetNukedByScore
EXTRN	?GetRecentAssistScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetRecentAssistScore
EXTRN	?GetCommonFoeScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetCommonFoeScore
EXTRN	?GetRecentTradeScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetRecentTradeScore
EXTRN	?GetRecklessExpanderScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetRecklessExpanderScore
EXTRN	?GetDenouncedEnemyScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDenouncedEnemyScore
EXTRN	?GetDenouncedFriendScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDenouncedFriendScore
EXTRN	?GetDenouncedThemScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDenouncedThemScore
EXTRN	?GetDenouncedUsScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDenouncedUsScore
EXTRN	?GetFriendDeclaredWarOnUsScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetFriendDeclaredWarOnUsScore
EXTRN	?GetWeDeclaredWarOnFriendScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetWeDeclaredWarOnFriendScore
EXTRN	?GetFriendDenouncedUsScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetFriendDenouncedUsScore
EXTRN	?GetWeDenouncedFriendScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetWeDenouncedFriendScore
EXTRN	?GetFriendDenouncementScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetFriendDenouncementScore
EXTRN	?GetDOFWithAnyEnemyScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDOFWithAnyEnemyScore
EXTRN	?GetDOFWithAnyFriendScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDOFWithAnyFriendScore
EXTRN	?GetDOFAcceptedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDOFAcceptedScore
EXTRN	?GetAngryAboutSidedWithProtectedMinorScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetAngryAboutSidedWithProtectedMinorScore
EXTRN	?GetAngryAboutProtectedMinorBulliedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetAngryAboutProtectedMinorBulliedScore
EXTRN	?GetAngryAboutProtectedMinorAttackedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetAngryAboutProtectedMinorAttackedScore
EXTRN	?GetAngryAboutProtectedMinorKilledScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetAngryAboutProtectedMinorKilledScore
EXTRN	?GetBrokenCoopWarPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetBrokenCoopWarPromiseScore
EXTRN	?GetIgnoredSpyPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetIgnoredSpyPromiseScore
EXTRN	?GetBrokenSpyPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetBrokenSpyPromiseScore
EXTRN	?GetIgnoredNoDiggingPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetIgnoredNoDiggingPromiseScore
EXTRN	?GetBrokenNoDiggingPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetBrokenNoDiggingPromiseScore
EXTRN	?GetIgnoredNoConvertPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetIgnoredNoConvertPromiseScore
EXTRN	?GetBrokenNoConvertPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetBrokenNoConvertPromiseScore
EXTRN	?GetIgnoredBullyCityStatePromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetIgnoredBullyCityStatePromiseScore
EXTRN	?GetBrokenBullyCityStatePromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetBrokenBullyCityStatePromiseScore
EXTRN	?GetIgnoredAttackCityStatePromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetIgnoredAttackCityStatePromiseScore
EXTRN	?GetBrokenAttackCityStatePromiseWithAnybodyScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetBrokenAttackCityStatePromiseWithAnybodyScore
EXTRN	?GetBrokenAttackCityStatePromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetBrokenAttackCityStatePromiseScore
EXTRN	?GetIgnoredBorderPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetIgnoredBorderPromiseScore
EXTRN	?GetBrokenBorderPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetBrokenBorderPromiseScore
EXTRN	?GetIgnoredExpansionPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetIgnoredExpansionPromiseScore
EXTRN	?GetBrokenExpansionPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetBrokenExpansionPromiseScore
EXTRN	?GetIgnoredMilitaryPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetIgnoredMilitaryPromiseScore
EXTRN	?GetBrokenMilitaryPromiseWithAnybodyScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetBrokenMilitaryPromiseWithAnybodyScore
EXTRN	?GetBrokenMilitaryPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetBrokenMilitaryPromiseScore
EXTRN	?GetTimesIntrigueSharedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetTimesIntrigueSharedScore
EXTRN	?GetTimesRobbedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetTimesRobbedScore
EXTRN	?GetDifferentLatePoliciesScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDifferentLatePoliciesScore
EXTRN	?getPolicyBranchInfo@CvGlobals@@QAEPAVCvPolicyBranchEntry@@W4PolicyBranchTypes@@@Z:PROC ; CvGlobals::getPolicyBranchInfo
EXTRN	?GetSameLatePoliciesScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetSameLatePoliciesScore
EXTRN	?GetHasAdoptedMyReligionScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetHasAdoptedMyReligionScore
EXTRN	?GetHasAdoptedHisReligionScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetHasAdoptedHisReligionScore
EXTRN	?GetReligiousConversionPointsScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetReligiousConversionPointsScore
EXTRN	?GetTimesCultureBombedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetTimesCultureBombedScore
EXTRN	?GetDemandEverMadeScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDemandEverMadeScore
EXTRN	?GetStopSpyingRequestScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetStopSpyingRequestScore
EXTRN	?GetNoSetterRequestScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetNoSetterRequestScore
EXTRN	?GetForgaveForSpyingScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetForgaveForSpyingScore
EXTRN	?GetEmbassyScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetEmbassyScore
EXTRN	?GetLiberatedCitiesScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetLiberatedCitiesScore
EXTRN	?GetResurrectedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetResurrectedScore
EXTRN	?GetLandmarksBuiltForMeScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetLandmarksBuiltForMeScore
EXTRN	?GetCiviliansReturnedToMeScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetCiviliansReturnedToMeScore
EXTRN	__imp_??4String@Localization@@QAEAAV01@PBD@Z:PROC
EXTRN	?GetWarmongerHate@CvDiplomacyAI@@QBEHXZ:PROC	; CvDiplomacyAI::GetWarmongerHate
EXTRN	__imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ:PROC
EXTRN	__imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z:PROC
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	?GetWarmongerThreatScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetWarmongerThreatScore
EXTRN	?GetMinorCivDisputeLevelScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetMinorCivDisputeLevelScore
EXTRN	?GetWonderDisputeLevelScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetWonderDisputeLevelScore
EXTRN	?GetLandDisputeLevelScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetLandDisputeLevelScore
;	COMDAT ??_C@_0BG@LALIDOFE@?$FLCOLOR_NEGATIVE_TEXT?$FN?$AA@
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
CONST	SEGMENT
??_C@_0BG@LALIDOFE@?$FLCOLOR_NEGATIVE_TEXT?$FN?$AA@ DB '[COLOR_NEGATIVE_T'
	DB	'EXT]', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@JKLEEGAK@?$FLCOLOR_FADING_NEGATIVE_TEXT?$FN?$AA@
CONST	SEGMENT
??_C@_0BN@JKLEEGAK@?$FLCOLOR_FADING_NEGATIVE_TEXT?$FN?$AA@ DB '[COLOR_FAD'
	DB	'ING_NEGATIVE_TEXT]', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MLIKMHMN@?$FLCOLOR_GREY?$FN?$AA@
CONST	SEGMENT
??_C@_0N@MLIKMHMN@?$FLCOLOR_GREY?$FN?$AA@ DB '[COLOR_GREY]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@JDCAKBBJ@?$FLCOLOR_FADING_POSITIVE_TEXT?$FN?$AA@
CONST	SEGMENT
??_C@_0BN@JDCAKBBJ@?$FLCOLOR_FADING_POSITIVE_TEXT?$FN?$AA@ DB '[COLOR_FAD'
	DB	'ING_POSITIVE_TEXT]', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LJCMNJEH@?$FLCOLOR_POSITIVE_TEXT?$FN?$AA@
CONST	SEGMENT
??_C@_0BG@LJCMNJEH@?$FLCOLOR_POSITIVE_TEXT?$FN?$AA@ DB '[COLOR_POSITIVE_T'
	DB	'EXT]', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_01LBDDMOBJ@?$FN?$AA@
CONST	SEGMENT
??_C@_01LBDDMOBJ@?$FN?$AA@ DB ']', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07BFBDFODN@?$FLCOLOR_?$AA@
CONST	SEGMENT
??_C@_07BFBDFODN@?$FLCOLOR_?$AA@ DB '[COLOR_', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LJEHDPKM@?$FLENDCOLOR?$FN?$AA@
CONST	SEGMENT
??_C@_0L@LJEHDPKM@?$FLENDCOLOR?$FN?$AA@ DB '[ENDCOLOR]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@LIJDABPL@TXT_KEY_SPECIFIC_DIPLO_STRING_3?$AA@
CONST	SEGMENT
??_C@_0CA@LIJDABPL@TXT_KEY_SPECIFIC_DIPLO_STRING_3?$AA@ DB 'TXT_KEY_SPECI'
	DB	'FIC_DIPLO_STRING_3', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KBIIDALK@TXT_KEY_SPECIFIC_DIPLO_STRING_2?$AA@
CONST	SEGMENT
??_C@_0CA@KBIIDALK@TXT_KEY_SPECIFIC_DIPLO_STRING_2?$AA@ DB 'TXT_KEY_SPECI'
	DB	'FIC_DIPLO_STRING_2', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@IKKFGDHJ@TXT_KEY_SPECIFIC_DIPLO_STRING_1?$AA@
CONST	SEGMENT
??_C@_0CA@IKKFGDHJ@TXT_KEY_SPECIFIC_DIPLO_STRING_1?$AA@ DB 'TXT_KEY_SPECI'
	DB	'FIC_DIPLO_STRING_1', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@BBGPMMAI@TXT_KEY_DIPLO_SUPPORTED_THEIR_HO@
CONST	SEGMENT
??_C@_0CG@BBGPMMAI@TXT_KEY_DIPLO_SUPPORTED_THEIR_HO@ DB 'TXT_KEY_DIPLO_SU'
	DB	'PPORTED_THEIR_HOSTING', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@BOKEFDBM@TXT_KEY_DIPLO_FOILED_THEIR_PROPO@
CONST	SEGMENT
??_C@_0CE@BOKEFDBM@TXT_KEY_DIPLO_FOILED_THEIR_PROPO@ DB 'TXT_KEY_DIPLO_FO'
	DB	'ILED_THEIR_PROPOSAL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@LAPBJBJI@TXT_KEY_DIPLO_SUPPORTED_THEIR_PR@
CONST	SEGMENT
??_C@_0CH@LAPBJBJI@TXT_KEY_DIPLO_SUPPORTED_THEIR_PR@ DB 'TXT_KEY_DIPLO_SU'
	DB	'PPORTED_THEIR_PROPOSAL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@MNKFJFJE@TXT_KEY_DIPLO_DISLIKED_OUR_PROPO@
CONST	SEGMENT
??_C@_0CE@MNKFJFJE@TXT_KEY_DIPLO_DISLIKED_OUR_PROPO@ DB 'TXT_KEY_DIPLO_DI'
	DB	'SLIKED_OUR_PROPOSAL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@IIEFPJAO@TXT_KEY_DIPLO_LIKED_OUR_PROPOSAL@
CONST	SEGMENT
??_C@_0CB@IIEFPJAO@TXT_KEY_DIPLO_LIKED_OUR_PROPOSAL@ DB 'TXT_KEY_DIPLO_LI'
	DB	'KED_OUR_PROPOSAL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DFNKHEFF@TXT_KEY_DIPLO_PAID_TRIBUTE?$AA@
CONST	SEGMENT
??_C@_0BL@DFNKHEFF@TXT_KEY_DIPLO_PAID_TRIBUTE?$AA@ DB 'TXT_KEY_DIPLO_PAID'
	DB	'_TRIBUTE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@NELFONGC@TXT_KEY_DIPLO_ASSISTANCE_FROM_TH@
CONST	SEGMENT
??_C@_0CD@NELFONGC@TXT_KEY_DIPLO_ASSISTANCE_FROM_TH@ DB 'TXT_KEY_DIPLO_AS'
	DB	'SISTANCE_FROM_THEM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@IIMJMBNJ@TXT_KEY_DIPLO_CAPTURED_CAPITAL?$AA@
CONST	SEGMENT
??_C@_0BP@IIMJMBNJ@TXT_KEY_DIPLO_CAPTURED_CAPITAL?$AA@ DB 'TXT_KEY_DIPLO_'
	DB	'CAPTURED_CAPITAL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FEHNBBKF@TXT_KEY_DIPLO_NUKED?$AA@
CONST	SEGMENT
??_C@_0BE@FEHNBBKF@TXT_KEY_DIPLO_NUKED?$AA@ DB 'TXT_KEY_DIPLO_NUKED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@PLFCIKEO@TXT_KEY_DIPLO_ASSISTANCE_TO_THEM@
CONST	SEGMENT
??_C@_0CB@PLFCIKEO@TXT_KEY_DIPLO_ASSISTANCE_TO_THEM@ DB 'TXT_KEY_DIPLO_AS'
	DB	'SISTANCE_TO_THEM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@HOJOFCMK@TXT_KEY_DIPLO_REFUSED_REQUESTS?$AA@
CONST	SEGMENT
??_C@_0BP@HOJOFCMK@TXT_KEY_DIPLO_REFUSED_REQUESTS?$AA@ DB 'TXT_KEY_DIPLO_'
	DB	'REFUSED_REQUESTS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EMNKGMPG@TXT_KEY_DIPLO_COMMON_FOE?$AA@
CONST	SEGMENT
??_C@_0BJ@EMNKGMPG@TXT_KEY_DIPLO_COMMON_FOE?$AA@ DB 'TXT_KEY_DIPLO_COMMON'
	DB	'_FOE', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@EHNFCJBO@TXT_KEY_DIPLO_TRADE_PARTNER?$AA@
CONST	SEGMENT
??_C@_0BM@EHNFCJBO@TXT_KEY_DIPLO_TRADE_PARTNER?$AA@ DB 'TXT_KEY_DIPLO_TRA'
	DB	'DE_PARTNER', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JBGMOIGM@TXT_KEY_DIPLO_RECKLESS_EXPANDER?$AA@
CONST	SEGMENT
??_C@_0CA@JBGMOIGM@TXT_KEY_DIPLO_RECKLESS_EXPANDER?$AA@ DB 'TXT_KEY_DIPLO'
	DB	'_RECKLESS_EXPANDER', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NJMBGKJC@TXT_KEY_DIPLO_MUTUAL_ENEMY?$AA@
CONST	SEGMENT
??_C@_0BL@NJMBGKJC@TXT_KEY_DIPLO_MUTUAL_ENEMY?$AA@ DB 'TXT_KEY_DIPLO_MUTU'
	DB	'AL_ENEMY', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@GILKKBEK@TXT_KEY_DIPLO_HUMAN_DENOUNCED_FR@
CONST	SEGMENT
??_C@_0CF@GILKKBEK@TXT_KEY_DIPLO_HUMAN_DENOUNCED_FR@ DB 'TXT_KEY_DIPLO_HU'
	DB	'MAN_DENOUNCED_FRIEND', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FNLADHBO@TXT_KEY_DIPLO_DENOUNCED_BY_THEM?$AA@
CONST	SEGMENT
??_C@_0CA@FNLADHBO@TXT_KEY_DIPLO_DENOUNCED_BY_THEM?$AA@ DB 'TXT_KEY_DIPLO'
	DB	'_DENOUNCED_BY_THEM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@IPHFDEFH@TXT_KEY_DIPLO_DENOUNCED_BY_US?$AA@
CONST	SEGMENT
??_C@_0BO@IPHFDEFH@TXT_KEY_DIPLO_DENOUNCED_BY_US?$AA@ DB 'TXT_KEY_DIPLO_D'
	DB	'ENOUNCED_BY_US', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@GOGEGDOJ@TXT_KEY_DIPLO_HUMAN_FRIEND_DECLA@
CONST	SEGMENT
??_C@_0CI@GOGEGDOJ@TXT_KEY_DIPLO_HUMAN_FRIEND_DECLA@ DB 'TXT_KEY_DIPLO_HU'
	DB	'MAN_FRIEND_DECLARED_WAR', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@IMOFGMGN@TXT_KEY_DIPLO_HUMAN_DECLARED_WAR@
CONST	SEGMENT
??_C@_0CM@IMOFGMGN@TXT_KEY_DIPLO_HUMAN_DECLARED_WAR@ DB 'TXT_KEY_DIPLO_HU'
	DB	'MAN_DECLARED_WAR_ON_FRIENDS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@KIFANCHN@TXT_KEY_DIPLO_HUMAN_FRIEND_DENOU@
CONST	SEGMENT
??_C@_0CF@KIFANCHN@TXT_KEY_DIPLO_HUMAN_FRIEND_DENOU@ DB 'TXT_KEY_DIPLO_HU'
	DB	'MAN_FRIEND_DENOUNCED', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@HPHBMLI@TXT_KEY_DIPLO_HUMAN_DENOUNCED_FR@
CONST	SEGMENT
??_C@_0CG@HPHBMLI@TXT_KEY_DIPLO_HUMAN_DENOUNCED_FR@ DB 'TXT_KEY_DIPLO_HUM'
	DB	'AN_DENOUNCED_FRIENDS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@CENMHNAM@TXT_KEY_DIPLO_DENOUNCED_BY_PEOPL@
CONST	SEGMENT
??_C@_0DA@CENMHNAM@TXT_KEY_DIPLO_DENOUNCED_BY_PEOPL@ DB 'TXT_KEY_DIPLO_DE'
	DB	'NOUNCED_BY_PEOPLE_WE_TRUST_MORE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@OIPADGDM@TXT_KEY_DIPLO_HUMAN_DOF_WITH_ENE@
CONST	SEGMENT
??_C@_0CD@OIPADGDM@TXT_KEY_DIPLO_HUMAN_DOF_WITH_ENE@ DB 'TXT_KEY_DIPLO_HU'
	DB	'MAN_DOF_WITH_ENEMY', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BNMOMJHL@TXT_KEY_DIPLO_MUTUAL_DOF?$AA@
CONST	SEGMENT
??_C@_0BJ@BNMOMJHL@TXT_KEY_DIPLO_MUTUAL_DOF?$AA@ DB 'TXT_KEY_DIPLO_MUTUAL'
	DB	'_DOF', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DHJIIPLG@TXT_KEY_DIPLO_DOF?$AA@
CONST	SEGMENT
??_C@_0BC@DHJIIPLG@TXT_KEY_DIPLO_DOF?$AA@ DB 'TXT_KEY_DIPLO_DOF', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@JLJPLJKF@TXT_KEY_DIPLO_SIDED_WITH_MINOR?$AA@
CONST	SEGMENT
??_C@_0BP@JLJPLJKF@TXT_KEY_DIPLO_SIDED_WITH_MINOR?$AA@ DB 'TXT_KEY_DIPLO_'
	DB	'SIDED_WITH_MINOR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@MFPLMFOO@TXT_KEY_DIPLO_PROTECTED_MINORS_B@
CONST	SEGMENT
??_C@_0CH@MFPLMFOO@TXT_KEY_DIPLO_PROTECTED_MINORS_B@ DB 'TXT_KEY_DIPLO_PR'
	DB	'OTECTED_MINORS_BULLIED', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@GFEHEGDC@TXT_KEY_DIPLO_PROTECTED_MINORS_A@
CONST	SEGMENT
??_C@_0CI@GFEHEGDC@TXT_KEY_DIPLO_PROTECTED_MINORS_A@ DB 'TXT_KEY_DIPLO_PR'
	DB	'OTECTED_MINORS_ATTACKED', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@MBMCJKCH@TXT_KEY_DIPLO_PROTECTED_MINORS_K@
CONST	SEGMENT
??_C@_0CG@MBMCJKCH@TXT_KEY_DIPLO_PROTECTED_MINORS_K@ DB 'TXT_KEY_DIPLO_PR'
	DB	'OTECTED_MINORS_KILLED', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@FGIJJCKA@TXT_KEY_DIPLO_COOP_WAR_PROMISE?$AA@
CONST	SEGMENT
??_C@_0BP@FGIJJCKA@TXT_KEY_DIPLO_COOP_WAR_PROMISE?$AA@ DB 'TXT_KEY_DIPLO_'
	DB	'COOP_WAR_PROMISE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@MBECMOA@TXT_KEY_DIPLO_SPY_PROMISE_IGNORE@
CONST	SEGMENT
??_C@_0CC@MBECMOA@TXT_KEY_DIPLO_SPY_PROMISE_IGNORE@ DB 'TXT_KEY_DIPLO_SPY'
	DB	'_PROMISE_IGNORED', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@MKAFEIEJ@TXT_KEY_DIPLO_SPY_PROMISE_BROKEN@
CONST	SEGMENT
??_C@_0CB@MKAFEIEJ@TXT_KEY_DIPLO_SPY_PROMISE_BROKEN@ DB 'TXT_KEY_DIPLO_SP'
	DB	'Y_PROMISE_BROKEN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@EPFDJEKE@TXT_KEY_DIPLO_NO_DIG_PROMISE_IGN@
CONST	SEGMENT
??_C@_0CF@EPFDJEKE@TXT_KEY_DIPLO_NO_DIG_PROMISE_IGN@ DB 'TXT_KEY_DIPLO_NO'
	DB	'_DIG_PROMISE_IGNORED', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OEFEGGCB@TXT_KEY_DIPLO_NO_DIG_PROMISE_BRO@
CONST	SEGMENT
??_C@_0CE@OEFEGGCB@TXT_KEY_DIPLO_NO_DIG_PROMISE_BRO@ DB 'TXT_KEY_DIPLO_NO'
	DB	'_DIG_PROMISE_BROKEN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@NMNAOCPP@TXT_KEY_DIPLO_NO_CONVERT_PROMISE@
CONST	SEGMENT
??_C@_0CJ@NMNAOCPP@TXT_KEY_DIPLO_NO_CONVERT_PROMISE@ DB 'TXT_KEY_DIPLO_NO'
	DB	'_CONVERT_PROMISE_IGNORED', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@GONNKAKM@TXT_KEY_DIPLO_NO_CONVERT_PROMISE@
CONST	SEGMENT
??_C@_0CI@GONNKAKM@TXT_KEY_DIPLO_NO_CONVERT_PROMISE@ DB 'TXT_KEY_DIPLO_NO'
	DB	'_CONVERT_PROMISE_BROKEN', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@NEAJLHO@TXT_KEY_DIPLO_BULLY_CITY_STATE_P@
CONST	SEGMENT
??_C@_0CP@NEAJLHO@TXT_KEY_DIPLO_BULLY_CITY_STATE_P@ DB 'TXT_KEY_DIPLO_BUL'
	DB	'LY_CITY_STATE_PROMISE_IGNORED', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@EFMDNAAI@TXT_KEY_DIPLO_BULLY_CITY_STATE_P@
CONST	SEGMENT
??_C@_0CO@EFMDNAAI@TXT_KEY_DIPLO_BULLY_CITY_STATE_P@ DB 'TXT_KEY_DIPLO_BU'
	DB	'LLY_CITY_STATE_PROMISE_BROKEN', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@OPLBCFKL@TXT_KEY_DIPLO_CITY_STATE_PROMISE@
CONST	SEGMENT
??_C@_0CJ@OPLBCFKL@TXT_KEY_DIPLO_CITY_STATE_PROMISE@ DB 'TXT_KEY_DIPLO_CI'
	DB	'TY_STATE_PROMISE_IGNORED', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@CNIFHHEM@TXT_KEY_DIPLO_CITY_STATE_PROMISE@
CONST	SEGMENT
??_C@_0DE@CNIFHHEM@TXT_KEY_DIPLO_CITY_STATE_PROMISE@ DB 'TXT_KEY_DIPLO_CI'
	DB	'TY_STATE_PROMISE_BROKEN_WITH_OTHERS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@INJHDJBK@TXT_KEY_DIPLO_CITY_STATE_PROMISE@
CONST	SEGMENT
??_C@_0CB@INJHDJBK@TXT_KEY_DIPLO_CITY_STATE_PROMISE@ DB 'TXT_KEY_DIPLO_CI'
	DB	'TY_STATE_PROMISE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@MNPHNFNK@TXT_KEY_DIPLO_BORDER_PROMISE_IGN@
CONST	SEGMENT
??_C@_0CF@MNPHNFNK@TXT_KEY_DIPLO_BORDER_PROMISE_IGN@ DB 'TXT_KEY_DIPLO_BO'
	DB	'RDER_PROMISE_IGNORED', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DGKILGEH@TXT_KEY_DIPLO_BORDER_PROMISE?$AA@
CONST	SEGMENT
??_C@_0BN@DGKILGEH@TXT_KEY_DIPLO_BORDER_PROMISE?$AA@ DB 'TXT_KEY_DIPLO_BO'
	DB	'RDER_PROMISE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@EDJJPONK@TXT_KEY_DIPLO_EXPANSION_PROMISE_@
CONST	SEGMENT
??_C@_0CI@EDJJPONK@TXT_KEY_DIPLO_EXPANSION_PROMISE_@ DB 'TXT_KEY_DIPLO_EX'
	DB	'PANSION_PROMISE_IGNORED', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@GDLBCNLC@TXT_KEY_DIPLO_EXPANSION_PROMISE?$AA@
CONST	SEGMENT
??_C@_0CA@GDLBCNLC@TXT_KEY_DIPLO_EXPANSION_PROMISE?$AA@ DB 'TXT_KEY_DIPLO'
	DB	'_EXPANSION_PROMISE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@NLIMKKKG@TXT_KEY_DIPLO_MILITARY_PROMISE_I@
CONST	SEGMENT
??_C@_0CH@NLIMKKKG@TXT_KEY_DIPLO_MILITARY_PROMISE_I@ DB 'TXT_KEY_DIPLO_MI'
	DB	'LITARY_PROMISE_IGNORED', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@CPOGBCMF@TXT_KEY_DIPLO_MILITARY_PROMISE_B@
CONST	SEGMENT
??_C@_0DC@CPOGBCMF@TXT_KEY_DIPLO_MILITARY_PROMISE_B@ DB 'TXT_KEY_DIPLO_MI'
	DB	'LITARY_PROMISE_BROKEN_WITH_OTHERS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@FGLNAEAF@TXT_KEY_DIPLO_MILITARY_PROMISE?$AA@
CONST	SEGMENT
??_C@_0BP@FGLNAEAF@TXT_KEY_DIPLO_MILITARY_PROMISE?$AA@ DB 'TXT_KEY_DIPLO_'
	DB	'MILITARY_PROMISE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@IBMPMCGE@TXT_KEY_DIPLO_SHARED_INTRIGUE?$AA@
CONST	SEGMENT
??_C@_0BO@IBMPMCGE@TXT_KEY_DIPLO_SHARED_INTRIGUE?$AA@ DB 'TXT_KEY_DIPLO_S'
	DB	'HARED_INTRIGUE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@GNPBFMBN@TXT_KEY_DIPLO_CAUGHT_STEALING?$AA@
CONST	SEGMENT
??_C@_0BO@GNPBFMBN@TXT_KEY_DIPLO_CAUGHT_STEALING?$AA@ DB 'TXT_KEY_DIPLO_C'
	DB	'AUGHT_STEALING', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@HLBLNAOO@TXT_KEY_DIPLO_DIFFERENT_LATE_POL@
CONST	SEGMENT
??_C@_0CK@HLBLNAOO@TXT_KEY_DIPLO_DIFFERENT_LATE_POL@ DB 'TXT_KEY_DIPLO_DI'
	DB	'FFERENT_LATE_POLICY_TREES', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@DHLEPEKC@TXT_KEY_DIPLO_SAME_LATE_POLICY_T@
CONST	SEGMENT
??_C@_0CF@DHLEPEKC@TXT_KEY_DIPLO_SAME_LATE_POLICY_T@ DB 'TXT_KEY_DIPLO_SA'
	DB	'ME_LATE_POLICY_TREES', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@GDDOIAHJ@TXT_KEY_DIPLO_ADOPTING_HIS_RELIG@
CONST	SEGMENT
??_C@_0CE@GDDOIAHJ@TXT_KEY_DIPLO_ADOPTING_HIS_RELIG@ DB 'TXT_KEY_DIPLO_AD'
	DB	'OPTING_HIS_RELIGION', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@IFPMBAHL@TXT_KEY_DIPLO_ADOPTING_MY_RELIGI@
CONST	SEGMENT
??_C@_0CD@IFPMBAHL@TXT_KEY_DIPLO_ADOPTING_MY_RELIGI@ DB 'TXT_KEY_DIPLO_AD'
	DB	'OPTING_MY_RELIGION', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@EBOJCECO@TXT_KEY_DIPLO_RELIGIOUS_CONVERSI@
CONST	SEGMENT
??_C@_0CE@EBOJCECO@TXT_KEY_DIPLO_RELIGIOUS_CONVERSI@ DB 'TXT_KEY_DIPLO_RE'
	DB	'LIGIOUS_CONVERSIONS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@CCFFDMHE@TXT_KEY_DIPLO_CULTURE_BOMB?$AA@
CONST	SEGMENT
??_C@_0BL@CCFFDMHE@TXT_KEY_DIPLO_CULTURE_BOMB?$AA@ DB 'TXT_KEY_DIPLO_CULT'
	DB	'URE_BOMB', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@HGOPDNEC@TXT_KEY_DIPLO_TRADE_DEMAND?$AA@
CONST	SEGMENT
??_C@_0BL@HGOPDNEC@TXT_KEY_DIPLO_TRADE_DEMAND?$AA@ DB 'TXT_KEY_DIPLO_TRAD'
	DB	'E_DEMAND', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@GPMAMGKA@TXT_KEY_DIPLO_STOP_SPYING_ASKED?$AA@
CONST	SEGMENT
??_C@_0CA@GPMAMGKA@TXT_KEY_DIPLO_STOP_SPYING_ASKED?$AA@ DB 'TXT_KEY_DIPLO'
	DB	'_STOP_SPYING_ASKED', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@CGAJOBJA@TXT_KEY_DIPLO_NO_SETTLE_ASKED?$AA@
CONST	SEGMENT
??_C@_0BO@CGAJOBJA@TXT_KEY_DIPLO_NO_SETTLE_ASKED?$AA@ DB 'TXT_KEY_DIPLO_N'
	DB	'O_SETTLE_ASKED', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@FDHCBPND@TXT_KEY_DIPLO_FORGAVE_FOR_SPYING@
CONST	SEGMENT
??_C@_0CB@FDHCBPND@TXT_KEY_DIPLO_FORGAVE_FOR_SPYING@ DB 'TXT_KEY_DIPLO_FO'
	DB	'RGAVE_FOR_SPYING', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@IHKMDBJ@TXT_KEY_DIPLO_HAS_EMBASSY?$AA@
CONST	SEGMENT
??_C@_0BK@IHKMDBJ@TXT_KEY_DIPLO_HAS_EMBASSY?$AA@ DB 'TXT_KEY_DIPLO_HAS_EM'
	DB	'BASSY', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@IFJFJGKE@TXT_KEY_DIPLO_CITIES_LIBERATED?$AA@
CONST	SEGMENT
??_C@_0BP@IFJFJGKE@TXT_KEY_DIPLO_CITIES_LIBERATED?$AA@ DB 'TXT_KEY_DIPLO_'
	DB	'CITIES_LIBERATED', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DBJPADDC@TXT_KEY_DIPLO_RESURRECTED?$AA@
CONST	SEGMENT
??_C@_0BK@DBJPADDC@TXT_KEY_DIPLO_RESURRECTED?$AA@ DB 'TXT_KEY_DIPLO_RESUR'
	DB	'RECTED', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@JCNLPMBA@TXT_KEY_DIPLO_LANDMARKS_BUILT?$AA@
CONST	SEGMENT
??_C@_0BO@JCNLPMBA@TXT_KEY_DIPLO_LANDMARKS_BUILT?$AA@ DB 'TXT_KEY_DIPLO_L'
	DB	'ANDMARKS_BUILT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@OGEDBACO@TXT_KEY_DIPLO_CIVILIANS_RETURNED@
CONST	SEGMENT
??_C@_0CB@OGEDBACO@TXT_KEY_DIPLO_CIVILIANS_RETURNED@ DB 'TXT_KEY_DIPLO_CI'
	DB	'VILIANS_RETURNED', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KLLNFBFM@TXT_KEY_DIPLO_AFRAID?$AA@
CONST	SEGMENT
??_C@_0BF@KLLNFBFM@TXT_KEY_DIPLO_AFRAID?$AA@ DB 'TXT_KEY_DIPLO_AFRAID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@LOJDILAJ@TXT_KEY_WARMONGER_HATE_LOW?$AA@
CONST	SEGMENT
??_C@_0BL@LOJDILAJ@TXT_KEY_WARMONGER_HATE_LOW?$AA@ DB 'TXT_KEY_WARMONGER_'
	DB	'HATE_LOW', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GDENNBEM@TXT_KEY_WARMONGER_HATE_MID?$AA@
CONST	SEGMENT
??_C@_0BL@GDENNBEM@TXT_KEY_WARMONGER_HATE_MID?$AA@ DB 'TXT_KEY_WARMONGER_'
	DB	'HATE_MID', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@INAPLEEO@TXT_KEY_WARMONGER_HATE_HIGH?$AA@
CONST	SEGMENT
??_C@_0BM@INAPLEEO@TXT_KEY_WARMONGER_HATE_HIGH?$AA@ DB 'TXT_KEY_WARMONGER'
	DB	'_HATE_HIGH', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5?$AA@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@JMEGLBMB@TXT_KEY_DIPLO_WARMONGER_THREAT_M@
CONST	SEGMENT
??_C@_0CF@JMEGLBMB@TXT_KEY_DIPLO_WARMONGER_THREAT_M@ DB 'TXT_KEY_DIPLO_WA'
	DB	'RMONGER_THREAT_MINOR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@CDFEGNFH@TXT_KEY_DIPLO_WARMONGER_THREAT_M@
CONST	SEGMENT
??_C@_0CF@CDFEGNFH@TXT_KEY_DIPLO_WARMONGER_THREAT_M@ DB 'TXT_KEY_DIPLO_WA'
	DB	'RMONGER_THREAT_MAJOR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@BOPPBEBI@TXT_KEY_DIPLO_WARMONGER_THREAT_S@
CONST	SEGMENT
??_C@_0CG@BOPPBEBI@TXT_KEY_DIPLO_WARMONGER_THREAT_S@ DB 'TXT_KEY_DIPLO_WA'
	DB	'RMONGER_THREAT_SEVERE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@EKMALDA@TXT_KEY_DIPLO_WARMONGER_THREAT_C@
CONST	SEGMENT
??_C@_0CI@EKMALDA@TXT_KEY_DIPLO_WARMONGER_THREAT_C@ DB 'TXT_KEY_DIPLO_WAR'
	DB	'MONGER_THREAT_CRITICAL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@EBALGONA@TXT_KEY_DIPLO_MINOR_CIV_DISPUTE?$AA@
CONST	SEGMENT
??_C@_0CA@EBALGONA@TXT_KEY_DIPLO_MINOR_CIV_DISPUTE?$AA@ DB 'TXT_KEY_DIPLO'
	DB	'_MINOR_CIV_DISPUTE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@BDMBADG@TXT_KEY_DIPLO_WONDER_DISPUTE?$AA@
CONST	SEGMENT
??_C@_0BN@BDMBADG@TXT_KEY_DIPLO_WONDER_DISPUTE?$AA@ DB 'TXT_KEY_DIPLO_WON'
	DB	'DER_DISPUTE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JDFDGCPH@TXT_KEY_DIPLO_LAND_DISPUTE?$AA@
CONST	SEGMENT
??_C@_0BL@JDFDGCPH@TXT_KEY_DIPLO_LAND_DISPUTE?$AA@ DB 'TXT_KEY_DIPLO_LAND'
	DB	'_DISPUTE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@DNOBGCJD@TXT_KEY_DIPLO_NO_LAND_DISPUTE?$AA@
CONST	SEGMENT
??_C@_0BO@DNOBGCJD@TXT_KEY_DIPLO_NO_LAND_DISPUTE?$AA@ DB 'TXT_KEY_DIPLO_N'
	DB	'O_LAND_DISPUTE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@LJMNHGNF@TXT_KEY_DIPLO_PAST_WAR_BAD?$AA@
CONST	SEGMENT
??_C@_0BL@LJMNHGNF@TXT_KEY_DIPLO_PAST_WAR_BAD?$AA@ DB 'TXT_KEY_DIPLO_PAST'
	DB	'_WAR_BAD', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@GHHGFGNM@TXT_KEY_DIPLO_PAST_WAR_NEUTRAL?$AA@
CONST	SEGMENT
??_C@_0BP@GHHGFGNM@TXT_KEY_DIPLO_PAST_WAR_NEUTRAL?$AA@ DB 'TXT_KEY_DIPLO_'
	DB	'PAST_WAR_NEUTRAL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HKMKNKFB@TXT_KEY_DIPLO_AT_WAR?$AA@
CONST	SEGMENT
??_C@_0BF@HKMKNKFB@TXT_KEY_DIPLO_AT_WAR?$AA@ DB 'TXT_KEY_DIPLO_AT_WAR', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	0a9H
	DD	FLAT:__unwindtable$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$6
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$8
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$10
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$11
	DD	0bH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$12
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$13
	DD	0dH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$14
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$15
	DD	0fH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$16
	DD	010H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$17
	DD	010H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$18
	DD	010H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$19
	DD	010H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$20
	DD	010H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$21
	DD	010H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$22
	DD	010H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$23
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$24
	DD	018H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$25
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$26
	DD	01aH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$27
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$28
	DD	01cH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$29
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$30
	DD	01eH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$31
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$32
	DD	020H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$33
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$34
	DD	022H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$35
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$36
	DD	024H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$37
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$38
	DD	026H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$39
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$40
	DD	028H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$41
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$42
	DD	02aH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$43
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$44
	DD	02cH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$45
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$46
	DD	02eH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$47
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$48
	DD	030H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$49
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$50
	DD	032H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$51
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$52
	DD	034H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$53
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$54
	DD	036H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$55
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$56
	DD	038H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$57
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$58
	DD	03aH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$59
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$60
	DD	03cH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$61
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$62
	DD	03eH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$63
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$64
	DD	040H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$65
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$66
	DD	042H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$67
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$68
	DD	044H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$69
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$70
	DD	046H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$71
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$72
	DD	048H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$73
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$74
	DD	04aH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$75
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$76
	DD	04cH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$77
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$78
	DD	04eH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$79
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$80
	DD	050H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$81
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$82
	DD	052H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$83
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$84
	DD	054H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$85
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$86
	DD	056H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$87
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$88
	DD	058H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$89
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$90
	DD	05aH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$91
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$92
	DD	05cH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$93
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$94
	DD	05eH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$95
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$96
	DD	060H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$97
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$98
	DD	062H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$99
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$100
	DD	064H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$101
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$102
	DD	066H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$103
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$104
	DD	068H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$105
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$106
	DD	06aH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$107
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$108
	DD	06cH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$109
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$110
	DD	06eH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$111
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$112
	DD	070H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$113
	DD	070H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$114
	DD	070H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$115
	DD	070H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$116
	DD	070H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$117
	DD	070H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$118
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$119
	DD	077H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$120
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$121
	DD	079H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$122
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$123
	DD	07bH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$124
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$125
	DD	07dH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$126
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$127
	DD	07fH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$128
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$129
	DD	081H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$130
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$131
	DD	083H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$132
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$133
	DD	085H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$134
	DD	085H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$135
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$136
	DD	088H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$137
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$138
	DD	08aH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$139
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$140
	DD	08cH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$141
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$142
	DD	08eH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$143
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$144
	DD	090H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$145
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$146
	DD	092H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$147
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$148
	DD	094H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$149
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$150
	DD	096H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$151
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$152
	DD	098H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$153
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$154
	DD	09aH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$155
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$156
	DD	09cH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$157
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$158
	DD	09eH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$159
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$160
	DD	0a0H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$161
	DD	0a1H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$162
	DD	0a2H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$163
	DD	0a3H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$164
	DD	0a4H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$165
	DD	0a5H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$166
	DD	0a6H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$167
	DD	0a7H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$168
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv2314 = -16216						; size = 4
tv1891 = -16212						; size = 4
tv2311 = -16208						; size = 4
tv1875 = -16204						; size = 4
tv2308 = -16200						; size = 4
tv4267 = -16196						; size = 4
tv2305 = -16192						; size = 4
tv4258 = -16188						; size = 4
tv2302 = -16184						; size = 4
tv4214 = -16180						; size = 4
tv2299 = -16176						; size = 4
tv4285 = -16172						; size = 4
tv2296 = -16168						; size = 4
tv4220 = -16164						; size = 4
tv2293 = -16160						; size = 4
tv4291 = -16156						; size = 4
tv2290 = -16152						; size = 4
tv4289 = -16148						; size = 4
tv2287 = -16144						; size = 4
tv4212 = -16140						; size = 4
tv2284 = -16136						; size = 4
tv2361 = -16132						; size = 4
tv2281 = -16128						; size = 4
tv2406 = -16124						; size = 4
tv2278 = -16120						; size = 4
tv2476 = -16116						; size = 4
tv2276 = -16112						; size = 4
tv2408 = -16108						; size = 4
tv2273 = -16104						; size = 4
tv2478 = -16100						; size = 4
tv2270 = -16096						; size = 4
tv2498 = -16092						; size = 4
tv2267 = -16088						; size = 4
tv2519 = -16084						; size = 4
tv2264 = -16080						; size = 4
tv2540 = -16076						; size = 4
tv2261 = -16072						; size = 4
tv2597 = -16068						; size = 4
tv2258 = -16064						; size = 4
tv2675 = -16060						; size = 4
tv2255 = -16056						; size = 4
tv2681 = -16052						; size = 4
tv2251 = -16048						; size = 4
tv2651 = -16044						; size = 4
tv2249 = -16040						; size = 4
tv2686 = -16036						; size = 4
tv2247 = -16032						; size = 4
tv2706 = -16028						; size = 4
tv2245 = -16024						; size = 4
tv2727 = -16020						; size = 4
tv2243 = -16016						; size = 4
tv1412 = -16012						; size = 4
tv2240 = -16008						; size = 4
tv2748 = -16004						; size = 4
tv2237 = -16000						; size = 4
tv2801 = -15996						; size = 4
tv2234 = -15992						; size = 4
tv2822 = -15988						; size = 4
tv2231 = -15984						; size = 4
tv2843 = -15980						; size = 4
tv2228 = -15976						; size = 4
tv2864 = -15972						; size = 4
tv2225 = -15968						; size = 4
tv2885 = -15964						; size = 4
tv2222 = -15960						; size = 4
tv2906 = -15956						; size = 4
tv2219 = -15952						; size = 4
tv2927 = -15948						; size = 4
tv2216 = -15944						; size = 4
tv2948 = -15940						; size = 4
tv2213 = -15936						; size = 4
tv3014 = -15932						; size = 4
tv2210 = -15928						; size = 4
tv3048 = -15924						; size = 4
tv2207 = -15920						; size = 4
tv3043 = -15916						; size = 4
tv2204 = -15912						; size = 4
tv3052 = -15908						; size = 4
tv2201 = -15904						; size = 4
tv3072 = -15900						; size = 4
tv2198 = -15896						; size = 4
tv3093 = -15892						; size = 4
tv2195 = -15888						; size = 4
tv3146 = -15884						; size = 4
tv2192 = -15880						; size = 4
tv3167 = -15876						; size = 4
tv2189 = -15872						; size = 4
tv3188 = -15868						; size = 4
tv2186 = -15864						; size = 4
tv3209 = -15860						; size = 4
tv2183 = -15856						; size = 4
tv3230 = -15852						; size = 4
tv2180 = -15848						; size = 4
tv3251 = -15844						; size = 4
tv2177 = -15840						; size = 4
tv3272 = -15836						; size = 4
tv2174 = -15832						; size = 4
tv3293 = -15828						; size = 4
tv2171 = -15824						; size = 4
tv3314 = -15820						; size = 4
tv2168 = -15816						; size = 4
tv3335 = -15812						; size = 4
tv2165 = -15808						; size = 4
tv3356 = -15804						; size = 4
tv2162 = -15800						; size = 4
tv3377 = -15796						; size = 4
tv2159 = -15792						; size = 4
tv3398 = -15788						; size = 4
tv2156 = -15784						; size = 4
tv3419 = -15780						; size = 4
tv2153 = -15776						; size = 4
tv3440 = -15772						; size = 4
tv2150 = -15768						; size = 4
tv3461 = -15764						; size = 4
tv2147 = -15760						; size = 4
tv3482 = -15756						; size = 4
tv2144 = -15752						; size = 4
tv3535 = -15748						; size = 4
tv2141 = -15744						; size = 4
tv3556 = -15740						; size = 4
tv2138 = -15736						; size = 4
tv3577 = -15732						; size = 4
tv2135 = -15728						; size = 4
tv3598 = -15724						; size = 4
tv2132 = -15720						; size = 4
tv3619 = -15716						; size = 4
tv2129 = -15712						; size = 4
tv3640 = -15708						; size = 4
tv2126 = -15704						; size = 4
tv3661 = -15700						; size = 4
tv2123 = -15696						; size = 4
tv3682 = -15692						; size = 4
tv2120 = -15688						; size = 4
tv3703 = -15684						; size = 4
tv2117 = -15680						; size = 4
tv3724 = -15676						; size = 4
tv2114 = -15672						; size = 4
tv3745 = -15668						; size = 4
tv2111 = -15664						; size = 4
tv3766 = -15660						; size = 4
tv2108 = -15656						; size = 4
tv3787 = -15652						; size = 4
tv2106 = -15648						; size = 4
tv3808 = -15644						; size = 4
tv2104 = -15640						; size = 4
tv3829 = -15636						; size = 4
tv2102 = -15632						; size = 4
tv3882 = -15628						; size = 4
tv2100 = -15624						; size = 4
tv3903 = -15620						; size = 4
tv2098 = -15616						; size = 4
tv3924 = -15612						; size = 4
tv2096 = -15608						; size = 4
tv3945 = -15604						; size = 4
tv2092 = -15600						; size = 4
tv3966 = -15596						; size = 4
tv2089 = -15592						; size = 4
tv3987 = -15588						; size = 4
tv2086 = -15584						; size = 4
tv4091 = -15580						; size = 4
tv2083 = -15576						; size = 4
tv4165 = -15572						; size = 4
tv2080 = -15568						; size = 4
tv4207 = -15564						; size = 4
tv2077 = -15560						; size = 4
tv4249 = -15556						; size = 4
tv2074 = -15552						; size = 4
tv78 = -15548						; size = 4
$T252893 = -14260					; size = 4
$T252889 = -14256					; size = 4
$T252885 = -14252					; size = 4
$T252838 = -14224					; size = 4
$T252182 = -13860					; size = 4
$T252176 = -13856					; size = 4
$T252170 = -13852					; size = 4
$T252164 = -13848					; size = 4
$T251892 = -13700					; size = 4
$T251888 = -13696					; size = 4
$T251836 = -13668					; size = 4
$T251832 = -13664					; size = 4
$T251823 = -13660					; size = 4
$T251814 = -13656					; size = 4
$T251810 = -13652					; size = 4
$T251806 = -13648					; size = 4
$T251621 = -13636					; size = 4
$T251620 = -13632					; size = 4
$T251619 = -13628					; size = 4
$T251618 = -13621					; size = 1
$T251617 = -13620					; size = 80
$T251616 = -13540					; size = 80
$T251615 = -13460					; size = 80
$T251614 = -13380					; size = 80
$T251613 = -13300					; size = 80
$T251612 = -13220					; size = 80
$T251611 = -13140					; size = 80
$T251610 = -13060					; size = 80
$T251609 = -12980					; size = 80
$T251608 = -12900					; size = 80
$T251607 = -12820					; size = 80
$T251606 = -12740					; size = 80
$T251605 = -12660					; size = 80
$T251604 = -12580					; size = 80
$T251603 = -12500					; size = 80
$T251602 = -12420					; size = 80
$T251601 = -12340					; size = 80
$T251600 = -12260					; size = 80
$T251599 = -12180					; size = 80
$T251598 = -12100					; size = 80
$T251597 = -12020					; size = 80
$T251596 = -11940					; size = 80
$T251595 = -11860					; size = 80
$T251594 = -11780					; size = 80
$T251593 = -11700					; size = 80
$T251592 = -11620					; size = 80
$T251591 = -11540					; size = 80
$T251590 = -11460					; size = 80
$T251589 = -11380					; size = 80
$T251588 = -11300					; size = 80
$T251587 = -11220					; size = 80
$T251586 = -11140					; size = 80
$T251585 = -11060					; size = 80
$T251584 = -10980					; size = 80
$T251583 = -10900					; size = 80
$T251582 = -10820					; size = 80
$T251581 = -10740					; size = 80
$T251580 = -10660					; size = 80
$T251579 = -10580					; size = 80
$T251578 = -10500					; size = 80
$T251577 = -10420					; size = 80
$T251576 = -10340					; size = 80
$T251575 = -10260					; size = 80
$T251574 = -10180					; size = 80
$T251573 = -10100					; size = 80
$T251572 = -10020					; size = 80
$T251571 = -9940					; size = 80
$T251570 = -9860					; size = 80
$T251569 = -9780					; size = 80
$T251568 = -9700					; size = 80
$T251567 = -9620					; size = 80
$T251566 = -9540					; size = 80
$T251565 = -9460					; size = 80
$T251564 = -9380					; size = 80
$T251563 = -9300					; size = 4
$T251562 = -9296					; size = 4
$T251561 = -9292					; size = 80
$T251560 = -9212					; size = 4
$T251559 = -9208					; size = 80
$T251558 = -9128					; size = 80
$T251557 = -9048					; size = 80
$T251556 = -8968					; size = 80
$T251555 = -8888					; size = 80
$T251554 = -8808					; size = 80
$T251553 = -8728					; size = 80
$T251552 = -8648					; size = 80
$T251551 = -8568					; size = 80
$T251550 = -8488					; size = 80
$T251549 = -8408					; size = 80
$T251548 = -8328					; size = 80
$T251547 = -8248					; size = 80
$T251546 = -8168					; size = 80
$T251545 = -8088					; size = 80
$T251544 = -8008					; size = 80
$T251543 = -7928					; size = 80
$T251542 = -7848					; size = 80
$T251541 = -7768					; size = 80
$T251540 = -7688					; size = 80
$T251539 = -7608					; size = 80
$T251538 = -7528					; size = 80
$T251537 = -7448					; size = 80
$T251536 = -7368					; size = 80
$T251535 = -7288					; size = 80
$T251534 = -7208					; size = 80
$T251533 = -7128					; size = 80
$T251532 = -7048					; size = 80
$T251531 = -6968					; size = 80
_ui$235614 = -6888					; size = 4
_kOpinion$235432 = -6884				; size = 84
_kOpinion$235428 = -6796				; size = 84
_kOpinion$235424 = -6708				; size = 84
_kOpinion$235420 = -6620				; size = 84
_kOpinion$235416 = -6532				; size = 84
_kOpinion$235412 = -6444				; size = 84
_kOpinion$235408 = -6356				; size = 84
_kOpinion$235404 = -6268				; size = 84
_kOpinion$235400 = -6180				; size = 84
_kOpinion$235396 = -6092				; size = 84
_kOpinion$235392 = -6004				; size = 84
_kOpinion$235388 = -5916				; size = 84
_kOpinion$235379 = -5828				; size = 84
_kOpinion$235375 = -5740				; size = 84
_kOpinion$235371 = -5652				; size = 84
_kOpinion$235367 = -5564				; size = 84
_kOpinion$235363 = -5476				; size = 84
_kOpinion$235359 = -5388				; size = 84
_kOpinion$235355 = -5300				; size = 84
_kOpinion$235351 = -5212				; size = 84
_kOpinion$235349 = -5124				; size = 84
_str$235331 = -5036					; size = 80
_iTempValue$235332 = -4952				; size = 4
_kOpinion$235328 = -4948				; size = 84
_kOpinion$235324 = -4860				; size = 84
_kOpinion$235320 = -4772				; size = 84
_kOpinion$235316 = -4684				; size = 84
_kOpinion$235312 = -4596				; size = 84
_kOpinion$235308 = -4508				; size = 84
_kOpinion$235304 = -4420				; size = 84
_kOpinion$235300 = -4332				; size = 84
_kOpinion$235296 = -4244				; size = 84
_kOpinion$235292 = -4156				; size = 84
_kOpinion$235288 = -4068				; size = 84
_kOpinion$235284 = -3980				; size = 84
_kOpinion$235280 = -3892				; size = 84
_kOpinion$235276 = -3804				; size = 84
_kOpinion$235272 = -3716				; size = 84
_kOpinion$235268 = -3628				; size = 84
_kOpinion$235264 = -3540				; size = 84
_kOpinion$235260 = -3452				; size = 84
_kOpinion$235256 = -3364				; size = 84
_kOpinion$235252 = -3276				; size = 84
_kOpinion$235248 = -3188				; size = 84
_kOpinion$235244 = -3100				; size = 84
_kOpinion$235240 = -3012				; size = 84
_kOpinion$235236 = -2924				; size = 84
_kOpinion$235232 = -2836				; size = 84
_kOpinion$235228 = -2748				; size = 84
_kOpinion$235224 = -2660				; size = 84
_kOpinion$235220 = -2572				; size = 84
_eTheirBranch$235215 = -2480				; size = 4
_kOpinion$235212 = -2476				; size = 84
_eMyBranch$235216 = -2388				; size = 4
_eBranch$235209 = -2384					; size = 4
_kOpinion$235206 = -2380				; size = 84
_kOpinion$235202 = -2292				; size = 84
_kOpinion$235198 = -2204				; size = 84
_kOpinion$235194 = -2116				; size = 84
_kOpinion$235190 = -2028				; size = 84
_kOpinion$235186 = -1940				; size = 84
_kOpinion$235182 = -1852				; size = 84
_kOpinion$235178 = -1764				; size = 84
_kOpinion$235174 = -1676				; size = 84
_kOpinion$235170 = -1588				; size = 84
_kOpinion$235166 = -1500				; size = 84
_kOpinion$235162 = -1412				; size = 84
_kOpinion$235158 = -1324				; size = 84
_kOpinion$235154 = -1236				; size = 84
_kOpinion$235150 = -1148				; size = 84
_str$235123 = -1056					; size = 28
_kOpinion$235122 = -1028				; size = 84
_kOpinion$235118 = -940					; size = 84
_kOpinion$235114 = -852					; size = 84
_kOpinion$235110 = -764					; size = 84
_kOpinion$235105 = -676					; size = 84
_kOpinion$235100 = -588					; size = 84
_kOpinion$235096 = -500					; size = 84
_kOpinion$235089 = -412					; size = 84
_strColorSuffix$ = -324					; size = 28
_pkPlayer$ = -296					; size = 4
_strEmpty$ = -292					; size = 4
_strEndColor$ = -288					; size = 28
_BeginColorPrefixFound$ = -260				; size = 4
_BeginColorSuffixFound$ = -256				; size = 4
_strPartialPositiveColor$ = -252			; size = 28
_strPartialNegativeColor$ = -224			; size = 28
_iVisibleApproach$ = -196				; size = 4
_strFullNegativeColor$ = -192				; size = 28
_strOutput$ = -164					; size = 28
_aOpinions$ = -136					; size = 16
_strNeutralColor$ = -120				; size = 28
_index$ = -92						; size = 4
_strColorPrefix$ = -88					; size = 28
_pDiploAI$ = -60					; size = 4
_iValue$ = -56						; size = 4
_eWithPlayer$ = -52					; size = 4
_EndColorFound$ = -48					; size = 4
_strFullPositiveColor$ = -44				; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetOpinionTable, COMDAT

; 9859 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 16204				; 00003f4cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 9860 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 9861 : 	PlayerTypes eWithPlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eWithPlayer$[ebp], eax

; 9862 : 	CvDiplomacyAI* pDiploAI = pkPlayer->GetDiplomacyAI();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	DWORD PTR _pDiploAI$[ebp], eax

; 9863 : 
; 9864 : 
; 9865 : 	std::vector<Opinion> aOpinions;

	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	??0?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ ; std::vector<Opinion,std::allocator<Opinion> >::vector<Opinion,std::allocator<Opinion> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 9866 : 	int iValue;
; 9867 : 
; 9868 : 	int iVisibleApproach = GET_PLAYER(eWithPlayer).GetDiplomacyAI()->GetApproachTowardsUsGuess(pkPlayer->GetID());

	mov	edx, DWORD PTR _pkPlayer$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T251806[ebp], eax
	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T251810[ebp], ecx
	mov	edx, DWORD PTR $T251806[ebp]
	push	edx
	mov	ecx, DWORD PTR $T251810[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetApproachTowardsUsGuess@CvDiplomacyAI@@QAE?AW4MajorCivApproachTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetApproachTowardsUsGuess
	mov	DWORD PTR _iVisibleApproach$[ebp], eax

; 9869 : 	if (GET_TEAM(pkPlayer->getTeam()).isAtWar(GET_PLAYER(eWithPlayer).getTeam()))

	mov	eax, DWORD PTR _eWithPlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T251814[ebp], eax
	mov	ecx, DWORD PTR $T251814[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T251823[ebp], eax
	mov	eax, DWORD PTR _pkPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T251832[ebp], eax
	mov	edx, DWORD PTR $T251832[ebp]
	imul	edx, 2984				; 00000ba8H
	add	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T251836[ebp], edx
	mov	eax, DWORD PTR $T251823[ebp]
	push	eax
	mov	ecx, DWORD PTR $T251836[ebp]
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	movzx	ecx, al
	test	ecx, ecx
	je	$LN332@lGetOpinio

; 9870 : 	{
; 9871 : 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235089[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 9872 : 		kOpinion.m_iValue = 99999;

	mov	DWORD PTR _kOpinion$235089[ebp+80], 99999 ; 0001869fH

; 9873 : 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_AT_WAR");

	push	OFFSET ??_C@_0BF@HKMKNKFB@TXT_KEY_DIPLO_AT_WAR?$AA@
	lea	edx, DWORD PTR $T251531[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv78[ebp], eax
	mov	eax, DWORD PTR tv78[ebp]
	mov	DWORD PTR tv2074[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv2074[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kOpinion$235089[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T251531[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9874 : 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235089[ebp]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 9875 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235089[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9876 : 	else

	jmp	$LN110@lGetOpinio

; 9877 : 	{
; 9878 : 		if (GET_PLAYER(eWithPlayer).GetDiplomacyAI()->GetNumWarsFought(pkPlayer->GetID()) > 0)

$LN332@lGetOpinio:
	mov	eax, DWORD PTR _pkPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T251888[ebp], ecx
	mov	edx, DWORD PTR _eWithPlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T251892[ebp], edx
	mov	eax, DWORD PTR $T251888[ebp]
	push	eax
	mov	ecx, DWORD PTR $T251892[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetNumWarsFought@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNumWarsFought
	test	eax, eax
	jle	$LN110@lGetOpinio

; 9879 : 		{
; 9880 : 			if (iVisibleApproach == MAJOR_CIV_APPROACH_FRIENDLY || iVisibleApproach == MAJOR_CIV_APPROACH_NEUTRAL)

	cmp	DWORD PTR _iVisibleApproach$[ebp], 5
	je	SHORT $LN107@lGetOpinio
	cmp	DWORD PTR _iVisibleApproach$[ebp], 6
	jne	$LN108@lGetOpinio
$LN107@lGetOpinio:

; 9881 : 			{
; 9882 : 				Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235096[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 9883 : 				kOpinion.m_iValue = 0;

	mov	DWORD PTR _kOpinion$235096[ebp+80], 0

; 9884 : 				kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_PAST_WAR_NEUTRAL");

	push	OFFSET ??_C@_0BP@GHHGFGNM@TXT_KEY_DIPLO_PAST_WAR_NEUTRAL?$AA@
	lea	ecx, DWORD PTR $T251532[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv4249[ebp], eax
	mov	edx, DWORD PTR tv4249[ebp]
	mov	DWORD PTR tv2077[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR tv2077[ebp]
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235096[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T251532[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9885 : 				aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235096[ebp]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 9886 : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235096[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9887 : 			else

	jmp	$LN110@lGetOpinio
$LN108@lGetOpinio:

; 9888 : 			{
; 9889 : 				Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235100[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5

; 9890 : 				kOpinion.m_iValue = 0;

	mov	DWORD PTR _kOpinion$235100[ebp+80], 0

; 9891 : 				kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_PAST_WAR_BAD");

	push	OFFSET ??_C@_0BL@LJMNHGNF@TXT_KEY_DIPLO_PAST_WAR_BAD?$AA@
	lea	edx, DWORD PTR $T251533[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv4207[ebp], eax
	mov	eax, DWORD PTR tv4207[ebp]
	mov	DWORD PTR tv2080[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR tv2080[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kOpinion$235100[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T251533[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9892 : 				aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235100[ebp]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 9893 : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235100[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN110@lGetOpinio:

; 9894 : 		}
; 9895 : 	}
; 9896 : 
; 9897 : 	if (iVisibleApproach != MAJOR_CIV_APPROACH_FRIENDLY) 

	cmp	DWORD PTR _iVisibleApproach$[ebp], 5
	je	$LN105@lGetOpinio

; 9898 : 	{
; 9899 : 		// land dispute
; 9900 : 		iValue = pDiploAI->GetLandDisputeLevelScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetLandDisputeLevelScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetLandDisputeLevelScore
	mov	DWORD PTR _iValue$[ebp], eax

; 9901 : 		if (iValue < 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	jge	$LN104@lGetOpinio

; 9902 : 		{
; 9903 : 			Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235105[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 7

; 9904 : 			kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235105[ebp+80], ecx

; 9905 : 			kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_NO_LAND_DISPUTE");

	push	OFFSET ??_C@_0BO@DNOBGCJD@TXT_KEY_DIPLO_NO_LAND_DISPUTE?$AA@
	lea	edx, DWORD PTR $T251534[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv4165[ebp], eax
	mov	eax, DWORD PTR tv4165[ebp]
	mov	DWORD PTR tv2083[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR tv2083[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kOpinion$235105[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T251534[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9906 : 			aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235105[ebp]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 9907 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235105[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN103@lGetOpinio
$LN104@lGetOpinio:

; 9908 : 		else if (iValue > 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	jle	$LN103@lGetOpinio

; 9909 : 		{
; 9910 : 			Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235110[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 9

; 9911 : 			kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235110[ebp+80], eax

; 9912 : 			kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_LAND_DISPUTE");

	push	OFFSET ??_C@_0BL@JDFDGCPH@TXT_KEY_DIPLO_LAND_DISPUTE?$AA@
	lea	ecx, DWORD PTR $T251535[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv4091[ebp], eax
	mov	edx, DWORD PTR tv4091[ebp]
	mov	DWORD PTR tv2086[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	eax, DWORD PTR tv2086[ebp]
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235110[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T251535[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9913 : 			aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235110[ebp]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 9914 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235110[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN103@lGetOpinio:

; 9915 : 
; 9916 : 		// wonder dispute
; 9917 : 		iValue = pDiploAI->GetWonderDisputeLevelScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetWonderDisputeLevelScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetWonderDisputeLevelScore
	mov	DWORD PTR _iValue$[ebp], eax

; 9918 : 		if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN101@lGetOpinio

; 9919 : 		{
; 9920 : 			Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235114[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH

; 9921 : 			kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235114[ebp+80], eax

; 9922 : 			kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_WONDER_DISPUTE");

	push	OFFSET ??_C@_0BN@BDMBADG@TXT_KEY_DIPLO_WONDER_DISPUTE?$AA@
	lea	ecx, DWORD PTR $T251536[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3987[ebp], eax
	mov	edx, DWORD PTR tv3987[ebp]
	mov	DWORD PTR tv2089[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	eax, DWORD PTR tv2089[ebp]
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235114[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR $T251536[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9923 : 			aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235114[ebp]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 9924 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235114[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN101@lGetOpinio:

; 9925 : 
; 9926 : 		// minor civ dispute
; 9927 : 		iValue = pDiploAI->GetMinorCivDisputeLevelScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetMinorCivDisputeLevelScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetMinorCivDisputeLevelScore
	mov	DWORD PTR _iValue$[ebp], eax

; 9928 : 		if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN100@lGetOpinio

; 9929 : 		{
; 9930 : 			Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235118[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH

; 9931 : 			kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235118[ebp+80], eax

; 9932 : 			kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_MINOR_CIV_DISPUTE");

	push	OFFSET ??_C@_0CA@EBALGONA@TXT_KEY_DIPLO_MINOR_CIV_DISPUTE?$AA@
	lea	ecx, DWORD PTR $T251537[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3966[ebp], eax
	mov	edx, DWORD PTR tv3966[ebp]
	mov	DWORD PTR tv2092[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	eax, DWORD PTR tv2092[ebp]
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235118[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	lea	ecx, DWORD PTR $T251537[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9933 : 			aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235118[ebp]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 9934 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235118[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN100@lGetOpinio:

; 9935 : 
; 9936 : 		// warmonger dispute
; 9937 : 		iValue = pDiploAI->GetWarmongerThreatScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetWarmongerThreatScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetWarmongerThreatScore
	mov	DWORD PTR _iValue$[ebp], eax

; 9938 : 		if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN105@lGetOpinio

; 9939 : 		{
; 9940 : 			Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235122[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH

; 9941 : 			kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235122[ebp+80], eax

; 9942 : 			CvString str;

	lea	ecx, DWORD PTR _str$235123[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H

; 9943 : 			
; 9944 : 			if (pDiploAI->GetWarmongerThreat(eWithPlayer) == THREAT_CRITICAL)

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetWarmongerThreat@CvDiplomacyAI@@QBE?AW4ThreatTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetWarmongerThreat
	cmp	eax, 4
	jne	SHORT $LN98@lGetOpinio

; 9945 : 			{
; 9946 : 				str = Localization::Lookup("TXT_KEY_DIPLO_WARMONGER_THREAT_CRITICAL").toUTF8();

	push	OFFSET ??_C@_0CI@EKMALDA@TXT_KEY_DIPLO_WARMONGER_THREAT_C@
	lea	edx, DWORD PTR $T251538[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3945[ebp], eax
	mov	eax, DWORD PTR tv3945[ebp]
	mov	DWORD PTR tv2096[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	ecx, DWORD PTR tv2096[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T252164[ebp], eax
	cmp	DWORD PTR $T252164[ebp], 0
	je	SHORT $LN487@lGetOpinio
	mov	ecx, DWORD PTR $T252164[ebp]
	push	ecx
	lea	ecx, DWORD PTR _str$235123[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN488@lGetOpinio
$LN487@lGetOpinio:
	lea	ecx, DWORD PTR _str$235123[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN488@lGetOpinio:
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	lea	ecx, DWORD PTR $T251538[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN97@lGetOpinio
$LN98@lGetOpinio:

; 9947 : 			}
; 9948 : 			else if (pDiploAI->GetWarmongerThreat(eWithPlayer) == THREAT_SEVERE)

	mov	edx, DWORD PTR _eWithPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetWarmongerThreat@CvDiplomacyAI@@QBE?AW4ThreatTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetWarmongerThreat
	cmp	eax, 3
	jne	SHORT $LN96@lGetOpinio

; 9949 : 			{
; 9950 : 				str = Localization::Lookup("TXT_KEY_DIPLO_WARMONGER_THREAT_SEVERE").toUTF8();

	push	OFFSET ??_C@_0CG@BOPPBEBI@TXT_KEY_DIPLO_WARMONGER_THREAT_S@
	lea	eax, DWORD PTR $T251539[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3924[ebp], eax
	mov	ecx, DWORD PTR tv3924[ebp]
	mov	DWORD PTR tv2098[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	mov	ecx, DWORD PTR tv2098[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T252170[ebp], eax
	cmp	DWORD PTR $T252170[ebp], 0
	je	SHORT $LN491@lGetOpinio
	mov	edx, DWORD PTR $T252170[ebp]
	push	edx
	lea	ecx, DWORD PTR _str$235123[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN492@lGetOpinio
$LN491@lGetOpinio:
	lea	ecx, DWORD PTR _str$235123[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN492@lGetOpinio:
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	lea	ecx, DWORD PTR $T251539[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN97@lGetOpinio
$LN96@lGetOpinio:

; 9951 : 			}
; 9952 : 			else if (pDiploAI->GetWarmongerThreat(eWithPlayer) == THREAT_MAJOR)

	mov	eax, DWORD PTR _eWithPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetWarmongerThreat@CvDiplomacyAI@@QBE?AW4ThreatTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetWarmongerThreat
	cmp	eax, 2
	jne	SHORT $LN94@lGetOpinio

; 9953 : 			{
; 9954 : 				str = Localization::Lookup("TXT_KEY_DIPLO_WARMONGER_THREAT_MAJOR").toUTF8();

	push	OFFSET ??_C@_0CF@CDFEGNFH@TXT_KEY_DIPLO_WARMONGER_THREAT_M@
	lea	ecx, DWORD PTR $T251540[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3903[ebp], eax
	mov	edx, DWORD PTR tv3903[ebp]
	mov	DWORD PTR tv2100[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	mov	ecx, DWORD PTR tv2100[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T252176[ebp], eax
	cmp	DWORD PTR $T252176[ebp], 0
	je	SHORT $LN495@lGetOpinio
	mov	eax, DWORD PTR $T252176[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$235123[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN496@lGetOpinio
$LN495@lGetOpinio:
	lea	ecx, DWORD PTR _str$235123[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN496@lGetOpinio:
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	lea	ecx, DWORD PTR $T251540[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9955 : 			}
; 9956 : 			else 

	jmp	SHORT $LN97@lGetOpinio
$LN94@lGetOpinio:

; 9957 : 			{
; 9958 : 				str = Localization::Lookup("TXT_KEY_DIPLO_WARMONGER_THREAT_MINOR").toUTF8();

	push	OFFSET ??_C@_0CF@JMEGLBMB@TXT_KEY_DIPLO_WARMONGER_THREAT_M@
	lea	ecx, DWORD PTR $T251541[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3882[ebp], eax
	mov	edx, DWORD PTR tv3882[ebp]
	mov	DWORD PTR tv2102[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	mov	ecx, DWORD PTR tv2102[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T252182[ebp], eax
	cmp	DWORD PTR $T252182[ebp], 0
	je	SHORT $LN499@lGetOpinio
	mov	eax, DWORD PTR $T252182[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$235123[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN500@lGetOpinio
$LN499@lGetOpinio:
	lea	ecx, DWORD PTR _str$235123[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN500@lGetOpinio:
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	lea	ecx, DWORD PTR $T251541[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN97@lGetOpinio:

; 9959 : 			}
; 9960 : 
; 9961 : 			if (pDiploAI->GetWarmongerHate() >= 7)

	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetWarmongerHate@CvDiplomacyAI@@QBEHXZ	; CvDiplomacyAI::GetWarmongerHate
	cmp	eax, 7
	jl	SHORT $LN92@lGetOpinio

; 9962 : 			{
; 9963 : 				str += " ";

	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	lea	ecx, DWORD PTR _str$235123[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 9964 : 				str += Localization::Lookup("TXT_KEY_WARMONGER_HATE_HIGH").toUTF8();

	push	OFFSET ??_C@_0BM@INAPLEEO@TXT_KEY_WARMONGER_HATE_HIGH?$AA@
	lea	ecx, DWORD PTR $T251542[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3829[ebp], eax
	mov	edx, DWORD PTR tv3829[ebp]
	mov	DWORD PTR tv2104[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	mov	ecx, DWORD PTR tv2104[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _str$235123[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	lea	ecx, DWORD PTR $T251542[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN502@lGetOpinio
$LN92@lGetOpinio:

; 9965 : 			}
; 9966 : 			else if (pDiploAI->GetWarmongerHate() >= 5)

	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetWarmongerHate@CvDiplomacyAI@@QBEHXZ	; CvDiplomacyAI::GetWarmongerHate
	cmp	eax, 5
	jl	SHORT $LN90@lGetOpinio

; 9967 : 			{
; 9968 : 				str += " ";

	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	lea	ecx, DWORD PTR _str$235123[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 9969 : 				str += Localization::Lookup("TXT_KEY_WARMONGER_HATE_MID").toUTF8();

	push	OFFSET ??_C@_0BL@GDENNBEM@TXT_KEY_WARMONGER_HATE_MID?$AA@
	lea	eax, DWORD PTR $T251543[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3808[ebp], eax
	mov	ecx, DWORD PTR tv3808[ebp]
	mov	DWORD PTR tv2106[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	mov	ecx, DWORD PTR tv2106[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _str$235123[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	lea	ecx, DWORD PTR $T251543[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9970 : 			}
; 9971 : 			else 

	jmp	SHORT $LN502@lGetOpinio
$LN90@lGetOpinio:

; 9972 : 			{
; 9973 : 				str += " ";

	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	lea	ecx, DWORD PTR _str$235123[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 9974 : 				str += Localization::Lookup("TXT_KEY_WARMONGER_HATE_LOW").toUTF8();

	push	OFFSET ??_C@_0BL@LOJDILAJ@TXT_KEY_WARMONGER_HATE_LOW?$AA@
	lea	edx, DWORD PTR $T251544[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3787[ebp], eax
	mov	eax, DWORD PTR tv3787[ebp]
	mov	DWORD PTR tv2108[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	ecx, DWORD PTR tv2108[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _str$235123[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	lea	ecx, DWORD PTR $T251544[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9975 : 			}
; 9976 : 
; 9977 : 			kOpinion.m_str = str;

$LN502@lGetOpinio:
	lea	ecx, DWORD PTR _str$235123[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235122[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@PBD@Z

; 9978 : 
; 9979 : 			aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235122[ebp]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 9980 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	lea	ecx, DWORD PTR _str$235123[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235122[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN105@lGetOpinio:

; 9981 : 	}
; 9982 : 
; 9983 : 	if (iVisibleApproach == MAJOR_CIV_APPROACH_AFRAID)

	cmp	DWORD PTR _iVisibleApproach$[ebp], 4
	jne	$LN88@lGetOpinio

; 9984 : 	{
; 9985 : 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235150[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H

; 9986 : 		kOpinion.m_iValue = 0;

	mov	DWORD PTR _kOpinion$235150[ebp+80], 0

; 9987 : 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_AFRAID");

	push	OFFSET ??_C@_0BF@KLLNFBFM@TXT_KEY_DIPLO_AFRAID?$AA@
	lea	edx, DWORD PTR $T251545[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3766[ebp], eax
	mov	eax, DWORD PTR tv3766[ebp]
	mov	DWORD PTR tv2111[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	mov	ecx, DWORD PTR tv2111[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kOpinion$235150[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	lea	ecx, DWORD PTR $T251545[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9988 : 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235150[ebp]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 9989 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235150[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN88@lGetOpinio:

; 9990 : 
; 9991 : 	iValue = pDiploAI->GetCiviliansReturnedToMeScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetCiviliansReturnedToMeScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetCiviliansReturnedToMeScore
	mov	DWORD PTR _iValue$[ebp], eax

; 9992 : 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN87@lGetOpinio

; 9993 : 	{
; 9994 : 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235154[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH

; 9995 : 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235154[ebp+80], ecx

; 9996 : 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_CIVILIANS_RETURNED");

	push	OFFSET ??_C@_0CB@OGEDBACO@TXT_KEY_DIPLO_CIVILIANS_RETURNED@
	lea	edx, DWORD PTR $T251546[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3745[ebp], eax
	mov	eax, DWORD PTR tv3745[ebp]
	mov	DWORD PTR tv2114[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	mov	ecx, DWORD PTR tv2114[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kOpinion$235154[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	lea	ecx, DWORD PTR $T251546[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 9997 : 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235154[ebp]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 9998 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235154[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN87@lGetOpinio:

; 9999 : 	
; 10000: 	iValue = pDiploAI->GetLandmarksBuiltForMeScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetLandmarksBuiltForMeScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetLandmarksBuiltForMeScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10001: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN86@lGetOpinio

; 10002: 	{
; 10003: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235158[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH

; 10004: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235158[ebp+80], ecx

; 10005: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_LANDMARKS_BUILT");

	push	OFFSET ??_C@_0BO@JCNLPMBA@TXT_KEY_DIPLO_LANDMARKS_BUILT?$AA@
	lea	edx, DWORD PTR $T251547[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3724[ebp], eax
	mov	eax, DWORD PTR tv3724[ebp]
	mov	DWORD PTR tv2117[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	mov	ecx, DWORD PTR tv2117[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kOpinion$235158[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
	lea	ecx, DWORD PTR $T251547[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10006: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235158[ebp]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10007: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235158[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN86@lGetOpinio:

; 10008: 
; 10009: 	iValue = pDiploAI->GetResurrectedScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetResurrectedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetResurrectedScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10010: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN85@lGetOpinio

; 10011: 	{
; 10012: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235162[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH

; 10013: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235162[ebp+80], ecx

; 10014: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_RESURRECTED");

	push	OFFSET ??_C@_0BK@DBJPADDC@TXT_KEY_DIPLO_RESURRECTED?$AA@
	lea	edx, DWORD PTR $T251548[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3703[ebp], eax
	mov	eax, DWORD PTR tv3703[ebp]
	mov	DWORD PTR tv2120[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	mov	ecx, DWORD PTR tv2120[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kOpinion$235162[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T251548[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10015: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235162[ebp]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10016: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235162[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN85@lGetOpinio:

; 10017: 
; 10018: 	iValue = pDiploAI->GetLiberatedCitiesScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetLiberatedCitiesScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetLiberatedCitiesScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10019: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN84@lGetOpinio

; 10020: 	{
; 10021: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235166[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H

; 10022: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235166[ebp+80], ecx

; 10023: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_CITIES_LIBERATED");

	push	OFFSET ??_C@_0BP@IFJFJGKE@TXT_KEY_DIPLO_CITIES_LIBERATED?$AA@
	lea	edx, DWORD PTR $T251549[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3682[ebp], eax
	mov	eax, DWORD PTR tv3682[ebp]
	mov	DWORD PTR tv2123[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	mov	ecx, DWORD PTR tv2123[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kOpinion$235166[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	lea	ecx, DWORD PTR $T251549[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10024: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235166[ebp]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10025: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235166[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN84@lGetOpinio:

; 10026: 
; 10027: 	iValue = pDiploAI->GetEmbassyScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetEmbassyScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetEmbassyScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10028: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN83@lGetOpinio

; 10029: 	{
; 10030: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235170[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H

; 10031: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235170[ebp+80], ecx

; 10032: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_HAS_EMBASSY");

	push	OFFSET ??_C@_0BK@IHKMDBJ@TXT_KEY_DIPLO_HAS_EMBASSY?$AA@
	lea	edx, DWORD PTR $T251550[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3661[ebp], eax
	mov	eax, DWORD PTR tv3661[ebp]
	mov	DWORD PTR tv2126[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	mov	ecx, DWORD PTR tv2126[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kOpinion$235170[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	lea	ecx, DWORD PTR $T251550[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10033: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235170[ebp]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10034: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235170[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN83@lGetOpinio:

; 10035: 
; 10036: 	iValue = pDiploAI->GetForgaveForSpyingScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetForgaveForSpyingScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetForgaveForSpyingScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10037: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN82@lGetOpinio

; 10038: 	{
; 10039: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235174[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H

; 10040: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235174[ebp+80], ecx

; 10041: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_FORGAVE_FOR_SPYING");

	push	OFFSET ??_C@_0CB@FDHCBPND@TXT_KEY_DIPLO_FORGAVE_FOR_SPYING@
	lea	edx, DWORD PTR $T251551[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3640[ebp], eax
	mov	eax, DWORD PTR tv3640[ebp]
	mov	DWORD PTR tv2129[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	mov	ecx, DWORD PTR tv2129[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kOpinion$235174[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	lea	ecx, DWORD PTR $T251551[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10042: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235174[ebp]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10043: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235174[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN82@lGetOpinio:

; 10044: 	
; 10045: 	iValue = pDiploAI->GetNoSetterRequestScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetNoSetterRequestScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNoSetterRequestScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10046: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN81@lGetOpinio

; 10047: 	{
; 10048: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235178[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H

; 10049: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235178[ebp+80], ecx

; 10050: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_NO_SETTLE_ASKED");

	push	OFFSET ??_C@_0BO@CGAJOBJA@TXT_KEY_DIPLO_NO_SETTLE_ASKED?$AA@
	lea	edx, DWORD PTR $T251552[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3619[ebp], eax
	mov	eax, DWORD PTR tv3619[ebp]
	mov	DWORD PTR tv2132[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	mov	ecx, DWORD PTR tv2132[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kOpinion$235178[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	lea	ecx, DWORD PTR $T251552[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10051: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235178[ebp]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10052: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235178[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN81@lGetOpinio:

; 10053: 
; 10054: 	iValue = pDiploAI->GetStopSpyingRequestScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetStopSpyingRequestScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetStopSpyingRequestScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10055: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN80@lGetOpinio

; 10056: 	{
; 10057: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235182[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H

; 10058: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235182[ebp+80], ecx

; 10059: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_STOP_SPYING_ASKED");

	push	OFFSET ??_C@_0CA@GPMAMGKA@TXT_KEY_DIPLO_STOP_SPYING_ASKED?$AA@
	lea	edx, DWORD PTR $T251553[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3598[ebp], eax
	mov	eax, DWORD PTR tv3598[ebp]
	mov	DWORD PTR tv2135[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	mov	ecx, DWORD PTR tv2135[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kOpinion$235182[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	lea	ecx, DWORD PTR $T251553[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10060: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235182[ebp]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10061: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235182[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN80@lGetOpinio:

; 10062: 
; 10063: 	iValue = pDiploAI->GetDemandEverMadeScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetDemandEverMadeScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDemandEverMadeScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10064: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN79@lGetOpinio

; 10065: 	{
; 10066: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235186[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH

; 10067: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235186[ebp+80], ecx

; 10068: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_TRADE_DEMAND");

	push	OFFSET ??_C@_0BL@HGOPDNEC@TXT_KEY_DIPLO_TRADE_DEMAND?$AA@
	lea	edx, DWORD PTR $T251554[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3577[ebp], eax
	mov	eax, DWORD PTR tv3577[ebp]
	mov	DWORD PTR tv2138[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
	mov	ecx, DWORD PTR tv2138[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kOpinion$235186[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
	lea	ecx, DWORD PTR $T251554[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10069: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235186[ebp]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10070: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235186[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN79@lGetOpinio:

; 10071: 
; 10072: 	iValue = pDiploAI->GetTimesCultureBombedScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetTimesCultureBombedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetTimesCultureBombedScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10073: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN78@lGetOpinio

; 10074: 	{
; 10075: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235190[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 44		; 0000002cH

; 10076: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235190[ebp+80], ecx

; 10077: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_CULTURE_BOMB");

	push	OFFSET ??_C@_0BL@CCFFDMHE@TXT_KEY_DIPLO_CULTURE_BOMB?$AA@
	lea	edx, DWORD PTR $T251555[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3556[ebp], eax
	mov	eax, DWORD PTR tv3556[ebp]
	mov	DWORD PTR tv2141[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH
	mov	ecx, DWORD PTR tv2141[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kOpinion$235190[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 44		; 0000002cH
	lea	ecx, DWORD PTR $T251555[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10078: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235190[ebp]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10079: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235190[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN78@lGetOpinio:

; 10080: 
; 10081: 	iValue = pDiploAI->GetReligiousConversionPointsScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetReligiousConversionPointsScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetReligiousConversionPointsScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10082: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN77@lGetOpinio

; 10083: 	{
; 10084: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235194[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 46		; 0000002eH

; 10085: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235194[ebp+80], ecx

; 10086: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_RELIGIOUS_CONVERSIONS");

	push	OFFSET ??_C@_0CE@EBOJCECO@TXT_KEY_DIPLO_RELIGIOUS_CONVERSI@
	lea	edx, DWORD PTR $T251556[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3535[ebp], eax
	mov	eax, DWORD PTR tv3535[ebp]
	mov	DWORD PTR tv2144[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 47		; 0000002fH
	mov	ecx, DWORD PTR tv2144[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kOpinion$235194[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 46		; 0000002eH
	lea	ecx, DWORD PTR $T251556[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10087: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235194[ebp]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10088: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235194[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN77@lGetOpinio:

; 10089: 
; 10090: 	iValue = pDiploAI->GetHasAdoptedHisReligionScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetHasAdoptedHisReligionScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetHasAdoptedHisReligionScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10091: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN76@lGetOpinio

; 10092: 	{
; 10093: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235198[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 48		; 00000030H

; 10094: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235198[ebp+80], ecx

; 10095: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_ADOPTING_MY_RELIGION");

	push	OFFSET ??_C@_0CD@IFPMBAHL@TXT_KEY_DIPLO_ADOPTING_MY_RELIGI@
	lea	edx, DWORD PTR $T251557[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3482[ebp], eax
	mov	eax, DWORD PTR tv3482[ebp]
	mov	DWORD PTR tv2147[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 49		; 00000031H
	mov	ecx, DWORD PTR tv2147[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kOpinion$235198[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 48		; 00000030H
	lea	ecx, DWORD PTR $T251557[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10096: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235198[ebp]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10097: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235198[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN76@lGetOpinio:

; 10098: 
; 10099: 	iValue = pDiploAI->GetHasAdoptedMyReligionScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetHasAdoptedMyReligionScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetHasAdoptedMyReligionScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10100: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN75@lGetOpinio

; 10101: 	{
; 10102: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235202[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 50		; 00000032H

; 10103: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235202[ebp+80], ecx

; 10104: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_ADOPTING_HIS_RELIGION");

	push	OFFSET ??_C@_0CE@GDDOIAHJ@TXT_KEY_DIPLO_ADOPTING_HIS_RELIG@
	lea	edx, DWORD PTR $T251558[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3461[ebp], eax
	mov	eax, DWORD PTR tv3461[ebp]
	mov	DWORD PTR tv2150[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 51		; 00000033H
	mov	ecx, DWORD PTR tv2150[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kOpinion$235202[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 50		; 00000032H
	lea	ecx, DWORD PTR $T251558[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10105: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235202[ebp]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10106: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235202[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN75@lGetOpinio:

; 10107: 	
; 10108: 	iValue = pDiploAI->GetSameLatePoliciesScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetSameLatePoliciesScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetSameLatePoliciesScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10109: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN74@lGetOpinio

; 10110: 	{
; 10111: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235206[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 52		; 00000034H

; 10112: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235206[ebp+80], ecx

; 10113: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_SAME_LATE_POLICY_TREES");

	push	OFFSET ??_C@_0CF@DHLEPEKC@TXT_KEY_DIPLO_SAME_LATE_POLICY_T@
	lea	edx, DWORD PTR $T251559[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3440[ebp], eax
	mov	eax, DWORD PTR tv3440[ebp]
	mov	DWORD PTR tv2153[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 53		; 00000035H
	mov	ecx, DWORD PTR tv2153[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kOpinion$235206[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 52		; 00000034H
	lea	ecx, DWORD PTR $T251559[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10114: 		PolicyBranchTypes eBranch = pkPlayer->GetPlayerPolicies()->GetLateGamePolicyTree();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetLateGamePolicyTree@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ ; CvPlayerPolicies::GetLateGamePolicyTree
	mov	DWORD PTR _eBranch$235209[ebp], eax

; 10115: 		kOpinion.m_str << GC.getPolicyBranchInfo(eBranch)->GetDescription();

	mov	edx, DWORD PTR _eBranch$235209[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getPolicyBranchInfo@CvGlobals@@QAEPAVCvPolicyBranchEntry@@W4PolicyBranchTypes@@@Z ; CvGlobals::getPolicyBranchInfo
	mov	DWORD PTR $T252838[ebp], eax
	mov	ecx, DWORD PTR $T252838[ebp]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T251560[ebp], eax
	lea	eax, DWORD PTR $T251560[ebp]
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235206[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 10116: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235206[ebp]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10117: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235206[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN74@lGetOpinio:

; 10118: 
; 10119: 	iValue = pDiploAI->GetDifferentLatePoliciesScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetDifferentLatePoliciesScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDifferentLatePoliciesScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10120: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN73@lGetOpinio

; 10121: 	{
; 10122: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235212[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 54		; 00000036H

; 10123: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235212[ebp+80], ecx

; 10124: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_DIFFERENT_LATE_POLICY_TREES");

	push	OFFSET ??_C@_0CK@HLBLNAOO@TXT_KEY_DIPLO_DIFFERENT_LATE_POL@
	lea	edx, DWORD PTR $T251561[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3419[ebp], eax
	mov	eax, DWORD PTR tv3419[ebp]
	mov	DWORD PTR tv2156[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 55		; 00000037H
	mov	ecx, DWORD PTR tv2156[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kOpinion$235212[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 54		; 00000036H
	lea	ecx, DWORD PTR $T251561[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10125: 		PolicyBranchTypes eTheirBranch = pkPlayer->GetPlayerPolicies()->GetLateGamePolicyTree();

	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetLateGamePolicyTree@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ ; CvPlayerPolicies::GetLateGamePolicyTree
	mov	DWORD PTR _eTheirBranch$235215[ebp], eax

; 10126: 		PolicyBranchTypes eMyBranch = GET_PLAYER(eWithPlayer).GetPlayerPolicies()->GetLateGamePolicyTree();

	mov	edx, DWORD PTR _eWithPlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T252885[ebp], edx
	mov	ecx, DWORD PTR $T252885[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetLateGamePolicyTree@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ ; CvPlayerPolicies::GetLateGamePolicyTree
	mov	DWORD PTR _eMyBranch$235216[ebp], eax

; 10127: 		kOpinion.m_str << GC.getPolicyBranchInfo(eMyBranch)->GetDescription();

	mov	eax, DWORD PTR _eMyBranch$235216[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getPolicyBranchInfo@CvGlobals@@QAEPAVCvPolicyBranchEntry@@W4PolicyBranchTypes@@@Z ; CvGlobals::getPolicyBranchInfo
	mov	DWORD PTR $T252889[ebp], eax
	mov	ecx, DWORD PTR $T252889[ebp]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T251562[ebp], eax
	lea	ecx, DWORD PTR $T251562[ebp]
	push	ecx
	lea	edx, DWORD PTR _kOpinion$235212[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 10128: 		kOpinion.m_str << GC.getPolicyBranchInfo(eTheirBranch)->GetDescription();

	mov	eax, DWORD PTR _eTheirBranch$235215[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getPolicyBranchInfo@CvGlobals@@QAEPAVCvPolicyBranchEntry@@W4PolicyBranchTypes@@@Z ; CvGlobals::getPolicyBranchInfo
	mov	DWORD PTR $T252893[ebp], eax
	mov	ecx, DWORD PTR $T252893[ebp]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T251563[ebp], eax
	lea	ecx, DWORD PTR $T251563[ebp]
	push	ecx
	lea	edx, DWORD PTR _kOpinion$235212[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 10129: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235212[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10130: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235212[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN73@lGetOpinio:

; 10131: 
; 10132: 	iValue = pDiploAI->GetTimesRobbedScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetTimesRobbedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetTimesRobbedScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10133: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN72@lGetOpinio

; 10134: 	{
; 10135: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235220[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 56		; 00000038H

; 10136: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235220[ebp+80], edx

; 10137: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_CAUGHT_STEALING");

	push	OFFSET ??_C@_0BO@GNPBFMBN@TXT_KEY_DIPLO_CAUGHT_STEALING?$AA@
	lea	eax, DWORD PTR $T251564[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3398[ebp], eax
	mov	ecx, DWORD PTR tv3398[ebp]
	mov	DWORD PTR tv2159[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 57		; 00000039H
	mov	edx, DWORD PTR tv2159[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235220[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 56		; 00000038H
	lea	ecx, DWORD PTR $T251564[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10138: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235220[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10139: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235220[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN72@lGetOpinio:

; 10140: 
; 10141: 	iValue = pDiploAI->GetTimesIntrigueSharedScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetTimesIntrigueSharedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetTimesIntrigueSharedScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10142: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN71@lGetOpinio

; 10143: 	{
; 10144: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235224[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 58		; 0000003aH

; 10145: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235224[ebp+80], edx

; 10146: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_SHARED_INTRIGUE");

	push	OFFSET ??_C@_0BO@IBMPMCGE@TXT_KEY_DIPLO_SHARED_INTRIGUE?$AA@
	lea	eax, DWORD PTR $T251565[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3377[ebp], eax
	mov	ecx, DWORD PTR tv3377[ebp]
	mov	DWORD PTR tv2162[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 59		; 0000003bH
	mov	edx, DWORD PTR tv2162[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235224[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 58		; 0000003aH
	lea	ecx, DWORD PTR $T251565[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10147: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235224[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10148: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235224[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN71@lGetOpinio:

; 10149: 
; 10150: 	iValue = pDiploAI->GetBrokenMilitaryPromiseScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetBrokenMilitaryPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetBrokenMilitaryPromiseScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10151: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN70@lGetOpinio

; 10152: 	{
; 10153: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235228[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 60		; 0000003cH

; 10154: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235228[ebp+80], edx

; 10155: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_MILITARY_PROMISE");

	push	OFFSET ??_C@_0BP@FGLNAEAF@TXT_KEY_DIPLO_MILITARY_PROMISE?$AA@
	lea	eax, DWORD PTR $T251566[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3356[ebp], eax
	mov	ecx, DWORD PTR tv3356[ebp]
	mov	DWORD PTR tv2165[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 61		; 0000003dH
	mov	edx, DWORD PTR tv2165[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235228[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 60		; 0000003cH
	lea	ecx, DWORD PTR $T251566[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10156: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235228[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10157: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235228[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN70@lGetOpinio:

; 10158: 
; 10159: 	iValue = pDiploAI->GetBrokenMilitaryPromiseWithAnybodyScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetBrokenMilitaryPromiseWithAnybodyScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetBrokenMilitaryPromiseWithAnybodyScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10160: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN69@lGetOpinio

; 10161: 	{
; 10162: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235232[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 62		; 0000003eH

; 10163: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235232[ebp+80], edx

; 10164: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_MILITARY_PROMISE_BROKEN_WITH_OTHERS");

	push	OFFSET ??_C@_0DC@CPOGBCMF@TXT_KEY_DIPLO_MILITARY_PROMISE_B@
	lea	eax, DWORD PTR $T251567[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3335[ebp], eax
	mov	ecx, DWORD PTR tv3335[ebp]
	mov	DWORD PTR tv2168[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 63		; 0000003fH
	mov	edx, DWORD PTR tv2168[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235232[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 62		; 0000003eH
	lea	ecx, DWORD PTR $T251567[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10165: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235232[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10166: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235232[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN69@lGetOpinio:

; 10167: 
; 10168: 	iValue = pDiploAI->GetIgnoredMilitaryPromiseScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetIgnoredMilitaryPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetIgnoredMilitaryPromiseScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10169: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN68@lGetOpinio

; 10170: 	{
; 10171: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235236[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 64		; 00000040H

; 10172: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235236[ebp+80], edx

; 10173: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_MILITARY_PROMISE_IGNORED");

	push	OFFSET ??_C@_0CH@NLIMKKKG@TXT_KEY_DIPLO_MILITARY_PROMISE_I@
	lea	eax, DWORD PTR $T251568[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3314[ebp], eax
	mov	ecx, DWORD PTR tv3314[ebp]
	mov	DWORD PTR tv2171[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 65		; 00000041H
	mov	edx, DWORD PTR tv2171[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235236[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 64		; 00000040H
	lea	ecx, DWORD PTR $T251568[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10174: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235236[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10175: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235236[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN68@lGetOpinio:

; 10176: 	
; 10177: 	iValue = pDiploAI->GetBrokenExpansionPromiseScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetBrokenExpansionPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetBrokenExpansionPromiseScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10178: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN67@lGetOpinio

; 10179: 	{
; 10180: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235240[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 66		; 00000042H

; 10181: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235240[ebp+80], edx

; 10182: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_EXPANSION_PROMISE");

	push	OFFSET ??_C@_0CA@GDLBCNLC@TXT_KEY_DIPLO_EXPANSION_PROMISE?$AA@
	lea	eax, DWORD PTR $T251569[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3293[ebp], eax
	mov	ecx, DWORD PTR tv3293[ebp]
	mov	DWORD PTR tv2174[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 67		; 00000043H
	mov	edx, DWORD PTR tv2174[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235240[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 66		; 00000042H
	lea	ecx, DWORD PTR $T251569[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10183: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235240[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10184: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235240[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN67@lGetOpinio:

; 10185: 
; 10186: 	iValue = pDiploAI->GetIgnoredExpansionPromiseScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetIgnoredExpansionPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetIgnoredExpansionPromiseScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10187: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN66@lGetOpinio

; 10188: 	{
; 10189: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235244[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 68		; 00000044H

; 10190: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235244[ebp+80], edx

; 10191: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_EXPANSION_PROMISE_IGNORED");

	push	OFFSET ??_C@_0CI@EDJJPONK@TXT_KEY_DIPLO_EXPANSION_PROMISE_@
	lea	eax, DWORD PTR $T251570[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3272[ebp], eax
	mov	ecx, DWORD PTR tv3272[ebp]
	mov	DWORD PTR tv2177[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 69		; 00000045H
	mov	edx, DWORD PTR tv2177[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235244[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 68		; 00000044H
	lea	ecx, DWORD PTR $T251570[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10192: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235244[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10193: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235244[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN66@lGetOpinio:

; 10194: 
; 10195: 	iValue = pDiploAI->GetBrokenBorderPromiseScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetBrokenBorderPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetBrokenBorderPromiseScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10196: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN65@lGetOpinio

; 10197: 	{
; 10198: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235248[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 70		; 00000046H

; 10199: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235248[ebp+80], edx

; 10200: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_BORDER_PROMISE");

	push	OFFSET ??_C@_0BN@DGKILGEH@TXT_KEY_DIPLO_BORDER_PROMISE?$AA@
	lea	eax, DWORD PTR $T251571[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3251[ebp], eax
	mov	ecx, DWORD PTR tv3251[ebp]
	mov	DWORD PTR tv2180[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 71		; 00000047H
	mov	edx, DWORD PTR tv2180[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235248[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 70		; 00000046H
	lea	ecx, DWORD PTR $T251571[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10201: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235248[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10202: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235248[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN65@lGetOpinio:

; 10203: 
; 10204: 	iValue = pDiploAI->GetIgnoredBorderPromiseScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetIgnoredBorderPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetIgnoredBorderPromiseScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10205: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN64@lGetOpinio

; 10206: 	{
; 10207: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235252[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 72		; 00000048H

; 10208: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235252[ebp+80], edx

; 10209: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_BORDER_PROMISE_IGNORED");

	push	OFFSET ??_C@_0CF@MNPHNFNK@TXT_KEY_DIPLO_BORDER_PROMISE_IGN@
	lea	eax, DWORD PTR $T251572[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3230[ebp], eax
	mov	ecx, DWORD PTR tv3230[ebp]
	mov	DWORD PTR tv2183[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 73		; 00000049H
	mov	edx, DWORD PTR tv2183[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235252[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 72		; 00000048H
	lea	ecx, DWORD PTR $T251572[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10210: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235252[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10211: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235252[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN64@lGetOpinio:

; 10212: 
; 10213: 	iValue = pDiploAI->GetBrokenAttackCityStatePromiseScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetBrokenAttackCityStatePromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetBrokenAttackCityStatePromiseScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10214: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN63@lGetOpinio

; 10215: 	{
; 10216: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235256[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 74		; 0000004aH

; 10217: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235256[ebp+80], edx

; 10218: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_CITY_STATE_PROMISE");

	push	OFFSET ??_C@_0CB@INJHDJBK@TXT_KEY_DIPLO_CITY_STATE_PROMISE@
	lea	eax, DWORD PTR $T251573[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3209[ebp], eax
	mov	ecx, DWORD PTR tv3209[ebp]
	mov	DWORD PTR tv2186[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 75		; 0000004bH
	mov	edx, DWORD PTR tv2186[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235256[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 74		; 0000004aH
	lea	ecx, DWORD PTR $T251573[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10219: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235256[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10220: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235256[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN63@lGetOpinio:

; 10221: 
; 10222: 	iValue = pDiploAI->GetBrokenAttackCityStatePromiseWithAnybodyScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetBrokenAttackCityStatePromiseWithAnybodyScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetBrokenAttackCityStatePromiseWithAnybodyScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10223: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN62@lGetOpinio

; 10224: 	{
; 10225: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235260[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 76		; 0000004cH

; 10226: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235260[ebp+80], edx

; 10227: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_CITY_STATE_PROMISE_BROKEN_WITH_OTHERS");

	push	OFFSET ??_C@_0DE@CNIFHHEM@TXT_KEY_DIPLO_CITY_STATE_PROMISE@
	lea	eax, DWORD PTR $T251574[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3188[ebp], eax
	mov	ecx, DWORD PTR tv3188[ebp]
	mov	DWORD PTR tv2189[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 77		; 0000004dH
	mov	edx, DWORD PTR tv2189[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235260[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 76		; 0000004cH
	lea	ecx, DWORD PTR $T251574[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10228: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235260[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10229: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235260[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN62@lGetOpinio:

; 10230: 
; 10231: 	iValue = pDiploAI->GetIgnoredAttackCityStatePromiseScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetIgnoredAttackCityStatePromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetIgnoredAttackCityStatePromiseScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10232: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN61@lGetOpinio

; 10233: 	{
; 10234: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235264[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 78		; 0000004eH

; 10235: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235264[ebp+80], edx

; 10236: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_CITY_STATE_PROMISE_IGNORED");

	push	OFFSET ??_C@_0CJ@OPLBCFKL@TXT_KEY_DIPLO_CITY_STATE_PROMISE@
	lea	eax, DWORD PTR $T251575[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3167[ebp], eax
	mov	ecx, DWORD PTR tv3167[ebp]
	mov	DWORD PTR tv2192[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 79		; 0000004fH
	mov	edx, DWORD PTR tv2192[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235264[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 78		; 0000004eH
	lea	ecx, DWORD PTR $T251575[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10237: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235264[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10238: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235264[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN61@lGetOpinio:

; 10239: 	
; 10240: 	iValue = pDiploAI->GetBrokenBullyCityStatePromiseScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetBrokenBullyCityStatePromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetBrokenBullyCityStatePromiseScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10241: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN60@lGetOpinio

; 10242: 	{
; 10243: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235268[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 80		; 00000050H

; 10244: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235268[ebp+80], edx

; 10245: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_BULLY_CITY_STATE_PROMISE_BROKEN");

	push	OFFSET ??_C@_0CO@EFMDNAAI@TXT_KEY_DIPLO_BULLY_CITY_STATE_P@
	lea	eax, DWORD PTR $T251576[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3146[ebp], eax
	mov	ecx, DWORD PTR tv3146[ebp]
	mov	DWORD PTR tv2195[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 81		; 00000051H
	mov	edx, DWORD PTR tv2195[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235268[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 80		; 00000050H
	lea	ecx, DWORD PTR $T251576[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10246: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235268[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10247: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235268[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN60@lGetOpinio:

; 10248: 
; 10249: 	iValue = pDiploAI->GetIgnoredBullyCityStatePromiseScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetIgnoredBullyCityStatePromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetIgnoredBullyCityStatePromiseScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10250: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN59@lGetOpinio

; 10251: 	{
; 10252: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235272[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 82		; 00000052H

; 10253: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235272[ebp+80], edx

; 10254: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_BULLY_CITY_STATE_PROMISE_IGNORED");

	push	OFFSET ??_C@_0CP@NEAJLHO@TXT_KEY_DIPLO_BULLY_CITY_STATE_P@
	lea	eax, DWORD PTR $T251577[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3093[ebp], eax
	mov	ecx, DWORD PTR tv3093[ebp]
	mov	DWORD PTR tv2198[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 83		; 00000053H
	mov	edx, DWORD PTR tv2198[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235272[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 82		; 00000052H
	lea	ecx, DWORD PTR $T251577[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10255: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235272[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10256: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235272[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN59@lGetOpinio:

; 10257: 
; 10258: 	iValue = pDiploAI->GetBrokenNoConvertPromiseScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetBrokenNoConvertPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetBrokenNoConvertPromiseScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10259: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN58@lGetOpinio

; 10260: 	{
; 10261: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235276[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 84		; 00000054H

; 10262: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235276[ebp+80], edx

; 10263: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_NO_CONVERT_PROMISE_BROKEN");

	push	OFFSET ??_C@_0CI@GONNKAKM@TXT_KEY_DIPLO_NO_CONVERT_PROMISE@
	lea	eax, DWORD PTR $T251578[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3072[ebp], eax
	mov	ecx, DWORD PTR tv3072[ebp]
	mov	DWORD PTR tv2201[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 85		; 00000055H
	mov	edx, DWORD PTR tv2201[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235276[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 84		; 00000054H
	lea	ecx, DWORD PTR $T251578[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10264: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235276[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10265: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235276[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN58@lGetOpinio:

; 10266: 
; 10267: 	iValue = pDiploAI->GetIgnoredNoConvertPromiseScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetIgnoredNoConvertPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetIgnoredNoConvertPromiseScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10268: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN57@lGetOpinio

; 10269: 	{
; 10270: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235280[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 86		; 00000056H

; 10271: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235280[ebp+80], edx

; 10272: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_NO_CONVERT_PROMISE_IGNORED");

	push	OFFSET ??_C@_0CJ@NMNAOCPP@TXT_KEY_DIPLO_NO_CONVERT_PROMISE@
	lea	eax, DWORD PTR $T251579[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3052[ebp], eax
	mov	ecx, DWORD PTR tv3052[ebp]
	mov	DWORD PTR tv2204[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 87		; 00000057H
	mov	edx, DWORD PTR tv2204[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235280[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 86		; 00000056H
	lea	ecx, DWORD PTR $T251579[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10273: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235280[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10274: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235280[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN57@lGetOpinio:

; 10275: 
; 10276: 	iValue = pDiploAI->GetBrokenNoDiggingPromiseScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetBrokenNoDiggingPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetBrokenNoDiggingPromiseScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10277: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN56@lGetOpinio

; 10278: 	{
; 10279: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235284[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 88		; 00000058H

; 10280: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235284[ebp+80], edx

; 10281: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_NO_DIG_PROMISE_BROKEN");

	push	OFFSET ??_C@_0CE@OEFEGGCB@TXT_KEY_DIPLO_NO_DIG_PROMISE_BRO@
	lea	eax, DWORD PTR $T251580[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3043[ebp], eax
	mov	ecx, DWORD PTR tv3043[ebp]
	mov	DWORD PTR tv2207[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 89		; 00000059H
	mov	edx, DWORD PTR tv2207[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235284[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 88		; 00000058H
	lea	ecx, DWORD PTR $T251580[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10282: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235284[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10283: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235284[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN56@lGetOpinio:

; 10284: 
; 10285: 	iValue = pDiploAI->GetIgnoredNoDiggingPromiseScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetIgnoredNoDiggingPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetIgnoredNoDiggingPromiseScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10286: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN55@lGetOpinio

; 10287: 	{
; 10288: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235288[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 90		; 0000005aH

; 10289: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235288[ebp+80], edx

; 10290: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_NO_DIG_PROMISE_IGNORED");

	push	OFFSET ??_C@_0CF@EPFDJEKE@TXT_KEY_DIPLO_NO_DIG_PROMISE_IGN@
	lea	eax, DWORD PTR $T251581[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3048[ebp], eax
	mov	ecx, DWORD PTR tv3048[ebp]
	mov	DWORD PTR tv2210[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 91		; 0000005bH
	mov	edx, DWORD PTR tv2210[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235288[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 90		; 0000005aH
	lea	ecx, DWORD PTR $T251581[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10291: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235288[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10292: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235288[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN55@lGetOpinio:

; 10293: 
; 10294: 	iValue = pDiploAI->GetBrokenSpyPromiseScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetBrokenSpyPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetBrokenSpyPromiseScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10295: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN54@lGetOpinio

; 10296: 	{
; 10297: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235292[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 92		; 0000005cH

; 10298: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235292[ebp+80], edx

; 10299: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_SPY_PROMISE_BROKEN");

	push	OFFSET ??_C@_0CB@MKAFEIEJ@TXT_KEY_DIPLO_SPY_PROMISE_BROKEN@
	lea	eax, DWORD PTR $T251582[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv3014[ebp], eax
	mov	ecx, DWORD PTR tv3014[ebp]
	mov	DWORD PTR tv2213[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 93		; 0000005dH
	mov	edx, DWORD PTR tv2213[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235292[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 92		; 0000005cH
	lea	ecx, DWORD PTR $T251582[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10300: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235292[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10301: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235292[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN54@lGetOpinio:

; 10302: 
; 10303: 	iValue = pDiploAI->GetIgnoredSpyPromiseScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetIgnoredSpyPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetIgnoredSpyPromiseScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10304: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN53@lGetOpinio

; 10305: 	{
; 10306: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235296[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 94		; 0000005eH

; 10307: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235296[ebp+80], edx

; 10308: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_SPY_PROMISE_IGNORED");

	push	OFFSET ??_C@_0CC@MBECMOA@TXT_KEY_DIPLO_SPY_PROMISE_IGNORE@
	lea	eax, DWORD PTR $T251583[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2948[ebp], eax
	mov	ecx, DWORD PTR tv2948[ebp]
	mov	DWORD PTR tv2216[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 95		; 0000005fH
	mov	edx, DWORD PTR tv2216[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235296[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 94		; 0000005eH
	lea	ecx, DWORD PTR $T251583[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10309: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235296[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10310: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235296[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN53@lGetOpinio:

; 10311: 
; 10312: 	iValue = pDiploAI->GetBrokenCoopWarPromiseScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetBrokenCoopWarPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetBrokenCoopWarPromiseScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10313: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN52@lGetOpinio

; 10314: 	{
; 10315: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235300[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 96		; 00000060H

; 10316: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235300[ebp+80], edx

; 10317: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_COOP_WAR_PROMISE");

	push	OFFSET ??_C@_0BP@FGIJJCKA@TXT_KEY_DIPLO_COOP_WAR_PROMISE?$AA@
	lea	eax, DWORD PTR $T251584[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2927[ebp], eax
	mov	ecx, DWORD PTR tv2927[ebp]
	mov	DWORD PTR tv2219[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 97		; 00000061H
	mov	edx, DWORD PTR tv2219[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235300[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 96		; 00000060H
	lea	ecx, DWORD PTR $T251584[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10318: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235300[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10319: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235300[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN52@lGetOpinio:

; 10320: 
; 10321: 	iValue = pDiploAI->GetAngryAboutProtectedMinorKilledScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetAngryAboutProtectedMinorKilledScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetAngryAboutProtectedMinorKilledScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10322: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN51@lGetOpinio

; 10323: 	{
; 10324: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235304[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 98		; 00000062H

; 10325: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235304[ebp+80], edx

; 10326: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_PROTECTED_MINORS_KILLED");

	push	OFFSET ??_C@_0CG@MBMCJKCH@TXT_KEY_DIPLO_PROTECTED_MINORS_K@
	lea	eax, DWORD PTR $T251585[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2906[ebp], eax
	mov	ecx, DWORD PTR tv2906[ebp]
	mov	DWORD PTR tv2222[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 99		; 00000063H
	mov	edx, DWORD PTR tv2222[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235304[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 98		; 00000062H
	lea	ecx, DWORD PTR $T251585[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10327: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235304[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10328: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235304[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN51@lGetOpinio:

; 10329: 
; 10330: 	iValue = pDiploAI->GetAngryAboutProtectedMinorAttackedScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetAngryAboutProtectedMinorAttackedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetAngryAboutProtectedMinorAttackedScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10331: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN50@lGetOpinio

; 10332: 	{
; 10333: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235308[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 100		; 00000064H

; 10334: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235308[ebp+80], edx

; 10335: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_PROTECTED_MINORS_ATTACKED");

	push	OFFSET ??_C@_0CI@GFEHEGDC@TXT_KEY_DIPLO_PROTECTED_MINORS_A@
	lea	eax, DWORD PTR $T251586[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2885[ebp], eax
	mov	ecx, DWORD PTR tv2885[ebp]
	mov	DWORD PTR tv2225[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 101		; 00000065H
	mov	edx, DWORD PTR tv2225[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235308[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 100		; 00000064H
	lea	ecx, DWORD PTR $T251586[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10336: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235308[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10337: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235308[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN50@lGetOpinio:

; 10338: 
; 10339: 	iValue = pDiploAI->GetAngryAboutProtectedMinorBulliedScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetAngryAboutProtectedMinorBulliedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetAngryAboutProtectedMinorBulliedScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10340: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN49@lGetOpinio

; 10341: 	{
; 10342: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235312[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 102		; 00000066H

; 10343: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235312[ebp+80], edx

; 10344: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_PROTECTED_MINORS_BULLIED");

	push	OFFSET ??_C@_0CH@MFPLMFOO@TXT_KEY_DIPLO_PROTECTED_MINORS_B@
	lea	eax, DWORD PTR $T251587[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2864[ebp], eax
	mov	ecx, DWORD PTR tv2864[ebp]
	mov	DWORD PTR tv2228[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 103		; 00000067H
	mov	edx, DWORD PTR tv2228[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235312[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 102		; 00000066H
	lea	ecx, DWORD PTR $T251587[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10345: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235312[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10346: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235312[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN49@lGetOpinio:

; 10347: 
; 10348: 	iValue = pDiploAI->GetAngryAboutSidedWithProtectedMinorScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetAngryAboutSidedWithProtectedMinorScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetAngryAboutSidedWithProtectedMinorScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10349: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN48@lGetOpinio

; 10350: 	{
; 10351: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235316[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 104		; 00000068H

; 10352: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235316[ebp+80], edx

; 10353: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_SIDED_WITH_MINOR");

	push	OFFSET ??_C@_0BP@JLJPLJKF@TXT_KEY_DIPLO_SIDED_WITH_MINOR?$AA@
	lea	eax, DWORD PTR $T251588[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2843[ebp], eax
	mov	ecx, DWORD PTR tv2843[ebp]
	mov	DWORD PTR tv2231[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 105		; 00000069H
	mov	edx, DWORD PTR tv2231[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235316[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 104		; 00000068H
	lea	ecx, DWORD PTR $T251588[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10354: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235316[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10355: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235316[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN48@lGetOpinio:

; 10356: 
; 10357: 	iValue = pDiploAI->GetDOFAcceptedScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetDOFAcceptedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDOFAcceptedScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10358: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN47@lGetOpinio

; 10359: 	{
; 10360: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235320[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 106		; 0000006aH

; 10361: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235320[ebp+80], edx

; 10362: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_DOF");

	push	OFFSET ??_C@_0BC@DHJIIPLG@TXT_KEY_DIPLO_DOF?$AA@
	lea	eax, DWORD PTR $T251589[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2822[ebp], eax
	mov	ecx, DWORD PTR tv2822[ebp]
	mov	DWORD PTR tv2234[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 107		; 0000006bH
	mov	edx, DWORD PTR tv2234[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235320[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 106		; 0000006aH
	lea	ecx, DWORD PTR $T251589[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10363: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235320[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10364: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235320[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN47@lGetOpinio:

; 10365: 
; 10366: 	iValue = pDiploAI->GetDOFWithAnyFriendScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetDOFWithAnyFriendScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDOFWithAnyFriendScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10367: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN46@lGetOpinio

; 10368: 	{
; 10369: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235324[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 108		; 0000006cH

; 10370: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235324[ebp+80], edx

; 10371: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_MUTUAL_DOF");

	push	OFFSET ??_C@_0BJ@BNMOMJHL@TXT_KEY_DIPLO_MUTUAL_DOF?$AA@
	lea	eax, DWORD PTR $T251590[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2801[ebp], eax
	mov	ecx, DWORD PTR tv2801[ebp]
	mov	DWORD PTR tv2237[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 109		; 0000006dH
	mov	edx, DWORD PTR tv2237[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235324[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 108		; 0000006cH
	lea	ecx, DWORD PTR $T251590[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10372: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235324[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10373: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235324[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN46@lGetOpinio:

; 10374: 
; 10375: 	iValue = pDiploAI->GetDOFWithAnyEnemyScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetDOFWithAnyEnemyScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDOFWithAnyEnemyScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10376: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN45@lGetOpinio

; 10377: 	{
; 10378: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235328[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 110		; 0000006eH

; 10379: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235328[ebp+80], edx

; 10380: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_HUMAN_DOF_WITH_ENEMY");

	push	OFFSET ??_C@_0CD@OIPADGDM@TXT_KEY_DIPLO_HUMAN_DOF_WITH_ENE@
	lea	eax, DWORD PTR $T251591[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2748[ebp], eax
	mov	ecx, DWORD PTR tv2748[ebp]
	mov	DWORD PTR tv2240[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 111		; 0000006fH
	mov	edx, DWORD PTR tv2240[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235328[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 110		; 0000006eH
	lea	ecx, DWORD PTR $T251591[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10381: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235328[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10382: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235328[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN45@lGetOpinio:

; 10383: 
; 10384: 	// TRAITOR BEGIN
; 10385: 	{
; 10386: 		iValue = 0;

	mov	DWORD PTR _iValue$[ebp], 0

; 10387: 		Localization::String str;

	lea	ecx, DWORD PTR _str$235331[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 112		; 00000070H

; 10388: 		int iTempValue;
; 10389: 
; 10390: 		iTempValue = pDiploAI->GetFriendDenouncementScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetFriendDenouncementScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetFriendDenouncementScore
	mov	DWORD PTR _iTempValue$235332[ebp], eax

; 10391: 		if (iTempValue > iValue)

	mov	edx, DWORD PTR _iTempValue$235332[ebp]
	cmp	edx, DWORD PTR _iValue$[ebp]
	jle	SHORT $LN44@lGetOpinio

; 10392: 		{
; 10393: 			iValue = iTempValue;

	mov	eax, DWORD PTR _iTempValue$235332[ebp]
	mov	DWORD PTR _iValue$[ebp], eax

; 10394: 			str = Localization::Lookup("TXT_KEY_DIPLO_DENOUNCED_BY_PEOPLE_WE_TRUST_MORE");

	push	OFFSET ??_C@_0DA@CENMHNAM@TXT_KEY_DIPLO_DENOUNCED_BY_PEOPL@
	lea	ecx, DWORD PTR $T251592[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1412[ebp], eax
	mov	edx, DWORD PTR tv1412[ebp]
	mov	DWORD PTR tv2243[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 113		; 00000071H
	mov	eax, DWORD PTR tv2243[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$235331[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 112		; 00000070H
	lea	ecx, DWORD PTR $T251592[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN44@lGetOpinio:

; 10395: 		}
; 10396: 
; 10397: 		iTempValue = pDiploAI->GetWeDenouncedFriendScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetWeDenouncedFriendScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetWeDenouncedFriendScore
	mov	DWORD PTR _iTempValue$235332[ebp], eax

; 10398: 		if (iTempValue > iValue)

	mov	edx, DWORD PTR _iTempValue$235332[ebp]
	cmp	edx, DWORD PTR _iValue$[ebp]
	jle	SHORT $LN43@lGetOpinio

; 10399: 		{
; 10400: 			iValue = iTempValue;

	mov	eax, DWORD PTR _iTempValue$235332[ebp]
	mov	DWORD PTR _iValue$[ebp], eax

; 10401: 			str = Localization::Lookup("TXT_KEY_DIPLO_HUMAN_DENOUNCED_FRIENDS");

	push	OFFSET ??_C@_0CG@HPHBMLI@TXT_KEY_DIPLO_HUMAN_DENOUNCED_FR@
	lea	ecx, DWORD PTR $T251593[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2727[ebp], eax
	mov	edx, DWORD PTR tv2727[ebp]
	mov	DWORD PTR tv2245[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 114		; 00000072H
	mov	eax, DWORD PTR tv2245[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$235331[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 112		; 00000070H
	lea	ecx, DWORD PTR $T251593[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN43@lGetOpinio:

; 10402: 		}
; 10403: 
; 10404: 		iTempValue = pDiploAI->GetFriendDenouncedUsScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetFriendDenouncedUsScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetFriendDenouncedUsScore
	mov	DWORD PTR _iTempValue$235332[ebp], eax

; 10405: 		if (iTempValue > iValue)

	mov	edx, DWORD PTR _iTempValue$235332[ebp]
	cmp	edx, DWORD PTR _iValue$[ebp]
	jle	SHORT $LN42@lGetOpinio

; 10406: 		{
; 10407: 			iValue = iTempValue;

	mov	eax, DWORD PTR _iTempValue$235332[ebp]
	mov	DWORD PTR _iValue$[ebp], eax

; 10408: 			str = Localization::Lookup("TXT_KEY_DIPLO_HUMAN_FRIEND_DENOUNCED");

	push	OFFSET ??_C@_0CF@KIFANCHN@TXT_KEY_DIPLO_HUMAN_FRIEND_DENOU@
	lea	ecx, DWORD PTR $T251594[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2706[ebp], eax
	mov	edx, DWORD PTR tv2706[ebp]
	mov	DWORD PTR tv2247[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 115		; 00000073H
	mov	eax, DWORD PTR tv2247[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$235331[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 112		; 00000070H
	lea	ecx, DWORD PTR $T251594[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN42@lGetOpinio:

; 10409: 		}
; 10410: 
; 10411: 		iTempValue = pDiploAI->GetWeDeclaredWarOnFriendScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetWeDeclaredWarOnFriendScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetWeDeclaredWarOnFriendScore
	mov	DWORD PTR _iTempValue$235332[ebp], eax

; 10412: 		if (iTempValue > iValue)

	mov	edx, DWORD PTR _iTempValue$235332[ebp]
	cmp	edx, DWORD PTR _iValue$[ebp]
	jle	SHORT $LN41@lGetOpinio

; 10413: 		{
; 10414: 			iValue = iTempValue;

	mov	eax, DWORD PTR _iTempValue$235332[ebp]
	mov	DWORD PTR _iValue$[ebp], eax

; 10415: 			str = Localization::Lookup("TXT_KEY_DIPLO_HUMAN_DECLARED_WAR_ON_FRIENDS");

	push	OFFSET ??_C@_0CM@IMOFGMGN@TXT_KEY_DIPLO_HUMAN_DECLARED_WAR@
	lea	ecx, DWORD PTR $T251595[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2686[ebp], eax
	mov	edx, DWORD PTR tv2686[ebp]
	mov	DWORD PTR tv2249[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 116		; 00000074H
	mov	eax, DWORD PTR tv2249[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$235331[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 112		; 00000070H
	lea	ecx, DWORD PTR $T251595[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN41@lGetOpinio:

; 10416: 		}
; 10417: 
; 10418: 		iTempValue = pDiploAI->GetFriendDeclaredWarOnUsScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetFriendDeclaredWarOnUsScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetFriendDeclaredWarOnUsScore
	mov	DWORD PTR _iTempValue$235332[ebp], eax

; 10419: 		if (iTempValue > iValue)

	mov	edx, DWORD PTR _iTempValue$235332[ebp]
	cmp	edx, DWORD PTR _iValue$[ebp]
	jle	SHORT $LN40@lGetOpinio

; 10420: 		{
; 10421: 			iValue = iTempValue;

	mov	eax, DWORD PTR _iTempValue$235332[ebp]
	mov	DWORD PTR _iValue$[ebp], eax

; 10422: 			str = Localization::Lookup("TXT_KEY_DIPLO_HUMAN_FRIEND_DECLARED_WAR");

	push	OFFSET ??_C@_0CI@GOGEGDOJ@TXT_KEY_DIPLO_HUMAN_FRIEND_DECLA@
	lea	ecx, DWORD PTR $T251596[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2651[ebp], eax
	mov	edx, DWORD PTR tv2651[ebp]
	mov	DWORD PTR tv2251[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 117		; 00000075H
	mov	eax, DWORD PTR tv2251[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$235331[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 112		; 00000070H
	lea	ecx, DWORD PTR $T251596[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN40@lGetOpinio:

; 10423: 		}
; 10424: 
; 10425: 		if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	SHORT $LN39@lGetOpinio

; 10426: 		{
; 10427: 			Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235349[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 118		; 00000076H

; 10428: 			kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235349[ebp+80], ecx

; 10429: 			kOpinion.m_str = str;

	lea	edx, DWORD PTR _str$235331[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235349[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z

; 10430: 			aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235349[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10431: 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 112		; 00000070H
	lea	ecx, DWORD PTR _kOpinion$235349[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN39@lGetOpinio:

; 10432: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _str$235331[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10433: 	// TRAITOR END
; 10434: 
; 10435: 	//iValue = pDiploAI->GetRequestsRefusedScore(eWithPlayer);
; 10436: 	//if (iValue != 0)
; 10437: 	//{
; 10438: 	//	Opinion kOpinion;
; 10439: 	//	kOpinion.m_iValue = iValue;
; 10440: 	//	kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_REFUSED_REQUESTS");
; 10441: 	//	aOpinions.push_back(kOpinion);
; 10442: 	//}
; 10443: 
; 10444: 	iValue = pDiploAI->GetDenouncedUsScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetDenouncedUsScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDenouncedUsScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10445: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN38@lGetOpinio

; 10446: 	{
; 10447: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235351[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 119		; 00000077H

; 10448: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235351[ebp+80], edx

; 10449: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_DENOUNCED_BY_US");

	push	OFFSET ??_C@_0BO@IPHFDEFH@TXT_KEY_DIPLO_DENOUNCED_BY_US?$AA@
	lea	eax, DWORD PTR $T251597[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2681[ebp], eax
	mov	ecx, DWORD PTR tv2681[ebp]
	mov	DWORD PTR tv2255[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 120		; 00000078H
	mov	edx, DWORD PTR tv2255[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235351[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 119		; 00000077H
	lea	ecx, DWORD PTR $T251597[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10450: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235351[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10451: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235351[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN38@lGetOpinio:

; 10452: 
; 10453: 	iValue = pDiploAI->GetDenouncedThemScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetDenouncedThemScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDenouncedThemScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10454: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN37@lGetOpinio

; 10455: 	{
; 10456: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235355[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 121		; 00000079H

; 10457: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235355[ebp+80], edx

; 10458: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_DENOUNCED_BY_THEM");

	push	OFFSET ??_C@_0CA@FNLADHBO@TXT_KEY_DIPLO_DENOUNCED_BY_THEM?$AA@
	lea	eax, DWORD PTR $T251598[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2675[ebp], eax
	mov	ecx, DWORD PTR tv2675[ebp]
	mov	DWORD PTR tv2258[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 122		; 0000007aH
	mov	edx, DWORD PTR tv2258[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235355[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 121		; 00000079H
	lea	ecx, DWORD PTR $T251598[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10459: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235355[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10460: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235355[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN37@lGetOpinio:

; 10461: 
; 10462: 	iValue = pDiploAI->GetDenouncedFriendScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetDenouncedFriendScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDenouncedFriendScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10463: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN36@lGetOpinio

; 10464: 	{
; 10465: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235359[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 123		; 0000007bH

; 10466: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235359[ebp+80], edx

; 10467: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_HUMAN_DENOUNCED_FRIEND");

	push	OFFSET ??_C@_0CF@GILKKBEK@TXT_KEY_DIPLO_HUMAN_DENOUNCED_FR@
	lea	eax, DWORD PTR $T251599[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2597[ebp], eax
	mov	ecx, DWORD PTR tv2597[ebp]
	mov	DWORD PTR tv2261[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 124		; 0000007cH
	mov	edx, DWORD PTR tv2261[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235359[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 123		; 0000007bH
	lea	ecx, DWORD PTR $T251599[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10468: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235359[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10469: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235359[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN36@lGetOpinio:

; 10470: 
; 10471: 	iValue = pDiploAI->GetDenouncedEnemyScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetDenouncedEnemyScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDenouncedEnemyScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10472: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN35@lGetOpinio

; 10473: 	{
; 10474: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235363[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 125		; 0000007dH

; 10475: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235363[ebp+80], edx

; 10476: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_MUTUAL_ENEMY");

	push	OFFSET ??_C@_0BL@NJMBGKJC@TXT_KEY_DIPLO_MUTUAL_ENEMY?$AA@
	lea	eax, DWORD PTR $T251600[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2540[ebp], eax
	mov	ecx, DWORD PTR tv2540[ebp]
	mov	DWORD PTR tv2264[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 126		; 0000007eH
	mov	edx, DWORD PTR tv2264[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235363[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 125		; 0000007dH
	lea	ecx, DWORD PTR $T251600[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10477: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235363[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10478: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235363[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN35@lGetOpinio:

; 10479: 
; 10480: 	iValue = pDiploAI->GetRecklessExpanderScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetRecklessExpanderScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetRecklessExpanderScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10481: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN34@lGetOpinio

; 10482: 	{
; 10483: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235367[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 127		; 0000007fH

; 10484: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235367[ebp+80], edx

; 10485: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_RECKLESS_EXPANDER");

	push	OFFSET ??_C@_0CA@JBGMOIGM@TXT_KEY_DIPLO_RECKLESS_EXPANDER?$AA@
	lea	eax, DWORD PTR $T251601[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2519[ebp], eax
	mov	ecx, DWORD PTR tv2519[ebp]
	mov	DWORD PTR tv2267[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 128		; 00000080H
	mov	edx, DWORD PTR tv2267[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235367[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 127		; 0000007fH
	lea	ecx, DWORD PTR $T251601[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10486: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235367[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10487: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235367[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN34@lGetOpinio:

; 10488: 
; 10489: 	iValue = pDiploAI->GetRecentTradeScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetRecentTradeScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetRecentTradeScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10490: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN33@lGetOpinio

; 10491: 	{
; 10492: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235371[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 129		; 00000081H

; 10493: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235371[ebp+80], edx

; 10494: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_TRADE_PARTNER");

	push	OFFSET ??_C@_0BM@EHNFCJBO@TXT_KEY_DIPLO_TRADE_PARTNER?$AA@
	lea	eax, DWORD PTR $T251602[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2498[ebp], eax
	mov	ecx, DWORD PTR tv2498[ebp]
	mov	DWORD PTR tv2270[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 130		; 00000082H
	mov	edx, DWORD PTR tv2270[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235371[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 129		; 00000081H
	lea	ecx, DWORD PTR $T251602[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10495: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235371[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10496: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235371[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN33@lGetOpinio:

; 10497: 
; 10498: 	iValue = pDiploAI->GetCommonFoeScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetCommonFoeScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetCommonFoeScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10499: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN32@lGetOpinio

; 10500: 	{
; 10501: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235375[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 131		; 00000083H

; 10502: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235375[ebp+80], edx

; 10503: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_COMMON_FOE");

	push	OFFSET ??_C@_0BJ@EMNKGMPG@TXT_KEY_DIPLO_COMMON_FOE?$AA@
	lea	eax, DWORD PTR $T251603[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2478[ebp], eax
	mov	ecx, DWORD PTR tv2478[ebp]
	mov	DWORD PTR tv2273[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 132		; 00000084H
	mov	edx, DWORD PTR tv2273[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235375[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 131		; 00000083H
	lea	ecx, DWORD PTR $T251603[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10504: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235375[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10505: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235375[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN32@lGetOpinio:

; 10506: 
; 10507: 	iValue = pDiploAI->GetRecentAssistScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetRecentAssistScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetRecentAssistScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10508: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN31@lGetOpinio

; 10509: 	{
; 10510: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235379[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 133		; 00000085H

; 10511: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235379[ebp+80], edx

; 10512: 		if (iValue > 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	jle	SHORT $LN30@lGetOpinio

; 10513: 		{
; 10514: 			kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_REFUSED_REQUESTS");

	push	OFFSET ??_C@_0BP@HOJOFCMK@TXT_KEY_DIPLO_REFUSED_REQUESTS?$AA@
	lea	eax, DWORD PTR $T251604[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2408[ebp], eax
	mov	ecx, DWORD PTR tv2408[ebp]
	mov	DWORD PTR tv2276[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 134		; 00000086H
	mov	edx, DWORD PTR tv2276[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235379[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 133		; 00000085H
	lea	ecx, DWORD PTR $T251604[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	SHORT $LN29@lGetOpinio
$LN30@lGetOpinio:

; 10515: 		}
; 10516: 		else if (iValue < 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	jge	SHORT $LN29@lGetOpinio

; 10517: 		{
; 10518: 			kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_ASSISTANCE_TO_THEM");

	push	OFFSET ??_C@_0CB@PLFCIKEO@TXT_KEY_DIPLO_ASSISTANCE_TO_THEM@
	lea	eax, DWORD PTR $T251605[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2476[ebp], eax
	mov	ecx, DWORD PTR tv2476[ebp]
	mov	DWORD PTR tv2278[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 135		; 00000087H
	mov	edx, DWORD PTR tv2278[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235379[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 133		; 00000085H
	lea	ecx, DWORD PTR $T251605[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN29@lGetOpinio:

; 10519: 		}
; 10520: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235379[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10521: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235379[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN31@lGetOpinio:

; 10522: 
; 10523: 	iValue = pDiploAI->GetNukedByScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetNukedByScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNukedByScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10524: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN27@lGetOpinio

; 10525: 	{
; 10526: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235388[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 136		; 00000088H

; 10527: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235388[ebp+80], edx

; 10528: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_NUKED");

	push	OFFSET ??_C@_0BE@FEHNBBKF@TXT_KEY_DIPLO_NUKED?$AA@
	lea	eax, DWORD PTR $T251606[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2406[ebp], eax
	mov	ecx, DWORD PTR tv2406[ebp]
	mov	DWORD PTR tv2281[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 137		; 00000089H
	mov	edx, DWORD PTR tv2281[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235388[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 136		; 00000088H
	lea	ecx, DWORD PTR $T251606[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10529: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235388[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10530: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235388[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN27@lGetOpinio:

; 10531: 
; 10532: 	iValue = pDiploAI->GetCapitalCapturedByScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetCapitalCapturedByScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetCapitalCapturedByScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10533: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN26@lGetOpinio

; 10534: 	{
; 10535: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235392[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 138		; 0000008aH

; 10536: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235392[ebp+80], edx

; 10537: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_CAPTURED_CAPITAL");

	push	OFFSET ??_C@_0BP@IIMJMBNJ@TXT_KEY_DIPLO_CAPTURED_CAPITAL?$AA@
	lea	eax, DWORD PTR $T251607[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv2361[ebp], eax
	mov	ecx, DWORD PTR tv2361[ebp]
	mov	DWORD PTR tv2284[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 139		; 0000008bH
	mov	edx, DWORD PTR tv2284[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235392[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 138		; 0000008aH
	lea	ecx, DWORD PTR $T251607[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10538: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235392[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10539: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235392[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN26@lGetOpinio:

; 10540: 
; 10541: 	iValue = pDiploAI->GetGaveAssistanceToScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetGaveAssistanceToScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetGaveAssistanceToScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10542: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN25@lGetOpinio

; 10543: 	{
; 10544: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235396[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 140		; 0000008cH

; 10545: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235396[ebp+80], edx

; 10546: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_ASSISTANCE_FROM_THEM");

	push	OFFSET ??_C@_0CD@NELFONGC@TXT_KEY_DIPLO_ASSISTANCE_FROM_TH@
	lea	eax, DWORD PTR $T251608[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv4212[ebp], eax
	mov	ecx, DWORD PTR tv4212[ebp]
	mov	DWORD PTR tv2287[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 141		; 0000008dH
	mov	edx, DWORD PTR tv2287[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235396[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 140		; 0000008cH
	lea	ecx, DWORD PTR $T251608[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10547: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235396[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10548: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235396[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN25@lGetOpinio:

; 10549: 
; 10550: 	iValue = pDiploAI->GetPaidTributeToScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetPaidTributeToScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetPaidTributeToScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10551: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN24@lGetOpinio

; 10552: 	{
; 10553: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235400[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 142		; 0000008eH

; 10554: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235400[ebp+80], edx

; 10555: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_PAID_TRIBUTE");

	push	OFFSET ??_C@_0BL@DFNKHEFF@TXT_KEY_DIPLO_PAID_TRIBUTE?$AA@
	lea	eax, DWORD PTR $T251609[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv4289[ebp], eax
	mov	ecx, DWORD PTR tv4289[ebp]
	mov	DWORD PTR tv2290[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 143		; 0000008fH
	mov	edx, DWORD PTR tv2290[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235400[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 142		; 0000008eH
	lea	ecx, DWORD PTR $T251609[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10556: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235400[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10557: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235400[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN24@lGetOpinio:

; 10558: 
; 10559: 	iValue = pDiploAI->GetLikedTheirProposalScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetLikedTheirProposalScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetLikedTheirProposalScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10560: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN23@lGetOpinio

; 10561: 	{
; 10562: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235404[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 144		; 00000090H

; 10563: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235404[ebp+80], edx

; 10564: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_LIKED_OUR_PROPOSAL");

	push	OFFSET ??_C@_0CB@IIEFPJAO@TXT_KEY_DIPLO_LIKED_OUR_PROPOSAL@
	lea	eax, DWORD PTR $T251610[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv4291[ebp], eax
	mov	ecx, DWORD PTR tv4291[ebp]
	mov	DWORD PTR tv2293[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 145		; 00000091H
	mov	edx, DWORD PTR tv2293[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235404[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 144		; 00000090H
	lea	ecx, DWORD PTR $T251610[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10565: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235404[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10566: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235404[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN23@lGetOpinio:

; 10567: 	
; 10568: 	iValue = pDiploAI->GetDislikedTheirProposalScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetDislikedTheirProposalScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDislikedTheirProposalScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10569: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN22@lGetOpinio

; 10570: 	{
; 10571: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235408[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 146		; 00000092H

; 10572: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235408[ebp+80], edx

; 10573: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_DISLIKED_OUR_PROPOSAL");

	push	OFFSET ??_C@_0CE@MNKFJFJE@TXT_KEY_DIPLO_DISLIKED_OUR_PROPO@
	lea	eax, DWORD PTR $T251611[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv4220[ebp], eax
	mov	ecx, DWORD PTR tv4220[ebp]
	mov	DWORD PTR tv2296[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 147		; 00000093H
	mov	edx, DWORD PTR tv2296[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235408[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 146		; 00000092H
	lea	ecx, DWORD PTR $T251611[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10574: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235408[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10575: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235408[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN22@lGetOpinio:

; 10576: 
; 10577: 	iValue = pDiploAI->GetSupportedMyProposalScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetSupportedMyProposalScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetSupportedMyProposalScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10578: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN21@lGetOpinio

; 10579: 	{
; 10580: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235412[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 148		; 00000094H

; 10581: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235412[ebp+80], edx

; 10582: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_SUPPORTED_THEIR_PROPOSAL");

	push	OFFSET ??_C@_0CH@LAPBJBJI@TXT_KEY_DIPLO_SUPPORTED_THEIR_PR@
	lea	eax, DWORD PTR $T251612[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv4285[ebp], eax
	mov	ecx, DWORD PTR tv4285[ebp]
	mov	DWORD PTR tv2299[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 149		; 00000095H
	mov	edx, DWORD PTR tv2299[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235412[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 148		; 00000094H
	lea	ecx, DWORD PTR $T251612[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10583: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235412[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10584: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235412[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN21@lGetOpinio:

; 10585: 
; 10586: 	iValue = pDiploAI->GetFoiledMyProposalScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetFoiledMyProposalScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetFoiledMyProposalScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10587: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN20@lGetOpinio

; 10588: 	{
; 10589: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235416[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 150		; 00000096H

; 10590: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235416[ebp+80], edx

; 10591: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_FOILED_THEIR_PROPOSAL");

	push	OFFSET ??_C@_0CE@BOKEFDBM@TXT_KEY_DIPLO_FOILED_THEIR_PROPO@
	lea	eax, DWORD PTR $T251613[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv4214[ebp], eax
	mov	ecx, DWORD PTR tv4214[ebp]
	mov	DWORD PTR tv2302[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 151		; 00000097H
	mov	edx, DWORD PTR tv2302[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235416[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 150		; 00000096H
	lea	ecx, DWORD PTR $T251613[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10592: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235416[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10593: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235416[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN20@lGetOpinio:

; 10594: 
; 10595: 	iValue = pDiploAI->GetSupportedMyHostingScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetSupportedMyHostingScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetSupportedMyHostingScore
	mov	DWORD PTR _iValue$[ebp], eax

; 10596: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN19@lGetOpinio

; 10597: 	{
; 10598: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235420[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 152		; 00000098H

; 10599: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235420[ebp+80], edx

; 10600: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_SUPPORTED_THEIR_HOSTING");

	push	OFFSET ??_C@_0CG@BBGPMMAI@TXT_KEY_DIPLO_SUPPORTED_THEIR_HO@
	lea	eax, DWORD PTR $T251614[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv4258[ebp], eax
	mov	ecx, DWORD PTR tv4258[ebp]
	mov	DWORD PTR tv2305[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 153		; 00000099H
	mov	edx, DWORD PTR tv2305[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235420[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 152		; 00000098H
	lea	ecx, DWORD PTR $T251614[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10601: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235420[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10602: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235420[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN19@lGetOpinio:

; 10603: 
; 10604: 	iValue = pDiploAI->GetScenarioModifier1(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetScenarioModifier1@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetScenarioModifier1
	mov	DWORD PTR _iValue$[ebp], eax

; 10605: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN18@lGetOpinio

; 10606: 	{
; 10607: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235424[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 154		; 0000009aH

; 10608: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235424[ebp+80], edx

; 10609: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_SPECIFIC_DIPLO_STRING_1");

	push	OFFSET ??_C@_0CA@IKKFGDHJ@TXT_KEY_SPECIFIC_DIPLO_STRING_1?$AA@
	lea	eax, DWORD PTR $T251615[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv4267[ebp], eax
	mov	ecx, DWORD PTR tv4267[ebp]
	mov	DWORD PTR tv2308[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 155		; 0000009bH
	mov	edx, DWORD PTR tv2308[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235424[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 154		; 0000009aH
	lea	ecx, DWORD PTR $T251615[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10610: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235424[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10611: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235424[ebp]
	call	??1Opinion@@QAE@XZ
$LN18@lGetOpinio:

; 10612: 
; 10613: 	iValue = pDiploAI->GetScenarioModifier2(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetScenarioModifier2@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetScenarioModifier2
	mov	DWORD PTR _iValue$[ebp], eax

; 10614: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN17@lGetOpinio

; 10615: 	{
; 10616: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235428[ebp]
	call	??0Opinion@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 156		; 0000009cH

; 10617: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235428[ebp+80], edx

; 10618: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_SPECIFIC_DIPLO_STRING_2");

	push	OFFSET ??_C@_0CA@KBIIDALK@TXT_KEY_SPECIFIC_DIPLO_STRING_2?$AA@
	lea	eax, DWORD PTR $T251616[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1875[ebp], eax
	mov	ecx, DWORD PTR tv1875[ebp]
	mov	DWORD PTR tv2311[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 157		; 0000009dH
	mov	edx, DWORD PTR tv2311[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235428[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 156		; 0000009cH
	lea	ecx, DWORD PTR $T251616[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10619: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235428[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10620: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235428[ebp]
	call	??1Opinion@@QAE@XZ
$LN17@lGetOpinio:

; 10621: 
; 10622: 	iValue = pDiploAI->GetScenarioModifier3(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[ebp]
	call	?GetScenarioModifier3@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetScenarioModifier3
	mov	DWORD PTR _iValue$[ebp], eax

; 10623: 	if (iValue != 0)

	cmp	DWORD PTR _iValue$[ebp], 0
	je	$LN16@lGetOpinio

; 10624: 	{
; 10625: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235432[ebp]
	call	??0Opinion@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 158		; 0000009eH

; 10626: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _kOpinion$235432[ebp+80], edx

; 10627: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_SPECIFIC_DIPLO_STRING_3");

	push	OFFSET ??_C@_0CA@LIJDABPL@TXT_KEY_SPECIFIC_DIPLO_STRING_3?$AA@
	lea	eax, DWORD PTR $T251617[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv1891[ebp], eax
	mov	ecx, DWORD PTR tv1891[ebp]
	mov	DWORD PTR tv2314[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 159		; 0000009fH
	mov	edx, DWORD PTR tv2314[ebp]
	push	edx
	lea	ecx, DWORD PTR _kOpinion$235432[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 158		; 0000009eH
	lea	ecx, DWORD PTR $T251617[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 10628: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235432[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10629: 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kOpinion$235432[ebp]
	call	??1Opinion@@QAE@XZ
$LN16@lGetOpinio:

; 10630: 
; 10631: 	std::stable_sort(aOpinions.begin(), aOpinions.end(), OpinionEval());

	xor	ecx, ecx
	mov	BYTE PTR $T251618[ebp], cl
	movzx	edx, BYTE PTR $T251618[ebp]
	push	edx
	lea	eax, DWORD PTR $T251619[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?end@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@XZ ; std::vector<Opinion,std::allocator<Opinion> >::end
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T251620[ebp]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?begin@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@XZ ; std::vector<Opinion,std::allocator<Opinion> >::begin
	mov	eax, DWORD PTR [eax]
	push	eax
	call	??$stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@@Z ; std::stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>
	add	esp, 12					; 0000000cH

; 10632: 
; 10633: 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 10634: 	int index = 1;

	mov	DWORD PTR _index$[ebp], 1

; 10635: 	std::string strOutput;

	lea	ecx, DWORD PTR _strOutput$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 160		; 000000a0H

; 10636: 	const char* strEmpty = "";

	mov	DWORD PTR _strEmpty$[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@

; 10637: 	std::string strEndColor = "[ENDCOLOR]";

	push	OFFSET ??_C@_0L@LJEHDPKM@?$FLENDCOLOR?$FN?$AA@
	lea	ecx, DWORD PTR _strEndColor$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 161		; 000000a1H

; 10638: 	size_t EndColorFound;
; 10639: 	std::string strColorPrefix = "[COLOR_";

	push	OFFSET ??_C@_07BFBDFODN@?$FLCOLOR_?$AA@
	lea	ecx, DWORD PTR _strColorPrefix$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 162		; 000000a2H

; 10640: 	size_t BeginColorPrefixFound;
; 10641: 	std::string strColorSuffix = "]";

	push	OFFSET ??_C@_01LBDDMOBJ@?$FN?$AA@
	lea	ecx, DWORD PTR _strColorSuffix$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 163		; 000000a3H

; 10642: 	size_t BeginColorSuffixFound;
; 10643: 	std::string strFullPositiveColor = "[COLOR_POSITIVE_TEXT]";

	push	OFFSET ??_C@_0BG@LJCMNJEH@?$FLCOLOR_POSITIVE_TEXT?$FN?$AA@
	lea	ecx, DWORD PTR _strFullPositiveColor$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 164		; 000000a4H

; 10644: 	std::string strPartialPositiveColor = "[COLOR_FADING_POSITIVE_TEXT]";

	push	OFFSET ??_C@_0BN@JDCAKBBJ@?$FLCOLOR_FADING_POSITIVE_TEXT?$FN?$AA@
	lea	ecx, DWORD PTR _strPartialPositiveColor$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 165		; 000000a5H

; 10645: 	std::string strNeutralColor = "[COLOR_GREY]";

	push	OFFSET ??_C@_0N@MLIKMHMN@?$FLCOLOR_GREY?$FN?$AA@
	lea	ecx, DWORD PTR _strNeutralColor$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 166		; 000000a6H

; 10646: 	std::string strPartialNegativeColor = "[COLOR_FADING_NEGATIVE_TEXT]";

	push	OFFSET ??_C@_0BN@JKLEEGAK@?$FLCOLOR_FADING_NEGATIVE_TEXT?$FN?$AA@
	lea	ecx, DWORD PTR _strPartialNegativeColor$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 167		; 000000a7H

; 10647: 	std::string strFullNegativeColor = "[COLOR_NEGATIVE_TEXT]";

	push	OFFSET ??_C@_0BG@LALIDOFE@?$FLCOLOR_NEGATIVE_TEXT?$FN?$AA@
	lea	ecx, DWORD PTR _strFullNegativeColor$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 168		; 000000a8H

; 10648: 
; 10649: 	for (uint ui = 0; ui < aOpinions.size(); ui++)

	mov	DWORD PTR _ui$235614[ebp], 0
	jmp	SHORT $LN15@lGetOpinio
$LN14@lGetOpinio:
	mov	edx, DWORD PTR _ui$235614[ebp]
	add	edx, 1
	mov	DWORD PTR _ui$235614[ebp], edx
$LN15@lGetOpinio:
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	?size@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEIXZ ; std::vector<Opinion,std::allocator<Opinion> >::size
	cmp	DWORD PTR _ui$235614[ebp], eax
	jae	$LN13@lGetOpinio

; 10650: 	{
; 10651: 		strOutput = aOpinions[ui].m_str.toUTF8();

	mov	eax, DWORD PTR _ui$235614[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	??A?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAUOpinion@@I@Z ; std::vector<Opinion,std::allocator<Opinion> >::operator[]
	mov	ecx, eax
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strOutput$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 10652: 
; 10653: 		EndColorFound = strOutput.rfind(strEndColor);

	mov	ecx, DWORD PTR __imp_?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	eax, DWORD PTR _strEndColor$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strOutput$[ebp]
	call	DWORD PTR __imp_?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIABV12@I@Z
	mov	DWORD PTR _EndColorFound$[ebp], eax

; 10654: 		if (EndColorFound != string::npos)

	mov	ecx, DWORD PTR __imp_?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
	mov	edx, DWORD PTR _EndColorFound$[ebp]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $LN12@lGetOpinio

; 10655: 		{
; 10656: 			strOutput.replace(EndColorFound, strEndColor.length(), strEmpty);

	mov	eax, DWORD PTR _strEmpty$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strEndColor$[ebp]
	call	DWORD PTR __imp_?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	push	eax
	mov	ecx, DWORD PTR _EndColorFound$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strOutput$[ebp]
	call	DWORD PTR __imp_?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIPBD@Z
$LN12@lGetOpinio:

; 10657: 		}
; 10658: 
; 10659: 		BeginColorPrefixFound = strOutput.find(strColorPrefix);

	push	0
	lea	edx, DWORD PTR _strColorPrefix$[ebp]
	push	edx
	lea	ecx, DWORD PTR _strOutput$[ebp]
	call	DWORD PTR __imp_?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIABV12@I@Z
	mov	DWORD PTR _BeginColorPrefixFound$[ebp], eax

; 10660: 		if (BeginColorPrefixFound != string::npos)

	mov	eax, DWORD PTR __imp_?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
	mov	ecx, DWORD PTR _BeginColorPrefixFound$[ebp]
	cmp	ecx, DWORD PTR [eax]
	je	SHORT $LN11@lGetOpinio

; 10661: 		{
; 10662: 			BeginColorSuffixFound = strOutput.find(strColorSuffix);

	push	0
	lea	edx, DWORD PTR _strColorSuffix$[ebp]
	push	edx
	lea	ecx, DWORD PTR _strOutput$[ebp]
	call	DWORD PTR __imp_?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIABV12@I@Z
	mov	DWORD PTR _BeginColorSuffixFound$[ebp], eax

; 10663: 			if (BeginColorSuffixFound != string::npos)

	mov	eax, DWORD PTR __imp_?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
	mov	ecx, DWORD PTR _BeginColorSuffixFound$[ebp]
	cmp	ecx, DWORD PTR [eax]
	je	SHORT $LN11@lGetOpinio

; 10664: 			{
; 10665: 				strOutput.erase(BeginColorPrefixFound, (BeginColorSuffixFound - BeginColorPrefixFound) + 1);

	mov	edx, DWORD PTR _BeginColorSuffixFound$[ebp]
	sub	edx, DWORD PTR _BeginColorPrefixFound$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _BeginColorPrefixFound$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strOutput$[ebp]
	call	DWORD PTR __imp_?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
$LN11@lGetOpinio:

; 10666: 			}
; 10667: 		}
; 10668: 
; 10669: 		if (aOpinions[ui].m_iValue > 10)

	mov	ecx, DWORD PTR _ui$235614[ebp]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	??A?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAUOpinion@@I@Z ; std::vector<Opinion,std::allocator<Opinion> >::operator[]
	cmp	DWORD PTR [eax+80], 10			; 0000000aH
	jle	SHORT $LN9@lGetOpinio

; 10670: 		{
; 10671: 			strOutput.insert(0, strFullNegativeColor);

	lea	edx, DWORD PTR _strFullNegativeColor$[ebp]
	push	edx
	push	0
	lea	ecx, DWORD PTR _strOutput$[ebp]
	call	DWORD PTR __imp_?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@@Z
	jmp	$LN8@lGetOpinio
$LN9@lGetOpinio:

; 10672: 		}
; 10673: 		else if (aOpinions[ui].m_iValue > 0)

	mov	eax, DWORD PTR _ui$235614[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	??A?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAUOpinion@@I@Z ; std::vector<Opinion,std::allocator<Opinion> >::operator[]
	cmp	DWORD PTR [eax+80], 0
	jle	SHORT $LN7@lGetOpinio

; 10674: 		{
; 10675: 			strOutput.insert(0, strPartialNegativeColor);

	lea	ecx, DWORD PTR _strPartialNegativeColor$[ebp]
	push	ecx
	push	0
	lea	ecx, DWORD PTR _strOutput$[ebp]
	call	DWORD PTR __imp_?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@@Z
	jmp	$LN8@lGetOpinio
$LN7@lGetOpinio:

; 10676: 		}
; 10677: 		else if (aOpinions[ui].m_iValue == 0)

	mov	edx, DWORD PTR _ui$235614[ebp]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	??A?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAUOpinion@@I@Z ; std::vector<Opinion,std::allocator<Opinion> >::operator[]
	cmp	DWORD PTR [eax+80], 0
	jne	SHORT $LN5@lGetOpinio

; 10678: 		{
; 10679: 			strOutput.insert(0, strNeutralColor);

	lea	eax, DWORD PTR _strNeutralColor$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _strOutput$[ebp]
	call	DWORD PTR __imp_?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@@Z
	jmp	SHORT $LN8@lGetOpinio
$LN5@lGetOpinio:

; 10680: 		}
; 10681: 		else if (aOpinions[ui].m_iValue >= -10)

	mov	ecx, DWORD PTR _ui$235614[ebp]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	??A?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAUOpinion@@I@Z ; std::vector<Opinion,std::allocator<Opinion> >::operator[]
	cmp	DWORD PTR [eax+80], -10			; fffffff6H
	jl	SHORT $LN3@lGetOpinio

; 10682: 		{
; 10683: 			strOutput.insert(0, strPartialPositiveColor);

	lea	edx, DWORD PTR _strPartialPositiveColor$[ebp]
	push	edx
	push	0
	lea	ecx, DWORD PTR _strOutput$[ebp]
	call	DWORD PTR __imp_?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@@Z
	jmp	SHORT $LN8@lGetOpinio
$LN3@lGetOpinio:

; 10684: 		}
; 10685: 		else if (aOpinions[ui].m_iValue < -10)

	mov	eax, DWORD PTR _ui$235614[ebp]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	??A?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAUOpinion@@I@Z ; std::vector<Opinion,std::allocator<Opinion> >::operator[]
	cmp	DWORD PTR [eax+80], -10			; fffffff6H
	jge	SHORT $LN8@lGetOpinio

; 10686: 		{
; 10687: 			strOutput.insert(0, strFullPositiveColor);

	lea	ecx, DWORD PTR _strFullPositiveColor$[ebp]
	push	ecx
	push	0
	lea	ecx, DWORD PTR _strOutput$[ebp]
	call	DWORD PTR __imp_?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@@Z
$LN8@lGetOpinio:

; 10688: 		}
; 10689: 		strOutput += strEndColor;

	lea	edx, DWORD PTR _strEndColor$[ebp]
	push	edx
	lea	ecx, DWORD PTR _strOutput$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 10690: 
; 10691: 		lua_pushstring(L, strOutput.c_str());

	lea	ecx, DWORD PTR _strOutput$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 10692: 		lua_rawseti(L, -2, index);

	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH

; 10693: 		index++;

	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax

; 10694: 	}

	jmp	$LN14@lGetOpinio
$LN13@lGetOpinio:

; 10695: 
; 10696: 	return 1;

	mov	DWORD PTR $T251621[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 167		; 000000a7H
	lea	ecx, DWORD PTR _strFullNegativeColor$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 166		; 000000a6H
	lea	ecx, DWORD PTR _strPartialNegativeColor$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 165		; 000000a5H
	lea	ecx, DWORD PTR _strNeutralColor$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 164		; 000000a4H
	lea	ecx, DWORD PTR _strPartialPositiveColor$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 163		; 000000a3H
	lea	ecx, DWORD PTR _strFullPositiveColor$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 162		; 000000a2H
	lea	ecx, DWORD PTR _strColorSuffix$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 161		; 000000a1H
	lea	ecx, DWORD PTR _strColorPrefix$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 160		; 000000a0H
	lea	ecx, DWORD PTR _strEndColor$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strOutput$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	call	??1?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ ; std::vector<Opinion,std::allocator<Opinion> >::~vector<Opinion,std::allocator<Opinion> >
	mov	eax, DWORD PTR $T251621[ebp]

; 10697: }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	jmp	??1?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ ; std::vector<Opinion,std::allocator<Opinion> >::~vector<Opinion,std::allocator<Opinion> >
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _kOpinion$235089[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$2:
	lea	ecx, DWORD PTR $T251531[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$3:
	lea	ecx, DWORD PTR _kOpinion$235096[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$4:
	lea	ecx, DWORD PTR $T251532[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$5:
	lea	ecx, DWORD PTR _kOpinion$235100[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$6:
	lea	ecx, DWORD PTR $T251533[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$7:
	lea	ecx, DWORD PTR _kOpinion$235105[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$8:
	lea	ecx, DWORD PTR $T251534[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$9:
	lea	ecx, DWORD PTR _kOpinion$235110[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$10:
	lea	ecx, DWORD PTR $T251535[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$11:
	lea	ecx, DWORD PTR _kOpinion$235114[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$12:
	lea	ecx, DWORD PTR $T251536[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$13:
	lea	ecx, DWORD PTR _kOpinion$235118[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$14:
	lea	ecx, DWORD PTR $T251537[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$15:
	lea	ecx, DWORD PTR _kOpinion$235122[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$16:
	lea	ecx, DWORD PTR _str$235123[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$17:
	lea	ecx, DWORD PTR $T251538[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$18:
	lea	ecx, DWORD PTR $T251539[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$19:
	lea	ecx, DWORD PTR $T251540[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$20:
	lea	ecx, DWORD PTR $T251541[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$21:
	lea	ecx, DWORD PTR $T251542[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$22:
	lea	ecx, DWORD PTR $T251543[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$23:
	lea	ecx, DWORD PTR $T251544[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$24:
	lea	ecx, DWORD PTR _kOpinion$235150[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$25:
	lea	ecx, DWORD PTR $T251545[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$26:
	lea	ecx, DWORD PTR _kOpinion$235154[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$27:
	lea	ecx, DWORD PTR $T251546[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$28:
	lea	ecx, DWORD PTR _kOpinion$235158[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$29:
	lea	ecx, DWORD PTR $T251547[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$30:
	lea	ecx, DWORD PTR _kOpinion$235162[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$31:
	lea	ecx, DWORD PTR $T251548[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$32:
	lea	ecx, DWORD PTR _kOpinion$235166[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$33:
	lea	ecx, DWORD PTR $T251549[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$34:
	lea	ecx, DWORD PTR _kOpinion$235170[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$35:
	lea	ecx, DWORD PTR $T251550[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$36:
	lea	ecx, DWORD PTR _kOpinion$235174[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$37:
	lea	ecx, DWORD PTR $T251551[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$38:
	lea	ecx, DWORD PTR _kOpinion$235178[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$39:
	lea	ecx, DWORD PTR $T251552[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$40:
	lea	ecx, DWORD PTR _kOpinion$235182[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$41:
	lea	ecx, DWORD PTR $T251553[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$42:
	lea	ecx, DWORD PTR _kOpinion$235186[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$43:
	lea	ecx, DWORD PTR $T251554[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$44:
	lea	ecx, DWORD PTR _kOpinion$235190[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$45:
	lea	ecx, DWORD PTR $T251555[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$46:
	lea	ecx, DWORD PTR _kOpinion$235194[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$47:
	lea	ecx, DWORD PTR $T251556[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$48:
	lea	ecx, DWORD PTR _kOpinion$235198[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$49:
	lea	ecx, DWORD PTR $T251557[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$50:
	lea	ecx, DWORD PTR _kOpinion$235202[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$51:
	lea	ecx, DWORD PTR $T251558[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$52:
	lea	ecx, DWORD PTR _kOpinion$235206[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$53:
	lea	ecx, DWORD PTR $T251559[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$54:
	lea	ecx, DWORD PTR _kOpinion$235212[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$55:
	lea	ecx, DWORD PTR $T251561[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$56:
	lea	ecx, DWORD PTR _kOpinion$235220[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$57:
	lea	ecx, DWORD PTR $T251564[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$58:
	lea	ecx, DWORD PTR _kOpinion$235224[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$59:
	lea	ecx, DWORD PTR $T251565[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$60:
	lea	ecx, DWORD PTR _kOpinion$235228[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$61:
	lea	ecx, DWORD PTR $T251566[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$62:
	lea	ecx, DWORD PTR _kOpinion$235232[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$63:
	lea	ecx, DWORD PTR $T251567[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$64:
	lea	ecx, DWORD PTR _kOpinion$235236[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$65:
	lea	ecx, DWORD PTR $T251568[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$66:
	lea	ecx, DWORD PTR _kOpinion$235240[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$67:
	lea	ecx, DWORD PTR $T251569[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$68:
	lea	ecx, DWORD PTR _kOpinion$235244[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$69:
	lea	ecx, DWORD PTR $T251570[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$70:
	lea	ecx, DWORD PTR _kOpinion$235248[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$71:
	lea	ecx, DWORD PTR $T251571[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$72:
	lea	ecx, DWORD PTR _kOpinion$235252[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$73:
	lea	ecx, DWORD PTR $T251572[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$74:
	lea	ecx, DWORD PTR _kOpinion$235256[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$75:
	lea	ecx, DWORD PTR $T251573[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$76:
	lea	ecx, DWORD PTR _kOpinion$235260[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$77:
	lea	ecx, DWORD PTR $T251574[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$78:
	lea	ecx, DWORD PTR _kOpinion$235264[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$79:
	lea	ecx, DWORD PTR $T251575[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$80:
	lea	ecx, DWORD PTR _kOpinion$235268[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$81:
	lea	ecx, DWORD PTR $T251576[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$82:
	lea	ecx, DWORD PTR _kOpinion$235272[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$83:
	lea	ecx, DWORD PTR $T251577[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$84:
	lea	ecx, DWORD PTR _kOpinion$235276[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$85:
	lea	ecx, DWORD PTR $T251578[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$86:
	lea	ecx, DWORD PTR _kOpinion$235280[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$87:
	lea	ecx, DWORD PTR $T251579[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$88:
	lea	ecx, DWORD PTR _kOpinion$235284[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$89:
	lea	ecx, DWORD PTR $T251580[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$90:
	lea	ecx, DWORD PTR _kOpinion$235288[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$91:
	lea	ecx, DWORD PTR $T251581[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$92:
	lea	ecx, DWORD PTR _kOpinion$235292[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$93:
	lea	ecx, DWORD PTR $T251582[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$94:
	lea	ecx, DWORD PTR _kOpinion$235296[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$95:
	lea	ecx, DWORD PTR $T251583[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$96:
	lea	ecx, DWORD PTR _kOpinion$235300[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$97:
	lea	ecx, DWORD PTR $T251584[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$98:
	lea	ecx, DWORD PTR _kOpinion$235304[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$99:
	lea	ecx, DWORD PTR $T251585[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$100:
	lea	ecx, DWORD PTR _kOpinion$235308[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$101:
	lea	ecx, DWORD PTR $T251586[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$102:
	lea	ecx, DWORD PTR _kOpinion$235312[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$103:
	lea	ecx, DWORD PTR $T251587[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$104:
	lea	ecx, DWORD PTR _kOpinion$235316[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$105:
	lea	ecx, DWORD PTR $T251588[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$106:
	lea	ecx, DWORD PTR _kOpinion$235320[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$107:
	lea	ecx, DWORD PTR $T251589[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$108:
	lea	ecx, DWORD PTR _kOpinion$235324[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$109:
	lea	ecx, DWORD PTR $T251590[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$110:
	lea	ecx, DWORD PTR _kOpinion$235328[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$111:
	lea	ecx, DWORD PTR $T251591[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$112:
	lea	ecx, DWORD PTR _str$235331[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$113:
	lea	ecx, DWORD PTR $T251592[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$114:
	lea	ecx, DWORD PTR $T251593[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$115:
	lea	ecx, DWORD PTR $T251594[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$116:
	lea	ecx, DWORD PTR $T251595[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$117:
	lea	ecx, DWORD PTR $T251596[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$118:
	lea	ecx, DWORD PTR _kOpinion$235349[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$119:
	lea	ecx, DWORD PTR _kOpinion$235351[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$120:
	lea	ecx, DWORD PTR $T251597[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$121:
	lea	ecx, DWORD PTR _kOpinion$235355[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$122:
	lea	ecx, DWORD PTR $T251598[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$123:
	lea	ecx, DWORD PTR _kOpinion$235359[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$124:
	lea	ecx, DWORD PTR $T251599[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$125:
	lea	ecx, DWORD PTR _kOpinion$235363[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$126:
	lea	ecx, DWORD PTR $T251600[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$127:
	lea	ecx, DWORD PTR _kOpinion$235367[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$128:
	lea	ecx, DWORD PTR $T251601[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$129:
	lea	ecx, DWORD PTR _kOpinion$235371[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$130:
	lea	ecx, DWORD PTR $T251602[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$131:
	lea	ecx, DWORD PTR _kOpinion$235375[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$132:
	lea	ecx, DWORD PTR $T251603[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$133:
	lea	ecx, DWORD PTR _kOpinion$235379[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$134:
	lea	ecx, DWORD PTR $T251604[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$135:
	lea	ecx, DWORD PTR $T251605[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$136:
	lea	ecx, DWORD PTR _kOpinion$235388[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$137:
	lea	ecx, DWORD PTR $T251606[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$138:
	lea	ecx, DWORD PTR _kOpinion$235392[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$139:
	lea	ecx, DWORD PTR $T251607[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$140:
	lea	ecx, DWORD PTR _kOpinion$235396[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$141:
	lea	ecx, DWORD PTR $T251608[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$142:
	lea	ecx, DWORD PTR _kOpinion$235400[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$143:
	lea	ecx, DWORD PTR $T251609[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$144:
	lea	ecx, DWORD PTR _kOpinion$235404[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$145:
	lea	ecx, DWORD PTR $T251610[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$146:
	lea	ecx, DWORD PTR _kOpinion$235408[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$147:
	lea	ecx, DWORD PTR $T251611[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$148:
	lea	ecx, DWORD PTR _kOpinion$235412[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$149:
	lea	ecx, DWORD PTR $T251612[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$150:
	lea	ecx, DWORD PTR _kOpinion$235416[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$151:
	lea	ecx, DWORD PTR $T251613[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$152:
	lea	ecx, DWORD PTR _kOpinion$235420[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$153:
	lea	ecx, DWORD PTR $T251614[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$154:
	lea	ecx, DWORD PTR _kOpinion$235424[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$155:
	lea	ecx, DWORD PTR $T251615[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$156:
	lea	ecx, DWORD PTR _kOpinion$235428[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$157:
	lea	ecx, DWORD PTR $T251616[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$158:
	lea	ecx, DWORD PTR _kOpinion$235432[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$159:
	lea	ecx, DWORD PTR $T251617[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$160:
	lea	ecx, DWORD PTR _strOutput$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$161:
	lea	ecx, DWORD PTR _strEndColor$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$162:
	lea	ecx, DWORD PTR _strColorPrefix$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$163:
	lea	ecx, DWORD PTR _strColorSuffix$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$164:
	lea	ecx, DWORD PTR _strFullPositiveColor$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$165:
	lea	ecx, DWORD PTR _strPartialPositiveColor$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$166:
	lea	ecx, DWORD PTR _strNeutralColor$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$167:
	lea	ecx, DWORD PTR _strPartialNegativeColor$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$168:
	lea	ecx, DWORD PTR _strFullNegativeColor$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetOpinionTable
; Function compile flags: /Odtp
;	COMDAT ??0Opinion@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Opinion@@QAE@XZ PROC					; Opinion::Opinion, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Opinion@@QAE@XZ ENDP					; Opinion::Opinion
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1Opinion@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Opinion@@QAE@XZ PROC					; Opinion::~Opinion, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1Opinion@@QAE@XZ ENDP					; Opinion::~Opinion
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
EXTRN	?GetDealValue@CvDealAI@@QAEHPAVCvDeal@@AAH1_N@Z:PROC ; CvDealAI::GetDealValue
; Function compile flags: /Odtp
;	COMDAT ?lGetDealValue@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iValueImOffering$ = -16				; size = 4
_iValueTheirOffering$ = -12				; size = 4
_pkThisPlayer$ = -8					; size = 4
_pkDeal$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetDealValue@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetDealValue, COMDAT

; 10701: {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 10702: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkThisPlayer$[ebp], eax

; 10703: 	CvDeal* pkDeal = CvLuaDeal::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkDeal$[ebp], eax

; 10704: 	int iValueImOffering, iValueTheirOffering;
; 10705: 	lua_pushinteger(L, pkThisPlayer->GetDealAI()->GetDealValue(pkDeal, iValueImOffering, iValueTheirOffering, false));

	push	0
	lea	edx, DWORD PTR _iValueTheirOffering$[ebp]
	push	edx
	lea	eax, DWORD PTR _iValueImOffering$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkDeal$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	call	?GetDealAI@CvPlayer@@QBEPAVCvDealAI@@XZ	; CvPlayer::GetDealAI
	mov	ecx, eax
	call	?GetDealValue@CvDealAI@@QAEHPAVCvDeal@@AAH1_N@Z ; CvDealAI::GetDealValue
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 10706: 	return 1;

	mov	eax, 1

; 10707: }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetDealValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetDealValue
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetDealMyValue@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iValueImOffering$ = -16				; size = 4
_iValueTheyreOffering$ = -12				; size = 4
_pkThisPlayer$ = -8					; size = 4
_pkDeal$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetDealMyValue@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetDealMyValue, COMDAT

; 10711: {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 10712: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkThisPlayer$[ebp], eax

; 10713: 	CvDeal* pkDeal = CvLuaDeal::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkDeal$[ebp], eax

; 10714: 	int iValueImOffering, iValueTheyreOffering;
; 10715: 	pkThisPlayer->GetDealAI()->GetDealValue(pkDeal, iValueImOffering, iValueTheyreOffering, false);

	push	0
	lea	edx, DWORD PTR _iValueTheyreOffering$[ebp]
	push	edx
	lea	eax, DWORD PTR _iValueImOffering$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkDeal$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	call	?GetDealAI@CvPlayer@@QBEPAVCvDealAI@@XZ	; CvPlayer::GetDealAI
	mov	ecx, eax
	call	?GetDealValue@CvDealAI@@QAEHPAVCvDeal@@AAH1_N@Z ; CvDealAI::GetDealValue

; 10716: 	lua_pushinteger(L, iValueImOffering);

	mov	edx, DWORD PTR _iValueImOffering$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 10717: 	return 1;

	mov	eax, 1

; 10718: }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetDealMyValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetDealMyValue
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetDealTheyreValue@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iValueImOffering$ = -16				; size = 4
_iValueTheyreOffering$ = -12				; size = 4
_pkThisPlayer$ = -8					; size = 4
_pkDeal$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetDealTheyreValue@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetDealTheyreValue, COMDAT

; 10722: {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 10723: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkThisPlayer$[ebp], eax

; 10724: 	CvDeal* pkDeal = CvLuaDeal::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkDeal$[ebp], eax

; 10725: 	int iValueImOffering, iValueTheyreOffering;
; 10726: 	pkThisPlayer->GetDealAI()->GetDealValue(pkDeal, iValueImOffering, iValueTheyreOffering, false);

	push	0
	lea	edx, DWORD PTR _iValueTheyreOffering$[ebp]
	push	edx
	lea	eax, DWORD PTR _iValueImOffering$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkDeal$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	call	?GetDealAI@CvPlayer@@QBEPAVCvDealAI@@XZ	; CvPlayer::GetDealAI
	mov	ecx, eax
	call	?GetDealValue@CvDealAI@@QAEHPAVCvDeal@@AAH1_N@Z ; CvDealAI::GetDealValue

; 10727: 	lua_pushinteger(L, iValueTheyreOffering);

	mov	edx, DWORD PTR _iValueTheyreOffering$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 10728: 	return 1;

	mov	eax, 1

; 10729: }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetDealTheyreValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetDealTheyreValue
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lMayNotAnnex@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T255280 = -9						; size = 1
$T255279 = -8						; size = 4
_pkThisPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lMayNotAnnex@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lMayNotAnnex, COMDAT

; 10733: {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 10734: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkThisPlayer$[ebp], eax

; 10735: 	lua_pushboolean(L, pkThisPlayer->GetPlayerTraits()->IsNoAnnexing());

	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T255279[ebp], eax
	mov	ecx, DWORD PTR $T255279[ebp]
	mov	dl, BYTE PTR [ecx+351]
	mov	BYTE PTR $T255280[ebp], dl
	movzx	eax, BYTE PTR $T255280[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 10736: 	return 1;

	mov	eax, 1

; 10737: }

	mov	esp, ebp
	pop	ebp
	ret	0
?lMayNotAnnex@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lMayNotAnnex
_TEXT	ENDS
EXTRN	?IsAllowPuppetPurchasing@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::IsAllowPuppetPurchasing
; Function compile flags: /Odtp
;	COMDAT ?lIsAllowPuppetPurchasing@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkThisPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsAllowPuppetPurchasing@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsAllowPuppetPurchasing, COMDAT

; 10742: {

	push	ebp
	mov	ebp, esp
	push	ecx

; 10743: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkThisPlayer$[ebp], eax

; 10744: 	lua_pushboolean(L, pkThisPlayer->IsAllowPuppetPurchasing());

	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	call	?IsAllowPuppetPurchasing@CvPlayer@@QBE_NXZ ; CvPlayer::IsAllowPuppetPurchasing
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 10745: 	return 1;

	mov	eax, 1

; 10746: }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsAllowPuppetPurchasing@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsAllowPuppetPurchasing
_TEXT	ENDS
PUBLIC	??_C@_0BF@PCEIKPLK@LargestBasePotential?$AA@	; `string'
PUBLIC	??_C@_0O@BMCEPOME@BasePotential?$AA@		; `string'
PUBLIC	??_C@_09CPPALGIM@Potential?$AA@			; `string'
PUBLIC	??_C@_0L@KFAOFODH@Population?$AA@		; `string'
PUBLIC	??_C@_04FABLJDN@Name?$AA@			; `string'
PUBLIC	??_C@_04GBPANCCF@Team?$AA@			; `string'
PUBLIC	??_C@_0BB@GDPFJHJJ@CivilizationType?$AA@	; `string'
PUBLIC	??_C@_05IHNHLBKL@CityY?$AA@			; `string'
PUBLIC	??_C@_05JOMMIAOK@CityX?$AA@			; `string'
PUBLIC	??_C@_06MJLAIEKA@CityID?$AA@			; `string'
PUBLIC	??_C@_08JGLGKIOP@PlayerID?$AA@			; `string'
PUBLIC	__$ArrayPad$
EXTRN	?getPopulation@CvCity@@QBEHXZ:PROC		; CvCity::getPopulation
EXTRN	?CalcPerTurn@CvPlayerEspionage@@QAEHHPAVCvCity@@H@Z:PROC ; CvPlayerEspionage::CalcPerTurn
EXTRN	?GetCityEspionage@CvCity@@QBEPAVCvCityEspionage@@XZ:PROC ; CvCity::GetCityEspionage
EXTRN	?CanEverMoveSpyTo@CvPlayerEspionage@@QAE_NPAVCvCity@@@Z:PROC ; CvPlayerEspionage::CanEverMoveSpyTo
EXTRN	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ:PROC ; CvPlayer::GetEspionage
;	COMDAT ??_C@_0BF@PCEIKPLK@LargestBasePotential?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0BF@PCEIKPLK@LargestBasePotential?$AA@ DB 'LargestBasePotential', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BMCEPOME@BasePotential?$AA@
CONST	SEGMENT
??_C@_0O@BMCEPOME@BasePotential?$AA@ DB 'BasePotential', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09CPPALGIM@Potential?$AA@
CONST	SEGMENT
??_C@_09CPPALGIM@Potential?$AA@ DB 'Potential', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KFAOFODH@Population?$AA@
CONST	SEGMENT
??_C@_0L@KFAOFODH@Population?$AA@ DB 'Population', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04FABLJDN@Name?$AA@
CONST	SEGMENT
??_C@_04FABLJDN@Name?$AA@ DB 'Name', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04GBPANCCF@Team?$AA@
CONST	SEGMENT
??_C@_04GBPANCCF@Team?$AA@ DB 'Team', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GDPFJHJJ@CivilizationType?$AA@
CONST	SEGMENT
??_C@_0BB@GDPFJHJJ@CivilizationType?$AA@ DB 'CivilizationType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05IHNHLBKL@CityY?$AA@
CONST	SEGMENT
??_C@_05IHNHLBKL@CityY?$AA@ DB 'CityY', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05JOMMIAOK@CityX?$AA@
CONST	SEGMENT
??_C@_05JOMMIAOK@CityX?$AA@ DB 'CityX', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06MJLAIEKA@CityID?$AA@
CONST	SEGMENT
??_C@_06MJLAIEKA@CityID?$AA@ DB 'CityID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08JGLGKIOP@PlayerID?$AA@
CONST	SEGMENT
??_C@_08JGLGKIOP@PlayerID?$AA@ DB 'PlayerID', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv373 = -192						; size = 4
tv409 = -188						; size = 4
$T255450 = -184						; size = 4
$T255441 = -180						; size = 4
$T255432 = -176						; size = 4
$T255420 = -172						; size = 4
$T255411 = -168						; size = 4
$T255402 = -164						; size = 4
$T255393 = -160						; size = 4
$T255376 = -156						; size = 4
$T255367 = -152						; size = 4
$T255358 = -148						; size = 4
$T255349 = -144						; size = 4
$T255340 = -137						; size = 1
$T255325 = -136						; size = 4
$T255316 = -132						; size = 4
$T255307 = -128						; size = 4
$T255298 = -121						; size = 1
_iRate$235718 = -120					; size = 4
_t$235707 = -116					; size = 4
_strName$235714 = -112					; size = 28
__$ArrayPad$ = -84					; size = 4
_pCityEspionage$235706 = -80				; size = 4
_pCity$235701 = -76					; size = 4
_ePlayer$235696 = -72					; size = 4
_kPlayer$235697 = -68					; size = 4
_iLoop$235700 = -64					; size = 4
_i$235691 = -60						; size = 4
_pCityEspionage$235686 = -56				; size = 4
_iPotential$235687 = -52				; size = 4
_pCity$235681 = -48					; size = 4
_ePlayer$235676 = -44					; size = 4
_kPlayer$235677 = -40					; size = 4
_iLoop$235680 = -36					; size = 4
_i$235671 = -32						; size = 4
_iLargestBasePotential$ = -28				; size = 4
_index$ = -24						; size = 4
_pkThisPlayer$ = -20					; size = 4
_pkPlayerEspionage$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetEspionageCityStatus, COMDAT

; 10751: {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 180				; 000000b4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 10752: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkThisPlayer$[ebp], eax

; 10753: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	DWORD PTR _pkPlayerEspionage$[ebp], eax

; 10754: 
; 10755: 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 10756: 	int index = 1;

	mov	DWORD PTR _index$[ebp], 1

; 10757: 
; 10758: 	// first pass to get the largest base potential available
; 10759: 	int iLargestBasePotential = 0;

	mov	DWORD PTR _iLargestBasePotential$[ebp], 0

; 10760: 	for(int i = 0; i < MAX_PLAYERS; ++i)

	mov	DWORD PTR _i$235671[ebp], 0
	jmp	SHORT $LN25@lGetEspion
$LN24@lGetEspion:
	mov	edx, DWORD PTR _i$235671[ebp]
	add	edx, 1
	mov	DWORD PTR _i$235671[ebp], edx
$LN25@lGetEspion:
	cmp	DWORD PTR _i$235671[ebp], 64		; 00000040H
	jge	$LN23@lGetEspion

; 10761: 	{
; 10762: 		const PlayerTypes ePlayer(static_cast<PlayerTypes>(i));

	mov	eax, DWORD PTR _i$235671[ebp]
	mov	DWORD PTR _ePlayer$235676[ebp], eax

; 10763: 		CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$235676[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$235677[ebp], ecx

; 10764: 
; 10765: 		if(!kPlayer.isAlive() || kPlayer.isBarbarian())

	mov	edx, DWORD PTR _kPlayer$235677[ebp]
	mov	al, BYTE PTR [edx+2256]
	mov	BYTE PTR $T255298[ebp], al
	movzx	ecx, BYTE PTR $T255298[ebp]
	test	ecx, ecx
	je	SHORT $LN21@lGetEspion
	mov	ecx, DWORD PTR _kPlayer$235677[ebp]
	call	?isBarbarian@CvPlayer@@QBE_NXZ		; CvPlayer::isBarbarian
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN22@lGetEspion
$LN21@lGetEspion:

; 10766: 		{
; 10767: 			continue;

	jmp	SHORT $LN24@lGetEspion
$LN22@lGetEspion:

; 10768: 		}
; 10769: 
; 10770: 		int iLoop = 0;

	mov	DWORD PTR _iLoop$235680[ebp], 0

; 10771: 		for(CvCity* pCity = kPlayer.firstCity(&iLoop); pCity != NULL; pCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	eax, DWORD PTR _iLoop$235680[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$235677[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pCity$235681[ebp], eax
	jmp	SHORT $LN20@lGetEspion
$LN19@lGetEspion:
	push	0
	lea	ecx, DWORD PTR _iLoop$235680[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$235677[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pCity$235681[ebp], eax
$LN20@lGetEspion:
	cmp	DWORD PTR _pCity$235681[ebp], 0
	je	$LN18@lGetEspion

; 10772: 		{
; 10773: 			if(pkPlayerEspionage->CanEverMoveSpyTo(pCity))

	mov	edx, DWORD PTR _pCity$235681[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayerEspionage$[ebp]
	call	?CanEverMoveSpyTo@CvPlayerEspionage@@QAE_NPAVCvCity@@@Z ; CvPlayerEspionage::CanEverMoveSpyTo
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN17@lGetEspion

; 10774: 			{
; 10775: 				CvCityEspionage* pCityEspionage = pCity->GetCityEspionage();

	mov	ecx, DWORD PTR _pCity$235681[ebp]
	call	?GetCityEspionage@CvCity@@QBEPAVCvCityEspionage@@XZ ; CvCity::GetCityEspionage
	mov	DWORD PTR _pCityEspionage$235686[ebp], eax

; 10776: 				int iPotential = 0;

	mov	DWORD PTR _iPotential$235687[ebp], 0

; 10777: 				if (pCity->getOwner() == pkThisPlayer->GetID())

	mov	ecx, DWORD PTR _pCity$235681[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T255307[ebp], edx
	mov	eax, DWORD PTR _pkThisPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T255316[ebp], ecx
	mov	edx, DWORD PTR $T255307[ebp]
	cmp	edx, DWORD PTR $T255316[ebp]
	jne	SHORT $LN45@lGetEspion

; 10778: 				{
; 10779: 					iPotential = pkPlayerEspionage->CalcPerTurn(SPY_STATE_GATHERING_INTEL, pCity, -1);

	push	-1
	mov	eax, DWORD PTR _pCity$235681[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _pkPlayerEspionage$[ebp]
	call	?CalcPerTurn@CvPlayerEspionage@@QAEHHPAVCvCity@@H@Z ; CvPlayerEspionage::CalcPerTurn
	mov	DWORD PTR _iPotential$235687[ebp], eax

; 10780: 				}
; 10781: 				else

	jmp	SHORT $LN15@lGetEspion

; 10782: 				{
; 10783: 					iPotential = pCityEspionage->m_aiLastBasePotential[pkThisPlayer->GetID()];

$LN45@lGetEspion:
	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T255325[ebp], edx
	mov	eax, DWORD PTR $T255325[ebp]
	mov	ecx, DWORD PTR _pCityEspionage$235686[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+532]
	mov	DWORD PTR _iPotential$235687[ebp], edx
$LN15@lGetEspion:

; 10784: 				}
; 10785: 
; 10786: 				if (iPotential > iLargestBasePotential)

	mov	eax, DWORD PTR _iPotential$235687[ebp]
	cmp	eax, DWORD PTR _iLargestBasePotential$[ebp]
	jle	SHORT $LN17@lGetEspion

; 10787: 				{
; 10788: 					iLargestBasePotential = iPotential;

	mov	ecx, DWORD PTR _iPotential$235687[ebp]
	mov	DWORD PTR _iLargestBasePotential$[ebp], ecx
$LN17@lGetEspion:

; 10789: 				}
; 10790: 			}
; 10791: 		}

	jmp	$LN19@lGetEspion
$LN18@lGetEspion:

; 10792: 	}

	jmp	$LN24@lGetEspion
$LN23@lGetEspion:

; 10793: 
; 10794: 	// second pass to set the values
; 10795: 	for(int i = 0; i < MAX_PLAYERS; ++i)

	mov	DWORD PTR _i$235691[ebp], 0
	jmp	SHORT $LN13@lGetEspion
$LN12@lGetEspion:
	mov	edx, DWORD PTR _i$235691[ebp]
	add	edx, 1
	mov	DWORD PTR _i$235691[ebp], edx
$LN13@lGetEspion:
	cmp	DWORD PTR _i$235691[ebp], 64		; 00000040H
	jge	$LN11@lGetEspion

; 10796: 	{
; 10797: 		const PlayerTypes ePlayer(static_cast<PlayerTypes>(i));

	mov	eax, DWORD PTR _i$235691[ebp]
	mov	DWORD PTR _ePlayer$235696[ebp], eax

; 10798: 		CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$235696[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$235697[ebp], ecx

; 10799: 
; 10800: 		if(!kPlayer.isAlive() || kPlayer.isBarbarian())

	mov	edx, DWORD PTR _kPlayer$235697[ebp]
	mov	al, BYTE PTR [edx+2256]
	mov	BYTE PTR $T255340[ebp], al
	movzx	ecx, BYTE PTR $T255340[ebp]
	test	ecx, ecx
	je	SHORT $LN9@lGetEspion
	mov	ecx, DWORD PTR _kPlayer$235697[ebp]
	call	?isBarbarian@CvPlayer@@QBE_NXZ		; CvPlayer::isBarbarian
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN10@lGetEspion
$LN9@lGetEspion:

; 10801: 		{
; 10802: 			continue;

	jmp	SHORT $LN12@lGetEspion
$LN10@lGetEspion:

; 10803: 		}
; 10804: 
; 10805: 		int iLoop = 0;

	mov	DWORD PTR _iLoop$235700[ebp], 0

; 10806: 		for(CvCity* pCity = kPlayer.firstCity(&iLoop); pCity != NULL; pCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	eax, DWORD PTR _iLoop$235700[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$235697[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pCity$235701[ebp], eax
	jmp	SHORT $LN8@lGetEspion
$LN7@lGetEspion:
	push	0
	lea	ecx, DWORD PTR _iLoop$235700[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$235697[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pCity$235701[ebp], eax
$LN8@lGetEspion:
	cmp	DWORD PTR _pCity$235701[ebp], 0
	je	$LN6@lGetEspion

; 10807: 		{
; 10808: 			if(pkPlayerEspionage->CanEverMoveSpyTo(pCity))

	mov	edx, DWORD PTR _pCity$235701[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayerEspionage$[ebp]
	call	?CanEverMoveSpyTo@CvPlayerEspionage@@QAE_NPAVCvCity@@@Z ; CvPlayerEspionage::CanEverMoveSpyTo
	movzx	eax, al
	test	eax, eax
	je	$LN5@lGetEspion

; 10809: 			{
; 10810: 				CvCityEspionage* pCityEspionage = pCity->GetCityEspionage();

	mov	ecx, DWORD PTR _pCity$235701[ebp]
	call	?GetCityEspionage@CvCity@@QBEPAVCvCityEspionage@@XZ ; CvCity::GetCityEspionage
	mov	DWORD PTR _pCityEspionage$235706[ebp], eax

; 10811: 				lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 10812: 				const int t = lua_gettop(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$235707[ebp], eax

; 10813: 
; 10814: 				lua_pushinteger(L, kPlayer.GetID());

	mov	eax, DWORD PTR _kPlayer$235697[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T255349[ebp], ecx
	mov	edx, DWORD PTR $T255349[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 10815: 				lua_setfield(L, t, "PlayerID");

	push	OFFSET ??_C@_08JGLGKIOP@PlayerID?$AA@
	mov	ecx, DWORD PTR _t$235707[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 10816: 
; 10817: 				lua_pushinteger(L, pCity->GetID());

	mov	eax, DWORD PTR _pCity$235701[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	DWORD PTR $T255358[ebp], ecx
	mov	edx, DWORD PTR $T255358[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 10818: 				lua_setfield(L, t, "CityID");

	push	OFFSET ??_C@_06MJLAIEKA@CityID?$AA@
	mov	ecx, DWORD PTR _t$235707[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 10819: 
; 10820: 				lua_pushinteger(L, pCity->getX());

	mov	eax, DWORD PTR _pCity$235701[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T255367[ebp], ecx
	mov	edx, DWORD PTR $T255367[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 10821: 				lua_setfield(L, t, "CityX");

	push	OFFSET ??_C@_05JOMMIAOK@CityX?$AA@
	mov	ecx, DWORD PTR _t$235707[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 10822: 
; 10823: 				lua_pushinteger(L, pCity->getY());

	mov	eax, DWORD PTR _pCity$235701[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T255376[ebp], ecx
	mov	edx, DWORD PTR $T255376[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 10824: 				lua_setfield(L, t, "CityY");

	push	OFFSET ??_C@_05IHNHLBKL@CityY?$AA@
	mov	ecx, DWORD PTR _t$235707[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 10825: 
; 10826: 				lua_pushinteger(L, kPlayer.getCivilizationType());

	mov	ecx, DWORD PTR _kPlayer$235697[ebp]
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 10827: 				lua_setfield(L, t, "CivilizationType");

	push	OFFSET ??_C@_0BB@GDPFJHJJ@CivilizationType?$AA@
	mov	ecx, DWORD PTR _t$235707[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 10828: 
; 10829: 				lua_pushinteger(L, kPlayer.getTeam());

	mov	eax, DWORD PTR _kPlayer$235697[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 10830: 				lua_setfield(L, t, "Team");

	push	OFFSET ??_C@_04GBPANCCF@Team?$AA@
	mov	eax, DWORD PTR _t$235707[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 10831: 
; 10832: 				CvString strName = pCity->getNameKey();

	mov	ecx, DWORD PTR _pCity$235701[ebp]
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	mov	DWORD PTR $T255393[ebp], eax
	cmp	DWORD PTR $T255393[ebp], 0
	je	SHORT $LN77@lGetEspion
	mov	edx, DWORD PTR $T255393[ebp]
	mov	DWORD PTR tv409[ebp], edx
	jmp	SHORT $LN78@lGetEspion
$LN77@lGetEspion:
	mov	DWORD PTR tv409[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN78@lGetEspion:
	mov	eax, DWORD PTR tv409[ebp]
	push	eax
	lea	ecx, DWORD PTR _strName$235714[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 10833: 				lua_pushstring(L, strName.c_str());

	lea	ecx, DWORD PTR _strName$235714[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 10834: 				lua_setfield(L, t, "Name");

	push	OFFSET ??_C@_04FABLJDN@Name?$AA@
	mov	edx, DWORD PTR _t$235707[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 10835: 
; 10836: 				lua_pushinteger(L, pCity->getPopulation());

	mov	ecx, DWORD PTR _pCity$235701[ebp]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 10837: 				lua_setfield(L, t, "Population");

	push	OFFSET ??_C@_0L@KFAOFODH@Population?$AA@
	mov	edx, DWORD PTR _t$235707[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 10838: 
; 10839: 				if(pCity->getOwner() == pkThisPlayer->GetID())

	mov	ecx, DWORD PTR _pCity$235701[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T255402[ebp], edx
	mov	eax, DWORD PTR _pkThisPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T255411[ebp], ecx
	mov	edx, DWORD PTR $T255402[ebp]
	cmp	edx, DWORD PTR $T255411[ebp]
	jne	SHORT $LN90@lGetEspion

; 10840: 				{
; 10841: 					int iRate = pkPlayerEspionage->CalcPerTurn(SPY_STATE_GATHERING_INTEL, pCity, -1);

	push	-1
	mov	eax, DWORD PTR _pCity$235701[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _pkPlayerEspionage$[ebp]
	call	?CalcPerTurn@CvPlayerEspionage@@QAEHHPAVCvCity@@H@Z ; CvPlayerEspionage::CalcPerTurn
	mov	DWORD PTR _iRate$235718[ebp], eax

; 10842: 					lua_pushinteger(L, iRate);

	mov	ecx, DWORD PTR _iRate$235718[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 10843: 				}
; 10844: 				else

	jmp	SHORT $LN3@lGetEspion

; 10845: 				{
; 10846: 					lua_pushinteger(L, pCityEspionage->m_aiLastPotential[pkThisPlayer->GetID()]);

$LN90@lGetEspion:
	mov	eax, DWORD PTR _pkThisPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T255420[ebp], ecx
	mov	edx, DWORD PTR $T255420[ebp]
	mov	eax, DWORD PTR _pCityEspionage$235706[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+444]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8
$LN3@lGetEspion:

; 10847: 				}
; 10848: 				lua_setfield(L, t, "Potential");

	push	OFFSET ??_C@_09CPPALGIM@Potential?$AA@
	mov	eax, DWORD PTR _t$235707[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 10849: 
; 10850: 				if (pCity->getOwner() == pkThisPlayer->GetID())

	mov	edx, DWORD PTR _pCity$235701[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR $T255432[ebp], eax
	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T255441[ebp], edx
	mov	eax, DWORD PTR $T255432[ebp]
	cmp	eax, DWORD PTR $T255441[ebp]
	jne	SHORT $LN104@lGetEspion

; 10851: 				{
; 10852: 					lua_pushinteger(L, pkPlayerEspionage->CalcPerTurn(SPY_STATE_GATHERING_INTEL, pCity, -1));

	push	-1
	mov	ecx, DWORD PTR _pCity$235701[ebp]
	push	ecx
	push	3
	mov	ecx, DWORD PTR _pkPlayerEspionage$[ebp]
	call	?CalcPerTurn@CvPlayerEspionage@@QAEHHPAVCvCity@@H@Z ; CvPlayerEspionage::CalcPerTurn
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 10853: 				}
; 10854: 				else

	jmp	SHORT $LN1@lGetEspion

; 10855: 				{
; 10856: 					lua_pushinteger(L,  pCityEspionage->m_aiLastBasePotential[pkThisPlayer->GetID()]);

$LN104@lGetEspion:
	mov	eax, DWORD PTR _pkThisPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T255450[ebp], ecx
	mov	edx, DWORD PTR $T255450[ebp]
	mov	eax, DWORD PTR _pCityEspionage$235706[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+532]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetEspion:

; 10857: 				}
; 10858: 				lua_setfield(L, t, "BasePotential");

	push	OFFSET ??_C@_0O@BMCEPOME@BasePotential?$AA@
	mov	eax, DWORD PTR _t$235707[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 10859: 
; 10860: 				lua_pushinteger(L, iLargestBasePotential);

	mov	edx, DWORD PTR _iLargestBasePotential$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 10861: 				lua_setfield(L, t, "LargestBasePotential");

	push	OFFSET ??_C@_0BF@PCEIKPLK@LargestBasePotential?$AA@
	mov	ecx, DWORD PTR _t$235707[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 10862: 
; 10863: 				lua_rawseti(L, -2, index++);

	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv373[ebp], eax
	mov	ecx, DWORD PTR tv373[ebp]
	push	ecx
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax

; 10864: 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strName$235714[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN5@lGetEspion:

; 10865: 		}

	jmp	$LN7@lGetEspion
$LN6@lGetEspion:

; 10866: 	}

	jmp	$LN12@lGetEspion
$LN11@lGetEspion:

; 10867: 
; 10868: 	return 1;

	mov	eax, 1

; 10869: }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _strName$235714[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-184]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetEspionageCityStatus
EXTRN	?GetNumSpies@CvPlayerEspionage@@QAEHXZ:PROC	; CvPlayerEspionage::GetNumSpies
; Function compile flags: /Odtp
;	COMDAT ?lGetNumSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv77 = -16						; size = 4
_pkThisPlayer$ = -12					; size = 4
_pkPlayerEspionage$ = -8				; size = 4
_lNumSpies$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetNumSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNumSpies, COMDAT

; 10872: {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 10873: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkThisPlayer$[ebp], eax

; 10874: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	DWORD PTR _pkPlayerEspionage$[ebp], eax

; 10875: 
; 10876: 	const int lNumSpies = (pkPlayerEspionage != NULL)? pkPlayerEspionage->GetNumSpies() : 0;

	cmp	DWORD PTR _pkPlayerEspionage$[ebp], 0
	je	SHORT $LN3@lGetNumSpi
	mov	ecx, DWORD PTR _pkPlayerEspionage$[ebp]
	call	?GetNumSpies@CvPlayerEspionage@@QAEHXZ	; CvPlayerEspionage::GetNumSpies
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN4@lGetNumSpi
$LN3@lGetNumSpi:
	mov	DWORD PTR tv77[ebp], 0
$LN4@lGetNumSpi:
	mov	ecx, DWORD PTR tv77[ebp]
	mov	DWORD PTR _lNumSpies$[ebp], ecx

; 10877: 
; 10878: 	lua_pushinteger(L, lNumSpies);

	mov	edx, DWORD PTR _lNumSpies$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 10879: 	return 1;

	mov	eax, 1

; 10880: }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNumSpies
_TEXT	ENDS
EXTRN	?GetNumUnassignedSpies@CvPlayerEspionage@@QAEHXZ:PROC ; CvPlayerEspionage::GetNumUnassignedSpies
; Function compile flags: /Odtp
;	COMDAT ?lGetNumUnassignedSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv77 = -16						; size = 4
_pkThisPlayer$ = -12					; size = 4
_pkPlayerEspionage$ = -8				; size = 4
_lNumSpies$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetNumUnassignedSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumUnassignedSpies, COMDAT

; 10884: {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 10885: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkThisPlayer$[ebp], eax

; 10886: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	DWORD PTR _pkPlayerEspionage$[ebp], eax

; 10887: 
; 10888: 	const int lNumSpies = (pkPlayerEspionage != NULL)? pkPlayerEspionage->GetNumUnassignedSpies() : 0;

	cmp	DWORD PTR _pkPlayerEspionage$[ebp], 0
	je	SHORT $LN3@lGetNumUna
	mov	ecx, DWORD PTR _pkPlayerEspionage$[ebp]
	call	?GetNumUnassignedSpies@CvPlayerEspionage@@QAEHXZ ; CvPlayerEspionage::GetNumUnassignedSpies
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN4@lGetNumUna
$LN3@lGetNumUna:
	mov	DWORD PTR tv77[ebp], 0
$LN4@lGetNumUna:
	mov	ecx, DWORD PTR tv77[ebp]
	mov	DWORD PTR _lNumSpies$[ebp], ecx

; 10889: 
; 10890: 	lua_pushinteger(L, lNumSpies);

	mov	edx, DWORD PTR _lNumSpies$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 10891: 	return 1;

	mov	eax, 1

; 10892: }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumUnassignedSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumUnassignedSpies
_TEXT	ENDS
PUBLIC	??_C@_0L@CLOPHDNE@IsDiplomat?$AA@		; `string'
PUBLIC	??_C@_0BI@NDIOKMAA@EstablishedSurveillance?$AA@	; `string'
PUBLIC	??_C@_0BA@ELLCKKDI@PercentComplete?$AA@		; `string'
PUBLIC	??_C@_05JNKNAC@State?$AA@			; `string'
PUBLIC	??_C@_0BN@BBBNCNLN@TXT_KEY_SPY_STATE_SCHMOOZING?$AA@ ; `string'
PUBLIC	??_C@_0CH@CGCPFEGD@TXT_KEY_SPY_STATE_MAKING_INTRODU@ ; `string'
PUBLIC	??_C@_0BH@LNKACKDO@TXT_KEY_SPY_STATE_DEAD?$AA@	; `string'
PUBLIC	??_C@_0CA@JKJLJDDO@TXT_KEY_SPY_STATE_COUNTER_INTEL?$AA@ ; `string'
PUBLIC	??_C@_0CD@NPNJFIPO@TXT_KEY_SPY_STATE_RIGGING_ELECTI@ ; `string'
PUBLIC	??_C@_0CC@PLGFOAPJ@TXT_KEY_SPY_STATE_GATHERING_INTE@ ; `string'
PUBLIC	??_C@_0BP@GDIONIAN@TXT_KEY_SPY_STATE_SURVEILLANCE?$AA@ ; `string'
PUBLIC	??_C@_0BN@LAHMAGAM@TXT_KEY_SPY_STATE_TRAVELLING?$AA@ ; `string'
PUBLIC	??_C@_0BN@JNDMDLAD@TXT_KEY_SPY_STATE_UNASSIGNED?$AA@ ; `string'
PUBLIC	??_C@_04DMNEFAGJ@Rank?$AA@			; `string'
PUBLIC	??_C@_0BD@CEFEKIFC@TXT_KEY_SPY_RANK_2?$AA@	; `string'
PUBLIC	??_C@_0BD@PHJPLJB@TXT_KEY_SPY_RANK_1?$AA@	; `string'
PUBLIC	??_C@_0BD@BGGCMKNA@TXT_KEY_SPY_RANK_0?$AA@	; `string'
PUBLIC	??_C@_07EAMDMMMO@AgentID?$AA@			; `string'
EXTRN	?IsDiplomat@CvPlayerEspionage@@QAE_NI@Z:PROC	; CvPlayerEspionage::IsDiplomat
EXTRN	?HasEstablishedSurveillance@CvPlayerEspionage@@QAE_NI@Z:PROC ; CvPlayerEspionage::HasEstablishedSurveillance
EXTRN	?GetPercentOfStateComplete@CvPlayerEspionage@@QAEHI@Z:PROC ; CvPlayerEspionage::GetPercentOfStateComplete
EXTRN	?GetTurnsUntilStateComplete@CvPlayerEspionage@@QAEHI@Z:PROC ; CvPlayerEspionage::GetTurnsUntilStateComplete
EXTRN	?getSpyNames@CvCivilizationInfo@@QBEPBDH@Z:PROC	; CvCivilizationInfo::getSpyNames
;	COMDAT ??_C@_0L@CLOPHDNE@IsDiplomat?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0L@CLOPHDNE@IsDiplomat?$AA@ DB 'IsDiplomat', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NDIOKMAA@EstablishedSurveillance?$AA@
CONST	SEGMENT
??_C@_0BI@NDIOKMAA@EstablishedSurveillance?$AA@ DB 'EstablishedSurveillan'
	DB	'ce', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ELLCKKDI@PercentComplete?$AA@
CONST	SEGMENT
??_C@_0BA@ELLCKKDI@PercentComplete?$AA@ DB 'PercentComplete', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05JNKNAC@State?$AA@
CONST	SEGMENT
??_C@_05JNKNAC@State?$AA@ DB 'State', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@BBBNCNLN@TXT_KEY_SPY_STATE_SCHMOOZING?$AA@
CONST	SEGMENT
??_C@_0BN@BBBNCNLN@TXT_KEY_SPY_STATE_SCHMOOZING?$AA@ DB 'TXT_KEY_SPY_STAT'
	DB	'E_SCHMOOZING', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@CGCPFEGD@TXT_KEY_SPY_STATE_MAKING_INTRODU@
CONST	SEGMENT
??_C@_0CH@CGCPFEGD@TXT_KEY_SPY_STATE_MAKING_INTRODU@ DB 'TXT_KEY_SPY_STAT'
	DB	'E_MAKING_INTRODUCTIONS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LNKACKDO@TXT_KEY_SPY_STATE_DEAD?$AA@
CONST	SEGMENT
??_C@_0BH@LNKACKDO@TXT_KEY_SPY_STATE_DEAD?$AA@ DB 'TXT_KEY_SPY_STATE_DEAD'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JKJLJDDO@TXT_KEY_SPY_STATE_COUNTER_INTEL?$AA@
CONST	SEGMENT
??_C@_0CA@JKJLJDDO@TXT_KEY_SPY_STATE_COUNTER_INTEL?$AA@ DB 'TXT_KEY_SPY_S'
	DB	'TATE_COUNTER_INTEL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@NPNJFIPO@TXT_KEY_SPY_STATE_RIGGING_ELECTI@
CONST	SEGMENT
??_C@_0CD@NPNJFIPO@TXT_KEY_SPY_STATE_RIGGING_ELECTI@ DB 'TXT_KEY_SPY_STAT'
	DB	'E_RIGGING_ELECTION', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@PLGFOAPJ@TXT_KEY_SPY_STATE_GATHERING_INTE@
CONST	SEGMENT
??_C@_0CC@PLGFOAPJ@TXT_KEY_SPY_STATE_GATHERING_INTE@ DB 'TXT_KEY_SPY_STAT'
	DB	'E_GATHERING_INTEL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@GDIONIAN@TXT_KEY_SPY_STATE_SURVEILLANCE?$AA@
CONST	SEGMENT
??_C@_0BP@GDIONIAN@TXT_KEY_SPY_STATE_SURVEILLANCE?$AA@ DB 'TXT_KEY_SPY_ST'
	DB	'ATE_SURVEILLANCE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LAHMAGAM@TXT_KEY_SPY_STATE_TRAVELLING?$AA@
CONST	SEGMENT
??_C@_0BN@LAHMAGAM@TXT_KEY_SPY_STATE_TRAVELLING?$AA@ DB 'TXT_KEY_SPY_STAT'
	DB	'E_TRAVELLING', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@JNDMDLAD@TXT_KEY_SPY_STATE_UNASSIGNED?$AA@
CONST	SEGMENT
??_C@_0BN@JNDMDLAD@TXT_KEY_SPY_STATE_UNASSIGNED?$AA@ DB 'TXT_KEY_SPY_STAT'
	DB	'E_UNASSIGNED', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_04DMNEFAGJ@Rank?$AA@
CONST	SEGMENT
??_C@_04DMNEFAGJ@Rank?$AA@ DB 'Rank', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CEFEKIFC@TXT_KEY_SPY_RANK_2?$AA@
CONST	SEGMENT
??_C@_0BD@CEFEKIFC@TXT_KEY_SPY_RANK_2?$AA@ DB 'TXT_KEY_SPY_RANK_2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PHJPLJB@TXT_KEY_SPY_RANK_1?$AA@
CONST	SEGMENT
??_C@_0BD@PHJPLJB@TXT_KEY_SPY_RANK_1?$AA@ DB 'TXT_KEY_SPY_RANK_1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BGGCMKNA@TXT_KEY_SPY_RANK_0?$AA@
CONST	SEGMENT
??_C@_0BD@BGGCMKNA@TXT_KEY_SPY_RANK_0?$AA@ DB 'TXT_KEY_SPY_RANK_0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07EAMDMMMO@AgentID?$AA@
CONST	SEGMENT
??_C@_07EAMDMMMO@AgentID?$AA@ DB 'AgentID', 00H		; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
CONST	ENDS
;	COMDAT ?lGetEspionageSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv235 = -44						; size = 4
tv177 = -40						; size = 4
tv163 = -36						; size = 4
$T255477 = -32						; size = 4
_pSpy$235747 = -28					; size = 4
_t$235748 = -24						; size = 4
_szSpyName$235750 = -20					; size = 4
_uiSpy$235743 = -16					; size = 4
_index$ = -12						; size = 4
_pkThisPlayer$ = -8					; size = 4
_pkPlayerEspionage$ = -4				; size = 4
_L$ = 8							; size = 4
?lGetEspionageSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetEspionageSpies, COMDAT

; 10896: {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH

; 10897: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkThisPlayer$[ebp], eax

; 10898: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	DWORD PTR _pkPlayerEspionage$[ebp], eax

; 10899: 
; 10900: 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 10901: 	int index = 1;

	mov	DWORD PTR _index$[ebp], 1

; 10902: 
; 10903: 	for(uint uiSpy = 0; uiSpy < pkPlayerEspionage->m_aSpyList.size(); ++uiSpy)

	mov	DWORD PTR _uiSpy$235743[ebp], 0
	jmp	SHORT $LN21@lGetEspion@2
$LN20@lGetEspion@2:
	mov	edx, DWORD PTR _uiSpy$235743[ebp]
	add	edx, 1
	mov	DWORD PTR _uiSpy$235743[ebp], edx
$LN21@lGetEspion@2:
	mov	eax, DWORD PTR _pkPlayerEspionage$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T255477[ebp], ecx
	mov	edx, DWORD PTR _uiSpy$235743[ebp]
	cmp	edx, DWORD PTR $T255477[ebp]
	jae	$LN19@lGetEspion@2

; 10904: 	{
; 10905: 		CvEspionageSpy* pSpy = &(pkPlayerEspionage->m_aSpyList[uiSpy]);

	mov	eax, DWORD PTR _uiSpy$235743[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _pkPlayerEspionage$[ebp]
	add	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _pSpy$235747[ebp], eax

; 10906: 
; 10907: 		lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 10908: 		const int t = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$235748[ebp], eax

; 10909: 
; 10910: 		lua_pushinteger(L, uiSpy);

	mov	ecx, DWORD PTR _uiSpy$235743[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 10911: 		lua_setfield(L, t, "AgentID");

	push	OFFSET ??_C@_07EAMDMMMO@AgentID?$AA@
	mov	eax, DWORD PTR _t$235748[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 10912: 
; 10913: 		lua_pushinteger(L, pSpy->m_iCityX);

	mov	edx, DWORD PTR _pSpy$235747[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 10914: 		lua_setfield(L, t, "CityX");

	push	OFFSET ??_C@_05JOMMIAOK@CityX?$AA@
	mov	edx, DWORD PTR _t$235748[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 10915: 
; 10916: 		lua_pushinteger(L, pSpy->m_iCityY);

	mov	ecx, DWORD PTR _pSpy$235747[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 10917: 		lua_setfield(L, t, "CityY");

	push	OFFSET ??_C@_05IHNHLBKL@CityY?$AA@
	mov	ecx, DWORD PTR _t$235748[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 10918: 
; 10919: 		const char* szSpyName = pkThisPlayer->getCivilizationInfo().getSpyNames(pSpy->m_iName);

	mov	eax, DWORD PTR _pSpy$235747[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getSpyNames@CvCivilizationInfo@@QBEPBDH@Z ; CvCivilizationInfo::getSpyNames
	mov	DWORD PTR _szSpyName$235750[ebp], eax

; 10920: 		lua_pushstring(L, szSpyName);

	mov	edx, DWORD PTR _szSpyName$235750[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 10921: 		lua_setfield(L, t, "Name");

	push	OFFSET ??_C@_04FABLJDN@Name?$AA@
	mov	ecx, DWORD PTR _t$235748[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 10922: 
; 10923: 		switch(pSpy->m_eRank)

	mov	eax, DWORD PTR _pSpy$235747[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR tv163[ebp], ecx
	cmp	DWORD PTR tv163[ebp], 0
	je	SHORT $LN16@lGetEspion@2
	cmp	DWORD PTR tv163[ebp], 1
	je	SHORT $LN15@lGetEspion@2
	cmp	DWORD PTR tv163[ebp], 2
	je	SHORT $LN14@lGetEspion@2
	jmp	SHORT $LN17@lGetEspion@2
$LN16@lGetEspion@2:

; 10924: 		{
; 10925: 		case SPY_RANK_RECRUIT:
; 10926: 			lua_pushstring(L, "TXT_KEY_SPY_RANK_0");

	push	OFFSET ??_C@_0BD@BGGCMKNA@TXT_KEY_SPY_RANK_0?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 10927: 			break;

	jmp	SHORT $LN17@lGetEspion@2
$LN15@lGetEspion@2:

; 10928: 		case SPY_RANK_AGENT:
; 10929: 			lua_pushstring(L, "TXT_KEY_SPY_RANK_1");

	push	OFFSET ??_C@_0BD@PHJPLJB@TXT_KEY_SPY_RANK_1?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 10930: 			break;

	jmp	SHORT $LN17@lGetEspion@2
$LN14@lGetEspion@2:

; 10931: 		case SPY_RANK_SPECIAL_AGENT:
; 10932: 			lua_pushstring(L, "TXT_KEY_SPY_RANK_2");

	push	OFFSET ??_C@_0BD@CEFEKIFC@TXT_KEY_SPY_RANK_2?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8
$LN17@lGetEspion@2:

; 10933: 			break;
; 10934: 		default:
; 10935: 			CvAssertMsg(false, "pSpy->m_eRank not in case statement");
; 10936: 			break;
; 10937: 		}
; 10938: 		lua_setfield(L, t, "Rank");

	push	OFFSET ??_C@_04DMNEFAGJ@Rank?$AA@
	mov	edx, DWORD PTR _t$235748[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 10939: 
; 10940: 		switch(pSpy->m_eSpyState)

	mov	ecx, DWORD PTR _pSpy$235747[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR tv177[ebp], edx
	cmp	DWORD PTR tv177[ebp], 8
	ja	$LN11@lGetEspion@2
	mov	eax, DWORD PTR tv177[ebp]
	jmp	DWORD PTR $LN28@lGetEspion@2[eax*4]
$LN10@lGetEspion@2:

; 10941: 		{
; 10942: 		case SPY_STATE_UNASSIGNED:
; 10943: 			lua_pushstring(L, "TXT_KEY_SPY_STATE_UNASSIGNED");

	push	OFFSET ??_C@_0BN@JNDMDLAD@TXT_KEY_SPY_STATE_UNASSIGNED?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 10944: 			break;

	jmp	$LN11@lGetEspion@2
$LN9@lGetEspion@2:

; 10945: 		case SPY_STATE_TRAVELLING:
; 10946: 			lua_pushstring(L, "TXT_KEY_SPY_STATE_TRAVELLING");

	push	OFFSET ??_C@_0BN@LAHMAGAM@TXT_KEY_SPY_STATE_TRAVELLING?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 10947: 			break;

	jmp	$LN11@lGetEspion@2
$LN8@lGetEspion@2:

; 10948: 		case SPY_STATE_SURVEILLANCE:
; 10949: 			lua_pushstring(L, "TXT_KEY_SPY_STATE_SURVEILLANCE");

	push	OFFSET ??_C@_0BP@GDIONIAN@TXT_KEY_SPY_STATE_SURVEILLANCE?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 10950: 			break;

	jmp	SHORT $LN11@lGetEspion@2
$LN7@lGetEspion@2:

; 10951: 		case SPY_STATE_GATHERING_INTEL:
; 10952: 			lua_pushstring(L, "TXT_KEY_SPY_STATE_GATHERING_INTEL");

	push	OFFSET ??_C@_0CC@PLGFOAPJ@TXT_KEY_SPY_STATE_GATHERING_INTE@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 10953: 			break;

	jmp	SHORT $LN11@lGetEspion@2
$LN6@lGetEspion@2:

; 10954: 		case SPY_STATE_RIG_ELECTION:
; 10955: 			lua_pushstring(L, "TXT_KEY_SPY_STATE_RIGGING_ELECTION");

	push	OFFSET ??_C@_0CD@NPNJFIPO@TXT_KEY_SPY_STATE_RIGGING_ELECTI@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 10956: 			break;

	jmp	SHORT $LN11@lGetEspion@2
$LN5@lGetEspion@2:

; 10957: 		case SPY_STATE_COUNTER_INTEL:
; 10958: 			lua_pushstring(L, "TXT_KEY_SPY_STATE_COUNTER_INTEL");

	push	OFFSET ??_C@_0CA@JKJLJDDO@TXT_KEY_SPY_STATE_COUNTER_INTEL?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 10959: 			break;

	jmp	SHORT $LN11@lGetEspion@2
$LN4@lGetEspion@2:

; 10960: 		case SPY_STATE_DEAD:
; 10961: 			lua_pushstring(L, "TXT_KEY_SPY_STATE_DEAD");

	push	OFFSET ??_C@_0BH@LNKACKDO@TXT_KEY_SPY_STATE_DEAD?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 10962: 			break;

	jmp	SHORT $LN11@lGetEspion@2
$LN3@lGetEspion@2:

; 10963: 		case SPY_STATE_MAKING_INTRODUCTIONS:
; 10964: 			lua_pushstring(L, "TXT_KEY_SPY_STATE_MAKING_INTRODUCTIONS");

	push	OFFSET ??_C@_0CH@CGCPFEGD@TXT_KEY_SPY_STATE_MAKING_INTRODU@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 10965: 			break;

	jmp	SHORT $LN11@lGetEspion@2
$LN2@lGetEspion@2:

; 10966: 		case SPY_STATE_SCHMOOZE:
; 10967: 			lua_pushstring(L, "TXT_KEY_SPY_STATE_SCHMOOZING");

	push	OFFSET ??_C@_0BN@BBBNCNLN@TXT_KEY_SPY_STATE_SCHMOOZING?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8
$LN11@lGetEspion@2:

; 10968: 			break;
; 10969: 		default:
; 10970: 			CvAssertMsg(false, "pSpy->m_eSpyState not in case statement");
; 10971: 			break;
; 10972: 		}
; 10973: 		lua_setfield(L, t, "State");

	push	OFFSET ??_C@_05JNKNAC@State?$AA@
	mov	ecx, DWORD PTR _t$235748[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 10974: 
; 10975: 		lua_pushinteger(L, pkPlayerEspionage->GetTurnsUntilStateComplete(uiSpy));

	mov	eax, DWORD PTR _uiSpy$235743[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayerEspionage$[ebp]
	call	?GetTurnsUntilStateComplete@CvPlayerEspionage@@QAEHI@Z ; CvPlayerEspionage::GetTurnsUntilStateComplete
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 10976: 		lua_setfield(L, t, "TurnsLeft");

	push	OFFSET ??_C@_09DIAGFAAC@TurnsLeft?$AA@
	mov	edx, DWORD PTR _t$235748[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 10977: 
; 10978: 		lua_pushinteger(L, pkPlayerEspionage->GetPercentOfStateComplete(uiSpy));

	mov	ecx, DWORD PTR _uiSpy$235743[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayerEspionage$[ebp]
	call	?GetPercentOfStateComplete@CvPlayerEspionage@@QAEHI@Z ; CvPlayerEspionage::GetPercentOfStateComplete
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 10979: 		lua_setfield(L, t, "PercentComplete");

	push	OFFSET ??_C@_0BA@ELLCKKDI@PercentComplete?$AA@
	mov	eax, DWORD PTR _t$235748[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 10980: 
; 10981: 		lua_pushboolean(L, pkPlayerEspionage->HasEstablishedSurveillance(uiSpy));

	mov	edx, DWORD PTR _uiSpy$235743[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayerEspionage$[ebp]
	call	?HasEstablishedSurveillance@CvPlayerEspionage@@QAE_NI@Z ; CvPlayerEspionage::HasEstablishedSurveillance
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 10982: 		lua_setfield(L, t, "EstablishedSurveillance");

	push	OFFSET ??_C@_0BI@NDIOKMAA@EstablishedSurveillance?$AA@
	mov	edx, DWORD PTR _t$235748[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 10983: 
; 10984: 		lua_pushboolean(L, pkPlayerEspionage->IsDiplomat(uiSpy));

	mov	ecx, DWORD PTR _uiSpy$235743[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayerEspionage$[ebp]
	call	?IsDiplomat@CvPlayerEspionage@@QAE_NI@Z	; CvPlayerEspionage::IsDiplomat
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 10985: 		lua_setfield(L, t, "IsDiplomat");

	push	OFFSET ??_C@_0L@CLOPHDNE@IsDiplomat?$AA@
	mov	ecx, DWORD PTR _t$235748[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 10986: 
; 10987: 		lua_rawseti(L, -2, index++);

	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv235[ebp], eax
	mov	ecx, DWORD PTR tv235[ebp]
	push	ecx
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax

; 10988: 	}

	jmp	$LN20@lGetEspion@2
$LN19@lGetEspion@2:

; 10989: 	return 1;

	mov	eax, 1

; 10990: }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN28@lGetEspion@2:
	DD	$LN10@lGetEspion@2
	DD	$LN9@lGetEspion@2
	DD	$LN8@lGetEspion@2
	DD	$LN7@lGetEspion@2
	DD	$LN6@lGetEspion@2
	DD	$LN5@lGetEspion@2
	DD	$LN3@lGetEspion@2
	DD	$LN2@lGetEspion@2
	DD	$LN4@lGetEspion@2
?lGetEspionageSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetEspionageSpies
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lHasSpyEstablishedSurveillance@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bSurveillance$ = -5					; size = 1
_iSpyIndex$ = -4					; size = 4
_L$ = 8							; size = 4
?lHasSpyEstablishedSurveillance@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lHasSpyEstablishedSurveillance, COMDAT

; 10993: {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 10994: 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 10995: 	int iSpyIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iSpyIndex$[ebp], eax

; 10996: 	bool bSurveillance = pkPlayer->GetEspionage()->HasEstablishedSurveillance(iSpyIndex);

	mov	edx, DWORD PTR _iSpyIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	ecx, eax
	call	?HasEstablishedSurveillance@CvPlayerEspionage@@QAE_NI@Z ; CvPlayerEspionage::HasEstablishedSurveillance
	mov	BYTE PTR _bSurveillance$[ebp], al

; 10997: 
; 10998: 	lua_pushboolean(L, bSurveillance);

	movzx	eax, BYTE PTR _bSurveillance$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 10999: 	return 1;

	mov	eax, 1

; 11000: }

	mov	esp, ebp
	pop	ebp
	ret	0
?lHasSpyEstablishedSurveillance@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lHasSpyEstablishedSurveillance
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lIsSpyDiplomat@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bIsDiplomat$ = -5					; size = 1
_iSpyIndex$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsSpyDiplomat@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsSpyDiplomat, COMDAT

; 11003: {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 11004: 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 11005: 	int iSpyIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iSpyIndex$[ebp], eax

; 11006: 	bool bIsDiplomat = pkPlayer->GetEspionage()->IsDiplomat(iSpyIndex);

	mov	edx, DWORD PTR _iSpyIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	ecx, eax
	call	?IsDiplomat@CvPlayerEspionage@@QAE_NI@Z	; CvPlayerEspionage::IsDiplomat
	mov	BYTE PTR _bIsDiplomat$[ebp], al

; 11007: 
; 11008: 	lua_pushboolean(L, bIsDiplomat);

	movzx	eax, BYTE PTR _bIsDiplomat$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 11009: 	return 1;

	mov	eax, 1

; 11010: }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsSpyDiplomat@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsSpyDiplomat
_TEXT	ENDS
EXTRN	?IsSchmoozing@CvPlayerEspionage@@QAE_NI@Z:PROC	; CvPlayerEspionage::IsSchmoozing
; Function compile flags: /Odtp
;	COMDAT ?lIsSpySchmoozing@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bIsDiplomat$ = -5					; size = 1
_iSpyIndex$ = -4					; size = 4
_L$ = 8							; size = 4
?lIsSpySchmoozing@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsSpySchmoozing, COMDAT

; 11014: {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 11015: 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 11016: 	int iSpyIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iSpyIndex$[ebp], eax

; 11017: 	bool bIsDiplomat = pkPlayer->GetEspionage()->IsSchmoozing(iSpyIndex);

	mov	edx, DWORD PTR _iSpyIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	ecx, eax
	call	?IsSchmoozing@CvPlayerEspionage@@QAE_NI@Z ; CvPlayerEspionage::IsSchmoozing
	mov	BYTE PTR _bIsDiplomat$[ebp], al

; 11018: 
; 11019: 	lua_pushboolean(L, bIsDiplomat);

	movzx	eax, BYTE PTR _bIsDiplomat$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 11020: 	return 1;	

	mov	eax, 1

; 11021: }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsSpySchmoozing@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsSpySchmoozing
_TEXT	ENDS
EXTRN	?CanStageCoup@CvPlayerEspionage@@QAE_NI@Z:PROC	; CvPlayerEspionage::CanStageCoup
; Function compile flags: /Odtp
;	COMDAT ?lCanSpyStageCoup@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayer$ = -12					; size = 4
_bCanStageCoup$ = -5					; size = 1
_iSpyIndex$ = -4					; size = 4
_L$ = 8							; size = 4
?lCanSpyStageCoup@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanSpyStageCoup, COMDAT

; 11025: {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 11026: 	CvPlayer* pkPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 11027: 	int iSpyIndex = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iSpyIndex$[ebp], eax

; 11028: 	bool bCanStageCoup = pkPlayer->GetEspionage()->CanStageCoup(iSpyIndex);

	mov	edx, DWORD PTR _iSpyIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	ecx, eax
	call	?CanStageCoup@CvPlayerEspionage@@QAE_NI@Z ; CvPlayerEspionage::CanStageCoup
	mov	BYTE PTR _bCanStageCoup$[ebp], al

; 11029: 
; 11030: 	lua_pushboolean(L, bCanStageCoup);

	movzx	eax, BYTE PTR _bCanStageCoup$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 11031: 	return 1;

	mov	eax, 1

; 11032: }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanSpyStageCoup@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanSpyStageCoup
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?CanMoveSpyTo@CvPlayerEspionage@@QAE_NPAVCvCity@@I_N@Z:PROC ; CvPlayerEspionage::CanMoveSpyTo
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv221 = -100						; size = 4
$T255523 = -96						; size = 4
$T255514 = -92						; size = 4
$T255505 = -85						; size = 1
_t$235835 = -84						; size = 4
_strName$235836 = -80					; size = 28
__$ArrayPad$ = -52					; size = 4
_pCity$235830 = -48					; size = 4
_iLoop$235829 = -44					; size = 4
_ePlayer$235826 = -40					; size = 4
_kPlayer$235827 = -36					; size = 4
_i$235821 = -32						; size = 4
_uiSpyIndex$ = -28					; size = 4
_index$ = -24						; size = 4
_pkThisPlayer$ = -20					; size = 4
_pkPlayerEspionage$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAvailableSpyRelocationCities, COMDAT

; 11035: {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 11036: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkThisPlayer$[ebp], eax

; 11037: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	DWORD PTR _pkPlayerEspionage$[ebp], eax

; 11038: 
; 11039: 	uint uiSpyIndex = luaL_checkinteger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _uiSpyIndex$[ebp], eax

; 11040: 
; 11041: 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 11042: 	int index = 1;

	mov	DWORD PTR _index$[ebp], 1

; 11043: 
; 11044: 	for(int i = 0; i < MAX_CIV_PLAYERS; ++i)

	mov	DWORD PTR _i$235821[ebp], 0
	jmp	SHORT $LN8@lGetAvaila@2
$LN7@lGetAvaila@2:
	mov	eax, DWORD PTR _i$235821[ebp]
	add	eax, 1
	mov	DWORD PTR _i$235821[ebp], eax
$LN8@lGetAvaila@2:
	cmp	DWORD PTR _i$235821[ebp], 63		; 0000003fH
	jge	$LN6@lGetAvaila@2

; 11045: 	{
; 11046: 		const PlayerTypes ePlayer(static_cast<PlayerTypes>(i));

	mov	ecx, DWORD PTR _i$235821[ebp]
	mov	DWORD PTR _ePlayer$235826[ebp], ecx

; 11047: 		CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	edx, DWORD PTR _ePlayer$235826[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$235827[ebp], edx

; 11048: 
; 11049: 		if(kPlayer.isAlive())

	mov	eax, DWORD PTR _kPlayer$235827[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T255505[ebp], cl
	movzx	edx, BYTE PTR $T255505[ebp]
	test	edx, edx
	je	$LN5@lGetAvaila@2

; 11050: 		{
; 11051: 			int iLoop = 0;

	mov	DWORD PTR _iLoop$235829[ebp], 0

; 11052: 			// Just find first coastal city
; 11053: 			for(CvCity* pCity = kPlayer.firstCity(&iLoop); pCity != NULL; pCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	eax, DWORD PTR _iLoop$235829[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$235827[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pCity$235830[ebp], eax
	jmp	SHORT $LN4@lGetAvaila@2
$LN3@lGetAvaila@2:
	push	0
	lea	ecx, DWORD PTR _iLoop$235829[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$235827[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pCity$235830[ebp], eax
$LN4@lGetAvaila@2:
	cmp	DWORD PTR _pCity$235830[ebp], 0
	je	$LN5@lGetAvaila@2

; 11054: 			{
; 11055: 				if(pkPlayerEspionage->CanMoveSpyTo(pCity, uiSpyIndex, false))

	push	0
	mov	edx, DWORD PTR _uiSpyIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _pCity$235830[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayerEspionage$[ebp]
	call	?CanMoveSpyTo@CvPlayerEspionage@@QAE_NPAVCvCity@@I_N@Z ; CvPlayerEspionage::CanMoveSpyTo
	movzx	ecx, al
	test	ecx, ecx
	je	$LN1@lGetAvaila@2

; 11056: 				{
; 11057: 					lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 11058: 					const int t = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$235835[ebp], eax

; 11059: 
; 11060: 					lua_pushinteger(L, kPlayer.GetID());

	mov	ecx, DWORD PTR _kPlayer$235827[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T255514[ebp], edx
	mov	eax, DWORD PTR $T255514[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 11061: 					lua_setfield(L, t, "PlayerID");

	push	OFFSET ??_C@_08JGLGKIOP@PlayerID?$AA@
	mov	edx, DWORD PTR _t$235835[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 11062: 
; 11063: 					lua_pushinteger(L, pCity->GetID());

	mov	ecx, DWORD PTR _pCity$235830[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	DWORD PTR $T255523[ebp], edx
	mov	eax, DWORD PTR $T255523[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 11064: 					lua_setfield(L, t, "CityID");

	push	OFFSET ??_C@_06MJLAIEKA@CityID?$AA@
	mov	edx, DWORD PTR _t$235835[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 11065: 
; 11066: 					lua_pushinteger(L, kPlayer.getCivilizationType());

	mov	ecx, DWORD PTR _kPlayer$235827[ebp]
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 11067: 					lua_setfield(L, t, "CivilizationType");

	push	OFFSET ??_C@_0BB@GDPFJHJJ@CivilizationType?$AA@
	mov	edx, DWORD PTR _t$235835[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 11068: 
; 11069: 					lua_pushinteger(L, kPlayer.getTeam());

	mov	ecx, DWORD PTR _kPlayer$235827[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 11070: 					lua_setfield(L, t, "Team");

	push	OFFSET ??_C@_04GBPANCCF@Team?$AA@
	mov	ecx, DWORD PTR _t$235835[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 11071: 
; 11072: 					CvString strName = pCity->getName();

	lea	eax, DWORD PTR _strName$235836[ebp]
	push	eax
	mov	ecx, DWORD PTR _pCity$235830[ebp]
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 11073: 					lua_pushstring(L, strName.c_str());

	lea	ecx, DWORD PTR _strName$235836[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 11074: 					lua_setfield(L, t, "Name");

	push	OFFSET ??_C@_04FABLJDN@Name?$AA@
	mov	edx, DWORD PTR _t$235835[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 11075: 
; 11076: 					lua_pushinteger(L, pCity->getPopulation());

	mov	ecx, DWORD PTR _pCity$235830[ebp]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 11077: 					lua_setfield(L, t, "Population");

	push	OFFSET ??_C@_0L@KFAOFODH@Population?$AA@
	mov	edx, DWORD PTR _t$235835[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 11078: 
; 11079: 					//TODO: Replace temp 99 w/ City Potential Espionage Value.
; 11080: 					lua_pushinteger(L, 99);

	push	99					; 00000063H
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 11081: 					lua_setfield(L, t, "Potential");

	push	OFFSET ??_C@_09CPPALGIM@Potential?$AA@
	mov	edx, DWORD PTR _t$235835[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 11082: 
; 11083: 					lua_rawseti(L, -2, index++);

	mov	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv221[ebp], ecx
	mov	edx, DWORD PTR tv221[ebp]
	push	edx
	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _index$[ebp]
	add	ecx, 1
	mov	DWORD PTR _index$[ebp], ecx

; 11084: 				}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strName$235836[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN1@lGetAvaila@2:

; 11085: 			}

	jmp	$LN3@lGetAvaila@2
$LN5@lGetAvaila@2:

; 11086: 		}
; 11087: 	}

	jmp	$LN7@lGetAvaila@2
$LN6@lGetAvaila@2:

; 11088: 
; 11089: 	return 1;

	mov	eax, 1

; 11090: }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _strName$235836[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAvailableSpyRelocationCities
EXTRN	?GetNumTechsToSteal@CvPlayerEspionage@@QAEHW4PlayerTypes@@@Z:PROC ; CvPlayerEspionage::GetNumTechsToSteal
; Function compile flags: /Odtp
;	COMDAT ?lGetNumTechsToSteal@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -16						; size = 4
_iPlayer$ = -12						; size = 4
_pkThisPlayer$ = -8					; size = 4
_pkPlayerEspionage$ = -4				; size = 4
_L$ = 8							; size = 4
?lGetNumTechsToSteal@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumTechsToSteal, COMDAT

; 11093: {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 11094: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkThisPlayer$[ebp], eax

; 11095: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	DWORD PTR _pkPlayerEspionage$[ebp], eax

; 11096: 
; 11097: 	int iPlayer = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iPlayer$[ebp], eax

; 11098: 	CvAssertMsg(iPlayer >= 0 && iPlayer < MAX_MAJOR_CIVS, "iPlayer out of bounds");
; 11099: 	PlayerTypes ePlayer = (PlayerTypes)iPlayer;

	mov	edx, DWORD PTR _iPlayer$[ebp]
	mov	DWORD PTR _ePlayer$[ebp], edx

; 11100: 	lua_pushinteger(L, pkPlayerEspionage->GetNumTechsToSteal(ePlayer));

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayerEspionage$[ebp]
	call	?GetNumTechsToSteal@CvPlayerEspionage@@QAEHW4PlayerTypes@@@Z ; CvPlayerEspionage::GetNumTechsToSteal
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 11101: 	return 1;

	mov	eax, 1

; 11102: }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumTechsToSteal@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumTechsToSteal
_TEXT	ENDS
PUBLIC	??_C@_07LNONOJEO@SpyName?$AA@			; `string'
PUBLIC	??_C@_0BC@JGHGFNDG@DiscoveringPlayer?$AA@	; `string'
PUBLIC	??_C@_04EKEMLFA@Turn?$AA@			; `string'
EXTRN	?GetIntrigueMessage@CvPlayerEspionage@@QAE?AVString@Localization@@I@Z:PROC ; CvPlayerEspionage::GetIntrigueMessage
;	COMDAT ??_C@_07LNONOJEO@SpyName?$AA@
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
CONST	SEGMENT
??_C@_07LNONOJEO@SpyName?$AA@ DB 'SpyName', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JGHGFNDG@DiscoveringPlayer?$AA@
CONST	SEGMENT
??_C@_0BC@JGHGFNDG@DiscoveringPlayer?$AA@ DB 'DiscoveringPlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04EKEMLFA@Turn?$AA@
CONST	SEGMENT
??_C@_04EKEMLFA@Turn?$AA@ DB 'Turn', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv171 = -136						; size = 4
$T255560 = -132						; size = 4
$T255550 = -128						; size = 4
_t$235856 = -124					; size = 4
_szIntrigueMessage$235859 = -120			; size = 4
_strIntrigueMessage$235857 = -116			; size = 80
_szIntrigueSpy$235862 = -32				; size = 4
_i$235852 = -28						; size = 4
_index$ = -24						; size = 4
_pkThisPlayer$ = -20					; size = 4
_pkPlayerEspionage$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetIntrigueMessages, COMDAT

; 11105: {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 124				; 0000007cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 11106: 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 11107: 	int index = 1;

	mov	DWORD PTR _index$[ebp], 1

; 11108: 
; 11109: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	push	1
	push	1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkThisPlayer$[ebp], eax

; 11110: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	DWORD PTR _pkPlayerEspionage$[ebp], eax

; 11111: 
; 11112: 	for(int i = pkPlayerEspionage->m_aIntrigueNotificationMessages.size(); i > 0; i--)

	mov	edx, DWORD PTR _pkPlayerEspionage$[ebp]
	add	edx, 1280				; 00000500H
	mov	DWORD PTR $T255550[ebp], edx
	mov	eax, DWORD PTR $T255550[ebp]
	mov	ecx, DWORD PTR $T255550[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 68					; 00000044H
	idiv	ecx
	mov	DWORD PTR _i$235852[ebp], eax
	jmp	SHORT $LN3@lGetIntrig
$LN2@lGetIntrig:
	mov	edx, DWORD PTR _i$235852[ebp]
	sub	edx, 1
	mov	DWORD PTR _i$235852[ebp], edx
$LN3@lGetIntrig:
	cmp	DWORD PTR _i$235852[ebp], 0
	jle	$LN1@lGetIntrig

; 11113: 	{
; 11114: 		lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 11115: 		const int t = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$235856[ebp], eax

; 11116: 
; 11117: 		Localization::String strIntrigueMessage = pkPlayerEspionage->GetIntrigueMessage(i - 1);

	mov	edx, DWORD PTR _i$235852[ebp]
	sub	edx, 1
	push	edx
	lea	eax, DWORD PTR _strIntrigueMessage$235857[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayerEspionage$[ebp]
	call	?GetIntrigueMessage@CvPlayerEspionage@@QAE?AVString@Localization@@I@Z ; CvPlayerEspionage::GetIntrigueMessage
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 11118: 		const char* szIntrigueMessage = strIntrigueMessage.toUTF8();

	lea	ecx, DWORD PTR _strIntrigueMessage$235857[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR _szIntrigueMessage$235859[ebp], eax

; 11119: 		lua_pushstring(L, szIntrigueMessage);

	mov	ecx, DWORD PTR _szIntrigueMessage$235859[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 11120: 		lua_setfield(L, t, "String");

	push	OFFSET ??_C@_06ENNEIMBA@String?$AA@
	mov	eax, DWORD PTR _t$235856[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 11121: 		lua_pushinteger(L, pkPlayerEspionage->m_aIntrigueNotificationMessages[i - 1].m_iTurnNum);

	mov	edx, DWORD PTR _i$235852[ebp]
	sub	edx, 1
	imul	edx, 68					; 00000044H
	mov	eax, DWORD PTR _pkPlayerEspionage$[ebp]
	mov	ecx, DWORD PTR [eax+1284]
	mov	edx, DWORD PTR [ecx+edx+24]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 11122: 		lua_setfield(L, t, "Turn");

	push	OFFSET ??_C@_04EKEMLFA@Turn?$AA@
	mov	ecx, DWORD PTR _t$235856[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 11123: 		lua_pushinteger(L, pkPlayerEspionage->m_aIntrigueNotificationMessages[i - 1].m_eDiscoveringPlayer);

	mov	eax, DWORD PTR _i$235852[ebp]
	sub	eax, 1
	imul	eax, 68					; 00000044H
	mov	ecx, DWORD PTR _pkPlayerEspionage$[ebp]
	mov	edx, DWORD PTR [ecx+1284]
	mov	eax, DWORD PTR [edx+eax]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 11124: 		lua_setfield(L, t, "DiscoveringPlayer");

	push	OFFSET ??_C@_0BC@JGHGFNDG@DiscoveringPlayer?$AA@
	mov	edx, DWORD PTR _t$235856[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 11125: 		const char* szIntrigueSpy = pkPlayerEspionage->m_aIntrigueNotificationMessages[i - 1].m_strSpyName.c_str();

	mov	ecx, DWORD PTR _i$235852[ebp]
	sub	ecx, 1
	imul	ecx, 68					; 00000044H
	mov	edx, DWORD PTR _pkPlayerEspionage$[ebp]
	add	ecx, DWORD PTR [edx+1284]
	mov	DWORD PTR $T255560[ebp], ecx
	mov	ecx, DWORD PTR $T255560[ebp]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR _szIntrigueSpy$235862[ebp], eax

; 11126: 		lua_pushstring(L, szIntrigueSpy);

	mov	eax, DWORD PTR _szIntrigueSpy$235862[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 11127: 		lua_setfield(L, t, "SpyName");

	push	OFFSET ??_C@_07LNONOJEO@SpyName?$AA@
	mov	edx, DWORD PTR _t$235856[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 11128: 
; 11129: 		lua_rawseti(L, -2, index++);

	mov	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv171[ebp], ecx
	mov	edx, DWORD PTR tv171[ebp]
	push	edx
	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _index$[ebp]
	add	ecx, 1
	mov	DWORD PTR _index$[ebp], ecx

; 11130: 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strIntrigueMessage$235857[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN2@lGetIntrig
$LN1@lGetIntrig:

; 11131: 
; 11132: 	return 1;

	mov	eax, 1

; 11133: }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _strIntrigueMessage$235857[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-128]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetIntrigueMessages
EXTRN	?HasRecentIntrigueAbout@CvPlayerEspionage@@QAE_NW4PlayerTypes@@@Z:PROC ; CvPlayerEspionage::HasRecentIntrigueAbout
; Function compile flags: /Odtp
;	COMDAT ?lHasRecentIntrigueAbout@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ePlayer$ = -16						; size = 4
_iPlayer$ = -12						; size = 4
_pkThisPlayer$ = -8					; size = 4
_pkPlayerEspionage$ = -4				; size = 4
_L$ = 8							; size = 4
?lHasRecentIntrigueAbout@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lHasRecentIntrigueAbout, COMDAT

; 11136: {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 11137: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkThisPlayer$[ebp], eax

; 11138: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	DWORD PTR _pkPlayerEspionage$[ebp], eax

; 11139: 
; 11140: 	int iPlayer = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iPlayer$[ebp], eax

; 11141: 	CvAssertMsg(iPlayer >= 0 && iPlayer < MAX_MAJOR_CIVS, "iPlayer out of bounds");
; 11142: 	PlayerTypes ePlayer = (PlayerTypes)iPlayer;

	mov	edx, DWORD PTR _iPlayer$[ebp]
	mov	DWORD PTR _ePlayer$[ebp], edx

; 11143: 	lua_pushboolean(L, pkPlayerEspionage->HasRecentIntrigueAbout(ePlayer));

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayerEspionage$[ebp]
	call	?HasRecentIntrigueAbout@CvPlayerEspionage@@QAE_NW4PlayerTypes@@@Z ; CvPlayerEspionage::HasRecentIntrigueAbout
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 11144: 
; 11145: 	return 1;

	mov	eax, 1

; 11146: }

	mov	esp, ebp
	pop	ebp
	ret	0
?lHasRecentIntrigueAbout@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lHasRecentIntrigueAbout
_TEXT	ENDS
EXTRN	?GetRecentIntrigueInfo@CvPlayerEspionage@@QAEPAUIntrigueNotificationMessage@@W4PlayerTypes@@@Z:PROC ; CvPlayerEspionage::GetRecentIntrigueInfo
; Function compile flags: /Odtp
;	COMDAT ?lGetRecentIntrigueInfo@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pNotificationMessage$ = -28				; size = 4
_ePlotter$ = -24					; size = 4
_iPlayer$ = -20						; size = 4
_eTargetPlayer$ = -16					; size = 4
_eIntrigueType$ = -12					; size = 4
_pkThisPlayer$ = -8					; size = 4
_pkPlayerEspionage$ = -4				; size = 4
_L$ = 8							; size = 4
?lGetRecentIntrigueInfo@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetRecentIntrigueInfo, COMDAT

; 11149: {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 11150: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkThisPlayer$[ebp], eax

; 11151: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	DWORD PTR _pkPlayerEspionage$[ebp], eax

; 11152: 
; 11153: 	int iPlayer = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iPlayer$[ebp], eax

; 11154: 	CvAssertMsg(iPlayer >= 0 && iPlayer < MAX_MAJOR_CIVS, "iPlayer out of bounds");
; 11155: 	PlayerTypes eTargetPlayer = (PlayerTypes)iPlayer;

	mov	edx, DWORD PTR _iPlayer$[ebp]
	mov	DWORD PTR _eTargetPlayer$[ebp], edx

; 11156: 	IntrigueNotificationMessage* pNotificationMessage = pkPlayerEspionage->GetRecentIntrigueInfo(eTargetPlayer);

	mov	eax, DWORD PTR _eTargetPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayerEspionage$[ebp]
	call	?GetRecentIntrigueInfo@CvPlayerEspionage@@QAEPAUIntrigueNotificationMessage@@W4PlayerTypes@@@Z ; CvPlayerEspionage::GetRecentIntrigueInfo
	mov	DWORD PTR _pNotificationMessage$[ebp], eax

; 11157: 
; 11158: 	PlayerTypes ePlotter = NO_PLAYER;

	mov	DWORD PTR _ePlotter$[ebp], -1

; 11159: 	CvIntrigueType eIntrigueType = NUM_INTRIGUE_TYPES;

	mov	DWORD PTR _eIntrigueType$[ebp], 6

; 11160: 	if (pNotificationMessage)

	cmp	DWORD PTR _pNotificationMessage$[ebp], 0
	je	SHORT $LN1@lGetRecent

; 11161: 	{
; 11162: 		ePlotter = pNotificationMessage->m_eSourcePlayer;

	mov	ecx, DWORD PTR _pNotificationMessage$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _ePlotter$[ebp], edx

; 11163: 		eIntrigueType = (CvIntrigueType)pNotificationMessage->m_iIntrigueType;

	mov	eax, DWORD PTR _pNotificationMessage$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _eIntrigueType$[ebp], ecx
$LN1@lGetRecent:

; 11164: 	}
; 11165: 
; 11166: 	lua_pushinteger(L, ePlotter);

	mov	edx, DWORD PTR _ePlotter$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 11167: 	lua_pushinteger(L, eIntrigueType);

	mov	ecx, DWORD PTR _eIntrigueType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 11168: 
; 11169: 	return 2;

	mov	eax, 2

; 11170: }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetRecentIntrigueInfo@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetRecentIntrigueInfo
_TEXT	ENDS
EXTRN	?GetCoupChanceOfSuccess@CvPlayerEspionage@@QAEHI@Z:PROC ; CvPlayerEspionage::GetCoupChanceOfSuccess
EXTRN	?GetSpyIndexInCity@CvPlayerEspionage@@QAEHPAVCvCity@@@Z:PROC ; CvPlayerEspionage::GetSpyIndexInCity
; Function compile flags: /Odtp
;	COMDAT ?lGetCoupChanceOfSuccess@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkThisPlayer$ = -16					; size = 4
_pkCity$ = -12						; size = 4
_iSpyIndex$ = -8					; size = 4
_pkPlayerEspionage$ = -4				; size = 4
_L$ = 8							; size = 4
?lGetCoupChanceOfSuccess@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCoupChanceOfSuccess, COMDAT

; 11173: {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 11174: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkThisPlayer$[ebp], eax

; 11175: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	DWORD PTR _pkPlayerEspionage$[ebp], eax

; 11176: 	CvCity* pkCity = CvLuaCity::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 11177: 
; 11178: 	int iSpyIndex = pkPlayerEspionage->GetSpyIndexInCity(pkCity);

	mov	edx, DWORD PTR _pkCity$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayerEspionage$[ebp]
	call	?GetSpyIndexInCity@CvPlayerEspionage@@QAEHPAVCvCity@@@Z ; CvPlayerEspionage::GetSpyIndexInCity
	mov	DWORD PTR _iSpyIndex$[ebp], eax

; 11179: 	CvAssertMsg(iSpyIndex >= 0, "iSpyIndex out of bounds");
; 11180: 	if(iSpyIndex < 0)

	cmp	DWORD PTR _iSpyIndex$[ebp], 0
	jge	SHORT $LN1@lGetCoupCh

; 11181: 	{
; 11182: 		lua_pushinteger(L, 0);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 11183: 		return 1;

	mov	eax, 1
	jmp	SHORT $LN2@lGetCoupCh
$LN1@lGetCoupCh:

; 11184: 	}
; 11185: 
; 11186: 	lua_pushinteger(L, pkPlayerEspionage->GetCoupChanceOfSuccess(iSpyIndex));

	mov	ecx, DWORD PTR _iSpyIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayerEspionage$[ebp]
	call	?GetCoupChanceOfSuccess@CvPlayerEspionage@@QAEHI@Z ; CvPlayerEspionage::GetCoupChanceOfSuccess
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 11187: 	return 1;

	mov	eax, 1
$LN2@lGetCoupCh:

; 11188: }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCoupChanceOfSuccess@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCoupChanceOfSuccess
_TEXT	ENDS
EXTRN	?IsMyDiplomatVisitingThem@CvPlayerEspionage@@QAE_NW4PlayerTypes@@_N@Z:PROC ; CvPlayerEspionage::IsMyDiplomatVisitingThem
; Function compile flags: /Odtp
;	COMDAT ?lIsMyDiplomatVisitingThem@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -13						; size = 1
_eOtherPlayer$ = -12					; size = 4
_pkThisPlayer$ = -8					; size = 4
_pkPlayerEspionage$ = -4				; size = 4
_L$ = 8							; size = 4
?lIsMyDiplomatVisitingThem@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsMyDiplomatVisitingThem, COMDAT

; 11191: {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 11192: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkThisPlayer$[ebp], eax

; 11193: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	DWORD PTR _pkPlayerEspionage$[ebp], eax

; 11194: 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 11195: 
; 11196: 	const bool bValue = pkPlayerEspionage->IsMyDiplomatVisitingThem(eOtherPlayer);

	push	0
	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayerEspionage$[ebp]
	call	?IsMyDiplomatVisitingThem@CvPlayerEspionage@@QAE_NW4PlayerTypes@@_N@Z ; CvPlayerEspionage::IsMyDiplomatVisitingThem
	mov	BYTE PTR _bValue$[ebp], al

; 11197: 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 11198: 	return 1;

	mov	eax, 1

; 11199: }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsMyDiplomatVisitingThem@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsMyDiplomatVisitingThem
_TEXT	ENDS
EXTRN	?IsOtherDiplomatVisitingMe@CvPlayerEspionage@@QAE_NW4PlayerTypes@@@Z:PROC ; CvPlayerEspionage::IsOtherDiplomatVisitingMe
; Function compile flags: /Odtp
;	COMDAT ?lIsOtherDiplomatVisitingMe@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -13						; size = 1
_eOtherPlayer$ = -12					; size = 4
_pkThisPlayer$ = -8					; size = 4
_pkPlayerEspionage$ = -4				; size = 4
_L$ = 8							; size = 4
?lIsOtherDiplomatVisitingMe@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsOtherDiplomatVisitingMe, COMDAT

; 11202: {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 11203: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkThisPlayer$[ebp], eax

; 11204: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	DWORD PTR _pkPlayerEspionage$[ebp], eax

; 11205: 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherPlayer$[ebp], eax

; 11206: 
; 11207: 	const bool bValue = pkPlayerEspionage->IsOtherDiplomatVisitingMe(eOtherPlayer);

	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayerEspionage$[ebp]
	call	?IsOtherDiplomatVisitingMe@CvPlayerEspionage@@QAE_NW4PlayerTypes@@@Z ; CvPlayerEspionage::IsOtherDiplomatVisitingMe
	mov	BYTE PTR _bValue$[ebp], al

; 11208: 	lua_pushboolean(L, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 11209: 	return 1;

	mov	eax, 1

; 11210: }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsOtherDiplomatVisitingMe@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsOtherDiplomatVisitingMe
_TEXT	ENDS
EXTRN	?GetTradeRouteRange@CvPlayerTrade@@QAEHW4DomainTypes@@PAVCvCity@@@Z:PROC ; CvPlayerTrade::GetTradeRouteRange
; Function compile flags: /Odtp
;	COMDAT ?lGetTradeRouteRange@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkPlayerTrade$ = -16					; size = 4
_eDomain$ = -12						; size = 4
_pkThisPlayer$ = -8					; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetTradeRouteRange@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTradeRouteRange, COMDAT

; 11213: {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 11214: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkThisPlayer$[ebp], eax

; 11215: 	const DomainTypes eDomain = (DomainTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eDomain$[ebp], eax

; 11216: 	CvCity* pkCity = CvLuaCity::GetInstance(L, 3);

	push	1
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 11217: 
; 11218: 	CvPlayerTrade* pkPlayerTrade = pkThisPlayer->GetTrade();

	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	DWORD PTR _pkPlayerTrade$[ebp], eax

; 11219: 	lua_pushinteger(L, pkPlayerTrade->GetTradeRouteRange(eDomain, pkCity));

	mov	eax, DWORD PTR _pkCity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eDomain$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlayerTrade$[ebp]
	call	?GetTradeRouteRange@CvPlayerTrade@@QAEHW4DomainTypes@@PAVCvCity@@@Z ; CvPlayerTrade::GetTradeRouteRange
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 11220: 	return 1;

	mov	eax, 1

; 11221: }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTradeRouteRange@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTradeRouteRange
_TEXT	ENDS
EXTRN	?CanCommitVote@CvLeagueAI@@QAE_NW4PlayerTypes@@PAVCvString@@@Z:PROC ; CvLeagueAI::CanCommitVote
EXTRN	?GetLeagueAI@CvPlayer@@QBEPAVCvLeagueAI@@XZ:PROC ; CvPlayer::GetLeagueAI
; Function compile flags: /Odtp
;	COMDAT ?lCanCommitVote@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkThisPlayer$ = -12					; size = 4
_eToPlayer$ = -8					; size = 4
_pkPlayerLeagueAI$ = -4					; size = 4
_L$ = 8							; size = 4
?lCanCommitVote@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanCommitVote, COMDAT

; 11225: {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 11226: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkThisPlayer$[ebp], eax

; 11227: 	const PlayerTypes eToPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eToPlayer$[ebp], eax

; 11228: 
; 11229: 	CvLeagueAI* pkPlayerLeagueAI = pkThisPlayer->GetLeagueAI();

	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	call	?GetLeagueAI@CvPlayer@@QBEPAVCvLeagueAI@@XZ ; CvPlayer::GetLeagueAI
	mov	DWORD PTR _pkPlayerLeagueAI$[ebp], eax

; 11230: 	lua_pushboolean(L, pkPlayerLeagueAI->CanCommitVote(eToPlayer));

	push	0
	mov	edx, DWORD PTR _eToPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkPlayerLeagueAI$[ebp]
	call	?CanCommitVote@CvLeagueAI@@QAE_NW4PlayerTypes@@PAVCvString@@@Z ; CvLeagueAI::CanCommitVote
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 11231: 	return 1;

	mov	eax, 1

; 11232: }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanCommitVote@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanCommitVote
_TEXT	ENDS
EXTRN	?GetCommitVoteDetails@CvLeagueAI@@QAE?AVCvString@@W4PlayerTypes@@@Z:PROC ; CvLeagueAI::GetCommitVoteDetails
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv81 = -60						; size = 4
$T255588 = -56						; size = 4
$T255583 = -52						; size = 28
_pkThisPlayer$ = -24					; size = 4
_eToPlayer$ = -20					; size = 4
_pkPlayerLeagueAI$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCommitVoteDetails, COMDAT

; 11236: {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 11237: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkThisPlayer$[ebp], eax

; 11238: 	const PlayerTypes eToPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eToPlayer$[ebp], eax

; 11239: 
; 11240: 	CvLeagueAI* pkPlayerLeagueAI = pkThisPlayer->GetLeagueAI();

	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	call	?GetLeagueAI@CvPlayer@@QBEPAVCvLeagueAI@@XZ ; CvPlayer::GetLeagueAI
	mov	DWORD PTR _pkPlayerLeagueAI$[ebp], eax

; 11241: 	lua_pushstring(L, pkPlayerLeagueAI->GetCommitVoteDetails(eToPlayer));

	mov	edx, DWORD PTR _eToPlayer$[ebp]
	push	edx
	lea	eax, DWORD PTR $T255583[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlayerLeagueAI$[ebp]
	call	?GetCommitVoteDetails@CvLeagueAI@@QAE?AVCvString@@W4PlayerTypes@@@Z ; CvLeagueAI::GetCommitVoteDetails
	mov	DWORD PTR tv81[ebp], eax
	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR $T255588[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T255588[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T255583[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 11242: 	return 1;

	mov	eax, 1

; 11243: }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T255583[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCommitVoteDetails
EXTRN	?isConnected@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isConnected
; Function compile flags: /Odtp
;	COMDAT ?lIsConnected@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsConnected@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsConnected, COMDAT

; 11247: {

	push	ebp
	mov	ebp, esp

; 11248: 	return BasicLuaMethod(L, &CvPlayerAI::isConnected);

	push	OFFSET ?isConnected@CvPlayer@@QBE_NXZ	; CvPlayer::isConnected
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 11249: }

	pop	ebp
	ret	0
?lIsConnected@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsConnected
_TEXT	ENDS
EXTRN	?isObserver@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isObserver
; Function compile flags: /Odtp
;	COMDAT ?lIsObserver@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsObserver@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsObserver, COMDAT

; 11253: {

	push	ebp
	mov	ebp, esp

; 11254: 	return BasicLuaMethod(L, &CvPlayerAI::isObserver);

	push	OFFSET ?isObserver@CvPlayer@@QBE_NXZ	; CvPlayer::isObserver
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 11255: }

	pop	ebp
	ret	0
?lIsObserver@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsObserver
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
EXTRN	?hasTurnTimerExpired@CvPlayer@@QAE_NXZ:PROC	; CvPlayer::hasTurnTimerExpired
; Function compile flags: /Odtp
;	COMDAT ?lHasTurnTimerExpired@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasTurnTimerExpired@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lHasTurnTimerExpired, COMDAT

; 11259: {

	push	ebp
	mov	ebp, esp

; 11260: 	return BasicLuaMethod(L, &CvPlayerAI::hasTurnTimerExpired);

	push	OFFSET ?hasTurnTimerExpired@CvPlayer@@QAE_NXZ ; CvPlayer::hasTurnTimerExpired
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 11261: }

	pop	ebp
	ret	0
?lHasTurnTimerExpired@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lHasTurnTimerExpired
_TEXT	ENDS
EXTRN	?getUnitClassType@CvUnit@@QBE?AW4UnitClassTypes@@XZ:PROC ; CvUnit::getUnitClassType
; Function compile flags: /Odtp
;	COMDAT ?lHasUnitOfClassType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -17						; size = 1
_pLoopUnit$ = -16					; size = 4
_pkThisPlayer$ = -12					; size = 4
_eUnitClass$ = -8					; size = 4
_iUnitLoop$ = -4					; size = 4
_L$ = 8							; size = 4
?lHasUnitOfClassType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lHasUnitOfClassType, COMDAT

; 11265: {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 11266: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkThisPlayer$[ebp], eax

; 11267: 	
; 11268: 	UnitClassTypes eUnitClass = static_cast<UnitClassTypes>(luaL_checkint(L, 2));

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eUnitClass$[ebp], eax

; 11269: 
; 11270: 	bool bResult = false;

	mov	BYTE PTR _bResult$[ebp], 0

; 11271: 	int iUnitLoop;
; 11272: 	CvUnit* pLoopUnit;
; 11273: 
; 11274: 	for(pLoopUnit = pkThisPlayer->firstUnit(&iUnitLoop); pLoopUnit != NULL; pLoopUnit = pkThisPlayer->nextUnit(&iUnitLoop))

	push	0
	lea	edx, DWORD PTR _iUnitLoop$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	call	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::firstUnit
	mov	DWORD PTR _pLoopUnit$[ebp], eax
	jmp	SHORT $LN4@lHasUnitOf
$LN3@lHasUnitOf:
	push	0
	lea	eax, DWORD PTR _iUnitLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkThisPlayer$[ebp]
	call	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::nextUnit
	mov	DWORD PTR _pLoopUnit$[ebp], eax
$LN4@lHasUnitOf:
	cmp	DWORD PTR _pLoopUnit$[ebp], 0
	je	SHORT $LN2@lHasUnitOf

; 11275: 	{
; 11276: 		if(pLoopUnit != NULL && pLoopUnit->getUnitClassType() == eUnitClass)

	cmp	DWORD PTR _pLoopUnit$[ebp], 0
	je	SHORT $LN1@lHasUnitOf
	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	call	?getUnitClassType@CvUnit@@QBE?AW4UnitClassTypes@@XZ ; CvUnit::getUnitClassType
	cmp	eax, DWORD PTR _eUnitClass$[ebp]
	jne	SHORT $LN1@lHasUnitOf

; 11277: 		{
; 11278: 			bResult = true;

	mov	BYTE PTR _bResult$[ebp], 1

; 11279: 			break;

	jmp	SHORT $LN2@lHasUnitOf
$LN1@lHasUnitOf:

; 11280: 		}
; 11281: 	}

	jmp	SHORT $LN3@lHasUnitOf
$LN2@lHasUnitOf:

; 11282: 
; 11283: 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 11284: 	return 1;

	mov	eax, 1

; 11285: }

	mov	esp, ebp
	pop	ebp
	ret	0
?lHasUnitOfClassType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lHasUnitOfClassType
_TEXT	ENDS
EXTRN	?GetWarmongerPreviewString@CvDiplomacyAIHelpers@@YA?AVCvString@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAIHelpers::GetWarmongerPreviewString
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv70 = -52						; size = 4
$T255614 = -48						; size = 4
$T255609 = -44						; size = 28
_eOwner$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetWarmongerPreviewString, COMDAT

; 11289: {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 11290: 	const PlayerTypes eOwner = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOwner$[ebp], eax

; 11291: 	lua_pushstring(L, CvDiplomacyAIHelpers::GetWarmongerPreviewString(eOwner));

	mov	ecx, DWORD PTR _eOwner$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T255609[ebp]
	push	edx
	call	?GetWarmongerPreviewString@CvDiplomacyAIHelpers@@YA?AVCvString@@W4PlayerTypes@@@Z ; CvDiplomacyAIHelpers::GetWarmongerPreviewString
	add	esp, 8
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR $T255614[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T255614[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T255609[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 11292: 	return 1;

	mov	eax, 1

; 11293: }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T255609[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetWarmongerPreviewString
EXTRN	?GetLiberationPreviewString@CvDiplomacyAIHelpers@@YA?AVCvString@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAIHelpers::GetLiberationPreviewString
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv70 = -52						; size = 4
$T255632 = -48						; size = 4
$T255627 = -44						; size = 28
_eOriginalOwner$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetLiberationPreviewString, COMDAT

; 11296: {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 11297: 	const PlayerTypes eOriginalOwner = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOriginalOwner$[ebp], eax

; 11298: 	lua_pushstring(L, CvDiplomacyAIHelpers::GetLiberationPreviewString(eOriginalOwner));

	mov	ecx, DWORD PTR _eOriginalOwner$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T255627[ebp]
	push	edx
	call	?GetLiberationPreviewString@CvDiplomacyAIHelpers@@YA?AVCvString@@W4PlayerTypes@@@Z ; CvDiplomacyAIHelpers::GetLiberationPreviewString
	add	esp, 8
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR $T255632[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T255632[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T255627[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 11299: 	return 1;

	mov	eax, 1

; 11300: }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T255627[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetLiberationPreviewString
PUBLIC	?_Buy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAE_NI@Z ; std::vector<CvString,std::allocator<CvString> >::_Buy
EXTRN	__CxxThrowException@8:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
xdata$x	SEGMENT
__unwindtable$??0?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??0?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv88 = -132						; size = 4
tv145 = -128						; size = 4
_this$ = -124						; size = 4
$T255674 = -30						; size = 1
$T255661 = -29						; size = 1
$T255657 = -28						; size = 4
$T255650 = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ PROC ; std::vector<CvString,std::allocator<CvString> >::vector<CvString,std::allocator<CvString> >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 120				; 00000078H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T255674[ebp]
	mov	DWORD PTR $T255650[ebp], eax
	lea	ecx, DWORD PTR $T255661[ebp]
	mov	DWORD PTR $T255657[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv145[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv88[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 471  : 		_Buy(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAE_NI@Z ; std::vector<CvString,std::allocator<CvString> >::_Buy

; 472  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
__ehhandler$??0?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-124]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ENDP ; std::vector<CvString,std::allocator<CvString> >::vector<CvString,std::allocator<CvString> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -52						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ PROC ; std::vector<CvString,std::allocator<CvString> >::~vector<CvString,std::allocator<CvString> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 559  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ ; std::vector<CvString,std::allocator<CvString> >::_Tidy

; 560  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
__ehhandler$??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ENDP ; std::vector<CvString,std::allocator<CvString> >::~vector<CvString,std::allocator<CvString> >
PUBLIC	??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<CvString *,CvString *,std::allocator<CvString> >
PUBLIC	??4CvString@@QAEAAV0@ABV0@@Z			; CvString::operator=
PUBLIC	?erase@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@0@Z ; std::vector<CvString,std::allocator<CvString> >::erase
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp
;	COMDAT ??4?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv241 = -308						; size = 4
_this$ = -304						; size = 4
$T256313 = -300						; size = 4
$T256312 = -296						; size = 4
$T256311 = -292						; size = 4
$T256301 = -288						; size = 4
$T256300 = -284						; size = 4
__Cat$256308 = -279					; size = 1
$T256305 = -278						; size = 1
$T256304 = -277						; size = 1
$T256250 = -188						; size = 4
$T256246 = -184						; size = 4
$T256245 = -180						; size = 4
$T256241 = -176						; size = 4
$T256240 = -172						; size = 4
$T256217 = -168						; size = 4
$T256216 = -164						; size = 4
$T256195 = -160						; size = 4
$T256194 = -156						; size = 4
__Cat$256223 = -150					; size = 1
$T256220 = -149						; size = 1
$T256143 = -148						; size = 4
$T256142 = -144						; size = 4
$T256132 = -140						; size = 4
$T256131 = -136						; size = 4
__Cat$256139 = -131					; size = 1
$T256136 = -130						; size = 1
$T256135 = -129						; size = 1
$T256115 = -128						; size = 4
$T256114 = -124						; size = 4
$T256095 = -118						; size = 1
$T256094 = -117						; size = 1
$T256093 = -116						; size = 4
$T256092 = -112						; size = 4
__Cat$256102 = -104					; size = 1
$T256099 = -103						; size = 1
$T256098 = -102						; size = 1
$T256097 = -101						; size = 1
$T256058 = -100						; size = 4
$T256051 = -96						; size = 4
$T256028 = -92						; size = 4
$T256027 = -88						; size = 4
$T256006 = -84						; size = 4
$T256005 = -80						; size = 4
__Cat$256038 = -74					; size = 1
$T256036 = -73						; size = 1
$T255954 = -72						; size = 4
$T255953 = -68						; size = 4
$T255952 = -64						; size = 4
$T255935 = -58						; size = 1
$T255934 = -57						; size = 1
$T255933 = -56						; size = 4
$T255932 = -52						; size = 4
__Cat$255942 = -44					; size = 1
$T255940 = -43						; size = 1
$T255939 = -42						; size = 1
$T255938 = -41						; size = 1
$T255910 = -40						; size = 4
$T255881 = -36						; size = 4
$T255865 = -32						; size = 4
$T255894 = -28						; size = 4
$T255893 = -24						; size = 4
$T255892 = -20						; size = 4
$T255891 = -16						; size = 4
$T255890 = -12						; size = 4
__Ptr$236014 = -8					; size = 4
__Ptr$236004 = -4					; size = 4
__Right$ = 8						; size = 4
??4?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::vector<CvString,std::allocator<CvString> >::operator=, COMDAT
; _this$ = ecx

; 563  : 		{	// assign _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 308				; 00000134H
	mov	DWORD PTR _this$[ebp], ecx

; 564  : 		if (this != &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	$LN9@operator

; 565  : 			{	// worth doing
; 566  : 
; 567  :  #if _HAS_ITERATOR_DEBUGGING
; 568  : 			this->_Orphan_all();
; 569  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 570  : 
; 571  : 			if (_Right.size() == 0)

	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	test	eax, eax
	jne	SHORT $LN8@operator

; 572  : 				clear();	// new sequence empty, erase existing sequence

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T255865[ebp], eax
	mov	ecx, DWORD PTR $T255865[ebp]
	mov	DWORD PTR $T255891[ebp], ecx
	mov	edx, DWORD PTR $T255891[ebp]
	mov	DWORD PTR $T255890[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T255881[ebp], ecx
	mov	edx, DWORD PTR $T255881[ebp]
	mov	DWORD PTR $T255893[ebp], edx
	mov	eax, DWORD PTR $T255893[ebp]
	mov	DWORD PTR $T255892[ebp], eax
	mov	ecx, DWORD PTR $T255890[ebp]
	push	ecx
	mov	edx, DWORD PTR $T255892[ebp]
	push	edx
	lea	eax, DWORD PTR $T255894[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@0@Z ; std::vector<CvString,std::allocator<CvString> >::erase

; 573  : 			else if (_Right.size() <= size())

	jmp	$LN9@operator
$LN8@operator:
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR $T255910[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax+4]
	mov	eax, ecx
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	cmp	DWORD PTR $T255910[ebp], eax
	ja	$LN6@operator

; 574  : 				{	// enough elements, copy new and destroy old
; 575  : 				pointer _Ptr = _STDEXT unchecked_copy(_Right._Myfirst, _Right._Mylast,
; 576  : 					_Myfirst);	// copy new

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T255954[ebp], eax
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T255953[ebp], edx
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T255952[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T255938[ebp], dl
	mov	al, BYTE PTR __Cat$255942[ebp]
	mov	BYTE PTR $T255939[ebp], al
	mov	cl, BYTE PTR $T255938[ebp]
	mov	BYTE PTR $T255935[ebp], cl
	mov	dl, BYTE PTR $T255940[ebp]
	mov	BYTE PTR $T255934[ebp], dl
	mov	eax, DWORD PTR $T255954[ebp]
	mov	DWORD PTR $T255933[ebp], eax
	mov	ecx, DWORD PTR $T255952[ebp]
	mov	DWORD PTR $T255932[ebp], ecx
	jmp	SHORT $LN40@operator
$LN39@operator:
	mov	edx, DWORD PTR $T255933[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR $T255933[ebp], edx
	mov	eax, DWORD PTR $T255932[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR $T255932[ebp], eax
$LN40@operator:
	mov	ecx, DWORD PTR $T255932[ebp]
	cmp	ecx, DWORD PTR $T255953[ebp]
	je	SHORT $LN32@operator
	mov	edx, DWORD PTR $T255932[ebp]
	push	edx
	mov	ecx, DWORD PTR $T255933[ebp]
	call	??4CvString@@QAEAAV0@ABV0@@Z
	jmp	SHORT $LN39@operator
$LN32@operator:
	mov	eax, DWORD PTR $T255933[ebp]
	mov	DWORD PTR __Ptr$236004[ebp], eax

; 577  : 				_Destroy(_Ptr, _Mylast);	// destroy old

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T256051[ebp], edx
	mov	eax, DWORD PTR $T256051[ebp]
	mov	DWORD PTR $T256028[ebp], eax
	mov	ecx, DWORD PTR __Ptr$236004[ebp]
	mov	DWORD PTR $T256027[ebp], ecx
	mov	dl, BYTE PTR __Cat$256038[ebp]
	mov	BYTE PTR $T256036[ebp], dl
	mov	eax, DWORD PTR $T256028[ebp]
	mov	DWORD PTR $T256006[ebp], eax
	mov	ecx, DWORD PTR $T256027[ebp]
	mov	DWORD PTR $T256005[ebp], ecx
	jmp	SHORT $LN51@operator
$LN50@operator:
	mov	edx, DWORD PTR $T256005[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR $T256005[ebp], edx
$LN51@operator:
	mov	eax, DWORD PTR $T256005[ebp]
	cmp	eax, DWORD PTR $T256006[ebp]
	je	SHORT $LN64@operator
	mov	ecx, DWORD PTR $T256005[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	xor	ecx, ecx
	and	ecx, 1
	je	SHORT $LN54@operator
	mov	edx, DWORD PTR $T256005[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN54@operator:
	jmp	SHORT $LN50@operator

; 578  : 				_Mylast = _Myfirst + _Right.size();

$LN64@operator:
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	imul	eax, 28					; 0000001cH
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
	jmp	$LN9@operator
$LN6@operator:

; 579  : 				}
; 580  : 			else if (_Right.size() <= capacity())

	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax+4]
	mov	eax, ecx
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR $T256058[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], 0
	jne	SHORT $LN70@operator
	mov	DWORD PTR tv241[ebp], 0
	jmp	SHORT $LN68@operator
$LN70@operator:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR tv241[ebp], eax
$LN68@operator:
	mov	edx, DWORD PTR $T256058[ebp]
	cmp	edx, DWORD PTR tv241[ebp]
	ja	$LN4@operator

; 581  : 				{	// enough room, copy and construct new
; 582  : 				pointer _Ptr = _Right._Myfirst + size();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	imul	eax, 28					; 0000001cH
	mov	edx, DWORD PTR __Right$[ebp]
	add	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Ptr$236014[ebp], eax

; 583  : 				_STDEXT unchecked_copy(_Right._Myfirst, _Ptr, _Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T256115[ebp], ecx
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T256114[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T256097[ebp], cl
	mov	dl, BYTE PTR __Cat$256102[ebp]
	mov	BYTE PTR $T256098[ebp], dl
	mov	al, BYTE PTR $T256097[ebp]
	mov	BYTE PTR $T256095[ebp], al
	mov	cl, BYTE PTR $T256099[ebp]
	mov	BYTE PTR $T256094[ebp], cl
	mov	edx, DWORD PTR $T256115[ebp]
	mov	DWORD PTR $T256093[ebp], edx
	mov	eax, DWORD PTR $T256114[ebp]
	mov	DWORD PTR $T256092[ebp], eax
	jmp	SHORT $LN82@operator
$LN81@operator:
	mov	ecx, DWORD PTR $T256093[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR $T256093[ebp], ecx
	mov	edx, DWORD PTR $T256092[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR $T256092[ebp], edx
$LN82@operator:
	mov	eax, DWORD PTR $T256092[ebp]
	cmp	eax, DWORD PTR __Ptr$236014[ebp]
	je	SHORT $LN74@operator
	mov	ecx, DWORD PTR $T256092[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T256093[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	jmp	SHORT $LN81@operator
$LN74@operator:

; 584  : 				_Mylast = _Ucopy(_Ptr, _Right._Mylast, _Mylast);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T256143[ebp], eax
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T256142[ebp], edx
	mov	eax, DWORD PTR $T256143[ebp]
	mov	DWORD PTR $T256132[ebp], eax
	mov	ecx, DWORD PTR __Ptr$236014[ebp]
	mov	DWORD PTR $T256131[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T256135[ebp], dl
	mov	al, BYTE PTR __Cat$256139[ebp]
	mov	BYTE PTR $T256136[ebp], al
	movzx	ecx, BYTE PTR $T256135[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T256136[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T256132[ebp]
	push	ecx
	mov	edx, DWORD PTR $T256142[ebp]
	push	edx
	mov	eax, DWORD PTR $T256131[ebp]
	push	eax
	call	??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<CvString *,CvString *,std::allocator<CvString> >
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 585  : 				}
; 586  : 			else

	jmp	$LN9@operator
$LN4@operator:

; 587  : 				{	// not enough room, allocate new array and construct new
; 588  : 				if (_Myfirst != 0)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	$LN2@operator

; 589  : 					{	// discard old array
; 590  : 					_Destroy(_Myfirst, _Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T256241[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T256240[ebp], eax
	mov	ecx, DWORD PTR $T256241[ebp]
	mov	DWORD PTR $T256217[ebp], ecx
	mov	edx, DWORD PTR $T256240[ebp]
	mov	DWORD PTR $T256216[ebp], edx
	mov	al, BYTE PTR __Cat$256223[ebp]
	mov	BYTE PTR $T256220[ebp], al
	mov	ecx, DWORD PTR $T256217[ebp]
	mov	DWORD PTR $T256195[ebp], ecx
	mov	edx, DWORD PTR $T256216[ebp]
	mov	DWORD PTR $T256194[ebp], edx
	jmp	SHORT $LN101@operator
$LN100@operator:
	mov	eax, DWORD PTR $T256194[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR $T256194[ebp], eax
$LN101@operator:
	mov	ecx, DWORD PTR $T256194[ebp]
	cmp	ecx, DWORD PTR $T256195[ebp]
	je	SHORT $LN93@operator
	mov	ecx, DWORD PTR $T256194[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN104@operator
	mov	eax, DWORD PTR $T256194[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN104@operator:
	jmp	SHORT $LN100@operator
$LN93@operator:

; 591  : 					this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR $T256246[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T256245[ebp], eax
	mov	ecx, DWORD PTR $T256245[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@operator:

; 592  : 					}
; 593  : 				if (_Buy(_Right.size()))

	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax+4]
	mov	eax, ecx
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR $T256250[ebp], eax
	mov	edx, DWORD PTR $T256250[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAE_NI@Z ; std::vector<CvString,std::allocator<CvString> >::_Buy
	movzx	eax, al
	test	eax, eax
	je	$LN9@operator

; 594  : 					_Mylast = _Ucopy(_Right._Myfirst, _Right._Mylast,
; 595  : 						_Myfirst);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T256313[ebp], edx
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T256312[ebp], ecx
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T256311[ebp], eax
	mov	ecx, DWORD PTR $T256313[ebp]
	mov	DWORD PTR $T256301[ebp], ecx
	mov	edx, DWORD PTR $T256311[ebp]
	mov	DWORD PTR $T256300[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T256304[ebp], al
	mov	cl, BYTE PTR __Cat$256308[ebp]
	mov	BYTE PTR $T256305[ebp], cl
	movzx	edx, BYTE PTR $T256304[ebp]
	push	edx
	movzx	eax, BYTE PTR $T256305[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T256301[ebp]
	push	edx
	mov	eax, DWORD PTR $T256312[ebp]
	push	eax
	mov	ecx, DWORD PTR $T256300[ebp]
	push	ecx
	call	??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<CvString *,CvString *,std::allocator<CvString> >
	add	esp, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax
$LN9@operator:

; 596  : 				}
; 597  : 			}
; 598  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 599  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??4?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::vector<CvString,std::allocator<CvString> >::operator=
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
_TEXT	ENDS
;	COMDAT ??1?$FObjectHandle@VCvUnit@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$FObjectHandle@VCvUnit@@@@QAE@XZ PROC		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>, COMDAT
; _this$ = ecx

; 146  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 147  : 		if(m_target) 

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@FObjectHan

; 148  : 		{
; 149  : 			m_target->getDestructionNotification().removeTarget(*this);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN2@FObjectHan:

; 150  : 		}
; 151  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$FObjectHandle@VCvUnit@@@@QAE@XZ ENDP		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
_TEXT	ENDS
PUBLIC	??1?$BaseVector@UTradeConnectionPlot@@$0A@@@QAE@XZ ; BaseVector<TradeConnectionPlot,0>::~BaseVector<TradeConnectionPlot,0>
PUBLIC	??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@ ; `string'
EXTRN	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z:PROC ; FireMallocAlignedNoTracking
;	COMDAT ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@ DB 'd:\sources\'
	DB	'lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\FF'
	DB	'astVector.h', 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T256331 = -20						; size = 4
_pRet$256328 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<TradeConnectionPlot,40,0,297,0>::FStaticVector<TradeConnectionPlot,40,0,297,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 40			; 00000028H

; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T256331[ebp], edx
	cmp	DWORD PTR $T256331[ebp], 40		; 00000028H
	jbe	SHORT $LN7@FStaticVec
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	eax, DWORD PTR $T256331[ebp]
	shl	eax, 3
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$256328[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T256331[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN8@FStaticVec
$LN7@FStaticVec:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pRet$256328[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 40			; 00000028H
$LN8@FStaticVec:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pRet$256328[ebp]
	mov	DWORD PTR [edx], eax

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@UTradeConnectionPlot@@$0A@@@QAE@XZ ; BaseVector<TradeConnectionPlot,0>::~BaseVector<TradeConnectionPlot,0>
__ehhandler$??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<TradeConnectionPlot,40,0,297,0>::FStaticVector<TradeConnectionPlot,40,0,297,0>
EXTRN	?FireFreeAlignedNoTracking@@YAXPAX@Z:PROC	; FireFreeAlignedNoTracking
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T256362 = -24						; size = 4
$T256361 = -20						; size = 4
_i$256353 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<TradeConnectionPlot,40,0,297,0>::~FStaticVector<TradeConnectionPlot,40,0,297,0>, COMDAT
; _this$ = ecx

; 617  : 	~FStaticVector(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T256362[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T256361[ebp], eax
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN5@FStaticVec@2
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@FStaticVec@2
	mov	DWORD PTR _i$256353[ebp], 0
	jmp	SHORT $LN10@FStaticVec@2
$LN9@FStaticVec@2:
	mov	eax, DWORD PTR _i$256353[ebp]
	add	eax, 1
	mov	DWORD PTR _i$256353[ebp], eax
$LN10@FStaticVec@2:
	mov	ecx, DWORD PTR _i$256353[ebp]
	cmp	ecx, DWORD PTR $T256362[ebp]
	jae	SHORT $LN5@FStaticVec@2
	jmp	SHORT $LN9@FStaticVec@2
$LN5@FStaticVec@2:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	cmp	DWORD PTR $T256361[ebp], edx
	je	SHORT $LN1@FStaticVec@2
	mov	eax, DWORD PTR $T256361[ebp]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN1@FStaticVec@2:

; 619  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@UTradeConnectionPlot@@$0A@@@QAE@XZ ; BaseVector<TradeConnectionPlot,0>::~BaseVector<TradeConnectionPlot,0>
__ehhandler$??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<TradeConnectionPlot,40,0,297,0>::~FStaticVector<TradeConnectionPlot,40,0,297,0>
PUBLIC	??1?$auto_ptr@VICvUnknown@@@std@@QAE@XZ		; std::auto_ptr<ICvUnknown>::~auto_ptr<ICvUnknown>
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces.h
xdata$x	SEGMENT
__unwindtable$?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ$0
__ehfuncinfo$?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ
_TEXT	SEGMENT
tv85 = -88						; size = 4
tv72 = -84						; size = 4
_this$ = -80						; size = 4
_inst$256433 = -76					; size = 4
$T256429 = -72						; size = 4
$T256416 = -68						; size = 16
$T256415 = -52						; size = 16
$T256406 = -36						; size = 4
$T256394 = -32						; size = 4
$T256386 = -28						; size = 4
$T256381 = -24						; size = 4
$T256374 = -20						; size = 4
_pValue$236169 = -16					; size = 4
__$EHRec$ = -12						; size = 12
?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ PROC ; CvEnumerator<ICvUnit1>::GetCurrent, COMDAT
; _this$ = ecx

; 1859 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1860 : 		if(m_Enumerator.get() != NULL)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T256381[ebp], ecx
	cmp	DWORD PTR $T256381[ebp], 0
	je	$LN2@GetCurrent

; 1861 : 		{
; 1862 : 			auto_ptr<ICvUnknown> pValue(m_Enumerator->GetCurrent());

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T256386[ebp], eax
	mov	ecx, DWORD PTR $T256386[ebp]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	mov	eax, DWORD PTR tv72[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	mov	DWORD PTR $T256394[ebp], eax
	mov	eax, DWORD PTR $T256394[ebp]
	mov	DWORD PTR _pValue$236169[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1863 : 			return (pValue.get() != NULL)? pValue->QueryInterface<T>() : NULL;

	cmp	DWORD PTR _pValue$236169[ebp], 0
	je	SHORT $LN5@GetCurrent
	mov	ecx, DWORD PTR _pValue$236169[ebp]
	mov	DWORD PTR $T256406[ebp], ecx
	mov	edx, DWORD PTR _guidICvUnit1
	mov	DWORD PTR $T256416[ebp], edx
	mov	eax, DWORD PTR _guidICvUnit1+4
	mov	DWORD PTR $T256416[ebp+4], eax
	mov	ecx, DWORD PTR _guidICvUnit1+8
	mov	DWORD PTR $T256416[ebp+8], ecx
	mov	edx, DWORD PTR _guidICvUnit1+12
	mov	DWORD PTR $T256416[ebp+12], edx
	mov	eax, DWORD PTR $T256416[ebp]
	mov	DWORD PTR $T256415[ebp], eax
	mov	ecx, DWORD PTR $T256416[ebp+4]
	mov	DWORD PTR $T256415[ebp+4], ecx
	mov	edx, DWORD PTR $T256416[ebp+8]
	mov	DWORD PTR $T256415[ebp+8], edx
	mov	eax, DWORD PTR $T256416[ebp+12]
	mov	DWORD PTR $T256415[ebp+12], eax
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR $T256415[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T256415[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T256415[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR $T256415[ebp+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, DWORD PTR $T256406[ebp]
	push	ecx
	mov	edx, DWORD PTR $T256406[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	call	ecx
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN6@GetCurrent
$LN5@GetCurrent:
	mov	DWORD PTR tv85[ebp], 0
$LN6@GetCurrent:
	mov	edx, DWORD PTR tv85[ebp]
	mov	DWORD PTR $T256374[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _pValue$236169[ebp]
	mov	DWORD PTR $T256429[ebp], eax
	cmp	DWORD PTR $T256429[ebp], 0
	je	SHORT $LN26@GetCurrent
	mov	ecx, DWORD PTR $T256429[ebp]
	mov	DWORD PTR _inst$256433[ebp], ecx
	mov	edx, DWORD PTR _inst$256433[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _inst$256433[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+4]
	call	edx
$LN26@GetCurrent:
	mov	eax, DWORD PTR $T256374[ebp]
	jmp	SHORT $LN3@GetCurrent

; 1864 : 		}
; 1865 : 		else

	jmp	SHORT $LN3@GetCurrent
$LN2@GetCurrent:

; 1866 : 		{
; 1867 : 			return NULL;

	xor	eax, eax
$LN3@GetCurrent:

; 1868 : 		}	
; 1869 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ$0:
	lea	ecx, DWORD PTR _pValue$236169[ebp]
	jmp	??1?$auto_ptr@VICvUnknown@@@std@@QAE@XZ	; std::auto_ptr<ICvUnknown>::~auto_ptr<ICvUnknown>
__ehhandler$?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ ENDP ; CvEnumerator<ICvUnit1>::GetCurrent
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_inst$256447 = -8					; size = 4
$T256442 = -4						; size = 4
??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ PROC		; std::auto_ptr<ICvUnit1>::~auto_ptr<ICvUnit1>, COMDAT
; _this$ = ecx

; 720  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 721  : 		delete _Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T256442[ebp], ecx
	cmp	DWORD PTR $T256442[ebp], 0
	je	SHORT $LN1@auto_ptr
	mov	edx, DWORD PTR $T256442[ebp]
	mov	DWORD PTR _inst$256447[ebp], edx
	mov	eax, DWORD PTR _inst$256447[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$256447[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN1@auto_ptr:

; 722  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ ENDP		; std::auto_ptr<ICvUnit1>::~auto_ptr<ICvUnit1>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvweightedvector.h
_TEXT	ENDS
;	COMDAT ??1?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
??1?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAE@XZ PROC	; CvWeightedVector<CvPlot *,800,1>::~CvWeightedVector<CvPlot *,800,1>, COMDAT
; _this$ = ecx

; 58   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 59   : 	};

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::~FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAE@XZ ENDP	; CvWeightedVector<CvPlot *,800,1>::~CvWeightedVector<CvPlot *,800,1>
_TEXT	ENDS
PUBLIC	??$_Sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0H@Z ; std::_Sort<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int>
; Function compile flags: /Odtp
;	COMDAT ?SortItems@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAEXXZ
_TEXT	SEGMENT
_this$ = -156						; size = 4
$T256487 = -8						; size = 4
$T256483 = -4						; size = 4
?SortItems@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAEXXZ PROC ; CvWeightedVector<CvPlot *,800,1>::SortItems, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 156				; 0000009cH
	mov	DWORD PTR _this$[ebp], ecx

; 140  : 		std::sort(m_pItems.begin(), m_pItems.end());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR $T256483[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T256487[ebp], eax
	mov	ecx, DWORD PTR $T256483[ebp]
	sub	ecx, DWORD PTR $T256487[ebp]
	sar	ecx, 3
	push	ecx
	mov	edx, DWORD PTR $T256483[ebp]
	push	edx
	mov	eax, DWORD PTR $T256487[ebp]
	push	eax
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0H@Z ; std::_Sort<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int>
	add	esp, 12					; 0000000cH

; 141  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?SortItems@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAEXXZ ENDP ; CvWeightedVector<CvPlot *,800,1>::SortItems
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ ; std::_Vector_val<Opinion,std::allocator<Opinion> >::~_Vector_val<Opinion,std::allocator<Opinion> >
PUBLIC	?_Buy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAE_NI@Z ; std::vector<Opinion,std::allocator<Opinion> >::_Buy
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
xdata$x	SEGMENT
__unwindtable$??0?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??0?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv88 = -132						; size = 4
tv145 = -128						; size = 4
_this$ = -124						; size = 4
$T256697 = -30						; size = 1
$T256684 = -29						; size = 1
$T256680 = -28						; size = 4
$T256673 = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ PROC ; std::vector<Opinion,std::allocator<Opinion> >::vector<Opinion,std::allocator<Opinion> >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 120				; 00000078H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T256697[ebp]
	mov	DWORD PTR $T256673[ebp], eax
	lea	ecx, DWORD PTR $T256684[ebp]
	mov	DWORD PTR $T256680[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv145[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv88[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 471  : 		_Buy(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAE_NI@Z ; std::vector<Opinion,std::allocator<Opinion> >::_Buy

; 472  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ
__ehhandler$??0?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-124]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ ENDP ; std::vector<Opinion,std::allocator<Opinion> >::vector<Opinion,std::allocator<Opinion> >
PUBLIC	?_Tidy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXXZ ; std::vector<Opinion,std::allocator<Opinion> >::_Tidy
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??1?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -52						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ PROC ; std::vector<Opinion,std::allocator<Opinion> >::~vector<Opinion,std::allocator<Opinion> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 559  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXXZ ; std::vector<Opinion,std::allocator<Opinion> >::_Tidy

; 560  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ
__ehhandler$??1?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ ENDP ; std::vector<Opinion,std::allocator<Opinion> >::~vector<Opinion,std::allocator<Opinion> >
; Function compile flags: /Odtp
;	COMDAT ?begin@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T256877 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@XZ PROC ; std::vector<Opinion,std::allocator<Opinion> >::begin, COMDAT
; _this$ = ecx

; 666  : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 667  : 		return (iterator(_Myfirst));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T256877[ebp], ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR $T256877[ebp]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 668  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@XZ ENDP ; std::vector<Opinion,std::allocator<Opinion> >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T256888 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@XZ PROC ; std::vector<Opinion,std::allocator<Opinion> >::end, COMDAT
; _this$ = ecx

; 676  : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 677  : 		return (iterator(_Mylast));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T256888[ebp], ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR $T256888[ebp]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 678  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@XZ ENDP ; std::vector<Opinion,std::allocator<Opinion> >::end
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?size@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEIXZ PROC ; std::vector<Opinion,std::allocator<Opinion> >::size, COMDAT
; _this$ = ecx

; 725  : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx

; 727  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEIXZ ENDP ; std::vector<Opinion,std::allocator<Opinion> >::size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??A?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAUOpinion@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAUOpinion@@I@Z PROC ; std::vector<Opinion,std::allocator<Opinion> >::operator[], COMDAT
; _this$ = ecx

; 774  : 		{	// subscript mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 775  : 
; 776  :  #if _HAS_ITERATOR_DEBUGGING
; 777  : 		if (size() <= _Pos)
; 778  : 			{
; 779  : 			_DEBUG_ERROR("vector subscript out of range");
; 780  : 			_SCL_SECURE_OUT_OF_RANGE;
; 781  : 			}
; 782  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 783  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 784  : 
; 785  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR __Pos$[ebp]
	imul	eax, 84					; 00000054H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]

; 786  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAUOpinion@@I@Z ENDP ; std::vector<Opinion,std::allocator<Opinion> >::operator[]
_TEXT	ENDS
PUBLIC	?insert@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@V?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@ABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::insert
PUBLIC	??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<Opinion *,unsigned int,Opinion,std::allocator<Opinion> >
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z
_TEXT	SEGMENT
tv129 = -64						; size = 4
_this$ = -60						; size = 4
$T256944 = -32						; size = 4
$T256934 = -28						; size = 4
$T256924 = -24						; size = 4
__Cat$256932 = -19					; size = 1
$T256930 = -18						; size = 1
$T256929 = -17						; size = 1
$T256901 = -16						; size = 4
$T256897 = -12						; size = 4
$T256896 = -8						; size = 4
$T256895 = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z PROC ; std::vector<Opinion,std::allocator<Opinion> >::push_back, COMDAT
; _this$ = ecx

; 809  : 		{	// insert element at end

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	mov	DWORD PTR _this$[ebp], ecx

; 810  : 		if (size() < capacity())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	mov	DWORD PTR $T256901[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], 0
	jne	SHORT $LN9@push_back
	mov	DWORD PTR tv129[ebp], 0
	jmp	SHORT $LN7@push_back
$LN9@push_back:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	mov	DWORD PTR tv129[ebp], eax
$LN7@push_back:
	mov	edx, DWORD PTR $T256901[ebp]
	cmp	edx, DWORD PTR tv129[ebp]
	jae	SHORT $LN2@push_back

; 811  : 
; 812  :  #if _HAS_ITERATOR_DEBUGGING
; 813  : 			{ // room at end, construct it there
; 814  : 			_Orphan_range(_Mylast, _Mylast);
; 815  : 			_Mylast = _Ufill(_Mylast, 1, _Val);
; 816  : 			}
; 817  : 
; 818  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 819  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T256934[ebp], ecx
	mov	edx, DWORD PTR $T256934[ebp]
	mov	DWORD PTR $T256924[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T256929[ebp], al
	mov	cl, BYTE PTR __Cat$256932[ebp]
	mov	BYTE PTR $T256930[ebp], cl
	movzx	edx, BYTE PTR $T256929[ebp]
	push	edx
	movzx	eax, BYTE PTR $T256930[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR $T256924[ebp]
	push	eax
	call	??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<Opinion *,unsigned int,Opinion,std::allocator<Opinion> >
	add	esp, 24					; 00000018H
	mov	ecx, 1
	imul	ecx, 84					; 00000054H
	add	ecx, DWORD PTR $T256934[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 820  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 821  : 
; 822  : 		else

	jmp	SHORT $LN3@push_back
$LN2@push_back:

; 823  : 			insert(end(), _Val);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T256944[ebp], ecx
	mov	edx, DWORD PTR $T256944[ebp]
	mov	DWORD PTR $T256896[ebp], edx
	mov	eax, DWORD PTR $T256896[ebp]
	mov	DWORD PTR $T256895[ebp], eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T256895[ebp]
	push	edx
	lea	eax, DWORD PTR $T256897[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@V?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@ABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::insert
$LN3@push_back:

; 824  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ENDP ; std::vector<Opinion,std::allocator<Opinion> >::push_back
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<CvString,std::allocator<CvString> >::~_Vector_val<CvString,std::allocator<CvString> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<CvString,std::allocator<CvString> >::~_Vector_val<CvString,std::allocator<CvString> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Tree_val@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_val@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_val@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<enum PolicyTypes,std::allocator<enum PolicyTypes> >::~_Vector_val<enum PolicyTypes,std::allocator<enum PolicyTypes> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<enum PolicyTypes,std::allocator<enum PolicyTypes> >::~_Vector_val<enum PolicyTypes,std::allocator<enum PolicyTypes> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<Opinion,std::allocator<Opinion> >::~_Vector_val<Opinion,std::allocator<Opinion> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<Opinion,std::allocator<Opinion> >::~_Vector_val<Opinion,std::allocator<Opinion> >
_TEXT	ENDS
PUBLIC	??$_Allocate@VCvString@@@std@@YAPAVCvString@@IPAV1@@Z ; std::_Allocate<CvString>
PUBLIC	?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ ; std::vector<CvString,std::allocator<CvString> >::_Xlen
; Function compile flags: /Odtp
;	COMDAT ?_Buy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
tv94 = -96						; size = 4
_this$ = -92						; size = 4
__Count$257074 = -4					; size = 4
__Capacity$ = 8						; size = 4
?_Buy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAE_NI@Z PROC ; std::vector<CvString,std::allocator<CvString> >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	mov	DWORD PTR _this$[ebp], ecx

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 1104 : 		if (_Capacity == 0)

	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN4@Buy

; 1105 : 			return (false);

	xor	al, al
	jmp	SHORT $LN5@Buy
	jmp	SHORT $LN3@Buy
$LN4@Buy:

; 1106 : 		else if (max_size() < _Capacity)

	mov	DWORD PTR __Count$257074[ebp], 153391689 ; 09249249H
	cmp	DWORD PTR __Count$257074[ebp], 0
	jbe	SHORT $LN11@Buy
	mov	eax, DWORD PTR __Count$257074[ebp]
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN7@Buy
$LN11@Buy:
	mov	DWORD PTR tv94[ebp], 1
$LN7@Buy:
	mov	ecx, DWORD PTR tv94[ebp]
	cmp	ecx, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN23@Buy

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ ; std::vector<CvString,std::allocator<CvString> >::_Xlen

; 1108 : 		else

	jmp	SHORT $LN3@Buy

; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

$LN23@Buy:
	push	0
	mov	edx, DWORD PTR __Capacity$[ebp]
	push	edx
	call	??$_Allocate@VCvString@@@std@@YAPAVCvString@@IPAV1@@Z ; std::_Allocate<CvString>
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+8], ecx

; 1112 : 			_Myend = _Myfirst + _Capacity;

	mov	edx, DWORD PTR __Capacity$[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], edx
$LN3@Buy:

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
$LN5@Buy:

; 1115 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<CvString,std::allocator<CvString> >::_Buy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -40						; size = 4
$T257204 = -36						; size = 4
$T257203 = -32						; size = 4
$T257199 = -28						; size = 4
$T257198 = -24						; size = 4
$T257175 = -20						; size = 4
$T257174 = -16						; size = 4
$T257153 = -12						; size = 4
$T257152 = -8						; size = 4
__Cat$257181 = -2					; size = 1
$T257178 = -1						; size = 1
?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ PROC ; std::vector<CvString,std::allocator<CvString> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	DWORD PTR _this$[ebp], ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	$LN1@Tidy

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T257199[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T257198[ebp], ecx
	mov	edx, DWORD PTR $T257199[ebp]
	mov	DWORD PTR $T257175[ebp], edx
	mov	eax, DWORD PTR $T257198[ebp]
	mov	DWORD PTR $T257174[ebp], eax
	mov	cl, BYTE PTR __Cat$257181[ebp]
	mov	BYTE PTR $T257178[ebp], cl
	mov	edx, DWORD PTR $T257175[ebp]
	mov	DWORD PTR $T257153[ebp], edx
	mov	eax, DWORD PTR $T257174[ebp]
	mov	DWORD PTR $T257152[ebp], eax
	jmp	SHORT $LN12@Tidy
$LN11@Tidy:
	mov	ecx, DWORD PTR $T257152[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR $T257152[ebp], ecx
$LN12@Tidy:
	mov	edx, DWORD PTR $T257152[ebp]
	cmp	edx, DWORD PTR $T257153[ebp]
	je	SHORT $LN4@Tidy
	mov	ecx, DWORD PTR $T257152[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	xor	eax, eax
	and	eax, 1
	je	SHORT $LN15@Tidy
	mov	ecx, DWORD PTR $T257152[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN15@Tidy:
	jmp	SHORT $LN11@Tidy
$LN4@Tidy:

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	mov	eax, ecx
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR $T257204[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T257203[ebp], eax
	mov	ecx, DWORD PTR $T257203[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@Tidy:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 1135 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ ENDP ; std::vector<CvString,std::allocator<CvString> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -92						; size = 4
$T257447 = -88						; size = 4
$T257413 = -84						; size = 4
$T257246 = -32						; size = 4
$T257233 = -28						; size = 4
$T257221 = -24						; size = 4
$T257211 = -20						; size = 4
$T257210 = -16						; size = 4
$T257209 = -12						; size = 4
$T257208 = -8						; size = 4
$T257207 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1420 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	mov	DWORD PTR _this$[ebp], ecx

; 1421 : 		erase(begin(), end());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T257221[ebp], ecx
	mov	edx, DWORD PTR $T257221[ebp]
	mov	DWORD PTR $T257208[ebp], edx
	mov	eax, DWORD PTR $T257208[ebp]
	mov	DWORD PTR $T257207[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T257233[ebp], edx
	mov	eax, DWORD PTR $T257233[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T257246[ebp], ecx
	mov	edx, DWORD PTR $T257246[ebp]
	mov	DWORD PTR $T257210[ebp], edx
	mov	eax, DWORD PTR $T257210[ebp]
	mov	DWORD PTR $T257209[ebp], eax
	mov	ecx, DWORD PTR $T257207[ebp]
	push	ecx
	mov	edx, DWORD PTR $T257209[ebp]
	push	edx
	lea	eax, DWORD PTR $T257211[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase

; 1422 : 		this->_Alptr.destroy(&_Left(_Myhead));

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T257413[ebp], edx

; 1423 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1424 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1425 : 		this->_Alnod.deallocate(_Myhead, 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T257447[ebp], ecx
	mov	edx, DWORD PTR $T257447[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1426 : 		_Myhead = 0, _Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0

; 1427 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Tidy
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
_TEXT	ENDS
;	COMDAT ??1?$BaseVector@UTradeConnectionPlot@@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$BaseVector@UTradeConnectionPlot@@$0A@@@QAE@XZ PROC	; BaseVector<TradeConnectionPlot,0>::~BaseVector<TradeConnectionPlot,0>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$BaseVector@UTradeConnectionPlot@@$0A@@@QAE@XZ ENDP	; BaseVector<TradeConnectionPlot,0>::~BaseVector<TradeConnectionPlot,0>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -36						; size = 4
$T257518 = -32						; size = 4
$T257517 = -28						; size = 4
$T257513 = -24						; size = 4
$T257512 = -20						; size = 4
$T257494 = -16						; size = 4
$T257493 = -12						; size = 4
$T257477 = -8						; size = 4
__Cat$257500 = -2					; size = 1
$T257498 = -1						; size = 1
?_Tidy@?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@IAEXXZ PROC ; std::vector<enum PolicyTypes,std::allocator<enum PolicyTypes> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Tidy@2

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T257513[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T257512[ebp], ecx
	mov	edx, DWORD PTR $T257513[ebp]
	mov	DWORD PTR $T257494[ebp], edx
	mov	eax, DWORD PTR $T257512[ebp]
	mov	DWORD PTR $T257493[ebp], eax
	mov	cl, BYTE PTR __Cat$257500[ebp]
	mov	BYTE PTR $T257498[ebp], cl
	mov	edx, DWORD PTR $T257493[ebp]
	mov	DWORD PTR $T257477[ebp], edx
	jmp	SHORT $LN12@Tidy@2
$LN11@Tidy@2:
	mov	eax, DWORD PTR $T257477[ebp]
	add	eax, 4
	mov	DWORD PTR $T257477[ebp], eax
$LN12@Tidy@2:
	mov	ecx, DWORD PTR $T257477[ebp]
	cmp	ecx, DWORD PTR $T257494[ebp]
	je	SHORT $LN4@Tidy@2
	jmp	SHORT $LN11@Tidy@2
$LN4@Tidy@2:

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	mov	DWORD PTR $T257518[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T257517[ebp], eax
	mov	ecx, DWORD PTR $T257517[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@Tidy@2:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 1135 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@IAEXXZ ENDP ; std::vector<enum PolicyTypes,std::allocator<enum PolicyTypes> >::_Tidy
_TEXT	ENDS
PUBLIC	??1?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QAE@XZ ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ$0
__ehfuncinfo$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T257531 = -20						; size = 4
_pRet$257527 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ PROC ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 800			; 00000320H

; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T257531[ebp], edx
	cmp	DWORD PTR $T257531[ebp], 800		; 00000320H
	jbe	SHORT $LN7@FStaticVec@3
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	eax, DWORD PTR $T257531[ebp]
	shl	eax, 3
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$257527[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T257531[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN8@FStaticVec@3
$LN7@FStaticVec@3:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pRet$257527[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 800			; 00000320H
$LN8@FStaticVec@3:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pRet$257527[ebp]
	mov	DWORD PTR [edx], eax

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QAE@XZ ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>
__ehhandler$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ ENDP ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ$0
__ehfuncinfo$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T257562 = -24						; size = 4
$T257561 = -20						; size = 4
_i$257556 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ PROC ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::~FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>, COMDAT
; _this$ = ecx

; 617  : 	~FStaticVector(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T257562[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T257561[ebp], eax
	xor	ecx, ecx
	je	SHORT $LN5@FStaticVec@4
	xor	edx, edx
	je	SHORT $LN5@FStaticVec@4
	mov	DWORD PTR _i$257556[ebp], 0
	jmp	SHORT $LN10@FStaticVec@4
$LN9@FStaticVec@4:
	mov	eax, DWORD PTR _i$257556[ebp]
	add	eax, 1
	mov	DWORD PTR _i$257556[ebp], eax
$LN10@FStaticVec@4:
	mov	ecx, DWORD PTR _i$257556[ebp]
	cmp	ecx, DWORD PTR $T257562[ebp]
	jae	SHORT $LN5@FStaticVec@4
	jmp	SHORT $LN9@FStaticVec@4
$LN5@FStaticVec@4:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	cmp	DWORD PTR $T257561[ebp], edx
	je	SHORT $LN1@FStaticVec@4
	mov	eax, DWORD PTR $T257561[ebp]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN1@FStaticVec@4:

; 619  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QAE@XZ ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>
__ehhandler$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ ENDP ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::~FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>
PUBLIC	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::GrowSize
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@Z
_TEXT	SEGMENT
tv157 = -64						; size = 4
tv149 = -60						; size = 4
_this$ = -56						; size = 4
$T257575 = -8						; size = 4
$T257574 = -4						; size = 4
_element$ = 8						; size = 4
?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@Z PROC ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	mov	DWORD PTR _this$[ebp], ecx

; 677  : 		m_bIsResized = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+6412], 0

; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN39@push_back@2

; 679  : 			GrowSize(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::GrowSize

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

$LN39@push_back@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR $T257575[ebp], ecx
	cmp	DWORD PTR $T257575[ebp], 0
	je	SHORT $LN4@push_back@2
	mov	edx, DWORD PTR $T257575[ebp]
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T257575[ebp]
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	edx, DWORD PTR $T257575[ebp]
	mov	DWORD PTR tv149[ebp], edx
	jmp	SHORT $LN5@push_back@2
$LN4@push_back@2:
	mov	DWORD PTR tv149[ebp], 0
$LN5@push_back@2:
	mov	eax, DWORD PTR tv149[ebp]
	mov	DWORD PTR $T257574[ebp], eax

; 681  : 		return m_uiCurrSize++;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv157[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR tv157[ebp]

; 682  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@Z ENDP ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::push_back
_TEXT	ENDS
PUBLIC	?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::_Insert_n
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?insert@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@V?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@ABUOpinion@@@Z
_TEXT	SEGMENT
tv77 = -32						; size = 4
_this$ = -28						; size = 4
__Tmp$257681 = -24					; size = 4
$T257664 = -20						; size = 4
$T257645 = -16						; size = 4
$T257632 = -12						; size = 4
$T257629 = -8						; size = 4
__Off$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@V?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@ABUOpinion@@@Z PROC ; std::vector<Opinion,std::allocator<Opinion> >::insert, COMDAT
; _this$ = ecx

; 875  : 		{	// insert _Val at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	test	eax, eax
	jne	SHORT $LN3@insert
	mov	DWORD PTR tv77[ebp], 0
	jmp	SHORT $LN4@insert
$LN3@insert:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T257645[ebp], eax
	mov	ecx, DWORD PTR $T257645[ebp]
	mov	DWORD PTR $T257629[ebp], ecx
	mov	eax, DWORD PTR __Where$[ebp]
	sub	eax, DWORD PTR $T257629[ebp]
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	mov	DWORD PTR tv77[ebp], eax
$LN4@insert:
	mov	edx, DWORD PTR tv77[ebp]
	mov	DWORD PTR __Off$[ebp], edx

; 877  : 		_Insert_n(_Where, (size_type)1, _Val);

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::_Insert_n

; 878  : 		return (begin() + _Off);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T257664[ebp], eax
	mov	ecx, DWORD PTR $T257664[ebp]
	mov	DWORD PTR $T257632[ebp], ecx
	mov	edx, DWORD PTR $T257632[ebp]
	mov	DWORD PTR __Tmp$257681[ebp], edx
	mov	eax, DWORD PTR __Off$[ebp]
	imul	eax, 84					; 00000054H
	add	eax, DWORD PTR __Tmp$257681[ebp]
	mov	DWORD PTR __Tmp$257681[ebp], eax
	mov	ecx, DWORD PTR __Tmp$257681[ebp]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 879  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insert@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@V?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@ABUOpinion@@@Z ENDP ; std::vector<Opinion,std::allocator<Opinion> >::insert
_TEXT	ENDS
PUBLIC	??$_Allocate@UOpinion@@@std@@YAPAUOpinion@@IPAU1@@Z ; std::_Allocate<Opinion>
PUBLIC	?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ ; std::vector<Opinion,std::allocator<Opinion> >::_Xlen
; Function compile flags: /Odtp
;	COMDAT ?_Buy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
tv94 = -96						; size = 4
_this$ = -92						; size = 4
__Count$257701 = -4					; size = 4
__Capacity$ = 8						; size = 4
?_Buy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAE_NI@Z PROC ; std::vector<Opinion,std::allocator<Opinion> >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	mov	DWORD PTR _this$[ebp], ecx

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 1104 : 		if (_Capacity == 0)

	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN4@Buy@2

; 1105 : 			return (false);

	xor	al, al
	jmp	SHORT $LN5@Buy@2
	jmp	SHORT $LN3@Buy@2
$LN4@Buy@2:

; 1106 : 		else if (max_size() < _Capacity)

	mov	DWORD PTR __Count$257701[ebp], 51130563	; 030c30c3H
	cmp	DWORD PTR __Count$257701[ebp], 0
	jbe	SHORT $LN11@Buy@2
	mov	eax, DWORD PTR __Count$257701[ebp]
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN7@Buy@2
$LN11@Buy@2:
	mov	DWORD PTR tv94[ebp], 1
$LN7@Buy@2:
	mov	ecx, DWORD PTR tv94[ebp]
	cmp	ecx, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN23@Buy@2

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ ; std::vector<Opinion,std::allocator<Opinion> >::_Xlen

; 1108 : 		else

	jmp	SHORT $LN3@Buy@2

; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

$LN23@Buy@2:
	push	0
	mov	edx, DWORD PTR __Capacity$[ebp]
	push	edx
	call	??$_Allocate@UOpinion@@@std@@YAPAUOpinion@@IPAU1@@Z ; std::_Allocate<Opinion>
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+8], ecx

; 1112 : 			_Myend = _Myfirst + _Capacity;

	mov	edx, DWORD PTR __Capacity$[ebp]
	imul	edx, 84					; 00000054H
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], edx
$LN3@Buy@2:

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
$LN5@Buy@2:

; 1115 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<Opinion,std::allocator<Opinion> >::_Buy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -40						; size = 4
$T257833 = -36						; size = 4
$T257832 = -32						; size = 4
$T257828 = -28						; size = 4
$T257827 = -24						; size = 4
$T257804 = -20						; size = 4
$T257803 = -16						; size = 4
$T257782 = -12						; size = 4
$T257781 = -8						; size = 4
__Cat$257811 = -2					; size = 1
$T257809 = -1						; size = 1
?_Tidy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXXZ PROC ; std::vector<Opinion,std::allocator<Opinion> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	DWORD PTR _this$[ebp], ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	$LN1@Tidy@3

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T257828[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T257827[ebp], ecx
	mov	edx, DWORD PTR $T257828[ebp]
	mov	DWORD PTR $T257804[ebp], edx
	mov	eax, DWORD PTR $T257827[ebp]
	mov	DWORD PTR $T257803[ebp], eax
	mov	cl, BYTE PTR __Cat$257811[ebp]
	mov	BYTE PTR $T257809[ebp], cl
	mov	edx, DWORD PTR $T257804[ebp]
	mov	DWORD PTR $T257782[ebp], edx
	mov	eax, DWORD PTR $T257803[ebp]
	mov	DWORD PTR $T257781[ebp], eax
	jmp	SHORT $LN12@Tidy@3
$LN11@Tidy@3:
	mov	ecx, DWORD PTR $T257781[ebp]
	add	ecx, 84					; 00000054H
	mov	DWORD PTR $T257781[ebp], ecx
$LN12@Tidy@3:
	mov	edx, DWORD PTR $T257781[ebp]
	cmp	edx, DWORD PTR $T257782[ebp]
	je	SHORT $LN4@Tidy@3
	mov	ecx, DWORD PTR $T257781[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	xor	eax, eax
	and	eax, 1
	je	SHORT $LN15@Tidy@3
	mov	ecx, DWORD PTR $T257781[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN15@Tidy@3:
	jmp	SHORT $LN11@Tidy@3
$LN4@Tidy@3:

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	mov	eax, ecx
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	mov	DWORD PTR $T257833[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T257832[ebp], eax
	mov	ecx, DWORD PTR $T257832[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@Tidy@3:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 1135 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXXZ ENDP ; std::vector<Opinion,std::allocator<Opinion> >::_Tidy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ??1?$auto_ptr@VICvUnknown@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_inst$257841 = -8					; size = 4
$T257836 = -4						; size = 4
??1?$auto_ptr@VICvUnknown@@@std@@QAE@XZ PROC		; std::auto_ptr<ICvUnknown>::~auto_ptr<ICvUnknown>, COMDAT
; _this$ = ecx

; 720  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 721  : 		delete _Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T257836[ebp], ecx
	cmp	DWORD PTR $T257836[ebp], 0
	je	SHORT $LN1@auto_ptr@2
	mov	edx, DWORD PTR $T257836[ebp]
	mov	DWORD PTR _inst$257841[ebp], edx
	mov	eax, DWORD PTR _inst$257841[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$257841[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN1@auto_ptr@2:

; 722  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$auto_ptr@VICvUnknown@@@std@@QAE@XZ ENDP		; std::auto_ptr<ICvUnknown>::~auto_ptr<ICvUnknown>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?erase@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@0@Z
_TEXT	SEGMENT
_this$ = -72						; size = 4
$T258026 = -68						; size = 4
$T258003 = -64						; size = 4
$T258002 = -60						; size = 4
$T257981 = -56						; size = 4
$T257980 = -52						; size = 4
__Cat$258011 = -46					; size = 1
$T258007 = -45						; size = 1
$T257929 = -44						; size = 4
$T257928 = -40						; size = 4
$T257927 = -36						; size = 4
$T257908 = -30						; size = 1
$T257907 = -29						; size = 1
$T257906 = -28						; size = 4
$T257905 = -24						; size = 4
__Cat$257916 = -16					; size = 1
$T257913 = -15						; size = 1
$T257912 = -14						; size = 1
$T257911 = -13						; size = 1
__Ptr$236650 = -12					; size = 4
__Last$ = -8						; size = 4
__First$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@0@Z PROC ; std::vector<CvString,std::allocator<CvString> >::erase, COMDAT
; _this$ = ecx

; 1028 : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	mov	DWORD PTR _this$[ebp], ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);

	mov	eax, DWORD PTR __First_arg$[ebp]
	mov	DWORD PTR __First$[ebp], eax

; 1030 : 		iterator _Last = _Make_iter(_Last_arg);

	mov	ecx, DWORD PTR __Last_arg$[ebp]
	mov	DWORD PTR __Last$[ebp], ecx

; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	edx, DWORD PTR __First$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR __Last$[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	$LN1@erase

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T257929[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T257928[ebp], edx
	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T257927[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T257911[ebp], cl
	mov	dl, BYTE PTR __Cat$257916[ebp]
	mov	BYTE PTR $T257912[ebp], dl
	mov	al, BYTE PTR $T257911[ebp]
	mov	BYTE PTR $T257908[ebp], al
	mov	cl, BYTE PTR $T257913[ebp]
	mov	BYTE PTR $T257907[ebp], cl
	mov	edx, DWORD PTR $T257929[ebp]
	mov	DWORD PTR $T257906[ebp], edx
	mov	eax, DWORD PTR $T257927[ebp]
	mov	DWORD PTR $T257905[ebp], eax
	jmp	SHORT $LN28@erase
$LN27@erase:
	mov	ecx, DWORD PTR $T257906[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR $T257906[ebp], ecx
	mov	edx, DWORD PTR $T257905[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR $T257905[ebp], edx
$LN28@erase:
	mov	eax, DWORD PTR $T257905[ebp]
	cmp	eax, DWORD PTR $T257928[ebp]
	je	SHORT $LN20@erase
	mov	ecx, DWORD PTR $T257905[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T257906[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	jmp	SHORT $LN27@erase
$LN20@erase:
	mov	edx, DWORD PTR $T257906[ebp]
	mov	DWORD PTR __Ptr$236650[ebp], edx

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T258026[ebp], ecx
	mov	edx, DWORD PTR $T258026[ebp]
	mov	DWORD PTR $T258003[ebp], edx
	mov	eax, DWORD PTR __Ptr$236650[ebp]
	mov	DWORD PTR $T258002[ebp], eax
	mov	cl, BYTE PTR __Cat$258011[ebp]
	mov	BYTE PTR $T258007[ebp], cl
	mov	edx, DWORD PTR $T258003[ebp]
	mov	DWORD PTR $T257981[ebp], edx
	mov	eax, DWORD PTR $T258002[ebp]
	mov	DWORD PTR $T257980[ebp], eax
	jmp	SHORT $LN41@erase
$LN40@erase:
	mov	ecx, DWORD PTR $T257980[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR $T257980[ebp], ecx
$LN41@erase:
	mov	edx, DWORD PTR $T257980[ebp]
	cmp	edx, DWORD PTR $T257981[ebp]
	je	SHORT $LN33@erase
	mov	ecx, DWORD PTR $T257980[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	xor	eax, eax
	and	eax, 1
	je	SHORT $LN44@erase
	mov	ecx, DWORD PTR $T257980[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN44@erase:
	jmp	SHORT $LN40@erase
$LN33@erase:

; 1049 : 			_Mylast = _Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$236650[ebp]
	mov	DWORD PTR [edx+8], eax
$LN1@erase:

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1055 : #endif
; 1056 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@0@Z ENDP ; std::vector<CvString,std::allocator<CvString> >::erase
_TEXT	ENDS
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
EXTRN	__imp_??0exception@std@@QAE@XZ:PROC
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:PROC		; std::length_error::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_Elength_error@std@@UAEPAXI@Z ; std::length_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_Elogic_error@std@@UAEPAXI@Z ; std::logic_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T258030 = -80						; size = 28
$T258029 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ PROC ; std::vector<CvString,std::allocator<CvString> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T258030[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T258029[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR $T258029[ebp], OFFSET ??_7logic_error@std@@6B@
	lea	eax, DWORD PTR $T258030[ebp]
	push	eax
	lea	ecx, DWORD PTR $T258029[ebp+12]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T258029[ebp], OFFSET ??_7length_error@std@@6B@
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T258029[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T258030[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@Xlen:

; 1261 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T258030[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T258029[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ ENDP ; std::vector<CvString,std::allocator<CvString> >::_Xlen
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?what@logic_error@std@@UBEPBDXZ PROC			; std::logic_error::what, COMDAT
; _this$ = ecx

; 34   : 		{	// return pointer to message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 35   : 		return (_Str.c_str());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 36   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN1@scalar
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1length_error@std@@UAE@XZ PROC			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 109  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@

; 110  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC			; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	edx, DWORD PTR ___flags$[ebp]
	and	edx, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::clear
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z
_TEXT	SEGMENT
_this$ = -76						; size = 4
$T258301 = -72						; size = 4
$T258295 = -68						; size = 4
__Tmp$258283 = -48					; size = 4
$T258211 = -44						; size = 4
$T258198 = -40						; size = 4
$T258128 = -28						; size = 4
$T258105 = -24						; size = 4
$T258092 = -20						; size = 4
$T258086 = -16						; size = 4
$T258085 = -12						; size = 4
$T258084 = -8						; size = 4
$T258083 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase, COMDAT
; _this$ = ecx

; 934  : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	mov	DWORD PTR _this$[ebp], ecx

; 935  : 		if (_First == begin() && _Last == end())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T258092[ebp], ecx
	mov	edx, DWORD PTR $T258092[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T258105[ebp], eax
	mov	ecx, DWORD PTR $T258105[ebp]
	mov	DWORD PTR $T258083[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR $T258083[ebp]
	sete	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN72@erase@2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T258128[ebp], eax
	mov	ecx, DWORD PTR $T258128[ebp]
	mov	DWORD PTR $T258084[ebp], ecx
	mov	edx, DWORD PTR __Last$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR $T258084[ebp]
	sete	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN72@erase@2

; 936  : 			{	// erase all
; 937  : 			clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::clear

; 938  : 			return (begin());

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T258198[ebp], eax
	mov	ecx, DWORD PTR $T258198[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T258211[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR $T258211[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@erase@2

; 939  : 			}
; 940  : 		else

	jmp	SHORT $LN5@erase@2

; 941  : 			{	// partial erase, one at a time
; 942  : 			while (_First != _Last)

$LN72@erase@2:
	mov	edx, DWORD PTR __First$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR __Last$[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN1@erase@2

; 943  : 				erase(_First++);

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Tmp$258283[ebp], eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::_Inc
	mov	ecx, DWORD PTR __Tmp$258283[ebp]
	mov	DWORD PTR $T258085[ebp], ecx
	mov	edx, DWORD PTR $T258085[ebp]
	push	edx
	lea	eax, DWORD PTR $T258086[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase
	jmp	SHORT $LN72@erase@2
$LN1@erase@2:

; 944  : 			return (_Make_iter(_First));

	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T258301[ebp], ecx
	mov	edx, DWORD PTR $T258301[ebp]
	mov	DWORD PTR $T258295[ebp], edx
	mov	eax, DWORD PTR $T258295[ebp]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@erase@2:

; 945  : 			}
; 946  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T258338 = -16						; size = 4
$T258317 = -12						; size = 4
$T258310 = -8						; size = 4
__Pnode$236739 = -4					; size = 4
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 377  : 			{	// move to node with next larger value

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 378  : 
; 379  :  #if _HAS_ITERATOR_DEBUGGING
; 380  : 			if (this->_Mycont == 0
; 381  : 				|| _Ptr == 0
; 382  : 				|| _Isnil(_Ptr))
; 383  : 				{
; 384  : 				_DEBUG_ERROR("map/set iterator not incrementable");
; 385  : 				_SCL_SECURE_OUT_OF_RANGE;
; 386  : 				}
; 387  :  #else
; 388  : 			_SCL_SECURE_VALIDATE(this->_Has_container());
; 389  : 			if (_Isnil(_Ptr))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx+21]
	test	edx, edx
	je	SHORT $LN6@Inc
	jmp	$LN7@Inc
$LN6@Inc:

; 390  : 				{
; 391  : 				_SCL_SECURE_OUT_OF_RANGE;
; 392  : 				// end() shouldn't be incremented, don't move if _SCL_SECURE is not turned on
; 393  : 				}
; 394  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 395  : 
; 396  : 			else if (!_Isnil(_Right(_Ptr)))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 8
	mov	DWORD PTR $T258310[ebp], ecx
	mov	edx, DWORD PTR $T258310[ebp]
	mov	eax, DWORD PTR [edx]
	movsx	ecx, BYTE PTR [eax+21]
	test	ecx, ecx
	jne	SHORT $LN27@Inc

; 397  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 8
	mov	DWORD PTR $T258317[ebp], eax
	mov	ecx, DWORD PTR $T258317[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T258338[ebp], edx
$LN23@Inc:
	mov	eax, DWORD PTR $T258338[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx+21]
	test	edx, edx
	jne	SHORT $LN19@Inc
	mov	eax, DWORD PTR $T258338[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T258338[ebp], ecx
	jmp	SHORT $LN23@Inc
$LN19@Inc:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T258338[ebp]
	mov	DWORD PTR [edx], eax

; 398  : 			else

	jmp	SHORT $LN7@Inc

; 399  : 				{	// climb looking for right subtree
; 400  : 				_Nodeptr _Pnode;
; 401  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 402  : 					&& _Ptr == _Right(_Pnode))

$LN27@Inc:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Pnode$236739[ebp], eax
	mov	ecx, DWORD PTR __Pnode$236739[ebp]
	movsx	edx, BYTE PTR [ecx+21]
	test	edx, edx
	jne	SHORT $LN1@Inc
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$236739[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN1@Inc

; 403  : 					_Ptr = _Pnode;	// ==> parent while right subtree

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$236739[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN27@Inc
$LN1@Inc:

; 404  : 				_Ptr = _Pnode;	// ==> parent (head if end())

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$236739[ebp]
	mov	DWORD PTR [edx], eax
$LN7@Inc:

; 405  : 				}
; 406  : 			}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::_Inc
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z
_TEXT	SEGMENT
tv186 = -52						; size = 4
_this$ = -48						; size = 4
$T258390 = -44						; size = 4
$T258389 = -40						; size = 4
_i$258385 = -36						; size = 4
$T258368 = -32						; size = 4
$T258361 = -28						; size = 4
_pRet$258357 = -24					; size = 4
$T258351 = -20						; size = 4
$T258350 = -16						; size = 4
_i$236757 = -12						; size = 4
_uiNewSize$236749 = -8					; size = 4
_pTemp$ = -4						; size = 4
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z PROC ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	DWORD PTR _this$[ebp], ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN8@GrowSize
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1
$LN8@GrowSize:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jb	SHORT $LN7@GrowSize

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shl	edx, 1
	mov	DWORD PTR _uiNewSize$236749[ebp], edx

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _uiNewSize$236749[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN6@GrowSize

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	mov	DWORD PTR [edx+8], eax

; 754  : 				break;

	jmp	SHORT $LN7@GrowSize
$LN6@GrowSize:

; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _uiNewSize$236749[ebp]
	mov	DWORD PTR [ecx+8], edx

; 759  : 		}

	jmp	SHORT $LN8@GrowSize
$LN7@GrowSize:

; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T258361[ebp], ecx
	cmp	DWORD PTR $T258361[ebp], 800		; 00000320H
	jbe	SHORT $LN16@GrowSize
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	edx, DWORD PTR $T258361[ebp]
	shl	edx, 3
	push	edx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$258357[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T258361[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN17@GrowSize
$LN16@GrowSize:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _pRet$258357[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 800			; 00000320H
$LN17@GrowSize:
	mov	ecx, DWORD PTR _pRet$258357[ebp]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 762  : 		if( bPODType ){

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@GrowSize

; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pTemp$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 764  : 		}else{

	jmp	SHORT $LN4@GrowSize
$LN5@GrowSize:

; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	mov	DWORD PTR _i$236757[ebp], 0
	jmp	SHORT $LN3@GrowSize
$LN2@GrowSize:
	mov	edx, DWORD PTR _i$236757[ebp]
	add	edx, 1
	mov	DWORD PTR _i$236757[ebp], edx
$LN3@GrowSize:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$236757[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN4@GrowSize

; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);

	mov	edx, DWORD PTR _i$236757[ebp]
	mov	eax, DWORD PTR _pTemp$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	mov	DWORD PTR $T258351[ebp], ecx
	cmp	DWORD PTR $T258351[ebp], 0
	je	SHORT $LN12@GrowSize
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _i$236757[ebp]
	lea	edx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR $T258368[ebp], edx
	mov	eax, DWORD PTR $T258351[ebp]
	mov	ecx, DWORD PTR $T258368[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR $T258351[ebp]
	mov	ecx, DWORD PTR $T258368[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR $T258351[ebp]
	mov	DWORD PTR tv186[ebp], eax
	jmp	SHORT $LN13@GrowSize
$LN12@GrowSize:
	mov	DWORD PTR tv186[ebp], 0
$LN13@GrowSize:
	mov	ecx, DWORD PTR tv186[ebp]
	mov	DWORD PTR $T258350[ebp], ecx
	jmp	SHORT $LN2@GrowSize
$LN4@GrowSize:

; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T258390[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T258389[ebp], edx
	xor	eax, eax
	je	SHORT $LN24@GrowSize
	xor	ecx, ecx
	je	SHORT $LN24@GrowSize
	mov	DWORD PTR _i$258385[ebp], 0
	jmp	SHORT $LN29@GrowSize
$LN28@GrowSize:
	mov	edx, DWORD PTR _i$258385[ebp]
	add	edx, 1
	mov	DWORD PTR _i$258385[ebp], edx
$LN29@GrowSize:
	mov	eax, DWORD PTR _i$258385[ebp]
	cmp	eax, DWORD PTR $T258390[ebp]
	jae	SHORT $LN24@GrowSize
	jmp	SHORT $LN28@GrowSize
$LN24@GrowSize:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	cmp	DWORD PTR $T258389[ebp], ecx
	je	SHORT $LN25@GrowSize
	mov	edx, DWORD PTR $T258389[ebp]
	push	edx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN25@GrowSize:

; 769  : 		m_pData = pTemp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR [eax], ecx

; 770  : 
; 771  : 		m_bIsResized = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+6412], 1

; 772  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z ENDP ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::GrowSize
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GrowSizeToFit@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z
_TEXT	SEGMENT
tv158 = -48						; size = 4
_this$ = -44						; size = 4
$T258434 = -40						; size = 4
$T258433 = -36						; size = 4
_i$258429 = -32						; size = 4
$T258412 = -28						; size = 4
$T258405 = -24						; size = 4
_pRet$258401 = -20					; size = 4
$T258395 = -16						; size = 4
$T258394 = -12						; size = 4
_i$236776 = -8						; size = 4
_pTemp$ = -4						; size = 4
_uiFit$ = 8						; size = 4
?GrowSizeToFit@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z PROC ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::GrowSizeToFit, COMDAT
; _this$ = ecx

; 776  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	mov	DWORD PTR _this$[ebp], ecx

; 777  : 		if( uiFit <= m_uiCurrMaxSize )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _uiFit$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	ja	SHORT $LN6@GrowSizeTo

; 778  : 			return;

	jmp	$LN7@GrowSizeTo
$LN6@GrowSizeTo:

; 779  : 
; 780  : 		m_uiCurrMaxSize = uiFit;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	mov	DWORD PTR [edx+8], eax

; 781  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T258405[ebp], edx
	cmp	DWORD PTR $T258405[ebp], 800		; 00000320H
	jbe	SHORT $LN13@GrowSizeTo
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	eax, DWORD PTR $T258405[ebp]
	shl	eax, 3
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$258401[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T258405[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN14@GrowSizeTo
$LN13@GrowSizeTo:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pRet$258401[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 800			; 00000320H
$LN14@GrowSizeTo:
	mov	edx, DWORD PTR _pRet$258401[ebp]
	mov	DWORD PTR _pTemp$[ebp], edx

; 782  : 		if( bPODType ){

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN5@GrowSizeTo

; 783  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	shl	edx, 3
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pTemp$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 784  : 		}else{

	jmp	SHORT $LN4@GrowSizeTo
$LN5@GrowSizeTo:

; 785  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	mov	DWORD PTR _i$236776[ebp], 0
	jmp	SHORT $LN3@GrowSizeTo
$LN2@GrowSizeTo:
	mov	eax, DWORD PTR _i$236776[ebp]
	add	eax, 1
	mov	DWORD PTR _i$236776[ebp], eax
$LN3@GrowSizeTo:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$236776[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jae	SHORT $LN4@GrowSizeTo

; 786  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);

	mov	eax, DWORD PTR _i$236776[ebp]
	mov	ecx, DWORD PTR _pTemp$[ebp]
	lea	edx, DWORD PTR [ecx+eax*8]
	mov	DWORD PTR $T258395[ebp], edx
	cmp	DWORD PTR $T258395[ebp], 0
	je	SHORT $LN9@GrowSizeTo
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _i$236776[ebp]
	lea	eax, DWORD PTR [ecx+edx*8]
	mov	DWORD PTR $T258412[ebp], eax
	mov	ecx, DWORD PTR $T258395[ebp]
	mov	edx, DWORD PTR $T258412[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR $T258395[ebp]
	mov	edx, DWORD PTR $T258412[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	ecx, DWORD PTR $T258395[ebp]
	mov	DWORD PTR tv158[ebp], ecx
	jmp	SHORT $LN10@GrowSizeTo
$LN9@GrowSizeTo:
	mov	DWORD PTR tv158[ebp], 0
$LN10@GrowSizeTo:
	mov	edx, DWORD PTR tv158[ebp]
	mov	DWORD PTR $T258394[ebp], edx
	jmp	SHORT $LN2@GrowSizeTo
$LN4@GrowSizeTo:

; 787  : 		}
; 788  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T258434[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T258433[ebp], eax
	xor	ecx, ecx
	je	SHORT $LN21@GrowSizeTo
	xor	edx, edx
	je	SHORT $LN21@GrowSizeTo
	mov	DWORD PTR _i$258429[ebp], 0
	jmp	SHORT $LN26@GrowSizeTo
$LN25@GrowSizeTo:
	mov	eax, DWORD PTR _i$258429[ebp]
	add	eax, 1
	mov	DWORD PTR _i$258429[ebp], eax
$LN26@GrowSizeTo:
	mov	ecx, DWORD PTR _i$258429[ebp]
	cmp	ecx, DWORD PTR $T258434[ebp]
	jae	SHORT $LN21@GrowSizeTo
	jmp	SHORT $LN25@GrowSizeTo
$LN21@GrowSizeTo:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	cmp	DWORD PTR $T258433[ebp], edx
	je	SHORT $LN22@GrowSizeTo
	mov	eax, DWORD PTR $T258433[ebp]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN22@GrowSizeTo:

; 789  : 		m_pData = pTemp;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR [ecx], edx

; 790  : 
; 791  : 		m_bIsResized = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+6412], 1
$LN7@GrowSizeTo:

; 792  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?GrowSizeToFit@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z ENDP ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::GrowSizeToFit
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QAE@XZ PROC ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QAE@XZ ENDP ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>
_TEXT	ENDS
PUBLIC	??$_Unchecked_move_backward@PAUOpinion@@PAU1@@stdext@@YAPAUOpinion@@PAU1@00@Z ; stdext::_Unchecked_move_backward<Opinion *,Opinion *>
PUBLIC	??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<Opinion *,Opinion *,std::allocator<Opinion> >
PUBLIC	??$unchecked_uninitialized_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@stdext@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@std@@@Z ; stdext::unchecked_uninitialized_copy<Opinion *,Opinion *,std::allocator<Opinion> >
EXTRN	__imp_??0String@Localization@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$16 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$2
__catchsym$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$15 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$0
__ehfuncinfo$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$15
	DD	03H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$16
__unwindtable$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$4
	DD	02H
	DD	00H
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$5
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z
_TEXT	SEGMENT
tv84 = -580						; size = 4
tv312 = -576						; size = 4
tv298 = -572						; size = 4
tv290 = -568						; size = 4
_this$ = -564						; size = 4
$T259234 = -560						; size = 4
$T259171 = -520						; size = 4
$T259152 = -516						; size = 4
$T259135 = -509						; size = 1
$T259134 = -508						; size = 4
$T259124 = -504						; size = 4
$T259123 = -500						; size = 4
__Cat$259166 = -494					; size = 1
$T259164 = -493						; size = 1
$T259163 = -492						; size = 1
__Cat$259160 = -491					; size = 1
$T259157 = -490						; size = 1
$T259156 = -489						; size = 1
$T259091 = -488						; size = 4
$T259081 = -484						; size = 4
$T259068 = -480						; size = 4
$T259045 = -476						; size = 4
$T259044 = -472						; size = 4
$T259023 = -468						; size = 4
$T259022 = -464						; size = 4
__Cat$259052 = -458					; size = 1
$T259050 = -457						; size = 1
$T258971 = -456						; size = 4
$T258970 = -452						; size = 4
$T258960 = -448						; size = 4
__Cat$258968 = -443					; size = 1
$T258966 = -442						; size = 1
$T258965 = -441						; size = 1
$T258944 = -440						; size = 4
$T258932 = -436						; size = 4
$T258922 = -429						; size = 1
$T258921 = -428						; size = 4
__Cat$258940 = -423					; size = 1
$T258938 = -422						; size = 1
$T258937 = -421						; size = 1
$T258905 = -420						; size = 4
$T258904 = -416						; size = 4
$T258900 = -412						; size = 4
$T258899 = -408						; size = 4
$T258876 = -404						; size = 4
$T258875 = -400						; size = 4
$T258854 = -396						; size = 4
$T258853 = -392						; size = 4
__Cat$258883 = -386					; size = 1
$T258881 = -385						; size = 1
$T258774 = -384						; size = 4
$T258773 = -380						; size = 4
$T258752 = -376						; size = 4
$T258751 = -372						; size = 4
__Cat$258781 = -366					; size = 1
$T258779 = -365						; size = 1
$T258678 = -364						; size = 4
$T258677 = -360						; size = 4
$T258656 = -356						; size = 4
$T258655 = -352						; size = 4
__Cat$258684 = -346					; size = 1
$T258682 = -345						; size = 1
$T258604 = -344						; size = 4
$T258592 = -340						; size = 4
$T258582 = -333						; size = 1
$T258581 = -332						; size = 4
__Cat$258599 = -327					; size = 1
$T258597 = -326						; size = 1
$T258596 = -325						; size = 1
$T258569 = -324						; size = 4
$T258557 = -320						; size = 4
$T258547 = -313						; size = 1
$T258546 = -312						; size = 4
__Cat$258564 = -307					; size = 1
$T258562 = -306						; size = 1
$T258561 = -305						; size = 1
$T258534 = -304						; size = 4
$T258524 = -300						; size = 4
__Cat$258531 = -295					; size = 1
$T258529 = -294						; size = 1
$T258528 = -293						; size = 1
__Count$258496 = -292					; size = 4
__Count$258473 = -220					; size = 4
__Tmp$236851 = -216					; size = 84
__Oldend$236852 = -124					; size = 4
__Tmp$236841 = -120					; size = 84
__Ncopied$236828 = -32					; size = 4
__Newvec$236826 = -28					; size = 4
__Whereoff$236827 = -24					; size = 4
__Capacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Where$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z PROC ; std::vector<Opinion,std::allocator<Opinion> >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 564				; 00000234H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN31@Insert_n
	mov	DWORD PTR tv290[ebp], 0
	jmp	SHORT $LN29@Insert_n
$LN31@Insert_n:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	mov	DWORD PTR tv290[ebp], eax
$LN29@Insert_n:
	mov	edx, DWORD PTR tv290[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx

; 1162 : 
; 1163 : 		if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN14@Insert_n
	jmp	$LN16@Insert_n
$LN14@Insert_n:

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	DWORD PTR __Count$258473[ebp], 51130563	; 030c30c3H
	cmp	DWORD PTR __Count$258473[ebp], 0
	jbe	SHORT $LN37@Insert_n
	mov	eax, DWORD PTR __Count$258473[ebp]
	mov	DWORD PTR tv298[ebp], eax
	jmp	SHORT $LN39@Insert_n
$LN37@Insert_n:
	mov	DWORD PTR tv298[ebp], 1
$LN39@Insert_n:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	mov	edx, DWORD PTR tv298[ebp]
	sub	edx, eax
	cmp	edx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN44@Insert_n

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ ; std::vector<Opinion,std::allocator<Opinion> >::_Xlen
	jmp	$LN16@Insert_n

; 1167 : 		else if (_Capacity < size() + _Count)

$LN44@Insert_n:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	add	eax, DWORD PTR __Count$[ebp]
	cmp	DWORD PTR __Capacity$[ebp], eax
	jae	$LN10@Insert_n

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	DWORD PTR __Count$258496[ebp], 51130563	; 030c30c3H
	cmp	DWORD PTR __Count$258496[ebp], 0
	jbe	SHORT $LN50@Insert_n
	mov	edx, DWORD PTR __Count$258496[ebp]
	mov	DWORD PTR tv312[ebp], edx
	jmp	SHORT $LN46@Insert_n
$LN50@Insert_n:
	mov	DWORD PTR tv312[ebp], 1
$LN46@Insert_n:
	mov	eax, DWORD PTR __Capacity$[ebp]
	shr	eax, 1
	mov	ecx, DWORD PTR tv312[ebp]
	sub	ecx, eax
	cmp	ecx, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN17@Insert_n
	mov	DWORD PTR tv84[ebp], 0
	jmp	SHORT $LN18@Insert_n
$LN17@Insert_n:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv84[ebp], edx
$LN18@Insert_n:
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax

; 1171 : 			if (_Capacity < size() + _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	add	eax, DWORD PTR __Count$[ebp]
	cmp	DWORD PTR __Capacity$[ebp], eax
	jae	SHORT $LN56@Insert_n

; 1172 : 				_Capacity = size() + _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax+4]
	mov	eax, ecx
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

$LN56@Insert_n:
	push	0
	mov	edx, DWORD PTR __Capacity$[ebp]
	push	edx
	call	??$_Allocate@UOpinion@@@std@@YAPAUOpinion@@IPAU1@@Z ; std::_Allocate<Opinion>
	add	esp, 8
	mov	DWORD PTR __Newvec$236826[ebp], eax

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp]
	sub	ecx, DWORD PTR [eax+4]
	mov	eax, ecx
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	mov	DWORD PTR __Whereoff$236827[ebp], eax

; 1175 : 			int _Ncopied = 0;

	mov	DWORD PTR __Ncopied$236828[ebp], 0

; 1176 : 
; 1177 : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	edx, DWORD PTR __Whereoff$236827[ebp]
	imul	edx, 84					; 00000054H
	add	edx, DWORD PTR __Newvec$236826[ebp]
	mov	DWORD PTR $T258534[ebp], edx
	mov	eax, DWORD PTR $T258534[ebp]
	mov	DWORD PTR $T258524[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T258528[ebp], cl
	mov	dl, BYTE PTR __Cat$258531[ebp]
	mov	BYTE PTR $T258529[ebp], dl
	movzx	eax, BYTE PTR $T258528[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T258529[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T258524[ebp]
	push	edx
	call	??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<Opinion *,unsigned int,Opinion,std::allocator<Opinion> >
	add	esp, 24					; 00000018H

; 1179 : 			++_Ncopied;

	mov	eax, DWORD PTR __Ncopied$236828[ebp]
	add	eax, 1
	mov	DWORD PTR __Ncopied$236828[ebp], eax

; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T258569[ebp], edx
	mov	eax, DWORD PTR __Newvec$236826[ebp]
	mov	DWORD PTR $T258557[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T258561[ebp], cl
	mov	dl, BYTE PTR __Cat$258564[ebp]
	mov	BYTE PTR $T258562[ebp], dl
	mov	al, BYTE PTR $T258561[ebp]
	mov	BYTE PTR $T258547[ebp], al
	mov	ecx, DWORD PTR $T258557[ebp]
	mov	DWORD PTR $T258546[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR $T258546[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T258569[ebp]
	push	edx
	call	??$unchecked_uninitialized_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@stdext@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@std@@@Z ; stdext::unchecked_uninitialized_copy<Opinion *,Opinion *,std::allocator<Opinion> >
	add	esp, 16					; 00000010H

; 1182 : 			++_Ncopied;

	mov	eax, DWORD PTR __Ncopied$236828[ebp]
	add	eax, 1
	mov	DWORD PTR __Ncopied$236828[ebp], eax

; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T258604[ebp], edx
	mov	eax, DWORD PTR __Whereoff$236827[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	imul	eax, 84					; 00000054H
	add	eax, DWORD PTR __Newvec$236826[ebp]
	mov	DWORD PTR $T258592[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T258596[ebp], cl
	mov	dl, BYTE PTR __Cat$258599[ebp]
	mov	BYTE PTR $T258597[ebp], dl
	mov	al, BYTE PTR $T258596[ebp]
	mov	BYTE PTR $T258582[ebp], al
	mov	ecx, DWORD PTR $T258592[ebp]
	mov	DWORD PTR $T258581[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR $T258581[ebp]
	push	eax
	mov	ecx, DWORD PTR $T258604[ebp]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??$unchecked_uninitialized_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@stdext@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@std@@@Z ; stdext::unchecked_uninitialized_copy<Opinion *,Opinion *,std::allocator<Opinion> >
	add	esp, 16					; 00000010H
	jmp	$LN19@Insert_n
__catch$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)

	cmp	DWORD PTR __Ncopied$236828[ebp], 1
	jle	SHORT $LN7@Insert_n

; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);

	mov	eax, DWORD PTR __Whereoff$236827[ebp]
	imul	eax, 84					; 00000054H
	add	eax, DWORD PTR __Newvec$236826[ebp]
	mov	DWORD PTR $T258678[ebp], eax
	mov	ecx, DWORD PTR __Newvec$236826[ebp]
	mov	DWORD PTR $T258677[ebp], ecx
	mov	dl, BYTE PTR __Cat$258684[ebp]
	mov	BYTE PTR $T258682[ebp], dl
	mov	eax, DWORD PTR $T258678[ebp]
	mov	DWORD PTR $T258656[ebp], eax
	mov	ecx, DWORD PTR $T258677[ebp]
	mov	DWORD PTR $T258655[ebp], ecx
	jmp	SHORT $LN88@Insert_n
$LN87@Insert_n:
	mov	edx, DWORD PTR $T258655[ebp]
	add	edx, 84					; 00000054H
	mov	DWORD PTR $T258655[ebp], edx
$LN88@Insert_n:
	mov	eax, DWORD PTR $T258655[ebp]
	cmp	eax, DWORD PTR $T258656[ebp]
	je	SHORT $LN7@Insert_n
	mov	ecx, DWORD PTR $T258655[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	xor	ecx, ecx
	and	ecx, 1
	je	SHORT $LN91@Insert_n
	mov	edx, DWORD PTR $T258655[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN91@Insert_n:
	jmp	SHORT $LN87@Insert_n
$LN7@Insert_n:

; 1188 : 			if (0 < _Ncopied)

	cmp	DWORD PTR __Ncopied$236828[ebp], 0
	jle	$LN6@Insert_n

; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 84					; 00000054H
	mov	ecx, DWORD PTR __Whereoff$236827[ebp]
	imul	ecx, 84					; 00000054H
	add	ecx, DWORD PTR __Newvec$236826[ebp]
	add	ecx, eax
	mov	DWORD PTR $T258774[ebp], ecx
	mov	edx, DWORD PTR __Whereoff$236827[ebp]
	imul	edx, 84					; 00000054H
	add	edx, DWORD PTR __Newvec$236826[ebp]
	mov	DWORD PTR $T258773[ebp], edx
	mov	al, BYTE PTR __Cat$258781[ebp]
	mov	BYTE PTR $T258779[ebp], al
	mov	ecx, DWORD PTR $T258774[ebp]
	mov	DWORD PTR $T258752[ebp], ecx
	mov	edx, DWORD PTR $T258773[ebp]
	mov	DWORD PTR $T258751[ebp], edx
	jmp	SHORT $LN109@Insert_n
$LN108@Insert_n:
	mov	eax, DWORD PTR $T258751[ebp]
	add	eax, 84					; 00000054H
	mov	DWORD PTR $T258751[ebp], eax
$LN109@Insert_n:
	mov	ecx, DWORD PTR $T258751[ebp]
	cmp	ecx, DWORD PTR $T258752[ebp]
	je	SHORT $LN6@Insert_n
	mov	ecx, DWORD PTR $T258751[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN112@Insert_n
	mov	eax, DWORD PTR $T258751[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN112@Insert_n:
	jmp	SHORT $LN108@Insert_n
$LN6@Insert_n:

; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	mov	ecx, DWORD PTR __Newvec$236826[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1192 : 			_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN124@Insert_n
	ret	0
$LN19@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 1193 : 
; 1194 : 			_Count += size();

$LN124@Insert_n:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax+4]
	mov	eax, ecx
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Count$[ebp], eax

; 1195 : 			if (_Myfirst != 0)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	$LN5@Insert_n

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T258900[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T258899[ebp], eax
	mov	ecx, DWORD PTR $T258900[ebp]
	mov	DWORD PTR $T258876[ebp], ecx
	mov	edx, DWORD PTR $T258899[ebp]
	mov	DWORD PTR $T258875[ebp], edx
	mov	al, BYTE PTR __Cat$258883[ebp]
	mov	BYTE PTR $T258881[ebp], al
	mov	ecx, DWORD PTR $T258876[ebp]
	mov	DWORD PTR $T258854[ebp], ecx
	mov	edx, DWORD PTR $T258875[ebp]
	mov	DWORD PTR $T258853[ebp], edx
	jmp	SHORT $LN134@Insert_n
$LN133@Insert_n:
	mov	eax, DWORD PTR $T258853[ebp]
	add	eax, 84					; 00000054H
	mov	DWORD PTR $T258853[ebp], eax
$LN134@Insert_n:
	mov	ecx, DWORD PTR $T258853[ebp]
	cmp	ecx, DWORD PTR $T258854[ebp]
	je	SHORT $LN126@Insert_n
	mov	ecx, DWORD PTR $T258853[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN137@Insert_n
	mov	eax, DWORD PTR $T258853[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN137@Insert_n:
	jmp	SHORT $LN133@Insert_n
$LN126@Insert_n:

; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	mov	DWORD PTR $T258905[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T258904[ebp], eax
	mov	ecx, DWORD PTR $T258904[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN5@Insert_n:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	edx, DWORD PTR __Capacity$[ebp]
	imul	edx, 84					; 00000054H
	add	edx, DWORD PTR __Newvec$236826[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx

; 1206 : 			_Mylast = _Newvec + _Count;

	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 84					; 00000054H
	add	ecx, DWORD PTR __Newvec$236826[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 1207 : 			_Myfirst = _Newvec;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newvec$236826[ebp]
	mov	DWORD PTR [eax+4], ecx
	jmp	$LN16@Insert_n
$LN10@Insert_n:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, DWORD PTR __Where$[ebp]
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	$LN3@Insert_n

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Tmp$236841[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@ABV01@@Z
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR __Tmp$236841[ebp+80], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 2

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T258944[ebp], eax
	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 84					; 00000054H
	add	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T258932[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T258937[ebp], dl
	mov	al, BYTE PTR __Cat$258940[ebp]
	mov	BYTE PTR $T258938[ebp], al
	mov	cl, BYTE PTR $T258937[ebp]
	mov	BYTE PTR $T258922[ebp], cl
	mov	edx, DWORD PTR $T258932[ebp]
	mov	DWORD PTR $T258921[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T258921[ebp]
	push	ecx
	mov	edx, DWORD PTR $T258944[ebp]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??$unchecked_uninitialized_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@stdext@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@std@@@Z ; stdext::unchecked_uninitialized_copy<Opinion *,Opinion *,std::allocator<Opinion> >
	add	esp, 16					; 00000010H

; 1215 : 
; 1216 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 3

; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR __Where$[ebp]
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	sub	edx, eax
	mov	DWORD PTR $T258971[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T258970[ebp], ecx
	mov	edx, DWORD PTR $T258970[ebp]
	mov	DWORD PTR $T258960[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T258965[ebp], al
	mov	cl, BYTE PTR __Cat$258968[ebp]
	mov	BYTE PTR $T258966[ebp], cl
	movzx	edx, BYTE PTR $T258965[ebp]
	push	edx
	movzx	eax, BYTE PTR $T258966[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR __Tmp$236841[ebp]
	push	edx
	mov	eax, DWORD PTR $T258971[ebp]
	push	eax
	mov	ecx, DWORD PTR $T258960[ebp]
	push	ecx
	call	??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<Opinion *,unsigned int,Opinion,std::allocator<Opinion> >
	add	esp, 24					; 00000018H
	jmp	$LN21@Insert_n
__catch$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$2:

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	imul	edx, 84					; 00000054H
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T259068[ebp], edx
	mov	ecx, DWORD PTR $T259068[ebp]
	mov	DWORD PTR $T259045[ebp], ecx
	mov	edx, DWORD PTR __Count$[ebp]
	imul	edx, 84					; 00000054H
	add	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T259044[ebp], edx
	mov	al, BYTE PTR __Cat$259052[ebp]
	mov	BYTE PTR $T259050[ebp], al
	mov	ecx, DWORD PTR $T259045[ebp]
	mov	DWORD PTR $T259023[ebp], ecx
	mov	edx, DWORD PTR $T259044[ebp]
	mov	DWORD PTR $T259022[ebp], edx
	jmp	SHORT $LN174@Insert_n
$LN173@Insert_n:
	mov	eax, DWORD PTR $T259022[ebp]
	add	eax, 84					; 00000054H
	mov	DWORD PTR $T259022[ebp], eax
$LN174@Insert_n:
	mov	ecx, DWORD PTR $T259022[ebp]
	cmp	ecx, DWORD PTR $T259023[ebp]
	je	SHORT $LN166@Insert_n
	mov	ecx, DWORD PTR $T259022[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN177@Insert_n
	mov	eax, DWORD PTR $T259022[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN177@Insert_n:
	jmp	SHORT $LN173@Insert_n
$LN166@Insert_n:

; 1221 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1222 : 			_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], 2
	mov	eax, __tryend$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$3
	ret	0
$LN21@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], 2
__tryend$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$3:

; 1223 : 
; 1224 : 			_Mylast += _Count;

	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 84					; 00000054H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 84					; 00000054H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, ecx
	mov	DWORD PTR $T259091[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T259081[ebp], ecx
	jmp	SHORT $LN191@Insert_n
$LN190@Insert_n:
	mov	edx, DWORD PTR $T259081[ebp]
	add	edx, 84					; 00000054H
	mov	DWORD PTR $T259081[ebp], edx
$LN191@Insert_n:
	mov	eax, DWORD PTR $T259081[ebp]
	cmp	eax, DWORD PTR $T259091[ebp]
	je	SHORT $LN187@Insert_n
	lea	ecx, DWORD PTR __Tmp$236841[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T259081[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	edx, DWORD PTR $T259081[ebp]
	mov	eax, DWORD PTR __Tmp$236841[ebp+80]
	mov	DWORD PTR [edx+80], eax
	jmp	SHORT $LN190@Insert_n
$LN187@Insert_n:

; 1232 : 			}

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Tmp$236841[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1233 : 		else

	jmp	$LN16@Insert_n
$LN3@Insert_n:

; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Tmp$236851[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@ABV01@@Z
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	DWORD PTR __Tmp$236851[ebp+80], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 5

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR __Oldend$236852[ebp], edx

; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T259171[ebp], ecx
	mov	edx, DWORD PTR $T259171[ebp]
	mov	DWORD PTR $T259152[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T259156[ebp], al
	mov	cl, BYTE PTR __Cat$259160[ebp]
	mov	BYTE PTR $T259157[ebp], cl
	mov	dl, BYTE PTR $T259156[ebp]
	mov	BYTE PTR $T259135[ebp], dl
	mov	eax, DWORD PTR $T259152[ebp]
	mov	DWORD PTR $T259134[ebp], eax
	mov	ecx, DWORD PTR $T259134[ebp]
	mov	DWORD PTR $T259124[ebp], ecx
	mov	edx, DWORD PTR __Count$[ebp]
	imul	edx, 84					; 00000054H
	mov	eax, DWORD PTR __Oldend$236852[ebp]
	sub	eax, edx
	mov	DWORD PTR $T259123[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T259163[ebp], cl
	mov	dl, BYTE PTR __Cat$259166[ebp]
	mov	BYTE PTR $T259164[ebp], dl
	movzx	eax, BYTE PTR $T259163[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T259164[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR $T259124[ebp]
	push	eax
	mov	ecx, DWORD PTR __Oldend$236852[ebp]
	push	ecx
	mov	edx, DWORD PTR $T259123[ebp]
	push	edx
	call	??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<Opinion *,Opinion *,std::allocator<Opinion> >
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	mov	edx, DWORD PTR __Oldend$236852[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 84					; 00000054H
	mov	ecx, DWORD PTR __Oldend$236852[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??$_Unchecked_move_backward@PAUOpinion@@PAU1@@stdext@@YAPAUOpinion@@PAU1@00@Z ; stdext::_Unchecked_move_backward<Opinion *,Opinion *>
	add	esp, 12					; 0000000cH

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T259234[ebp], eax
	jmp	SHORT $LN234@Insert_n
$LN233@Insert_n:
	mov	ecx, DWORD PTR $T259234[ebp]
	add	ecx, 84					; 00000054H
	mov	DWORD PTR $T259234[ebp], ecx
$LN234@Insert_n:
	mov	edx, DWORD PTR __Count$[ebp]
	imul	edx, 84					; 00000054H
	add	edx, DWORD PTR __Where$[ebp]
	cmp	DWORD PTR $T259234[ebp], edx
	je	SHORT $LN230@Insert_n
	lea	eax, DWORD PTR __Tmp$236851[ebp]
	push	eax
	mov	ecx, DWORD PTR $T259234[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	ecx, DWORD PTR $T259234[ebp]
	mov	edx, DWORD PTR __Tmp$236851[ebp+80]
	mov	DWORD PTR [ecx+80], edx
	jmp	SHORT $LN233@Insert_n
$LN230@Insert_n:

; 1249 : 			}

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Tmp$236851[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN16@Insert_n:

; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$4:
	lea	ecx, DWORD PTR __Tmp$236841[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$5:
	lea	ecx, DWORD PTR __Tmp$236851[ebp]
	jmp	??1Opinion@@QAE@XZ
__ehhandler$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-584]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z ENDP ; std::vector<Opinion,std::allocator<Opinion> >::_Insert_n
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T259262 = -80						; size = 28
$T259261 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ PROC ; std::vector<Opinion,std::allocator<Opinion> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T259262[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T259261[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR $T259261[ebp], OFFSET ??_7logic_error@std@@6B@
	lea	eax, DWORD PTR $T259262[ebp]
	push	eax
	lea	ecx, DWORD PTR $T259261[ebp+12]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T259261[ebp], OFFSET ??_7length_error@std@@6B@
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T259261[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T259262[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@Xlen@2:

; 1261 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T259262[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T259261[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ ENDP ; std::vector<Opinion,std::allocator<Opinion> >::_Xlen
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Rrotate
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Lrotate
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:PROC		; std::out_of_range::`vector deleting destructor'
;	COMDAT ??_R0?AVout_of_range@std@@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_Eout_of_range@std@@UAEPAXI@Z ; std::out_of_range::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z$0
__ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
_TEXT	SEGMENT
tv177 = -216						; size = 4
tv165 = -212						; size = 4
_this$ = -208						; size = 4
$T260141 = -204						; size = 4
$T260135 = -200						; size = 4
$T259540 = -136						; size = 4
$T259539 = -132						; size = 4
__Tmp$259538 = -125					; size = 1
$T259515 = -124						; size = 4
$T259508 = -120						; size = 4
$T259438 = -116						; size = 4
$T259402 = -112						; size = 4
$T259397 = -108						; size = 4
$T259369 = -104						; size = 4
$T259293 = -100						; size = 4
$T259284 = -96						; size = 28
$T259283 = -68						; size = 40
__Fixnodeparent$ = -28					; size = 4
__Pnode$ = -24						; size = 4
__Fixnode$ = -20					; size = 4
__Erasednode$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase, COMDAT
; _this$ = ecx

; 764  : 		{	// erase element at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 765  : 
; 766  :  #if _HAS_ITERATOR_DEBUGGING
; 767  : 		if (_Where._Mycont != this || _Isnil(_Where._Mynode()))
; 768  : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 769  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 770  : 		++_Where;	// save successor iterator for return
; 771  : 		_Orphan_ptr(*this, _Erasednode);
; 772  : 
; 773  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 774  : 		if (_Isnil(_Where._Mynode()))

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T259293[ebp], eax
	mov	ecx, DWORD PTR $T259293[ebp]
	movsx	edx, BYTE PTR [ecx+21]
	test	edx, edx
	je	SHORT $LN55@erase@3

; 775  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

	push	OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
	lea	ecx, DWORD PTR $T259284[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR $T259284[ebp]
	push	eax
	lea	ecx, DWORD PTR $T259283[ebp]
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	mov	DWORD PTR $T259283[ebp], OFFSET ??_7out_of_range@std@@6B@
	push	OFFSET __TI3?AVout_of_range@std@@
	lea	ecx, DWORD PTR $T259283[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T259284[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 776  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

$LN55@erase@3:
	mov	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Erasednode$[ebp], edx

; 777  : 		++_Where;	// save successor iterator for return

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::_Inc

; 778  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 779  : 
; 780  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 781  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 782  : 		_Nodeptr _Pnode = _Erasednode;

	mov	eax, DWORD PTR __Erasednode$[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax

; 783  : 
; 784  : 		if (_Isnil(_Left(_Pnode)))

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR [ecx]
	movsx	eax, BYTE PTR [edx+21]
	test	eax, eax
	je	SHORT $LN67@erase@3

; 785  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR __Fixnode$[ebp], edx
	jmp	SHORT $LN38@erase@3

; 786  : 		else if (_Isnil(_Right(_Pnode)))

$LN67@erase@3:
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	movsx	edx, BYTE PTR [ecx+21]
	test	edx, edx
	je	SHORT $LN71@erase@3

; 787  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], ecx

; 788  : 		else

	jmp	SHORT $LN38@erase@3

; 789  : 			{	// two subtrees, must lift successor node to replace erased
; 790  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

$LN71@erase@3:
	mov	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Pnode$[ebp], edx

; 791  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Fixnode$[ebp], ecx
$LN38@erase@3:

; 792  : 			}
; 793  : 
; 794  : 		if (_Pnode == _Erasednode)

	mov	edx, DWORD PTR __Pnode$[ebp]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	$LN137@erase@3

; 795  : 			{	// at most one subtree, relink it
; 796  : 			_Fixnodeparent = _Parent(_Erasednode);

	mov	eax, DWORD PTR __Erasednode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx

; 797  : 			if (!_Isnil(_Fixnode))

	mov	edx, DWORD PTR __Fixnode$[ebp]
	movsx	eax, BYTE PTR [edx+21]
	test	eax, eax
	jne	SHORT $LN81@erase@3

; 798  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 799  : 
; 800  : 			if (_Root() == _Erasednode)

$LN81@erase@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN89@erase@3

; 801  : 				_Root() = _Fixnode;	// link down from root

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [ecx+4], edx
	jmp	SHORT $LN32@erase@3

; 802  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

$LN89@erase@3:
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN93@erase@3

; 803  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	eax, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [edx], eax

; 804  : 			else

	jmp	SHORT $LN32@erase@3

; 805  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

$LN93@erase@3:
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	edx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [ecx+8], edx
$LN32@erase@3:

; 806  : 
; 807  : 			if (_Lmost() == _Erasednode)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T259369[ebp], ecx
	mov	edx, DWORD PTR $T259369[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN115@erase@3

; 808  : 				_Lmost() = _Isnil(_Fixnode)
; 809  : 					? _Fixnodeparent	// smallest is parent of erased node
; 810  : 					: _Min(_Fixnode);	// smallest in relinked subtree

	mov	ecx, DWORD PTR __Fixnode$[ebp]
	movsx	edx, BYTE PTR [ecx+21]
	test	edx, edx
	je	SHORT $LN43@erase@3
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv165[ebp], eax
	jmp	SHORT $LN44@erase@3
$LN43@erase@3:
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR $T259397[ebp], ecx
$LN107@erase@3:
	mov	edx, DWORD PTR $T259397[ebp]
	mov	eax, DWORD PTR [edx]
	movsx	ecx, BYTE PTR [eax+21]
	test	ecx, ecx
	jne	SHORT $LN103@erase@3
	mov	edx, DWORD PTR $T259397[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T259397[ebp], eax
	jmp	SHORT $LN107@erase@3
$LN103@erase@3:
	mov	ecx, DWORD PTR $T259397[ebp]
	mov	DWORD PTR tv165[ebp], ecx
$LN44@erase@3:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T259402[ebp], eax
	mov	ecx, DWORD PTR $T259402[ebp]
	mov	edx, DWORD PTR tv165[ebp]
	mov	DWORD PTR [ecx], edx

; 811  : 
; 812  : 			if (_Rmost() == _Erasednode)

$LN115@erase@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN28@erase@3

; 813  : 				_Rmost() = _Isnil(_Fixnode)
; 814  : 					? _Fixnodeparent	// largest is parent of erased node
; 815  : 					: _Max(_Fixnode);	// largest in relinked subtree

	mov	eax, DWORD PTR __Fixnode$[ebp]
	movsx	ecx, BYTE PTR [eax+21]
	test	ecx, ecx
	je	SHORT $LN45@erase@3
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv177[ebp], edx
	jmp	SHORT $LN131@erase@3
$LN45@erase@3:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR $T259438[ebp], eax
$LN127@erase@3:
	mov	ecx, DWORD PTR $T259438[ebp]
	mov	edx, DWORD PTR [ecx+8]
	movsx	eax, BYTE PTR [edx+21]
	test	eax, eax
	jne	SHORT $LN123@erase@3
	mov	ecx, DWORD PTR $T259438[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T259438[ebp], edx
	jmp	SHORT $LN127@erase@3
$LN123@erase@3:
	mov	eax, DWORD PTR $T259438[ebp]
	mov	DWORD PTR tv177[ebp], eax
$LN131@erase@3:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR tv177[ebp]
	mov	DWORD PTR [edx+8], eax
$LN28@erase@3:

; 816  : 			}
; 817  : 		else

	jmp	$LN192@erase@3

; 818  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 819  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

$LN137@erase@3:
	mov	ecx, DWORD PTR __Erasednode$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [edx+4], eax

; 820  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR __Erasednode$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 821  : 
; 822  : 			if (_Pnode == _Right(_Erasednode))

	mov	ecx, DWORD PTR __Erasednode$[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN145@erase@3

; 823  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Fixnodeparent$[ebp], eax

; 824  : 			else

	jmp	SHORT $LN161@erase@3

; 825  : 				{	// successor further down, link in place of erased
; 826  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's

$LN145@erase@3:
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Fixnodeparent$[ebp], edx

; 827  : 				if (!_Isnil(_Fixnode))

	mov	eax, DWORD PTR __Fixnode$[ebp]
	movsx	ecx, BYTE PTR [eax+21]
	test	ecx, ecx
	jne	SHORT $LN151@erase@3

; 828  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

	mov	edx, DWORD PTR __Fixnode$[ebp]
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [edx+4], eax

; 829  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

$LN151@erase@3:
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	edx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [ecx], edx

; 830  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR __Erasednode$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx

; 831  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

	mov	eax, DWORD PTR __Erasednode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 832  : 				}
; 833  : 
; 834  : 			if (_Root() == _Erasednode)

$LN161@erase@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN169@erase@3

; 835  : 				_Root() = _Pnode;	// link down from root

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx+4], edx
	jmp	SHORT $LN183@erase@3

; 836  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

$LN169@erase@3:
	mov	eax, DWORD PTR __Erasednode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T259508[ebp], ecx
	mov	edx, DWORD PTR $T259508[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN179@erase@3

; 837  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

	mov	ecx, DWORD PTR __Erasednode$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T259515[ebp], edx
	mov	eax, DWORD PTR $T259515[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 838  : 			else

	jmp	SHORT $LN183@erase@3

; 839  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

$LN179@erase@3:
	mov	edx, DWORD PTR __Erasednode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 840  : 
; 841  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

$LN183@erase@3:
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR __Erasednode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 842  : 			_STD swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

	mov	edx, DWORD PTR __Erasednode$[ebp]
	add	edx, 20					; 00000014H
	mov	DWORD PTR $T259540[ebp], edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 20					; 00000014H
	mov	DWORD PTR $T259539[ebp], eax
	mov	ecx, DWORD PTR $T259539[ebp]
	cmp	ecx, DWORD PTR $T259540[ebp]
	je	SHORT $LN192@erase@3
	mov	edx, DWORD PTR $T259539[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR __Tmp$259538[ebp], al
	mov	ecx, DWORD PTR $T259539[ebp]
	mov	edx, DWORD PTR $T259540[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR [ecx], al
	mov	ecx, DWORD PTR $T259540[ebp]
	mov	dl, BYTE PTR __Tmp$259538[ebp]
	mov	BYTE PTR [ecx], dl

; 843  : 			}
; 844  : 
; 845  : 		if (_Color(_Erasednode) == _Black)

$LN192@erase@3:
	mov	eax, DWORD PTR __Erasednode$[ebp]
	movsx	ecx, BYTE PTR [eax+20]
	cmp	ecx, 1
	jne	$LN588@erase@3

; 846  : 			{	// erasing black link, must recolor/rebalance tree
; 847  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 848  : 				_Fixnodeparent = _Parent(_Fixnode))

	jmp	SHORT $LN196@erase@3
$LN194@erase@3:
	mov	edx, DWORD PTR __Fixnode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Fixnodeparent$[ebp], eax
$LN196@erase@3:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR __Fixnode$[ebp]
	cmp	eax, DWORD PTR [edx+4]
	je	$LN586@erase@3
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	movsx	edx, BYTE PTR [ecx+20]
	cmp	edx, 1
	jne	$LN586@erase@3

; 849  : 				if (_Fixnode == _Left(_Fixnodeparent))

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN395@erase@3

; 850  : 					{	// fixup left subtree
; 851  : 					_Pnode = _Right(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR __Pnode$[ebp], eax

; 852  : 					if (_Color(_Pnode) == _Red)

	mov	ecx, DWORD PTR __Pnode$[ebp]
	movsx	edx, BYTE PTR [ecx+20]
	test	edx, edx
	jne	SHORT $LN263@erase@3

; 853  : 						{	// rotate red up from right subtree
; 854  : 						_Color(_Pnode) = _Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	BYTE PTR [eax+20], 1

; 855  : 						_Color(_Fixnodeparent) = _Red;

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	BYTE PTR [ecx+20], 0

; 856  : 						_Lrotate(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Lrotate

; 857  : 						_Pnode = _Right(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 858  : 						}
; 859  : 
; 860  : 					if (_Isnil(_Pnode))

$LN263@erase@3:
	mov	edx, DWORD PTR __Pnode$[ebp]
	movsx	eax, BYTE PTR [edx+21]
	test	eax, eax
	je	SHORT $LN267@erase@3

; 861  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], ecx

; 862  : 					else if (_Color(_Left(_Pnode)) == _Black

	jmp	$LN12@erase@3

; 863  : 						&& _Color(_Right(_Pnode)) == _Black)

$LN267@erase@3:
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx]
	movsx	ecx, BYTE PTR [eax+20]
	cmp	ecx, 1
	jne	SHORT $LN277@erase@3
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	ecx, BYTE PTR [eax+20]
	cmp	ecx, 1
	jne	SHORT $LN277@erase@3

; 864  : 						{	// redden right subtree with black children
; 865  : 						_Color(_Pnode) = _Red;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	BYTE PTR [edx+20], 0

; 866  : 						_Fixnode = _Fixnodeparent;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], eax

; 867  : 						}
; 868  : 					else

	jmp	SHORT $LN12@erase@3

; 869  : 						{	// must rearrange right subtree
; 870  : 						if (_Color(_Right(_Pnode)) == _Black)

$LN277@erase@3:
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	movsx	eax, BYTE PTR [edx+20]
	cmp	eax, 1
	jne	SHORT $LN338@erase@3

; 871  : 							{	// rotate red up from left sub-subtree
; 872  : 							_Color(_Left(_Pnode)) = _Black;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	BYTE PTR [edx+20], 1

; 873  : 							_Color(_Pnode) = _Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	BYTE PTR [eax+20], 0

; 874  : 							_Rrotate(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Rrotate

; 875  : 							_Pnode = _Right(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR __Pnode$[ebp], eax

; 876  : 							}
; 877  : 
; 878  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

$LN338@erase@3:
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	al, BYTE PTR [edx+20]
	mov	BYTE PTR [ecx+20], al

; 879  : 						_Color(_Fixnodeparent) = _Black;

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	BYTE PTR [ecx+20], 1

; 880  : 						_Color(_Right(_Pnode)) = _Black;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	BYTE PTR [eax+20], 1

; 881  : 						_Lrotate(_Fixnodeparent);

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Lrotate

; 882  : 						break;	// tree now recolored/rebalanced

	jmp	$LN586@erase@3
$LN12@erase@3:

; 883  : 						}
; 884  : 					}
; 885  : 				else

	jmp	$LN8@erase@3

; 886  : 					{	// fixup right subtree
; 887  : 					_Pnode = _Left(_Fixnodeparent);

$LN395@erase@3:
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Pnode$[ebp], eax

; 888  : 					if (_Color(_Pnode) == _Red)

	mov	ecx, DWORD PTR __Pnode$[ebp]
	movsx	edx, BYTE PTR [ecx+20]
	test	edx, edx
	jne	SHORT $LN454@erase@3

; 889  : 						{	// rotate red up from left subtree
; 890  : 						_Color(_Pnode) = _Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	BYTE PTR [eax+20], 1

; 891  : 						_Color(_Fixnodeparent) = _Red;

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	BYTE PTR [ecx+20], 0

; 892  : 						_Rrotate(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Rrotate

; 893  : 						_Pnode = _Left(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 894  : 						}
; 895  : 					if (_Isnil(_Pnode))

$LN454@erase@3:
	mov	edx, DWORD PTR __Pnode$[ebp]
	movsx	eax, BYTE PTR [edx+21]
	test	eax, eax
	je	SHORT $LN458@erase@3

; 896  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], ecx

; 897  : 					else if (_Color(_Right(_Pnode)) == _Black

	jmp	$LN8@erase@3

; 898  : 						&& _Color(_Left(_Pnode)) == _Black)

$LN458@erase@3:
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	ecx, BYTE PTR [eax+20]
	cmp	ecx, 1
	jne	SHORT $LN468@erase@3
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx]
	movsx	ecx, BYTE PTR [eax+20]
	cmp	ecx, 1
	jne	SHORT $LN468@erase@3

; 899  : 						{	// redden left subtree with black children
; 900  : 						_Color(_Pnode) = _Red;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	BYTE PTR [edx+20], 0

; 901  : 						_Fixnode = _Fixnodeparent;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], eax

; 902  : 						}
; 903  : 					else

	jmp	SHORT $LN8@erase@3

; 904  : 						{	// must rearrange left subtree
; 905  : 						if (_Color(_Left(_Pnode)) == _Black)

$LN468@erase@3:
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR [ecx]
	movsx	eax, BYTE PTR [edx+20]
	cmp	eax, 1
	jne	SHORT $LN529@erase@3

; 906  : 							{	// rotate red up from right sub-subtree
; 907  : 							_Color(_Right(_Pnode)) = _Black;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	BYTE PTR [edx+20], 1

; 908  : 							_Color(_Pnode) = _Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	BYTE PTR [eax+20], 0

; 909  : 							_Lrotate(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Lrotate

; 910  : 							_Pnode = _Left(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Pnode$[ebp], eax

; 911  : 							}
; 912  : 
; 913  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

$LN529@erase@3:
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	al, BYTE PTR [edx+20]
	mov	BYTE PTR [ecx+20], al

; 914  : 						_Color(_Fixnodeparent) = _Black;

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	BYTE PTR [ecx+20], 1

; 915  : 						_Color(_Left(_Pnode)) = _Black;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	BYTE PTR [eax+20], 1

; 916  : 						_Rrotate(_Fixnodeparent);

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Rrotate

; 917  : 						break;	// tree now recolored/rebalanced

	jmp	SHORT $LN586@erase@3
$LN8@erase@3:

; 918  : 						}
; 919  : 					}

	jmp	$LN194@erase@3

; 920  : 
; 921  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

$LN586@erase@3:
	mov	edx, DWORD PTR __Fixnode$[ebp]
	mov	BYTE PTR [edx+20], 1

; 922  : 			}
; 923  : 
; 924  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node

$LN588@erase@3:

; 925  : 		this->_Alnod.deallocate(_Erasednode, 1);

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 926  : 
; 927  : 		if (0 < _Mysize)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jbe	SHORT $LN1@erase@3

; 928  : 			--_Mysize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN1@erase@3:

; 929  : 
; 930  : 		return (_Make_iter(_Where));	// return successor iterator

	mov	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T260141[ebp], edx
	mov	eax, DWORD PTR $T260141[ebp]
	mov	DWORD PTR $T260135[ebp], eax
	mov	ecx, DWORD PTR $T260135[ebp]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN42@erase@3:

; 931  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z$0:
	lea	ecx, DWORD PTR $T259284[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 26   : 		{	// construct from message string

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR __Message$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z

; 27   : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
; Function compile flags: /Odtp
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1out_of_range@std@@UAE@XZ PROC			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx

; 133  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7out_of_range@std@@6B@

; 134  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC			; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7out_of_range@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	edx, DWORD PTR ___flags$[ebp]
	and	edx, 1
	je	SHORT $LN1@scalar@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0out_of_range@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0out_of_range@std@@QAE@ABV01@@Z$1
__ehfuncinfo$??0out_of_range@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0out_of_range@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC			; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0out_of_range@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7out_of_range@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0out_of_range@std@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0out_of_range@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0out_of_range@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Erase
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T260230 = -8						; size = 4
?clear@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::clear, COMDAT
; _this$ = ecx

; 965  : 		{	// erase all

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 966  : 
; 967  :  #if _HAS_ITERATOR_DEBUGGING
; 968  : 		this->_Orphan_ptr(*this, 0);
; 969  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 970  : 
; 971  : 		_Erase(_Root());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Erase

; 972  : 		_Root() = _Myhead, _Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0

; 973  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T260230[ebp], eax
	mov	ecx, DWORD PTR $T260230[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+8], ecx

; 974  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::clear
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$236989 = -4					; size = 4
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 1166 : 		{	// free entire subtree, recursively

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1167 : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

	mov	eax, DWORD PTR __Rootnode$[ebp]
	mov	DWORD PTR __Pnode$236989[ebp], eax
	jmp	SHORT $LN6@Erase
$LN2@Erase:
	mov	ecx, DWORD PTR __Pnode$236989[ebp]
	mov	DWORD PTR __Rootnode$[ebp], ecx
$LN6@Erase:
	mov	edx, DWORD PTR __Pnode$236989[ebp]
	movsx	eax, BYTE PTR [edx+21]
	test	eax, eax
	jne	SHORT $LN4@Erase

; 1168 : 			{	// free subtrees, then node
; 1169 : 			_Erase(_Right(_Pnode));

	mov	ecx, DWORD PTR __Pnode$236989[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Erase

; 1170 : 			_Pnode = _Left(_Pnode);

	mov	eax, DWORD PTR __Pnode$236989[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$236989[ebp], ecx

; 1171 : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 1172 : 			this->_Alnod.deallocate(_Rootnode, 1);

	mov	edx, DWORD PTR __Rootnode$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1173 : 			}

	jmp	SHORT $LN2@Erase
$LN4@Erase:

; 1174 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Erase
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T260323 = -12						; size = 4
$T260316 = -8						; size = 4
__Pnode$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1285 : 		{	// promote right node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1286 : 		_Nodeptr _Pnode = _Right(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1287 : 		_Right(_Wherenode) = _Left(_Pnode);

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], ecx

; 1288 : 
; 1289 : 		if (!_Isnil(_Left(_Pnode)))

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx]
	movsx	ecx, BYTE PTR [eax+21]
	test	ecx, ecx
	jne	SHORT $LN24@Lrotate

; 1290 : 			_Parent(_Left(_Pnode)) = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1291 : 		_Parent(_Pnode) = _Parent(_Wherenode);

$LN24@Lrotate:
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 1292 : 
; 1293 : 		if (_Wherenode == _Root())

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN34@Lrotate

; 1294 : 			_Root() = _Pnode;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+4], ecx
	jmp	SHORT $LN46@Lrotate

; 1295 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

$LN34@Lrotate:
	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T260316[ebp], eax
	mov	ecx, DWORD PTR $T260316[ebp]
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN44@Lrotate

; 1296 : 			_Left(_Parent(_Wherenode)) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T260323[ebp], ecx
	mov	edx, DWORD PTR $T260323[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [edx], eax

; 1297 : 		else

	jmp	SHORT $LN46@Lrotate

; 1298 : 			_Right(_Parent(_Wherenode)) = _Pnode;

$LN44@Lrotate:
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [edx+8], eax

; 1299 : 
; 1300 : 		_Left(_Pnode) = _Wherenode;

$LN46@Lrotate:
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [ecx], edx

; 1301 : 		_Parent(_Wherenode) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1302 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Lrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Lrotate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T260399 = -8						; size = 4
__Pnode$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1329 : 		{	// promote left node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1330 : 		_Nodeptr _Pnode = _Left(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1331 : 		_Left(_Wherenode) = _Right(_Pnode);

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx], ecx

; 1332 : 
; 1333 : 		if (!_Isnil(_Right(_Pnode)))

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	ecx, BYTE PTR [eax+21]
	test	ecx, ecx
	jne	SHORT $LN24@Rrotate

; 1334 : 			_Parent(_Right(_Pnode)) = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1335 : 		_Parent(_Pnode) = _Parent(_Wherenode);

$LN24@Rrotate:
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 1336 : 
; 1337 : 		if (_Wherenode == _Root())

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN36@Rrotate

; 1338 : 			_Root() = _Pnode;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+4], ecx
	jmp	SHORT $LN46@Rrotate

; 1339 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

$LN36@Rrotate:
	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN42@Rrotate

; 1340 : 			_Right(_Parent(_Wherenode)) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 1341 : 		else

	jmp	SHORT $LN46@Rrotate

; 1342 : 			_Left(_Parent(_Wherenode)) = _Pnode;

$LN42@Rrotate:
	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T260399[ebp], eax
	mov	ecx, DWORD PTR $T260399[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], edx

; 1343 : 
; 1344 : 		_Right(_Pnode) = _Wherenode;

$LN46@Rrotate:
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 1345 : 		_Parent(_Wherenode) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [edx+4], eax

; 1346 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Rrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	??_C@_07NHABFFHN@__index?$AA@			; `string'
PUBLIC	??_C@_0L@GCADIOHF@__instance?$AA@		; `string'
PUBLIC	??_C@_01MHEDDDHA@v?$AA@				; `string'
PUBLIC	??_C@_06BPGFKLEK@__mode?$AA@			; `string'
PUBLIC	??_C@_0M@CEBPKMAI@__instances?$AA@		; `string'
EXTRN	_lua_remove:PROC
EXTRN	_lua_pushlightuserdata:PROC
EXTRN	_lua_rawget:PROC
EXTRN	?PushMethods@CvLuaCity@@SAXPAUlua_State@@H@Z:PROC ; CvLuaCity::PushMethods
EXTRN	_lua_setmetatable:PROC
EXTRN	?GetTypeName@CvLuaCity@@SAPBDXZ:PROC		; CvLuaCity::GetTypeName
;	COMDAT ??_C@_07NHABFFHN@__index?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
CONST	SEGMENT
??_C@_07NHABFFHN@__index?$AA@ DB '__index', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GCADIOHF@__instance?$AA@
CONST	SEGMENT
??_C@_0L@GCADIOHF@__instance?$AA@ DB '__instance', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01MHEDDDHA@v?$AA@
CONST	SEGMENT
??_C@_01MHEDDDHA@v?$AA@ DB 'v', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06BPGFKLEK@__mode?$AA@
CONST	SEGMENT
??_C@_06BPGFKLEK@__mode?$AA@ DB '__mode', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CEBPKMAI@__instances?$AA@
CONST	SEGMENT
??_C@_0M@CEBPKMAI@__instances?$AA@ DB '__instances', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z
_TEXT	SEGMENT
_instances_index$237045 = -8				; size = 4
_type_index$237044 = -4					; size = 4
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z PROC ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push, COMDAT

; 39   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	cmp	DWORD PTR _pkType$[ebp], 0
	je	$LN4@Push

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaCity@@SAPBDXZ		; CvLuaCity::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN3@Push

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 59   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 63   : 			lua_newtable(L);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET ??_C@_06BPGFKLEK@__mode?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET ??_C@_01MHEDDDHA@v?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawset
	add	esp, 8

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushvalue
	add	esp, 8

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaCity@@SAPBDXZ		; CvLuaCity::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?PushMethods@CvLuaCity@@SAXPAUlua_State@@H@Z ; CvLuaCity::PushMethods
	add	esp, 8
$LN3@Push:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _type_index$237044[ebp], eax

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawget
	add	esp, 8

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _instances_index$237045[ebp], eax

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawget
	add	esp, 8

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN2@Push

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settop
	add	esp, 8

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 97   : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET ??_C@_07NHABFFHN@__index?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 102  : 			lua_pushvalue(L, type_index);

	mov	ecx, DWORD PTR _type_index$237044[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushvalue
	add	esp, 8

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushvalue
	add	esp, 8

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	mov	edx, DWORD PTR _instances_index$237045[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8
$LN2@Push:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	mov	ecx, DWORD PTR _instances_index$237045[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_remove
	add	esp, 8

; 114  : 		lua_remove(L, type_index);

	mov	eax, DWORD PTR _type_index$237044[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_remove
	add	esp, 8

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else

	jmp	SHORT $LN5@Push
$LN4@Push:

; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushnil
	add	esp, 4
$LN5@Push:

; 122  : 	}
; 123  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ENDP ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
_TEXT	ENDS
PUBLIC	??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@ ; `string'
EXTRN	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z:PROC ; CvLuaCity::HandleMissingInstance
EXTRN	_lua_touserdata:PROC
;	COMDAT ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
CONST	SEGMENT
??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@ DB 'Not a val'
	DB	'id instance.  Either the instance is NULL or you used ''.'' i'
	DB	'nstead of '':''.', 00H			; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_stack_size$ = -12					; size = 4
_pkInstance$ = -8					; size = 4
_bFail$ = -1						; size = 1
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 128  : 	const int stack_size = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _stack_size$[ebp], eax

; 129  : 	bool bFail = true;

	mov	BYTE PTR _bFail$[ebp], 1

; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;

	mov	DWORD PTR _pkInstance$[ebp], 0

; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 5
	jne	SHORT $LN5@GetInstanc

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN5@GetInstanc

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$[ebp], eax

; 138  : 			if(pkInstance)

	cmp	DWORD PTR _pkInstance$[ebp], 0
	je	SHORT $LN5@GetInstanc

; 139  : 			{
; 140  : 				bFail = false;

	mov	BYTE PTR _bFail$[ebp], 0
$LN5@GetInstanc:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	mov	ecx, DWORD PTR _stack_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	movzx	eax, BYTE PTR _bFail$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetInstanc
	movzx	ecx, BYTE PTR _bErrorOnFail$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@GetInstanc

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[ebp], 1
	jne	SHORT $LN1@GetInstanc

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc:

; 151  : 		Derived::HandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN2@GetInstanc:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, DWORD PTR _pkInstance$[ebp]

; 154  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXXZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod, COMDAT

; 222  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 223  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 224  : 	(pkType->*func)();

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 225  : 	return 0;

	xor	eax, eax

; 226  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
_TEXT	ENDS
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAXPAUlua_State@@PAVCvPlayerAI@@@Z
_TEXT	SEGMENT
_instances_index$237089 = -8				; size = 4
_type_index$237088 = -4					; size = 4
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAXPAUlua_State@@PAVCvPlayerAI@@@Z PROC ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::Push, COMDAT

; 39   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	cmp	DWORD PTR _pkType$[ebp], 0
	je	$LN4@Push@2

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaPlayer@@SAPBDXZ	; CvLuaPlayer::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN3@Push@2

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 59   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 63   : 			lua_newtable(L);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET ??_C@_06BPGFKLEK@__mode?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET ??_C@_01MHEDDDHA@v?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawset
	add	esp, 8

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushvalue
	add	esp, 8

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaPlayer@@SAPBDXZ	; CvLuaPlayer::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?PushMethods@CvLuaPlayer@@SAXPAUlua_State@@H@Z ; CvLuaPlayer::PushMethods
	add	esp, 8
$LN3@Push@2:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _type_index$237088[ebp], eax

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawget
	add	esp, 8

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _instances_index$237089[ebp], eax

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawget
	add	esp, 8

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN2@Push@2

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settop
	add	esp, 8

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 97   : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET ??_C@_07NHABFFHN@__index?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 102  : 			lua_pushvalue(L, type_index);

	mov	ecx, DWORD PTR _type_index$237088[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushvalue
	add	esp, 8

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushvalue
	add	esp, 8

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	mov	edx, DWORD PTR _instances_index$237089[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8
$LN2@Push@2:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	mov	ecx, DWORD PTR _instances_index$237089[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_remove
	add	esp, 8

; 114  : 		lua_remove(L, type_index);

	mov	eax, DWORD PTR _type_index$237088[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_remove
	add	esp, 8

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else

	jmp	SHORT $LN5@Push@2
$LN4@Push@2:

; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushnil
	add	esp, 4
$LN5@Push@2:

; 122  : 	}
; 123  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAXPAUlua_State@@PAVCvPlayerAI@@@Z ENDP ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::Push
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_stack_size$ = -12					; size = 4
_pkInstance$ = -8					; size = 4
_bFail$ = -1						; size = 1
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 128  : 	const int stack_size = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _stack_size$[ebp], eax

; 129  : 	bool bFail = true;

	mov	BYTE PTR _bFail$[ebp], 1

; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;

	mov	DWORD PTR _pkInstance$[ebp], 0

; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 5
	jne	SHORT $LN5@GetInstanc@2

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN5@GetInstanc@2

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$[ebp], eax

; 138  : 			if(pkInstance)

	cmp	DWORD PTR _pkInstance$[ebp], 0
	je	SHORT $LN5@GetInstanc@2

; 139  : 			{
; 140  : 				bFail = false;

	mov	BYTE PTR _bFail$[ebp], 0
$LN5@GetInstanc@2:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	mov	ecx, DWORD PTR _stack_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	movzx	eax, BYTE PTR _bFail$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetInstanc@2
	movzx	ecx, BYTE PTR _bErrorOnFail$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@GetInstanc@2

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[ebp], 1
	jne	SHORT $LN1@GetInstanc@2

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc@2:

; 151  : 		Derived::HandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?HandleMissingInstance@CvLuaPlayer@@SAXPAUlua_State@@@Z ; CvLuaPlayer::HandleMissingInstance
	add	esp, 4
$LN2@GetInstanc@2:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, DWORD PTR _pkInstance$[ebp]

; 154  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
_TEXT	ENDS
PUBLIC	??_C@_0BJ@GHLHFGFM@Instance?5does?5not?5exist?4?$AA@ ; `string'
;	COMDAT ??_C@_0BJ@GHLHFGFM@Instance?5does?5not?5exist?4?$AA@
CONST	SEGMENT
??_C@_0BJ@GHLHFGFM@Instance?5does?5not?5exist?4?$AA@ DB 'Instance does no'
	DB	't exist.', 00H				; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@KAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@KAXPAUlua_State@@@Z PROC ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::DefaultHandleMissingInstance, COMDAT

; 164  : {

	push	ebp
	mov	ebp, esp

; 165  : 	luaL_error(L, "Instance does not exist.");

	push	OFFSET ??_C@_0BJ@GHLHFGFM@Instance?5does?5not?5exist?4?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_error
	add	esp, 8

; 166  : }

	pop	ebp
	ret	0
?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@KAXPAUlua_State@@@Z ENDP ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::DefaultHandleMissingInstance
_TEXT	ENDS
EXTRN	?PushMethods@CvLuaPlot@@SAXPAUlua_State@@H@Z:PROC ; CvLuaPlot::PushMethods
EXTRN	?GetTypeName@CvLuaPlot@@SAPBDXZ:PROC		; CvLuaPlot::GetTypeName
; Function compile flags: /Odtp
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z
_TEXT	SEGMENT
_instances_index$237129 = -8				; size = 4
_type_index$237128 = -4					; size = 4
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z PROC ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push, COMDAT

; 39   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	cmp	DWORD PTR _pkType$[ebp], 0
	je	$LN4@Push@3

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaPlot@@SAPBDXZ		; CvLuaPlot::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN3@Push@3

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 59   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 63   : 			lua_newtable(L);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET ??_C@_06BPGFKLEK@__mode?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET ??_C@_01MHEDDDHA@v?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawset
	add	esp, 8

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushvalue
	add	esp, 8

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaPlot@@SAPBDXZ		; CvLuaPlot::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?PushMethods@CvLuaPlot@@SAXPAUlua_State@@H@Z ; CvLuaPlot::PushMethods
	add	esp, 8
$LN3@Push@3:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _type_index$237128[ebp], eax

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawget
	add	esp, 8

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _instances_index$237129[ebp], eax

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawget
	add	esp, 8

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN2@Push@3

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settop
	add	esp, 8

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 97   : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET ??_C@_07NHABFFHN@__index?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 102  : 			lua_pushvalue(L, type_index);

	mov	ecx, DWORD PTR _type_index$237128[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushvalue
	add	esp, 8

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushvalue
	add	esp, 8

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	mov	edx, DWORD PTR _instances_index$237129[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8
$LN2@Push@3:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	mov	ecx, DWORD PTR _instances_index$237129[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_remove
	add	esp, 8

; 114  : 		lua_remove(L, type_index);

	mov	eax, DWORD PTR _type_index$237128[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_remove
	add	esp, 8

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else

	jmp	SHORT $LN5@Push@3
$LN4@Push@3:

; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushnil
	add	esp, 4
$LN5@Push@3:

; 122  : 	}
; 123  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ENDP ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
_TEXT	ENDS
EXTRN	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z:PROC ; CvLuaPlot::HandleMissingInstance
; Function compile flags: /Odtp
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_stack_size$ = -12					; size = 4
_pkInstance$ = -8					; size = 4
_bFail$ = -1						; size = 1
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 128  : 	const int stack_size = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _stack_size$[ebp], eax

; 129  : 	bool bFail = true;

	mov	BYTE PTR _bFail$[ebp], 1

; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;

	mov	DWORD PTR _pkInstance$[ebp], 0

; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 5
	jne	SHORT $LN5@GetInstanc@3

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN5@GetInstanc@3

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$[ebp], eax

; 138  : 			if(pkInstance)

	cmp	DWORD PTR _pkInstance$[ebp], 0
	je	SHORT $LN5@GetInstanc@3

; 139  : 			{
; 140  : 				bFail = false;

	mov	BYTE PTR _bFail$[ebp], 0
$LN5@GetInstanc@3:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	mov	ecx, DWORD PTR _stack_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	movzx	eax, BYTE PTR _bFail$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetInstanc@3
	movzx	ecx, BYTE PTR _bErrorOnFail$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@GetInstanc@3

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[ebp], 1
	jne	SHORT $LN1@GetInstanc@3

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc@3:

; 151  : 		Derived::HandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 4
$LN2@GetInstanc@3:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, DWORD PTR _pkInstance$[ebp]

; 154  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
_TEXT	ENDS
EXTRN	?PushMethods@CvLuaUnit@@SAXPAUlua_State@@H@Z:PROC ; CvLuaUnit::PushMethods
EXTRN	?GetTypeName@CvLuaUnit@@SAPBDXZ:PROC		; CvLuaUnit::GetTypeName
; Function compile flags: /Odtp
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z
_TEXT	SEGMENT
_instances_index$237161 = -8				; size = 4
_type_index$237160 = -4					; size = 4
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z PROC ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push, COMDAT

; 39   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	cmp	DWORD PTR _pkType$[ebp], 0
	je	$LN4@Push@4

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaUnit@@SAPBDXZ		; CvLuaUnit::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN3@Push@4

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 59   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 63   : 			lua_newtable(L);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET ??_C@_06BPGFKLEK@__mode?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET ??_C@_01MHEDDDHA@v?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawset
	add	esp, 8

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushvalue
	add	esp, 8

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaUnit@@SAPBDXZ		; CvLuaUnit::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?PushMethods@CvLuaUnit@@SAXPAUlua_State@@H@Z ; CvLuaUnit::PushMethods
	add	esp, 8
$LN3@Push@4:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _type_index$237160[ebp], eax

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawget
	add	esp, 8

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _instances_index$237161[ebp], eax

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawget
	add	esp, 8

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN2@Push@4

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settop
	add	esp, 8

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 97   : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET ??_C@_07NHABFFHN@__index?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 102  : 			lua_pushvalue(L, type_index);

	mov	ecx, DWORD PTR _type_index$237160[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushvalue
	add	esp, 8

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushvalue
	add	esp, 8

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	mov	edx, DWORD PTR _instances_index$237161[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8
$LN2@Push@4:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	mov	ecx, DWORD PTR _instances_index$237161[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_remove
	add	esp, 8

; 114  : 		lua_remove(L, type_index);

	mov	eax, DWORD PTR _type_index$237160[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_remove
	add	esp, 8

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else

	jmp	SHORT $LN5@Push@4
$LN4@Push@4:

; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushnil
	add	esp, 4
$LN5@Push@4:

; 122  : 	}
; 123  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ENDP ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
_TEXT	ENDS
EXTRN	?HandleMissingInstance@CvLuaUnit@@SAXPAUlua_State@@@Z:PROC ; CvLuaUnit::HandleMissingInstance
; Function compile flags: /Odtp
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_stack_size$ = -12					; size = 4
_pkInstance$ = -8					; size = 4
_bFail$ = -1						; size = 1
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 128  : 	const int stack_size = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _stack_size$[ebp], eax

; 129  : 	bool bFail = true;

	mov	BYTE PTR _bFail$[ebp], 1

; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;

	mov	DWORD PTR _pkInstance$[ebp], 0

; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 5
	jne	SHORT $LN5@GetInstanc@4

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN5@GetInstanc@4

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$[ebp], eax

; 138  : 			if(pkInstance)

	cmp	DWORD PTR _pkInstance$[ebp], 0
	je	SHORT $LN5@GetInstanc@4

; 139  : 			{
; 140  : 				bFail = false;

	mov	BYTE PTR _bFail$[ebp], 0
$LN5@GetInstanc@4:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	mov	ecx, DWORD PTR _stack_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	movzx	eax, BYTE PTR _bFail$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetInstanc@4
	movzx	ecx, BYTE PTR _bErrorOnFail$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@GetInstanc@4

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[ebp], 1
	jne	SHORT $LN1@GetInstanc@4

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc@4:

; 151  : 		Derived::HandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?HandleMissingInstance@CvLuaUnit@@SAXPAUlua_State@@@Z ; CvLuaUnit::HandleMissingInstance
	add	esp, 4
$LN2@GetInstanc@4:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, DWORD PTR _pkInstance$[ebp]

; 154  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
_TEXT	ENDS
EXTRN	?HandleMissingInstance@CvLuaDeal@@SAXPAUlua_State@@@Z:PROC ; CvLuaDeal::HandleMissingInstance
; Function compile flags: /Odtp
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_stack_size$ = -12					; size = 4
_pkInstance$ = -8					; size = 4
_bFail$ = -1						; size = 1
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 128  : 	const int stack_size = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _stack_size$[ebp], eax

; 129  : 	bool bFail = true;

	mov	BYTE PTR _bFail$[ebp], 1

; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;

	mov	DWORD PTR _pkInstance$[ebp], 0

; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 5
	jne	SHORT $LN5@GetInstanc@5

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN5@GetInstanc@5

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$[ebp], eax

; 138  : 			if(pkInstance)

	cmp	DWORD PTR _pkInstance$[ebp], 0
	je	SHORT $LN5@GetInstanc@5

; 139  : 			{
; 140  : 				bFail = false;

	mov	BYTE PTR _bFail$[ebp], 0
$LN5@GetInstanc@5:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	mov	ecx, DWORD PTR _stack_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	movzx	eax, BYTE PTR _bFail$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetInstanc@5
	movzx	ecx, BYTE PTR _bErrorOnFail$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@GetInstanc@5

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[ebp], 1
	jne	SHORT $LN1@GetInstanc@5

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc@5:

; 151  : 		Derived::HandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?HandleMissingInstance@CvLuaDeal@@SAXPAUlua_State@@@Z ; CvLuaDeal::HandleMissingInstance
	add	esp, 4
$LN2@GetInstanc@5:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, DWORD PTR _pkInstance$[ebp]

; 154  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
_TEXT	ENDS
PUBLIC	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
;	COMDAT ??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEX_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEX_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEX_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z PROC	; CvLuaArgs::toValue<bool>, COMDAT

; 23   : 	{

	push	ebp
	mov	ebp, esp

; 24   : 		return lua_toboolean(L, idx) != 0;

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	neg	eax
	sbb	eax, eax
	neg	eax

; 25   : 	}

	pop	ebp
	ret	0
??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ENDP	; CvLuaArgs::toValue<bool>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 1
??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z PROC	; CvLuaArgs::pushValue<bool>, COMDAT

; 44   : 	{

	push	ebp
	mov	ebp, esp

; 45   : 		lua_pushboolean(L, t);

	movzx	eax, BYTE PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 46   : 	}

	pop	ebp
	ret	0
??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ENDP	; CvLuaArgs::pushValue<bool>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4ArtStyleTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4ArtStyleTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4ArtStyleTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4ArtStyleTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum ArtStyleTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4ArtStyleTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4ArtStyleTypes@@@Z ; CvLuaArgs::pushValue<enum ArtStyleTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4ArtStyleTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4ArtStyleTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum ArtStyleTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4FeatureTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4FeatureTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4FeatureTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4FeatureTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum FeatureTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4FeatureTypes@@@CvLuaArgs@@YA?AW4FeatureTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum FeatureTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4FeatureTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4FeatureTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum FeatureTypes>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z PROC	; CvLuaArgs::pushValue<int>, COMDAT

; 38   : 	{

	push	ebp
	mov	ebp, esp

; 39   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 40   : 	}

	pop	ebp
	ret	0
??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ENDP	; CvLuaArgs::pushValue<int>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@PAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXPAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@PAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXPAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<CvPlot *,enum GoodyTypes,CvUnit *>, COMDAT

; 249  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 250  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 251  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 252  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@PAVCvUnit@@@CvLuaArgs@@YAPAVCvUnit@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<CvUnit *>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4GoodyTypes@@@CvLuaArgs@@YA?AW4GoodyTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum GoodyTypes>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _idx$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$toValue@PAVCvPlot@@@CvLuaArgs@@YAPAVCvPlot@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<CvPlot *>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 253  : 	return 0;

	xor	eax, eax

; 254  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@PAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXPAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<CvPlot *,enum GoodyTypes,CvUnit *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@PAVCvPlot@@PAVCvUnit@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXPAVCvPlot@@PAVCvUnit@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@PAVCvPlot@@PAVCvUnit@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXPAVCvPlot@@PAVCvUnit@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<CvPlot *,CvUnit *>, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 240  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@PAVCvUnit@@@CvLuaArgs@@YAPAVCvUnit@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<CvUnit *>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@PAVCvPlot@@@CvLuaArgs@@YAPAVCvPlot@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<CvPlot *>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 243  : 	return 0;

	xor	eax, eax

; 244  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@PAVCvPlot@@PAVCvUnit@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXPAVCvPlot@@PAVCvUnit@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<CvPlot *,CvUnit *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NHH_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NHH_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NHH_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NHH_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,int,int,bool>, COMDAT

; 98   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 99   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 100  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 101  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 102  : 
; 103  : 	return 1;

	mov	eax, 1

; 104  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NHH_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NHH_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,int,int,bool>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z PROC	; CvLuaArgs::toValue<int>, COMDAT

; 18   : 	{

	push	ebp
	mov	ebp, esp

; 19   : 		return lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 20   : 	}

	pop	ebp
	ret	0
??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ENDP	; CvLuaArgs::toValue<int>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXHH@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXHH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,int>, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 240  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 243  : 	return 0;

	xor	eax, eax

; 244  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXHH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4ProjectTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProjectTypes@@_N2@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4ProjectTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProjectTypes@@_N2@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProjectTypes,bool,bool>, COMDAT

; 98   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 99   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 100  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 101  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ProjectTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 102  : 
; 103  : 	return 1;

	mov	eax, 1

; 104  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4ProjectTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProjectTypes@@_N2@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProjectTypes,bool,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4SpecialistTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4SpecialistTypes@@_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4SpecialistTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4SpecialistTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum SpecialistTypes,bool>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4SpecialistTypes@@@CvLuaArgs@@YA?AW4SpecialistTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum SpecialistTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4SpecialistTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4SpecialistTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum SpecialistTypes,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4ProcessTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProcessTypes@@_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4ProcessTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProcessTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProcessTypes,bool>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4ProcessTypes@@@CvLuaArgs@@YA?AW4ProcessTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ProcessTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4ProcessTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProcessTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProcessTypes,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4FaithPurchaseTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4FaithPurchaseTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4FaithPurchaseTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4FaithPurchaseTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum FaithPurchaseTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4FaithPurchaseTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4FaithPurchaseTypes@@@Z ; CvLuaArgs::pushValue<enum FaithPurchaseTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4FaithPurchaseTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4FaithPurchaseTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum FaithPurchaseTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4FaithPurchaseTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4FaithPurchaseTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4FaithPurchaseTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4FaithPurchaseTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum FaithPurchaseTypes>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4FaithPurchaseTypes@@@CvLuaArgs@@YA?AW4FaithPurchaseTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum FaithPurchaseTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4FaithPurchaseTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4FaithPurchaseTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum FaithPurchaseTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4UnitClassTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4UnitClassTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum UnitClassTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum UnitClassTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4UnitClassTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum UnitClassTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4BuildingClassTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingClassTypes@@_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4BuildingClassTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingClassTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingClassTypes,bool>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingClassTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4BuildingClassTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingClassTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingClassTypes,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProjectTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProjectTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProjectTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ProjectTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProjectTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProjectTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4BuildingTypes@@W4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingTypes@@W4BuildingClassTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4BuildingTypes@@W4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingTypes@@W4BuildingClassTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes,enum BuildingClassTypes,int>, COMDAT

; 98   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 99   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 100  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 101  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingClassTypes>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _idx$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 102  : 
; 103  : 	return 1;

	mov	eax, 1

; 104  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4BuildingTypes@@W4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingTypes@@W4BuildingClassTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes,enum BuildingClassTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4BuildingClassTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4BuildingClassTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum BuildingClassTypes>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingClassTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4BuildingClassTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum BuildingClassTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4YieldTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4YieldTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum YieldTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum YieldTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4YieldTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum YieldTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4DomainTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4DomainTypes@@_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4DomainTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4DomainTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum DomainTypes,bool>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4DomainTypes@@@CvLuaArgs@@YA?AW4DomainTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum DomainTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4DomainTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4DomainTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum DomainTypes,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4TechTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4TechTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes>, COMDAT

; 130  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 131  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TechTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 134  : 
; 135  : 	return 1;

	mov	eax, 1

; 136  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4TechTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4SpecialistTypes@@W4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4SpecialistTypes@@W4YieldTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4SpecialistTypes@@W4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4SpecialistTypes@@W4YieldTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum SpecialistTypes,enum YieldTypes>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum YieldTypes>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4SpecialistTypes@@@CvLuaArgs@@YA?AW4SpecialistTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum SpecialistTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4SpecialistTypes@@W4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4SpecialistTypes@@W4YieldTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum SpecialistTypes,enum YieldTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@J@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEJXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@J@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEJXZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<long>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@J@CvLuaArgs@@YAXPAUlua_State@@J@Z ; CvLuaArgs::pushValue<long>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@J@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEJXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<long>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4PlayerTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4PlayerTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum PlayerTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4PlayerTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHXZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>, COMDAT

; 121  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 122  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 123  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 124  : 
; 125  : 	return 1;

	mov	eax, 1

; 126  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HPAVCvCity@@PAV1@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHPAVCvCity@@1@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HPAVCvCity@@PAV1@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHPAVCvCity@@1@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,CvCity *,CvCity *>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@PAVCvCity@@@CvLuaArgs@@YAPAVCvCity@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<CvCity *>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@PAVCvCity@@@CvLuaArgs@@YAPAVCvCity@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<CvCity *>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HPAVCvCity@@PAV1@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHPAVCvCity@@1@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,CvCity *,CvCity *>
_TEXT	ENDS
PUBLIC	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z	; operator<<<int>
PUBLIC	__$ArrayPad$
EXTRN	__imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z:PROC
EXTRN	__imp_?toUTF8@String@Localization@@QAEPBDAAIH@Z:PROC
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z$1
__ehfuncinfo$??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
xdata$x	ENDS
;	COMDAT ??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z
_TEXT	SEGMENT
$T260500 = -140						; size = 4
_str$ = -136						; size = 28
__$ArrayPad$ = -108					; size = 4
_bytes$ = -104						; size = 4
_text$ = -100						; size = 80
_szComposedString$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_szString$ = 12						; size = 4
_arg1$ = 16						; size = 4
??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z PROC	; GetLocalizedText<int>, COMDAT

; 501  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 128				; 00000080H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T260500[ebp], 0

; 502  : 	Localization::String text = Localization::Lookup(szString);

	mov	eax, DWORD PTR _szString$[ebp]
	push	eax
	lea	ecx, DWORD PTR _text$[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 503  : 	text << arg1;

	lea	edx, DWORD PTR _arg1$[ebp]
	push	edx
	lea	eax, DWORD PTR _text$[ebp]
	push	eax
	call	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ; operator<<<int>
	add	esp, 8

; 504  : 
; 505  : 	size_t bytes = 0;

	mov	DWORD PTR _bytes$[ebp], 0

; 506  : 	const char* szComposedString = text.toUTF8(bytes);

	push	1
	lea	ecx, DWORD PTR _bytes$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDAAIH@Z
	mov	DWORD PTR _szComposedString$[ebp], eax

; 507  : 	CvString str;

	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 508  : 	str.assign(szComposedString, bytes);

	mov	edx, DWORD PTR _bytes$[ebp]
	push	edx
	mov	eax, DWORD PTR _szComposedString$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z

; 509  : 	return str;

	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T260500[ebp]
	or	edx, 1
	mov	DWORD PTR $T260500[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 510  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z$0:
	lea	ecx, DWORD PTR _text$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z$1:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z$2:
	mov	eax, DWORD PTR $T260500[ebp]
	and	eax, 1
	je	$LN6@GetLocaliz
	and	DWORD PTR $T260500[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
$LN6@GetLocaliz:
	ret	0
__ehhandler$??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ENDP	; GetLocalizedText<int>
EXTRN	__imp_?PushArgument@String@Localization@@QAE_NPBD@Z:PROC
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvlocalization\include\cvlocalization.h
;	COMDAT ??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z PROC	; operator<<<char const *>, COMDAT

; 490  : {

	push	ebp
	mov	ebp, esp

; 491  : 	s.PushArgument(val);

	mov	eax, DWORD PTR _val$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z

; 492  : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 493  : }

	pop	ebp
	ret	0
??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ENDP	; operator<<<char const *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z PROC ; operator<<<CvString>, COMDAT

; 490  : {

	push	ebp
	mov	ebp, esp

; 491  : 	s.PushArgument(val);

	mov	ecx, DWORD PTR _val$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z

; 492  : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 493  : }

	pop	ebp
	ret	0
??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ENDP ; operator<<<CvString>
_TEXT	ENDS
EXTRN	__imp_?PushArgument@String@Localization@@QAE_NPBDI@Z:PROC
; Function compile flags: /Odtp
;	COMDAT ??$?6$0CE@@@YAAAVString@Localization@@AAV01@AAY0CE@$$CBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6$0CE@@@YAAAVString@Localization@@AAV01@AAY0CE@$$CBD@Z PROC ; operator<<<36>, COMDAT

; 497  : {

	push	ebp
	mov	ebp, esp

; 498  : 	s.PushArgument(val, N - 1);

	push	35					; 00000023H
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBDI@Z

; 499  : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 500  : }

	pop	ebp
	ret	0
??$?6$0CE@@@YAAAVString@Localization@@AAV01@AAY0CE@$$CBD@Z ENDP ; operator<<<36>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PolicyTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PolicyTypes@@_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PolicyTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PolicyTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PolicyTypes,bool>, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 240  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4PolicyTypes@@@CvLuaArgs@@YA?AW4PolicyTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PolicyTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 243  : 	return 0;

	xor	eax, eax

; 244  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PolicyTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PolicyTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PolicyTypes,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PolicyTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PolicyTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PolicyTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PolicyTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PolicyTypes>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4PolicyTypes@@@CvLuaArgs@@YA?AW4PolicyTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PolicyTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PolicyTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PolicyTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PolicyTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4UnitTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4UnitTypes@@_NPAVCvPlot@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4UnitTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4UnitTypes@@_NPAVCvPlot@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum UnitTypes,bool,CvPlot *>, COMDAT

; 150  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 151  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 152  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 153  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@PAVCvPlot@@@CvLuaArgs@@YAPAVCvPlot@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<CvPlot *>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum UnitTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 154  : 
; 155  : 	return 1;

	mov	eax, 1

; 156  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4UnitTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4UnitTypes@@_NPAVCvPlot@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum UnitTypes,bool,CvPlot *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEH_NPAVCvPlot@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEH_NPAVCvPlot@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,CvPlot *>, COMDAT

; 140  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 141  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 142  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 143  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@PAVCvPlot@@@CvLuaArgs@@YAPAVCvPlot@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<CvPlot *>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	edx, al
	push	edx
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 144  : 
; 145  : 	return 1;

	mov	eax, 1

; 146  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEH_NPAVCvPlot@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,CvPlot *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H_NPAVCvCity@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEH_NPAVCvCity@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H_NPAVCvCity@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEH_NPAVCvCity@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,CvCity *>, COMDAT

; 140  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 141  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 142  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 143  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@PAVCvCity@@@CvLuaArgs@@YAPAVCvCity@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<CvCity *>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	edx, al
	push	edx
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 144  : 
; 145  : 	return 1;

	mov	eax, 1

; 146  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H_NPAVCvCity@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEH_NPAVCvCity@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,CvCity *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4BuildingTypes@@_NPAVCvCity@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4BuildingTypes@@_NPAVCvCity@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4BuildingTypes@@_NPAVCvCity@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4BuildingTypes@@_NPAVCvCity@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes,bool,CvCity *>, COMDAT

; 150  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 151  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 152  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 153  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@PAVCvCity@@@CvLuaArgs@@YAPAVCvCity@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<CvCity *>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 154  : 
; 155  : 	return 1;

	mov	eax, 1

; 156  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4BuildingTypes@@_NPAVCvCity@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4BuildingTypes@@_NPAVCvCity@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes,bool,CvCity *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4ImprovementTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4ImprovementTypes@@_NPAVCvPlot@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ImprovementTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4ImprovementTypes@@_NPAVCvPlot@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ImprovementTypes,bool,CvPlot *>, COMDAT

; 150  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 151  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 152  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 153  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@PAVCvPlot@@@CvLuaArgs@@YAPAVCvPlot@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<CvPlot *>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4ImprovementTypes@@@CvLuaArgs@@YA?AW4ImprovementTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ImprovementTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 154  : 
; 155  : 	return 1;

	mov	eax, 1

; 156  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4ImprovementTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4ImprovementTypes@@_NPAVCvPlot@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ImprovementTypes,bool,CvPlot *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4RouteTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4RouteTypes@@_NPAVCvPlot@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4RouteTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4RouteTypes@@_NPAVCvPlot@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum RouteTypes,bool,CvPlot *>, COMDAT

; 150  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 151  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 152  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 153  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@PAVCvPlot@@@CvLuaArgs@@YAPAVCvPlot@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<CvPlot *>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4RouteTypes@@@CvLuaArgs@@YA?AW4RouteTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum RouteTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 154  : 
; 155  : 	return 1;

	mov	eax, 1

; 156  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4RouteTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4RouteTypes@@_NPAVCvPlot@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum RouteTypes,bool,CvPlot *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4TechTypes@@_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4TechTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes,bool>, COMDAT

; 140  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 141  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 142  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 143  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TechTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 144  : 
; 145  : 	return 1;

	mov	eax, 1

; 146  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4TechTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4HurryTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4HurryTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum HurryTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum HurryTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4HurryTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum HurryTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEIXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEIXZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<unsigned int>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@I@CvLuaArgs@@YAXPAUlua_State@@I@Z ; CvLuaArgs::pushValue<unsigned int>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEIXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<unsigned int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEH_N1@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEH_N1@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,bool>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEH_N1@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4EndTurnBlockingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4EndTurnBlockingTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4EndTurnBlockingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4EndTurnBlockingTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum EndTurnBlockingTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4EndTurnBlockingTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EndTurnBlockingTypes@@@Z ; CvLuaArgs::pushValue<enum EndTurnBlockingTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4EndTurnBlockingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4EndTurnBlockingTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum EndTurnBlockingTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4PlayerTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4PlayerTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z ; CvLuaArgs::pushValue<enum PlayerTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4PlayerTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4HandicapTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4HandicapTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum HandicapTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z ; CvLuaArgs::pushValue<enum HandicapTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4HandicapTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum HandicapTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4CivilizationTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4CivilizationTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum CivilizationTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4CivilizationTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CivilizationTypes@@@Z ; CvLuaArgs::pushValue<enum CivilizationTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4CivilizationTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum CivilizationTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4LeaderHeadTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4LeaderHeadTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum LeaderHeadTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4LeaderHeadTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4LeaderHeadTypes@@@Z ; CvLuaArgs::pushValue<enum LeaderHeadTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4LeaderHeadTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum LeaderHeadTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4LeaderHeadTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4LeaderHeadTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum LeaderHeadTypes>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4LeaderHeadTypes@@@CvLuaArgs@@YA?AW4LeaderHeadTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum LeaderHeadTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4LeaderHeadTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum LeaderHeadTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4EraTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4EraTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum EraTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4EraTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EraTypes@@@Z ; CvLuaArgs::pushValue<enum EraTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4EraTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum EraTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4TeamTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4TeamTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TeamTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z ; CvLuaArgs::pushValue<enum TeamTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4TeamTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TeamTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEH_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEH_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEH_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PlayerProximityTypes@@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4PlayerProximityTypes@@W4PlayerTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerProximityTypes@@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4PlayerProximityTypes@@W4PlayerTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerProximityTypes,enum PlayerTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@W4PlayerProximityTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerProximityTypes@@@Z ; CvLuaArgs::pushValue<enum PlayerProximityTypes>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PlayerProximityTypes@@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4PlayerProximityTypes@@W4PlayerTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerProximityTypes,enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PlayerTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PlayerTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerTypes>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PlayerTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4UnitTypes@@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4UnitTypes@@W4PlayerTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4UnitTypes@@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4UnitTypes@@W4PlayerTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum UnitTypes,enum PlayerTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@W4UnitTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4UnitTypes@@@Z ; CvLuaArgs::pushValue<enum UnitTypes>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4UnitTypes@@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4UnitTypes@@W4PlayerTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum UnitTypes,enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4PlayerOptionTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4PlayerOptionTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4PlayerOptionTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4PlayerOptionTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum PlayerOptionTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4PlayerOptionTypes@@@CvLuaArgs@@YA?AW4PlayerOptionTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerOptionTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4PlayerOptionTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4PlayerOptionTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum PlayerOptionTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PlayerOptionTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PlayerOptionTypes@@_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerOptionTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PlayerOptionTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerOptionTypes,bool>, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 240  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4PlayerOptionTypes@@@CvLuaArgs@@YA?AW4PlayerOptionTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerOptionTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 243  : 	return 0;

	xor	eax, eax

; 244  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PlayerOptionTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PlayerOptionTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerOptionTypes,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4ResourceTypes@@@CvLuaArgs@@YA?AW4ResourceTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ResourceTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4ResourceTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ResourceTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes,bool>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4ResourceTypes@@@CvLuaArgs@@YA?AW4ResourceTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ResourceTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4ResourceTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4ResourceTypes@@H_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4ResourceTypes@@H_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4ResourceTypes@@H_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4ResourceTypes@@H_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum ResourceTypes,int,bool>, COMDAT

; 249  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 250  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 251  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 252  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4ResourceTypes@@@CvLuaArgs@@YA?AW4ResourceTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ResourceTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 253  : 	return 0;

	xor	eax, eax

; 254  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4ResourceTypes@@H_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4ResourceTypes@@H_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum ResourceTypes,int,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4ImprovementTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ImprovementTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ImprovementTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ImprovementTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ImprovementTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4ImprovementTypes@@@CvLuaArgs@@YA?AW4ImprovementTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ImprovementTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4ImprovementTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ImprovementTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ImprovementTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4UnitClassTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4UnitClassTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum UnitClassTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum UnitClassTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4UnitClassTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum UnitClassTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4UnitClassTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4UnitClassTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum UnitClassTypes,int>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum UnitClassTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4UnitClassTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum UnitClassTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingClassTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingClassTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingClassTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingClassTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingClassTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingClassTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingClassTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingClassTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingClassTypes,int>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingClassTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingClassTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingClassTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4HurryTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4HurryTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum HurryTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum HurryTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4HurryTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum HurryTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4TechTypes@@_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4TechTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TechTypes,bool>, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 240  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TechTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 243  : 	return 0;

	xor	eax, eax

; 244  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4TechTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TechTypes,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4TechTypes@@_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4TechTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes,bool>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TechTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4TechTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4TechTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4TechTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TechTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4TechTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AE_NW4TechTypes@@_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AE_NW4TechTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum TechTypes,bool>, COMDAT

; 140  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 141  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 142  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 143  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TechTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 144  : 
; 145  : 	return 1;

	mov	eax, 1

; 146  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AE_NW4TechTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum TechTypes,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4TechTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4TechTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TechTypes>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TechTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4TechTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TechTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HHHH_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHHHH_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HHHH_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHHHH_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,int,int,int,bool>, COMDAT

; 160  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 161  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 162  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 163  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2), CvLuaArgs::toValue<arg4>(L, idx + 3)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _idx$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 164  : 
; 165  : 	return 1;

	mov	eax, 1

; 166  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HHHH_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHHHH_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,int,int,int,bool>
_TEXT	ENDS
PUBLIC	??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z ; std::_Stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 1
??$stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@@Z PROC ; std::stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>, COMDAT

; 3570 : 	{	// sort preserving order of equivalents, using _Pred

	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH

; 3571 : 	_DEBUG_RANGE(_First, _Last);
; 3572 : 	_DEBUG_POINTER(_Pred);
; 3573 : 	if (_First != _Last)

	mov	eax, DWORD PTR __First$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR __Last$[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN2@stable_sor

; 3574 : 		{
; 3575 : 		_Stable_sort(_CHECKED_BASE(_First), _CHECKED_BASE(_Last),
; 3576 : 			_Dist_type(_First), _Val_type(_First), _Pred);

	movzx	ecx, BYTE PTR __Pred$[ebp]
	push	ecx
	push	0
	push	0
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z ; std::_Stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
	add	esp, 20					; 00000014H
$LN2@stable_sor:

; 3577 : 		}
; 3578 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@@Z ENDP ; std::stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AE_NXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AE_NXZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>, COMDAT

; 121  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 122  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 123  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 124  : 
; 125  : 	return 1;

	mov	eax, 1

; 126  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AE_NXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R0?AVbad_alloc@std@@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
xdata$x	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_Ebad_alloc@std@@UAEPAXI@Z ; std::bad_alloc::`vftable'
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
CONST	ENDS
;	COMDAT ??$_Allocate@VCvString@@@std@@YAPAVCvString@@IPAV1@@Z
_TEXT	SEGMENT
$T260809 = -16						; size = 4
$T260805 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@VCvString@@@std@@YAPAVCvString@@IPAV1@@Z PROC ; std::_Allocate<CvString>, COMDAT

; 36   : 	{	// check for integer overflow

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 37   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate

; 38   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate
$LN3@Allocate:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 28					; 0000001cH
	jae	SHORT $LN2@Allocate

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	mov	DWORD PTR $T260809[ebp], 0
	lea	eax, DWORD PTR $T260809[ebp]
	push	eax
	lea	ecx, DWORD PTR $T260805[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR $T260805[ebp], OFFSET ??_7bad_alloc@std@@6B@
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T260805[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@Allocate:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	mov	edx, DWORD PTR __Count$[ebp]
	imul	edx, 28					; 0000001cH
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate:

; 44   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@VCvString@@@std@@YAPAVCvString@@IPAV1@@Z ENDP ; std::_Allocate<CvString>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
_TEXT	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 380  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 381  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN1@scalar@4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Unchecked_move_backward@PAUOpinion@@PAU1@@stdext@@YAPAUOpinion@@PAU1@00@Z
_TEXT	SEGMENT
$T260867 = -34						; size = 1
$T260866 = -33						; size = 1
$T260865 = -32						; size = 4
$T260864 = -28						; size = 4
$T260850 = -21						; size = 1
$T260849 = -20						; size = 4
$T260848 = -16						; size = 4
$T260847 = -12						; size = 4
__Cat$260856 = -8					; size = 1
$T260854 = -7						; size = 1
$T260853 = -6						; size = 1
__Cat$260824 = -4					; size = 1
$T260821 = -3						; size = 1
$T260820 = -2						; size = 1
$T260819 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAUOpinion@@PAU1@@stdext@@YAPAUOpinion@@PAU1@00@Z PROC ; stdext::_Unchecked_move_backward<Opinion *,Opinion *>, COMDAT

; 3694 : 	{	// move [_First, _Last) backwards to [..., _Dest)

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	xor	eax, eax
	mov	BYTE PTR $T260819[ebp], al
	mov	cl, BYTE PTR __Cat$260824[ebp]
	mov	BYTE PTR $T260820[ebp], cl
	mov	dl, BYTE PTR $T260819[ebp]
	mov	BYTE PTR $T260867[ebp], dl
	mov	al, BYTE PTR $T260821[ebp]
	mov	BYTE PTR $T260866[ebp], al
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T260865[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T260864[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T260853[ebp], al
	mov	cl, BYTE PTR __Cat$260856[ebp]
	mov	BYTE PTR $T260854[ebp], cl
	mov	dl, BYTE PTR $T260853[ebp]
	mov	BYTE PTR $T260850[ebp], dl
	mov	eax, DWORD PTR $T260865[ebp]
	mov	DWORD PTR $T260849[ebp], eax
	mov	ecx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T260848[ebp], ecx
	mov	edx, DWORD PTR $T260864[ebp]
	mov	DWORD PTR $T260847[ebp], edx
$LN12@Unchecked_:
	mov	eax, DWORD PTR $T260847[ebp]
	cmp	eax, DWORD PTR $T260848[ebp]
	je	SHORT $LN7@Unchecked_
	mov	ecx, DWORD PTR $T260848[ebp]
	sub	ecx, 84					; 00000054H
	mov	DWORD PTR $T260848[ebp], ecx
	mov	edx, DWORD PTR $T260849[ebp]
	sub	edx, 84					; 00000054H
	mov	DWORD PTR $T260849[ebp], edx
	mov	eax, DWORD PTR $T260848[ebp]
	push	eax
	mov	ecx, DWORD PTR $T260849[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	ecx, DWORD PTR $T260849[ebp]
	mov	edx, DWORD PTR $T260848[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	DWORD PTR [ecx+80], eax
	jmp	SHORT $LN12@Unchecked_
$LN7@Unchecked_:
	mov	eax, DWORD PTR $T260849[ebp]

; 3697 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unchecked_move_backward@PAUOpinion@@PAU1@@stdext@@YAPAUOpinion@@PAU1@00@Z ENDP ; stdext::_Unchecked_move_backward<Opinion *,Opinion *>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Allocate@UOpinion@@@std@@YAPAUOpinion@@IPAU1@@Z
_TEXT	SEGMENT
$T260874 = -16						; size = 4
$T260870 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UOpinion@@@std@@YAPAUOpinion@@IPAU1@@Z PROC ; std::_Allocate<Opinion>, COMDAT

; 36   : 	{	// check for integer overflow

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 37   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate@2

; 38   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate@2
$LN3@Allocate@2:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 84					; 00000054H
	jae	SHORT $LN2@Allocate@2

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	mov	DWORD PTR $T260874[ebp], 0
	lea	eax, DWORD PTR $T260874[ebp]
	push	eax
	lea	ecx, DWORD PTR $T260870[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR $T260870[ebp], OFFSET ??_7bad_alloc@std@@6B@
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T260870[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@Allocate@2:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	mov	edx, DWORD PTR __Count$[ebp]
	imul	edx, 84					; 00000054H
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate@2:

; 44   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@UOpinion@@@std@@YAPAUOpinion@@IPAU1@@Z ENDP ; std::_Allocate<Opinion>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
_TEXT	ENDS
;	COMDAT ?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ
_TEXT	SEGMENT
?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ PROC ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex, COMDAT

; 158  : {

	push	ebp
	mov	ebp, esp

; 159  : 	return 2;

	mov	eax, 2

; 160  : }

	pop	ebp
	ret	0
?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ENDP ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$pushValue@I@CvLuaArgs@@YAXPAUlua_State@@I@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@I@CvLuaArgs@@YAXPAUlua_State@@I@Z PROC	; CvLuaArgs::pushValue<unsigned int>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@I@CvLuaArgs@@YAXPAUlua_State@@I@Z ENDP	; CvLuaArgs::pushValue<unsigned int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum PlayerTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z PROC ; CvLuaArgs::pushValue<enum PlayerTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4ResourceTypes@@@CvLuaArgs@@YA?AW4ResourceTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4ResourceTypes@@@CvLuaArgs@@YA?AW4ResourceTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum ResourceTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4ResourceTypes@@@CvLuaArgs@@YA?AW4ResourceTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum ResourceTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4ArtStyleTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4ArtStyleTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4ArtStyleTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4ArtStyleTypes@@@Z PROC ; CvLuaArgs::pushValue<enum ArtStyleTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4ArtStyleTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4ArtStyleTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum ArtStyleTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4FeatureTypes@@@CvLuaArgs@@YA?AW4FeatureTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4FeatureTypes@@@CvLuaArgs@@YA?AW4FeatureTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum FeatureTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4FeatureTypes@@@CvLuaArgs@@YA?AW4FeatureTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum FeatureTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum BuildingTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum BuildingTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@PAVCvPlot@@@CvLuaArgs@@YAPAVCvPlot@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@PAVCvPlot@@@CvLuaArgs@@YAPAVCvPlot@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<CvPlot *>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@PAVCvPlot@@@CvLuaArgs@@YAPAVCvPlot@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<CvPlot *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4GoodyTypes@@@CvLuaArgs@@YA?AW4GoodyTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4GoodyTypes@@@CvLuaArgs@@YA?AW4GoodyTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum GoodyTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4GoodyTypes@@@CvLuaArgs@@YA?AW4GoodyTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum GoodyTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@PAVCvUnit@@@CvLuaArgs@@YAPAVCvUnit@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@PAVCvUnit@@@CvLuaArgs@@YAPAVCvUnit@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<CvUnit *>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@PAVCvUnit@@@CvLuaArgs@@YAPAVCvUnit@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<CvUnit *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum ProjectTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum ProjectTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4SpecialistTypes@@@CvLuaArgs@@YA?AW4SpecialistTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4SpecialistTypes@@@CvLuaArgs@@YA?AW4SpecialistTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum SpecialistTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4SpecialistTypes@@@CvLuaArgs@@YA?AW4SpecialistTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum SpecialistTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4ProcessTypes@@@CvLuaArgs@@YA?AW4ProcessTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4ProcessTypes@@@CvLuaArgs@@YA?AW4ProcessTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum ProcessTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4ProcessTypes@@@CvLuaArgs@@YA?AW4ProcessTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum ProcessTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4FaithPurchaseTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4FaithPurchaseTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4FaithPurchaseTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4FaithPurchaseTypes@@@Z PROC ; CvLuaArgs::pushValue<enum FaithPurchaseTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4FaithPurchaseTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4FaithPurchaseTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum FaithPurchaseTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4FaithPurchaseTypes@@@CvLuaArgs@@YA?AW4FaithPurchaseTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4FaithPurchaseTypes@@@CvLuaArgs@@YA?AW4FaithPurchaseTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum FaithPurchaseTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4FaithPurchaseTypes@@@CvLuaArgs@@YA?AW4FaithPurchaseTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum FaithPurchaseTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum UnitClassTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum UnitClassTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum BuildingClassTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum BuildingClassTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum YieldTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum YieldTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4DomainTypes@@@CvLuaArgs@@YA?AW4DomainTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4DomainTypes@@@CvLuaArgs@@YA?AW4DomainTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum DomainTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4DomainTypes@@@CvLuaArgs@@YA?AW4DomainTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum DomainTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum TechTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum TechTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@J@CvLuaArgs@@YAXPAUlua_State@@J@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@J@CvLuaArgs@@YAXPAUlua_State@@J@Z PROC	; CvLuaArgs::pushValue<long>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@J@CvLuaArgs@@YAXPAUlua_State@@J@Z ENDP	; CvLuaArgs::pushValue<long>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@PAVCvCity@@@CvLuaArgs@@YAPAVCvCity@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@PAVCvCity@@@CvLuaArgs@@YAPAVCvCity@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<CvCity *>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@PAVCvCity@@@CvLuaArgs@@YAPAVCvCity@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<CvCity *>
_TEXT	ENDS
EXTRN	__imp_?PushArgument@String@Localization@@QAE_NH@Z:PROC
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvlocalization\include\cvlocalization.h
;	COMDAT ??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z PROC	; operator<<<int>, COMDAT

; 490  : {

	push	ebp
	mov	ebp, esp

; 491  : 	s.PushArgument(val);

	mov	eax, DWORD PTR _val$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 492  : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 493  : }

	pop	ebp
	ret	0
??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ENDP	; operator<<<int>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$toValue@W4PolicyTypes@@@CvLuaArgs@@YA?AW4PolicyTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4PolicyTypes@@@CvLuaArgs@@YA?AW4PolicyTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum PolicyTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4PolicyTypes@@@CvLuaArgs@@YA?AW4PolicyTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum PolicyTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum UnitTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum UnitTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4ImprovementTypes@@@CvLuaArgs@@YA?AW4ImprovementTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4ImprovementTypes@@@CvLuaArgs@@YA?AW4ImprovementTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum ImprovementTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4ImprovementTypes@@@CvLuaArgs@@YA?AW4ImprovementTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum ImprovementTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4RouteTypes@@@CvLuaArgs@@YA?AW4RouteTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4RouteTypes@@@CvLuaArgs@@YA?AW4RouteTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum RouteTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4RouteTypes@@@CvLuaArgs@@YA?AW4RouteTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum RouteTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum HurryTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum HurryTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4EndTurnBlockingTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EndTurnBlockingTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4EndTurnBlockingTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EndTurnBlockingTypes@@@Z PROC ; CvLuaArgs::pushValue<enum EndTurnBlockingTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4EndTurnBlockingTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EndTurnBlockingTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum EndTurnBlockingTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z PROC ; CvLuaArgs::pushValue<enum HandicapTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum HandicapTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4CivilizationTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CivilizationTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4CivilizationTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CivilizationTypes@@@Z PROC ; CvLuaArgs::pushValue<enum CivilizationTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4CivilizationTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CivilizationTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum CivilizationTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4LeaderHeadTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4LeaderHeadTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4LeaderHeadTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4LeaderHeadTypes@@@Z PROC ; CvLuaArgs::pushValue<enum LeaderHeadTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4LeaderHeadTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4LeaderHeadTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum LeaderHeadTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4LeaderHeadTypes@@@CvLuaArgs@@YA?AW4LeaderHeadTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4LeaderHeadTypes@@@CvLuaArgs@@YA?AW4LeaderHeadTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum LeaderHeadTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4LeaderHeadTypes@@@CvLuaArgs@@YA?AW4LeaderHeadTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum LeaderHeadTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4EraTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EraTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4EraTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EraTypes@@@Z PROC ; CvLuaArgs::pushValue<enum EraTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4EraTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EraTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum EraTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z PROC ; CvLuaArgs::pushValue<enum TeamTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum TeamTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4PlayerProximityTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerProximityTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4PlayerProximityTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerProximityTypes@@@Z PROC ; CvLuaArgs::pushValue<enum PlayerProximityTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4PlayerProximityTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerProximityTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum PlayerProximityTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4UnitTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4UnitTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4UnitTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4UnitTypes@@@Z PROC ; CvLuaArgs::pushValue<enum UnitTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4UnitTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4UnitTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum UnitTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4PlayerOptionTypes@@@CvLuaArgs@@YA?AW4PlayerOptionTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4PlayerOptionTypes@@@CvLuaArgs@@YA?AW4PlayerOptionTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum PlayerOptionTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4PlayerOptionTypes@@@CvLuaArgs@@YA?AW4PlayerOptionTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum PlayerOptionTypes>
_TEXT	ENDS
PUBLIC	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ	; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
PUBLIC	??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ; std::_Stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	SEGMENT
__unwindtable$??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z$0
__ehfuncinfo$??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
xdata$x	ENDS
;	COMDAT ??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z
_TEXT	SEGMENT
$T260995 = -56						; size = 4
$T260991 = -52						; size = 4
$T260978 = -48						; size = 4
$T260977 = -44						; size = 4
__Tempbuf$ = -36					; size = 20
__Count$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z PROC ; std::_Stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>, COMDAT

; 3560 : 	{	// sort preserving order of equivalents, using _Pred

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 108				; 0000006cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 3561 : 	_Diff _Count = 0;

	mov	DWORD PTR __Count$[ebp], 0

; 3562 : 	_Distance(_First, _Last, _Count);

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T260991[ebp], eax
	mov	ecx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T260978[ebp], ecx
	mov	edx, DWORD PTR $T260991[ebp]
	mov	DWORD PTR $T260977[ebp], edx
	mov	eax, DWORD PTR $T260978[ebp]
	sub	eax, DWORD PTR $T260977[ebp]
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Count$[ebp], eax

; 3563 : 	_Temp_iterator<_Ty> _Tempbuf((_Count + 1) / 2);

	mov	eax, DWORD PTR __Count$[ebp]
	add	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR $T260995[ebp], eax
	mov	DWORD PTR __Tempbuf$[ebp], 0
	mov	DWORD PTR __Tempbuf$[ebp+4], 0
	mov	DWORD PTR __Tempbuf$[ebp+8], 0
	mov	edx, DWORD PTR $T260995[ebp]
	mov	DWORD PTR __Tempbuf$[ebp+12], edx
	lea	eax, DWORD PTR __Tempbuf$[ebp]
	mov	DWORD PTR __Tempbuf$[ebp+16], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3564 : 	_Stable_sort(_First, _Last, _Count, _Tempbuf, _Pred);

	movzx	ecx, BYTE PTR __Pred$[ebp]
	push	ecx
	lea	edx, DWORD PTR __Tempbuf$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ; std::_Stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
	add	esp, 20					; 00000014H

; 3565 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Tempbuf$[ebp]
	call	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z$0:
	lea	ecx, DWORD PTR __Tempbuf$[ebp]
	jmp	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
__ehhandler$??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-112]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z ENDP ; std::_Stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
PUBLIC	??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Insertion_sort1<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
PUBLIC	??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Pop_heap_0<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
PUBLIC	??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0PAH0@Z ; std::_Make_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
PUBLIC	??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ; std::_Unguarded_partition<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
; Function compile flags: /Odtp
;	COMDAT ??$_Sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0H@Z
_TEXT	SEGMENT
$T261258 = -128						; size = 4
__Mid$238555 = -12					; size = 8
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
??$_Sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0H@Z PROC ; std::_Sort<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int>, COMDAT

; 3082 : 	{	// order [_First, _Last), using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 180				; 000000b4H
$LN7@Sort:

; 3083 : 	_Diff _Count;
; 3084 : 	for (; _ISORT_MAX < (_Count = _Last - _First) && 0 < _Ideal; )

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	mov	DWORD PTR __Count$[ebp], eax
	cmp	DWORD PTR __Count$[ebp], 32		; 00000020H
	jle	$LN6@Sort
	cmp	DWORD PTR __Ideal$[ebp], 0
	jle	SHORT $LN6@Sort

; 3085 : 		{	// divide and conquer by quicksort
; 3086 : 		pair<_RanIt, _RanIt> _Mid =
; 3087 : 			std::_Unguarded_partition(_First, _Last);

	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	eax, DWORD PTR __Mid$238555[ebp]
	push	eax
	call	??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ; std::_Unguarded_partition<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3088 : 		_Ideal /= 2, _Ideal += _Ideal / 2;	// allow 1.5 log2(N) divisions

	mov	eax, DWORD PTR __Ideal$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Ideal$[ebp], eax
	mov	eax, DWORD PTR __Ideal$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR __Ideal$[ebp]
	mov	DWORD PTR __Ideal$[ebp], eax

; 3089 : 
; 3090 : 		if (_Mid.first - _First < _Last - _Mid.second)

	mov	ecx, DWORD PTR __Mid$238555[ebp]
	sub	ecx, DWORD PTR __First$[ebp]
	sar	ecx, 3
	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, DWORD PTR __Mid$238555[ebp+4]
	sar	edx, 3
	cmp	ecx, edx
	jge	SHORT $LN5@Sort

; 3091 : 			{	// loop on second half
; 3092 : 			std::_Sort(_First, _Mid.first, _Ideal);

	mov	eax, DWORD PTR __Ideal$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mid$238555[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0H@Z ; std::_Sort<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int>
	add	esp, 12					; 0000000cH

; 3093 : 			_First = _Mid.second;

	mov	eax, DWORD PTR __Mid$238555[ebp+4]
	mov	DWORD PTR __First$[ebp], eax

; 3094 : 			}
; 3095 : 		else

	jmp	SHORT $LN4@Sort
$LN5@Sort:

; 3096 : 			{	// loop on first half
; 3097 : 			std::_Sort(_Mid.second, _Last, _Ideal);

	mov	ecx, DWORD PTR __Ideal$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __Mid$238555[ebp+4]
	push	eax
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0H@Z ; std::_Sort<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int>
	add	esp, 12					; 0000000cH

; 3098 : 			_Last = _Mid.first;

	mov	ecx, DWORD PTR __Mid$238555[ebp]
	mov	DWORD PTR __Last$[ebp], ecx
$LN4@Sort:

; 3099 : 			}
; 3100 : 		}

	jmp	$LN7@Sort
$LN6@Sort:

; 3101 : 
; 3102 : 	if (_ISORT_MAX < _Count)

	cmp	DWORD PTR __Count$[ebp], 32		; 00000020H
	jle	SHORT $LN3@Sort

; 3103 : 		{	// heap sort if too many divisions
; 3104 : 		std::make_heap(_First, _Last);

	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, DWORD PTR __First$[ebp]
	sar	edx, 3
	cmp	edx, 1
	jle	SHORT $LN76@Sort
	push	0
	push	0
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0PAH0@Z ; std::_Make_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
	add	esp, 16					; 00000010H
$LN76@Sort:

; 3105 : 		std::sort_heap(_First, _Last);

	mov	edx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T261258[ebp], edx
	jmp	SHORT $LN92@Sort
$LN91@Sort:
	mov	eax, DWORD PTR $T261258[ebp]
	sub	eax, 8
	mov	DWORD PTR $T261258[ebp], eax
$LN92@Sort:
	mov	ecx, DWORD PTR $T261258[ebp]
	sub	ecx, DWORD PTR __First$[ebp]
	sar	ecx, 3
	cmp	ecx, 1
	jle	SHORT $LN88@Sort
	mov	edx, DWORD PTR $T261258[ebp]
	sub	edx, DWORD PTR __First$[ebp]
	sar	edx, 3
	cmp	edx, 1
	jle	SHORT $LN96@Sort
	push	0
	mov	eax, DWORD PTR $T261258[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Pop_heap_0<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
	add	esp, 12					; 0000000cH
$LN96@Sort:
	jmp	SHORT $LN91@Sort
$LN88@Sort:

; 3106 : 		}
; 3107 : 	else if (1 < _Count)

	jmp	SHORT $LN8@Sort
$LN3@Sort:
	cmp	DWORD PTR __Count$[ebp], 1
	jle	SHORT $LN8@Sort

; 3108 : 		std::_Insertion_sort(_First, _Last);	// small

	push	0
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Insertion_sort1<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
	add	esp, 12					; 0000000cH
$LN8@Sort:

; 3109 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0H@Z ENDP ; std::_Sort<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int>
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	SEGMENT
__catchsym$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$5
__unwindtable$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
tv89 = -36						; size = 4
$T261363 = -32						; size = 4
$T261362 = -28						; size = 4
__Vptr$261371 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<Opinion *,unsigned int,Opinion,std::allocator<Opinion> >, COMDAT

; 393  : 	{	// copy _Count *_Val to raw _First, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 394  : 
; 395  :  #if _HAS_ITERATOR_DEBUGGING
; 396  : //	if (_Count < 0)
; 397  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 398  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 399  : 
; 400  : 	_FwdIt _Next = _First;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 401  : 
; 402  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 403  : 	for (; 0 < _Count; --_Count, ++_First)

	jmp	SHORT $LN6@Uninit_fil
$LN5@Uninit_fil:
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Count$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 84					; 00000054H
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_fil:
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN4@Uninit_fil

; 404  : 		_Al.construct(_First, _Val);

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Vptr$261371[ebp], eax
	mov	ecx, DWORD PTR __Vptr$261371[ebp]
	mov	DWORD PTR $T261363[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	DWORD PTR $T261363[ebp], 0
	je	SHORT $LN18@Uninit_fil
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T261363[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T261363[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+80], edx
	mov	eax, DWORD PTR $T261363[ebp]
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN19@Uninit_fil
$LN18@Uninit_fil:
	mov	DWORD PTR tv89[ebp], 0
$LN19@Uninit_fil:
	mov	ecx, DWORD PTR tv89[ebp]
	mov	DWORD PTR $T261362[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN5@Uninit_fil
$LN4@Uninit_fil:
	jmp	SHORT $LN10@Uninit_fil
__catch$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 405  : 	_CATCH_ALL
; 406  : 	for (; _Next != _First; ++_Next)

	jmp	SHORT $LN3@Uninit_fil
$LN2@Uninit_fil:
	mov	edx, DWORD PTR __Next$[ebp]
	add	edx, 84					; 00000054H
	mov	DWORD PTR __Next$[ebp], edx
$LN3@Uninit_fil:
	mov	eax, DWORD PTR __Next$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	je	SHORT $LN1@Uninit_fil

; 407  : 		_Al.destroy(_Next);

	mov	ecx, DWORD PTR __Next$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	xor	ecx, ecx
	and	ecx, 1
	je	SHORT $LN26@Uninit_fil
	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN26@Uninit_fil:
	jmp	SHORT $LN2@Uninit_fil
$LN1@Uninit_fil:

; 408  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 409  : 	_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN9@Uninit_fil
	ret	0
$LN10@Uninit_fil:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN9@Uninit_fil:

; 410  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Vptr$261371[ebp]
	push	eax
	mov	ecx, DWORD PTR $T261363[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<Opinion *,unsigned int,Opinion,std::allocator<Opinion> >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 63   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 64   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T261434 = -8						; size = 4
__Next$238721 = -4					; size = 4
??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ PROC		; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>, COMDAT
; _this$ = ecx

; 545  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 546  : 		if (_Buf._Begin != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Temp_itera

; 547  : 			{	// destroy any constructed elements in buffer
; 548  : 			for (_Pty _Next = _Buf._Begin;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Next$238721[ebp], edx

; 549  : 				_Next != _Buf._Hiwater; ++_Next)

	jmp	SHORT $LN3@Temp_itera
$LN2@Temp_itera:
	mov	eax, DWORD PTR __Next$238721[ebp]
	add	eax, 84					; 00000054H
	mov	DWORD PTR __Next$238721[ebp], eax
$LN3@Temp_itera:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Next$238721[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	je	SHORT $LN1@Temp_itera

; 550  : 				_Destroy(&*_Next);

	mov	ecx, DWORD PTR __Next$238721[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	xor	eax, eax
	and	eax, 1
	je	SHORT $LN7@Temp_itera
	mov	ecx, DWORD PTR __Next$238721[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN7@Temp_itera:
	jmp	SHORT $LN2@Temp_itera
$LN1@Temp_itera:

; 551  : 			std::return_temporary_buffer(_Buf._Begin);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T261434[ebp], eax
	mov	ecx, DWORD PTR $T261434[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN5@Temp_itera:

; 552  : 			}
; 553  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ENDP		; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
_TEXT	ENDS
PUBLIC	??$_Buffered_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00HHAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ; std::_Buffered_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
PUBLIC	??$_Buffered_merge_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ; std::_Buffered_merge_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
PUBLIC	?_Maxlen@?$_Temp_iterator@UOpinion@@@std@@QAEHXZ ; std::_Temp_iterator<Opinion>::_Maxlen
PUBLIC	??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z ; std::_Insertion_sort1<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,Opinion>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z
_TEXT	SEGMENT
__Count2$238778 = -8					; size = 4
__Mid$238779 = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Count$ = 16						; size = 4
__Tempbuf$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z PROC ; std::_Stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>, COMDAT

; 3529 : 	{	// sort preserving order of equivalents, using _Pred

	push	ebp
	mov	ebp, esp
	sub	esp, 352				; 00000160H

; 3530 : 	if (_Count <= _ISORT_MAX)

	cmp	DWORD PTR __Count$[ebp], 32		; 00000020H
	jg	SHORT $LN4@Stable_sor

; 3531 : 		std::_Insertion_sort(_First, _Last, _Pred);	// small

	push	0
	movzx	eax, BYTE PTR __Pred$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z ; std::_Insertion_sort1<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,Opinion>
	add	esp, 16					; 00000010H

; 3532 : 	else

	jmp	$LN5@Stable_sor
$LN4@Stable_sor:

; 3533 : 		{	// sort halves and merge
; 3534 : 		_Diff _Count2 = (_Count + 1) / 2;

	mov	eax, DWORD PTR __Count$[ebp]
	add	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Count2$238778[ebp], eax

; 3535 : 		_BidIt _Mid = _First;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Mid$238779[ebp], eax

; 3536 : 		std::advance(_Mid, _Count2);

	mov	ecx, DWORD PTR __Count2$238778[ebp]
	imul	ecx, 84					; 00000054H
	add	ecx, DWORD PTR __Mid$238779[ebp]
	mov	DWORD PTR __Mid$238779[ebp], ecx

; 3537 : 
; 3538 : 		if (_Count2 <= _Tempbuf._Maxlen())

	mov	ecx, DWORD PTR __Tempbuf$[ebp]
	call	?_Maxlen@?$_Temp_iterator@UOpinion@@@std@@QAEHXZ ; std::_Temp_iterator<Opinion>::_Maxlen
	cmp	DWORD PTR __Count2$238778[ebp], eax
	jg	SHORT $LN2@Stable_sor

; 3539 : 			{	// temp buffer big enough, sort each half using buffer
; 3540 : 			_Buffered_merge_sort(_First, _Mid, _Count2, _Tempbuf, _Pred);

	movzx	edx, BYTE PTR __Pred$[ebp]
	push	edx
	mov	eax, DWORD PTR __Tempbuf$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count2$238778[ebp]
	push	ecx
	mov	edx, DWORD PTR __Mid$238779[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Buffered_merge_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ; std::_Buffered_merge_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
	add	esp, 20					; 00000014H

; 3541 : 			_Buffered_merge_sort(_Mid, _Last, _Count - _Count2,
; 3542 : 				_Tempbuf, _Pred);

	movzx	ecx, BYTE PTR __Pred$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Tempbuf$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, DWORD PTR __Count2$238778[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Mid$238779[ebp]
	push	edx
	call	??$_Buffered_merge_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ; std::_Buffered_merge_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
	add	esp, 20					; 00000014H

; 3543 : 			}
; 3544 : 		else

	jmp	SHORT $LN1@Stable_sor
$LN2@Stable_sor:

; 3545 : 			{	// temp buffer not big enough, divide and conquer
; 3546 : 			_Stable_sort(_First, _Mid, _Count2, _Tempbuf, _Pred);

	movzx	eax, BYTE PTR __Pred$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Tempbuf$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count2$238778[ebp]
	push	edx
	mov	eax, DWORD PTR __Mid$238779[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ; std::_Stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
	add	esp, 20					; 00000014H

; 3547 : 			_Stable_sort(_Mid, _Last, _Count - _Count2, _Tempbuf, _Pred);

	movzx	edx, BYTE PTR __Pred$[ebp]
	push	edx
	mov	eax, DWORD PTR __Tempbuf$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, DWORD PTR __Count2$238778[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __Mid$238779[ebp]
	push	eax
	call	??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ; std::_Stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
	add	esp, 20					; 00000014H
$LN1@Stable_sor:

; 3548 : 			}
; 3549 : 
; 3550 : 		_Buffered_merge(_First, _Mid, _Last,
; 3551 : 			_Count2, _Count - _Count2, _Tempbuf, _Pred);	// merge halves

	movzx	ecx, BYTE PTR __Pred$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Tempbuf$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, DWORD PTR __Count2$238778[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count2$238778[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __Mid$238779[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Buffered_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00HHAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ; std::_Buffered_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
	add	esp, 28					; 0000001cH
$LN5@Stable_sor:

; 3552 : 		}
; 3553 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ENDP ; std::_Stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__catchsym$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$5
__unwindtable$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
tv89 = -36						; size = 4
$T261959 = -32						; size = 4
$T261958 = -28						; size = 4
__Vptr$261956 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<CvString *,CvString *,std::allocator<CvString> >, COMDAT

; 124  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 128  : 
; 129  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	jmp	SHORT $LN6@Uninit_cop
$LN5@Uninit_cop:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_cop:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_cop

; 131  : 		_Al.construct(_Dest, *_First);

	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Vptr$261956[ebp], ecx
	mov	edx, DWORD PTR __Vptr$261956[ebp]
	mov	DWORD PTR $T261959[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	DWORD PTR $T261959[ebp], 0
	je	SHORT $LN18@Uninit_cop
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T261959[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T261959[ebp]
	mov	DWORD PTR tv89[ebp], ecx
	jmp	SHORT $LN19@Uninit_cop
$LN18@Uninit_cop:
	mov	DWORD PTR tv89[ebp], 0
$LN19@Uninit_cop:
	mov	edx, DWORD PTR tv89[ebp]
	mov	DWORD PTR $T261958[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN5@Uninit_cop
$LN4@Uninit_cop:
	jmp	SHORT $LN10@Uninit_cop
__catch$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)

	jmp	SHORT $LN3@Uninit_cop
$LN2@Uninit_cop:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_cop:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_cop

; 134  : 		_Al.destroy(_Next);

	mov	ecx, DWORD PTR __Next$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN26@Uninit_cop
	mov	eax, DWORD PTR __Next$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN26@Uninit_cop:
	jmp	SHORT $LN2@Uninit_cop
$LN1@Uninit_cop:

; 135  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 136  : 	_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1
	ret	0
$LN10@Uninit_cop:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1:

; 137  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_cop:

; 138  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Vptr$261956[ebp]
	push	eax
	mov	ecx, DWORD PTR $T261959[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<CvString *,CvString *,std::allocator<CvString> >
PUBLIC	??$_Median@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Median<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z
_TEXT	SEGMENT
$T262176 = -124						; size = 4
__Tmp$262174 = -120					; size = 8
$T262156 = -112						; size = 4
$T262155 = -108						; size = 4
__Tmp$262154 = -104					; size = 8
$T262135 = -96						; size = 4
__Tmp$262131 = -92					; size = 8
$T262115 = -84						; size = 4
$T262114 = -80						; size = 4
__Tmp$262110 = -76					; size = 8
$T262094 = -68						; size = 4
$T262093 = -64						; size = 4
__Tmp$262089 = -60					; size = 8
$T262070 = -52						; size = 4
$T262069 = -48						; size = 4
__Tmp$262065 = -44					; size = 8
$T262043 = -36						; size = 4
__Tmp$262039 = -32					; size = 8
__Plast$ = -20						; size = 4
__Glast$ = -16						; size = 4
__Pfirst$ = -12						; size = 4
__Gfirst$ = -8						; size = 4
__Mid$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z PROC ; std::_Unguarded_partition<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>, COMDAT

; 3024 : 	{	// partition [_First, _Last), using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 124				; 0000007cH

; 3025 : 	_RanIt _Mid = _First + (_Last - _First) / 2;	// sort median to _Mid

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR __First$[ebp]
	lea	edx, DWORD PTR [ecx+eax*8]
	mov	DWORD PTR __Mid$[ebp], edx

; 3026 : 	std::_Median(_First, _Mid, _Last - 1);

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, 8
	push	eax
	mov	ecx, DWORD PTR __Mid$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Median@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Median<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3027 : 	_RanIt _Pfirst = _Mid;

	mov	eax, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR __Pfirst$[ebp], eax

; 3028 : 	_RanIt _Plast = _Pfirst + 1;

	mov	ecx, DWORD PTR __Pfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Plast$[ebp], ecx
$LN27@Unguarded_:

; 3029 : 
; 3030 : 	while (_First < _Pfirst
; 3031 : 		&& !_DEBUG_LT(*(_Pfirst - 1), *_Pfirst)
; 3032 : 		&& !(*_Pfirst < *(_Pfirst - 1)))

	mov	edx, DWORD PTR __First$[ebp]
	cmp	edx, DWORD PTR __Pfirst$[ebp]
	jae	SHORT $LN25@Unguarded_
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	edx, DWORD PTR [eax-4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN25@Unguarded_
	mov	edx, DWORD PTR __Pfirst$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax-4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	jne	SHORT $LN25@Unguarded_

; 3033 : 		--_Pfirst;

	mov	ecx, DWORD PTR __Pfirst$[ebp]
	sub	ecx, 8
	mov	DWORD PTR __Pfirst$[ebp], ecx
	jmp	SHORT $LN27@Unguarded_
$LN25@Unguarded_:

; 3034 : 	while (_Plast < _Last
; 3035 : 		&& !_DEBUG_LT(*_Plast, *_Pfirst)
; 3036 : 		&& !(*_Pfirst < *_Plast))

	mov	edx, DWORD PTR __Plast$[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	jae	SHORT $LN24@Unguarded_
	mov	eax, DWORD PTR __Plast$[ebp]
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN24@Unguarded_
	mov	edx, DWORD PTR __Pfirst$[ebp]
	mov	eax, DWORD PTR __Plast$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	jne	SHORT $LN24@Unguarded_

; 3037 : 		++_Plast;

	mov	ecx, DWORD PTR __Plast$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Plast$[ebp], ecx
	jmp	SHORT $LN25@Unguarded_
$LN24@Unguarded_:

; 3038 : 
; 3039 : 	_RanIt _Gfirst = _Plast;

	mov	edx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR __Gfirst$[ebp], edx

; 3040 : 	_RanIt _Glast = _Pfirst;

	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR __Glast$[ebp], eax
$LN23@Unguarded_:

; 3041 : 
; 3042 : 	for (; ; )
; 3043 : 		{	// partition
; 3044 : 		for (; _Gfirst < _Last; ++_Gfirst)

	jmp	SHORT $LN21@Unguarded_
$LN20@Unguarded_:
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Gfirst$[ebp], ecx
$LN21@Unguarded_:
	mov	edx, DWORD PTR __Gfirst$[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	jae	$LN19@Unguarded_

; 3045 : 			if (_DEBUG_LT(*_Pfirst, *_Gfirst))

	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN44@Unguarded_
	jmp	SHORT $LN17@Unguarded_

; 3046 : 				;
; 3047 : 			else if (*_Gfirst < *_Pfirst)

$LN44@Unguarded_:
	mov	edx, DWORD PTR __Gfirst$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN16@Unguarded_

; 3048 : 				break;

	jmp	SHORT $LN19@Unguarded_

; 3049 : 			else

	jmp	SHORT $LN17@Unguarded_
$LN16@Unguarded_:

; 3050 : 				std::iter_swap(_Plast++, _Gfirst);

	mov	ecx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR $T262043[ebp], ecx
	mov	edx, DWORD PTR __Plast$[ebp]
	add	edx, 8
	mov	DWORD PTR __Plast$[ebp], edx
	mov	eax, DWORD PTR $T262043[ebp]
	cmp	eax, DWORD PTR __Gfirst$[ebp]
	je	SHORT $LN17@Unguarded_
	mov	ecx, DWORD PTR $T262043[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$262039[ebp], edx
	mov	eax, DWORD PTR $T262043[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$262039[ebp+4], ecx
	mov	edx, DWORD PTR __Gfirst$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T262043[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR __Gfirst$[ebp]
	mov	ecx, DWORD PTR __Tmp$262039[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$262039[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN17@Unguarded_:
	jmp	$LN20@Unguarded_
$LN19@Unguarded_:

; 3051 : 		for (; _First < _Glast; --_Glast)

	jmp	SHORT $LN14@Unguarded_
$LN13@Unguarded_:
	mov	eax, DWORD PTR __Glast$[ebp]
	sub	eax, 8
	mov	DWORD PTR __Glast$[ebp], eax
$LN14@Unguarded_:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Glast$[ebp]
	jae	$LN12@Unguarded_

; 3052 : 			if (_DEBUG_LT(*(_Glast - 1), *_Pfirst))

	mov	edx, DWORD PTR __Glast$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR [edx-4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN55@Unguarded_
	jmp	SHORT $LN10@Unguarded_

; 3053 : 				;
; 3054 : 			else if (*_Pfirst < *(_Glast - 1))

$LN55@Unguarded_:
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	edx, DWORD PTR __Glast$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx-4]
	setg	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN9@Unguarded_

; 3055 : 				break;

	jmp	SHORT $LN12@Unguarded_

; 3056 : 			else

	jmp	SHORT $LN10@Unguarded_
$LN9@Unguarded_:

; 3057 : 				std::iter_swap(--_Pfirst, _Glast - 1);

	mov	eax, DWORD PTR __Pfirst$[ebp]
	sub	eax, 8
	mov	DWORD PTR __Pfirst$[ebp], eax
	mov	ecx, DWORD PTR __Glast$[ebp]
	sub	ecx, 8
	mov	DWORD PTR $T262070[ebp], ecx
	mov	edx, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T262069[ebp], edx
	mov	eax, DWORD PTR $T262069[ebp]
	cmp	eax, DWORD PTR $T262070[ebp]
	je	SHORT $LN10@Unguarded_
	mov	ecx, DWORD PTR $T262069[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$262065[ebp], edx
	mov	eax, DWORD PTR $T262069[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$262065[ebp+4], ecx
	mov	edx, DWORD PTR $T262070[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T262069[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR $T262070[ebp]
	mov	ecx, DWORD PTR __Tmp$262065[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$262065[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN10@Unguarded_:
	jmp	$LN13@Unguarded_
$LN12@Unguarded_:

; 3058 : 		if (_Glast == _First && _Gfirst == _Last)

	mov	eax, DWORD PTR __Glast$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	jne	SHORT $LN7@Unguarded_
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	jne	SHORT $LN7@Unguarded_

; 3059 : 			return (pair<_RanIt, _RanIt>(_Pfirst, _Plast));

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN28@Unguarded_
$LN7@Unguarded_:

; 3060 : 
; 3061 : 		if (_Glast == _First)

	mov	eax, DWORD PTR __Glast$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	jne	$LN6@Unguarded_

; 3062 : 			{	// no room at bottom, rotate pivot upward
; 3063 : 			if (_Plast != _Gfirst)

	mov	ecx, DWORD PTR __Plast$[ebp]
	cmp	ecx, DWORD PTR __Gfirst$[ebp]
	je	SHORT $LN5@Unguarded_

; 3064 : 				std::iter_swap(_Pfirst, _Plast);

	mov	edx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR $T262094[ebp], edx
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T262093[ebp], eax
	mov	ecx, DWORD PTR $T262093[ebp]
	cmp	ecx, DWORD PTR $T262094[ebp]
	je	SHORT $LN5@Unguarded_
	mov	edx, DWORD PTR $T262093[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$262089[ebp], eax
	mov	ecx, DWORD PTR $T262093[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$262089[ebp+4], edx
	mov	eax, DWORD PTR $T262094[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR $T262093[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T262094[ebp]
	mov	edx, DWORD PTR __Tmp$262089[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Tmp$262089[ebp+4]
	mov	DWORD PTR [ecx+4], eax
$LN5@Unguarded_:

; 3065 : 			++_Plast;

	mov	ecx, DWORD PTR __Plast$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Plast$[ebp], ecx

; 3066 : 			std::iter_swap(_Pfirst++, _Gfirst++);

	mov	edx, DWORD PTR __Gfirst$[ebp]
	mov	DWORD PTR $T262115[ebp], edx
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T262114[ebp], eax
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Pfirst$[ebp], ecx
	mov	edx, DWORD PTR __Gfirst$[ebp]
	add	edx, 8
	mov	DWORD PTR __Gfirst$[ebp], edx
	mov	eax, DWORD PTR $T262114[ebp]
	cmp	eax, DWORD PTR $T262115[ebp]
	je	SHORT $LN73@Unguarded_
	mov	ecx, DWORD PTR $T262114[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$262110[ebp], edx
	mov	eax, DWORD PTR $T262114[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$262110[ebp+4], ecx
	mov	edx, DWORD PTR $T262115[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T262114[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR $T262115[ebp]
	mov	ecx, DWORD PTR __Tmp$262110[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$262110[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN73@Unguarded_:

; 3067 : 			}
; 3068 : 		else if (_Gfirst == _Last)

	jmp	$LN4@Unguarded_
$LN6@Unguarded_:
	mov	eax, DWORD PTR __Gfirst$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	jne	$LN3@Unguarded_

; 3069 : 			{	// no room at top, rotate pivot downward
; 3070 : 			if (--_Glast != --_Pfirst)

	mov	ecx, DWORD PTR __Glast$[ebp]
	sub	ecx, 8
	mov	DWORD PTR __Glast$[ebp], ecx
	mov	edx, DWORD PTR __Pfirst$[ebp]
	sub	edx, 8
	mov	DWORD PTR __Pfirst$[ebp], edx
	mov	eax, DWORD PTR __Glast$[ebp]
	cmp	eax, DWORD PTR __Pfirst$[ebp]
	je	SHORT $LN2@Unguarded_

; 3071 : 				std::iter_swap(_Glast, _Pfirst);

	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T262135[ebp], ecx
	mov	edx, DWORD PTR __Glast$[ebp]
	cmp	edx, DWORD PTR $T262135[ebp]
	je	SHORT $LN2@Unguarded_
	mov	eax, DWORD PTR __Glast$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$262131[ebp], ecx
	mov	edx, DWORD PTR __Glast$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Tmp$262131[ebp+4], eax
	mov	ecx, DWORD PTR $T262135[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Glast$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T262135[ebp]
	mov	eax, DWORD PTR __Tmp$262131[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Tmp$262131[ebp+4]
	mov	DWORD PTR [edx+4], ecx
$LN2@Unguarded_:

; 3072 : 			std::iter_swap(_Pfirst, --_Plast);

	mov	edx, DWORD PTR __Plast$[ebp]
	sub	edx, 8
	mov	DWORD PTR __Plast$[ebp], edx
	mov	eax, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR $T262156[ebp], eax
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T262155[ebp], ecx
	mov	edx, DWORD PTR $T262155[ebp]
	cmp	edx, DWORD PTR $T262156[ebp]
	je	SHORT $LN87@Unguarded_
	mov	eax, DWORD PTR $T262155[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$262154[ebp], ecx
	mov	edx, DWORD PTR $T262155[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Tmp$262154[ebp+4], eax
	mov	ecx, DWORD PTR $T262156[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR $T262155[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T262156[ebp]
	mov	eax, DWORD PTR __Tmp$262154[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Tmp$262154[ebp+4]
	mov	DWORD PTR [edx+4], ecx
$LN87@Unguarded_:

; 3073 : 			}
; 3074 : 		else

	jmp	SHORT $LN4@Unguarded_
$LN3@Unguarded_:

; 3075 : 			std::iter_swap(_Gfirst++, --_Glast);

	mov	edx, DWORD PTR __Glast$[ebp]
	sub	edx, 8
	mov	DWORD PTR __Glast$[ebp], edx
	mov	eax, DWORD PTR __Gfirst$[ebp]
	mov	DWORD PTR $T262176[ebp], eax
	mov	ecx, DWORD PTR $T262176[ebp]
	cmp	ecx, DWORD PTR __Glast$[ebp]
	je	SHORT $LN94@Unguarded_
	mov	edx, DWORD PTR $T262176[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$262174[ebp], eax
	mov	ecx, DWORD PTR $T262176[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$262174[ebp+4], edx
	mov	eax, DWORD PTR __Glast$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR $T262176[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR __Glast$[ebp]
	mov	edx, DWORD PTR __Tmp$262174[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Tmp$262174[ebp+4]
	mov	DWORD PTR [ecx+4], eax
$LN94@Unguarded_:
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Gfirst$[ebp], ecx
$LN4@Unguarded_:

; 3076 : 		}

	jmp	$LN23@Unguarded_
$LN28@Unguarded_:

; 3077 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ENDP ; std::_Unguarded_partition<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$get_temporary_buffer@UOpinion@@@std@@YA?AU?$pair@PAUOpinion@@H@0@H@Z ; std::get_temporary_buffer<Opinion>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ?_Maxlen@?$_Temp_iterator@UOpinion@@@std@@QAEHXZ
_TEXT	SEGMENT
_this$ = -32						; size = 4
__Pair$238999 = -8					; size = 8
?_Maxlen@?$_Temp_iterator@UOpinion@@@std@@QAEHXZ PROC	; std::_Temp_iterator<Opinion>::_Maxlen, COMDAT
; _this$ = ecx

; 607  : 		{	// return size of buffer

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 608  : 		if (_Pbuf->_Begin == 0 && 0 < _Pbuf->_Size)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN1@Maxlen
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	cmp	DWORD PTR [eax+12], 0
	jle	SHORT $LN1@Maxlen

; 609  : 			{	// allocate buffer on first size query
; 610  : 			pair<_Pty, _PDFT> _Pair =
; 611  : 				std::get_temporary_buffer<_Ty>(_Pbuf->_Size);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	lea	ecx, DWORD PTR __Pair$238999[ebp]
	push	ecx
	call	??$get_temporary_buffer@UOpinion@@@std@@YA?AU?$pair@PAUOpinion@@H@0@H@Z ; std::get_temporary_buffer<Opinion>
	add	esp, 8

; 612  : 
; 613  : 			_Pbuf->_Begin = _Pair.first;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR __Pair$238999[ebp]
	mov	DWORD PTR [eax], ecx

; 614  : 			_Pbuf->_Current = _Pair.first;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR __Pair$238999[ebp]
	mov	DWORD PTR [eax+4], ecx

; 615  : 			_Pbuf->_Hiwater = _Pair.first;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR __Pair$238999[ebp]
	mov	DWORD PTR [eax+8], ecx

; 616  : 			_Pbuf->_Size = _Pair.second;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR __Pair$238999[ebp+4]
	mov	DWORD PTR [eax+12], ecx
$LN1@Maxlen:

; 617  : 			}
; 618  : 		return (_Pbuf->_Size);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	eax, DWORD PTR [eax+12]

; 619  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Maxlen@?$_Temp_iterator@UOpinion@@@std@@QAEHXZ ENDP	; std::_Temp_iterator<Opinion>::_Maxlen
_TEXT	ENDS
PUBLIC	??$_Chunked_merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinionEval@@@std@@YAXPAUOpinion@@0V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z ; std::_Chunked_merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,OpinionEval>
PUBLIC	??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z ; stdext::_Unchecked_chunked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,int,OpinionEval>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Buffered_merge_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z
_TEXT	SEGMENT
tv144 = -220						; size = 4
$T262573 = -61						; size = 1
$T262298 = -60						; size = 4
$T262294 = -56						; size = 4
$T262253 = -32						; size = 4
$T262233 = -28						; size = 4
$T262190 = -20						; size = 4
__Chunk$239071 = -16					; size = 4
__Midn$239069 = -12					; size = 4
__Nleft$239065 = -8					; size = 4
__Mid$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Count$ = 16						; size = 4
__Tempbuf$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Buffered_merge_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z PROC ; std::_Buffered_merge_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>, COMDAT

; 3502 : 	{	// sort using temp buffer for merges, using _Pred

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH

; 3503 : 	_BidIt _Mid = _First;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Mid$[ebp], eax

; 3504 : 	for (_Diff _Nleft = _Count; _ISORT_MAX <= _Nleft; _Nleft -= _ISORT_MAX)

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Nleft$239065[ebp], ecx
	jmp	SHORT $LN6@Buffered_m
$LN5@Buffered_m:
	mov	edx, DWORD PTR __Nleft$239065[ebp]
	sub	edx, 32					; 00000020H
	mov	DWORD PTR __Nleft$239065[ebp], edx
$LN6@Buffered_m:
	cmp	DWORD PTR __Nleft$239065[ebp], 32	; 00000020H
	jl	SHORT $LN26@Buffered_m

; 3505 : 		{	// sort chunks
; 3506 : 		_BidIt _Midn = _Mid;

	mov	eax, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR __Midn$239069[ebp], eax

; 3507 : 		std::advance(_Midn, (int)_ISORT_MAX);

	mov	ecx, 32					; 00000020H
	imul	ecx, 84					; 00000054H
	add	ecx, DWORD PTR __Midn$239069[ebp]
	mov	DWORD PTR __Midn$239069[ebp], ecx

; 3508 : 
; 3509 : 		std::_Insertion_sort(_Mid, _Midn, _Pred);

	mov	edx, DWORD PTR __Midn$239069[ebp]
	mov	DWORD PTR $T262233[ebp], edx
	push	0
	movzx	eax, BYTE PTR __Pred$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T262233[ebp]
	push	ecx
	mov	edx, DWORD PTR __Mid$[ebp]
	push	edx
	call	??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z ; std::_Insertion_sort1<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,Opinion>
	add	esp, 16					; 00000010H

; 3510 : 		_Mid = _Midn;

	mov	eax, DWORD PTR __Midn$239069[ebp]
	mov	DWORD PTR __Mid$[ebp], eax

; 3511 : 		}

	jmp	SHORT $LN5@Buffered_m

; 3512 : 	std::_Insertion_sort(_Mid, _Last, _Pred);	// sort partial last chunk

$LN26@Buffered_m:
	push	0
	movzx	ecx, BYTE PTR __Pred$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __Mid$[ebp]
	push	eax
	call	??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z ; std::_Insertion_sort1<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,Opinion>
	add	esp, 16					; 00000010H

; 3513 : 
; 3514 : 	for (_Diff _Chunk = _ISORT_MAX; _Chunk < _Count; _Chunk *= 2)

	mov	DWORD PTR __Chunk$239071[ebp], 32	; 00000020H
	jmp	SHORT $LN3@Buffered_m
$LN2@Buffered_m:
	mov	ecx, DWORD PTR __Chunk$239071[ebp]
	shl	ecx, 1
	mov	DWORD PTR __Chunk$239071[ebp], ecx
$LN3@Buffered_m:
	mov	edx, DWORD PTR __Chunk$239071[ebp]
	cmp	edx, DWORD PTR __Count$[ebp]
	jge	$LN7@Buffered_m

; 3515 : 		{	// merge adjacent pairs of chunks to and from temp buffer
; 3516 : 		_STDEXT _Unchecked_chunked_merge(_First, _Last, _Tempbuf._Init(),
; 3517 : 			_Chunk, _Count, _Pred);

	movzx	eax, BYTE PTR __Pred$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Chunk$239071[ebp]
	push	edx
	mov	eax, DWORD PTR __Tempbuf$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR __Tempbuf$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx
	sub	esp, 20					; 00000014H
	mov	edx, esp
	mov	DWORD PTR $T262190[ebp], esp
	mov	DWORD PTR $T262253[ebp], edx
	mov	eax, DWORD PTR $T262253[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR $T262253[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR $T262253[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR $T262253[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	ecx, DWORD PTR $T262253[ebp]
	mov	edx, DWORD PTR __Tempbuf$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+16], eax
	mov	ecx, DWORD PTR $T262253[ebp]
	mov	DWORD PTR tv144[ebp], ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z ; stdext::_Unchecked_chunked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,int,OpinionEval>
	add	esp, 40					; 00000028H

; 3518 : 		_STDEXT _Unchecked_chunked_merge(_Tempbuf._First(), _Tempbuf._Last(), _First,
; 3519 : 			_Chunk *= 2, _Count, _Pred);

	mov	ecx, DWORD PTR __Chunk$239071[ebp]
	shl	ecx, 1
	mov	DWORD PTR __Chunk$239071[ebp], ecx
	mov	edx, DWORD PTR __Tempbuf$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T262294[ebp], ecx
	mov	edx, DWORD PTR __Tempbuf$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T262298[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T262573[ebp], dl
	movzx	eax, BYTE PTR $T262573[ebp]
	push	eax
	movzx	ecx, BYTE PTR __Pred$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Chunk$239071[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T262294[ebp]
	push	edx
	mov	eax, DWORD PTR $T262298[ebp]
	push	eax
	call	??$_Chunked_merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinionEval@@@std@@YAXPAUOpinion@@0V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z ; std::_Chunked_merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,OpinionEval>
	add	esp, 28					; 0000001cH

; 3520 : 		}

	jmp	$LN2@Buffered_m
$LN7@Buffered_m:

; 3521 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Buffered_merge_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ENDP ; std::_Buffered_merge_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
_TEXT	ENDS
PUBLIC	??$_Buffered_rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00HHAAV?$_Temp_iterator@UOpinion@@@0@@Z ; std::_Buffered_rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion>
PUBLIC	??$_Upper_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@HUOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@PAH@Z ; std::_Upper_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,int,OpinionEval>
PUBLIC	??$_Lower_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@HUOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@PAH@Z ; std::_Lower_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,int,OpinionEval>
PUBLIC	??$_Merge_backward@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@V12@UOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0PAUOpinion@@10UOpinionEval@@U_Range_checked_iterator_tag@0@@Z ; std::_Merge_backward<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>
PUBLIC	??$_Merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V23@UOpinionEval@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@11UOpinionEval@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,std::random_access_iterator_tag>
PUBLIC	??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
PUBLIC	??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z	; std::swap<Opinion>
; Function compile flags: /Odtp
;	COMDAT ??$_Buffered_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00HHAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z
_TEXT	SEGMENT
tv244 = -332						; size = 4
tv243 = -328						; size = 4
tv240 = -324						; size = 4
tv239 = -320						; size = 4
$T262950 = -260						; size = 4
$T262937 = -256						; size = 4
$T262936 = -252						; size = 4
$T262914 = -245						; size = 1
$T262913 = -244						; size = 4
$T262912 = -240						; size = 4
$T262908 = -236						; size = 4
$T262901 = -232						; size = 4
$T262859 = -224						; size = 4
$T262846 = -220						; size = 4
$T262845 = -216						; size = 4
$T262823 = -209						; size = 1
$T262822 = -208						; size = 4
$T262818 = -204						; size = 4
$T262811 = -200						; size = 4
$T262753 = -193						; size = 1
$T262752 = -192						; size = 4
$T262751 = -188						; size = 4
$T262749 = -181						; size = 1
$T262745 = -180						; size = 4
$T262741 = -176						; size = 4
$T262714 = -164						; size = 4
$T262701 = -149						; size = 1
$T262700 = -148						; size = 4
$T262699 = -144						; size = 4
$T262698 = -140						; size = 4
$T262693 = -134						; size = 1
$T262692 = -133						; size = 1
$T262683 = -132						; size = 4
$T262679 = -128						; size = 4
$T262652 = -116						; size = 4
$T262639 = -104						; size = 4
$T262638 = -100						; size = 4
$T262619 = -96						; size = 4
$T262606 = -92						; size = 4
$T262597 = -88						; size = 4
$T262584 = -84						; size = 4
$T262583 = -80						; size = 4
$T262582 = -76						; size = 4
$T262581 = -72						; size = 20
$T262580 = -52						; size = 4
$T262579 = -48						; size = 4
$T262578 = -44						; size = 20
$T262577 = -24						; size = 4
__Firstn$239151 = -20					; size = 4
__Count2n$239154 = -16					; size = 4
__Midn$239177 = -12					; size = 4
__Lastn$239152 = -8					; size = 4
__Count1n$239153 = -4					; size = 4
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Count1$ = 20						; size = 4
__Count2$ = 24						; size = 4
__Tempbuf$ = 28						; size = 4
__Pred$ = 32						; size = 1
??$_Buffered_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00HHAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z PROC ; std::_Buffered_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>, COMDAT

; 2889 : 	{	// merge [_First, _Mid) with [_Mid, _Last), using _Pred

	push	ebp
	mov	ebp, esp
	sub	esp, 332				; 0000014cH

; 2890 : 	if (_Count1 + _Count2 == 2)

	mov	eax, DWORD PTR __Count1$[ebp]
	add	eax, DWORD PTR __Count2$[ebp]
	cmp	eax, 2
	jne	SHORT $LN9@Buffered_m@2

; 2891 : 		{	// order two one-element partitions
; 2892 : 		if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First))

	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T262597[ebp], ecx
	mov	edx, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR $T262606[ebp], edx
	mov	eax, DWORD PTR $T262606[ebp]
	mov	ecx, DWORD PTR $T262597[ebp]
	mov	edx, DWORD PTR [eax+80]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+80]
	setl	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN8@Buffered_m@2

; 2893 : 			std::iter_swap(_First, _Mid);

	mov	edx, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR $T262639[ebp], edx
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T262638[ebp], eax
	mov	ecx, DWORD PTR $T262639[ebp]
	mov	DWORD PTR $T262619[ebp], ecx
	mov	edx, DWORD PTR $T262619[ebp]
	push	edx
	mov	eax, DWORD PTR $T262638[ebp]
	push	eax
	call	??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z ; std::swap<Opinion>
	add	esp, 8
$LN8@Buffered_m@2:

; 2894 : 		}

	jmp	$LN10@Buffered_m@2
$LN9@Buffered_m@2:

; 2895 : 	else if (_Count1 <= _Count2 && _Count1 <= _Tempbuf._Maxlen())

	mov	ecx, DWORD PTR __Count1$[ebp]
	cmp	ecx, DWORD PTR __Count2$[ebp]
	jg	$LN6@Buffered_m@2
	mov	ecx, DWORD PTR __Tempbuf$[ebp]
	call	?_Maxlen@?$_Temp_iterator@UOpinion@@@std@@QAEHXZ ; std::_Temp_iterator<Opinion>::_Maxlen
	cmp	DWORD PTR __Count1$[ebp], eax
	jg	$LN6@Buffered_m@2

; 2896 : 		{	// buffer left partition, then merge
; 2897 : 		_STDEXT unchecked_copy(_First, _Mid, _Tempbuf._Init());

	mov	edx, DWORD PTR __Tempbuf$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR __Tempbuf$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+4], eax
	sub	esp, 20					; 00000014H
	mov	ecx, esp
	mov	DWORD PTR $T262577[ebp], esp
	mov	DWORD PTR $T262652[ebp], ecx
	mov	edx, DWORD PTR $T262652[ebp]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR $T262652[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR $T262652[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR $T262652[ebp]
	mov	DWORD PTR [edx+12], 0
	mov	eax, DWORD PTR $T262652[ebp]
	mov	ecx, DWORD PTR __Tempbuf$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR $T262652[ebp]
	mov	DWORD PTR tv239[ebp], eax
	mov	ecx, DWORD PTR __Mid$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	eax, DWORD PTR $T262578[ebp]
	push	eax
	call	??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv240[ebp], eax
	lea	ecx, DWORD PTR $T262578[ebp]
	call	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>

; 2898 : 		_STDEXT unchecked_merge(_Tempbuf._First(), _Tempbuf._Last(),
; 2899 : 			_Mid, _Last, _First, _Pred);

	mov	ecx, DWORD PTR __Tempbuf$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T262679[ebp], eax
	mov	ecx, DWORD PTR __Tempbuf$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T262683[ebp], eax
	mov	cl, BYTE PTR __Pred$[ebp]
	mov	BYTE PTR $T262701[ebp], cl
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T262700[ebp], edx
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR $T262699[ebp], eax
	mov	ecx, DWORD PTR $T262683[ebp]
	mov	DWORD PTR $T262698[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T262692[ebp], dl
	movzx	eax, BYTE PTR $T262692[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T262693[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T262701[ebp]
	push	edx
	mov	eax, DWORD PTR $T262700[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T262699[ebp]
	push	edx
	mov	eax, DWORD PTR $T262679[ebp]
	push	eax
	mov	ecx, DWORD PTR $T262698[ebp]
	push	ecx
	lea	edx, DWORD PTR $T262579[ebp]
	push	edx
	call	??$_Merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V23@UOpinionEval@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@11UOpinionEval@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,std::random_access_iterator_tag>
	add	esp, 36					; 00000024H

; 2900 : 		}
; 2901 : 	else if (_Count2 <= _Tempbuf._Maxlen())

	jmp	$LN10@Buffered_m@2
$LN6@Buffered_m@2:
	mov	ecx, DWORD PTR __Tempbuf$[ebp]
	call	?_Maxlen@?$_Temp_iterator@UOpinion@@@std@@QAEHXZ ; std::_Temp_iterator<Opinion>::_Maxlen
	cmp	DWORD PTR __Count2$[ebp], eax
	jg	$LN4@Buffered_m@2

; 2902 : 		{	// buffer right partition, then merge
; 2903 : 		_STDEXT unchecked_copy(_Mid, _Last, _Tempbuf._Init());

	mov	eax, DWORD PTR __Tempbuf$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR __Tempbuf$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx
	sub	esp, 20					; 00000014H
	mov	edx, esp
	mov	DWORD PTR $T262580[ebp], esp
	mov	DWORD PTR $T262714[ebp], edx
	mov	eax, DWORD PTR $T262714[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR $T262714[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR $T262714[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR $T262714[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	ecx, DWORD PTR $T262714[ebp]
	mov	edx, DWORD PTR __Tempbuf$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+16], eax
	mov	ecx, DWORD PTR $T262714[ebp]
	mov	DWORD PTR tv243[ebp], ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __Mid$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T262581[ebp]
	push	ecx
	call	??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv244[ebp], eax
	lea	ecx, DWORD PTR $T262581[ebp]
	call	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>

; 2904 : 		_STDEXT _Unchecked_merge_backward(_First, _Mid, _Tempbuf._First(), _Tempbuf._Last(),
; 2905 : 			_Last, _Pred);

	mov	edx, DWORD PTR __Tempbuf$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T262741[ebp], ecx
	mov	edx, DWORD PTR __Tempbuf$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T262745[ebp], ecx
	mov	dl, BYTE PTR __Pred$[ebp]
	mov	BYTE PTR $T262753[ebp], dl
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR $T262752[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T262751[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T262749[ebp], dl
	movzx	eax, BYTE PTR $T262749[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T262753[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR $T262741[ebp]
	push	eax
	mov	ecx, DWORD PTR $T262745[ebp]
	push	ecx
	mov	edx, DWORD PTR $T262752[ebp]
	push	edx
	mov	eax, DWORD PTR $T262751[ebp]
	push	eax
	lea	ecx, DWORD PTR $T262582[ebp]
	push	ecx
	call	??$_Merge_backward@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@V12@UOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0PAUOpinion@@10UOpinionEval@@U_Range_checked_iterator_tag@0@@Z ; std::_Merge_backward<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>
	add	esp, 32					; 00000020H

; 2906 : 		}
; 2907 : 	else

	jmp	$LN10@Buffered_m@2
$LN4@Buffered_m@2:

; 2908 : 		{	// buffer too small, divide and conquer
; 2909 : 		_BidIt _Firstn, _Lastn;

	mov	DWORD PTR __Firstn$239151[ebp], 0
	mov	DWORD PTR __Lastn$239152[ebp], 0

; 2910 : 		_Diff _Count1n, _Count2n;
; 2911 : 		if (_Count2 < _Count1)

	mov	edx, DWORD PTR __Count2$[ebp]
	cmp	edx, DWORD PTR __Count1$[ebp]
	jge	$LN2@Buffered_m@2

; 2912 : 			{	// left larger, cut it in half and partition right to match
; 2913 : 			_Count1n = _Count1 / 2, _Count2n = 0;

	mov	eax, DWORD PTR __Count1$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Count1n$239153[ebp], eax
	mov	DWORD PTR __Count2n$239154[ebp], 0

; 2914 : 			_Firstn = _First;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Firstn$239151[ebp], eax

; 2915 : 			std::advance(_Firstn, _Count1n);

	mov	ecx, DWORD PTR __Count1n$239153[ebp]
	imul	ecx, 84					; 00000054H
	add	ecx, DWORD PTR __Firstn$239151[ebp]
	mov	DWORD PTR __Firstn$239151[ebp], ecx

; 2916 : 			_Lastn = lower_bound(_Mid, _Last, *_Firstn, _Pred);

	mov	edx, DWORD PTR __Firstn$239151[ebp]
	mov	DWORD PTR $T262811[ebp], edx
	mov	al, BYTE PTR __Pred$[ebp]
	mov	BYTE PTR $T262823[ebp], al
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR $T262822[ebp], ecx
	push	0
	movzx	edx, BYTE PTR $T262823[ebp]
	push	edx
	mov	eax, DWORD PTR $T262811[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T262822[ebp]
	push	edx
	lea	eax, DWORD PTR $T262818[ebp]
	push	eax
	call	??$_Lower_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@HUOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@PAH@Z ; std::_Lower_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,int,OpinionEval>
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T262822[ebp], ecx
	mov	edx, DWORD PTR $T262822[ebp]
	mov	DWORD PTR $T262583[ebp], edx
	mov	eax, DWORD PTR $T262583[ebp]
	mov	DWORD PTR __Lastn$239152[ebp], eax

; 2917 : 			_Distance(_Mid, _Lastn, _Count2n);

	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR $T262859[ebp], ecx
	mov	edx, DWORD PTR __Lastn$239152[ebp]
	mov	DWORD PTR $T262846[ebp], edx
	mov	eax, DWORD PTR $T262859[ebp]
	mov	DWORD PTR $T262845[ebp], eax
	mov	eax, DWORD PTR $T262846[ebp]
	sub	eax, DWORD PTR $T262845[ebp]
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	add	eax, DWORD PTR __Count2n$239154[ebp]
	mov	DWORD PTR __Count2n$239154[ebp], eax

; 2918 : 			}
; 2919 : 		else

	jmp	$LN1@Buffered_m@2
$LN2@Buffered_m@2:

; 2920 : 			{	// right larger, cut it in half and partition left to match
; 2921 : 			_Count1n = 0, _Count2n = _Count2 / 2;

	mov	DWORD PTR __Count1n$239153[ebp], 0
	mov	eax, DWORD PTR __Count2$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Count2n$239154[ebp], eax

; 2922 : 			_Lastn = _Mid;

	mov	edx, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR __Lastn$239152[ebp], edx

; 2923 : 			std::advance(_Lastn, _Count2n);

	mov	eax, DWORD PTR __Count2n$239154[ebp]
	imul	eax, 84					; 00000054H
	add	eax, DWORD PTR __Lastn$239152[ebp]
	mov	DWORD PTR __Lastn$239152[ebp], eax

; 2924 : 			_Firstn = upper_bound(_First, _Mid, *_Lastn, _Pred);

	mov	ecx, DWORD PTR __Lastn$239152[ebp]
	mov	DWORD PTR $T262901[ebp], ecx
	mov	dl, BYTE PTR __Pred$[ebp]
	mov	BYTE PTR $T262914[ebp], dl
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR $T262913[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T262912[ebp], ecx
	push	0
	movzx	edx, BYTE PTR $T262914[ebp]
	push	edx
	mov	eax, DWORD PTR $T262901[ebp]
	push	eax
	mov	ecx, DWORD PTR $T262913[ebp]
	push	ecx
	mov	edx, DWORD PTR $T262912[ebp]
	push	edx
	lea	eax, DWORD PTR $T262908[ebp]
	push	eax
	call	??$_Upper_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@HUOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@PAH@Z ; std::_Upper_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,int,OpinionEval>
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T262912[ebp], ecx
	mov	edx, DWORD PTR $T262912[ebp]
	mov	DWORD PTR $T262584[ebp], edx
	mov	eax, DWORD PTR $T262584[ebp]
	mov	DWORD PTR __Firstn$239151[ebp], eax

; 2925 : 			_Distance(_First, _Firstn, _Count1n);

	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T262950[ebp], ecx
	mov	edx, DWORD PTR __Firstn$239151[ebp]
	mov	DWORD PTR $T262937[ebp], edx
	mov	eax, DWORD PTR $T262950[ebp]
	mov	DWORD PTR $T262936[ebp], eax
	mov	eax, DWORD PTR $T262937[ebp]
	sub	eax, DWORD PTR $T262936[ebp]
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	add	eax, DWORD PTR __Count1n$239153[ebp]
	mov	DWORD PTR __Count1n$239153[ebp], eax
$LN1@Buffered_m@2:

; 2926 : 			}
; 2927 : 		_BidIt _Midn = _Buffered_rotate(_Firstn, _Mid, _Lastn,
; 2928 : 			_Count1 - _Count1n, _Count2n, _Tempbuf);	// rearrange middle

	mov	edx, DWORD PTR __Tempbuf$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count2n$239154[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count1$[ebp]
	sub	ecx, DWORD PTR __Count1n$239153[ebp]
	push	ecx
	mov	edx, DWORD PTR __Lastn$239152[ebp]
	push	edx
	mov	eax, DWORD PTR __Mid$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Firstn$239151[ebp]
	push	ecx
	lea	edx, DWORD PTR __Midn$239177[ebp]
	push	edx
	call	??$_Buffered_rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00HHAAV?$_Temp_iterator@UOpinion@@@0@@Z ; std::_Buffered_rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion>
	add	esp, 28					; 0000001cH

; 2929 : 		_Buffered_merge(_First, _Firstn, _Midn,
; 2930 : 			_Count1n, _Count2n, _Tempbuf, _Pred);	// merge each new part

	movzx	eax, BYTE PTR __Pred$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Tempbuf$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count2n$239154[ebp]
	push	edx
	mov	eax, DWORD PTR __Count1n$239153[ebp]
	push	eax
	mov	ecx, DWORD PTR __Midn$239177[ebp]
	push	ecx
	mov	edx, DWORD PTR __Firstn$239151[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Buffered_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00HHAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ; std::_Buffered_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
	add	esp, 28					; 0000001cH

; 2931 : 		_Buffered_merge(_Midn, _Lastn, _Last,
; 2932 : 			_Count1 - _Count1n, _Count2 - _Count2n, _Tempbuf, _Pred);

	movzx	ecx, BYTE PTR __Pred$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Tempbuf$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count2$[ebp]
	sub	eax, DWORD PTR __Count2n$239154[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count1$[ebp]
	sub	ecx, DWORD PTR __Count1n$239153[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __Lastn$239152[ebp]
	push	eax
	mov	ecx, DWORD PTR __Midn$239177[ebp]
	push	ecx
	call	??$_Buffered_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00HHAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ; std::_Buffered_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
	add	esp, 28					; 0000001cH
$LN10@Buffered_m@2:

; 2933 : 		}
; 2934 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Buffered_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00HHAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ENDP ; std::_Buffered_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
_TEXT	ENDS
EXTRN	?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B:DWORD ; CvPreGame::sr_TeamTypes
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvpregame.h
;	COMDAT ?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z PROC ; CvPreGame::teamType, COMDAT

; 298  : {

	push	ebp
	mov	ebp, esp

; 299  : 	if(p >= 0 && p < MAX_PLAYERS)

	cmp	DWORD PTR _p$[ebp], 0
	jl	SHORT $LN1@teamType
	cmp	DWORD PTR _p$[ebp], 64			; 00000040H
	jge	SHORT $LN1@teamType

; 300  : 		return sr_TeamTypes[p];

	mov	eax, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	jmp	SHORT $LN2@teamType
$LN1@teamType:

; 301  : 	return NO_TEAM;

	or	eax, -1
$LN2@teamType:

; 302  : }

	pop	ebp
	ret	0
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ENDP ; CvPreGame::teamType
_TEXT	ENDS
PUBLIC	??$_Med3@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Med3<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Median@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z
_TEXT	SEGMENT
__Step$239193 = -4					; size = 4
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Median@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z PROC ; std::_Median<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>, COMDAT

; 3009 : 	{	// sort median element to middle

	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH

; 3010 : 	if (40 < _Last - _First)

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	cmp	eax, 40					; 00000028H
	jle	$LN2@Median

; 3011 : 		{	// median of nine
; 3012 : 		size_t _Step = (_Last - _First + 1) / 8;

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	add	eax, 1
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR __Step$239193[ebp], eax

; 3013 : 		std::_Med3(_First, _First + _Step, _First + 2 * _Step);

	mov	ecx, DWORD PTR __Step$239193[ebp]
	shl	ecx, 1
	mov	edx, DWORD PTR __First$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
	push	eax
	mov	ecx, DWORD PTR __Step$239193[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Med3<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3014 : 		std::_Med3(_Mid - _Step, _Mid, _Mid + _Step);

	mov	edx, DWORD PTR __Step$239193[ebp]
	mov	eax, DWORD PTR __Mid$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	push	ecx
	mov	edx, DWORD PTR __Mid$[ebp]
	push	edx
	mov	eax, DWORD PTR __Step$239193[ebp]
	shl	eax, 3
	mov	ecx, DWORD PTR __Mid$[ebp]
	sub	ecx, eax
	push	ecx
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Med3<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3015 : 		std::_Med3(_Last - 2 * _Step, _Last - _Step, _Last);

	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __Step$239193[ebp]
	shl	eax, 3
	mov	ecx, DWORD PTR __Last$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR __Step$239193[ebp]
	shl	edx, 1
	shl	edx, 3
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, edx
	push	eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Med3<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3016 : 		std::_Med3(_First + _Step, _Mid, _Last - _Step);

	mov	ecx, DWORD PTR __Step$239193[ebp]
	shl	ecx, 3
	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, ecx
	push	edx
	mov	eax, DWORD PTR __Mid$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Step$239193[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
	push	eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Med3<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3017 : 		}
; 3018 : 	else

	jmp	SHORT $LN3@Median
$LN2@Median:

; 3019 : 		std::_Med3(_First, _Mid, _Last);

	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Mid$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Med3<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
	add	esp, 12					; 0000000cH
$LN3@Median:

; 3020 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Median@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ENDP ; std::_Median<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
; Function compile flags: /Odtp
;	COMDAT ??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0PAH0@Z
_TEXT	SEGMENT
$T263279 = -20						; size = 4
$T263278 = -16						; size = 4
__Hole$239211 = -8					; size = 4
__Bottom$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0PAH0@Z PROC ; std::_Make_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>, COMDAT

; 2164 : 	{	// make nontrivial [_First, _Last) into a heap, using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H

; 2165 : 	_Diff _Bottom = _Last - _First;

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	mov	DWORD PTR __Bottom$[ebp], eax

; 2166 : 
; 2167 : 	for (_Diff _Hole = _Bottom / 2; 0 < _Hole; )

	mov	eax, DWORD PTR __Bottom$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Hole$239211[ebp], eax
$LN2@Make_heap:
	cmp	DWORD PTR __Hole$239211[ebp], 0
	jle	SHORT $LN3@Make_heap

; 2168 : 		{	// reheap top half, bottom to top
; 2169 : 		--_Hole;

	mov	ecx, DWORD PTR __Hole$239211[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Hole$239211[ebp], ecx

; 2170 : 		std::_Adjust_heap(_First, _Hole, _Bottom,
; 2171 : 			_Ty(*(_First + _Hole)));

	mov	edx, DWORD PTR __Hole$239211[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	mov	DWORD PTR $T263279[ebp], ecx
	sub	esp, 8
	mov	DWORD PTR $T263278[ebp], esp
	mov	edx, DWORD PTR $T263278[ebp]
	mov	eax, DWORD PTR $T263279[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T263278[ebp]
	mov	eax, DWORD PTR $T263279[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	edx, DWORD PTR __Bottom$[ebp]
	push	edx
	mov	eax, DWORD PTR __Hole$239211[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
	add	esp, 20					; 00000014H

; 2172 : 		}

	jmp	SHORT $LN2@Make_heap
$LN3@Make_heap:

; 2173 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0PAH0@Z ENDP ; std::_Make_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z
_TEXT	SEGMENT
$T263349 = -52						; size = 4
$T263348 = -48						; size = 4
$T263332 = -42						; size = 1
$T263331 = -41						; size = 1
$T263330 = -40						; size = 4
$T263329 = -36						; size = 4
$T263328 = -32						; size = 4
__Cat$263340 = -24					; size = 1
$T263337 = -23						; size = 1
$T263336 = -22						; size = 1
$T263335 = -21						; size = 1
__First1$239252 = -20					; size = 4
__Val$239242 = -16					; size = 8
__Next1$239241 = -8					; size = 4
__Next$239237 = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z PROC ; std::_Insertion_sort1<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement>, COMDAT

; 2967 : 	{	// insertion sort [_First, _Last), using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H

; 2968 : 	if (_First != _Last)

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	$LN9@Insertion_

; 2969 : 		for (_BidIt _Next = _First; ++_Next != _Last; )

	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$239237[ebp], ecx
$LN7@Insertion_:
	mov	edx, DWORD PTR __Next$239237[ebp]
	add	edx, 8
	mov	DWORD PTR __Next$239237[ebp], edx
	mov	eax, DWORD PTR __Next$239237[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	$LN9@Insertion_

; 2970 : 			{	// order next element
; 2971 : 			_BidIt _Next1 = _Next;

	mov	ecx, DWORD PTR __Next$239237[ebp]
	mov	DWORD PTR __Next1$239241[ebp], ecx

; 2972 : 			_Ty _Val = *_Next;

	mov	edx, DWORD PTR __Next$239237[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Val$239242[ebp], eax
	mov	ecx, DWORD PTR __Next$239237[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Val$239242[ebp+4], edx

; 2973 : 
; 2974 : 			if (_DEBUG_LT(_Val, *_First))

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Val$239242[ebp+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN5@Insertion_

; 2975 : 				{	// found new earliest element, move to front
; 2976 : 				_STDEXT unchecked_copy_backward(_First, _Next, ++_Next1);

	mov	ecx, DWORD PTR __Next1$239241[ebp]
	add	ecx, 8
	mov	DWORD PTR __Next1$239241[ebp], ecx
	mov	edx, DWORD PTR __Next1$239241[ebp]
	mov	DWORD PTR $T263349[ebp], edx
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T263348[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T263335[ebp], cl
	mov	dl, BYTE PTR __Cat$263340[ebp]
	mov	BYTE PTR $T263336[ebp], dl
	mov	al, BYTE PTR $T263335[ebp]
	mov	BYTE PTR $T263332[ebp], al
	mov	cl, BYTE PTR $T263337[ebp]
	mov	BYTE PTR $T263331[ebp], cl
	mov	edx, DWORD PTR $T263349[ebp]
	mov	DWORD PTR $T263330[ebp], edx
	mov	eax, DWORD PTR __Next$239237[ebp]
	mov	DWORD PTR $T263329[ebp], eax
	mov	ecx, DWORD PTR $T263348[ebp]
	mov	DWORD PTR $T263328[ebp], ecx
$LN22@Insertion_:
	mov	edx, DWORD PTR $T263328[ebp]
	cmp	edx, DWORD PTR $T263329[ebp]
	je	SHORT $LN15@Insertion_
	mov	eax, DWORD PTR $T263329[ebp]
	sub	eax, 8
	mov	DWORD PTR $T263329[ebp], eax
	mov	ecx, DWORD PTR $T263330[ebp]
	sub	ecx, 8
	mov	DWORD PTR $T263330[ebp], ecx
	mov	edx, DWORD PTR $T263329[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T263330[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	jmp	SHORT $LN22@Insertion_
$LN15@Insertion_:

; 2977 : 				*_First = _Val;

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Val$239242[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Val$239242[ebp+4]
	mov	DWORD PTR [eax+4], edx

; 2978 : 				}
; 2979 : 			else

	jmp	SHORT $LN4@Insertion_
$LN5@Insertion_:

; 2980 : 				{	// look for insertion point after first
; 2981 : 				for (_BidIt _First1 = _Next1;

	mov	eax, DWORD PTR __Next1$239241[ebp]
	mov	DWORD PTR __First1$239252[ebp], eax

; 2982 : 					_DEBUG_LT(_Val, *--_First1);
; 2983 : 					_Next1 = _First1)

	jmp	SHORT $LN3@Insertion_
$LN2@Insertion_:
	mov	ecx, DWORD PTR __First1$239252[ebp]
	mov	DWORD PTR __Next1$239241[ebp], ecx
$LN3@Insertion_:
	mov	edx, DWORD PTR __First1$239252[ebp]
	sub	edx, 8
	mov	DWORD PTR __First1$239252[ebp], edx
	mov	eax, DWORD PTR __First1$239252[ebp]
	mov	ecx, DWORD PTR __Val$239242[ebp+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN1@Insertion_

; 2984 : 					*_Next1 = *_First1;	// move hole down

	mov	ecx, DWORD PTR __First1$239252[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Next1$239241[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	jmp	SHORT $LN2@Insertion_
$LN1@Insertion_:

; 2985 : 				*_Next1 = _Val;	// insert element in hole

	mov	edx, DWORD PTR __Next1$239241[ebp]
	mov	eax, DWORD PTR __Val$239242[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Val$239242[ebp+4]
	mov	DWORD PTR [edx+4], ecx
$LN4@Insertion_:

; 2986 : 				}
; 2987 : 			}

	jmp	$LN7@Insertion_
$LN9@Insertion_:

; 2988 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ENDP ; std::_Insertion_sort1<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ??$unchecked_uninitialized_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@stdext@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@std@@@Z
_TEXT	SEGMENT
__Cat$263359 = -3					; size = 1
$T263356 = -2						; size = 1
$T263355 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@stdext@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@std@@@Z PROC ; stdext::unchecked_uninitialized_copy<Opinion *,Opinion *,std::allocator<Opinion> >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	xor	eax, eax
	mov	BYTE PTR $T263355[ebp], al
	mov	cl, BYTE PTR __Cat$263359[ebp]
	mov	BYTE PTR $T263356[ebp], cl
	movzx	edx, BYTE PTR $T263355[ebp]
	push	edx
	movzx	eax, BYTE PTR $T263356[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<Opinion *,Opinion *,std::allocator<Opinion> >
	add	esp, 24					; 00000018H

; 823  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$unchecked_uninitialized_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@stdext@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_copy<Opinion *,Opinion *,std::allocator<Opinion> >
_TEXT	ENDS
EXTRN	??2@YAPAXIABUnothrow_t@std@@@Z:PROC		; operator new
EXTRN	?nothrow@std@@3Unothrow_t@1@B:BYTE		; std::nothrow
; Function compile flags: /Odtp
;	COMDAT ??$get_temporary_buffer@UOpinion@@@std@@YA?AU?$pair@PAUOpinion@@H@0@H@Z
_TEXT	SEGMENT
$T263367 = -20						; size = 4
$T263363 = -16						; size = 12
__Pbuf$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Count$ = 12						; size = 4
??$get_temporary_buffer@UOpinion@@@std@@YA?AU?$pair@PAUOpinion@@H@0@H@Z PROC ; std::get_temporary_buffer<Opinion>, COMDAT

; 19   : 	{	// get raw temporary buffer of up to _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 20   : 	_Ty _FARQ *_Pbuf;
; 21   : 
; 22   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jg	SHORT $LN7@get_tempor

; 23   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN6@get_tempor
$LN7@get_tempor:

; 24   : 	else if (((size_t)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 84					; 00000054H
	jae	SHORT $LN6@get_tempor

; 25   : 		_THROW_NCEE(std::bad_alloc, NULL);

	mov	DWORD PTR $T263367[ebp], 0
	lea	eax, DWORD PTR $T263367[ebp]
	push	eax
	lea	ecx, DWORD PTR $T263363[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR $T263363[ebp], OFFSET ??_7bad_alloc@std@@6B@
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T263363[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN6@get_tempor:

; 26   : 
; 27   : 	for (_Pbuf = 0; 0 < _Count; _Count /= 2)

	mov	DWORD PTR __Pbuf$[ebp], 0
	jmp	SHORT $LN4@get_tempor
$LN3@get_tempor:
	mov	eax, DWORD PTR __Count$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Count$[ebp], eax
$LN4@get_tempor:
	cmp	DWORD PTR __Count$[ebp], 0
	jle	SHORT $LN2@get_tempor

; 28   : 		if ((_Pbuf = (_Ty _FARQ *)operator new(
; 29   : 			(_SIZT)_Count * sizeof (_Ty), nothrow)) != 0)

	push	OFFSET ?nothrow@std@@3Unothrow_t@1@B	; std::nothrow
	mov	edx, DWORD PTR __Count$[ebp]
	imul	edx, 84					; 00000054H
	push	edx
	call	??2@YAPAXIABUnothrow_t@std@@@Z		; operator new
	add	esp, 8
	mov	DWORD PTR __Pbuf$[ebp], eax
	cmp	DWORD PTR __Pbuf$[ebp], 0
	je	SHORT $LN1@get_tempor

; 30   : 			break;

	jmp	SHORT $LN2@get_tempor
$LN1@get_tempor:

; 31   : 
; 32   : 	return (pair<_Ty _FARQ *, _PDFT>(_Pbuf, _Count));

	jmp	SHORT $LN3@get_tempor
$LN2@get_tempor:
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Pbuf$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN9@get_tempor:

; 33   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$get_temporary_buffer@UOpinion@@@std@@YA?AU?$pair@PAUOpinion@@H@0@H@Z ENDP ; std::get_temporary_buffer<Opinion>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	SEGMENT
__unwindtable$??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z$0
__ehfuncinfo$??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
xdata$x	ENDS
;	COMDAT ??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z
_TEXT	SEGMENT
$T263522 = -164						; size = 4
$T263510 = -160						; size = 4
$T263498 = -156						; size = 4
$T263486 = -152						; size = 4
$T263469 = -148						; size = 4
$T263457 = -144						; size = 4
$T263456 = -140						; size = 4
$T263455 = -136						; size = 4
__Cat$263451 = -128					; size = 1
$T263448 = -127						; size = 1
$T263447 = -126						; size = 1
$T263446 = -125						; size = 1
$T263420 = -124						; size = 4
$T263407 = -120						; size = 4
$T263373 = -116						; size = 4
__First1$239351 = -112					; size = 4
__Val$239340 = -108					; size = 84
__Next1$239339 = -20					; size = 4
__Next$239335 = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 1
___formal$ = 20						; size = 4
??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z PROC ; std::_Insertion_sort1<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,Opinion>, COMDAT

; 3123 : 	{	// insertion sort [_First, _Last), using _Pred

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 152				; 00000098H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 3124 : 	if (_First != _Last)

	mov	eax, DWORD PTR __First$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR __Last$[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	$LN9@Insertion_@2

; 3125 : 		for (_BidIt _Next = _First; ++_Next != _Last; )

	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$239335[ebp], ecx
$LN7@Insertion_@2:
	mov	edx, DWORD PTR __Next$239335[ebp]
	add	edx, 84					; 00000054H
	mov	DWORD PTR __Next$239335[ebp], edx
	mov	eax, DWORD PTR __Next$239335[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR __Last$[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	$LN9@Insertion_@2

; 3126 : 			{	// order next element
; 3127 : 			_BidIt _Next1 = _Next;

	mov	ecx, DWORD PTR __Next$239335[ebp]
	mov	DWORD PTR __Next1$239339[ebp], ecx

; 3128 : 			_Ty _Val = *_Next;

	mov	edx, DWORD PTR __Next$239335[ebp]
	mov	DWORD PTR $T263407[ebp], edx
	mov	eax, DWORD PTR $T263407[ebp]
	push	eax
	lea	ecx, DWORD PTR __Val$239340[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T263407[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR __Val$239340[ebp+80], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3129 : 
; 3130 : 			if (_DEBUG_LT_PRED(_Pred, _Val, *_First))

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T263420[ebp], eax
	mov	ecx, DWORD PTR $T263420[ebp]
	mov	edx, DWORD PTR __Val$239340[ebp+80]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+80]
	setl	al
	movzx	ecx, al
	test	ecx, ecx
	je	$LN5@Insertion_@2

; 3131 : 				{	// found new earliest element, move to front
; 3132 : 				_STDEXT unchecked_copy_backward(_First, _Next, ++_Next1);

	mov	edx, DWORD PTR __Next1$239339[ebp]
	add	edx, 84					; 00000054H
	mov	DWORD PTR __Next1$239339[ebp], edx
	mov	eax, DWORD PTR __Next1$239339[ebp]
	mov	DWORD PTR $T263457[ebp], eax
	mov	ecx, DWORD PTR __Next$239335[ebp]
	mov	DWORD PTR $T263456[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T263455[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T263446[ebp], al
	mov	cl, BYTE PTR __Cat$263451[ebp]
	mov	BYTE PTR $T263447[ebp], cl
	movzx	edx, BYTE PTR $T263446[ebp]
	push	edx
	movzx	eax, BYTE PTR $T263447[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T263448[ebp]
	push	ecx
	mov	edx, DWORD PTR $T263457[ebp]
	push	edx
	mov	eax, DWORD PTR $T263456[ebp]
	push	eax
	mov	ecx, DWORD PTR $T263455[ebp]
	push	ecx
	lea	edx, DWORD PTR $T263373[ebp]
	push	edx
	call	??$_Copy_backward_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
	add	esp, 28					; 0000001cH

; 3133 : 				*_First = _Val;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T263469[ebp], eax
	lea	ecx, DWORD PTR __Val$239340[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T263469[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	edx, DWORD PTR $T263469[ebp]
	mov	eax, DWORD PTR __Val$239340[ebp+80]
	mov	DWORD PTR [edx+80], eax

; 3134 : 				}
; 3135 : 			else

	jmp	$LN4@Insertion_@2
$LN5@Insertion_@2:

; 3136 : 				{	// look for insertion point after first
; 3137 : 				for (_BidIt _First1 = _Next1;

	mov	ecx, DWORD PTR __Next1$239339[ebp]
	mov	DWORD PTR __First1$239351[ebp], ecx

; 3138 : 					_DEBUG_LT_PRED(_Pred, _Val, *--_First1);
; 3139 : 					_Next1 = _First1)

	jmp	SHORT $LN3@Insertion_@2
$LN2@Insertion_@2:
	mov	edx, DWORD PTR __First1$239351[ebp]
	mov	DWORD PTR __Next1$239339[ebp], edx
$LN3@Insertion_@2:
	mov	eax, DWORD PTR __First1$239351[ebp]
	sub	eax, 84					; 00000054H
	mov	DWORD PTR __First1$239351[ebp], eax
	mov	ecx, DWORD PTR __First1$239351[ebp]
	mov	DWORD PTR $T263486[ebp], ecx
	mov	edx, DWORD PTR $T263486[ebp]
	mov	eax, DWORD PTR __Val$239340[ebp+80]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx+80]
	setl	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN73@Insertion_@2

; 3140 : 					*_Next1 = *_First1;	// move hole down

	mov	eax, DWORD PTR __First1$239351[ebp]
	mov	DWORD PTR $T263498[ebp], eax
	mov	ecx, DWORD PTR __Next1$239339[ebp]
	mov	DWORD PTR $T263510[ebp], ecx
	mov	edx, DWORD PTR $T263498[ebp]
	push	edx
	mov	ecx, DWORD PTR $T263510[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR $T263510[ebp]
	mov	ecx, DWORD PTR $T263498[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+80], edx
	jmp	SHORT $LN2@Insertion_@2

; 3141 : 				*_Next1 = _Val;	// insert element in hole

$LN73@Insertion_@2:
	mov	eax, DWORD PTR __Next1$239339[ebp]
	mov	DWORD PTR $T263522[ebp], eax
	lea	ecx, DWORD PTR __Val$239340[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T263522[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	edx, DWORD PTR $T263522[ebp]
	mov	eax, DWORD PTR __Val$239340[ebp+80]
	mov	DWORD PTR [edx+80], eax
$LN4@Insertion_@2:

; 3142 : 				}
; 3143 : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Val$239340[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN7@Insertion_@2
$LN9@Insertion_@2:

; 3144 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z$0:
	lea	ecx, DWORD PTR __Val$239340[ebp]
	jmp	??1Opinion@@QAE@XZ
__ehhandler$??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-156]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z ENDP ; std::_Insertion_sort1<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,Opinion>
PUBLIC	??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z ; std::_Chunked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,int,OpinionEval>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	SEGMENT
__unwindtable$??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z$0
__ehfuncinfo$??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
xdata$x	ENDS
;	COMDAT ??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z
_TEXT	SEGMENT
tv94 = -160						; size = 4
$T263547 = -24						; size = 4
$T263536 = -20						; size = 4
$T263535 = -13						; size = 1
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 20
__Chunk$ = 36						; size = 4
__Count$ = 40						; size = 4
__Pred$ = 44						; size = 1
??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z PROC ; stdext::_Unchecked_chunked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,int,OpinionEval>, COMDAT

; 5285 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 148				; 00000094H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 5286 : 		_STD _Chunked_merge(_First, _Last, _Dest, _Chunk, _Count, _Pred, _STD _Range_checked_iterator_tag());

	xor	eax, eax
	mov	BYTE PTR $T263535[ebp], al
	movzx	ecx, BYTE PTR $T263535[ebp]
	push	ecx
	movzx	edx, BYTE PTR __Pred$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Chunk$[ebp]
	push	ecx
	sub	esp, 20					; 00000014H
	mov	edx, esp
	mov	DWORD PTR $T263536[ebp], esp
	mov	DWORD PTR $T263547[ebp], edx
	mov	eax, DWORD PTR $T263547[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR $T263547[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR $T263547[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR $T263547[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	ecx, DWORD PTR $T263547[ebp]
	mov	edx, DWORD PTR __Dest$[ebp+16]
	mov	DWORD PTR [ecx+16], edx
	mov	eax, DWORD PTR $T263547[ebp]
	mov	DWORD PTR tv94[ebp], eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z ; std::_Chunked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,int,OpinionEval>
	add	esp, 44					; 0000002cH

; 5287 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Dest$[ebp]
	call	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z$0:
	lea	ecx, DWORD PTR __Dest$[ebp]
	jmp	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
__ehhandler$??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-152]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z ENDP ; stdext::_Unchecked_chunked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,int,OpinionEval>
PUBLIC	??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,std::forward_iterator_tag>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	SEGMENT
__unwindtable$??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z$0
__ehfuncinfo$??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	ENDS
;	COMDAT ??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z
_TEXT	SEGMENT
tv135 = -48						; size = 4
tv134 = -44						; size = 4
$T263785 = -32						; size = 4
__Cat$263771 = -25					; size = 1
$T263767 = -24						; size = 4
$T263763 = -20						; size = 4
$T263762 = -15						; size = 1
$T263761 = -14						; size = 1
$T263760 = -13						; size = 1
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Dest$ = 20						; size = 20
??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z PROC ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >, COMDAT

; 3604 : 	{	// copy [_First, _Last) to [_Dest, ...)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T263767[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	xor	eax, eax
	mov	BYTE PTR $T263760[ebp], al
	mov	cl, BYTE PTR __Cat$263771[ebp]
	mov	BYTE PTR $T263761[ebp], cl
	movzx	edx, BYTE PTR $T263760[ebp]
	push	edx
	movzx	eax, BYTE PTR $T263761[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T263762[ebp]
	push	ecx
	sub	esp, 20					; 00000014H
	mov	edx, esp
	mov	DWORD PTR $T263763[ebp], esp
	mov	DWORD PTR $T263785[ebp], edx
	mov	eax, DWORD PTR $T263785[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR $T263785[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR $T263785[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR $T263785[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	ecx, DWORD PTR $T263785[ebp]
	mov	edx, DWORD PTR __Dest$[ebp+16]
	mov	DWORD PTR [ecx+16], edx
	mov	eax, DWORD PTR $T263785[ebp]
	mov	DWORD PTR tv134[ebp], eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	call	??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,std::forward_iterator_tag>
	add	esp, 44					; 0000002cH
	mov	DWORD PTR tv135[ebp], eax
	mov	ecx, DWORD PTR $T263767[ebp]
	or	ecx, 1
	mov	DWORD PTR $T263767[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Dest$[ebp]
	call	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 3607 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z$0:
	lea	ecx, DWORD PTR __Dest$[ebp]
	jmp	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
__unwindfunclet$??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z$2:
	mov	eax, DWORD PTR $T263767[ebp]
	and	eax, 1
	je	$LN6@unchecked_
	and	DWORD PTR $T263767[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
$LN6@unchecked_:
	ret	0
__ehhandler$??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z ENDP ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
PUBLIC	??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z ; std::_Rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion>
PUBLIC	??$_Copy_opt@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
PUBLIC	??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Buffered_rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00HHAAV?$_Temp_iterator@UOpinion@@@0@@Z
_TEXT	SEGMENT
tv180 = -248						; size = 4
tv179 = -244						; size = 4
tv176 = -240						; size = 4
tv175 = -236						; size = 4
$T264131 = -228						; size = 4
$T264130 = -224						; size = 4
$T264129 = -220						; size = 4
$T264107 = -213						; size = 1
$T264106 = -212						; size = 4
$T264105 = -208						; size = 4
$T264104 = -204						; size = 4
$T264111 = -197						; size = 1
$T264068 = -196						; size = 4
$T264067 = -192						; size = 4
__Cat$264062 = -184					; size = 1
$T264060 = -183						; size = 1
$T264059 = -182						; size = 1
$T264058 = -181						; size = 1
$T264043 = -180						; size = 4
$T264039 = -176						; size = 4
$T264035 = -172						; size = 4
$T264034 = -168						; size = 4
__Cat$264029 = -160					; size = 1
$T264027 = -159						; size = 1
$T264026 = -158						; size = 1
$T264025 = -157						; size = 1
$T263987 = -148						; size = 4
$T263974 = -136						; size = 4
$T263973 = -132						; size = 4
$T263947 = -126						; size = 1
$T263946 = -125						; size = 1
$T263945 = -124						; size = 4
$T263944 = -120						; size = 4
$T263943 = -116						; size = 4
$T263928 = -112						; size = 4
__Cat$263954 = -104					; size = 1
$T263952 = -103						; size = 1
$T263951 = -102						; size = 1
$T263950 = -101						; size = 1
$T263895 = -100						; size = 4
$T263891 = -96						; size = 4
$T263887 = -92						; size = 4
$T263886 = -88						; size = 4
__Cat$263881 = -80					; size = 1
$T263879 = -79						; size = 1
$T263878 = -78						; size = 1
$T263877 = -77						; size = 1
$T263839 = -68						; size = 4
$T263822 = -56						; size = 4
$T263821 = -52						; size = 20
$T263820 = -32						; size = 4
$T263819 = -28						; size = 4
$T263818 = -24						; size = 20
$T263817 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Mid$ = 16						; size = 4
__Last$ = 20						; size = 4
__Count1$ = 24						; size = 4
__Count2$ = 28						; size = 4
__Tempbuf$ = 32						; size = 4
??$_Buffered_rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00HHAAV?$_Temp_iterator@UOpinion@@@0@@Z PROC ; std::_Buffered_rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion>, COMDAT

; 2683 : 	{	// rotate [_First, _Last) using temp buffer

	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H

; 2684 : 	if (_Count1 <= _Count2 && _Count1 <= _Tempbuf._Maxlen())

	mov	eax, DWORD PTR __Count1$[ebp]
	cmp	eax, DWORD PTR __Count2$[ebp]
	jg	$LN4@Buffered_r
	mov	ecx, DWORD PTR __Tempbuf$[ebp]
	call	?_Maxlen@?$_Temp_iterator@UOpinion@@@std@@QAEHXZ ; std::_Temp_iterator<Opinion>::_Maxlen
	cmp	DWORD PTR __Count1$[ebp], eax
	jg	$LN4@Buffered_r

; 2685 : 		{	// buffer left partition, then copy parts
; 2686 : 		_STDEXT unchecked_copy(_First, _Mid, _Tempbuf._Init());

	mov	ecx, DWORD PTR __Tempbuf$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR __Tempbuf$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [ecx+4], edx
	sub	esp, 20					; 00000014H
	mov	eax, esp
	mov	DWORD PTR $T263817[ebp], esp
	mov	DWORD PTR $T263839[ebp], eax
	mov	ecx, DWORD PTR $T263839[ebp]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR $T263839[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR $T263839[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR $T263839[ebp]
	mov	DWORD PTR [ecx+12], 0
	mov	edx, DWORD PTR $T263839[ebp]
	mov	eax, DWORD PTR __Tempbuf$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [edx+16], ecx
	mov	edx, DWORD PTR $T263839[ebp]
	mov	DWORD PTR tv175[ebp], edx
	mov	eax, DWORD PTR __Mid$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T263818[ebp]
	push	edx
	call	??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv176[ebp], eax
	lea	ecx, DWORD PTR $T263818[ebp]
	call	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>

; 2687 : 		_STDEXT unchecked_copy(_Mid, _Last, _First);

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T263887[ebp], eax
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR $T263886[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T263877[ebp], dl
	mov	al, BYTE PTR __Cat$263881[ebp]
	mov	BYTE PTR $T263878[ebp], al
	movzx	ecx, BYTE PTR $T263877[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T263878[ebp]
	push	edx
	movzx	eax, BYTE PTR $T263879[ebp]
	push	eax
	mov	ecx, DWORD PTR $T263887[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR $T263886[ebp]
	push	eax
	lea	ecx, DWORD PTR $T263819[ebp]
	push	ecx
	call	??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
	add	esp, 28					; 0000001cH

; 2688 : 		return (_STDEXT unchecked_copy_backward(_Tempbuf._First(), _Tempbuf._Last(),
; 2689 : 			_Last));

	mov	edx, DWORD PTR __Tempbuf$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T263891[ebp], ecx
	mov	edx, DWORD PTR __Tempbuf$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T263895[ebp], ecx
	mov	edx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T263974[ebp], edx
	mov	eax, DWORD PTR $T263895[ebp]
	mov	DWORD PTR $T263973[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T263950[ebp], cl
	mov	dl, BYTE PTR __Cat$263954[ebp]
	mov	BYTE PTR $T263951[ebp], dl
	mov	al, BYTE PTR $T263950[ebp]
	mov	BYTE PTR $T263947[ebp], al
	mov	cl, BYTE PTR $T263952[ebp]
	mov	BYTE PTR $T263946[ebp], cl
	mov	edx, DWORD PTR $T263974[ebp]
	mov	DWORD PTR $T263945[ebp], edx
	mov	eax, DWORD PTR $T263891[ebp]
	mov	DWORD PTR $T263944[ebp], eax
	mov	ecx, DWORD PTR $T263973[ebp]
	mov	DWORD PTR $T263943[ebp], ecx
$LN53@Buffered_r:
	mov	edx, DWORD PTR $T263943[ebp]
	cmp	edx, DWORD PTR $T263944[ebp]
	je	SHORT $LN52@Buffered_r
	mov	eax, DWORD PTR $T263944[ebp]
	sub	eax, 84					; 00000054H
	mov	DWORD PTR $T263944[ebp], eax
	mov	ecx, DWORD PTR $T263945[ebp]
	sub	ecx, 84					; 00000054H
	mov	DWORD PTR $T263945[ebp], ecx
	mov	edx, DWORD PTR $T263945[ebp]
	mov	DWORD PTR $T263928[ebp], edx
	mov	eax, DWORD PTR $T263944[ebp]
	push	eax
	mov	ecx, DWORD PTR $T263928[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	ecx, DWORD PTR $T263928[ebp]
	mov	edx, DWORD PTR $T263944[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	DWORD PTR [ecx+80], eax
	jmp	SHORT $LN53@Buffered_r
$LN52@Buffered_r:
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR $T263945[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@Buffered_r
	jmp	$LN5@Buffered_r
$LN4@Buffered_r:

; 2690 : 		}
; 2691 : 	else if (_Count2 <= _Tempbuf._Maxlen())

	mov	ecx, DWORD PTR __Tempbuf$[ebp]
	call	?_Maxlen@?$_Temp_iterator@UOpinion@@@std@@QAEHXZ ; std::_Temp_iterator<Opinion>::_Maxlen
	cmp	DWORD PTR __Count2$[ebp], eax
	jg	$LN2@Buffered_r

; 2692 : 		{	// buffer right partition, then copy parts
; 2693 : 		_STDEXT unchecked_copy(_Mid, _Last, _Tempbuf._Init());

	mov	eax, DWORD PTR __Tempbuf$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR __Tempbuf$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx
	sub	esp, 20					; 00000014H
	mov	edx, esp
	mov	DWORD PTR $T263820[ebp], esp
	mov	DWORD PTR $T263987[ebp], edx
	mov	eax, DWORD PTR $T263987[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR $T263987[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR $T263987[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR $T263987[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	ecx, DWORD PTR $T263987[ebp]
	mov	edx, DWORD PTR __Tempbuf$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+16], eax
	mov	ecx, DWORD PTR $T263987[ebp]
	mov	DWORD PTR tv179[ebp], ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __Mid$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T263821[ebp]
	push	ecx
	call	??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv180[ebp], eax
	lea	ecx, DWORD PTR $T263821[ebp]
	call	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>

; 2694 : 		_STDEXT unchecked_copy_backward(_First, _Mid, _Last);

	mov	edx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T264035[ebp], edx
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T264034[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T264025[ebp], cl
	mov	dl, BYTE PTR __Cat$264029[ebp]
	mov	BYTE PTR $T264026[ebp], dl
	movzx	eax, BYTE PTR $T264025[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T264026[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T264027[ebp]
	push	edx
	mov	eax, DWORD PTR $T264035[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mid$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T264034[ebp]
	push	edx
	lea	eax, DWORD PTR $T263822[ebp]
	push	eax
	call	??$_Copy_backward_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
	add	esp, 28					; 0000001cH

; 2695 : 		return (_STDEXT unchecked_copy(_Tempbuf._First(), _Tempbuf._Last(), _First));

	mov	ecx, DWORD PTR __Tempbuf$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T264039[ebp], eax
	mov	ecx, DWORD PTR __Tempbuf$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T264043[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T264068[ebp], ecx
	mov	edx, DWORD PTR $T264043[ebp]
	mov	DWORD PTR $T264067[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T264058[ebp], al
	mov	cl, BYTE PTR __Cat$264062[ebp]
	mov	BYTE PTR $T264059[ebp], cl
	movzx	edx, BYTE PTR $T264058[ebp]
	push	edx
	movzx	eax, BYTE PTR $T264059[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T264060[ebp]
	push	ecx
	mov	edx, DWORD PTR $T264068[ebp]
	push	edx
	mov	eax, DWORD PTR $T264039[ebp]
	push	eax
	mov	ecx, DWORD PTR $T264067[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	call	??$_Copy_opt@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
	add	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@Buffered_r

; 2696 : 		}
; 2697 : 	else

	jmp	$LN5@Buffered_r
$LN2@Buffered_r:

; 2698 : 		{	// buffer too small, rotate in place
; 2699 : 		std::rotate(_First, _Mid, _Last);

	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T264131[ebp], eax
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR $T264130[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T264129[ebp], edx
	mov	eax, DWORD PTR $T264129[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T264130[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN128@Buffered_r
	mov	ecx, DWORD PTR $T264130[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR $T264131[ebp]
	sete	dl
	movzx	eax, dl
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN128@Buffered_r
	mov	dl, BYTE PTR $T264111[ebp]
	mov	BYTE PTR $T264107[ebp], dl
	mov	eax, DWORD PTR $T264131[ebp]
	mov	DWORD PTR $T264106[ebp], eax
	mov	ecx, DWORD PTR $T264130[ebp]
	mov	DWORD PTR $T264105[ebp], ecx
	mov	edx, DWORD PTR $T264129[ebp]
	mov	DWORD PTR $T264104[ebp], edx
	push	0
	push	0
	mov	eax, DWORD PTR $T264106[ebp]
	push	eax
	mov	ecx, DWORD PTR $T264105[ebp]
	push	ecx
	mov	edx, DWORD PTR $T264104[ebp]
	push	edx
	call	??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z ; std::_Rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion>
	add	esp, 20					; 00000014H

; 2700 : 		std::advance(_First, _Count2);

$LN128@Buffered_r:
	mov	eax, DWORD PTR __Count2$[ebp]
	imul	eax, 84					; 00000054H
	add	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __First$[ebp], eax

; 2701 : 		return (_First);

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@Buffered_r:

; 2702 : 		}
; 2703 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Buffered_rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00HHAAV?$_Temp_iterator@UOpinion@@@0@@Z ENDP ; std::_Buffered_rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Med3@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z
_TEXT	SEGMENT
__Tmp$264231 = -24					; size = 8
__Tmp$264209 = -16					; size = 8
__Tmp$264185 = -8					; size = 8
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Med3@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z PROC ; std::_Med3<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>, COMDAT

; 2998 : 	{	// sort median of three elements to middle

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 2999 : 	if (_DEBUG_LT(*_Mid, *_First))

	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN15@Med3

; 3000 : 		std::iter_swap(_Mid, _First);

	mov	edx, DWORD PTR __Mid$[ebp]
	cmp	edx, DWORD PTR __First$[ebp]
	je	SHORT $LN15@Med3
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$264185[ebp], ecx
	mov	edx, DWORD PTR __Mid$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Tmp$264185[ebp+4], eax
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR __Tmp$264185[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Tmp$264185[ebp+4]
	mov	DWORD PTR [edx+4], ecx

; 3001 : 	if (_DEBUG_LT(*_Last, *_Mid))

$LN15@Med3:
	mov	edx, DWORD PTR __Last$[ebp]
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN24@Med3

; 3002 : 		std::iter_swap(_Last, _Mid);

	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __Mid$[ebp]
	je	SHORT $LN24@Med3
	mov	edx, DWORD PTR __Last$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$264209[ebp], eax
	mov	ecx, DWORD PTR __Last$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$264209[ebp+4], edx
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	edx, DWORD PTR __Tmp$264209[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Tmp$264209[ebp+4]
	mov	DWORD PTR [ecx+4], eax

; 3003 : 	if (_DEBUG_LT(*_Mid, *_First))

$LN24@Med3:
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx+4]
	setg	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN4@Med3

; 3004 : 		std::iter_swap(_Mid, _First);

	mov	eax, DWORD PTR __Mid$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	je	SHORT $LN4@Med3
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$264231[ebp], edx
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$264231[ebp+4], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Tmp$264231[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$264231[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN4@Med3:

; 3005 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Med3@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ENDP ; std::_Med3<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HHU12@@Z
_TEXT	SEGMENT
$T264256 = -32						; size = 4
$T264255 = -28						; size = 8
__Idx$264251 = -20					; size = 4
$T264242 = -16						; size = 4
__Idx$ = -8						; size = 4
__Top$ = -4						; size = 4
__First$ = 8						; size = 4
__Hole$ = 12						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 8
??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HHU12@@Z PROC ; std::_Adjust_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>, COMDAT

; 2055 : 	{	// percolate _Hole to _Bottom, then push _Val, using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi

; 2056 : 	_Diff _Top = _Hole;

	mov	eax, DWORD PTR __Hole$[ebp]
	mov	DWORD PTR __Top$[ebp], eax

; 2057 : 	_Diff _Idx = 2 * _Hole + 2;

	mov	ecx, DWORD PTR __Hole$[ebp]
	lea	edx, DWORD PTR [ecx+ecx+2]
	mov	DWORD PTR __Idx$[ebp], edx

; 2058 : 
; 2059 : 	for (; _Idx < _Bottom; _Idx = 2 * _Idx + 2)

	jmp	SHORT $LN5@Adjust_hea
$LN4@Adjust_hea:
	mov	eax, DWORD PTR __Idx$[ebp]
	lea	ecx, DWORD PTR [eax+eax+2]
	mov	DWORD PTR __Idx$[ebp], ecx
$LN5@Adjust_hea:
	mov	edx, DWORD PTR __Idx$[ebp]
	cmp	edx, DWORD PTR __Bottom$[ebp]
	jge	SHORT $LN3@Adjust_hea

; 2060 : 		{	// move _Hole down to larger child
; 2061 : 		if (_DEBUG_LT(*(_First + _Idx), *(_First + (_Idx - 1))))

	mov	eax, DWORD PTR __Idx$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR __Idx$[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [ecx+eax*8+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [esi+edx*8-4]
	setg	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN2@Adjust_hea

; 2062 : 			--_Idx;

	mov	eax, DWORD PTR __Idx$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Idx$[ebp], eax
$LN2@Adjust_hea:

; 2063 : 		*(_First + _Hole) = *(_First + _Idx), _Hole = _Idx;

	mov	ecx, DWORD PTR __Idx$[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx+ecx*8]
	mov	ecx, DWORD PTR [edx+ecx*8+4]
	mov	edx, DWORD PTR __Hole$[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	DWORD PTR [esi+edx*8], eax
	mov	DWORD PTR [esi+edx*8+4], ecx
	mov	eax, DWORD PTR __Idx$[ebp]
	mov	DWORD PTR __Hole$[ebp], eax

; 2064 : 		}

	jmp	SHORT $LN4@Adjust_hea
$LN3@Adjust_hea:

; 2065 : 
; 2066 : 	if (_Idx == _Bottom)

	mov	ecx, DWORD PTR __Idx$[ebp]
	cmp	ecx, DWORD PTR __Bottom$[ebp]
	jne	SHORT $LN1@Adjust_hea

; 2067 : 		{	// only child at bottom, move _Hole down to it
; 2068 : 		*(_First + _Hole) = *(_First + (_Bottom - 1));

	mov	edx, DWORD PTR __Bottom$[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+edx*8-8]
	mov	edx, DWORD PTR [eax+edx*8-4]
	mov	eax, DWORD PTR __Hole$[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	DWORD PTR [esi+eax*8], ecx
	mov	DWORD PTR [esi+eax*8+4], edx

; 2069 : 		_Hole = _Bottom - 1;

	mov	ecx, DWORD PTR __Bottom$[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Hole$[ebp], ecx
$LN1@Adjust_hea:

; 2070 : 		}
; 2071 : 	std::_Push_heap(_First, _Hole, _Top, _Val);

	lea	edx, DWORD PTR $T264255[ebp]
	mov	DWORD PTR $T264242[ebp], edx
	mov	eax, DWORD PTR $T264242[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T264242[ebp]
	mov	eax, DWORD PTR __Val$[ebp+4]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR __Hole$[ebp]
	mov	DWORD PTR $T264256[ebp], ecx
	mov	eax, DWORD PTR $T264256[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Idx$264251[ebp], eax
	jmp	SHORT $LN14@Adjust_hea
$LN13@Adjust_hea:
	mov	eax, DWORD PTR $T264256[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Idx$264251[ebp], eax
$LN14@Adjust_hea:
	mov	edx, DWORD PTR __Top$[ebp]
	cmp	edx, DWORD PTR $T264256[ebp]
	jge	SHORT $LN12@Adjust_hea
	mov	eax, DWORD PTR __Idx$264251[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+4]
	xor	eax, eax
	cmp	edx, DWORD PTR $T264255[ebp+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@Adjust_hea
	mov	edx, DWORD PTR __Idx$264251[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+edx*8]
	mov	edx, DWORD PTR [eax+edx*8+4]
	mov	eax, DWORD PTR $T264256[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	DWORD PTR [esi+eax*8], ecx
	mov	DWORD PTR [esi+eax*8+4], edx
	mov	ecx, DWORD PTR __Idx$264251[ebp]
	mov	DWORD PTR $T264256[ebp], ecx
	jmp	SHORT $LN13@Adjust_hea
$LN12@Adjust_hea:
	mov	edx, DWORD PTR $T264256[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR $T264255[ebp]
	mov	DWORD PTR [eax+edx*8], ecx
	mov	ecx, DWORD PTR $T264255[ebp+4]
	mov	DWORD PTR [eax+edx*8+4], ecx

; 2072 : 	}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HHU12@@Z ENDP ; std::_Adjust_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	SEGMENT
__catchsym$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$5
__unwindtable$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
tv89 = -36						; size = 4
$T264291 = -32						; size = 4
$T264290 = -28						; size = 4
__Vptr$264299 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<Opinion *,Opinion *,std::allocator<Opinion> >, COMDAT

; 124  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 128  : 
; 129  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	jmp	SHORT $LN6@Uninit_cop@2
$LN5@Uninit_cop@2:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 84					; 00000054H
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 84					; 00000054H
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_cop@2:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_cop@2

; 131  : 		_Al.construct(_Dest, *_First);

	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Vptr$264299[ebp], ecx
	mov	edx, DWORD PTR __Vptr$264299[ebp]
	mov	DWORD PTR $T264291[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	DWORD PTR $T264291[ebp], 0
	je	SHORT $LN18@Uninit_cop@2
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T264291[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T264291[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	DWORD PTR [ecx+80], eax
	mov	ecx, DWORD PTR $T264291[ebp]
	mov	DWORD PTR tv89[ebp], ecx
	jmp	SHORT $LN19@Uninit_cop@2
$LN18@Uninit_cop@2:
	mov	DWORD PTR tv89[ebp], 0
$LN19@Uninit_cop@2:
	mov	edx, DWORD PTR tv89[ebp]
	mov	DWORD PTR $T264290[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN5@Uninit_cop@2
$LN4@Uninit_cop@2:
	jmp	SHORT $LN10@Uninit_cop@2
__catch$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)

	jmp	SHORT $LN3@Uninit_cop@2
$LN2@Uninit_cop@2:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 84					; 00000054H
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_cop@2:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_cop@2

; 134  : 		_Al.destroy(_Next);

	mov	ecx, DWORD PTR __Next$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN26@Uninit_cop@2
	mov	eax, DWORD PTR __Next$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN26@Uninit_cop@2:
	jmp	SHORT $LN2@Uninit_cop@2
$LN1@Uninit_cop@2:

; 135  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 136  : 	_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1
	ret	0
$LN10@Uninit_cop@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1:

; 137  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_cop@2:

; 138  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Vptr$264299[ebp]
	push	eax
	mov	ecx, DWORD PTR $T264291[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<Opinion *,Opinion *,std::allocator<Opinion> >
PUBLIC	??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z ; stdext::unchecked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,OpinionEval>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z$0
__ehfuncinfo$??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
xdata$x	ENDS
;	COMDAT ??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
tv187 = -180						; size = 4
tv186 = -176						; size = 4
tv182 = -172						; size = 4
tv181 = -168						; size = 4
tv177 = -164						; size = 4
tv176 = -160						; size = 4
$T264528 = -140						; size = 4
$T264463 = -124						; size = 4
$T264431 = -112						; size = 4
$T264427 = -108						; size = 4
$T264345 = -100						; size = 20
$T264344 = -80						; size = 4
$T264343 = -76						; size = 20
$T264342 = -56						; size = 4
$T264341 = -52						; size = 20
$T264340 = -32						; size = 4
__Mid1$239894 = -28					; size = 4
__Mid2$239875 = -24					; size = 4
__Mid1$239874 = -20					; size = 4
__Chunk2$239870 = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 20
__Chunk$ = 36						; size = 4
__Count$ = 40						; size = 4
__Pred$ = 44						; size = 1
___formal$ = 48						; size = 1
??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Chunked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,int,OpinionEval>, COMDAT

; 3434 : 	{	// copy merging chunks, using _Pred

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 168				; 000000a8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3435 : 	for (_Diff _Chunk2 = _Chunk * 2; _Chunk2 <= _Count; _Count -= _Chunk2)

	mov	eax, DWORD PTR __Chunk$[ebp]
	shl	eax, 1
	mov	DWORD PTR __Chunk2$239870[ebp], eax
	jmp	SHORT $LN5@Chunked_me
$LN4@Chunked_me:
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, DWORD PTR __Chunk2$239870[ebp]
	mov	DWORD PTR __Count$[ebp], ecx
$LN5@Chunked_me:
	mov	edx, DWORD PTR __Chunk2$239870[ebp]
	cmp	edx, DWORD PTR __Count$[ebp]
	jg	$LN3@Chunked_me

; 3436 : 		{	// copy merging pairs of adjacent chunks
; 3437 : 		_BidIt _Mid1 = _First;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Mid1$239874[ebp], eax

; 3438 : 		std::advance(_Mid1, _Chunk);

	mov	ecx, DWORD PTR __Chunk$[ebp]
	imul	ecx, 84					; 00000054H
	add	ecx, DWORD PTR __Mid1$239874[ebp]
	mov	DWORD PTR __Mid1$239874[ebp], ecx

; 3439 : 		_BidIt _Mid2 = _Mid1;

	mov	edx, DWORD PTR __Mid1$239874[ebp]
	mov	DWORD PTR __Mid2$239875[ebp], edx

; 3440 : 		std::advance(_Mid2, _Chunk);

	mov	eax, DWORD PTR __Chunk$[ebp]
	imul	eax, 84					; 00000054H
	add	eax, DWORD PTR __Mid2$239875[ebp]
	mov	DWORD PTR __Mid2$239875[ebp], eax

; 3441 : 
; 3442 : 		_Dest = _STDEXT unchecked_merge(_First, _Mid1, _Mid1, _Mid2, _Dest, _Pred);

	movzx	ecx, BYTE PTR __Pred$[ebp]
	push	ecx
	sub	esp, 20					; 00000014H
	mov	edx, esp
	mov	DWORD PTR $T264340[ebp], esp
	mov	DWORD PTR $T264427[ebp], edx
	mov	eax, DWORD PTR $T264427[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR $T264427[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR $T264427[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR $T264427[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	ecx, DWORD PTR $T264427[ebp]
	mov	edx, DWORD PTR __Dest$[ebp+16]
	mov	DWORD PTR [ecx+16], edx
	mov	eax, DWORD PTR $T264427[ebp]
	mov	DWORD PTR tv176[ebp], eax
	mov	ecx, DWORD PTR __Mid2$239875[ebp]
	push	ecx
	mov	edx, DWORD PTR __Mid1$239874[ebp]
	push	edx
	mov	eax, DWORD PTR __Mid1$239874[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T264341[ebp]
	push	edx
	call	??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z ; stdext::unchecked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,OpinionEval>
	add	esp, 44					; 0000002cH
	mov	DWORD PTR tv177[ebp], eax
	mov	eax, DWORD PTR tv177[ebp]
	mov	DWORD PTR $T264431[ebp], eax
	mov	ecx, DWORD PTR $T264431[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR __Dest$[ebp+16], edx
	lea	ecx, DWORD PTR $T264341[ebp]
	call	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>

; 3443 : 		_First = _Mid2;

	mov	eax, DWORD PTR __Mid2$239875[ebp]
	mov	DWORD PTR __First$[ebp], eax

; 3444 : 		}

	jmp	$LN4@Chunked_me
$LN3@Chunked_me:

; 3445 : 
; 3446 : 	if (_Count <= _Chunk)

	mov	ecx, DWORD PTR __Count$[ebp]
	cmp	ecx, DWORD PTR __Chunk$[ebp]
	jg	SHORT $LN2@Chunked_me

; 3447 : 		_STDEXT unchecked_copy(_First, _Last, _Dest);	// copy partial last chunk

	sub	esp, 20					; 00000014H
	mov	edx, esp
	mov	DWORD PTR $T264342[ebp], esp
	mov	DWORD PTR $T264463[ebp], edx
	mov	eax, DWORD PTR $T264463[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR $T264463[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR $T264463[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR $T264463[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	ecx, DWORD PTR $T264463[ebp]
	mov	edx, DWORD PTR __Dest$[ebp+16]
	mov	DWORD PTR [ecx+16], edx
	mov	eax, DWORD PTR $T264463[ebp]
	mov	DWORD PTR tv181[ebp], eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	eax, DWORD PTR $T264343[ebp]
	push	eax
	call	??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv182[ebp], eax
	lea	ecx, DWORD PTR $T264343[ebp]
	call	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>

; 3448 : 	else

	jmp	$LN1@Chunked_me
$LN2@Chunked_me:

; 3449 : 		{	// copy merging whole and partial last chunk
; 3450 : 		_BidIt _Mid1 = _First;

	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Mid1$239894[ebp], ecx

; 3451 : 		std::advance(_Mid1, _Chunk);

	mov	edx, DWORD PTR __Chunk$[ebp]
	imul	edx, 84					; 00000054H
	add	edx, DWORD PTR __Mid1$239894[ebp]
	mov	DWORD PTR __Mid1$239894[ebp], edx

; 3452 : 
; 3453 : 		_STDEXT unchecked_merge(_First, _Mid1, _Mid1, _Last, _Dest, _Pred);

	movzx	eax, BYTE PTR __Pred$[ebp]
	push	eax
	sub	esp, 20					; 00000014H
	mov	ecx, esp
	mov	DWORD PTR $T264344[ebp], esp
	mov	DWORD PTR $T264528[ebp], ecx
	mov	edx, DWORD PTR $T264528[ebp]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR $T264528[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR $T264528[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR $T264528[ebp]
	mov	DWORD PTR [edx+12], 0
	mov	eax, DWORD PTR $T264528[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp+16]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR $T264528[ebp]
	mov	DWORD PTR tv186[ebp], edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mid1$239894[ebp]
	push	ecx
	mov	edx, DWORD PTR __Mid1$239894[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T264345[ebp]
	push	ecx
	call	??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z ; stdext::unchecked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,OpinionEval>
	add	esp, 44					; 0000002cH
	mov	DWORD PTR tv187[ebp], eax
	lea	ecx, DWORD PTR $T264345[ebp]
	call	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
$LN1@Chunked_me:

; 3454 : 		}
; 3455 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Dest$[ebp]
	call	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z$0:
	lea	ecx, DWORD PTR __Dest$[ebp]
	jmp	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
__ehhandler$??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-172]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Chunked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,int,OpinionEval>
PUBLIC	??$_Merge@PAUOpinion@@PAU1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@000V10@UOpinionEval@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Merge<Opinion *,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,std::random_access_iterator_tag>
; Function compile flags: /Odtp
;	COMDAT ??$_Chunked_merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinionEval@@@std@@YAXPAUOpinion@@0V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T265012 = -216						; size = 4
$T265011 = -212						; size = 4
$T265010 = -208						; size = 4
$T265009 = -204						; size = 4
$T265004 = -120						; size = 1
$T265003 = -119						; size = 1
$T264780 = -116						; size = 4
$T264779 = -112						; size = 4
$T264752 = -106						; size = 1
$T264751 = -105						; size = 1
$T264750 = -104						; size = 4
$T264749 = -100						; size = 4
$T264733 = -96						; size = 4
__Cat$264760 = -88					; size = 1
$T264757 = -87						; size = 1
$T264756 = -86						; size = 1
$T264755 = -85						; size = 1
$T264700 = -84						; size = 4
$T264699 = -80						; size = 4
$T264698 = -76						; size = 4
$T264697 = -72						; size = 4
$T264696 = -68						; size = 4
$T264691 = -34						; size = 1
$T264690 = -33						; size = 1
$T264585 = -28						; size = 4
$T264584 = -24						; size = 4
$T264583 = -20						; size = 4
__Mid1$239926 = -16					; size = 4
__Mid2$239909 = -12					; size = 4
__Mid1$239902 = -8					; size = 4
__Chunk2$239898 = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Chunk$ = 20						; size = 4
__Count$ = 24						; size = 4
__Pred$ = 28						; size = 1
___formal$ = 32						; size = 1
??$_Chunked_merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinionEval@@@std@@YAXPAUOpinion@@0V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Chunked_merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,OpinionEval>, COMDAT

; 3434 : 	{	// copy merging chunks, using _Pred

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H

; 3435 : 	for (_Diff _Chunk2 = _Chunk * 2; _Chunk2 <= _Count; _Count -= _Chunk2)

	mov	eax, DWORD PTR __Chunk$[ebp]
	shl	eax, 1
	mov	DWORD PTR __Chunk2$239898[ebp], eax
	jmp	SHORT $LN5@Chunked_me@2
$LN4@Chunked_me@2:
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, DWORD PTR __Chunk2$239898[ebp]
	mov	DWORD PTR __Count$[ebp], ecx
$LN5@Chunked_me@2:
	mov	edx, DWORD PTR __Chunk2$239898[ebp]
	cmp	edx, DWORD PTR __Count$[ebp]
	jg	$LN3@Chunked_me@2

; 3436 : 		{	// copy merging pairs of adjacent chunks
; 3437 : 		_BidIt _Mid1 = _First;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Mid1$239902[ebp], eax

; 3438 : 		std::advance(_Mid1, _Chunk);

	mov	ecx, DWORD PTR __Chunk$[ebp]
	imul	ecx, 84					; 00000054H
	add	ecx, DWORD PTR __Mid1$239902[ebp]
	mov	DWORD PTR __Mid1$239902[ebp], ecx

; 3439 : 		_BidIt _Mid2 = _Mid1;

	mov	edx, DWORD PTR __Mid1$239902[ebp]
	mov	DWORD PTR __Mid2$239909[ebp], edx

; 3440 : 		std::advance(_Mid2, _Chunk);

	mov	eax, DWORD PTR __Chunk$[ebp]
	imul	eax, 84					; 00000054H
	add	eax, DWORD PTR __Mid2$239909[ebp]
	mov	DWORD PTR __Mid2$239909[ebp], eax

; 3441 : 
; 3442 : 		_Dest = _STDEXT unchecked_merge(_First, _Mid1, _Mid1, _Mid2, _Dest, _Pred);

	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T264700[ebp], ecx
	mov	edx, DWORD PTR __Mid2$239909[ebp]
	mov	DWORD PTR $T264699[ebp], edx
	mov	eax, DWORD PTR __Mid1$239902[ebp]
	mov	DWORD PTR $T264698[ebp], eax
	mov	ecx, DWORD PTR __Mid1$239902[ebp]
	mov	DWORD PTR $T264697[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T264696[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T264690[ebp], al
	movzx	ecx, BYTE PTR $T264690[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T264691[ebp]
	push	edx
	movzx	eax, BYTE PTR __Pred$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T264700[ebp]
	push	ecx
	mov	edx, DWORD PTR $T264699[ebp]
	push	edx
	mov	eax, DWORD PTR $T264698[ebp]
	push	eax
	mov	ecx, DWORD PTR $T264697[ebp]
	push	ecx
	mov	edx, DWORD PTR $T264696[ebp]
	push	edx
	lea	eax, DWORD PTR $T264583[ebp]
	push	eax
	call	??$_Merge@PAUOpinion@@PAU1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@000V10@UOpinionEval@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Merge<Opinion *,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,std::random_access_iterator_tag>
	add	esp, 36					; 00000024H
	mov	ecx, DWORD PTR $T264583[ebp]
	mov	DWORD PTR __Dest$[ebp], ecx

; 3443 : 		_First = _Mid2;

	mov	edx, DWORD PTR __Mid2$239909[ebp]
	mov	DWORD PTR __First$[ebp], edx

; 3444 : 		}

	jmp	$LN4@Chunked_me@2
$LN3@Chunked_me@2:

; 3445 : 
; 3446 : 	if (_Count <= _Chunk)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Chunk$[ebp]
	jg	SHORT $LN2@Chunked_me@2

; 3447 : 		_STDEXT unchecked_copy(_First, _Last, _Dest);	// copy partial last chunk

	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T264780[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T264779[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T264755[ebp], al
	mov	cl, BYTE PTR __Cat$264760[ebp]
	mov	BYTE PTR $T264756[ebp], cl
	mov	dl, BYTE PTR $T264755[ebp]
	mov	BYTE PTR $T264752[ebp], dl
	mov	al, BYTE PTR $T264757[ebp]
	mov	BYTE PTR $T264751[ebp], al
	mov	ecx, DWORD PTR $T264780[ebp]
	mov	DWORD PTR $T264750[ebp], ecx
	mov	edx, DWORD PTR $T264779[ebp]
	mov	DWORD PTR $T264749[ebp], edx
	jmp	SHORT $LN63@Chunked_me@2
$LN62@Chunked_me@2:
	mov	eax, DWORD PTR $T264750[ebp]
	add	eax, 84					; 00000054H
	mov	DWORD PTR $T264750[ebp], eax
	mov	ecx, DWORD PTR $T264749[ebp]
	add	ecx, 84					; 00000054H
	mov	DWORD PTR $T264749[ebp], ecx
$LN63@Chunked_me@2:
	mov	edx, DWORD PTR $T264749[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	je	SHORT $LN61@Chunked_me@2
	mov	eax, DWORD PTR $T264750[ebp]
	mov	DWORD PTR $T264733[ebp], eax
	mov	ecx, DWORD PTR $T264749[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T264733[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	edx, DWORD PTR $T264733[ebp]
	mov	eax, DWORD PTR $T264749[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR [edx+80], ecx
	jmp	SHORT $LN62@Chunked_me@2
$LN61@Chunked_me@2:
	mov	edx, DWORD PTR $T264750[ebp]
	mov	DWORD PTR $T264584[ebp], edx

; 3448 : 	else

	jmp	SHORT $LN6@Chunked_me@2
$LN2@Chunked_me@2:

; 3449 : 		{	// copy merging whole and partial last chunk
; 3450 : 		_BidIt _Mid1 = _First;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Mid1$239926[ebp], eax

; 3451 : 		std::advance(_Mid1, _Chunk);

	mov	ecx, DWORD PTR __Chunk$[ebp]
	imul	ecx, 84					; 00000054H
	add	ecx, DWORD PTR __Mid1$239926[ebp]
	mov	DWORD PTR __Mid1$239926[ebp], ecx

; 3452 : 
; 3453 : 		_STDEXT unchecked_merge(_First, _Mid1, _Mid1, _Last, _Dest, _Pred);

	mov	edx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T265012[ebp], edx
	mov	eax, DWORD PTR __Mid1$239926[ebp]
	mov	DWORD PTR $T265011[ebp], eax
	mov	ecx, DWORD PTR __Mid1$239926[ebp]
	mov	DWORD PTR $T265010[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T265009[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T265003[ebp], al
	movzx	ecx, BYTE PTR $T265003[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T265004[ebp]
	push	edx
	movzx	eax, BYTE PTR __Pred$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T265012[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR $T265011[ebp]
	push	eax
	mov	ecx, DWORD PTR $T265010[ebp]
	push	ecx
	mov	edx, DWORD PTR $T265009[ebp]
	push	edx
	lea	eax, DWORD PTR $T264585[ebp]
	push	eax
	call	??$_Merge@PAUOpinion@@PAU1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@000V10@UOpinionEval@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Merge<Opinion *,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,std::random_access_iterator_tag>
	add	esp, 36					; 00000024H
$LN6@Chunked_me@2:

; 3454 : 		}
; 3455 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Chunked_merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinionEval@@@std@@YAXPAUOpinion@@0V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Chunked_merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,OpinionEval>
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	SEGMENT
__unwindtable$??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z$0
__ehfuncinfo$??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
xdata$x	ENDS
;	COMDAT ??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z
_TEXT	SEGMENT
__Tmp$239930 = -100					; size = 84
__$EHRec$ = -12						; size = 12
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z PROC		; std::swap<Opinion>, COMDAT

; 17   : 	{	// exchange values stored at _Left and _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 18   : 	if (&_Left != &_Right)

	mov	eax, DWORD PTR __Left$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	SHORT $LN2@swap

; 19   : 		{	// different, worth swapping
; 20   : 		_Ty _Tmp = _Left;

	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Tmp$239930[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@ABV01@@Z
	mov	edx, DWORD PTR __Left$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	DWORD PTR __Tmp$239930[ebp+80], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 21   : 
; 22   : 		_Left = _Right;

	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Left$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	edx, DWORD PTR __Left$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR [edx+80], ecx

; 23   : 		_Right = _Tmp;

	lea	edx, DWORD PTR __Tmp$239930[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Tmp$239930[ebp+80]
	mov	DWORD PTR [eax+80], ecx

; 24   : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Tmp$239930[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN2@swap:

; 25   : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z$0:
	lea	ecx, DWORD PTR __Tmp$239930[ebp]
	jmp	??1Opinion@@QAE@XZ
__ehhandler$??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z ENDP		; std::swap<Opinion>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvplayer.h
;	COMDAT ?isAlive@CvPlayer@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?isAlive@CvPlayer@@QBE_NXZ PROC				; CvPlayer::isAlive, COMDAT
; _this$ = ecx

; 1091 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1092 : 		return m_bAlive;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+2256]

; 1093 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?isAlive@CvPlayer@@QBE_NXZ ENDP				; CvPlayer::isAlive
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?isEverAlive@CvPlayer@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?isEverAlive@CvPlayer@@QBE_NXZ PROC			; CvPlayer::isEverAlive, COMDAT
; _this$ = ecx

; 1096 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1097 : 		return m_bEverAlive;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+2268]

; 1098 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?isEverAlive@CvPlayer@@QBE_NXZ ENDP			; CvPlayer::isEverAlive
_TEXT	ENDS
PUBLIC	??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABUOpinion@@@Z ; std::_Temp_iterator<Opinion>::operator=
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	SEGMENT
__unwindtable$??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__ehfuncinfo$??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	ENDS
;	COMDAT ??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T265079 = -20						; size = 4
$T265050 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Dest$ = 20						; size = 20
___formal$ = 40						; size = 1
___formal$ = 44						; size = 1
___formal$ = 48						; size = 1
??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,std::forward_iterator_tag>, COMDAT

; 2469 : 	{	// copy [_First, _Last) to [_Dest, ...), arbitrary iterators

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T265050[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	jmp	SHORT $LN15@Copy_opt
$LN9@Copy_opt:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 84					; 00000054H
	mov	DWORD PTR __First$[ebp], eax
$LN15@Copy_opt:
	mov	ecx, DWORD PTR __First$[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR __Last$[ebp]
	sete	dl
	movzx	eax, dl
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Copy_opt

; 2472 : 		*_Dest = *_First;

	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T265079[ebp], edx
	mov	eax, DWORD PTR $T265079[ebp]
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	call	??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABUOpinion@@@Z ; std::_Temp_iterator<Opinion>::operator=
	jmp	SHORT $LN9@Copy_opt
$LN1@Copy_opt:

; 2473 : 	return (_Dest);

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx+12], 0
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __Dest$[ebp+16]
	mov	DWORD PTR [edx+16], eax
	mov	ecx, DWORD PTR $T265050[ebp]
	or	ecx, 1
	mov	DWORD PTR $T265050[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Dest$[ebp]
	call	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2474 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:
	lea	ecx, DWORD PTR __Dest$[ebp]
	jmp	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
__unwindfunclet$??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1:
	mov	eax, DWORD PTR $T265050[ebp]
	and	eax, 1
	je	$LN8@Copy_opt
	and	DWORD PTR $T265050[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
$LN8@Copy_opt:
	ret	0
__ehhandler$??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,std::forward_iterator_tag>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvplayer.h
;	COMDAT ?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ PROC		; CvPlayer::GetID, COMDAT
; _this$ = ecx

; 1167 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1168 : 		return m_eID;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+44]

; 1169 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ ENDP		; CvPlayer::GetID
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ PROC		; CvPlayer::getTeam, COMDAT
; _this$ = ecx

; 1177 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1178 : 		return CvPreGame::teamType(m_eID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4

; 1179 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ ENDP		; CvPlayer::getTeam
_TEXT	ENDS
PUBLIC	??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@00@Z ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V23@UOpinionEval@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@11UOpinionEval@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T265310 = -52						; size = 4
$T265309 = -48						; size = 4
$T265282 = -42						; size = 1
$T265281 = -41						; size = 1
$T265280 = -40						; size = 4
$T265279 = -36						; size = 4
$T265263 = -32						; size = 4
__Cat$265289 = -24					; size = 1
$T265286 = -23						; size = 1
$T265285 = -22						; size = 1
$T265284 = -21						; size = 1
$T265230 = -20						; size = 4
$T265210 = -16						; size = 4
$T265198 = -12						; size = 4
$T265186 = -8						; size = 4
$T265161 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First1$ = 12						; size = 4
__Last1$ = 16						; size = 4
__First2$ = 20						; size = 4
__Last2$ = 24						; size = 4
__Dest$ = 28						; size = 4
__Pred$ = 32						; size = 1
___formal$ = 36						; size = 1
___formal$ = 40						; size = 1
??$_Merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V23@UOpinionEval@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@11UOpinionEval@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,std::random_access_iterator_tag>, COMDAT

; 2593 : 	{	//  copy merging ranges, both using _Pred

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H

; 2594 : 	_DEBUG_ORDER_PRED(_First1, _Last1, _Pred);
; 2595 : 	_DEBUG_ORDER_PRED(_First2, _Last2, _Pred);
; 2596 : 	_DEBUG_POINTER(_Dest);
; 2597 : 	for (; _First1 != _Last1 && _First2 != _Last2; ++_Dest)

	jmp	SHORT $LN5@Merge
$LN4@Merge:
	mov	eax, DWORD PTR __Dest$[ebp]
	add	eax, 84					; 00000054H
	mov	DWORD PTR __Dest$[ebp], eax
$LN5@Merge:
	mov	ecx, DWORD PTR __First1$[ebp]
	cmp	ecx, DWORD PTR __Last1$[ebp]
	je	$LN3@Merge
	mov	edx, DWORD PTR __First2$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR __Last2$[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN3@Merge

; 2598 : 		if (_DEBUG_LT_PRED(_Pred, *_First2, *_First1))

	mov	eax, DWORD PTR __First2$[ebp]
	mov	DWORD PTR $T265186[ebp], eax
	mov	ecx, DWORD PTR $T265186[ebp]
	mov	edx, DWORD PTR __First1$[ebp]
	mov	eax, DWORD PTR [ecx+80]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx+80]
	setl	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN36@Merge

; 2599 : 			*_Dest = *_First2, ++_First2;

	mov	eax, DWORD PTR __First2$[ebp]
	mov	DWORD PTR $T265198[ebp], eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T265210[ebp], ecx
	mov	edx, DWORD PTR $T265198[ebp]
	push	edx
	mov	ecx, DWORD PTR $T265210[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR $T265210[ebp]
	mov	ecx, DWORD PTR $T265198[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+80], edx
	mov	eax, DWORD PTR __First2$[ebp]
	add	eax, 84					; 00000054H
	mov	DWORD PTR __First2$[ebp], eax

; 2600 : 		else

	jmp	SHORT $LN1@Merge

; 2601 : 			*_Dest = *_First1, ++_First1;

$LN36@Merge:
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T265230[ebp], ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T265230[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR $T265230[ebp]
	mov	ecx, DWORD PTR __First1$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+80], edx
	mov	eax, DWORD PTR __First1$[ebp]
	add	eax, 84					; 00000054H
	mov	DWORD PTR __First1$[ebp], eax
$LN1@Merge:
	jmp	$LN4@Merge
$LN3@Merge:

; 2602 : 
; 2603 : 	_Dest = _STDEXT unchecked_copy(_First1, _Last1, _Dest);	// copy any tail

	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T265310[ebp], ecx
	mov	edx, DWORD PTR __First1$[ebp]
	mov	DWORD PTR $T265309[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T265284[ebp], al
	mov	cl, BYTE PTR __Cat$265289[ebp]
	mov	BYTE PTR $T265285[ebp], cl
	mov	dl, BYTE PTR $T265284[ebp]
	mov	BYTE PTR $T265282[ebp], dl
	mov	al, BYTE PTR $T265286[ebp]
	mov	BYTE PTR $T265281[ebp], al
	mov	ecx, DWORD PTR $T265310[ebp]
	mov	DWORD PTR $T265280[ebp], ecx
	mov	edx, DWORD PTR $T265309[ebp]
	mov	DWORD PTR $T265279[ebp], edx
	jmp	SHORT $LN50@Merge
$LN49@Merge:
	mov	eax, DWORD PTR $T265280[ebp]
	add	eax, 84					; 00000054H
	mov	DWORD PTR $T265280[ebp], eax
	mov	ecx, DWORD PTR $T265279[ebp]
	add	ecx, 84					; 00000054H
	mov	DWORD PTR $T265279[ebp], ecx
$LN50@Merge:
	mov	edx, DWORD PTR $T265279[ebp]
	cmp	edx, DWORD PTR __Last1$[ebp]
	je	SHORT $LN48@Merge
	mov	eax, DWORD PTR $T265280[ebp]
	mov	DWORD PTR $T265263[ebp], eax
	mov	ecx, DWORD PTR $T265279[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T265263[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	edx, DWORD PTR $T265263[ebp]
	mov	eax, DWORD PTR $T265279[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR [edx+80], ecx
	jmp	SHORT $LN49@Merge
$LN48@Merge:
	mov	edx, DWORD PTR $T265280[ebp]
	mov	DWORD PTR $T265161[ebp], edx
	mov	eax, DWORD PTR $T265161[ebp]
	mov	DWORD PTR __Dest$[ebp], eax

; 2604 : 	return (_STDEXT unchecked_copy(_First2, _Last2, _Dest));

	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First2$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	call	??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@00@Z ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
	add	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2605 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V23@UOpinionEval@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@11UOpinionEval@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,std::random_access_iterator_tag>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Merge_backward@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@V12@UOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0PAUOpinion@@10UOpinionEval@@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T265579 = -72						; size = 4
$T265559 = -68						; size = 4
$T265539 = -64						; size = 4
$T265527 = -60						; size = 4
$T265510 = -56						; size = 4
$T265509 = -52						; size = 4
$T265508 = -48						; size = 4
__Cat$265504 = -40					; size = 1
$T265501 = -39						; size = 1
$T265500 = -38						; size = 1
$T265499 = -37						; size = 1
$T265484 = -36						; size = 4
$T265483 = -32						; size = 4
$T265457 = -26						; size = 1
$T265456 = -25						; size = 1
$T265455 = -24						; size = 4
$T265454 = -20						; size = 4
$T265453 = -16						; size = 4
$T265438 = -12						; size = 4
__Cat$265464 = -4					; size = 1
$T265461 = -3						; size = 1
$T265460 = -2						; size = 1
$T265459 = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
__First1$ = 12						; size = 4
__Last1$ = 16						; size = 4
__First2$ = 20						; size = 4
__Last2$ = 24						; size = 4
__Dest$ = 28						; size = 4
__Pred$ = 32						; size = 1
___formal$ = 36						; size = 1
??$_Merge_backward@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@V12@UOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0PAUOpinion@@10UOpinionEval@@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Merge_backward<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>, COMDAT

; 2839 : 	{	// merge backwards to _Dest, using _Pred

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H

; 2840 : 	for (; ; )
; 2841 : 		if (_First1 == _Last1)

$LN11@Merge_back:
	mov	eax, DWORD PTR __First1$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR __Last1$[ebp]
	sete	cl
	movzx	edx, cl
	test	edx, edx
	je	$LN6@Merge_back

; 2842 : 			return (_STDEXT unchecked_copy_backward(_First2, _Last2, _Dest));

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T265484[ebp], eax
	mov	ecx, DWORD PTR __First2$[ebp]
	mov	DWORD PTR $T265483[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T265459[ebp], dl
	mov	al, BYTE PTR __Cat$265464[ebp]
	mov	BYTE PTR $T265460[ebp], al
	mov	cl, BYTE PTR $T265459[ebp]
	mov	BYTE PTR $T265457[ebp], cl
	mov	dl, BYTE PTR $T265461[ebp]
	mov	BYTE PTR $T265456[ebp], dl
	mov	eax, DWORD PTR $T265484[ebp]
	mov	DWORD PTR $T265455[ebp], eax
	mov	ecx, DWORD PTR __Last2$[ebp]
	mov	DWORD PTR $T265454[ebp], ecx
	mov	edx, DWORD PTR $T265483[ebp]
	mov	DWORD PTR $T265453[ebp], edx
$LN20@Merge_back:
	mov	eax, DWORD PTR $T265453[ebp]
	cmp	eax, DWORD PTR $T265454[ebp]
	je	SHORT $LN19@Merge_back
	mov	ecx, DWORD PTR $T265454[ebp]
	sub	ecx, 84					; 00000054H
	mov	DWORD PTR $T265454[ebp], ecx
	mov	edx, DWORD PTR $T265455[ebp]
	sub	edx, 84					; 00000054H
	mov	DWORD PTR $T265455[ebp], edx
	mov	eax, DWORD PTR $T265455[ebp]
	mov	DWORD PTR $T265438[ebp], eax
	mov	ecx, DWORD PTR $T265454[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T265438[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	edx, DWORD PTR $T265438[ebp]
	mov	eax, DWORD PTR $T265454[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR [edx+80], ecx
	jmp	SHORT $LN20@Merge_back
$LN19@Merge_back:
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR $T265455[ebp]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN9@Merge_back
	jmp	$LN5@Merge_back
$LN6@Merge_back:

; 2843 : 		else if (_First2 == _Last2)

	mov	ecx, DWORD PTR __First2$[ebp]
	cmp	ecx, DWORD PTR __Last2$[ebp]
	jne	SHORT $LN4@Merge_back

; 2844 : 			return (_STDEXT unchecked_copy_backward(_First1, _Last1, _Dest));

	mov	edx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T265510[ebp], edx
	mov	eax, DWORD PTR __Last1$[ebp]
	mov	DWORD PTR $T265509[ebp], eax
	mov	ecx, DWORD PTR __First1$[ebp]
	mov	DWORD PTR $T265508[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T265499[ebp], dl
	mov	al, BYTE PTR __Cat$265504[ebp]
	mov	BYTE PTR $T265500[ebp], al
	movzx	ecx, BYTE PTR $T265499[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T265500[ebp]
	push	edx
	movzx	eax, BYTE PTR $T265501[ebp]
	push	eax
	mov	ecx, DWORD PTR $T265510[ebp]
	push	ecx
	mov	edx, DWORD PTR $T265509[ebp]
	push	edx
	mov	eax, DWORD PTR $T265508[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	call	??$_Copy_backward_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
	add	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN9@Merge_back
	jmp	$LN5@Merge_back
$LN4@Merge_back:

; 2845 : 		else if (_DEBUG_LT_PRED(_Pred, *--_Last2, *--_Last1))

	mov	edx, DWORD PTR __Last2$[ebp]
	sub	edx, 84					; 00000054H
	mov	DWORD PTR __Last2$[ebp], edx
	mov	eax, DWORD PTR __Last1$[ebp]
	sub	eax, 84					; 00000054H
	mov	DWORD PTR __Last1$[ebp], eax
	mov	ecx, DWORD PTR __Last1$[ebp]
	mov	DWORD PTR $T265527[ebp], ecx
	mov	edx, DWORD PTR __Last2$[ebp]
	mov	eax, DWORD PTR $T265527[ebp]
	mov	ecx, DWORD PTR [edx+80]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+80]
	setl	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN2@Merge_back

; 2846 : 			*--_Dest = *_Last1, ++_Last2;

	mov	ecx, DWORD PTR __Last1$[ebp]
	mov	DWORD PTR $T265539[ebp], ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	sub	edx, 84					; 00000054H
	mov	DWORD PTR __Dest$[ebp], edx
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T265559[ebp], eax
	mov	ecx, DWORD PTR $T265539[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T265559[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	edx, DWORD PTR $T265559[ebp]
	mov	eax, DWORD PTR $T265539[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR [edx+80], ecx
	mov	edx, DWORD PTR __Last2$[ebp]
	add	edx, 84					; 00000054H
	mov	DWORD PTR __Last2$[ebp], edx

; 2847 : 		else

	jmp	SHORT $LN5@Merge_back
$LN2@Merge_back:

; 2848 : 			*--_Dest = *_Last2, ++_Last1;

	mov	eax, DWORD PTR __Dest$[ebp]
	sub	eax, 84					; 00000054H
	mov	DWORD PTR __Dest$[ebp], eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T265579[ebp], ecx
	mov	edx, DWORD PTR __Last2$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T265579[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR $T265579[ebp]
	mov	ecx, DWORD PTR __Last2$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+80], edx
	mov	eax, DWORD PTR __Last1$[ebp]
	add	eax, 84					; 00000054H
	mov	DWORD PTR __Last1$[ebp], eax
$LN5@Merge_back:
	jmp	$LN11@Merge_back
$LN9@Merge_back:

; 2849 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Merge_backward@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@V12@UOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0PAUOpinion@@10UOpinionEval@@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Merge_backward<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Lower_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@HUOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@PAH@Z
_TEXT	SEGMENT
$T265667 = -36						; size = 4
$T265625 = -28						; size = 4
$T265612 = -24						; size = 4
$T265611 = -20						; size = 4
__Count2$239984 = -12					; size = 4
__Mid$239985 = -8					; size = 4
__Count$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 1
___formal$ = 28						; size = 4
??$_Lower_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@HUOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@PAH@Z PROC ; std::_Lower_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,int,OpinionEval>, COMDAT

; 2288 : 	{	// find first element not before _Val, using _Pred

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H

; 2289 : 	_DEBUG_POINTER(_Pred);
; 2290 : 	_DEBUG_ORDER_SINGLE_PRED(_First, _Last, _Pred, true);
; 2291 : 	_Diff _Count = 0;

	mov	DWORD PTR __Count$[ebp], 0

; 2292 : 	_Distance(_First, _Last, _Count);

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T265625[ebp], eax
	mov	ecx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T265612[ebp], ecx
	mov	edx, DWORD PTR $T265625[ebp]
	mov	DWORD PTR $T265611[ebp], edx
	mov	eax, DWORD PTR $T265612[ebp]
	sub	eax, DWORD PTR $T265611[ebp]
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Count$[ebp], eax
$LN4@Lower_boun:

; 2293 : 	for (; 0 < _Count; )

	cmp	DWORD PTR __Count$[ebp], 0
	jle	SHORT $LN3@Lower_boun

; 2294 : 		{	// divide and conquer, find half that contains answer
; 2295 : 		_Diff _Count2 = _Count / 2;

	mov	eax, DWORD PTR __Count$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Count2$239984[ebp], eax

; 2296 : 		_FwdIt _Mid = _First;

	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Mid$239985[ebp], edx

; 2297 : 		std::advance(_Mid, _Count2);

	mov	eax, DWORD PTR __Count2$239984[ebp]
	imul	eax, 84					; 00000054H
	add	eax, DWORD PTR __Mid$239985[ebp]
	mov	DWORD PTR __Mid$239985[ebp], eax

; 2298 : 		_DEBUG_ORDER_SINGLE_PRED(_Mid, _Last, _Pred, false);
; 2299 : 
; 2300 : 		if (_DEBUG_LT_PRED(_Pred, *_Mid, _Val))

	mov	ecx, DWORD PTR __Mid$239985[ebp]
	mov	DWORD PTR $T265667[ebp], ecx
	mov	edx, DWORD PTR $T265667[ebp]
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [edx+80]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+80]
	setl	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN2@Lower_boun

; 2301 : 			_First = ++_Mid, _Count -= _Count2 + 1;

	mov	ecx, DWORD PTR __Mid$239985[ebp]
	add	ecx, 84					; 00000054H
	mov	DWORD PTR __Mid$239985[ebp], ecx
	mov	edx, DWORD PTR __Mid$239985[ebp]
	mov	DWORD PTR __First$[ebp], edx
	mov	eax, DWORD PTR __Count2$239984[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, eax
	mov	DWORD PTR __Count$[ebp], ecx

; 2302 : 		else

	jmp	SHORT $LN1@Lower_boun
$LN2@Lower_boun:

; 2303 : 			_Count = _Count2;

	mov	edx, DWORD PTR __Count2$239984[ebp]
	mov	DWORD PTR __Count$[ebp], edx
$LN1@Lower_boun:

; 2304 : 		}

	jmp	SHORT $LN4@Lower_boun
$LN3@Lower_boun:

; 2305 : 	return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2306 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Lower_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@HUOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@PAH@Z ENDP ; std::_Lower_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,int,OpinionEval>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??4CvString@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CvString@@QAEAAV0@ABV0@@Z PROC			; CvString::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??4CvString@@QAEAAV0@ABV0@@Z ENDP			; CvString::operator=
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Upper_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@HUOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@PAH@Z
_TEXT	SEGMENT
$T265760 = -36						; size = 4
$T265718 = -28						; size = 4
$T265705 = -24						; size = 4
$T265704 = -20						; size = 4
__Count2$239994 = -12					; size = 4
__Mid$239995 = -8					; size = 4
__Count$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 1
___formal$ = 28						; size = 4
??$_Upper_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@HUOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@PAH@Z PROC ; std::_Upper_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,int,OpinionEval>, COMDAT

; 2359 : 	{	// find first element that _Val is before, using _Pred

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H

; 2360 : 	_DEBUG_POINTER(_Pred);
; 2361 : 	_DEBUG_ORDER_SINGLE_PRED(_First, _Last, _Pred, true);
; 2362 : 	_Diff _Count = 0;

	mov	DWORD PTR __Count$[ebp], 0

; 2363 : 	_Distance(_First, _Last, _Count);

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T265718[ebp], eax
	mov	ecx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T265705[ebp], ecx
	mov	edx, DWORD PTR $T265718[ebp]
	mov	DWORD PTR $T265704[ebp], edx
	mov	eax, DWORD PTR $T265705[ebp]
	sub	eax, DWORD PTR $T265704[ebp]
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Count$[ebp], eax
$LN4@Upper_boun:

; 2364 : 	for (; 0 < _Count; )

	cmp	DWORD PTR __Count$[ebp], 0
	jle	SHORT $LN3@Upper_boun

; 2365 : 		{	// divide and conquer, find half that contains answer
; 2366 : 		_Diff _Count2 = _Count / 2;

	mov	eax, DWORD PTR __Count$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Count2$239994[ebp], eax

; 2367 : 		_FwdIt _Mid = _First;

	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Mid$239995[ebp], edx

; 2368 : 		std::advance(_Mid, _Count2);

	mov	eax, DWORD PTR __Count2$239994[ebp]
	imul	eax, 84					; 00000054H
	add	eax, DWORD PTR __Mid$239995[ebp]
	mov	DWORD PTR __Mid$239995[ebp], eax

; 2369 : 		_DEBUG_ORDER_SINGLE_PRED(_Mid, _Last, _Pred, false);
; 2370 : 
; 2371 : 		if (!_DEBUG_LT_PRED(_Pred, _Val, *_Mid))

	mov	ecx, DWORD PTR __Mid$239995[ebp]
	mov	DWORD PTR $T265760[ebp], ecx
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR $T265760[ebp]
	mov	ecx, DWORD PTR [edx+80]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+80]
	setl	dl
	movzx	eax, dl
	test	eax, eax
	jne	SHORT $LN2@Upper_boun

; 2372 : 			_First = ++_Mid, _Count -= _Count2 + 1;

	mov	ecx, DWORD PTR __Mid$239995[ebp]
	add	ecx, 84					; 00000054H
	mov	DWORD PTR __Mid$239995[ebp], ecx
	mov	edx, DWORD PTR __Mid$239995[ebp]
	mov	DWORD PTR __First$[ebp], edx
	mov	eax, DWORD PTR __Count2$239994[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, eax
	mov	DWORD PTR __Count$[ebp], ecx

; 2373 : 		else

	jmp	SHORT $LN1@Upper_boun
$LN2@Upper_boun:

; 2374 : 			_Count = _Count2;

	mov	edx, DWORD PTR __Count2$239994[ebp]
	mov	DWORD PTR __Count$[ebp], edx
$LN1@Upper_boun:

; 2375 : 		}

	jmp	SHORT $LN4@Upper_boun
$LN3@Upper_boun:

; 2376 : 	return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2377 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Upper_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@HUOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@PAH@Z ENDP ; std::_Upper_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,int,OpinionEval>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@00@Z
_TEXT	SEGMENT
$T265862 = -30						; size = 1
$T265861 = -29						; size = 1
$T265860 = -28						; size = 4
$T265859 = -24						; size = 4
$T265858 = -20						; size = 4
$T265830 = -16						; size = 4
$T265818 = -12						; size = 4
__Cat$265780 = -4					; size = 1
$T265776 = -3						; size = 1
$T265775 = -2						; size = 1
$T265774 = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Dest$ = 20						; size = 4
??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@00@Z PROC ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >, COMDAT

; 3604 : 	{	// copy [_First, _Last) to [_Dest, ...)

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	xor	eax, eax
	mov	BYTE PTR $T265774[ebp], al
	mov	cl, BYTE PTR __Cat$265780[ebp]
	mov	BYTE PTR $T265775[ebp], cl
	mov	dl, BYTE PTR $T265774[ebp]
	mov	BYTE PTR $T265862[ebp], dl
	mov	al, BYTE PTR $T265776[ebp]
	mov	BYTE PTR $T265861[ebp], al
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T265860[ebp], ecx
	mov	edx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T265859[ebp], edx
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T265858[ebp], eax
	jmp	SHORT $LN20@unchecked_@2
$LN8@unchecked_@2:
	mov	ecx, DWORD PTR $T265860[ebp]
	add	ecx, 84					; 00000054H
	mov	DWORD PTR $T265860[ebp], ecx
	mov	edx, DWORD PTR $T265858[ebp]
	add	edx, 84					; 00000054H
	mov	DWORD PTR $T265858[ebp], edx
$LN20@unchecked_@2:
	mov	eax, DWORD PTR $T265858[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T265859[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN7@unchecked_@2
	mov	ecx, DWORD PTR $T265858[ebp]
	mov	DWORD PTR $T265818[ebp], ecx
	mov	edx, DWORD PTR $T265860[ebp]
	mov	DWORD PTR $T265830[ebp], edx
	mov	eax, DWORD PTR $T265818[ebp]
	push	eax
	mov	ecx, DWORD PTR $T265830[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	ecx, DWORD PTR $T265830[ebp]
	mov	edx, DWORD PTR $T265818[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	DWORD PTR [ecx+80], eax
	jmp	SHORT $LN8@unchecked_@2
$LN7@unchecked_@2:
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR $T265860[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 3607 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@00@Z ENDP ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
_TEXT	ENDS
;	COMDAT ??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z
_TEXT	SEGMENT
$T265908 = -60						; size = 8
$T265879 = -20						; size = 4
$T265873 = -12						; size = 4
$T265872 = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z PROC ; std::_Pop_heap_0<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement>, COMDAT

; 2087 : 	{	// pop *_First to *(_Last - 1) and reheap, using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH

; 2088 : 	_Pop_heap(_First, _Last - 1, _Last - 1,
; 2089 : 		_Ty(*(_Last - 1)), _Dist_type(_First));

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, 8
	mov	DWORD PTR $T265873[ebp], eax
	lea	ecx, DWORD PTR $T265908[ebp]
	mov	DWORD PTR $T265872[ebp], ecx
	mov	edx, DWORD PTR $T265872[ebp]
	mov	eax, DWORD PTR $T265873[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T265872[ebp]
	mov	eax, DWORD PTR $T265873[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR [edx-8], eax
	mov	DWORD PTR [edx-4], ecx
	sub	esp, 8
	mov	DWORD PTR $T265879[ebp], esp
	mov	eax, DWORD PTR $T265879[ebp]
	mov	ecx, DWORD PTR $T265908[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T265879[ebp]
	mov	eax, DWORD PTR $T265908[ebp+4]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR __Last$[ebp]
	sub	ecx, 8
	sub	ecx, DWORD PTR __First$[ebp]
	sar	ecx, 3
	push	ecx
	push	0
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
	add	esp, 20					; 00000014H

; 2090 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ENDP ; std::_Pop_heap_0<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABUOpinion@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABUOpinion@@@Z$0
__ehfuncinfo$??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABUOpinion@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABUOpinion@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABUOpinion@@@Z
_TEXT	SEGMENT
tv136 = -40						; size = 4
_this$ = -36						; size = 4
$T265932 = -32						; size = 4
$T265931 = -28						; size = 4
__Vptr$265929 = -24					; size = 4
$T265914 = -20						; size = 4
__Ptr$240189 = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Val$ = 8						; size = 4
??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABUOpinion@@@Z PROC ; std::_Temp_iterator<Opinion>::operator=, COMDAT
; _this$ = ecx

; 562  : 		{	// assign or construct value into active buffer, and increment

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABUOpinion@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 563  : 		if (_Pbuf->_Current < _Pbuf->_Hiwater)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR [ecx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN2@operator@2

; 564  : 			*_Pbuf->_Current++ = _Val;	// below high water mark, assign

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T265914[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	ecx, DWORD PTR [edx+4]
	add	ecx, 84					; 00000054H
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T265914[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR $T265914[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+80], edx

; 565  : 		else

	jmp	$LN1@operator@2
$LN2@operator@2:

; 566  : 			{	// above high water mark, construct
; 567  : 			_SCL_SECURE_VALIDATE((_Pbuf->_Current - _Pbuf->_Begin) < _Pbuf->_Size);
; 568  : 			_Pty _Ptr = &*_Pbuf->_Current;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Ptr$240189[ebp], edx

; 569  : 			_Construct(_Ptr, _Val);

	mov	eax, DWORD PTR __Ptr$240189[ebp]
	mov	DWORD PTR __Vptr$265929[ebp], eax
	mov	ecx, DWORD PTR __Vptr$265929[ebp]
	mov	DWORD PTR $T265932[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T265932[ebp], 0
	je	SHORT $LN9@operator@2
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T265932[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T265932[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+80], edx
	mov	eax, DWORD PTR $T265932[ebp]
	mov	DWORD PTR tv136[ebp], eax
	jmp	SHORT $LN10@operator@2
$LN9@operator@2:
	mov	DWORD PTR tv136[ebp], 0
$LN10@operator@2:
	mov	ecx, DWORD PTR tv136[ebp]
	mov	DWORD PTR $T265931[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 570  : 			_Pbuf->_Hiwater = ++_Pbuf->_Current;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 84					; 00000054H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+8], edx
$LN1@operator@2:

; 571  : 			}
; 572  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 573  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABUOpinion@@@Z$0:
	mov	eax, DWORD PTR __Vptr$265929[ebp]
	push	eax
	mov	ecx, DWORD PTR $T265932[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABUOpinion@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABUOpinion@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABUOpinion@@@Z ENDP ; std::_Temp_iterator<Opinion>::operator=
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Copy_backward_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T265991 = -8						; size = 4
$T265971 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Dest$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
___formal$ = 32						; size = 1
??$_Copy_backward_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>, COMDAT

; 2673 : 	{	// copy [_First, _Last) backwards to [..., _Dest), arbitrary iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2674 : 	_DEBUG_RANGE(_First, _Last);
; 2675 : 	while (_First != _Last)

$LN5@Copy_backw:
	mov	eax, DWORD PTR __First$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR __Last$[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN1@Copy_backw

; 2676 : 		*--_Dest = *--_Last;

	mov	ecx, DWORD PTR __Last$[ebp]
	sub	ecx, 84					; 00000054H
	mov	DWORD PTR __Last$[ebp], ecx
	mov	edx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T265971[ebp], edx
	mov	eax, DWORD PTR __Dest$[ebp]
	sub	eax, 84					; 00000054H
	mov	DWORD PTR __Dest$[ebp], eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T265991[ebp], ecx
	mov	edx, DWORD PTR $T265971[ebp]
	push	edx
	mov	ecx, DWORD PTR $T265991[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR $T265991[ebp]
	mov	ecx, DWORD PTR $T265971[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+80], edx
	jmp	SHORT $LN5@Copy_backw
$LN1@Copy_backw:

; 2677 : 	return (_Dest);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2678 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_backward_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,OpinionEval,std::forward_iterator_tag>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	SEGMENT
__unwindtable$??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z$0
__ehfuncinfo$??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
xdata$x	ENDS
;	COMDAT ??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z
_TEXT	SEGMENT
tv135 = -48						; size = 4
tv134 = -44						; size = 4
$T266014 = -32						; size = 4
$T266000 = -24						; size = 4
$T265996 = -20						; size = 4
$T265995 = -14						; size = 1
$T265994 = -13						; size = 1
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First1$ = 12						; size = 4
__Last1$ = 16						; size = 4
__First2$ = 20						; size = 4
__Last2$ = 24						; size = 4
__Dest$ = 28						; size = 20
__Pred$ = 48						; size = 1
??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z PROC ; stdext::unchecked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,OpinionEval>, COMDAT

; 5157 : 	{	//  copy merging ranges, both using _Pred

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T266000[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 5158 : 		return _STD _Merge(_CHECKED_BASE(_First1), _CHECKED_BASE(_Last1), _CHECKED_BASE(_First2), _CHECKED_BASE(_Last2), _Dest, _Pred,
; 5159 : 			_STD _Iter_random(_First1, _First2,_Dest), _STD _Range_checked_iterator_tag());

	xor	eax, eax
	mov	BYTE PTR $T265994[ebp], al
	movzx	ecx, BYTE PTR $T265994[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T265995[ebp]
	push	edx
	movzx	eax, BYTE PTR __Pred$[ebp]
	push	eax
	sub	esp, 20					; 00000014H
	mov	ecx, esp
	mov	DWORD PTR $T265996[ebp], esp
	mov	DWORD PTR $T266014[ebp], ecx
	mov	edx, DWORD PTR $T266014[ebp]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR $T266014[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR $T266014[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR $T266014[ebp]
	mov	DWORD PTR [edx+12], 0
	mov	eax, DWORD PTR $T266014[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp+16]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR $T266014[ebp]
	mov	DWORD PTR tv134[ebp], edx
	mov	eax, DWORD PTR __Last2$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last1$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	call	??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,OpinionEval,std::forward_iterator_tag>
	add	esp, 52					; 00000034H
	mov	DWORD PTR tv135[ebp], eax
	mov	edx, DWORD PTR $T266000[ebp]
	or	edx, 1
	mov	DWORD PTR $T266000[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Dest$[ebp]
	call	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 5160 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z$0:
	lea	ecx, DWORD PTR __Dest$[ebp]
	jmp	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
__unwindfunclet$??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z$2:
	mov	eax, DWORD PTR $T266000[ebp]
	and	eax, 1
	je	$LN6@unchecked_@3
	and	DWORD PTR $T266000[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
$LN6@unchecked_@3:
	ret	0
__ehhandler$??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z ENDP ; stdext::unchecked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,OpinionEval>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvplot.h
;	COMDAT ?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T266049 = -4						; size = 4
?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ PROC		; CvPlot::getPlotCity, COMDAT
; _this$ = ecx

; 532  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 533  : 		if((m_plotCity.eOwner >= 0) && m_plotCity.eOwner < MAX_PLAYERS)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+104], 0
	jl	SHORT $LN1@getPlotCit
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+104], 64			; 00000040H
	jge	SHORT $LN1@getPlotCit

; 534  : 			return (GET_PLAYER((PlayerTypes)m_plotCity.eOwner).getCity(m_plotCity.iID));

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+104]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T266049[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	ecx, DWORD PTR $T266049[ebp]
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	jmp	SHORT $LN2@getPlotCit
$LN1@getPlotCit:

; 535  : 
; 536  : 		return NULL;

	xor	eax, eax
$LN2@getPlotCit:

; 537  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ ENDP		; CvPlot::getPlotCity
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T266096 = -8						; size = 4
$T266084 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Dest$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
___formal$ = 32						; size = 1
??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>, COMDAT

; 2469 : 	{	// copy [_First, _Last) to [_Dest, ...), arbitrary iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	jmp	SHORT $LN14@Copy_opt@2
$LN2@Copy_opt@2:
	mov	eax, DWORD PTR __Dest$[ebp]
	add	eax, 84					; 00000054H
	mov	DWORD PTR __Dest$[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	add	ecx, 84					; 00000054H
	mov	DWORD PTR __First$[ebp], ecx
$LN14@Copy_opt@2:
	mov	edx, DWORD PTR __First$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR __Last$[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN1@Copy_opt@2

; 2472 : 		*_Dest = *_First;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T266084[ebp], eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T266096[ebp], ecx
	mov	edx, DWORD PTR $T266084[ebp]
	push	edx
	mov	ecx, DWORD PTR $T266096[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR $T266096[ebp]
	mov	ecx, DWORD PTR $T266084[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+80], edx
	jmp	SHORT $LN2@Copy_opt@2
$LN1@Copy_opt@2:

; 2473 : 	return (_Dest);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2474 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Copy_opt@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T266118 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Dest$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
___formal$ = 32						; size = 1
??$_Copy_opt@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>, COMDAT

; 2469 : 	{	// copy [_First, _Last) to [_Dest, ...), arbitrary iterators

	push	ebp
	mov	ebp, esp
	push	ecx

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	jmp	SHORT $LN3@Copy_opt@3
$LN2@Copy_opt@3:
	mov	eax, DWORD PTR __Dest$[ebp]
	add	eax, 84					; 00000054H
	mov	DWORD PTR __Dest$[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	add	ecx, 84					; 00000054H
	mov	DWORD PTR __First$[ebp], ecx
$LN3@Copy_opt@3:
	mov	edx, DWORD PTR __First$[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	je	SHORT $LN1@Copy_opt@3

; 2472 : 		*_Dest = *_First;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T266118[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T266118[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	edx, DWORD PTR $T266118[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR [edx+80], ecx
	jmp	SHORT $LN2@Copy_opt@3
$LN1@Copy_opt@3:

; 2473 : 	return (_Dest);

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2474 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_opt@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	SEGMENT
__unwindtable$??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__ehfuncinfo$??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
xdata$x	ENDS
;	COMDAT ??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
tv197 = -144						; size = 4
tv196 = -140						; size = 4
tv192 = -136						; size = 4
tv191 = -132						; size = 4
$T266307 = -120						; size = 4
$T266275 = -108						; size = 4
$T266271 = -104						; size = 4
$T266222 = -80						; size = 4
$T266179 = -56						; size = 4
$T266167 = -52						; size = 4
$T266158 = -48						; size = 4
$T266129 = -44						; size = 4
$T266123 = -40						; size = 4
$T266122 = -36						; size = 20
$T266121 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First1$ = 12						; size = 4
__Last1$ = 16						; size = 4
__First2$ = 20						; size = 4
__Last2$ = 24						; size = 4
__Dest$ = 28						; size = 20
__Pred$ = 48						; size = 1
___formal$ = 52						; size = 1
___formal$ = 56						; size = 1
??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,OpinionEval,std::forward_iterator_tag>, COMDAT

; 2593 : 	{	//  copy merging ranges, both using _Pred

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 132				; 00000084H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T266129[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 2594 : 	_DEBUG_ORDER_PRED(_First1, _Last1, _Pred);
; 2595 : 	_DEBUG_ORDER_PRED(_First2, _Last2, _Pred);
; 2596 : 	_DEBUG_POINTER(_Dest);
; 2597 : 	for (; _First1 != _Last1 && _First2 != _Last2; ++_Dest)

$LN16@Merge@2:
	mov	eax, DWORD PTR __First1$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR __Last1$[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN3@Merge@2
	mov	ecx, DWORD PTR __First2$[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR __Last2$[ebp]
	sete	dl
	movzx	eax, dl
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@Merge@2

; 2598 : 		if (_DEBUG_LT_PRED(_Pred, *_First2, *_First1))

	mov	edx, DWORD PTR __First1$[ebp]
	mov	DWORD PTR $T266158[ebp], edx
	mov	eax, DWORD PTR __First2$[ebp]
	mov	DWORD PTR $T266167[ebp], eax
	mov	ecx, DWORD PTR $T266167[ebp]
	mov	edx, DWORD PTR $T266158[ebp]
	mov	eax, DWORD PTR [ecx+80]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx+80]
	setl	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN59@Merge@2

; 2599 : 			*_Dest = *_First2, ++_First2;

	mov	eax, DWORD PTR __First2$[ebp]
	mov	DWORD PTR $T266179[ebp], eax
	mov	ecx, DWORD PTR $T266179[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Dest$[ebp]
	call	??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABUOpinion@@@Z ; std::_Temp_iterator<Opinion>::operator=
	mov	edx, DWORD PTR __First2$[ebp]
	add	edx, 84					; 00000054H
	mov	DWORD PTR __First2$[ebp], edx

; 2600 : 		else

	jmp	SHORT $LN1@Merge@2

; 2601 : 			*_Dest = *_First1, ++_First1;

$LN59@Merge@2:
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR $T266222[ebp], eax
	mov	ecx, DWORD PTR $T266222[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Dest$[ebp]
	call	??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABUOpinion@@@Z ; std::_Temp_iterator<Opinion>::operator=
	mov	edx, DWORD PTR __First1$[ebp]
	add	edx, 84					; 00000054H
	mov	DWORD PTR __First1$[ebp], edx
$LN1@Merge@2:
	jmp	$LN16@Merge@2
$LN3@Merge@2:

; 2602 : 
; 2603 : 	_Dest = _STDEXT unchecked_copy(_First1, _Last1, _Dest);	// copy any tail

	sub	esp, 20					; 00000014H
	mov	eax, esp
	mov	DWORD PTR $T266121[ebp], esp
	mov	DWORD PTR $T266271[ebp], eax
	mov	ecx, DWORD PTR $T266271[ebp]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR $T266271[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR $T266271[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR $T266271[ebp]
	mov	DWORD PTR [ecx+12], 0
	mov	edx, DWORD PTR $T266271[ebp]
	mov	eax, DWORD PTR __Dest$[ebp+16]
	mov	DWORD PTR [edx+16], eax
	mov	ecx, DWORD PTR $T266271[ebp]
	mov	DWORD PTR tv191[ebp], ecx
	mov	edx, DWORD PTR __Last1$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T266122[ebp]
	push	ecx
	call	??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv192[ebp], eax
	mov	edx, DWORD PTR tv192[ebp]
	mov	DWORD PTR $T266275[ebp], edx
	mov	eax, DWORD PTR $T266275[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR __Dest$[ebp+16], ecx
	lea	ecx, DWORD PTR $T266122[ebp]
	call	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>

; 2604 : 	return (_STDEXT unchecked_copy(_First2, _Last2, _Dest));

	sub	esp, 20					; 00000014H
	mov	edx, esp
	mov	DWORD PTR $T266123[ebp], esp
	mov	DWORD PTR $T266307[ebp], edx
	mov	eax, DWORD PTR $T266307[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR $T266307[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR $T266307[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR $T266307[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	ecx, DWORD PTR $T266307[ebp]
	mov	edx, DWORD PTR __Dest$[ebp+16]
	mov	DWORD PTR [ecx+16], edx
	mov	eax, DWORD PTR $T266307[ebp]
	mov	DWORD PTR tv196[ebp], eax
	mov	ecx, DWORD PTR __Last2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	call	??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv197[ebp], eax
	mov	ecx, DWORD PTR $T266129[ebp]
	or	ecx, 1
	mov	DWORD PTR $T266129[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Dest$[ebp]
	call	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2605 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:
	lea	ecx, DWORD PTR __Dest$[ebp]
	jmp	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
__unwindfunclet$??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$4:
	mov	eax, DWORD PTR $T266129[ebp]
	and	eax, 1
	je	$LN13@Merge@2
	and	DWORD PTR $T266129[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
$LN13@Merge@2:
	ret	0
__ehhandler$??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-136]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,OpinionEval,std::forward_iterator_tag>
; Function compile flags: /Odtp
;	COMDAT ??$_Merge@PAUOpinion@@PAU1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@000V10@UOpinionEval@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T266534 = -76						; size = 4
$T266533 = -72						; size = 4
$T266506 = -66						; size = 1
$T266505 = -65						; size = 1
$T266504 = -64						; size = 4
$T266503 = -60						; size = 4
$T266487 = -56						; size = 4
__Cat$266513 = -48					; size = 1
$T266510 = -47						; size = 1
$T266509 = -46						; size = 1
$T266508 = -45						; size = 1
$T266454 = -44						; size = 4
$T266453 = -40						; size = 4
$T266426 = -34						; size = 1
$T266425 = -33						; size = 1
$T266424 = -32						; size = 4
$T266423 = -28						; size = 4
$T266407 = -24						; size = 4
__Cat$266433 = -16					; size = 1
$T266430 = -15						; size = 1
$T266429 = -14						; size = 1
$T266428 = -13						; size = 1
$T266374 = -12						; size = 4
$T266362 = -8						; size = 4
$T266339 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First1$ = 12						; size = 4
__Last1$ = 16						; size = 4
__First2$ = 20						; size = 4
__Last2$ = 24						; size = 4
__Dest$ = 28						; size = 4
__Pred$ = 32						; size = 1
___formal$ = 36						; size = 1
___formal$ = 40						; size = 1
??$_Merge@PAUOpinion@@PAU1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@000V10@UOpinionEval@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Merge<Opinion *,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,std::random_access_iterator_tag>, COMDAT

; 2593 : 	{	//  copy merging ranges, both using _Pred

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH

; 2594 : 	_DEBUG_ORDER_PRED(_First1, _Last1, _Pred);
; 2595 : 	_DEBUG_ORDER_PRED(_First2, _Last2, _Pred);
; 2596 : 	_DEBUG_POINTER(_Dest);
; 2597 : 	for (; _First1 != _Last1 && _First2 != _Last2; ++_Dest)

	jmp	SHORT $LN5@Merge@3
$LN4@Merge@3:
	mov	eax, DWORD PTR __Dest$[ebp]
	add	eax, 84					; 00000054H
	mov	DWORD PTR __Dest$[ebp], eax
$LN5@Merge@3:
	mov	ecx, DWORD PTR __First1$[ebp]
	cmp	ecx, DWORD PTR __Last1$[ebp]
	je	SHORT $LN3@Merge@3
	mov	edx, DWORD PTR __First2$[ebp]
	cmp	edx, DWORD PTR __Last2$[ebp]
	je	SHORT $LN3@Merge@3

; 2598 : 		if (_DEBUG_LT_PRED(_Pred, *_First2, *_First1))

	mov	eax, DWORD PTR __First2$[ebp]
	mov	ecx, DWORD PTR __First1$[ebp]
	mov	edx, DWORD PTR [eax+80]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+80]
	setl	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN20@Merge@3

; 2599 : 			*_Dest = *_First2, ++_First2;

	mov	edx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T266362[ebp], edx
	mov	eax, DWORD PTR __First2$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T266362[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	ecx, DWORD PTR $T266362[ebp]
	mov	edx, DWORD PTR __First2$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	DWORD PTR [ecx+80], eax
	mov	ecx, DWORD PTR __First2$[ebp]
	add	ecx, 84					; 00000054H
	mov	DWORD PTR __First2$[ebp], ecx

; 2600 : 		else

	jmp	SHORT $LN1@Merge@3

; 2601 : 			*_Dest = *_First1, ++_First1;

$LN20@Merge@3:
	mov	edx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T266374[ebp], edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T266374[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	ecx, DWORD PTR $T266374[ebp]
	mov	edx, DWORD PTR __First1$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	DWORD PTR [ecx+80], eax
	mov	ecx, DWORD PTR __First1$[ebp]
	add	ecx, 84					; 00000054H
	mov	DWORD PTR __First1$[ebp], ecx
$LN1@Merge@3:
	jmp	$LN4@Merge@3
$LN3@Merge@3:

; 2602 : 
; 2603 : 	_Dest = _STDEXT unchecked_copy(_First1, _Last1, _Dest);	// copy any tail

	mov	edx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T266454[ebp], edx
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR $T266453[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T266428[ebp], cl
	mov	dl, BYTE PTR __Cat$266433[ebp]
	mov	BYTE PTR $T266429[ebp], dl
	mov	al, BYTE PTR $T266428[ebp]
	mov	BYTE PTR $T266426[ebp], al
	mov	cl, BYTE PTR $T266430[ebp]
	mov	BYTE PTR $T266425[ebp], cl
	mov	edx, DWORD PTR $T266454[ebp]
	mov	DWORD PTR $T266424[ebp], edx
	mov	eax, DWORD PTR $T266453[ebp]
	mov	DWORD PTR $T266423[ebp], eax
	jmp	SHORT $LN34@Merge@3
$LN33@Merge@3:
	mov	ecx, DWORD PTR $T266424[ebp]
	add	ecx, 84					; 00000054H
	mov	DWORD PTR $T266424[ebp], ecx
	mov	edx, DWORD PTR $T266423[ebp]
	add	edx, 84					; 00000054H
	mov	DWORD PTR $T266423[ebp], edx
$LN34@Merge@3:
	mov	eax, DWORD PTR $T266423[ebp]
	cmp	eax, DWORD PTR __Last1$[ebp]
	je	SHORT $LN32@Merge@3
	mov	ecx, DWORD PTR $T266424[ebp]
	mov	DWORD PTR $T266407[ebp], ecx
	mov	edx, DWORD PTR $T266423[ebp]
	push	edx
	mov	ecx, DWORD PTR $T266407[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR $T266407[ebp]
	mov	ecx, DWORD PTR $T266423[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+80], edx
	jmp	SHORT $LN33@Merge@3
$LN32@Merge@3:
	mov	eax, DWORD PTR $T266424[ebp]
	mov	DWORD PTR $T266339[ebp], eax
	mov	ecx, DWORD PTR $T266339[ebp]
	mov	DWORD PTR __Dest$[ebp], ecx

; 2604 : 	return (_STDEXT unchecked_copy(_First2, _Last2, _Dest));

	mov	edx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T266534[ebp], edx
	mov	eax, DWORD PTR __First2$[ebp]
	mov	DWORD PTR $T266533[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T266508[ebp], cl
	mov	dl, BYTE PTR __Cat$266513[ebp]
	mov	BYTE PTR $T266509[ebp], dl
	mov	al, BYTE PTR $T266508[ebp]
	mov	BYTE PTR $T266506[ebp], al
	mov	cl, BYTE PTR $T266510[ebp]
	mov	BYTE PTR $T266505[ebp], cl
	mov	edx, DWORD PTR $T266534[ebp]
	mov	DWORD PTR $T266504[ebp], edx
	mov	eax, DWORD PTR $T266533[ebp]
	mov	DWORD PTR $T266503[ebp], eax
	jmp	SHORT $LN55@Merge@3
$LN54@Merge@3:
	mov	ecx, DWORD PTR $T266504[ebp]
	add	ecx, 84					; 00000054H
	mov	DWORD PTR $T266504[ebp], ecx
	mov	edx, DWORD PTR $T266503[ebp]
	add	edx, 84					; 00000054H
	mov	DWORD PTR $T266503[ebp], edx
$LN55@Merge@3:
	mov	eax, DWORD PTR $T266503[ebp]
	cmp	eax, DWORD PTR __Last2$[ebp]
	je	SHORT $LN53@Merge@3
	mov	ecx, DWORD PTR $T266504[ebp]
	mov	DWORD PTR $T266487[ebp], ecx
	mov	edx, DWORD PTR $T266503[ebp]
	push	edx
	mov	ecx, DWORD PTR $T266487[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR $T266487[ebp]
	mov	ecx, DWORD PTR $T266503[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+80], edx
	jmp	SHORT $LN54@Merge@3
$LN53@Merge@3:
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR $T266504[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2605 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Merge@PAUOpinion@@PAU1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@000V10@UOpinionEval@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Merge<Opinion *,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,std::random_access_iterator_tag>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
_TEXT	ENDS
;	COMDAT ?coordRange@@YAHHH_N@Z
_TEXT	SEGMENT
_iCoord$ = 8						; size = 4
_iRange$ = 12						; size = 4
_bWrap$ = 16						; size = 1
?coordRange@@YAHHH_N@Z PROC				; coordRange, COMDAT

; 87   : {

	push	ebp
	mov	ebp, esp

; 88   : 	if(bWrap)

	movzx	eax, BYTE PTR _bWrap$[ebp]
	test	eax, eax
	je	SHORT $LN4@coordRange

; 89   : 	{
; 90   : 		if(iCoord < 0)

	cmp	DWORD PTR _iCoord$[ebp], 0
	jge	SHORT $LN3@coordRange

; 91   : 		{
; 92   : 			return (iRange + (iCoord % iRange));

	mov	eax, DWORD PTR _iCoord$[ebp]
	cdq
	idiv	DWORD PTR _iRange$[ebp]
	add	edx, DWORD PTR _iRange$[ebp]
	mov	eax, edx
	jmp	SHORT $LN5@coordRange
	jmp	SHORT $LN4@coordRange
$LN3@coordRange:

; 93   : 		}
; 94   : 		else if(iCoord >= iRange)

	mov	ecx, DWORD PTR _iCoord$[ebp]
	cmp	ecx, DWORD PTR _iRange$[ebp]
	jl	SHORT $LN4@coordRange

; 95   : 		{
; 96   : 			return (iCoord % iRange);

	mov	eax, DWORD PTR _iCoord$[ebp]
	cdq
	idiv	DWORD PTR _iRange$[ebp]
	mov	eax, edx
	jmp	SHORT $LN5@coordRange
$LN4@coordRange:

; 97   : 		}
; 98   : 	}
; 99   : 
; 100  : 	return iCoord;

	mov	eax, DWORD PTR _iCoord$[ebp]
$LN5@coordRange:

; 101  : }

	pop	ebp
	ret	0
?coordRange@@YAHHH_N@Z ENDP				; coordRange
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?isPlot@CvMap@@QBEHHH@Z
_TEXT	SEGMENT
tv72 = -16						; size = 4
_this$ = -12						; size = 4
$T266548 = -8						; size = 4
$T266544 = -4						; size = 4
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?isPlot@CvMap@@QBEHHH@Z PROC				; CvMap::isPlot, COMDAT
; _this$ = ecx

; 156  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 157  : #ifdef AUI_WARNING_FIXES
; 158  : 		return ((iX >= 0) && (uint(iX) < getGridWidth()) && (iY >= 0) && (uint(iY) < getGridHeight()));
; 159  : #else
; 160  : 		return ((iX >= 0) && (iX < getGridWidth()) && (iY >= 0) && (iY < getGridHeight()));

	cmp	DWORD PTR _iX$[ebp], 0
	jl	SHORT $LN3@isPlot
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T266544[ebp], ecx
	mov	edx, DWORD PTR _iX$[ebp]
	cmp	edx, DWORD PTR $T266544[ebp]
	jge	SHORT $LN3@isPlot
	cmp	DWORD PTR _iY$[ebp], 0
	jl	SHORT $LN3@isPlot
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T266548[ebp], ecx
	mov	edx, DWORD PTR _iY$[ebp]
	cmp	edx, DWORD PTR $T266548[ebp]
	jge	SHORT $LN3@isPlot
	mov	DWORD PTR tv72[ebp], 1
	jmp	SHORT $LN4@isPlot
$LN3@isPlot:
	mov	DWORD PTR tv72[ebp], 0
$LN4@isPlot:
	mov	eax, DWORD PTR tv72[ebp]

; 161  : #endif
; 162  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?isPlot@CvMap@@QBEHHH@Z ENDP				; CvMap::isPlot
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	SEGMENT
__unwindtable$??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z$0
__ehfuncinfo$??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
xdata$x	ENDS
;	COMDAT ??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z
_TEXT	SEGMENT
tv197 = -200						; size = 4
tv152 = -196						; size = 4
$T266739 = -192						; size = 4
__Tmp$266722 = -188					; size = 4
$T266711 = -184						; size = 4
__Tmp$266697 = -180					; size = 4
$T266678 = -176						; size = 4
$T266666 = -172						; size = 4
__Tmp$266644 = -168					; size = 4
__Tmp$266625 = -164					; size = 4
$T266610 = -160						; size = 4
__Tmp$266596 = -156					; size = 4
$T266558 = -152						; size = 4
$T266557 = -148						; size = 4
$T266556 = -144						; size = 4
$T266553 = -140						; size = 4
$T266552 = -136						; size = 4
$T266551 = -132						; size = 4
__Hole$240419 = -128					; size = 4
__Holeval$240422 = -124					; size = 84
__Next1$240423 = -36					; size = 4
__Next$240421 = -32					; size = 4
__Tmp$240414 = -28					; size = 4
__Factor$240410 = -24					; size = 4
__Shift$ = -20						; size = 4
__Count$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z PROC ; std::_Rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion>, COMDAT

; 1679 : 	{	// rotate [_First, _Last), random-access iterators

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 188				; 000000bcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1680 : 	_DEBUG_RANGE(_First, _Mid);
; 1681 : 	_DEBUG_RANGE(_Mid, _Last);
; 1682 : 	_Diff _Shift = _Mid - _First;

	mov	eax, DWORD PTR __Mid$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	mov	DWORD PTR __Shift$[ebp], eax

; 1683 : 	_Diff _Count = _Last - _First;

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	mov	DWORD PTR __Count$[ebp], eax

; 1684 : 
; 1685 : 	for (_Diff _Factor = _Shift; _Factor != 0; )

	mov	edx, DWORD PTR __Shift$[ebp]
	mov	DWORD PTR __Factor$240410[ebp], edx
$LN8@Rotate:
	cmp	DWORD PTR __Factor$240410[ebp], 0
	je	SHORT $LN24@Rotate

; 1686 : 		{	// find subcycle count as GCD of shift count and length
; 1687 : 		_Diff _Tmp = _Count % _Factor;

	mov	eax, DWORD PTR __Count$[ebp]
	cdq
	idiv	DWORD PTR __Factor$240410[ebp]
	mov	DWORD PTR __Tmp$240414[ebp], edx

; 1688 : 		_Count = _Factor, _Factor = _Tmp;

	mov	eax, DWORD PTR __Factor$240410[ebp]
	mov	DWORD PTR __Count$[ebp], eax
	mov	ecx, DWORD PTR __Tmp$240414[ebp]
	mov	DWORD PTR __Factor$240410[ebp], ecx

; 1689 : 		}

	jmp	SHORT $LN8@Rotate

; 1690 : 
; 1691 : 	if (_Count < _Last - _First)

$LN24@Rotate:
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	cmp	DWORD PTR __Count$[ebp], eax
	jge	$LN9@Rotate

; 1692 : 		for (; 0 < _Count; --_Count)

	jmp	SHORT $LN5@Rotate
$LN4@Rotate:
	mov	edx, DWORD PTR __Count$[ebp]
	sub	edx, 1
	mov	DWORD PTR __Count$[ebp], edx
$LN5@Rotate:
	cmp	DWORD PTR __Count$[ebp], 0
	jle	$LN9@Rotate

; 1693 : 			{	// rotate each subcycle
; 1694 : 			_RanIt _Hole = _First + _Count;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Tmp$266596[ebp], eax
	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 84					; 00000054H
	add	ecx, DWORD PTR __Tmp$266596[ebp]
	mov	DWORD PTR __Tmp$266596[ebp], ecx
	mov	edx, DWORD PTR __Tmp$266596[ebp]
	mov	DWORD PTR __Hole$240419[ebp], edx

; 1695 : 			_RanIt _Next = _Hole;

	mov	eax, DWORD PTR __Hole$240419[ebp]
	mov	DWORD PTR __Next$240421[ebp], eax

; 1696 : 			_Ty _Holeval = *_Hole;

	mov	ecx, DWORD PTR __Hole$240419[ebp]
	mov	DWORD PTR $T266610[ebp], ecx
	mov	edx, DWORD PTR $T266610[ebp]
	push	edx
	lea	ecx, DWORD PTR __Holeval$240422[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T266610[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR __Holeval$240422[ebp+80], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1697 : 			_RanIt _Next1 = _Next + _Shift == _Last ? _First : _Next + _Shift;

	mov	edx, DWORD PTR __Next$240421[ebp]
	mov	DWORD PTR __Tmp$266625[ebp], edx
	mov	eax, DWORD PTR __Shift$[ebp]
	imul	eax, 84					; 00000054H
	add	eax, DWORD PTR __Tmp$266625[ebp]
	mov	DWORD PTR __Tmp$266625[ebp], eax
	mov	ecx, DWORD PTR __Tmp$266625[ebp]
	mov	DWORD PTR $T266552[ebp], ecx
	mov	edx, DWORD PTR $T266552[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR __Last$[ebp]
	sete	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN11@Rotate
	lea	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR tv152[ebp], edx
	jmp	SHORT $LN12@Rotate
$LN11@Rotate:
	mov	eax, DWORD PTR __Next$240421[ebp]
	mov	DWORD PTR __Tmp$266644[ebp], eax
	mov	ecx, DWORD PTR __Shift$[ebp]
	imul	ecx, 84					; 00000054H
	add	ecx, DWORD PTR __Tmp$266644[ebp]
	mov	DWORD PTR __Tmp$266644[ebp], ecx
	mov	edx, DWORD PTR __Tmp$266644[ebp]
	mov	DWORD PTR $T266553[ebp], edx
	lea	eax, DWORD PTR $T266553[ebp]
	mov	DWORD PTR tv152[ebp], eax
$LN12@Rotate:
	mov	ecx, DWORD PTR tv152[ebp]
	mov	DWORD PTR $T266551[ebp], ecx
	mov	edx, DWORD PTR $T266551[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Next1$240423[ebp], eax

; 1698 : 			while (_Next1 != _Hole)

$LN55@Rotate:
	mov	ecx, DWORD PTR __Next1$240423[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR __Hole$240419[ebp]
	sete	dl
	movzx	eax, dl
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	$LN89@Rotate

; 1699 : 				{	// percolate elements back around subcycle
; 1700 : 				*_Next = *_Next1;

	mov	edx, DWORD PTR __Next1$240423[ebp]
	mov	DWORD PTR $T266666[ebp], edx
	mov	eax, DWORD PTR __Next$240421[ebp]
	mov	DWORD PTR $T266678[ebp], eax
	mov	ecx, DWORD PTR $T266666[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T266678[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	edx, DWORD PTR $T266678[ebp]
	mov	eax, DWORD PTR $T266666[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR [edx+80], ecx

; 1701 : 				_Next = _Next1;

	mov	edx, DWORD PTR __Next1$240423[ebp]
	mov	DWORD PTR __Next$240421[ebp], edx

; 1702 : 				_Next1 = _Shift < _Last - _Next1 ? _Next1 + _Shift
; 1703 : 					: _First + (_Shift - (_Last - _Next1));

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __Next1$240423[ebp]
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	cmp	DWORD PTR __Shift$[ebp], eax
	jge	SHORT $LN81@Rotate
	mov	edx, DWORD PTR __Next1$240423[ebp]
	mov	DWORD PTR __Tmp$266697[ebp], edx
	mov	eax, DWORD PTR __Shift$[ebp]
	imul	eax, 84					; 00000054H
	add	eax, DWORD PTR __Tmp$266697[ebp]
	mov	DWORD PTR __Tmp$266697[ebp], eax
	mov	ecx, DWORD PTR __Tmp$266697[ebp]
	mov	DWORD PTR $T266557[ebp], ecx
	lea	edx, DWORD PTR $T266557[ebp]
	mov	DWORD PTR tv197[ebp], edx
	jmp	SHORT $LN14@Rotate
$LN81@Rotate:
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __Next1$240423[ebp]
	cdq
	mov	ecx, 84					; 00000054H
	idiv	ecx
	mov	DWORD PTR $T266711[ebp], eax
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Tmp$266722[ebp], edx
	mov	eax, DWORD PTR __Shift$[ebp]
	sub	eax, DWORD PTR $T266711[ebp]
	imul	eax, 84					; 00000054H
	add	eax, DWORD PTR __Tmp$266722[ebp]
	mov	DWORD PTR __Tmp$266722[ebp], eax
	mov	ecx, DWORD PTR __Tmp$266722[ebp]
	mov	DWORD PTR $T266558[ebp], ecx
	lea	edx, DWORD PTR $T266558[ebp]
	mov	DWORD PTR tv197[ebp], edx
$LN14@Rotate:
	mov	eax, DWORD PTR tv197[ebp]
	mov	DWORD PTR $T266556[ebp], eax
	mov	ecx, DWORD PTR $T266556[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Next1$240423[ebp], edx

; 1704 : 				}

	jmp	$LN55@Rotate

; 1705 : 			*_Next = _Holeval;

$LN89@Rotate:
	mov	eax, DWORD PTR __Next$240421[ebp]
	mov	DWORD PTR $T266739[ebp], eax
	lea	ecx, DWORD PTR __Holeval$240422[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T266739[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	edx, DWORD PTR $T266739[ebp]
	mov	eax, DWORD PTR __Holeval$240422[ebp+80]
	mov	DWORD PTR [edx+80], eax

; 1706 : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Holeval$240422[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	jmp	$LN4@Rotate
$LN9@Rotate:

; 1707 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z$0:
	lea	ecx, DWORD PTR __Holeval$240422[ebp]
	jmp	??1Opinion@@QAE@XZ
__ehhandler$??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-192]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z ENDP ; std::_Rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion>
; Function compile flags: /Odtp
;	COMDAT ??_9CvPlayerAI@@$BDA@AE
_TEXT	SEGMENT
??_9CvPlayerAI@@$BDA@AE PROC				; CvPlayerAI::`vcall'{48}', COMDAT
	mov	eax, DWORD PTR [ecx]
	jmp	DWORD PTR [eax+48]
??_9CvPlayerAI@@$BDA@AE ENDP				; CvPlayerAI::`vcall'{48}'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_9CvPlayerAI@@$BCE@AE
_TEXT	SEGMENT
??_9CvPlayerAI@@$BCE@AE PROC				; CvPlayerAI::`vcall'{36}', COMDAT
	mov	eax, DWORD PTR [ecx]
	jmp	DWORD PTR [eax+36]
??_9CvPlayerAI@@$BCE@AE ENDP				; CvPlayerAI::`vcall'{36}'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0length_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$1
__ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0length_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC			; std::length_error::length_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0length_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0length_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
; Function compile flags: /Odtp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
END
