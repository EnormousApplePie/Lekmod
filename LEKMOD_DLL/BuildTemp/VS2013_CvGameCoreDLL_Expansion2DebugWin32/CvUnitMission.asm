; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvUnitMission.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
PUBLIC	?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z ; CvUnitMission::StartMission
PUBLIC	?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z ; CvUnitMission::ContinueMission
PUBLIC	?HeadMissionQueueNode@CvUnitMission@@CAPAUMissionData@@AAV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::HeadMissionQueueNode
PUBLIC	?AutoMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z ; CvUnitMission::AutoMission
EXTRN	?doDelayedDeath@CvUnit@@QAE_NXZ:PROC		; CvUnit::doDelayedDeath
EXTRN	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ:PROC ; CvUnit::getDestructionNotification
EXTRN	?GetActivityType@CvUnit@@QBE?AW4ActivityTypes@@XZ:PROC ; CvUnit::GetActivityType
EXTRN	?SetIgnoreDangerWakeup@CvUnit@@QAEX_N@Z:PROC	; CvUnit::SetIgnoreDangerWakeup
EXTRN	?ClearMissionQueue@CvUnit@@QAEXH@Z:PROC		; CvUnit::ClearMissionQueue
EXTRN	?IsPlotUnderImmediateThreat@CvPlayer@@QBE_NAAVCvPlot@@@Z:PROC ; CvPlayer::IsPlotUnderImmediateThreat
EXTRN	?m_aPlayers@CvPlayerAI@@1PAV1@A:DWORD		; CvPlayerAI::m_aPlayers
EXTRN	?IsIgnoringDangerWakeup@CvUnit@@QBE_NXZ:PROC	; CvUnit::IsIgnoringDangerWakeup
EXTRN	?getNumDefenders@CvPlot@@QBEHW4PlayerTypes@@@Z:PROC ; CvPlot::getNumDefenders
EXTRN	?plot@CvUnit@@QBEPAVCvPlot@@XZ:PROC		; CvUnit::plot
EXTRN	?getMISSION_BUILD@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_BUILD
EXTRN	?isDelayedDeath@CvUnit@@QBE_NXZ:PROC		; CvUnit::isDelayedDeath
EXTRN	?IsBusy@CvUnit@@QBE_NXZ:PROC			; CvUnit::IsBusy
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?AutoMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AutoMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$0
__ehfuncinfo$?AutoMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AutoMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvunitmission.cpp
xdata$x	ENDS
;	COMDAT ?AutoMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
tv216 = -96						; size = 4
tv214 = -92						; size = 4
$T219052 = -88						; size = 4
$T219042 = -84						; size = 4
$T219032 = -80						; size = 4
$T219022 = -76						; size = 4
$T219018 = -72						; size = 4
$T219009 = -68						; size = 4
$T219005 = -64						; size = 4
$T218993 = -60						; size = 4
$T218989 = -56						; size = 4
$T218985 = -52						; size = 4
$T218981 = -48						; size = 4
$T218972 = -44						; size = 4
$T218968 = -40						; size = 4
$T218964 = -36						; size = 4
$T218960 = -32						; size = 4
$T218953 = -28						; size = 4
$T218952 = -24						; size = 4
_bEscortedBuilder$217474 = -17				; size = 1
_pkMissionNode$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_hUnit$ = 8						; size = 8
?AutoMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z PROC ; CvUnitMission::AutoMission, COMDAT

; 38   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AutoMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 84					; 00000054H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 39   : 	CvAssert(hUnit->getOwner() != NO_PLAYER);
; 40   : 
; 41   : 	const MissionQueueNode* pkMissionNode = HeadMissionQueueNode(hUnit->m_missionQueue);

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T218960[ebp], eax
	mov	ecx, DWORD PTR $T218960[ebp]
	add	ecx, 2600				; 00000a28H
	push	ecx
	call	?HeadMissionQueueNode@CvUnitMission@@CAPAUMissionData@@AAV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::HeadMissionQueueNode
	add	esp, 4
	mov	DWORD PTR _pkMissionNode$[ebp], eax

; 42   : 	if(pkMissionNode != NULL)

	cmp	DWORD PTR _pkMissionNode$[ebp], 0
	je	$LN8@AutoMissio

; 43   : 	{
; 44   : 		if(!hUnit->IsBusy() && !hUnit->isDelayedDeath())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T218964[ebp], edx
	mov	ecx, DWORD PTR $T218964[ebp]
	call	?IsBusy@CvUnit@@QBE_NXZ			; CvUnit::IsBusy
	movzx	eax, al
	test	eax, eax
	jne	$LN8@AutoMissio
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T218968[ebp], ecx
	mov	ecx, DWORD PTR $T218968[ebp]
	call	?isDelayedDeath@CvUnit@@QBE_NXZ		; CvUnit::isDelayedDeath
	movzx	edx, al
	test	edx, edx
	jne	$LN8@AutoMissio

; 45   : 		{
; 46   : 			// Builders which are being escorted shouldn't wake up every turn... this is annoying!
; 47   : 			bool bEscortedBuilder = false;

	mov	BYTE PTR _bEscortedBuilder$217474[ebp], 0

; 48   : 			if(pkMissionNode->eMissionType == CvTypes::getMISSION_BUILD())

	call	?getMISSION_BUILD@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_BUILD
	mov	ecx, DWORD PTR _pkMissionNode$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN6@AutoMissio

; 49   : 			{
; 50   : 				if(hUnit->plot()->getNumDefenders(hUnit->getOwner()) > 0)

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T218972[ebp], edx
	mov	eax, DWORD PTR $T218972[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR $T218981[ebp], ecx
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T218985[ebp], edx
	mov	eax, DWORD PTR $T218981[ebp]
	push	eax
	mov	ecx, DWORD PTR $T218985[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	ecx, eax
	call	?getNumDefenders@CvPlot@@QBEHW4PlayerTypes@@@Z ; CvPlot::getNumDefenders
	test	eax, eax
	jle	SHORT $LN6@AutoMissio

; 51   : 				{
; 52   : 					bEscortedBuilder = true;

	mov	BYTE PTR _bEscortedBuilder$217474[ebp], 1
$LN6@AutoMissio:

; 53   : 				}
; 54   : 			}
; 55   : 
; 56   : 			if(!bEscortedBuilder && !hUnit->IsIgnoringDangerWakeup() && !hUnit->IsCombatUnit() && GET_PLAYER(hUnit->getOwner()).IsPlotUnderImmediateThreat(*(hUnit->plot())))

	movzx	ecx, BYTE PTR _bEscortedBuilder$217474[ebp]
	test	ecx, ecx
	jne	$LN4@AutoMissio
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T218989[ebp], edx
	mov	ecx, DWORD PTR $T218989[ebp]
	call	?IsIgnoringDangerWakeup@CvUnit@@QBE_NXZ	; CvUnit::IsIgnoringDangerWakeup
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@AutoMissio
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T218993[ebp], ecx
	mov	edx, DWORD PTR $T218993[ebp]
	xor	eax, eax
	cmp	DWORD PTR [edx+1044], 0
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@AutoMissio
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219005[ebp], edx
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219009[ebp], eax
	mov	ecx, DWORD PTR $T219009[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR $T219018[ebp], edx
	mov	eax, DWORD PTR $T219018[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T219022[ebp], eax
	mov	ecx, DWORD PTR $T219005[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	push	eax
	mov	ecx, DWORD PTR $T219022[ebp]
	call	?IsPlotUnderImmediateThreat@CvPlayer@@QBE_NAAVCvPlot@@@Z ; CvPlayer::IsPlotUnderImmediateThreat
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@AutoMissio

; 57   : 			{
; 58   : 				hUnit->ClearMissionQueue();

	push	1
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?ClearMissionQueue@CvUnit@@QAEXH@Z	; CvUnit::ClearMissionQueue

; 59   : 				hUnit->SetIgnoreDangerWakeup(true);

	push	1
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?SetIgnoreDangerWakeup@CvUnit@@QAEX_N@Z	; CvUnit::SetIgnoreDangerWakeup

; 60   : 			}
; 61   : 			else

	jmp	$LN8@AutoMissio
$LN4@AutoMissio:

; 62   : 			{
; 63   : 				if(hUnit->GetActivityType() == ACTIVITY_MISSION)

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219032[ebp], edx
	mov	ecx, DWORD PTR $T219032[ebp]
	call	?GetActivityType@CvUnit@@QBE?AW4ActivityTypes@@XZ ; CvUnit::GetActivityType
	cmp	eax, 6
	jne	SHORT $LN2@AutoMissio

; 64   : 				{
; 65   : 					ContinueMission(hUnit);

	push	-1
	push	0
	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR $T218952[ebp], esp
	mov	DWORD PTR $T219042[ebp], eax
	mov	ecx, DWORD PTR $T219042[ebp]
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T219042[ebp]
	mov	cl, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [eax+4], cl
	mov	edx, DWORD PTR $T219042[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN53@AutoMissio
	mov	eax, DWORD PTR $T219042[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN53@AutoMissio:
	mov	ecx, DWORD PTR $T219042[ebp]
	mov	DWORD PTR tv214[ebp], ecx
	call	?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z ; CvUnitMission::ContinueMission
	add	esp, 16					; 00000010H

; 66   : 				}
; 67   : 				else

	jmp	SHORT $LN8@AutoMissio
$LN2@AutoMissio:

; 68   : 				{
; 69   : 					StartMission(hUnit);

	sub	esp, 8
	mov	edx, esp
	mov	DWORD PTR $T218953[ebp], esp
	mov	DWORD PTR $T219052[ebp], edx
	mov	eax, DWORD PTR $T219052[ebp]
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T219052[ebp]
	mov	al, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [edx+4], al
	mov	ecx, DWORD PTR $T219052[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN58@AutoMissio
	mov	edx, DWORD PTR $T219052[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN58@AutoMissio:
	mov	eax, DWORD PTR $T219052[ebp]
	mov	DWORD PTR tv216[ebp], eax
	call	?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z ; CvUnitMission::StartMission
	add	esp, 8
$LN8@AutoMissio:

; 70   : 				}
; 71   : 			}
; 72   : 		}
; 73   : 	}
; 74   : 
; 75   : 	hUnit.ignoreDestruction(true);

	mov	BYTE PTR _hUnit$[ebp+4], 1

; 76   : 	hUnit->doDelayedDeath();

	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?doDelayedDeath@CvUnit@@QAE_NXZ		; CvUnit::doDelayedDeath

; 77   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN9@AutoMissio
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN9@AutoMissio:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AutoMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$0:
	lea	ecx, DWORD PTR _hUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?AutoMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AutoMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AutoMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z ENDP ; CvUnitMission::AutoMission
PUBLIC	??_C@_0BA@EMOAFIAA@FEATURE_FALLOUT?$AA@		; `string'
PUBLIC	??_C@_0O@CEOMGFD@FEATURE_MARSH?$AA@		; `string'
PUBLIC	??_C@_0P@FPOMJJFM@FEATURE_JUNGLE?$AA@		; `string'
PUBLIC	?InsertAtEndMissionQueue@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@UMissionData@@_N@Z ; CvUnitMission::InsertAtEndMissionQueue
PUBLIC	??_C@_0P@HBLLKHIA@FEATURE_FOREST?$AA@		; `string'
PUBLIC	??_C@_0GJ@FFAHDLIK@?$CK?$CK?$CK?5PROTOCOL?5ERROR?5?$CK?$CK?$CK?5?3?5PushMis@ ; `string'
PUBLIC	?PushMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@W4MissionTypes@@HHH_N2W4MissionAITypes@@PAVCvPlot@@PAVCvUnit@@@Z ; CvUnitMission::PushMission
EXTRN	?PlayActionSound@CvUnit@@QAEXXZ:PROC		; CvUnit::PlayActionSound
EXTRN	?isSound@CvMissionInfo@@QBE_NXZ:PROC		; CvMissionInfo::isSound
EXTRN	?getMissionInfo@CvGlobals@@QAEPAVCvMissionInfo@@W4MissionTypes@@@Z:PROC ; CvGlobals::getMissionInfo
EXTRN	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ:PROC ; CvGame::getActivePlayer
EXTRN	?changeNumResourceUsed@CvPlayer@@QAEXW4ResourceTypes@@H@Z:PROC ; CvPlayer::changeNumResourceUsed
EXTRN	?getResourceQuantityRequirement@CvRouteInfo@@QBEHH@Z:PROC ; CvRouteInfo::getResourceQuantityRequirement
EXTRN	?getRouteInfo@CvGlobals@@QAEPAVCvRouteInfo@@W4RouteTypes@@@Z:PROC ; CvGlobals::getRouteInfo
EXTRN	?GetResourceQuantityRequirement@CvImprovementEntry@@QBEHH@Z:PROC ; CvImprovementEntry::GetResourceQuantityRequirement
EXTRN	?getImprovementInfo@CvGlobals@@QAEPAVCvImprovementEntry@@W4ImprovementTypes@@@Z:PROC ; CvGlobals::getImprovementInfo
EXTRN	?getNumResourceInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumResourceInfos
EXTRN	?getRoute@CvBuildInfo@@QBEHXZ:PROC		; CvBuildInfo::getRoute
EXTRN	?getImprovement@CvBuildInfo@@QBEHXZ:PROC	; CvBuildInfo::getImprovement
EXTRN	?SetMissionAI@CvUnit@@QAEXW4MissionAITypes@@PAVCvPlot@@PAV1@@Z:PROC ; CvUnit::SetMissionAI
EXTRN	?getGameTurn@CvGame@@QAEHXZ:PROC		; CvGame::getGameTurn
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
EXTRN	?getFeatureInfo@CvGlobals@@QAEPAVCvFeatureInfo@@W4FeatureTypes@@@Z:PROC ; CvGlobals::getFeatureInfo
EXTRN	?getFeatureTime@CvBuildInfo@@QBEHH@Z:PROC	; CvBuildInfo::getFeatureTime
EXTRN	?isFeatureRemove@CvBuildInfo@@QBE_NH@Z:PROC	; CvBuildInfo::isFeatureRemove
EXTRN	?getBuildInfo@CvGlobals@@QAEPAVCvBuildInfo@@W4BuildTypes@@@Z:PROC ; CvGlobals::getBuildInfo
EXTRN	?SetAutomateType@CvUnit@@QAEXW4AutomateTypes@@@Z:PROC ; CvUnit::SetAutomateType
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
EXTRN	?dispatchingNetMessage@CvUnit@@SA_NXZ:PROC	; CvUnit::dispatchingNetMessage
EXTRN	?isHuman@CvPreGame@@YA_NW4PlayerTypes@@@Z:PROC	; CvPreGame::isHuman
;	COMDAT ??_C@_0BA@EMOAFIAA@FEATURE_FALLOUT?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
CONST	SEGMENT
??_C@_0BA@EMOAFIAA@FEATURE_FALLOUT?$AA@ DB 'FEATURE_FALLOUT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CEOMGFD@FEATURE_MARSH?$AA@
CONST	SEGMENT
??_C@_0O@CEOMGFD@FEATURE_MARSH?$AA@ DB 'FEATURE_MARSH', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FPOMJJFM@FEATURE_JUNGLE?$AA@
CONST	SEGMENT
??_C@_0P@FPOMJJFM@FEATURE_JUNGLE?$AA@ DB 'FEATURE_JUNGLE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HBLLKHIA@FEATURE_FOREST?$AA@
CONST	SEGMENT
??_C@_0P@HBLLKHIA@FEATURE_FOREST?$AA@ DB 'FEATURE_FOREST', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GJ@FFAHDLIK@?$CK?$CK?$CK?5PROTOCOL?5ERROR?5?$CK?$CK?$CK?5?3?5PushMis@
CONST	SEGMENT
??_C@_0GJ@FFAHDLIK@?$CK?$CK?$CK?5PROTOCOL?5ERROR?5?$CK?$CK?$CK?5?3?5PushMis@ DB '*'
	DB	'** PROTOCOL ERROR *** : PushMission invoked for a human contr'
	DB	'olled player outside of a network message!', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PushMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@W4MissionTypes@@HHH_N2W4MissionAITypes@@PAVCvPlot@@PAVCvUnit@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PushMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@W4MissionTypes@@HHH_N2W4MissionAITypes@@PAVCvPlot@@PAVCvUnit@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?PushMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@W4MissionTypes@@HHH_N2W4MissionAITypes@@PAVCvPlot@@PAVCvUnit@@@Z$1
__ehfuncinfo$?PushMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@W4MissionTypes@@HHH_N2W4MissionAITypes@@PAVCvPlot@@PAVCvUnit@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?PushMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@W4MissionTypes@@HHH_N2W4MissionAITypes@@PAVCvPlot@@PAVCvUnit@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvunitmission.cpp
xdata$x	ENDS
;	COMDAT ?PushMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@W4MissionTypes@@HHH_N2W4MissionAITypes@@PAVCvPlot@@PAVCvUnit@@@Z
_TEXT	SEGMENT
tv501 = -372						; size = 4
tv531 = -368						; size = 4
tv527 = -364						; size = 4
tv331 = -360						; size = 4
tv817 = -356						; size = 4
tv812 = -350						; size = 1
tv805 = -349						; size = 1
tv801 = -348						; size = 4
tv802 = -344						; size = 4
tv523 = -340						; size = 4
tv290 = -336						; size = 4
tv764 = -332						; size = 4
tv759 = -326						; size = 1
tv752 = -325						; size = 1
tv748 = -324						; size = 4
tv749 = -320						; size = 4
tv519 = -316						; size = 4
tv249 = -312						; size = 4
tv711 = -308						; size = 4
tv706 = -302						; size = 1
tv699 = -301						; size = 1
tv695 = -300						; size = 4
tv696 = -296						; size = 4
tv515 = -292						; size = 4
tv208 = -288						; size = 4
tv658 = -284						; size = 4
tv653 = -278						; size = 1
tv646 = -277						; size = 1
tv642 = -276						; size = 4
tv643 = -272						; size = 4
tv83 = -268						; size = 4
$T219318 = -264						; size = 4
$T219311 = -260						; size = 4
$T219307 = -256						; size = 4
$T219303 = -252						; size = 4
$T219294 = -248						; size = 4
$T219290 = -244						; size = 4
$T219277 = -240						; size = 4
$T219270 = -236						; size = 4
$T219261 = -232						; size = 4
$T219257 = -228						; size = 4
$T219244 = -224						; size = 4
$T219237 = -220						; size = 4
$T219224 = -216						; size = 4
$T219217 = -212						; size = 4
$T219204 = -208						; size = 4
$T219197 = -204						; size = 4
$T219184 = -200						; size = 4
$T219174 = -196						; size = 4
_f$219173 = -189					; size = 1
$T219164 = -188						; size = 4
$T219157 = -184						; size = 4
$T219153 = -180						; size = 4
$T219144 = -176						; size = 4
$T219140 = -172						; size = 4
$T219136 = -168						; size = 4
$T219127 = -164						; size = 4
$T219123 = -160						; size = 4
$T219110 = -156						; size = 4
$T219106 = -152						; size = 4
$T219097 = -148						; size = 4
$T219086 = -144						; size = 4
$T219085 = -140						; size = 4
$T219084 = -136						; size = 4
$T219083 = -132						; size = 4
$T219082 = -128						; size = 4
$T219081 = -124						; size = 28
_pMissionInfo$217552 = -96				; size = 4
_pkRouteInfo$217545 = -92				; size = 4
_pkImprovementInfo$217541 = -88				; size = 4
_iResourceLoop$217536 = -84				; size = 4
_removeMission$217513 = -80				; size = 20
_feature$217512 = -60					; size = 4
_eFeature$217510 = -56					; size = 4
_eImprovement$217529 = -52				; size = 4
_eRoute$217530 = -48					; size = 4
_iNumResource$217535 = -44				; size = 4
_pkBuildInfo$217506 = -40				; size = 4
_eBuild$217503 = -36					; size = 4
_mission$ = -32						; size = 20
__$EHRec$ = -12						; size = 12
_hUnit$ = 8						; size = 8
_eMission$ = 16						; size = 4
_iData1$ = 20						; size = 4
_iData2$ = 24						; size = 4
_iFlags$ = 28						; size = 4
_bAppend$ = 32						; size = 1
_bManual$ = 36						; size = 1
_eMissionAI$ = 40					; size = 4
_pMissionAIPlot$ = 44					; size = 4
_pMissionAIUnit$ = 48					; size = 4
?PushMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@W4MissionTypes@@HHH_N2W4MissionAITypes@@PAVCvPlot@@PAVCvUnit@@@Z PROC ; CvUnitMission::PushMission, COMDAT

; 82   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PushMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@W4MissionTypes@@HHH_N2W4MissionAITypes@@PAVCvPlot@@PAVCvUnit@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 360				; 00000168H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 83   : 	if(CvPreGame::isHuman(hUnit->getOwner()))

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219097[ebp], eax
	mov	ecx, DWORD PTR $T219097[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR $T219106[ebp], edx
	mov	eax, DWORD PTR $T219106[ebp]
	push	eax
	call	?isHuman@CvPreGame@@YA_NW4PlayerTypes@@@Z ; CvPreGame::isHuman
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN31@PushMissio

; 84   : 	{
; 85   : 		CvAssertMsg(CvUnit::dispatchingNetMessage(), "Multiplayer Error! CvUnit::PushMission invoked for a human player outside of a network message!");
; 86   : 		if(!CvUnit::dispatchingNetMessage())

	call	?dispatchingNetMessage@CvUnit@@SA_NXZ	; CvUnit::dispatchingNetMessage
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN31@PushMissio

; 87   : 			gDLL->netMessageDebugLog("*** PROTOCOL ERROR *** : PushMission invoked for a human controlled player outside of a network message!");

	push	OFFSET ??_C@_0GJ@FFAHDLIK@?$CK?$CK?$CK?5PROTOCOL?5ERROR?5?$CK?$CK?$CK?5?3?5PushMis@
	lea	ecx, DWORD PTR $T219081[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR $T219110[ebp]
	mov	DWORD PTR tv83[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv83[ebp], ecx
	lea	edx, DWORD PTR $T219081[ebp]
	push	edx
	mov	eax, DWORD PTR tv83[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv83[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T219081[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN31@PushMissio:

; 88   : 	}
; 89   : 
; 90   : 	MissionData mission;

	mov	DWORD PTR _mission$[ebp], -1
	mov	DWORD PTR _mission$[ebp+4], 0
	mov	DWORD PTR _mission$[ebp+8], 0
	mov	DWORD PTR _mission$[ebp+12], 0
	mov	DWORD PTR _mission$[ebp+16], 0

; 91   : 
; 92   : 	CvAssert(hUnit->getOwner() != NO_PLAYER);
; 93   : 
; 94   : 	if(!bAppend)

	movzx	ecx, BYTE PTR _bAppend$[ebp]
	test	ecx, ecx
	jne	SHORT $LN29@PushMissio

; 95   : 	{
; 96   : 		hUnit->ClearMissionQueue();

	push	1
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?ClearMissionQueue@CvUnit@@QAEXH@Z	; CvUnit::ClearMissionQueue
$LN29@PushMissio:

; 97   : 	}
; 98   : 
; 99   : 	if(bManual)

	movzx	edx, BYTE PTR _bManual$[ebp]
	test	edx, edx
	je	SHORT $LN28@PushMissio

; 100  : 	{
; 101  : 		hUnit->SetAutomateType(NO_AUTOMATE);

	push	-1
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?SetAutomateType@CvUnit@@QAEXW4AutomateTypes@@@Z ; CvUnit::SetAutomateType
$LN28@PushMissio:

; 102  : 	}
; 103  : 
; 104  : 	// Update Builder Resource info
; 105  : 	if(eMission == CvTypes::getMISSION_BUILD())

	call	?getMISSION_BUILD@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_BUILD
	cmp	DWORD PTR _eMission$[ebp], eax
	jne	$LN27@PushMissio

; 106  : 	{
; 107  : 		const BuildTypes eBuild = (BuildTypes) iData1;

	mov	eax, DWORD PTR _iData1$[ebp]
	mov	DWORD PTR _eBuild$217503[ebp], eax

; 108  : 		if(eBuild != NO_BUILD)

	cmp	DWORD PTR _eBuild$217503[ebp], -1
	je	$LN27@PushMissio

; 109  : 		{
; 110  : 			CvBuildInfo* pkBuildInfo = GC.getBuildInfo(eBuild);

	mov	ecx, DWORD PTR _eBuild$217503[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildInfo@CvGlobals@@QAEPAVCvBuildInfo@@W4BuildTypes@@@Z ; CvGlobals::getBuildInfo
	mov	DWORD PTR _pkBuildInfo$217506[ebp], eax

; 111  : 			if(pkBuildInfo)

	cmp	DWORD PTR _pkBuildInfo$217506[ebp], 0
	je	$LN27@PushMissio

; 112  : 			{
; 113  : 				if (GET_PLAYER(hUnit->getOwner()).IsPlotUnderImmediateThreat(*(hUnit->plot())))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219123[ebp], edx
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219127[ebp], eax
	mov	ecx, DWORD PTR $T219127[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR $T219136[ebp], edx
	mov	eax, DWORD PTR $T219136[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T219140[ebp], eax
	mov	ecx, DWORD PTR $T219123[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	push	eax
	mov	ecx, DWORD PTR $T219140[ebp]
	call	?IsPlotUnderImmediateThreat@CvPlayer@@QBE_NAAVCvPlot@@@Z ; CvPlayer::IsPlotUnderImmediateThreat
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN24@PushMissio

; 114  : 				{
; 115  : 					if(hUnit->plot()->getNumDefenders(hUnit->getOwner()) <= 0)

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219144[ebp], edx
	mov	eax, DWORD PTR $T219144[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR $T219153[ebp], ecx
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219157[ebp], edx
	mov	eax, DWORD PTR $T219153[ebp]
	push	eax
	mov	ecx, DWORD PTR $T219157[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	ecx, eax
	call	?getNumDefenders@CvPlot@@QBEHW4PlayerTypes@@@Z ; CvPlot::getNumDefenders
	test	eax, eax
	jg	SHORT $LN24@PushMissio

; 116  : 					{
; 117  : 						hUnit->SetIgnoreDangerWakeup(true);

	push	1
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?SetIgnoreDangerWakeup@CvUnit@@QAEX_N@Z	; CvUnit::SetIgnoreDangerWakeup
$LN24@PushMissio:

; 118  : 					}
; 119  : 				}
; 120  : 
; 121  : 				//if (hUnit->isHuman())
; 122  : 				{
; 123  : 					FeatureTypes eFeature = hUnit->plot()->getFeatureType();

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219164[ebp], ecx
	mov	ecx, DWORD PTR $T219164[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	DWORD PTR $T219174[ebp], eax
	mov	edx, DWORD PTR $T219174[ebp]
	mov	al, BYTE PTR [edx+432]
	mov	BYTE PTR _f$219173[ebp], al
	movsx	ecx, BYTE PTR _f$219173[ebp]
	mov	DWORD PTR _eFeature$217510[ebp], ecx

; 124  : 					if(eFeature != NO_FEATURE && pkBuildInfo->isFeatureRemove(eFeature) && pkBuildInfo->getFeatureTime(eFeature) > 0)

	cmp	DWORD PTR _eFeature$217510[ebp], -1
	je	$LN22@PushMissio
	mov	edx, DWORD PTR _eFeature$217510[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkBuildInfo$217506[ebp]
	call	?isFeatureRemove@CvBuildInfo@@QBE_NH@Z	; CvBuildInfo::isFeatureRemove
	movzx	eax, al
	test	eax, eax
	je	$LN22@PushMissio
	mov	ecx, DWORD PTR _eFeature$217510[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkBuildInfo$217506[ebp]
	call	?getFeatureTime@CvBuildInfo@@QBEHH@Z	; CvBuildInfo::getFeatureTime
	test	eax, eax
	jle	$LN22@PushMissio

; 125  : 					{
; 126  : 						CvFeatureInfo* feature = GC.getFeatureInfo(eFeature);

	mov	edx, DWORD PTR _eFeature$217510[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getFeatureInfo@CvGlobals@@QAEPAVCvFeatureInfo@@W4FeatureTypes@@@Z ; CvGlobals::getFeatureInfo
	mov	DWORD PTR _feature$217512[ebp], eax

; 127  : 						MissionData removeMission;

	mov	DWORD PTR _removeMission$217513[ebp], -1
	mov	DWORD PTR _removeMission$217513[ebp+4], 0
	mov	DWORD PTR _removeMission$217513[ebp+8], 0
	mov	DWORD PTR _removeMission$217513[ebp+12], 0
	mov	DWORD PTR _removeMission$217513[ebp+16], 0

; 128  : 						removeMission.eMissionType = eMission;

	mov	eax, DWORD PTR _eMission$[ebp]
	mov	DWORD PTR _removeMission$217513[ebp], eax

; 129  : 						if(iData1 != 15 && strcmp(feature->GetType(), "FEATURE_FOREST") == 0)

	cmp	DWORD PTR _iData1$[ebp], 15		; 0000000fH
	je	$LN21@PushMissio
	mov	DWORD PTR tv643[ebp], OFFSET ??_C@_0P@HBLLKHIA@FEATURE_FOREST?$AA@
	mov	ecx, DWORD PTR _feature$217512[ebp]
	add	ecx, 176				; 000000b0H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR tv642[ebp], eax
$LL167@PushMissio:
	mov	ecx, DWORD PTR tv642[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv646[ebp], dl
	mov	eax, DWORD PTR tv643[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN168@PushMissio
	cmp	BYTE PTR tv646[ebp], 0
	je	SHORT $LN169@PushMissio
	mov	ecx, DWORD PTR tv642[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv653[ebp], dl
	mov	eax, DWORD PTR tv643[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN168@PushMissio
	add	DWORD PTR tv642[ebp], 2
	add	DWORD PTR tv643[ebp], 2
	cmp	BYTE PTR tv653[ebp], 0
	jne	SHORT $LL167@PushMissio
$LN169@PushMissio:
	mov	DWORD PTR tv658[ebp], 0
	jmp	SHORT $LN170@PushMissio
$LN168@PushMissio:
	sbb	ecx, ecx
	sbb	ecx, -1
	mov	DWORD PTR tv658[ebp], ecx
$LN170@PushMissio:
	mov	edx, DWORD PTR tv658[ebp]
	mov	DWORD PTR tv208[ebp], edx
	cmp	DWORD PTR tv208[ebp], 0
	jne	$LN21@PushMissio

; 130  : 						{
; 131  : 							removeMission.iData1 = 15; // todo: future proof this

	mov	DWORD PTR _removeMission$217513[ebp+4], 15 ; 0000000fH

; 132  : 							removeMission.iData2 = iData2;

	mov	eax, DWORD PTR _iData2$[ebp]
	mov	DWORD PTR _removeMission$217513[ebp+8], eax

; 133  : 							removeMission.iFlags = iFlags;

	mov	ecx, DWORD PTR _iFlags$[ebp]
	mov	DWORD PTR _removeMission$217513[ebp+12], ecx

; 134  : 							removeMission.iPushTurn = GC.getGame().getGameTurn();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T219184[ebp], edx
	mov	ecx, DWORD PTR $T219184[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	mov	DWORD PTR _removeMission$217513[ebp+16], eax

; 135  : 							hUnit->SetMissionAI(eMissionAI, pMissionAIPlot, pMissionAIUnit);

	mov	eax, DWORD PTR _pMissionAIUnit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMissionAIPlot$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eMissionAI$[ebp]
	push	edx
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?SetMissionAI@CvUnit@@QAEXW4MissionAITypes@@PAVCvPlot@@PAV1@@Z ; CvUnit::SetMissionAI

; 136  : 							InsertAtEndMissionQueue(hUnit, removeMission, !bAppend);

	movzx	eax, BYTE PTR _bAppend$[ebp]
	test	eax, eax
	sete	cl
	movzx	edx, cl
	push	edx
	sub	esp, 20					; 00000014H
	mov	eax, esp
	mov	ecx, DWORD PTR _removeMission$217513[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _removeMission$217513[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _removeMission$217513[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _removeMission$217513[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _removeMission$217513[ebp+16]
	mov	DWORD PTR [eax+16], ecx
	sub	esp, 8
	mov	edx, esp
	mov	DWORD PTR $T219082[ebp], esp
	mov	DWORD PTR $T219197[ebp], edx
	mov	eax, DWORD PTR $T219197[ebp]
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T219197[ebp]
	mov	al, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [edx+4], al
	mov	ecx, DWORD PTR $T219197[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN90@PushMissio
	mov	edx, DWORD PTR $T219197[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN90@PushMissio:
	mov	eax, DWORD PTR $T219197[ebp]
	mov	DWORD PTR tv515[ebp], eax
	call	?InsertAtEndMissionQueue@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@UMissionData@@_N@Z ; CvUnitMission::InsertAtEndMissionQueue
	add	esp, 32					; 00000020H

; 137  : 							bAppend = true;

	mov	BYTE PTR _bAppend$[ebp], 1
	jmp	$LN22@PushMissio
$LN21@PushMissio:

; 138  : 						}
; 139  : 						else if(iData1 != 14 && strcmp(feature->GetType(), "FEATURE_JUNGLE") == 0)

	cmp	DWORD PTR _iData1$[ebp], 14		; 0000000eH
	je	$LN19@PushMissio
	mov	DWORD PTR tv696[ebp], OFFSET ??_C@_0P@FPOMJJFM@FEATURE_JUNGLE?$AA@
	mov	ecx, DWORD PTR _feature$217512[ebp]
	add	ecx, 176				; 000000b0H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR tv695[ebp], eax
$LL171@PushMissio:
	mov	ecx, DWORD PTR tv695[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv699[ebp], dl
	mov	eax, DWORD PTR tv696[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN172@PushMissio
	cmp	BYTE PTR tv699[ebp], 0
	je	SHORT $LN173@PushMissio
	mov	ecx, DWORD PTR tv695[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv706[ebp], dl
	mov	eax, DWORD PTR tv696[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN172@PushMissio
	add	DWORD PTR tv695[ebp], 2
	add	DWORD PTR tv696[ebp], 2
	cmp	BYTE PTR tv706[ebp], 0
	jne	SHORT $LL171@PushMissio
$LN173@PushMissio:
	mov	DWORD PTR tv711[ebp], 0
	jmp	SHORT $LN174@PushMissio
$LN172@PushMissio:
	sbb	ecx, ecx
	sbb	ecx, -1
	mov	DWORD PTR tv711[ebp], ecx
$LN174@PushMissio:
	mov	edx, DWORD PTR tv711[ebp]
	mov	DWORD PTR tv249[ebp], edx
	cmp	DWORD PTR tv249[ebp], 0
	jne	$LN19@PushMissio

; 140  : 						{
; 141  : 							removeMission.iData1 = 14; // todo: future proof this

	mov	DWORD PTR _removeMission$217513[ebp+4], 14 ; 0000000eH

; 142  : 							removeMission.iData2 = iData2;

	mov	eax, DWORD PTR _iData2$[ebp]
	mov	DWORD PTR _removeMission$217513[ebp+8], eax

; 143  : 							removeMission.iFlags = iFlags;

	mov	ecx, DWORD PTR _iFlags$[ebp]
	mov	DWORD PTR _removeMission$217513[ebp+12], ecx

; 144  : 							removeMission.iPushTurn = GC.getGame().getGameTurn();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T219204[ebp], edx
	mov	ecx, DWORD PTR $T219204[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	mov	DWORD PTR _removeMission$217513[ebp+16], eax

; 145  : 							hUnit->SetMissionAI(eMissionAI, pMissionAIPlot, pMissionAIUnit);

	mov	eax, DWORD PTR _pMissionAIUnit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMissionAIPlot$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eMissionAI$[ebp]
	push	edx
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?SetMissionAI@CvUnit@@QAEXW4MissionAITypes@@PAVCvPlot@@PAV1@@Z ; CvUnit::SetMissionAI

; 146  : 							InsertAtEndMissionQueue(hUnit, removeMission, !bAppend);

	movzx	eax, BYTE PTR _bAppend$[ebp]
	test	eax, eax
	sete	cl
	movzx	edx, cl
	push	edx
	sub	esp, 20					; 00000014H
	mov	eax, esp
	mov	ecx, DWORD PTR _removeMission$217513[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _removeMission$217513[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _removeMission$217513[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _removeMission$217513[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _removeMission$217513[ebp+16]
	mov	DWORD PTR [eax+16], ecx
	sub	esp, 8
	mov	edx, esp
	mov	DWORD PTR $T219083[ebp], esp
	mov	DWORD PTR $T219217[ebp], edx
	mov	eax, DWORD PTR $T219217[ebp]
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T219217[ebp]
	mov	al, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [edx+4], al
	mov	ecx, DWORD PTR $T219217[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN101@PushMissio
	mov	edx, DWORD PTR $T219217[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN101@PushMissio:
	mov	eax, DWORD PTR $T219217[ebp]
	mov	DWORD PTR tv519[ebp], eax
	call	?InsertAtEndMissionQueue@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@UMissionData@@_N@Z ; CvUnitMission::InsertAtEndMissionQueue
	add	esp, 32					; 00000020H

; 147  : 							bAppend = true;

	mov	BYTE PTR _bAppend$[ebp], 1
	jmp	$LN22@PushMissio
$LN19@PushMissio:

; 148  : 						}
; 149  : 						else if(iData1 != 16 && strcmp(feature->GetType(), "FEATURE_MARSH") == 0)

	cmp	DWORD PTR _iData1$[ebp], 16		; 00000010H
	je	$LN17@PushMissio
	mov	DWORD PTR tv749[ebp], OFFSET ??_C@_0O@CEOMGFD@FEATURE_MARSH?$AA@
	mov	ecx, DWORD PTR _feature$217512[ebp]
	add	ecx, 176				; 000000b0H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR tv748[ebp], eax
$LL175@PushMissio:
	mov	ecx, DWORD PTR tv748[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv752[ebp], dl
	mov	eax, DWORD PTR tv749[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN176@PushMissio
	cmp	BYTE PTR tv752[ebp], 0
	je	SHORT $LN177@PushMissio
	mov	ecx, DWORD PTR tv748[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv759[ebp], dl
	mov	eax, DWORD PTR tv749[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN176@PushMissio
	add	DWORD PTR tv748[ebp], 2
	add	DWORD PTR tv749[ebp], 2
	cmp	BYTE PTR tv759[ebp], 0
	jne	SHORT $LL175@PushMissio
$LN177@PushMissio:
	mov	DWORD PTR tv764[ebp], 0
	jmp	SHORT $LN178@PushMissio
$LN176@PushMissio:
	sbb	ecx, ecx
	sbb	ecx, -1
	mov	DWORD PTR tv764[ebp], ecx
$LN178@PushMissio:
	mov	edx, DWORD PTR tv764[ebp]
	mov	DWORD PTR tv290[ebp], edx
	cmp	DWORD PTR tv290[ebp], 0
	jne	$LN17@PushMissio

; 150  : 						{
; 151  : 							removeMission.iData1 = 16; // todo: future proof this

	mov	DWORD PTR _removeMission$217513[ebp+4], 16 ; 00000010H

; 152  : 							removeMission.iData2 = iData2;

	mov	eax, DWORD PTR _iData2$[ebp]
	mov	DWORD PTR _removeMission$217513[ebp+8], eax

; 153  : 							removeMission.iFlags = iFlags;

	mov	ecx, DWORD PTR _iFlags$[ebp]
	mov	DWORD PTR _removeMission$217513[ebp+12], ecx

; 154  : 							removeMission.iPushTurn = GC.getGame().getGameTurn();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T219224[ebp], edx
	mov	ecx, DWORD PTR $T219224[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	mov	DWORD PTR _removeMission$217513[ebp+16], eax

; 155  : 							hUnit->SetMissionAI(eMissionAI, pMissionAIPlot, pMissionAIUnit);

	mov	eax, DWORD PTR _pMissionAIUnit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMissionAIPlot$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eMissionAI$[ebp]
	push	edx
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?SetMissionAI@CvUnit@@QAEXW4MissionAITypes@@PAVCvPlot@@PAV1@@Z ; CvUnit::SetMissionAI

; 156  : 							InsertAtEndMissionQueue(hUnit, removeMission, !bAppend);

	movzx	eax, BYTE PTR _bAppend$[ebp]
	test	eax, eax
	sete	cl
	movzx	edx, cl
	push	edx
	sub	esp, 20					; 00000014H
	mov	eax, esp
	mov	ecx, DWORD PTR _removeMission$217513[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _removeMission$217513[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _removeMission$217513[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _removeMission$217513[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _removeMission$217513[ebp+16]
	mov	DWORD PTR [eax+16], ecx
	sub	esp, 8
	mov	edx, esp
	mov	DWORD PTR $T219084[ebp], esp
	mov	DWORD PTR $T219237[ebp], edx
	mov	eax, DWORD PTR $T219237[ebp]
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T219237[ebp]
	mov	al, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [edx+4], al
	mov	ecx, DWORD PTR $T219237[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN112@PushMissio
	mov	edx, DWORD PTR $T219237[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN112@PushMissio:
	mov	eax, DWORD PTR $T219237[ebp]
	mov	DWORD PTR tv523[ebp], eax
	call	?InsertAtEndMissionQueue@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@UMissionData@@_N@Z ; CvUnitMission::InsertAtEndMissionQueue
	add	esp, 32					; 00000020H

; 157  : 							bAppend = true;

	mov	BYTE PTR _bAppend$[ebp], 1
	jmp	$LN22@PushMissio
$LN17@PushMissio:

; 158  : 						}
; 159  : 						else if(iData1 != 17 && strcmp(feature->GetType(), "FEATURE_FALLOUT") == 0)

	cmp	DWORD PTR _iData1$[ebp], 17		; 00000011H
	je	$LN22@PushMissio
	mov	DWORD PTR tv802[ebp], OFFSET ??_C@_0BA@EMOAFIAA@FEATURE_FALLOUT?$AA@
	mov	ecx, DWORD PTR _feature$217512[ebp]
	add	ecx, 176				; 000000b0H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR tv801[ebp], eax
$LL179@PushMissio:
	mov	ecx, DWORD PTR tv801[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv805[ebp], dl
	mov	eax, DWORD PTR tv802[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN180@PushMissio
	cmp	BYTE PTR tv805[ebp], 0
	je	SHORT $LN181@PushMissio
	mov	ecx, DWORD PTR tv801[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv812[ebp], dl
	mov	eax, DWORD PTR tv802[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN180@PushMissio
	add	DWORD PTR tv801[ebp], 2
	add	DWORD PTR tv802[ebp], 2
	cmp	BYTE PTR tv812[ebp], 0
	jne	SHORT $LL179@PushMissio
$LN181@PushMissio:
	mov	DWORD PTR tv817[ebp], 0
	jmp	SHORT $LN182@PushMissio
$LN180@PushMissio:
	sbb	ecx, ecx
	sbb	ecx, -1
	mov	DWORD PTR tv817[ebp], ecx
$LN182@PushMissio:
	mov	edx, DWORD PTR tv817[ebp]
	mov	DWORD PTR tv331[ebp], edx
	cmp	DWORD PTR tv331[ebp], 0
	jne	$LN22@PushMissio

; 160  : 						{
; 161  : 							removeMission.iData1 = 17; // todo: future proof this

	mov	DWORD PTR _removeMission$217513[ebp+4], 17 ; 00000011H

; 162  : 							removeMission.iData2 = iData2;

	mov	eax, DWORD PTR _iData2$[ebp]
	mov	DWORD PTR _removeMission$217513[ebp+8], eax

; 163  : 							removeMission.iFlags = iFlags;

	mov	ecx, DWORD PTR _iFlags$[ebp]
	mov	DWORD PTR _removeMission$217513[ebp+12], ecx

; 164  : 							removeMission.iPushTurn = GC.getGame().getGameTurn();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T219244[ebp], edx
	mov	ecx, DWORD PTR $T219244[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	mov	DWORD PTR _removeMission$217513[ebp+16], eax

; 165  : 							hUnit->SetMissionAI(eMissionAI, pMissionAIPlot, pMissionAIUnit);

	mov	eax, DWORD PTR _pMissionAIUnit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMissionAIPlot$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eMissionAI$[ebp]
	push	edx
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?SetMissionAI@CvUnit@@QAEXW4MissionAITypes@@PAVCvPlot@@PAV1@@Z ; CvUnit::SetMissionAI

; 166  : 							InsertAtEndMissionQueue(hUnit, removeMission, !bAppend);

	movzx	eax, BYTE PTR _bAppend$[ebp]
	test	eax, eax
	sete	cl
	movzx	edx, cl
	push	edx
	sub	esp, 20					; 00000014H
	mov	eax, esp
	mov	ecx, DWORD PTR _removeMission$217513[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _removeMission$217513[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _removeMission$217513[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _removeMission$217513[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _removeMission$217513[ebp+16]
	mov	DWORD PTR [eax+16], ecx
	sub	esp, 8
	mov	edx, esp
	mov	DWORD PTR $T219085[ebp], esp
	mov	DWORD PTR $T219257[ebp], edx
	mov	eax, DWORD PTR $T219257[ebp]
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T219257[ebp]
	mov	al, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [edx+4], al
	mov	ecx, DWORD PTR $T219257[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN123@PushMissio
	mov	edx, DWORD PTR $T219257[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN123@PushMissio:
	mov	eax, DWORD PTR $T219257[ebp]
	mov	DWORD PTR tv527[ebp], eax
	call	?InsertAtEndMissionQueue@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@UMissionData@@_N@Z ; CvUnitMission::InsertAtEndMissionQueue
	add	esp, 32					; 00000020H

; 167  : 							bAppend = true;

	mov	BYTE PTR _bAppend$[ebp], 1
$LN22@PushMissio:

; 168  : 						}
; 169  : 					}
; 170  : 				}
; 171  : 
; 172  : 
; 173  : 				ImprovementTypes eImprovement = NO_IMPROVEMENT;

	mov	DWORD PTR _eImprovement$217529[ebp], -1

; 174  : 				RouteTypes eRoute = NO_ROUTE;

	mov	DWORD PTR _eRoute$217530[ebp], -1

; 175  : 
; 176  : 				if(pkBuildInfo->getImprovement() != NO_IMPROVEMENT)

	mov	ecx, DWORD PTR _pkBuildInfo$217506[ebp]
	call	?getImprovement@CvBuildInfo@@QBEHXZ	; CvBuildInfo::getImprovement
	cmp	eax, -1
	je	SHORT $LN14@PushMissio

; 177  : 				{
; 178  : 					eImprovement = (ImprovementTypes) pkBuildInfo->getImprovement();

	mov	ecx, DWORD PTR _pkBuildInfo$217506[ebp]
	call	?getImprovement@CvBuildInfo@@QBEHXZ	; CvBuildInfo::getImprovement
	mov	DWORD PTR _eImprovement$217529[ebp], eax

; 179  : 				}
; 180  : 				else

	jmp	SHORT $LN13@PushMissio
$LN14@PushMissio:

; 181  : 				{
; 182  : 					eRoute = (RouteTypes) pkBuildInfo->getRoute();

	mov	ecx, DWORD PTR _pkBuildInfo$217506[ebp]
	call	?getRoute@CvBuildInfo@@QBEHXZ		; CvBuildInfo::getRoute
	mov	DWORD PTR _eRoute$217530[ebp], eax
$LN13@PushMissio:

; 183  : 				}
; 184  : 
; 185  : 				int iNumResource = 0;

	mov	DWORD PTR _iNumResource$217535[ebp], 0

; 186  : 
; 187  : 				// Update the amount of a Resource used up by popped Build
; 188  : #ifdef AUI_WARNING_FIXES
; 189  : 				for (uint iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)
; 190  : #else
; 191  : 				for(int iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)

	mov	DWORD PTR _iResourceLoop$217536[ebp], 0
	jmp	SHORT $LN12@PushMissio
$LN11@PushMissio:
	mov	ecx, DWORD PTR _iResourceLoop$217536[ebp]
	add	ecx, 1
	mov	DWORD PTR _iResourceLoop$217536[ebp], ecx
$LN12@PushMissio:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	cmp	DWORD PTR _iResourceLoop$217536[ebp], eax
	jge	$LN27@PushMissio

; 192  : #endif
; 193  : 				{
; 194  : 					iNumResource = 0;

	mov	DWORD PTR _iNumResource$217535[ebp], 0

; 195  : 
; 196  : 					if(eImprovement != NO_IMPROVEMENT)

	cmp	DWORD PTR _eImprovement$217529[ebp], -1
	je	SHORT $LN9@PushMissio

; 197  : 					{
; 198  : 						CvImprovementEntry* pkImprovementInfo = GC.getImprovementInfo(eImprovement);

	mov	edx, DWORD PTR _eImprovement$217529[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getImprovementInfo@CvGlobals@@QAEPAVCvImprovementEntry@@W4ImprovementTypes@@@Z ; CvGlobals::getImprovementInfo
	mov	DWORD PTR _pkImprovementInfo$217541[ebp], eax

; 199  : 						CvAssert(pkImprovementInfo);
; 200  : 						if(pkImprovementInfo)

	cmp	DWORD PTR _pkImprovementInfo$217541[ebp], 0
	je	SHORT $LN8@PushMissio

; 201  : 						{
; 202  : 							iNumResource += pkImprovementInfo->GetResourceQuantityRequirement(iResourceLoop);

	mov	eax, DWORD PTR _iResourceLoop$217536[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkImprovementInfo$217541[ebp]
	call	?GetResourceQuantityRequirement@CvImprovementEntry@@QBEHH@Z ; CvImprovementEntry::GetResourceQuantityRequirement
	add	eax, DWORD PTR _iNumResource$217535[ebp]
	mov	DWORD PTR _iNumResource$217535[ebp], eax
$LN8@PushMissio:

; 203  : 						}
; 204  : 					}

	jmp	SHORT $LN7@PushMissio
$LN9@PushMissio:

; 205  : 					else if(eRoute != NO_ROUTE)

	cmp	DWORD PTR _eRoute$217530[ebp], -1
	je	SHORT $LN7@PushMissio

; 206  : 					{
; 207  : 						CvRouteInfo* pkRouteInfo = GC.getRouteInfo(eRoute);

	mov	ecx, DWORD PTR _eRoute$217530[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getRouteInfo@CvGlobals@@QAEPAVCvRouteInfo@@W4RouteTypes@@@Z ; CvGlobals::getRouteInfo
	mov	DWORD PTR _pkRouteInfo$217545[ebp], eax

; 208  : 						CvAssert(pkRouteInfo);
; 209  : 						if(pkRouteInfo)

	cmp	DWORD PTR _pkRouteInfo$217545[ebp], 0
	je	SHORT $LN7@PushMissio

; 210  : 						{
; 211  : 							iNumResource += pkRouteInfo->getResourceQuantityRequirement(iResourceLoop);

	mov	edx, DWORD PTR _iResourceLoop$217536[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkRouteInfo$217545[ebp]
	call	?getResourceQuantityRequirement@CvRouteInfo@@QBEHH@Z ; CvRouteInfo::getResourceQuantityRequirement
	add	eax, DWORD PTR _iNumResource$217535[ebp]
	mov	DWORD PTR _iNumResource$217535[ebp], eax
$LN7@PushMissio:

; 212  : 						}
; 213  : 					}
; 214  : 
; 215  : 					if(iNumResource > 0)

	cmp	DWORD PTR _iNumResource$217535[ebp], 0
	jle	SHORT $LN4@PushMissio

; 216  : 					{
; 217  : 						GET_PLAYER(hUnit->getOwner()).changeNumResourceUsed((ResourceTypes) iResourceLoop, iNumResource);

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219261[ebp], eax
	mov	ecx, DWORD PTR $T219261[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR $T219270[ebp], edx
	mov	eax, DWORD PTR _iNumResource$217535[ebp]
	push	eax
	mov	ecx, DWORD PTR _iResourceLoop$217536[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T219270[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?changeNumResourceUsed@CvPlayer@@QAEXW4ResourceTypes@@H@Z ; CvPlayer::changeNumResourceUsed
$LN4@PushMissio:

; 218  : 					}
; 219  : 				}

	jmp	$LN11@PushMissio
$LN27@PushMissio:

; 220  : 			}
; 221  : 		}
; 222  : 	}
; 223  : 
; 224  : 	mission.eMissionType = eMission;

	mov	edx, DWORD PTR _eMission$[ebp]
	mov	DWORD PTR _mission$[ebp], edx

; 225  : 	mission.iData1 = iData1;

	mov	eax, DWORD PTR _iData1$[ebp]
	mov	DWORD PTR _mission$[ebp+4], eax

; 226  : 	mission.iData2 = iData2;

	mov	ecx, DWORD PTR _iData2$[ebp]
	mov	DWORD PTR _mission$[ebp+8], ecx

; 227  : 	mission.iFlags = iFlags;

	mov	edx, DWORD PTR _iFlags$[ebp]
	mov	DWORD PTR _mission$[ebp+12], edx

; 228  : 	mission.iPushTurn = GC.getGame().getGameTurn();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T219277[ebp], eax
	mov	ecx, DWORD PTR $T219277[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	mov	DWORD PTR _mission$[ebp+16], eax

; 229  : 
; 230  : 	hUnit->SetMissionAI(eMissionAI, pMissionAIPlot, pMissionAIUnit);

	mov	ecx, DWORD PTR _pMissionAIUnit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pMissionAIPlot$[ebp]
	push	edx
	mov	eax, DWORD PTR _eMissionAI$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?SetMissionAI@CvUnit@@QAEXW4MissionAITypes@@PAVCvPlot@@PAV1@@Z ; CvUnit::SetMissionAI

; 231  : 
; 232  : 	InsertAtEndMissionQueue(hUnit, mission, !bAppend);

	movzx	ecx, BYTE PTR _bAppend$[ebp]
	test	ecx, ecx
	sete	dl
	movzx	eax, dl
	push	eax
	sub	esp, 20					; 00000014H
	mov	ecx, esp
	mov	edx, DWORD PTR _mission$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _mission$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _mission$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _mission$[ebp+12]
	mov	DWORD PTR [ecx+12], eax
	mov	edx, DWORD PTR _mission$[ebp+16]
	mov	DWORD PTR [ecx+16], edx
	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR $T219086[ebp], esp
	mov	DWORD PTR $T219290[ebp], eax
	mov	ecx, DWORD PTR $T219290[ebp]
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T219290[ebp]
	mov	cl, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [eax+4], cl
	mov	edx, DWORD PTR $T219290[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN140@PushMissio
	mov	eax, DWORD PTR $T219290[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN140@PushMissio:
	mov	ecx, DWORD PTR $T219290[ebp]
	mov	DWORD PTR tv531[ebp], ecx
	call	?InsertAtEndMissionQueue@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@UMissionData@@_N@Z ; CvUnitMission::InsertAtEndMissionQueue
	add	esp, 32					; 00000020H

; 233  : 
; 234  : 	if(bManual)

	movzx	edx, BYTE PTR _bManual$[ebp]
	test	edx, edx
	je	$LN3@PushMissio

; 235  : 	{
; 236  : 		if(hUnit->getOwner() == GC.getGame().getActivePlayer())

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219294[ebp], eax
	mov	ecx, DWORD PTR $T219294[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR $T219303[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T219307[ebp], eax
	mov	ecx, DWORD PTR $T219307[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR $T219303[ebp], eax
	jne	SHORT $LN2@PushMissio

; 237  : 		{
; 238  : 			CvMissionInfo* pMissionInfo = GC.getMissionInfo(eMission);

	mov	ecx, DWORD PTR _eMission$[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getMissionInfo@CvGlobals@@QAEPAVCvMissionInfo@@W4MissionTypes@@@Z ; CvGlobals::getMissionInfo
	mov	DWORD PTR _pMissionInfo$217552[ebp], eax

; 239  : 
; 240  : 			if(hUnit->IsBusy() && pMissionInfo != NULL && pMissionInfo->isSound())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219311[ebp], edx
	mov	ecx, DWORD PTR $T219311[ebp]
	call	?IsBusy@CvUnit@@QBE_NXZ			; CvUnit::IsBusy
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@PushMissio
	cmp	DWORD PTR _pMissionInfo$217552[ebp], 0
	je	SHORT $LN1@PushMissio
	mov	ecx, DWORD PTR _pMissionInfo$217552[ebp]
	call	?isSound@CvMissionInfo@@QBE_NXZ		; CvMissionInfo::isSound
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@PushMissio

; 241  : 			{
; 242  : 				hUnit->PlayActionSound();

	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?PlayActionSound@CvUnit@@QAEXXZ		; CvUnit::PlayActionSound
$LN1@PushMissio:

; 243  : 			}
; 244  : 
; 245  : 			GC.GetEngineUserInterface()->setHasMovedUnit(true);

	mov	edx, DWORD PTR $T219318[ebp]
	mov	DWORD PTR tv501[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv501[ebp], eax
	push	1
	mov	ecx, DWORD PTR tv501[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv501[ebp]
	mov	eax, DWORD PTR [edx+380]
	call	eax
$LN2@PushMissio:

; 246  : 		}
; 247  : 
; 248  : 		////gDLL->getEventReporterIFace()->selectionGroupPushMission(this, eMission);
; 249  : 		hUnit.ignoreDestruction(true);

	mov	BYTE PTR _hUnit$[ebp+4], 1

; 250  : 		hUnit->doDelayedDeath();

	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?doDelayedDeath@CvUnit@@QAE_NXZ		; CvUnit::doDelayedDeath
$LN3@PushMissio:

; 251  : 	}
; 252  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN32@PushMissio
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN32@PushMissio:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PushMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@W4MissionTypes@@HHH_N2W4MissionAITypes@@PAVCvPlot@@PAVCvUnit@@@Z$0:
	lea	ecx, DWORD PTR _hUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__unwindfunclet$?PushMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@W4MissionTypes@@HHH_N2W4MissionAITypes@@PAVCvPlot@@PAVCvUnit@@@Z$1:
	lea	ecx, DWORD PTR $T219081[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?PushMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@W4MissionTypes@@HHH_N2W4MissionAITypes@@PAVCvPlot@@PAVCvUnit@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-364]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PushMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@W4MissionTypes@@HHH_N2W4MissionAITypes@@PAVCvPlot@@PAVCvUnit@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PushMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@W4MissionTypes@@HHH_N2W4MissionAITypes@@PAVCvPlot@@PAVCvUnit@@@Z ENDP ; CvUnitMission::PushMission
PUBLIC	??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ		; std::auto_ptr<ICvUnit1>::~auto_ptr<ICvUnit1>
PUBLIC	?DeleteMissionQueueNode@CvUnitMission@@CAPAUMissionData@@V?$FObjectHandle@VCvUnit@@@@PAU2@@Z ; CvUnitMission::DeleteMissionQueueNode
PUBLIC	?TailMissionQueueNode@CvUnitMission@@CAPAUMissionData@@AAV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::TailMissionQueueNode
PUBLIC	?PopMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z ; CvUnitMission::PopMission
EXTRN	??3CvDllUnit@@SAXPAX@Z:PROC			; CvDllUnit::operator delete
EXTRN	??0CvDllUnit@@QAE@PAVCvUnit@@@Z:PROC		; CvDllUnit::CvDllUnit
EXTRN	??2CvDllUnit@@SAPAXI@Z:PROC			; CvDllUnit::operator new
EXTRN	?getBuildType@CvUnit@@QBE?AW4BuildTypes@@XZ:PROC ; CvUnit::getBuildType
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?PopMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PopMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?PopMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?PopMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$2
__ehfuncinfo$?PopMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?PopMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvunitmission.cpp
xdata$x	ENDS
;	COMDAT ?PopMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
tv215 = -112						; size = 4
tv182 = -108						; size = 4
tv172 = -104						; size = 4
$T219432 = -100						; size = 4
$T219422 = -96						; size = 4
_inst$219417 = -92					; size = 4
$T219413 = -88						; size = 4
$T219401 = -84						; size = 4
$T219394 = -80						; size = 4
$T219387 = -76						; size = 4
$T219378 = -72						; size = 4
$T219374 = -68						; size = 4
$T219370 = -64						; size = 4
$T219362 = -60						; size = 4
$T219359 = -56						; size = 4
$T219358 = -52						; size = 4
_pkRouteInfo$217577 = -48				; size = 4
_pkImprovementInfo$217573 = -44				; size = 4
_iResourceLoop$217568 = -40				; size = 4
_eImprovement$217558 = -36				; size = 4
_eRoute$217559 = -32					; size = 4
_iNumResource$217567 = -28				; size = 4
_pDllUnit$217632 = -24					; size = 4
_pkBuildInfo$217560 = -20				; size = 4
_pTailNode$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_hUnit$ = 8						; size = 8
?PopMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z PROC ; CvUnitMission::PopMission, COMDAT

; 257  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PopMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 100				; 00000064H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 258  : 	CvAssert(hUnit->getOwner() != NO_PLAYER);
; 259  : 
; 260  : 	// Update Resource info
; 261  : 	if(hUnit->getBuildType() != NO_BUILD)

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219370[ebp], eax
	mov	ecx, DWORD PTR $T219370[ebp]
	call	?getBuildType@CvUnit@@QBE?AW4BuildTypes@@XZ ; CvUnit::getBuildType
	cmp	eax, -1
	je	$LN15@PopMission

; 262  : 	{
; 263  : 		ImprovementTypes eImprovement = NO_IMPROVEMENT;

	mov	DWORD PTR _eImprovement$217558[ebp], -1

; 264  : 		RouteTypes eRoute = NO_ROUTE;

	mov	DWORD PTR _eRoute$217559[ebp], -1

; 265  : 
; 266  : 		CvBuildInfo* pkBuildInfo = GC.getBuildInfo(hUnit->getBuildType());

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219374[ebp], ecx
	mov	ecx, DWORD PTR $T219374[ebp]
	call	?getBuildType@CvUnit@@QBE?AW4BuildTypes@@XZ ; CvUnit::getBuildType
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildInfo@CvGlobals@@QAEPAVCvBuildInfo@@W4BuildTypes@@@Z ; CvGlobals::getBuildInfo
	mov	DWORD PTR _pkBuildInfo$217560[ebp], eax

; 267  : 		if(pkBuildInfo)

	cmp	DWORD PTR _pkBuildInfo$217560[ebp], 0
	je	SHORT $LN14@PopMission

; 268  : 		{
; 269  : 			if(pkBuildInfo->getImprovement() != NO_IMPROVEMENT)

	mov	ecx, DWORD PTR _pkBuildInfo$217560[ebp]
	call	?getImprovement@CvBuildInfo@@QBEHXZ	; CvBuildInfo::getImprovement
	cmp	eax, -1
	je	SHORT $LN13@PopMission

; 270  : 			{
; 271  : 				eImprovement = (ImprovementTypes) pkBuildInfo->getImprovement();

	mov	ecx, DWORD PTR _pkBuildInfo$217560[ebp]
	call	?getImprovement@CvBuildInfo@@QBEHXZ	; CvBuildInfo::getImprovement
	mov	DWORD PTR _eImprovement$217558[ebp], eax
	jmp	SHORT $LN14@PopMission
$LN13@PopMission:

; 272  : 			}
; 273  : 			else if(pkBuildInfo->getRoute() != NO_ROUTE)

	mov	ecx, DWORD PTR _pkBuildInfo$217560[ebp]
	call	?getRoute@CvBuildInfo@@QBEHXZ		; CvBuildInfo::getRoute
	cmp	eax, -1
	je	SHORT $LN14@PopMission

; 274  : 			{
; 275  : 				eRoute = (RouteTypes) pkBuildInfo->getRoute();

	mov	ecx, DWORD PTR _pkBuildInfo$217560[ebp]
	call	?getRoute@CvBuildInfo@@QBEHXZ		; CvBuildInfo::getRoute
	mov	DWORD PTR _eRoute$217559[ebp], eax
$LN14@PopMission:

; 276  : 			}
; 277  : 		}
; 278  : 
; 279  : 		int iNumResource;
; 280  : 
; 281  : 		// Update the amount of a Resource used up by popped Build
; 282  : #ifdef AUI_WARNING_FIXES
; 283  : 		for (uint iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)
; 284  : #else
; 285  : 		for(int iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)

	mov	DWORD PTR _iResourceLoop$217568[ebp], 0
	jmp	SHORT $LN10@PopMission
$LN9@PopMission:
	mov	edx, DWORD PTR _iResourceLoop$217568[ebp]
	add	edx, 1
	mov	DWORD PTR _iResourceLoop$217568[ebp], edx
$LN10@PopMission:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	cmp	DWORD PTR _iResourceLoop$217568[ebp], eax
	jge	$LN8@PopMission

; 286  : #endif
; 287  : 		{
; 288  : 			iNumResource = 0;

	mov	DWORD PTR _iNumResource$217567[ebp], 0

; 289  : 
; 290  : 			if(eImprovement != NO_IMPROVEMENT)

	cmp	DWORD PTR _eImprovement$217558[ebp], -1
	je	SHORT $LN7@PopMission

; 291  : 			{
; 292  : 				CvImprovementEntry* pkImprovementInfo = GC.getImprovementInfo(eImprovement);

	mov	eax, DWORD PTR _eImprovement$217558[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getImprovementInfo@CvGlobals@@QAEPAVCvImprovementEntry@@W4ImprovementTypes@@@Z ; CvGlobals::getImprovementInfo
	mov	DWORD PTR _pkImprovementInfo$217573[ebp], eax

; 293  : 				if(pkImprovementInfo)

	cmp	DWORD PTR _pkImprovementInfo$217573[ebp], 0
	je	SHORT $LN6@PopMission

; 294  : 				{
; 295  : 					iNumResource += pkImprovementInfo->GetResourceQuantityRequirement(iResourceLoop);

	mov	ecx, DWORD PTR _iResourceLoop$217568[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkImprovementInfo$217573[ebp]
	call	?GetResourceQuantityRequirement@CvImprovementEntry@@QBEHH@Z ; CvImprovementEntry::GetResourceQuantityRequirement
	add	eax, DWORD PTR _iNumResource$217567[ebp]
	mov	DWORD PTR _iNumResource$217567[ebp], eax
$LN6@PopMission:

; 296  : 				}
; 297  : 			}

	jmp	SHORT $LN5@PopMission
$LN7@PopMission:

; 298  : 			else if(eRoute != NO_ROUTE)

	cmp	DWORD PTR _eRoute$217559[ebp], -1
	je	SHORT $LN5@PopMission

; 299  : 			{
; 300  : 				CvRouteInfo* pkRouteInfo = GC.getRouteInfo(eRoute);

	mov	edx, DWORD PTR _eRoute$217559[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getRouteInfo@CvGlobals@@QAEPAVCvRouteInfo@@W4RouteTypes@@@Z ; CvGlobals::getRouteInfo
	mov	DWORD PTR _pkRouteInfo$217577[ebp], eax

; 301  : 				if(pkRouteInfo)

	cmp	DWORD PTR _pkRouteInfo$217577[ebp], 0
	je	SHORT $LN5@PopMission

; 302  : 				{
; 303  : 					iNumResource += pkRouteInfo->getResourceQuantityRequirement(iResourceLoop);

	mov	eax, DWORD PTR _iResourceLoop$217568[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkRouteInfo$217577[ebp]
	call	?getResourceQuantityRequirement@CvRouteInfo@@QBEHH@Z ; CvRouteInfo::getResourceQuantityRequirement
	add	eax, DWORD PTR _iNumResource$217567[ebp]
	mov	DWORD PTR _iNumResource$217567[ebp], eax
$LN5@PopMission:

; 304  : 				}
; 305  : 			}
; 306  : 
; 307  : 			if(iNumResource > 0)

	cmp	DWORD PTR _iNumResource$217567[ebp], 0
	jle	SHORT $LN2@PopMission

; 308  : 			{
; 309  : 				GET_PLAYER(hUnit->getOwner()).changeNumResourceUsed((ResourceTypes) iResourceLoop, -iNumResource);

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219378[ebp], ecx
	mov	edx, DWORD PTR $T219378[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR $T219387[ebp], eax
	mov	ecx, DWORD PTR _iNumResource$217567[ebp]
	neg	ecx
	push	ecx
	mov	edx, DWORD PTR _iResourceLoop$217568[ebp]
	push	edx
	mov	ecx, DWORD PTR $T219387[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?changeNumResourceUsed@CvPlayer@@QAEXW4ResourceTypes@@H@Z ; CvPlayer::changeNumResourceUsed
$LN2@PopMission:

; 310  : 			}
; 311  : 		}

	jmp	$LN9@PopMission
$LN8@PopMission:

; 312  : 
; 313  : 		auto_ptr<ICvUnit1> pDllUnit(new CvDllUnit(hUnit.pointer()));

	push	12					; 0000000cH
	call	??2CvDllUnit@@SAPAXI@Z			; CvDllUnit::operator new
	add	esp, 4
	mov	DWORD PTR $T219359[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T219359[ebp], 0
	je	SHORT $LN18@PopMission
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219394[ebp], eax
	mov	ecx, DWORD PTR $T219394[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T219359[ebp]
	call	??0CvDllUnit@@QAE@PAVCvUnit@@@Z		; CvDllUnit::CvDllUnit
	mov	DWORD PTR tv172[ebp], eax
	jmp	SHORT $LN19@PopMission
$LN18@PopMission:
	mov	DWORD PTR tv172[ebp], 0
$LN19@PopMission:
	mov	edx, DWORD PTR tv172[ebp]
	mov	DWORD PTR $T219358[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T219358[ebp]
	mov	DWORD PTR _pDllUnit$217632[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 314  : 		gDLL->GameplayUnitWork(pDllUnit.get(), -1);

	mov	ecx, DWORD PTR $T219401[ebp]
	mov	DWORD PTR tv182[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv182[ebp], edx
	push	-1
	mov	eax, DWORD PTR _pDllUnit$217632[ebp]
	push	eax
	mov	ecx, DWORD PTR tv182[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv182[ebp]
	mov	eax, DWORD PTR [edx+612]
	call	eax

; 315  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _pDllUnit$217632[ebp]
	mov	DWORD PTR $T219413[ebp], ecx
	cmp	DWORD PTR $T219413[ebp], 0
	je	SHORT $LN15@PopMission
	mov	edx, DWORD PTR $T219413[ebp]
	mov	DWORD PTR _inst$219417[ebp], edx
	mov	eax, DWORD PTR _inst$219417[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$219417[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN15@PopMission:

; 316  : 
; 317  : 	MissionQueueNode* pTailNode = TailMissionQueueNode(hUnit->m_missionQueue);

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219422[ebp], ecx
	mov	edx, DWORD PTR $T219422[ebp]
	add	edx, 2600				; 00000a28H
	push	edx
	call	?TailMissionQueueNode@CvUnitMission@@CAPAUMissionData@@AAV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::TailMissionQueueNode
	add	esp, 4
	mov	DWORD PTR _pTailNode$[ebp], eax

; 318  : 
; 319  : 	if(pTailNode != NULL)

	cmp	DWORD PTR _pTailNode$[ebp], 0
	je	SHORT $LN1@PopMission

; 320  : 	{
; 321  : 		DeleteMissionQueueNode(hUnit, pTailNode);

	mov	eax, DWORD PTR _pTailNode$[ebp]
	push	eax
	sub	esp, 8
	mov	ecx, esp
	mov	DWORD PTR $T219362[ebp], esp
	mov	DWORD PTR $T219432[ebp], ecx
	mov	edx, DWORD PTR $T219432[ebp]
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T219432[ebp]
	mov	dl, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [ecx+4], dl
	mov	eax, DWORD PTR $T219432[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN52@PopMission
	mov	ecx, DWORD PTR $T219432[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN52@PopMission:
	mov	edx, DWORD PTR $T219432[ebp]
	mov	DWORD PTR tv215[ebp], edx
	call	?DeleteMissionQueueNode@CvUnitMission@@CAPAUMissionData@@V?$FObjectHandle@VCvUnit@@@@PAU2@@Z ; CvUnitMission::DeleteMissionQueueNode
	add	esp, 12					; 0000000cH
$LN1@PopMission:

; 322  : 	}
; 323  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN16@PopMission
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN16@PopMission:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PopMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$0:
	lea	ecx, DWORD PTR _hUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__unwindfunclet$?PopMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$1:
	mov	eax, DWORD PTR $T219359[ebp]
	push	eax
	call	??3CvDllUnit@@SAXPAX@Z			; CvDllUnit::operator delete
	pop	ecx
	ret	0
__unwindfunclet$?PopMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$2:
	lea	ecx, DWORD PTR _pDllUnit$217632[ebp]
	jmp	??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ	; std::auto_ptr<ICvUnit1>::~auto_ptr<ICvUnit1>
__ehhandler$?PopMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PopMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PopMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z ENDP ; CvUnitMission::PopMission
PUBLIC	?GrowSize@?$FStaticVector@UMissionData@@$0M@$00$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<MissionData,12,1,297,0>::GrowSize
PUBLIC	?WaitFor@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@0@Z ; CvUnitMission::WaitFor
EXTRN	?IsSelected@CvUnit@@QBE_NXZ:PROC		; CvUnit::IsSelected
EXTRN	?getMISSION_WAIT_FOR@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_WAIT_FOR
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?WaitFor@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?WaitFor@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?WaitFor@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?WaitFor@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@0@Z$2
__ehfuncinfo$?WaitFor@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@0@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?WaitFor@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvunitmission.cpp
xdata$x	ENDS
;	COMDAT ?WaitFor@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@0@Z
_TEXT	SEGMENT
tv189 = -156						; size = 4
tv177 = -152						; size = 4
tv165 = -148						; size = 4
tv84 = -144						; size = 4
$T219576 = -140						; size = 4
$T219572 = -136						; size = 4
$T219568 = -132						; size = 4
$T219564 = -128						; size = 4
$T219560 = -124						; size = 4
$T219556 = -120						; size = 4
$T219547 = -116						; size = 4
$T219519 = -112						; size = 4
$T219515 = -108						; size = 4
_iIdx$219540 = -104					; size = 4
_uSize$219539 = -100					; size = 4
$T219503 = -96						; size = 4
$T219499 = -92						; size = 4
$T219490 = -88						; size = 4
$T219486 = -84						; size = 4
$T219477 = -80						; size = 4
$T219470 = -76						; size = 4
$T219466 = -72						; size = 4
$T219457 = -68						; size = 4
$T219450 = -64						; size = 28
_mission$ = -36						; size = 20
_kQueue$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_hUnit$ = 8						; size = 8
_hWaitForUnit$ = 16					; size = 8
?WaitFor@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@0@Z PROC ; CvUnitMission::WaitFor, COMDAT

; 328  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?WaitFor@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 144				; 00000090H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 329  : 	if(CvPreGame::isHuman(hUnit->getOwner()))

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219457[ebp], eax
	mov	ecx, DWORD PTR $T219457[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR $T219466[ebp], edx
	mov	eax, DWORD PTR $T219466[ebp]
	push	eax
	call	?isHuman@CvPreGame@@YA_NW4PlayerTypes@@@Z ; CvPreGame::isHuman
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@WaitFor

; 330  : 	{
; 331  : 		CvAssertMsg(CvUnit::dispatchingNetMessage(), "Multiplayer Error! CvUnit::PushMission invoked for a human player outside of a network message!");
; 332  : 		if(!CvUnit::dispatchingNetMessage())

	call	?dispatchingNetMessage@CvUnit@@SA_NXZ	; CvUnit::dispatchingNetMessage
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@WaitFor

; 333  : 			gDLL->netMessageDebugLog("*** PROTOCOL ERROR *** : PushMission invoked for a human controlled player outside of a network message!");

	push	OFFSET ??_C@_0GJ@FFAHDLIK@?$CK?$CK?$CK?5PROTOCOL?5ERROR?5?$CK?$CK?$CK?5?3?5PushMis@
	lea	ecx, DWORD PTR $T219450[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T219470[ebp]
	mov	DWORD PTR tv84[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv84[ebp], ecx
	lea	edx, DWORD PTR $T219450[ebp]
	push	edx
	mov	eax, DWORD PTR tv84[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv84[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T219450[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN3@WaitFor:

; 334  : 	}
; 335  : 
; 336  : 	CvAssert(hUnit->getOwner() != NO_PLAYER);
; 337  : 
; 338  : 	MissionData mission;

	mov	DWORD PTR _mission$[ebp], -1
	mov	DWORD PTR _mission$[ebp+4], 0
	mov	DWORD PTR _mission$[ebp+8], 0
	mov	DWORD PTR _mission$[ebp+12], 0
	mov	DWORD PTR _mission$[ebp+16], 0

; 339  : 	mission.eMissionType = CvTypes::getMISSION_WAIT_FOR();

	call	?getMISSION_WAIT_FOR@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_WAIT_FOR
	mov	DWORD PTR _mission$[ebp], eax

; 340  : 	mission.iData1 = hWaitForUnit->getOwner();

	mov	ecx, DWORD PTR _hWaitForUnit$[ebp]
	mov	DWORD PTR $T219477[ebp], ecx
	mov	edx, DWORD PTR $T219477[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR $T219486[ebp], eax
	mov	ecx, DWORD PTR $T219486[ebp]
	mov	DWORD PTR _mission$[ebp+4], ecx

; 341  : 	mission.iData2 = hWaitForUnit->GetID();

	mov	edx, DWORD PTR _hWaitForUnit$[ebp]
	mov	DWORD PTR $T219490[ebp], edx
	mov	eax, DWORD PTR $T219490[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	DWORD PTR $T219499[ebp], ecx
	mov	edx, DWORD PTR $T219499[ebp]
	mov	DWORD PTR _mission$[ebp+8], edx

; 342  : 	mission.iFlags = 0;

	mov	DWORD PTR _mission$[ebp+12], 0

; 343  : 	mission.iPushTurn = GC.getGame().getGameTurn();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T219503[ebp], eax
	mov	ecx, DWORD PTR $T219503[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	mov	DWORD PTR _mission$[ebp+16], eax

; 344  : 
; 345  : 	MissionQueue& kQueue = hUnit->m_missionQueue;

	mov	ecx, DWORD PTR _hUnit$[ebp]
	add	ecx, 2600				; 00000a28H
	mov	DWORD PTR _kQueue$[ebp], ecx

; 346  : 
; 347  : 	//  Insert head of mission list
; 348  : 	kQueue.insertAtBeginning(&mission);

	mov	edx, DWORD PTR _kQueue$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _uSize$219539[ebp], eax
	mov	ecx, DWORD PTR _uSize$219539[ebp]
	add	ecx, 1
	mov	DWORD PTR $T219515[ebp], ecx
	mov	edx, DWORD PTR _kQueue$[ebp]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR $T219515[ebp]
	jae	SHORT $LN42@WaitFor
	mov	ecx, DWORD PTR $T219515[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kQueue$[ebp]
	call	?GrowSize@?$FStaticVector@UMissionData@@$0M@$00$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<MissionData,12,1,297,0>::GrowSize
$LN42@WaitFor:
	mov	edx, DWORD PTR _kQueue$[ebp]
	mov	eax, DWORD PTR $T219515[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR _uSize$219539[ebp]
	mov	DWORD PTR _iIdx$219540[ebp], ecx
	jmp	SHORT $LN37@WaitFor
$LN36@WaitFor:
	mov	edx, DWORD PTR _iIdx$219540[ebp]
	sub	edx, 1
	mov	DWORD PTR _iIdx$219540[ebp], edx
$LN37@WaitFor:
	cmp	DWORD PTR _iIdx$219540[ebp], 1
	jl	SHORT $LN49@WaitFor
	mov	eax, DWORD PTR _iIdx$219540[ebp]
	sub	eax, 1
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR _kQueue$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	DWORD PTR $T219519[ebp], eax
	mov	edx, DWORD PTR $T219519[ebp]
	mov	eax, DWORD PTR _iIdx$219540[ebp]
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR _kQueue$[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, eax
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+12], eax
	mov	edx, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+16], edx
	jmp	SHORT $LN36@WaitFor
$LN49@WaitFor:
	xor	eax, eax
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR _kQueue$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, eax
	mov	eax, DWORD PTR _mission$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _mission$[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR _mission$[ebp+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR _mission$[ebp+12]
	mov	DWORD PTR [edx+12], ecx
	mov	eax, DWORD PTR _mission$[ebp+16]
	mov	DWORD PTR [edx+16], eax

; 349  : 
; 350  : 	CvAssert(kQueue.getLength() < 10);
; 351  : 
; 352  : 	if((hUnit->getOwner() == GC.getGame().getActivePlayer()) && hUnit->IsSelected())

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219547[ebp], ecx
	mov	edx, DWORD PTR $T219547[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR $T219556[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T219560[ebp], ecx
	mov	ecx, DWORD PTR $T219560[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR $T219556[ebp], eax
	jne	$LN1@WaitFor
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219564[ebp], edx
	mov	ecx, DWORD PTR $T219564[ebp]
	call	?IsSelected@CvUnit@@QBE_NXZ		; CvUnit::IsSelected
	movzx	eax, al
	test	eax, eax
	je	$LN1@WaitFor

; 353  : 	{
; 354  : 		GC.GetEngineUserInterface()->setDirty(Waypoints_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T219568[ebp]
	mov	DWORD PTR tv165[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv165[ebp], edx
	push	1
	push	2
	mov	eax, DWORD PTR tv165[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv165[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 355  : 		GC.GetEngineUserInterface()->setDirty(SelectionButtons_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T219572[ebp]
	mov	DWORD PTR tv177[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv177[ebp], edx
	push	1
	push	6
	mov	eax, DWORD PTR tv177[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv177[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 356  : 		GC.GetEngineUserInterface()->setDirty(UnitInfo_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T219576[ebp]
	mov	DWORD PTR tv189[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv189[ebp], edx
	push	1
	push	19					; 00000013H
	mov	eax, DWORD PTR tv189[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv189[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax
$LN1@WaitFor:

; 357  : 	}
; 358  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN68@WaitFor
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN68@WaitFor:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hWaitForUnit$[ebp], 0
	je	SHORT $LN4@WaitFor
	mov	ecx, DWORD PTR _hWaitForUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN4@WaitFor:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?WaitFor@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@0@Z$0:
	lea	ecx, DWORD PTR _hWaitForUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__unwindfunclet$?WaitFor@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@0@Z$1:
	lea	ecx, DWORD PTR _hUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__unwindfunclet$?WaitFor@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@0@Z$2:
	lea	ecx, DWORD PTR $T219450[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?WaitFor@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-148]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?WaitFor@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?WaitFor@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@0@Z ENDP ; CvUnitMission::WaitFor
PUBLIC	?UpdateMission@CvUnitMission@@SAXAAV?$FObjectHandle@VCvUnit@@@@@Z ; CvUnitMission::UpdateMission
EXTRN	?ChangeMissionTimer@CvUnit@@QAEXH@Z:PROC	; CvUnit::ChangeMissionTimer
EXTRN	?GetMissionTimer@CvUnit@@QBEHXZ:PROC		; CvUnit::GetMissionTimer
; Function compile flags: /Odtp
;	COMDAT ?UpdateMission@CvUnitMission@@SAXAAV?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
tv147 = -48						; size = 4
tv154 = -44						; size = 4
$T219651 = -40						; size = 4
$T219647 = -36						; size = 4
$T219643 = -32						; size = 4
$T219634 = -28						; size = 4
$T219630 = -24						; size = 4
$T219620 = -20						; size = 4
$T219616 = -16						; size = 4
$T219612 = -12						; size = 4
$T219608 = -8						; size = 4
$T219603 = -4						; size = 4
_hUnit$ = 8						; size = 4
?UpdateMission@CvUnitMission@@SAXAAV?$FObjectHandle@VCvUnit@@@@@Z PROC ; CvUnitMission::UpdateMission, COMDAT

; 363  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H

; 364  : 	CvAssert(hUnit->getOwner() != NO_PLAYER);
; 365  : 
; 366  : 	if(hUnit->GetMissionTimer() > 0)

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T219608[ebp], ecx
	mov	ecx, DWORD PTR $T219608[ebp]
	call	?GetMissionTimer@CvUnit@@QBEHXZ		; CvUnit::GetMissionTimer
	test	eax, eax
	jle	$LN6@UpdateMiss

; 367  : 	{
; 368  : 		hUnit->ChangeMissionTimer(-1);

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T219612[ebp], eax
	push	-1
	mov	ecx, DWORD PTR $T219612[ebp]
	call	?ChangeMissionTimer@CvUnit@@QAEXH@Z	; CvUnit::ChangeMissionTimer

; 369  : 
; 370  : 		if(hUnit->GetMissionTimer() == 0)

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T219616[ebp], edx
	mov	ecx, DWORD PTR $T219616[ebp]
	call	?GetMissionTimer@CvUnit@@QBEHXZ		; CvUnit::GetMissionTimer
	test	eax, eax
	jne	$LN6@UpdateMiss

; 371  : 		{
; 372  : 			if(hUnit->GetActivityType() == ACTIVITY_MISSION)

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T219620[ebp], ecx
	mov	ecx, DWORD PTR $T219620[ebp]
	call	?GetActivityType@CvUnit@@QBE?AW4ActivityTypes@@XZ ; CvUnit::GetActivityType
	cmp	eax, 6
	jne	SHORT $LN3@UpdateMiss

; 373  : 			{
; 374  : 				ContinueMission(hUnit);

	push	-1
	push	0
	sub	esp, 8
	mov	edx, esp
	mov	DWORD PTR $T219603[ebp], esp
	mov	DWORD PTR $T219630[ebp], edx
	mov	eax, DWORD PTR $T219630[ebp]
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR $T219630[ebp]
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR $T219630[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN18@UpdateMiss
	mov	ecx, DWORD PTR $T219630[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN18@UpdateMiss:
	mov	edx, DWORD PTR $T219630[ebp]
	mov	DWORD PTR tv154[ebp], edx
	call	?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z ; CvUnitMission::ContinueMission
	add	esp, 16					; 00000010H

; 375  : 			}
; 376  : 			else

	jmp	SHORT $LN6@UpdateMiss
$LN3@UpdateMiss:

; 377  : 			{
; 378  : 				if(hUnit->getOwner() == GC.getGame().getActivePlayer())

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T219634[ebp], ecx
	mov	edx, DWORD PTR $T219634[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR $T219643[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T219647[ebp], ecx
	mov	ecx, DWORD PTR $T219647[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR $T219643[ebp], eax
	jne	SHORT $LN6@UpdateMiss

; 379  : 				{
; 380  : 					//if (GC.GetEngineUserInterface()->GetHeadSelectedUnit() == NULL)
; 381  : 					{
; 382  : 						GC.GetEngineUserInterface()->changeCycleSelectionCounter(1);

	mov	edx, DWORD PTR $T219651[ebp]
	mov	DWORD PTR tv147[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv147[ebp], eax
	push	1
	mov	ecx, DWORD PTR tv147[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv147[ebp]
	mov	eax, DWORD PTR [edx+224]
	call	eax
$LN6@UpdateMiss:

; 383  : 					}
; 384  : 				}
; 385  : 			}
; 386  : 		}
; 387  : 	}
; 388  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateMission@CvUnitMission@@SAXAAV?$FObjectHandle@VCvUnit@@@@@Z ENDP ; CvUnitMission::UpdateMission
_TEXT	ENDS
PUBLIC	??1?$auto_ptr@VICvPlot1@@@std@@QAE@XZ		; std::auto_ptr<ICvPlot1>::~auto_ptr<ICvPlot1>
PUBLIC	?UpdateMissionTimer@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z ; CvUnitMission::UpdateMissionTimer
PUBLIC	?isPlot@CvMap@@QBEHHH@Z				; CvMap::isPlot
PUBLIC	?HeadMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::HeadMissionQueueNode
PUBLIC	??_C@_0CA@INKFIMDI@TXT_KEY_ADVISOR_BAD_ATTACK_BODY?$AA@ ; `string'
PUBLIC	??_C@_0CB@PKJLOIOI@TXT_KEY_ADVISOR_CITY_ATTACK_BODY@ ; `string'
PUBLIC	?isCity@CvPlot@@QBE_NXZ				; CvPlot::isCity
PUBLIC	?coordRange@@YAHHH_N@Z				; coordRange
PUBLIC	?insert@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@_N@2@ABQAVFAutoVariableBase@@@Z ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::insert
PUBLIC	__$ArrayPad$
EXTRN	?SetCombatWarned@CvGame@@QAEX_N@Z:PROC		; CvGame::SetCombatWarned
EXTRN	?PublishQueuedVisualizationMoves@CvUnit@@IAEXXZ:PROC ; CvUnit::PublishQueuedVisualizationMoves
EXTRN	?isOption@CvPlayer@@QBE_NW4PlayerOptionTypes@@@Z:PROC ; CvPlayer::isOption
EXTRN	?isInCombat@CvUnit@@QBE_NXZ:PROC		; CvUnit::isInCombat
EXTRN	?IsWork@CvUnit@@QBE_NXZ:PROC			; CvUnit::IsWork
EXTRN	?WrapPlotPointer@CvGlobals@@QAE?AV?$auto_ptr@VICvPlot1@@@std@@PAVCvPlot@@@Z:PROC ; CvGlobals::WrapPlotPointer
EXTRN	?isActiveVisible@CvPlot@@QBE_N_N@Z:PROC		; CvPlot::isActiveVisible
EXTRN	?ShowMoves@CvUnit@@QBE_NXZ:PROC			; CvUnit::ShowMoves
EXTRN	?isVisibleToWatchingHuman@CvPlot@@QBE_NXZ:PROC	; CvPlot::isVisibleToWatchingHuman
EXTRN	?getMISSION_CHANGE_ADMIRAL_PORT@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_CHANGE_ADMIRAL_PORT
EXTRN	?getMISSION_ONE_SHOT_TOURISM@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_ONE_SHOT_TOURISM
EXTRN	?getMISSION_GIVE_POLICIES@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_GIVE_POLICIES
EXTRN	?getMISSION_SELL_EXOTIC_GOODS@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_SELL_EXOTIC_GOODS
EXTRN	?getMISSION_CHANGE_TRADE_UNIT_HOME_CITY@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_CHANGE_TRADE_UNIT_HOME_CITY
EXTRN	?getMISSION_GREAT_WORK@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_GREAT_WORK
EXTRN	?getMISSION_PLUNDER_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_PLUNDER_TRADE_ROUTE
EXTRN	?getMISSION_ESTABLISH_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_ESTABLISH_TRADE_ROUTE
EXTRN	?getMISSION_REMOVE_HERESY@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_REMOVE_HERESY
EXTRN	?getMISSION_ENHANCE_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_ENHANCE_RELIGION
EXTRN	?getMISSION_SPREAD_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_SPREAD_RELIGION
EXTRN	?getMISSION_DIE_ANIMATION@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_DIE_ANIMATION
EXTRN	?getMISSION_LEAD@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_LEAD
EXTRN	?getMISSION_GOLDEN_AGE@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_GOLDEN_AGE
EXTRN	?getMISSION_FOUND_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_FOUND_RELIGION
EXTRN	?getMISSION_CULTURE_BOMB@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_CULTURE_BOMB
EXTRN	?getMISSION_SPACESHIP@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_SPACESHIP
EXTRN	?getMISSION_REPAIR_FLEET@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_REPAIR_FLEET
EXTRN	?getMISSION_BUY_CITY_STATE@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_BUY_CITY_STATE
EXTRN	?getMISSION_TRADE@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_TRADE
EXTRN	?getMISSION_HURRY@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_HURRY
EXTRN	?getMISSION_DISCOVER@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_DISCOVER
EXTRN	?getMISSION_CONSTRUCT@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_CONSTRUCT
EXTRN	?getMISSION_JOIN@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_JOIN
EXTRN	?getMISSION_FOUND@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_FOUND
EXTRN	?getMISSION_PILLAGE@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_PILLAGE
EXTRN	?getMISSION_REBASE@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_REBASE
EXTRN	?getMISSION_AIR_SWEEP@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_AIR_SWEEP
EXTRN	?getMISSION_PARADROP@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_PARADROP
EXTRN	?getMISSION_AIRLIFT@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_AIRLIFT
EXTRN	?getMISSION_SET_UP_FOR_RANGED_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_SET_UP_FOR_RANGED_ATTACK
EXTRN	?GetBestBuildRoute@CvUnit@@QBE?AW4RouteTypes@@PAVCvPlot@@PAW4BuildTypes@@@Z:PROC ; CvUnit::GetBestBuildRoute
EXTRN	?at@CvUnit@@QBE_NHH@Z:PROC			; CvUnit::at
EXTRN	?HeadMissionQueueNode@CvUnit@@IAEPAUMissionData@@XZ:PROC ; CvUnit::HeadMissionQueueNode
EXTRN	?UnitBuild@CvUnit@@QAE_NW4BuildTypes@@@Z:PROC	; CvUnit::UnitBuild
EXTRN	?AttackNuclear@CvUnitCombat@@SA?AW4ATTACK_RESULT@1@AAVCvUnit@@HHW4ATTACK_OPTION@1@@Z:PROC ; CvUnitCombat::AttackNuclear
EXTRN	?getMISSION_NUKE@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_NUKE
EXTRN	?AttackRanged@CvUnitCombat@@SA?AW4ATTACK_RESULT@1@AAVCvUnit@@HHW4ATTACK_OPTION@1@@Z:PROC ; CvUnitCombat::AttackRanged
EXTRN	?getMISSION_RANGE_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_RANGE_ATTACK
EXTRN	?isPotentialEnemy@CvUnit@@QBE_NW4TeamTypes@@PBVCvPlot@@@Z:PROC ; CvUnit::isPotentialEnemy
EXTRN	?GetMissionAIPlot@CvUnit@@QAEPAVCvPlot@@XZ:PROC	; CvUnit::GetMissionAIPlot
EXTRN	?isOwned@CvPlot@@QBE_NXZ:PROC			; CvPlot::isOwned
EXTRN	?GetMissionAIType@CvUnit@@QAE?AW4MissionAITypes@@XZ:PROC ; CvUnit::GetMissionAIType
EXTRN	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z:PROC	; CvPlayer::getUnit
EXTRN	?getBestDefender@CvPlot@@QAE?AV?$FObjectHandle@VCvUnit@@@@W4PlayerTypes@@0PBVCvUnit@@_N222@Z:PROC ; CvPlot::getBestDefender
EXTRN	?AI_getUnitAIType@CvUnit@@QBE?AW4UnitAITypes@@XZ:PROC ; CvUnit::AI_getUnitAIType
EXTRN	?getMISSION_MOVE_TO_UNIT@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_MOVE_TO_UNIT
EXTRN	?ReadyToMove@CvUnit@@QBE_NXZ:PROC		; CvUnit::ReadyToMove
EXTRN	?AreUnitsOfSameType@CvUnit@@QBE_NABV1@_N@Z:PROC	; CvUnit::AreUnitsOfSameType
EXTRN	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z:PROC	; CvPlot::getUnitByIndex
EXTRN	?getNumUnits@CvPlot@@QBEHXZ:PROC		; CvPlot::getNumUnits
EXTRN	?getMISSION_SWAP_UNITS@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_SWAP_UNITS
EXTRN	?UnitRoadTo@CvUnit@@QAE_NHHH@Z:PROC		; CvUnit::UnitRoadTo
EXTRN	?getMISSION_ROUTE_TO@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_ROUTE_TO
EXTRN	?UnitPathTo@CvUnit@@QAEHHHHH_N@Z:PROC		; CvUnit::UnitPathTo
EXTRN	?getDomainType@CvUnit@@QBE?AW4DomainTypes@@XZ:PROC ; CvUnit::getDomainType
EXTRN	?getMISSION_DISEMBARK@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_DISEMBARK
EXTRN	?getMISSION_EMBARK@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_EMBARK
EXTRN	?UnitAttack@CvUnit@@QAE_NHHHH@Z:PROC		; CvUnit::UnitAttack
EXTRN	?GetCombatPrediction@CvGame@@QAE?AW4CombatPredictionTypes@@PBVCvUnit@@0@Z:PROC ; CvGame::GetCombatPrediction
EXTRN	?getVisibleEnemyDefender@CvPlot@@QAEPAVCvUnit@@W4PlayerTypes@@@Z:PROC ; CvPlot::getVisibleEnemyDefender
EXTRN	__imp__strcpy_s:PROC
EXTRN	?GetPlotIndex@CvPlot@@QBEHXZ:PROC		; CvPlot::GetPlotIndex
EXTRN	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z:PROC ; CvGame::isOption
EXTRN	?IsCombatWarned@CvGame@@QBE_NXZ:PROC		; CvGame::IsCombatWarned
EXTRN	?isNetworkMultiplayerGame@CvPreGame@@YA_NXZ:PROC ; CvPreGame::isNetworkMultiplayerGame
EXTRN	?isHuman@CvUnit@@QBE_NXZ:PROC			; CvUnit::isHuman
EXTRN	?canMoveInto@CvUnit@@QBE_NABVCvPlot@@E@Z:PROC	; CvUnit::canMoveInto
EXTRN	?getTeam@CvUnit@@QBE?AW4TeamTypes@@XZ:PROC	; CvUnit::getTeam
EXTRN	?IsAutomated@CvUnit@@QBE_NXZ:PROC		; CvUnit::IsAutomated
EXTRN	?canMove@CvUnit@@QBE_NXZ:PROC			; CvUnit::canMove
EXTRN	?IsDoingPartialMove@CvUnit@@QBE_NXZ:PROC	; CvUnit::IsDoingPartialMove
EXTRN	?getMISSION_MOVE_TO@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_MOVE_TO
EXTRN	?SetActivityType@CvUnit@@QAEXW4ActivityTypes@@@Z:PROC ; CvUnit::SetActivityType
EXTRN	?ClearPathCache@CvUnit@@IAEXXZ:PROC		; CvUnit::ClearPathCache
EXTRN	__CxxThrowException@8:PROC
;	COMDAT ??_C@_0CA@INKFIMDI@TXT_KEY_ADVISOR_BAD_ATTACK_BODY?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
CONST	SEGMENT
??_C@_0CA@INKFIMDI@TXT_KEY_ADVISOR_BAD_ATTACK_BODY?$AA@ DB 'TXT_KEY_ADVIS'
	DB	'OR_BAD_ATTACK_BODY', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@PKJLOIOI@TXT_KEY_ADVISOR_CITY_ATTACK_BODY@
CONST	SEGMENT
??_C@_0CB@PKJLOIOI@TXT_KEY_ADVISOR_CITY_ATTACK_BODY@ DB 'TXT_KEY_ADVISOR_'
	DB	'CITY_ATTACK_BODY', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z$7
	DD	00H
	DD	FLAT:__unwindfunclet$?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z$8
	DD	00H
	DD	FLAT:__unwindfunclet$?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z$11
	DD	00H
	DD	FLAT:__unwindfunclet$?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z$12
	DD	00H
	DD	FLAT:__unwindfunclet$?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z$13
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvunitmission.cpp
xdata$x	ENDS
;	COMDAT ?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z
_TEXT	SEGMENT
tv1191 = -2224						; size = 4
tv1226 = -2220						; size = 4
tv1113 = -2216						; size = 4
tv1100 = -2212						; size = 4
tv1037 = -2208						; size = 4
tv1027 = -2204						; size = 4
tv997 = -2200						; size = 4
tv1218 = -2196						; size = 4
tv1336 = -2192						; size = 4
tv367 = -2188						; size = 4
tv338 = -2184						; size = 4
tv300 = -2180						; size = 4
tv264 = -2176						; size = 4
tv211 = -2172						; size = 4
tv200 = -2168						; size = 4
tv1301 = -2164						; size = 4
tv1310 = -2160						; size = 4
$T220801 = -2156					; size = 4
$T220797 = -2152					; size = 4
$T220779 = -2148					; size = 4
$T220793 = -1920					; size = 8
$T220792 = -1912					; size = 4
$T220621 = -1908					; size = 4
$T220617 = -1904					; size = 4
$T220613 = -1900					; size = 4
$T220609 = -1896					; size = 4
$T220605 = -1892					; size = 4
$T220596 = -1888					; size = 4
$T220592 = -1884					; size = 4
$T220588 = -1880					; size = 4
$T220584 = -1876					; size = 4
$T220580 = -1872					; size = 4
$T220570 = -1868					; size = 4
$T220563 = -1864					; size = 4
$T220559 = -1860					; size = 4
$T220555 = -1856					; size = 4
$T220551 = -1852					; size = 4
$T220547 = -1848					; size = 4
$T220543 = -1844					; size = 4
$T220534 = -1840					; size = 4
$T220530 = -1836					; size = 4
$T220526 = -1832					; size = 4
$T220522 = -1828					; size = 4
$T220513 = -1824					; size = 4
$T220509 = -1820					; size = 4
$T220505 = -1816					; size = 4
_inst$220500 = -1812					; size = 4
$T220496 = -1808					; size = 4
$T220484 = -1804					; size = 4
$T220477 = -1800					; size = 4
$T220473 = -1796					; size = 4
_inst$220468 = -1792					; size = 4
$T220464 = -1788					; size = 4
$T220452 = -1784					; size = 4
_inst$220447 = -1780					; size = 4
$T220443 = -1776					; size = 4
$T220434 = -1772					; size = 4
__Ptr$220433 = -1768					; size = 4
$T220429 = -1764					; size = 4
__Cvtptr$220427 = -1760					; size = 4
__Ans$220428 = -1756					; size = 4
$T220418 = -1752					; size = 4
$T220414 = -1748					; size = 4
$T220410 = -1744					; size = 4
$T220406 = -1740					; size = 4
$T220397 = -1736					; size = 4
$T220393 = -1732					; size = 4
$T220389 = -1728					; size = 4
$T220385 = -1724					; size = 4
$T220375 = -1720					; size = 4
$T220371 = -1716					; size = 4
$T220364 = -1712					; size = 4
$T220351 = -1708					; size = 4
$T220347 = -1704					; size = 4
$T220340 = -1700					; size = 4
$T220330 = -1696					; size = 4
$T220326 = -1692					; size = 4
$T220322 = -1688					; size = 4
$T220318 = -1684					; size = 4
$T220314 = -1680					; size = 4
$T220310 = -1676					; size = 4
$T220306 = -1672					; size = 4
$T220302 = -1668					; size = 4
$T220298 = -1664					; size = 4
$T220285 = -1660					; size = 4
$T220281 = -1656					; size = 4
$T220272 = -1652					; size = 4
$T220268 = -1648					; size = 4
$T220259 = -1644					; size = 4
$T220246 = -1640					; size = 4
$T220242 = -1636					; size = 4
_playerID$220239 = -1632				; size = 4
$T220225 = -1628					; size = 4
_playerID$220222 = -1624				; size = 4
$T220208 = -1620					; size = 4
$T220204 = -1616					; size = 4
$T220195 = -1612					; size = 4
$T220191 = -1608					; size = 4
$T220190 = -1604					; size = 4
$T220186 = -1600					; size = 4
$T220182 = -1596					; size = 4
$T220178 = -1592					; size = 4
$T220174 = -1588					; size = 4
$T220167 = -1584					; size = 4
$T220157 = -1580					; size = 4
$T220144 = -1576					; size = 4
$T220140 = -1572					; size = 4
$T220136 = -1568					; size = 4
$T220127 = -1564					; size = 4
$T220123 = -1560					; size = 4
$T220119 = -1556					; size = 4
$T220115 = -1552					; size = 4
$T220114 = -1548					; size = 4
_playerID$220106 = -1544				; size = 4
$T220097 = -1540					; size = 4
$T220088 = -1532					; size = 4
$T220084 = -1528					; size = 4
$T220077 = -1524					; size = 4
$T220073 = -1520					; size = 4
$T220069 = -1516					; size = 4
$T220065 = -1512					; size = 4
$T220061 = -1508					; size = 4
$T220060 = -1504					; size = 4
$T220029 = -1500					; size = 4
$T220024 = -1496					; size = 4
$T220020 = -1489					; size = 1
$T220009 = -1488					; size = 4
$T220005 = -1481					; size = 1
_iMapY$220038 = -1480					; size = 4
_iMapX$220037 = -1476					; size = 4
$T219998 = -1472					; size = 4
$T219994 = -1468					; size = 4
$T219990 = -1464					; size = 4
$T219983 = -1460					; size = 4
$T219979 = -1456					; size = 4
$T219975 = -1452					; size = 4
$T219965 = -1448					; size = 4
$T219961 = -1444					; size = 4
$T219957 = -1440					; size = 4
$T219950 = -1436					; size = 4
$T219943 = -1432					; size = 4
$T219939 = -1428					; size = 4
$T219935 = -1424					; size = 4
$T219931 = -1420					; size = 4
$T219927 = -1416					; size = 4
$T219918 = -1412					; size = 4
$T219914 = -1408					; size = 4
$T219907 = -1404					; size = 4
$T219900 = -1400					; size = 4
$T219896 = -1396					; size = 4
$T219887 = -1385					; size = 1
$T219886 = -1384					; size = 4
$T219876 = -1380					; size = 4
$T219872 = -1376					; size = 4
$T219868 = -1372					; size = 4
$T219864 = -1368					; size = 4
$T219860 = -1364					; size = 4
$T219856 = -1360					; size = 4
$T219852 = -1356					; size = 4
$T219848 = -1349					; size = 1
$T219847 = -1348					; size = 4
$T219837 = -1344					; size = 4
$T219833 = -1340					; size = 4
$T219829 = -1336					; size = 4
$T219828 = -1332					; size = 4
$T219795 = -1328					; size = 4
$T219782 = -1324					; size = 4
$T219778 = -1320					; size = 4
$T219771 = -1316					; size = 4
$T219767 = -1309					; size = 1
$T219763 = -1308					; size = 4
$T219759 = -1301					; size = 1
_iMapY$219827 = -1300					; size = 4
_iMapX$219826 = -1296					; size = 4
$T219752 = -1292					; size = 4
$T219748 = -1288					; size = 4
$T219744 = -1284					; size = 4
$T219740 = -1280					; size = 4
$T219736 = -1276					; size = 4
$T219732 = -1272					; size = 4
$T219728 = -1268					; size = 4
$T219721 = -1264					; size = 4
$T219717 = -1260					; size = 4
$T219699 = -1256					; size = 4
$T219714 = -1252					; size = 8
$T219713 = -1244					; size = 4
$T219683 = -1240					; size = 4
$T219666 = -1236					; size = 4
$T219665 = -1232					; size = 4
$T219662 = -1228					; size = 4
$T219661 = -1224					; size = 4
$T219660 = -1220					; size = 4
$T219659 = -1216					; size = 4
$T219658 = -1212					; size = 4
$T219657 = -1208					; size = 8
$T219656 = -1197					; size = 1
$T219655 = -1196					; size = 4
_iCameraTime$217883 = -1192				; size = 4
_kMissionData$217880 = -1188				; size = 4
_pDllUnit$217877 = -1184				; size = 4
_pDllPlot$217850 = -1180				; size = 4
_pkWaitingFor$217793 = -1176				; size = 4
_pTargetUnit$217784 = -1172				; size = 8
_kMissionData$217774 = -1164				; size = 4
_pMissionPlot$217757 = -1160				; size = 4
_pTargetUnit$217751 = -1156				; size = 8
_pUnit2$217743 = -1148					; size = 4
_iI$217739 = -1144					; size = 4
_pOriginationPlot$217735 = -1140			; size = 4
_pTargetPlot$217736 = -1136				; size = 4
_iThisETA$217725 = -1132				; size = 4
_kMissionData$217720 = -1128				; size = 4
_kPopup$217712 = -1124					; size = 536
_ePrediction$217708 = -588				; size = 4
_pDefender$217706 = -584				; size = 4
_kPopup$217696 = -580					; size = 536
__$ArrayPad$ = -40					; size = 4
_bCityAttackInterrupt$217688 = -34			; size = 1
_bBadAttackInterrupt$217689 = -33			; size = 1
_pPlot$217685 = -32					; size = 4
_bDone$217673 = -26					; size = 1
_bAction$217674 = -25					; size = 1
_pkMissionData$217681 = -24				; size = 4
_kMissionQueue$217718 = -20				; size = 4
_bContinueMissionRestart$ = -13				; size = 1
__$EHRec$ = -12						; size = 12
_hUnit$ = 8						; size = 8
_iSteps$ = 16						; size = 4
_iETA$ = 20						; size = 4
?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z PROC ; CvUnitMission::ContinueMission, COMDAT

; 393  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 2212				; 000008a4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 394  : 	hUnit->ClearPathCache();		// At the start of the continue, clear any cached path.  The cache will be rebuilt and reused while the mission loops in this method

	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?ClearPathCache@CvUnit@@IAEXXZ		; CvUnit::ClearPathCache

; 395  : 
; 396  : 	bool bContinueMissionRestart = true;	// to make this function no longer recursive

	mov	BYTE PTR _bContinueMissionRestart$[ebp], 1
$LN109@ContinueMi:

; 397  : 	while(bContinueMissionRestart)

	movzx	eax, BYTE PTR _bContinueMissionRestart$[ebp]
	test	eax, eax
	je	$ContinueMissionExit$217677

; 398  : 	{
; 399  : 		bContinueMissionRestart = false;

	mov	BYTE PTR _bContinueMissionRestart$[ebp], 0

; 400  : 
; 401  : 		bool bDone = false;   // are we done with mission?

	mov	BYTE PTR _bDone$217673[ebp], 0

; 402  : 		bool bAction = false; // are we taking an action this turn?

	mov	BYTE PTR _bAction$217674[ebp], 0

; 403  : 
; 404  : 		// slewis - important modification!
; 405  : 		// This function may call the pathfinder multiple times.
; 406  : 		// That can cause partial moves to be impossible in certain circumstances.
; 407  : 		// We need a way to determine if the pathfinder can be used without breaking the currently built path.
; 408  : 		// I added unit flags to accomplish this. (While this flag does not necessarily need to be serialized,
; 409  : 		// the variable is serialized for future proofing.)
; 410  : 		hUnit->m_iFlags = hUnit->m_iFlags | CvUnit::UNITFLAG_EVALUATING_MISSION;

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219683[ebp], ecx
	mov	edx, DWORD PTR $T219683[ebp]
	mov	eax, DWORD PTR [edx+1364]
	or	eax, 1
	mov	DWORD PTR $T219655[ebp], eax
	mov	ecx, DWORD PTR _hUnit$[ebp]
	add	ecx, 1360				; 00000550H
	mov	DWORD PTR $T219717[ebp], ecx
	mov	edx, DWORD PTR $T219717[ebp]
	mov	eax, DWORD PTR $T219655[ebp]
	cmp	eax, DWORD PTR [edx+4]
	je	SHORT $LN133@ContinueMi
	mov	ecx, DWORD PTR $T219717[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR $T219655[ebp]
	je	SHORT $LN133@ContinueMi
	mov	eax, DWORD PTR $T219717[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T219699[ebp], ecx
	mov	edx, DWORD PTR $T219717[ebp]
	mov	DWORD PTR $T219713[ebp], edx
	lea	eax, DWORD PTR $T219713[ebp]
	push	eax
	lea	ecx, DWORD PTR $T219714[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T219699[ebp]
	add	ecx, 20					; 00000014H
	call	?insert@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@_N@2@ABQAVFAutoVariableBase@@@Z ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::insert
	mov	edx, DWORD PTR $T219717[ebp]
	mov	eax, DWORD PTR $T219655[ebp]
	mov	DWORD PTR [edx+4], eax
$LN133@ContinueMi:

; 411  : 
; 412  : 		// slewis - more important info!
; 413  : 		// I replaced all the "return"s in this function with "goto"s.
; 414  : 		// This ensures that every way this function is exited, it always clears out the unit flag evaluation mission.
; 415  : 		// I know gotos are frowned upon, but if anyone else wants to re-write and test this function, be my guest.
; 416  : 
; 417  : 		CvAssert(!hUnit->isInCombat());
; 418  : 		CvAssert(hUnit->HeadMissionQueueNode() != NULL);
; 419  : 		CvAssert(hUnit->getOwner() != NO_PLAYER);
; 420  : 		CvAssert(hUnit->GetActivityType() == ACTIVITY_MISSION);
; 421  : 
; 422  : 		if(HeadMissionQueueNode(hUnit->m_missionQueue) == NULL)

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219721[ebp], ecx
	mov	edx, DWORD PTR $T219721[ebp]
	add	edx, 2600				; 00000a28H
	push	edx
	call	?HeadMissionQueueNode@CvUnitMission@@CAPAUMissionData@@AAV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::HeadMissionQueueNode
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN107@ContinueMi

; 423  : 		{
; 424  : 			// just in case...
; 425  : 			hUnit->SetActivityType(ACTIVITY_AWAKE);

	push	0
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?SetActivityType@CvUnit@@QAEXW4ActivityTypes@@@Z ; CvUnit::SetActivityType

; 426  : 			goto ContinueMissionExit;

	jmp	$ContinueMissionExit$217677
$LN107@ContinueMi:

; 427  : 		}
; 428  : 
; 429  : 		CvAssert(iSteps < 100);
; 430  : 		if(iSteps >= 100)

	cmp	DWORD PTR _iSteps$[ebp], 100		; 00000064H
	jl	SHORT $LN105@ContinueMi

; 431  : 			goto ContinueMissionExit;

	jmp	$ContinueMissionExit$217677
$LN105@ContinueMi:

; 432  : 
; 433  : 		const MissionData* pkMissionData = (HeadMissionQueueNode(hUnit->m_missionQueue));

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219728[ebp], eax
	mov	ecx, DWORD PTR $T219728[ebp]
	add	ecx, 2600				; 00000a28H
	push	ecx
	call	?HeadMissionQueueNode@CvUnitMission@@CAPAUMissionData@@AAV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::HeadMissionQueueNode
	add	esp, 4
	mov	DWORD PTR _pkMissionData$217681[ebp], eax

; 434  : 
; 435  : 		if(pkMissionData->iPushTurn == GC.getGame().getGameTurn() || (pkMissionData->iFlags & MOVE_UNITS_THROUGH_ENEMY))

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T219732[ebp], edx
	mov	ecx, DWORD PTR $T219732[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	mov	ecx, DWORD PTR _pkMissionData$217681[ebp]
	cmp	DWORD PTR [ecx+16], eax
	je	SHORT $LN102@ContinueMi
	mov	edx, DWORD PTR _pkMissionData$217681[ebp]
	mov	eax, DWORD PTR [edx+12]
	and	eax, 16					; 00000010H
	je	$LN103@ContinueMi
$LN102@ContinueMi:

; 436  : 		{
; 437  : #ifdef AUI_UNIT_MISSION_FIX_CONTINUE_MISSION_CIVILIANS_DONT_ATTEMPT_ATTACK
; 438  : 			if (pkMissionData->eMissionType == CvTypes::getMISSION_MOVE_TO() && !hUnit->IsDoingPartialMove() && hUnit->canMove() && hUnit->IsCanAttack() && hUnit->m_unitMoveLocs.size() == 0)
; 439  : #else
; 440  : 			if(pkMissionData->eMissionType == CvTypes::getMISSION_MOVE_TO() && !hUnit->IsDoingPartialMove() && hUnit->canMove() && hUnit->m_unitMoveLocs.size() == 0)

	call	?getMISSION_MOVE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MOVE_TO
	mov	ecx, DWORD PTR _pkMissionData$217681[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	$LN103@ContinueMi
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219736[ebp], edx
	mov	ecx, DWORD PTR $T219736[ebp]
	call	?IsDoingPartialMove@CvUnit@@QBE_NXZ	; CvUnit::IsDoingPartialMove
	movzx	eax, al
	test	eax, eax
	jne	$LN103@ContinueMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219740[ebp], ecx
	mov	ecx, DWORD PTR $T219740[ebp]
	call	?canMove@CvUnit@@QBE_NXZ		; CvUnit::canMove
	movzx	edx, al
	test	edx, edx
	je	$LN103@ContinueMi
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219744[ebp], eax
	mov	ecx, DWORD PTR $T219744[ebp]
	mov	edx, DWORD PTR [ecx+2400]
	mov	DWORD PTR $T219748[ebp], edx
	cmp	DWORD PTR $T219748[ebp], 0
	jne	$LN103@ContinueMi

; 441  : #endif
; 442  : 			{
; 443  : 				CvPlot* pPlot = GC.getMap().plot(pkMissionData->iData1, pkMissionData->iData2);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T219752[ebp], eax
	mov	ecx, DWORD PTR _pkMissionData$217681[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T219829[ebp], edx
	mov	eax, DWORD PTR _pkMissionData$217681[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T219828[ebp], ecx
	cmp	DWORD PTR $T219828[ebp], -2147483647	; 80000001H
	je	SHORT $LN158@ContinueMi
	cmp	DWORD PTR $T219829[ebp], -2147483647	; 80000001H
	jne	SHORT $LN159@ContinueMi
$LN158@ContinueMi:
	mov	DWORD PTR _pPlot$217685[ebp], 0
	jmp	$LN160@ContinueMi
$LN159@ContinueMi:
	mov	edx, DWORD PTR $T219752[ebp]
	mov	al, BYTE PTR [edx+4056]
	mov	BYTE PTR $T219759[ebp], al
	mov	ecx, DWORD PTR $T219752[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T219763[ebp], edx
	movzx	eax, BYTE PTR $T219759[ebp]
	push	eax
	mov	ecx, DWORD PTR $T219763[ebp]
	push	ecx
	mov	edx, DWORD PTR $T219828[ebp]
	push	edx
	call	?coordRange@@YAHHH_N@Z			; coordRange
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iMapX$219826[ebp], eax
	mov	eax, DWORD PTR $T219752[ebp]
	mov	cl, BYTE PTR [eax+4057]
	mov	BYTE PTR $T219767[ebp], cl
	mov	edx, DWORD PTR $T219752[ebp]
	mov	eax, DWORD PTR [edx+4024]
	mov	DWORD PTR $T219771[ebp], eax
	movzx	ecx, BYTE PTR $T219767[ebp]
	push	ecx
	mov	edx, DWORD PTR $T219771[ebp]
	push	edx
	mov	eax, DWORD PTR $T219829[ebp]
	push	eax
	call	?coordRange@@YAHHH_N@Z			; coordRange
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iMapY$219827[ebp], eax
	cmp	DWORD PTR _iMapX$219826[ebp], 0
	jl	SHORT $LN174@ContinueMi
	mov	ecx, DWORD PTR $T219752[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T219778[ebp], edx
	mov	eax, DWORD PTR _iMapX$219826[ebp]
	cmp	eax, DWORD PTR $T219778[ebp]
	jge	SHORT $LN174@ContinueMi
	cmp	DWORD PTR _iMapY$219827[ebp], 0
	jl	SHORT $LN174@ContinueMi
	mov	ecx, DWORD PTR $T219752[ebp]
	mov	edx, DWORD PTR [ecx+4024]
	mov	DWORD PTR $T219782[ebp], edx
	mov	eax, DWORD PTR _iMapY$219827[ebp]
	cmp	eax, DWORD PTR $T219782[ebp]
	jge	SHORT $LN174@ContinueMi
	mov	DWORD PTR tv1310[ebp], 1
	jmp	SHORT $LN172@ContinueMi
$LN174@ContinueMi:
	mov	DWORD PTR tv1310[ebp], 0
$LN172@ContinueMi:
	cmp	DWORD PTR tv1310[ebp], 0
	je	SHORT $LN162@ContinueMi
	mov	ecx, DWORD PTR $T219752[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T219795[ebp], edx
	mov	eax, DWORD PTR _iMapY$219827[ebp]
	imul	eax, DWORD PTR $T219795[ebp]
	add	eax, DWORD PTR _iMapX$219826[ebp]
	imul	eax, 484				; 000001e4H
	mov	ecx, DWORD PTR $T219752[ebp]
	add	eax, DWORD PTR [ecx+4068]
	mov	DWORD PTR tv1301[ebp], eax
	jmp	SHORT $LN163@ContinueMi
$LN162@ContinueMi:
	mov	DWORD PTR tv1301[ebp], 0
$LN163@ContinueMi:
	mov	edx, DWORD PTR tv1301[ebp]
	mov	DWORD PTR _pPlot$217685[ebp], edx
$LN160@ContinueMi:

; 444  : 				if(hUnit->IsAutomated() && pPlot->isVisible(hUnit->getTeam()) && hUnit->canMoveInto(*pPlot, CvUnit::MOVEFLAG_ATTACK))

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219833[ebp], eax
	mov	ecx, DWORD PTR $T219833[ebp]
	call	?IsAutomated@CvUnit@@QBE_NXZ		; CvUnit::IsAutomated
	movzx	ecx, al
	test	ecx, ecx
	je	$LN100@ContinueMi
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219837[ebp], edx
	mov	ecx, DWORD PTR $T219837[ebp]
	call	?getTeam@CvUnit@@QBE?AW4TeamTypes@@XZ	; CvUnit::getTeam
	mov	DWORD PTR $T219847[ebp], eax
	cmp	DWORD PTR $T219847[ebp], -1
	jne	SHORT $LN191@ContinueMi
	mov	BYTE PTR $T219848[ebp], 0
	jmp	SHORT $LN189@ContinueMi
$LN191@ContinueMi:
	mov	eax, DWORD PTR _pPlot$217685[ebp]
	mov	ecx, DWORD PTR [eax+156]
	mov	edx, DWORD PTR $T219847[ebp]
	movsx	eax, WORD PTR [ecx+edx*2]
	xor	ecx, ecx
	test	eax, eax
	setg	cl
	mov	BYTE PTR $T219848[ebp], cl
$LN189@ContinueMi:
	movzx	edx, BYTE PTR $T219848[ebp]
	test	edx, edx
	je	SHORT $LN100@ContinueMi
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219852[ebp], eax
	push	1
	mov	ecx, DWORD PTR _pPlot$217685[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T219852[ebp]
	call	?canMoveInto@CvUnit@@QBE_NABVCvPlot@@E@Z ; CvUnit::canMoveInto
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN100@ContinueMi

; 445  : 				{
; 446  : 					// if we're automated and try to attack, consider this move OVAH
; 447  : 					bDone = true;

	mov	BYTE PTR _bDone$217673[ebp], 1

; 448  : 				}
; 449  : 				else

	jmp	$LN103@ContinueMi
$LN100@ContinueMi:

; 450  : 				{
; 451  : 					bool bCityAttackInterrupt = gDLL->GetAdvisorCityAttackInterrupt();

	mov	eax, DWORD PTR $T219856[ebp]
	mov	DWORD PTR tv200[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv200[ebp], ecx
	mov	edx, DWORD PTR tv200[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv200[ebp]
	mov	edx, DWORD PTR [eax+864]
	call	edx
	mov	BYTE PTR _bCityAttackInterrupt$217688[ebp], al

; 452  : 					bool bBadAttackInterrupt = gDLL->GetAdvisorBadAttackInterrupt();

	mov	eax, DWORD PTR $T219860[ebp]
	mov	DWORD PTR tv211[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv211[ebp], ecx
	mov	edx, DWORD PTR tv211[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv211[ebp]
	mov	edx, DWORD PTR [eax+856]
	call	edx
	mov	BYTE PTR _bBadAttackInterrupt$217689[ebp], al

; 453  : 					if(hUnit->isHuman() && !CvPreGame::isNetworkMultiplayerGame() && !GC.getGame().IsCombatWarned() && (bCityAttackInterrupt || bBadAttackInterrupt))

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219864[ebp], eax
	mov	ecx, DWORD PTR $T219864[ebp]
	call	?isHuman@CvUnit@@QBE_NXZ		; CvUnit::isHuman
	movzx	ecx, al
	test	ecx, ecx
	je	$LN98@ContinueMi
	call	?isNetworkMultiplayerGame@CvPreGame@@YA_NXZ ; CvPreGame::isNetworkMultiplayerGame
	movzx	edx, al
	test	edx, edx
	jne	$LN98@ContinueMi
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T219868[ebp], eax
	mov	ecx, DWORD PTR $T219868[ebp]
	call	?IsCombatWarned@CvGame@@QBE_NXZ		; CvGame::IsCombatWarned
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN98@ContinueMi
	movzx	edx, BYTE PTR _bCityAttackInterrupt$217688[ebp]
	test	edx, edx
	jne	SHORT $LN97@ContinueMi
	movzx	eax, BYTE PTR _bBadAttackInterrupt$217689[ebp]
	test	eax, eax
	je	$LN98@ContinueMi
$LN97@ContinueMi:

; 454  : 					{
; 455  : 						if(hUnit->canMoveInto(*pPlot, CvUnit::MOVEFLAG_ATTACK) && pPlot->isVisible(hUnit->getTeam()))

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219872[ebp], ecx
	push	1
	mov	edx, DWORD PTR _pPlot$217685[ebp]
	push	edx
	mov	ecx, DWORD PTR $T219872[ebp]
	call	?canMoveInto@CvUnit@@QBE_NABVCvPlot@@E@Z ; CvUnit::canMoveInto
	movzx	eax, al
	test	eax, eax
	je	$LN98@ContinueMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219876[ebp], ecx
	mov	ecx, DWORD PTR $T219876[ebp]
	call	?getTeam@CvUnit@@QBE?AW4TeamTypes@@XZ	; CvUnit::getTeam
	mov	DWORD PTR $T219886[ebp], eax
	cmp	DWORD PTR $T219886[ebp], -1
	jne	SHORT $LN210@ContinueMi
	mov	BYTE PTR $T219887[ebp], 0
	jmp	SHORT $LN208@ContinueMi
$LN210@ContinueMi:
	mov	edx, DWORD PTR _pPlot$217685[ebp]
	mov	eax, DWORD PTR [edx+156]
	mov	ecx, DWORD PTR $T219886[ebp]
	movsx	edx, WORD PTR [eax+ecx*2]
	xor	eax, eax
	test	edx, edx
	setg	al
	mov	BYTE PTR $T219887[ebp], al
$LN208@ContinueMi:
	movzx	ecx, BYTE PTR $T219887[ebp]
	test	ecx, ecx
	je	$LN98@ContinueMi

; 456  : 						{
; 457  : 							if(pPlot->isCity())

	mov	ecx, DWORD PTR _pPlot$217685[ebp]
	call	?isCity@CvPlot@@QBE_NXZ			; CvPlot::isCity
	movzx	edx, al
	test	edx, edx
	je	$LN95@ContinueMi

; 458  : 							{
; 459  : 								if(bCityAttackInterrupt)

	movzx	eax, BYTE PTR _bCityAttackInterrupt$217688[ebp]
	test	eax, eax
	je	$LN94@ContinueMi

; 460  : 								{
; 461  : 									GC.GetEngineUserInterface()->SetDontShowPopups(false);

	mov	ecx, DWORD PTR $T219896[ebp]
	mov	DWORD PTR tv264[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv264[ebp], edx
	push	0
	mov	eax, DWORD PTR tv264[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv264[ebp]
	mov	eax, DWORD PTR [edx+556]
	call	eax

; 462  : 
; 463  : 									if(!GC.getGame().isOption(GAMEOPTION_NO_TUTORIAL))

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T219900[ebp], ecx
	push	20					; 00000014H
	mov	ecx, DWORD PTR $T219900[ebp]
	call	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z ; CvGame::isOption
	movzx	edx, al
	test	edx, edx
	jne	$LN94@ContinueMi

; 464  : 									{
; 465  : 										// do city alert
; 466  : 										CvPopupInfo kPopup(BUTTONPOPUP_ADVISOR_MODAL);

	mov	DWORD PTR _kPopup$217696[ebp], -1
	mov	DWORD PTR _kPopup$217696[ebp+4], -1
	mov	DWORD PTR _kPopup$217696[ebp+8], -1
	mov	DWORD PTR _kPopup$217696[ebp+12], 0
	mov	BYTE PTR _kPopup$217696[ebp+16], 0
	mov	BYTE PTR _kPopup$217696[ebp+17], 0
	mov	DWORD PTR _kPopup$217696[ebp+20], 72	; 00000048H
	mov	BYTE PTR _kPopup$217696[ebp+24], 0

; 467  : 										kPopup.iData1 = ADVISOR_MILITARY;

	mov	DWORD PTR _kPopup$217696[ebp], 0

; 468  : 										kPopup.iData2 = pPlot->GetPlotIndex();

	mov	ecx, DWORD PTR _pPlot$217685[ebp]
	call	?GetPlotIndex@CvPlot@@QBEHXZ		; CvPlot::GetPlotIndex
	mov	DWORD PTR _kPopup$217696[ebp+4], eax

; 469  : 										kPopup.iData3 = hUnit->plot()->GetPlotIndex();

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219907[ebp], eax
	mov	ecx, DWORD PTR $T219907[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	ecx, eax
	call	?GetPlotIndex@CvPlot@@QBEHXZ		; CvPlot::GetPlotIndex
	mov	DWORD PTR _kPopup$217696[ebp+8], eax

; 470  : 										strcpy_s(kPopup.szText, "TXT_KEY_ADVISOR_CITY_ATTACK_BODY");

	push	OFFSET ??_C@_0CB@PKJLOIOI@TXT_KEY_ADVISOR_CITY_ATTACK_BODY@
	push	512					; 00000200H
	lea	ecx, DWORD PTR _kPopup$217696[ebp+24]
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	add	esp, 12					; 0000000cH

; 471  : 										kPopup.bOption1 = true;

	mov	BYTE PTR _kPopup$217696[ebp+16], 1

; 472  : 										GC.GetEngineUserInterface()->AddPopup(kPopup);

	mov	edx, DWORD PTR $T219914[ebp]
	mov	DWORD PTR tv300[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv300[ebp], eax
	lea	ecx, DWORD PTR _kPopup$217696[ebp]
	push	ecx
	mov	edx, DWORD PTR tv300[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv300[ebp]
	mov	edx, DWORD PTR [eax+180]
	call	edx

; 473  : 										goto ContinueMissionExit;

	jmp	$ContinueMissionExit$217677
$LN94@ContinueMi:

; 474  : 									}
; 475  : 								}
; 476  : 							}

	jmp	$LN98@ContinueMi
$LN95@ContinueMi:

; 477  : 							else if(bBadAttackInterrupt)

	movzx	eax, BYTE PTR _bBadAttackInterrupt$217689[ebp]
	test	eax, eax
	je	$LN98@ContinueMi

; 478  : 							{
; 479  : 								CvUnit* pDefender = pPlot->getVisibleEnemyDefender(hUnit->getOwner());

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219918[ebp], ecx
	mov	edx, DWORD PTR $T219918[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR $T219927[ebp], eax
	mov	ecx, DWORD PTR $T219927[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlot$217685[ebp]
	call	?getVisibleEnemyDefender@CvPlot@@QAEPAVCvUnit@@W4PlayerTypes@@@Z ; CvPlot::getVisibleEnemyDefender
	mov	DWORD PTR _pDefender$217706[ebp], eax

; 480  : 								if(pDefender)

	cmp	DWORD PTR _pDefender$217706[ebp], 0
	je	$LN98@ContinueMi

; 481  : 								{
; 482  : 									CombatPredictionTypes ePrediction = GC.getGame().GetCombatPrediction(hUnit.pointer(), pDefender);

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219931[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T219935[ebp], eax
	mov	ecx, DWORD PTR _pDefender$217706[ebp]
	push	ecx
	mov	edx, DWORD PTR $T219931[ebp]
	push	edx
	mov	ecx, DWORD PTR $T219935[ebp]
	call	?GetCombatPrediction@CvGame@@QAE?AW4CombatPredictionTypes@@PBVCvUnit@@0@Z ; CvGame::GetCombatPrediction
	mov	DWORD PTR _ePrediction$217708[ebp], eax

; 483  : 									if(ePrediction == COMBAT_PREDICTION_TOTAL_DEFEAT || ePrediction == COMBAT_PREDICTION_MAJOR_DEFEAT)

	cmp	DWORD PTR _ePrediction$217708[ebp], 2
	je	SHORT $LN87@ContinueMi
	cmp	DWORD PTR _ePrediction$217708[ebp], 6
	jne	$LN98@ContinueMi
$LN87@ContinueMi:

; 484  : 									{
; 485  : 										if(!GC.getGame().isOption(GAMEOPTION_NO_TUTORIAL))

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T219939[ebp], eax
	push	20					; 00000014H
	mov	ecx, DWORD PTR $T219939[ebp]
	call	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z ; CvGame::isOption
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN98@ContinueMi

; 486  : 										{
; 487  : 											GC.GetEngineUserInterface()->SetDontShowPopups(false);

	mov	edx, DWORD PTR $T219943[ebp]
	mov	DWORD PTR tv338[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv338[ebp], eax
	push	0
	mov	ecx, DWORD PTR tv338[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv338[ebp]
	mov	eax, DWORD PTR [edx+556]
	call	eax

; 488  : 											CvPopupInfo kPopup(BUTTONPOPUP_ADVISOR_MODAL);

	mov	DWORD PTR _kPopup$217712[ebp], -1
	mov	DWORD PTR _kPopup$217712[ebp+4], -1
	mov	DWORD PTR _kPopup$217712[ebp+8], -1
	mov	DWORD PTR _kPopup$217712[ebp+12], 0
	mov	BYTE PTR _kPopup$217712[ebp+16], 0
	mov	BYTE PTR _kPopup$217712[ebp+17], 0
	mov	DWORD PTR _kPopup$217712[ebp+20], 72	; 00000048H
	mov	BYTE PTR _kPopup$217712[ebp+24], 0

; 489  : 											kPopup.iData1 = ADVISOR_MILITARY;

	mov	DWORD PTR _kPopup$217712[ebp], 0

; 490  : 											kPopup.iData2 = pPlot->GetPlotIndex();

	mov	ecx, DWORD PTR _pPlot$217685[ebp]
	call	?GetPlotIndex@CvPlot@@QBEHXZ		; CvPlot::GetPlotIndex
	mov	DWORD PTR _kPopup$217712[ebp+4], eax

; 491  : 											kPopup.iData3 = hUnit->plot()->GetPlotIndex();

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219950[ebp], ecx
	mov	ecx, DWORD PTR $T219950[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	ecx, eax
	call	?GetPlotIndex@CvPlot@@QBEHXZ		; CvPlot::GetPlotIndex
	mov	DWORD PTR _kPopup$217712[ebp+8], eax

; 492  : 											strcpy_s(kPopup.szText, "TXT_KEY_ADVISOR_BAD_ATTACK_BODY");

	push	OFFSET ??_C@_0CA@INKFIMDI@TXT_KEY_ADVISOR_BAD_ATTACK_BODY?$AA@
	push	512					; 00000200H
	lea	edx, DWORD PTR _kPopup$217712[ebp+24]
	push	edx
	call	DWORD PTR __imp__strcpy_s
	add	esp, 12					; 0000000cH

; 493  : 											kPopup.bOption1 = false;

	mov	BYTE PTR _kPopup$217712[ebp+16], 0

; 494  : 											GC.GetEngineUserInterface()->AddPopup(kPopup);

	mov	eax, DWORD PTR $T219957[ebp]
	mov	DWORD PTR tv367[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv367[ebp], ecx
	lea	edx, DWORD PTR _kPopup$217712[ebp]
	push	edx
	mov	eax, DWORD PTR tv367[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv367[ebp]
	mov	eax, DWORD PTR [edx+180]
	call	eax

; 495  : 											goto ContinueMissionExit;

	jmp	$ContinueMissionExit$217677
$LN98@ContinueMi:

; 496  : 										}
; 497  : 
; 498  : 									}
; 499  : 								}
; 500  : 							}
; 501  : 						}
; 502  : 					}
; 503  : 
; 504  : 					if(hUnit->UnitAttack(pkMissionData->iData1, pkMissionData->iData2, pkMissionData->iFlags, iSteps))

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219961[ebp], ecx
	mov	edx, DWORD PTR _iSteps$[ebp]
	push	edx
	mov	eax, DWORD PTR _pkMissionData$217681[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _pkMissionData$217681[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _pkMissionData$217681[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR $T219961[ebp]
	call	?UnitAttack@CvUnit@@QAE_NHHHH@Z		; CvUnit::UnitAttack
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN103@ContinueMi

; 505  : 					{
; 506  : 						bDone = true;

	mov	BYTE PTR _bDone$217673[ebp], 1
$LN103@ContinueMi:

; 507  : 					}
; 508  : 				}
; 509  : 			}
; 510  : 		}
; 511  : 
; 512  : 		// extra crash protection, should never happen (but a previous bug in groupAttack was causing a NULL here)
; 513  : 		// while that bug is fixed, no reason to not be a little more careful
; 514  : 		if(HeadMissionQueueNode(hUnit->m_missionQueue) == NULL)

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219965[ebp], ecx
	mov	edx, DWORD PTR $T219965[ebp]
	add	edx, 2600				; 00000a28H
	push	edx
	call	?HeadMissionQueueNode@CvUnitMission@@CAPAUMissionData@@AAV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::HeadMissionQueueNode
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN257@ContinueMi

; 515  : 		{
; 516  : 			hUnit->SetActivityType(ACTIVITY_AWAKE);

	push	0
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?SetActivityType@CvUnit@@QAEXW4ActivityTypes@@@Z ; CvUnit::SetActivityType

; 517  : 			goto ContinueMissionExit;

	jmp	$ContinueMissionExit$217677

; 518  : 		}
; 519  : 
; 520  : 		const MissionQueue& kMissionQueue = hUnit->m_missionQueue;

$LN257@ContinueMi:
	mov	eax, DWORD PTR _hUnit$[ebp]
	add	eax, 2600				; 00000a28H
	mov	DWORD PTR _kMissionQueue$217718[ebp], eax

; 521  : 		// If there are units in the selection group, they can all move, and we're not done
; 522  : 		//   then try to follow the misision
; 523  : 		if(!bDone && hUnit->canMove() && !hUnit->IsDoingPartialMove())

	movzx	ecx, BYTE PTR _bDone$217673[ebp]
	test	ecx, ecx
	jne	$LN81@ContinueMi
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219975[ebp], edx
	mov	ecx, DWORD PTR $T219975[ebp]
	call	?canMove@CvUnit@@QBE_NXZ		; CvUnit::canMove
	movzx	eax, al
	test	eax, eax
	je	$LN81@ContinueMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219979[ebp], ecx
	mov	ecx, DWORD PTR $T219979[ebp]
	call	?IsDoingPartialMove@CvUnit@@QBE_NXZ	; CvUnit::IsDoingPartialMove
	movzx	edx, al
	test	edx, edx
	jne	$LN81@ContinueMi

; 524  : 		{
; 525  : 			const MissionData& kMissionData = *HeadMissionQueueNode(kMissionQueue);

	mov	eax, DWORD PTR _kMissionQueue$217718[ebp]
	push	eax
	call	?HeadMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::HeadMissionQueueNode
	add	esp, 4
	mov	DWORD PTR _kMissionData$217720[ebp], eax

; 526  : 
; 527  : 			if(kMissionData.eMissionType == CvTypes::getMISSION_MOVE_TO() ||
; 528  : 			        kMissionData.eMissionType == CvTypes::getMISSION_EMBARK() ||
; 529  : 			        kMissionData.eMissionType == CvTypes::getMISSION_DISEMBARK())

	call	?getMISSION_MOVE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MOVE_TO
	mov	ecx, DWORD PTR _kMissionData$217720[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN79@ContinueMi
	call	?getMISSION_EMBARK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_EMBARK
	mov	edx, DWORD PTR _kMissionData$217720[ebp]
	cmp	DWORD PTR [edx], eax
	je	SHORT $LN79@ContinueMi
	call	?getMISSION_DISEMBARK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_DISEMBARK
	mov	ecx, DWORD PTR _kMissionData$217720[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	$LN80@ContinueMi
$LN79@ContinueMi:

; 530  : 			{
; 531  : 				if(hUnit->getDomainType() == DOMAIN_AIR)

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219983[ebp], edx
	mov	ecx, DWORD PTR $T219983[ebp]
	call	?getDomainType@CvUnit@@QBE?AW4DomainTypes@@XZ ; CvUnit::getDomainType
	cmp	eax, 1
	jne	SHORT $LN78@ContinueMi

; 532  : 				{
; 533  : 					hUnit->UnitPathTo(kMissionData.iData1, kMissionData.iData2, kMissionData.iFlags);

	push	0
	push	-1
	mov	eax, DWORD PTR _kMissionData$217720[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _kMissionData$217720[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _kMissionData$217720[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?UnitPathTo@CvUnit@@QAEHHHHH_N@Z	; CvUnit::UnitPathTo

; 534  : 					bDone = true;

	mov	BYTE PTR _bDone$217673[ebp], 1

; 535  : 				}
; 536  : 				else

	jmp	SHORT $LN77@ContinueMi
$LN78@ContinueMi:

; 537  : 				{
; 538  : 					int iThisETA = hUnit->UnitPathTo(kMissionData.iData1, kMissionData.iData2, kMissionData.iFlags, iETA);

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219990[ebp], eax
	push	0
	mov	ecx, DWORD PTR _iETA$[ebp]
	push	ecx
	mov	edx, DWORD PTR _kMissionData$217720[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _kMissionData$217720[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _kMissionData$217720[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR $T219990[ebp]
	call	?UnitPathTo@CvUnit@@QAEHHHHH_N@Z	; CvUnit::UnitPathTo
	mov	DWORD PTR _iThisETA$217725[ebp], eax

; 539  : 					if(iThisETA > 0)

	cmp	DWORD PTR _iThisETA$217725[ebp], 0
	jle	SHORT $LN76@ContinueMi

; 540  : 					{
; 541  : 						bAction = true;

	mov	BYTE PTR _bAction$217674[ebp], 1

; 542  : 					}
; 543  : 					else

	jmp	SHORT $LN75@ContinueMi
$LN76@ContinueMi:

; 544  : 					{
; 545  : 						bDone = true;

	mov	BYTE PTR _bDone$217673[ebp], 1
$LN75@ContinueMi:

; 546  : 					}
; 547  : 
; 548  : 					// Save off the initial ETA, we will feed it back into the UnitPathTo so it can check to see if our ETA grows while we are in the loop.
; 549  : 					// This can happen as terrain gets revealed.
; 550  : 					if(iSteps == 0)

	cmp	DWORD PTR _iSteps$[ebp], 0
	jne	SHORT $LN77@ContinueMi

; 551  : 					{
; 552  : 						iETA = iThisETA;

	mov	edx, DWORD PTR _iThisETA$217725[ebp]
	mov	DWORD PTR _iETA$[ebp], edx
$LN77@ContinueMi:

; 553  : 					}
; 554  : 				}

	jmp	$LN81@ContinueMi
$LN80@ContinueMi:

; 555  : 			}
; 556  : 
; 557  : 			else if(kMissionData.eMissionType == CvTypes::getMISSION_ROUTE_TO())

	call	?getMISSION_ROUTE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ROUTE_TO
	mov	ecx, DWORD PTR _kMissionData$217720[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN72@ContinueMi

; 558  : 			{
; 559  : 				if(hUnit->UnitRoadTo(kMissionData.iData1, kMissionData.iData2, kMissionData.iFlags))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T219994[ebp], edx
	mov	eax, DWORD PTR _kMissionData$217720[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _kMissionData$217720[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _kMissionData$217720[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR $T219994[ebp]
	call	?UnitRoadTo@CvUnit@@QAE_NHHH@Z		; CvUnit::UnitRoadTo
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN71@ContinueMi

; 560  : 				{
; 561  : 					bAction = true;

	mov	BYTE PTR _bAction$217674[ebp], 1

; 562  : 				}
; 563  : 				else

	jmp	SHORT $LN70@ContinueMi
$LN71@ContinueMi:

; 564  : 				{
; 565  : 					bDone = true;

	mov	BYTE PTR _bDone$217673[ebp], 1
$LN70@ContinueMi:

; 566  : 				}

	jmp	$LN81@ContinueMi
$LN72@ContinueMi:

; 567  : 			}
; 568  : 
; 569  : 			else if(kMissionData.eMissionType == CvTypes::getMISSION_SWAP_UNITS())

	call	?getMISSION_SWAP_UNITS@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SWAP_UNITS
	mov	ecx, DWORD PTR _kMissionData$217720[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	$LN68@ContinueMi

; 570  : 			{
; 571  : 				CvPlot* pOriginationPlot;
; 572  : 				CvPlot* pTargetPlot;
; 573  : 
; 574  : 				// Get target plot
; 575  : 				pTargetPlot = GC.getMap().plot(kMissionData.iData1, kMissionData.iData2);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T219998[ebp], edx
	mov	eax, DWORD PTR _kMissionData$217720[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T220061[ebp], ecx
	mov	edx, DWORD PTR _kMissionData$217720[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T220060[ebp], eax
	cmp	DWORD PTR $T220060[ebp], -2147483647	; 80000001H
	je	SHORT $LN273@ContinueMi
	cmp	DWORD PTR $T220061[ebp], -2147483647	; 80000001H
	jne	SHORT $LN274@ContinueMi
$LN273@ContinueMi:
	mov	DWORD PTR _pTargetPlot$217736[ebp], 0
	jmp	$LN275@ContinueMi
$LN274@ContinueMi:
	mov	ecx, DWORD PTR $T219998[ebp]
	mov	dl, BYTE PTR [ecx+4056]
	mov	BYTE PTR $T220005[ebp], dl
	mov	eax, DWORD PTR $T219998[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T220009[ebp], ecx
	movzx	edx, BYTE PTR $T220005[ebp]
	test	edx, edx
	je	SHORT $LN286@ContinueMi
	cmp	DWORD PTR $T220060[ebp], 0
	jge	SHORT $LN285@ContinueMi
	mov	eax, DWORD PTR $T220060[ebp]
	cdq
	idiv	DWORD PTR $T220009[ebp]
	add	edx, DWORD PTR $T220009[ebp]
	mov	DWORD PTR _iMapX$220037[ebp], edx
	jmp	SHORT $LN287@ContinueMi
	jmp	SHORT $LN286@ContinueMi
$LN285@ContinueMi:
	mov	eax, DWORD PTR $T220060[ebp]
	cmp	eax, DWORD PTR $T220009[ebp]
	jl	SHORT $LN286@ContinueMi
	mov	eax, DWORD PTR $T220060[ebp]
	cdq
	idiv	DWORD PTR $T220009[ebp]
	mov	DWORD PTR _iMapX$220037[ebp], edx
	jmp	SHORT $LN287@ContinueMi
$LN286@ContinueMi:
	mov	ecx, DWORD PTR $T220060[ebp]
	mov	DWORD PTR _iMapX$220037[ebp], ecx
$LN287@ContinueMi:
	mov	edx, DWORD PTR $T219998[ebp]
	mov	al, BYTE PTR [edx+4057]
	mov	BYTE PTR $T220020[ebp], al
	mov	ecx, DWORD PTR $T219998[ebp]
	mov	edx, DWORD PTR [ecx+4024]
	mov	DWORD PTR $T220024[ebp], edx
	movzx	eax, BYTE PTR $T220020[ebp]
	push	eax
	mov	ecx, DWORD PTR $T220024[ebp]
	push	ecx
	mov	edx, DWORD PTR $T220061[ebp]
	push	edx
	call	?coordRange@@YAHHH_N@Z			; coordRange
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iMapY$220038[ebp], eax
	mov	eax, DWORD PTR _iMapY$220038[ebp]
	push	eax
	mov	ecx, DWORD PTR _iMapX$220037[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T219998[ebp]
	call	?isPlot@CvMap@@QBEHHH@Z			; CvMap::isPlot
	test	eax, eax
	je	SHORT $LN277@ContinueMi
	mov	edx, DWORD PTR $T219998[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T220029[ebp], eax
	mov	ecx, DWORD PTR _iMapY$220038[ebp]
	imul	ecx, DWORD PTR $T220029[ebp]
	add	ecx, DWORD PTR _iMapX$220037[ebp]
	imul	ecx, 484				; 000001e4H
	mov	edx, DWORD PTR $T219998[ebp]
	add	ecx, DWORD PTR [edx+4068]
	mov	DWORD PTR tv1336[ebp], ecx
	jmp	SHORT $LN278@ContinueMi
$LN277@ContinueMi:
	mov	DWORD PTR tv1336[ebp], 0
$LN278@ContinueMi:
	mov	eax, DWORD PTR tv1336[ebp]
	mov	DWORD PTR _pTargetPlot$217736[ebp], eax
$LN275@ContinueMi:

; 576  : 
; 577  : 				if(pTargetPlot != NULL)

	cmp	DWORD PTR _pTargetPlot$217736[ebp], 0
	je	$LN67@ContinueMi

; 578  : 				{
; 579  : 					pOriginationPlot = hUnit->plot();

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220065[ebp], ecx
	mov	ecx, DWORD PTR $T220065[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	DWORD PTR _pOriginationPlot$217735[ebp], eax

; 580  : 
; 581  : 					if(pTargetPlot->getNumUnits() < 1)

	mov	ecx, DWORD PTR _pTargetPlot$217736[ebp]
	call	?getNumUnits@CvPlot@@QBEHXZ		; CvPlot::getNumUnits
	cmp	eax, 1
	jge	SHORT $LN66@ContinueMi

; 582  : 					{
; 583  : 						bAction = false;

	mov	BYTE PTR _bAction$217674[ebp], 0

; 584  : 						bDone = true;

	mov	BYTE PTR _bDone$217673[ebp], 1

; 585  : 						break;

	jmp	$ContinueMissionExit$217677
$LN66@ContinueMi:

; 586  : 					}
; 587  : 
; 588  : 					// Find unit to move out
; 589  : #ifdef AUI_WARNING_FIXES
; 590  : 					for (uint iI = 0; iI < pTargetPlot->getNumUnits(); iI++)
; 591  : #else
; 592  : 					for(int iI = 0; iI < pTargetPlot->getNumUnits(); iI++)

	mov	DWORD PTR _iI$217739[ebp], 0
	jmp	SHORT $LN65@ContinueMi
$LN64@ContinueMi:
	mov	edx, DWORD PTR _iI$217739[ebp]
	add	edx, 1
	mov	DWORD PTR _iI$217739[ebp], edx
$LN65@ContinueMi:
	mov	ecx, DWORD PTR _pTargetPlot$217736[ebp]
	call	?getNumUnits@CvPlot@@QBEHXZ		; CvPlot::getNumUnits
	cmp	DWORD PTR _iI$217739[ebp], eax
	jge	$LN67@ContinueMi

; 593  : #endif
; 594  : 					{
; 595  : 						CvUnit* pUnit2 = pTargetPlot->getUnitByIndex(iI);

	mov	eax, DWORD PTR _iI$217739[ebp]
	push	eax
	mov	ecx, DWORD PTR _pTargetPlot$217736[ebp]
	call	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z ; CvPlot::getUnitByIndex
	mov	DWORD PTR _pUnit2$217743[ebp], eax

; 596  : 
; 597  : 						if(pUnit2->AreUnitsOfSameType(*(hUnit)) && pUnit2->ReadyToMove())

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220069[ebp], ecx
	push	0
	mov	edx, DWORD PTR $T220069[ebp]
	push	edx
	mov	ecx, DWORD PTR _pUnit2$217743[ebp]
	call	?AreUnitsOfSameType@CvUnit@@QBE_NABV1@_N@Z ; CvUnit::AreUnitsOfSameType
	movzx	eax, al
	test	eax, eax
	je	$LN62@ContinueMi
	mov	ecx, DWORD PTR _pUnit2$217743[ebp]
	call	?ReadyToMove@CvUnit@@QBE_NXZ		; CvUnit::ReadyToMove
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN62@ContinueMi

; 598  : 						{
; 599  : 							// Start the swap
; 600  : 							hUnit->UnitPathTo(HeadMissionQueueNode(kMissionQueue)->iData1, HeadMissionQueueNode(kMissionQueue)->iData2, MOVE_IGNORE_STACKING);

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220073[ebp], edx
	push	0
	push	-1
	push	4
	mov	eax, DWORD PTR _kMissionQueue$217718[ebp]
	push	eax
	call	?HeadMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::HeadMissionQueueNode
	add	esp, 4
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _kMissionQueue$217718[ebp]
	push	edx
	call	?HeadMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::HeadMissionQueueNode
	add	esp, 4
	mov	eax, DWORD PTR [eax+4]
	push	eax
	mov	ecx, DWORD PTR $T220073[ebp]
	call	?UnitPathTo@CvUnit@@QAEHHHHH_N@Z	; CvUnit::UnitPathTo

; 601  : 
; 602  : 							// Move the other unit back out
; 603  : 							pUnit2->UnitPathTo(pOriginationPlot->getX(), pOriginationPlot->getY(), 0);

	mov	ecx, DWORD PTR _pOriginationPlot$217735[ebp]
	movsx	edx, WORD PTR [ecx+2]
	mov	DWORD PTR $T220077[ebp], edx
	push	0
	push	-1
	push	0
	mov	eax, DWORD PTR $T220077[ebp]
	push	eax
	mov	ecx, DWORD PTR _pOriginationPlot$217735[ebp]
	movsx	edx, WORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _pUnit2$217743[ebp]
	call	?UnitPathTo@CvUnit@@QAEHHHHH_N@Z	; CvUnit::UnitPathTo

; 604  : 							bDone = true;

	mov	BYTE PTR _bDone$217673[ebp], 1
$LN62@ContinueMi:

; 605  : 						}
; 606  : 					}

	jmp	$LN64@ContinueMi
$LN67@ContinueMi:

; 607  : 				}
; 608  : 			}

	jmp	$LN81@ContinueMi
$LN68@ContinueMi:

; 609  : 
; 610  : 			else if(kMissionData.eMissionType == CvTypes::getMISSION_MOVE_TO_UNIT())

	call	?getMISSION_MOVE_TO_UNIT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MOVE_TO_UNIT
	mov	ecx, DWORD PTR _kMissionData$217720[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	$LN60@ContinueMi

; 611  : 			{
; 612  : 				if((hUnit->AI_getUnitAIType() == UNITAI_DEFENSE) && hUnit->plot()->isCity() && (hUnit->plot()->getTeam() == hUnit->getTeam()))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220084[ebp], edx
	mov	ecx, DWORD PTR $T220084[ebp]
	call	?AI_getUnitAIType@CvUnit@@QBE?AW4UnitAITypes@@XZ ; CvUnit::AI_getUnitAIType
	cmp	eax, 6
	jne	$LN59@ContinueMi
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220088[ebp], eax
	mov	ecx, DWORD PTR $T220088[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	ecx, eax
	call	?isCity@CvPlot@@QBE_NXZ			; CvPlot::isCity
	movzx	ecx, al
	test	ecx, ecx
	je	$LN59@ContinueMi
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220097[ebp], edx
	mov	ecx, DWORD PTR $T220097[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	DWORD PTR $T220114[ebp], eax
	mov	eax, DWORD PTR $T220114[ebp]
	movsx	ecx, BYTE PTR [eax+4]
	mov	DWORD PTR _playerID$220106[ebp], ecx
	cmp	DWORD PTR _playerID$220106[ebp], -1
	je	SHORT $LN319@ContinueMi
	mov	edx, DWORD PTR _playerID$220106[ebp]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T220115[ebp], eax
	jmp	SHORT $LN320@ContinueMi
	jmp	SHORT $LN320@ContinueMi
$LN319@ContinueMi:
	mov	DWORD PTR $T220115[ebp], -1
$LN320@ContinueMi:
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220119[ebp], eax
	mov	ecx, DWORD PTR $T220119[ebp]
	call	?getTeam@CvUnit@@QBE?AW4TeamTypes@@XZ	; CvUnit::getTeam
	cmp	DWORD PTR $T220115[ebp], eax
	jne	$LN59@ContinueMi

; 613  : 				{
; 614  : 					if(hUnit->plot()->getBestDefender(hUnit->getOwner()) == hUnit.pointer())

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220127[ebp], ecx
	mov	edx, DWORD PTR $T220127[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR $T220136[ebp], eax
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220140[ebp], ecx
	push	0
	push	0
	push	0
	push	0
	push	0
	push	-1
	mov	edx, DWORD PTR $T220136[ebp]
	push	edx
	lea	eax, DWORD PTR $T219657[ebp]
	push	eax
	mov	ecx, DWORD PTR $T220140[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	ecx, eax
	call	?getBestDefender@CvPlot@@QAE?AV?$FObjectHandle@VCvUnit@@@@W4PlayerTypes@@0PBVCvUnit@@_N222@Z ; CvPlot::getBestDefender
	mov	DWORD PTR $T220144[ebp], eax
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220123[ebp], ecx
	mov	edx, DWORD PTR $T220144[ebp]
	mov	eax, DWORD PTR [edx]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T220123[ebp]
	sete	cl
	mov	BYTE PTR $T219656[ebp], cl
	cmp	DWORD PTR $T219657[ebp], 0
	je	SHORT $LN341@ContinueMi
	mov	ecx, DWORD PTR $T219657[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN341@ContinueMi:
	movzx	edx, BYTE PTR $T219656[ebp]
	test	edx, edx
	je	SHORT $LN59@ContinueMi

; 615  : 					{
; 616  : 						bAction = false;

	mov	BYTE PTR _bAction$217674[ebp], 0

; 617  : 						bDone = true;

	mov	BYTE PTR _bDone$217673[ebp], 1

; 618  : 						break;

	jmp	$ContinueMissionExit$217677
$LN59@ContinueMi:

; 619  : 					}
; 620  : 				}
; 621  : 				UnitHandle pTargetUnit = GET_PLAYER((PlayerTypes)kMissionData.iData1).getUnit(kMissionData.iData2);

	mov	eax, DWORD PTR _kMissionData$217720[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T220157[ebp], ecx
	mov	edx, DWORD PTR _kMissionData$217720[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR $T220157[ebp]
	call	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z	; CvPlayer::getUnit
	mov	DWORD PTR $T220167[ebp], eax
	mov	ecx, DWORD PTR $T220167[ebp]
	mov	DWORD PTR _pTargetUnit$217751[ebp], ecx
	mov	BYTE PTR _pTargetUnit$217751[ebp+4], 0
	cmp	DWORD PTR _pTargetUnit$217751[ebp], 0
	je	SHORT $LN348@ContinueMi
	mov	ecx, DWORD PTR _pTargetUnit$217751[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN348@ContinueMi:
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 622  : 				if(pTargetUnit)

	xor	edx, edx
	cmp	DWORD PTR _pTargetUnit$217751[ebp], 0
	setne	dl
	movzx	eax, dl
	test	eax, eax
	je	$LN57@ContinueMi

; 623  : 				{
; 624  : 					if(hUnit->GetMissionAIType() != MISSIONAI_SHADOW && hUnit->GetMissionAIType() != MISSIONAI_GROUP)

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220174[ebp], ecx
	mov	ecx, DWORD PTR $T220174[ebp]
	call	?GetMissionAIType@CvUnit@@QAE?AW4MissionAITypes@@XZ ; CvUnit::GetMissionAIType
	test	eax, eax
	je	$LN56@ContinueMi
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220178[ebp], edx
	mov	ecx, DWORD PTR $T220178[ebp]
	call	?GetMissionAIType@CvUnit@@QAE?AW4MissionAITypes@@XZ ; CvUnit::GetMissionAIType
	cmp	eax, 1
	je	$LN56@ContinueMi

; 625  : 					{
; 626  : 						if(!hUnit->plot()->isOwned() || hUnit->plot()->getOwner() == hUnit->getOwner())

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220182[ebp], eax
	mov	ecx, DWORD PTR $T220182[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	ecx, eax
	call	?isOwned@CvPlot@@QBE_NXZ		; CvPlot::isOwned
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN54@ContinueMi
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220186[ebp], edx
	mov	ecx, DWORD PTR $T220186[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	DWORD PTR $T220190[ebp], eax
	mov	eax, DWORD PTR $T220190[ebp]
	movsx	ecx, BYTE PTR [eax+4]
	mov	DWORD PTR $T220191[ebp], ecx
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220195[ebp], edx
	mov	eax, DWORD PTR $T220195[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR $T220204[ebp], ecx
	mov	edx, DWORD PTR $T220191[ebp]
	cmp	edx, DWORD PTR $T220204[ebp]
	jne	$LN56@ContinueMi
$LN54@ContinueMi:

; 627  : 						{
; 628  : 							CvPlot* pMissionPlot = pTargetUnit->GetMissionAIPlot();

	mov	eax, DWORD PTR _pTargetUnit$217751[ebp]
	mov	DWORD PTR $T220208[ebp], eax
	mov	ecx, DWORD PTR $T220208[ebp]
	call	?GetMissionAIPlot@CvUnit@@QAEPAVCvPlot@@XZ ; CvUnit::GetMissionAIPlot
	mov	DWORD PTR _pMissionPlot$217757[ebp], eax

; 629  : 							if(pMissionPlot != NULL && NO_TEAM != pMissionPlot->getTeam())

	cmp	DWORD PTR _pMissionPlot$217757[ebp], 0
	je	$LN56@ContinueMi
	mov	ecx, DWORD PTR _pMissionPlot$217757[ebp]
	movsx	edx, BYTE PTR [ecx+4]
	mov	DWORD PTR _playerID$220222[ebp], edx
	cmp	DWORD PTR _playerID$220222[ebp], -1
	je	SHORT $LN373@ContinueMi
	mov	eax, DWORD PTR _playerID$220222[ebp]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T220225[ebp], eax
	jmp	SHORT $LN374@ContinueMi
	jmp	SHORT $LN374@ContinueMi
$LN373@ContinueMi:
	mov	DWORD PTR $T220225[ebp], -1
$LN374@ContinueMi:
	cmp	DWORD PTR $T220225[ebp], -1
	je	$LN56@ContinueMi

; 630  : 							{
; 631  : 								if(pMissionPlot->isOwned() && pTargetUnit->isPotentialEnemy(pMissionPlot->getTeam(), pMissionPlot))

	mov	ecx, DWORD PTR _pMissionPlot$217757[ebp]
	call	?isOwned@CvPlot@@QBE_NXZ		; CvPlot::isOwned
	movzx	ecx, al
	test	ecx, ecx
	je	$LN56@ContinueMi
	mov	edx, DWORD PTR _pMissionPlot$217757[ebp]
	movsx	eax, BYTE PTR [edx+4]
	mov	DWORD PTR _playerID$220239[ebp], eax
	cmp	DWORD PTR _playerID$220239[ebp], -1
	je	SHORT $LN381@ContinueMi
	mov	ecx, DWORD PTR _playerID$220239[ebp]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T220242[ebp], eax
	jmp	SHORT $LN382@ContinueMi
	jmp	SHORT $LN382@ContinueMi
$LN381@ContinueMi:
	mov	DWORD PTR $T220242[ebp], -1
$LN382@ContinueMi:
	mov	edx, DWORD PTR _pTargetUnit$217751[ebp]
	mov	DWORD PTR $T220246[ebp], edx
	mov	eax, DWORD PTR _pMissionPlot$217757[ebp]
	push	eax
	mov	ecx, DWORD PTR $T220242[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T220246[ebp]
	call	?isPotentialEnemy@CvUnit@@QBE_NW4TeamTypes@@PBVCvPlot@@@Z ; CvUnit::isPotentialEnemy
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN56@ContinueMi

; 632  : 								{
; 633  : 									bAction = false;

	mov	BYTE PTR _bAction$217674[ebp], 0

; 634  : 									bDone = true;

	mov	BYTE PTR _bDone$217673[ebp], 1

; 635  : 									break;

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$217751[ebp], 0
	je	SHORT $LN391@ContinueMi
	mov	ecx, DWORD PTR _pTargetUnit$217751[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN391@ContinueMi:
	jmp	$ContinueMissionExit$217677
$LN56@ContinueMi:

; 636  : 								}
; 637  : 							}
; 638  : 						}
; 639  : 					}
; 640  : 
; 641  : 					if(hUnit->UnitPathTo(pTargetUnit->getX(), pTargetUnit->getY(), kMissionData.iFlags) > 0)

	mov	eax, DWORD PTR _pTargetUnit$217751[ebp]
	mov	DWORD PTR $T220259[ebp], eax
	mov	ecx, DWORD PTR $T220259[ebp]
	mov	edx, DWORD PTR [ecx+88]
	mov	DWORD PTR $T220268[ebp], edx
	mov	eax, DWORD PTR _pTargetUnit$217751[ebp]
	mov	DWORD PTR $T220272[ebp], eax
	mov	ecx, DWORD PTR $T220272[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	DWORD PTR $T220281[ebp], edx
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220285[ebp], eax
	push	0
	push	-1
	mov	ecx, DWORD PTR _kMissionData$217720[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR $T220268[ebp]
	push	eax
	mov	ecx, DWORD PTR $T220281[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T220285[ebp]
	call	?UnitPathTo@CvUnit@@QAEHHHHH_N@Z	; CvUnit::UnitPathTo
	test	eax, eax
	jle	SHORT $LN51@ContinueMi

; 642  : 					{
; 643  : 						bAction = true;

	mov	BYTE PTR _bAction$217674[ebp], 1

; 644  : 					}
; 645  : 					else

	jmp	SHORT $LN50@ContinueMi
$LN51@ContinueMi:

; 646  : 					{
; 647  : 						bDone = true;

	mov	BYTE PTR _bDone$217673[ebp], 1
$LN50@ContinueMi:

; 648  : 					}
; 649  : 				}
; 650  : 				else

	jmp	SHORT $LN49@ContinueMi
$LN57@ContinueMi:

; 651  : 				{
; 652  : 					bDone = true;

	mov	BYTE PTR _bDone$217673[ebp], 1
$LN49@ContinueMi:

; 653  : 				}
; 654  : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$217751[ebp], 0
	je	SHORT $LN410@ContinueMi
	mov	ecx, DWORD PTR _pTargetUnit$217751[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN410@ContinueMi:

; 655  : 
; 656  : 			else if(kMissionData.eMissionType == CvTypes::getMISSION_RANGE_ATTACK())

	jmp	$LN81@ContinueMi
$LN60@ContinueMi:
	call	?getMISSION_RANGE_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_RANGE_ATTACK
	mov	edx, DWORD PTR _kMissionData$217720[ebp]
	cmp	DWORD PTR [edx], eax
	jne	SHORT $LN47@ContinueMi

; 657  : 			{
; 658  : 				if(CvUnitCombat::AttackRanged(*hUnit, kMissionData.iData1, kMissionData.iData2, (kMissionData.iFlags &  MISSION_MODIFIER_NO_DEFENSIVE_SUPPORT)?CvUnitCombat::ATTACK_OPTION_NO_DEFENSIVE_SUPPORT:CvUnitCombat::ATTACK_OPTION_NONE) != CvUnitCombat::ATTACK_ABORTED)

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220298[ebp], eax
	mov	ecx, DWORD PTR _kMissionData$217720[ebp]
	mov	edx, DWORD PTR [ecx+12]
	and	edx, 256				; 00000100H
	neg	edx
	sbb	edx, edx
	neg	edx
	push	edx
	mov	eax, DWORD PTR _kMissionData$217720[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _kMissionData$217720[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR $T220298[ebp]
	push	ecx
	call	?AttackRanged@CvUnitCombat@@SA?AW4ATTACK_RESULT@1@AAVCvUnit@@HHW4ATTACK_OPTION@1@@Z ; CvUnitCombat::AttackRanged
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN46@ContinueMi

; 659  : 				{
; 660  : 					bDone = true;

	mov	BYTE PTR _bDone$217673[ebp], 1
$LN46@ContinueMi:

; 661  : 				}
; 662  : 			}

	jmp	$LN81@ContinueMi
$LN47@ContinueMi:

; 663  : 
; 664  : 			else if(kMissionData.eMissionType == CvTypes::getMISSION_NUKE())

	call	?getMISSION_NUKE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_NUKE
	mov	edx, DWORD PTR _kMissionData$217720[ebp]
	cmp	DWORD PTR [edx], eax
	jne	SHORT $LN44@ContinueMi

; 665  : 			{
; 666  : 				if(CvUnitCombat::AttackNuclear(*hUnit, kMissionData.iData1, kMissionData.iData2, (kMissionData.iFlags &  MISSION_MODIFIER_NO_DEFENSIVE_SUPPORT)?CvUnitCombat::ATTACK_OPTION_NO_DEFENSIVE_SUPPORT:CvUnitCombat::ATTACK_OPTION_NONE) != CvUnitCombat::ATTACK_ABORTED)

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220302[ebp], eax
	mov	ecx, DWORD PTR _kMissionData$217720[ebp]
	mov	edx, DWORD PTR [ecx+12]
	and	edx, 256				; 00000100H
	neg	edx
	sbb	edx, edx
	neg	edx
	push	edx
	mov	eax, DWORD PTR _kMissionData$217720[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _kMissionData$217720[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR $T220302[ebp]
	push	ecx
	call	?AttackNuclear@CvUnitCombat@@SA?AW4ATTACK_RESULT@1@AAVCvUnit@@HHW4ATTACK_OPTION@1@@Z ; CvUnitCombat::AttackNuclear
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN43@ContinueMi

; 667  : 				{
; 668  : 					bDone = true;

	mov	BYTE PTR _bDone$217673[ebp], 1
$LN43@ContinueMi:

; 669  : 				}
; 670  : 			}

	jmp	SHORT $LN81@ContinueMi
$LN44@ContinueMi:

; 671  : 
; 672  : 			else if(kMissionData.eMissionType == CvTypes::getMISSION_BUILD())

	call	?getMISSION_BUILD@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_BUILD
	mov	edx, DWORD PTR _kMissionData$217720[ebp]
	cmp	DWORD PTR [edx], eax
	jne	SHORT $LN81@ContinueMi

; 673  : 			{
; 674  : 				if(!hUnit->UnitBuild((BuildTypes)(kMissionData.iData1)))

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220306[ebp], eax
	mov	ecx, DWORD PTR _kMissionData$217720[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR $T220306[ebp]
	call	?UnitBuild@CvUnit@@QAE_NW4BuildTypes@@@Z ; CvUnit::UnitBuild
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN81@ContinueMi

; 675  : 				{
; 676  : 					bDone = true;

	mov	BYTE PTR _bDone$217673[ebp], 1
$LN81@ContinueMi:

; 677  : 				}
; 678  : 			}
; 679  : 		}
; 680  : 
; 681  : 		// check to see if mission is done
; 682  : 		if(!bDone && (hUnit->HeadMissionQueueNode() != NULL))

	movzx	ecx, BYTE PTR _bDone$217673[ebp]
	test	ecx, ecx
	jne	$LN39@ContinueMi
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220310[ebp], edx
	mov	ecx, DWORD PTR $T220310[ebp]
	call	?HeadMissionQueueNode@CvUnit@@IAEPAUMissionData@@XZ ; CvUnit::HeadMissionQueueNode
	test	eax, eax
	je	$LN39@ContinueMi

; 683  : 		{
; 684  : 			const MissionData& kMissionData = *HeadMissionQueueNode(kMissionQueue);

	mov	eax, DWORD PTR _kMissionQueue$217718[ebp]
	push	eax
	call	?HeadMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::HeadMissionQueueNode
	add	esp, 4
	mov	DWORD PTR _kMissionData$217774[ebp], eax

; 685  : 
; 686  : 			if(kMissionData.eMissionType == CvTypes::getMISSION_MOVE_TO() ||
; 687  : 			        kMissionData.eMissionType == CvTypes::getMISSION_SWAP_UNITS() ||
; 688  : 			        kMissionData.eMissionType == CvTypes::getMISSION_EMBARK() ||
; 689  : 			        kMissionData.eMissionType == CvTypes::getMISSION_DISEMBARK())

	call	?getMISSION_MOVE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MOVE_TO
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN37@ContinueMi
	call	?getMISSION_SWAP_UNITS@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SWAP_UNITS
	mov	edx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [edx], eax
	je	SHORT $LN37@ContinueMi
	call	?getMISSION_EMBARK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_EMBARK
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN37@ContinueMi
	call	?getMISSION_DISEMBARK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_DISEMBARK
	mov	edx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [edx], eax
	jne	SHORT $LN38@ContinueMi
$LN37@ContinueMi:

; 690  : 			{
; 691  : 				if(hUnit->at(kMissionData.iData1, kMissionData.iData2))

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220314[ebp], eax
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _kMissionData$217774[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR $T220314[ebp]
	call	?at@CvUnit@@QBE_NHH@Z			; CvUnit::at
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN36@ContinueMi

; 692  : 				{
; 693  : 					bDone = true;

	mov	BYTE PTR _bDone$217673[ebp], 1
$LN36@ContinueMi:

; 694  : #ifdef LOG_UNIT_MOVES
; 695  : 					std::ostringstream updateMsg;
; 696  : 					updateMsg << "ContinueMission() : player ";
; 697  : 					updateMsg << GET_PLAYER(hUnit->getOwner()).getName();
; 698  : 					updateMsg << hUnit->getName() << " id=" << hUnit->GetID() << " reached " << kMissionData.iData1 << ", " << kMissionData.iData2;
; 699  : 					gDLL->netMessageDebugLog(updateMsg.str());
; 700  : #endif
; 701  : 				}
; 702  : 			}

	jmp	$LN39@ContinueMi
$LN38@ContinueMi:

; 703  : 
; 704  : 			else if(kMissionData.eMissionType == CvTypes::getMISSION_ROUTE_TO())

	call	?getMISSION_ROUTE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ROUTE_TO
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN34@ContinueMi

; 705  : 			{
; 706  : 				if(hUnit->at(kMissionData.iData1, kMissionData.iData2))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220318[ebp], edx
	mov	eax, DWORD PTR _kMissionData$217774[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _kMissionData$217774[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR $T220318[ebp]
	call	?at@CvUnit@@QBE_NHH@Z			; CvUnit::at
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN33@ContinueMi

; 707  : 				{
; 708  : 					if(hUnit->GetBestBuildRoute(hUnit->plot()) == NO_ROUTE)

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220322[ebp], edx
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220326[ebp], eax
	push	0
	mov	ecx, DWORD PTR $T220322[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	push	eax
	mov	ecx, DWORD PTR $T220326[ebp]
	call	?GetBestBuildRoute@CvUnit@@QBE?AW4RouteTypes@@PAVCvPlot@@PAW4BuildTypes@@@Z ; CvUnit::GetBestBuildRoute
	cmp	eax, -1
	jne	SHORT $LN33@ContinueMi

; 709  : 					{
; 710  : 						bDone = true;

	mov	BYTE PTR _bDone$217673[ebp], 1
$LN33@ContinueMi:

; 711  : 					}
; 712  : 				}
; 713  : 			}

	jmp	$LN39@ContinueMi
$LN34@ContinueMi:

; 714  : 
; 715  : 			else if(kMissionData.eMissionType == CvTypes::getMISSION_MOVE_TO_UNIT())

	call	?getMISSION_MOVE_TO_UNIT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MOVE_TO_UNIT
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	$LN30@ContinueMi

; 716  : 			{
; 717  : 				UnitHandle pTargetUnit = GET_PLAYER((PlayerTypes)kMissionData.iData1).getUnit(kMissionData.iData2);

	mov	edx, DWORD PTR _kMissionData$217774[ebp]
	mov	eax, DWORD PTR [edx+4]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T220330[ebp], eax
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR $T220330[ebp]
	call	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z	; CvPlayer::getUnit
	mov	DWORD PTR $T220340[ebp], eax
	mov	eax, DWORD PTR $T220340[ebp]
	mov	DWORD PTR _pTargetUnit$217784[ebp], eax
	mov	BYTE PTR _pTargetUnit$217784[ebp+4], 0
	cmp	DWORD PTR _pTargetUnit$217784[ebp], 0
	je	SHORT $LN433@ContinueMi
	mov	ecx, DWORD PTR _pTargetUnit$217784[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN433@ContinueMi:
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 718  : 				if((!pTargetUnit) ||hUnit-> plot() == pTargetUnit->plot())

	xor	ecx, ecx
	cmp	DWORD PTR _pTargetUnit$217784[ebp], 0
	sete	cl
	movzx	edx, cl
	test	edx, edx
	jne	SHORT $LN28@ContinueMi
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220347[ebp], eax
	mov	ecx, DWORD PTR _pTargetUnit$217784[ebp]
	mov	DWORD PTR $T220351[ebp], ecx
	mov	ecx, DWORD PTR $T220347[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	esi, eax
	mov	ecx, DWORD PTR $T220351[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	cmp	esi, eax
	jne	SHORT $LN29@ContinueMi
$LN28@ContinueMi:

; 719  : 				{
; 720  : 					bDone = true;

	mov	BYTE PTR _bDone$217673[ebp], 1
$LN29@ContinueMi:

; 721  : 				}
; 722  : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$217784[ebp], 0
	je	SHORT $LN444@ContinueMi
	mov	ecx, DWORD PTR _pTargetUnit$217784[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN444@ContinueMi:

; 723  : 
; 724  : 			else if(kMissionData.eMissionType == CvTypes::getMISSION_SET_UP_FOR_RANGED_ATTACK() ||

	jmp	$LN39@ContinueMi
$LN30@ContinueMi:

; 725  : 					kMissionData.eMissionType == CvTypes::getMISSION_AIRLIFT() ||
; 726  : 					kMissionData.eMissionType == CvTypes::getMISSION_NUKE() ||
; 727  : 					kMissionData.eMissionType == CvTypes::getMISSION_PARADROP() ||
; 728  : 					kMissionData.eMissionType == CvTypes::getMISSION_AIR_SWEEP() ||
; 729  : 					kMissionData.eMissionType == CvTypes::getMISSION_REBASE() ||
; 730  : 			        kMissionData.eMissionType == CvTypes::getMISSION_RANGE_ATTACK() ||
; 731  : 			        kMissionData.eMissionType == CvTypes::getMISSION_PILLAGE() ||
; 732  : 			        kMissionData.eMissionType == CvTypes::getMISSION_FOUND() ||
; 733  : 			        kMissionData.eMissionType == CvTypes::getMISSION_JOIN() ||
; 734  : 			        kMissionData.eMissionType == CvTypes::getMISSION_CONSTRUCT() ||
; 735  : 			        kMissionData.eMissionType == CvTypes::getMISSION_DISCOVER() ||
; 736  : 			        kMissionData.eMissionType == CvTypes::getMISSION_HURRY() ||
; 737  : 					kMissionData.eMissionType == CvTypes::getMISSION_TRADE() ||
; 738  : 					kMissionData.eMissionType == CvTypes::getMISSION_BUY_CITY_STATE() ||
; 739  : 					kMissionData.eMissionType == CvTypes::getMISSION_REPAIR_FLEET() ||
; 740  : 			        kMissionData.eMissionType == CvTypes::getMISSION_SPACESHIP() ||
; 741  : 			        kMissionData.eMissionType == CvTypes::getMISSION_CULTURE_BOMB() ||
; 742  : 			        kMissionData.eMissionType == CvTypes::getMISSION_FOUND_RELIGION() ||
; 743  : 			        kMissionData.eMissionType == CvTypes::getMISSION_GOLDEN_AGE() ||
; 744  : 			        kMissionData.eMissionType == CvTypes::getMISSION_LEAD() ||
; 745  : 			        kMissionData.eMissionType == CvTypes::getMISSION_DIE_ANIMATION() ||
; 746  : 			        kMissionData.eMissionType == CvTypes::getMISSION_SPREAD_RELIGION() ||
; 747  : 			        kMissionData.eMissionType == CvTypes::getMISSION_ENHANCE_RELIGION() ||
; 748  : 			        kMissionData.eMissionType == CvTypes::getMISSION_REMOVE_HERESY() ||
; 749  : 					kMissionData.eMissionType == CvTypes::getMISSION_ESTABLISH_TRADE_ROUTE() ||
; 750  : 					kMissionData.eMissionType == CvTypes::getMISSION_PLUNDER_TRADE_ROUTE() ||
; 751  : 					kMissionData.eMissionType == CvTypes::getMISSION_GREAT_WORK() ||
; 752  : 					kMissionData.eMissionType == CvTypes::getMISSION_CHANGE_TRADE_UNIT_HOME_CITY() ||
; 753  : 					kMissionData.eMissionType == CvTypes::getMISSION_SELL_EXOTIC_GOODS() ||
; 754  : 					kMissionData.eMissionType == CvTypes::getMISSION_GIVE_POLICIES() ||
; 755  : 					kMissionData.eMissionType == CvTypes::getMISSION_ONE_SHOT_TOURISM() ||
; 756  : 					kMissionData.eMissionType == CvTypes::getMISSION_CHANGE_ADMIRAL_PORT())

	call	?getMISSION_SET_UP_FOR_RANGED_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SET_UP_FOR_RANGED_ATTACK
	mov	edx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [edx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_AIRLIFT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_AIRLIFT
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [ecx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_NUKE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_NUKE
	mov	edx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [edx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_PARADROP@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_PARADROP
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [ecx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_AIR_SWEEP@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_AIR_SWEEP
	mov	edx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [edx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_REBASE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_REBASE
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [ecx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_RANGE_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_RANGE_ATTACK
	mov	edx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [edx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_PILLAGE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_PILLAGE
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [ecx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_FOUND@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_FOUND
	mov	edx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [edx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_JOIN@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_JOIN
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [ecx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_CONSTRUCT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_CONSTRUCT
	mov	edx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [edx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_DISCOVER@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_DISCOVER
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [ecx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_HURRY@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_HURRY
	mov	edx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [edx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_TRADE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_TRADE
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [ecx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_BUY_CITY_STATE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_BUY_CITY_STATE
	mov	edx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [edx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_REPAIR_FLEET@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_REPAIR_FLEET
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [ecx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_SPACESHIP@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SPACESHIP
	mov	edx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [edx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_CULTURE_BOMB@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_CULTURE_BOMB
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [ecx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_FOUND_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_FOUND_RELIGION
	mov	edx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [edx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_GOLDEN_AGE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_GOLDEN_AGE
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [ecx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_LEAD@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_LEAD
	mov	edx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [edx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_DIE_ANIMATION@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_DIE_ANIMATION
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [ecx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_SPREAD_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SPREAD_RELIGION
	mov	edx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [edx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_ENHANCE_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ENHANCE_RELIGION
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [ecx], eax
	je	$LN25@ContinueMi
	call	?getMISSION_REMOVE_HERESY@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_REMOVE_HERESY
	mov	edx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [edx], eax
	je	SHORT $LN25@ContinueMi
	call	?getMISSION_ESTABLISH_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ESTABLISH_TRADE_ROUTE
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN25@ContinueMi
	call	?getMISSION_PLUNDER_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_PLUNDER_TRADE_ROUTE
	mov	edx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [edx], eax
	je	SHORT $LN25@ContinueMi
	call	?getMISSION_GREAT_WORK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_GREAT_WORK
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN25@ContinueMi
	call	?getMISSION_CHANGE_TRADE_UNIT_HOME_CITY@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_CHANGE_TRADE_UNIT_HOME_CITY
	mov	edx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [edx], eax
	je	SHORT $LN25@ContinueMi
	call	?getMISSION_SELL_EXOTIC_GOODS@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SELL_EXOTIC_GOODS
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN25@ContinueMi
	call	?getMISSION_GIVE_POLICIES@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_GIVE_POLICIES
	mov	edx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [edx], eax
	je	SHORT $LN25@ContinueMi
	call	?getMISSION_ONE_SHOT_TOURISM@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ONE_SHOT_TOURISM
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN25@ContinueMi
	call	?getMISSION_CHANGE_ADMIRAL_PORT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_CHANGE_ADMIRAL_PORT
	mov	edx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [edx], eax
	jne	SHORT $LN26@ContinueMi
$LN25@ContinueMi:

; 757  : 			{
; 758  : 				bDone = true;

	mov	BYTE PTR _bDone$217673[ebp], 1
	jmp	SHORT $LN39@ContinueMi
$LN26@ContinueMi:

; 759  : 			}
; 760  : 
; 761  : 			else if(kMissionData.eMissionType == CvTypes::getMISSION_WAIT_FOR())

	call	?getMISSION_WAIT_FOR@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_WAIT_FOR
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN39@ContinueMi

; 762  : 			{
; 763  : 				CvUnit* pkWaitingFor = GET_PLAYER((PlayerTypes)kMissionData.iData1).getUnit(kMissionData.iData2);

	mov	edx, DWORD PTR _kMissionData$217774[ebp]
	mov	eax, DWORD PTR [edx+4]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T220364[ebp], eax
	mov	ecx, DWORD PTR _kMissionData$217774[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR $T220364[ebp]
	call	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z	; CvPlayer::getUnit
	mov	DWORD PTR _pkWaitingFor$217793[ebp], eax

; 764  : 				if(!pkWaitingFor || !pkWaitingFor->IsBusy())

	cmp	DWORD PTR _pkWaitingFor$217793[ebp], 0
	je	SHORT $LN21@ContinueMi
	mov	ecx, DWORD PTR _pkWaitingFor$217793[ebp]
	call	?IsBusy@CvUnit@@QBE_NXZ			; CvUnit::IsBusy
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN450@ContinueMi
$LN21@ContinueMi:

; 765  : 				{
; 766  : 					bDone = true;

	mov	BYTE PTR _bDone$217673[ebp], 1

; 767  : 				}
; 768  : 				else

	jmp	SHORT $LN39@ContinueMi

; 769  : 				{
; 770  : 					// Set the mission timer to 1 so we will get another UpdateMission call
; 771  : 					hUnit->ChangeMissionTimer(1);

$LN450@ContinueMi:
	push	1
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?ChangeMissionTimer@CvUnit@@QAEXH@Z	; CvUnit::ChangeMissionTimer
$LN39@ContinueMi:

; 772  : 				}
; 773  : 			}
; 774  : 		}
; 775  : 
; 776  : 		if(HeadMissionQueueNode(kMissionQueue) != NULL)

	mov	ecx, DWORD PTR _kMissionQueue$217718[ebp]
	push	ecx
	call	?HeadMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::HeadMissionQueueNode
	add	esp, 4
	test	eax, eax
	je	$LN19@ContinueMi

; 777  : 		{
; 778  : 			// if there is an action, if it's done or there are not moves left, and a player is watching, watch the movement
; 779  : 			if(bAction && (bDone || !hUnit->canMove()) && hUnit->plot()->isVisibleToWatchingHuman())

	movzx	edx, BYTE PTR _bAction$217674[ebp]
	test	edx, edx
	je	$LN18@ContinueMi
	movzx	eax, BYTE PTR _bDone$217673[ebp]
	test	eax, eax
	jne	SHORT $LN17@ContinueMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220371[ebp], ecx
	mov	ecx, DWORD PTR $T220371[ebp]
	call	?canMove@CvUnit@@QBE_NXZ		; CvUnit::canMove
	movzx	edx, al
	test	edx, edx
	jne	$LN18@ContinueMi
$LN17@ContinueMi:
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220375[ebp], eax
	mov	ecx, DWORD PTR $T220375[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	ecx, eax
	call	?isVisibleToWatchingHuman@CvPlot@@QBE_NXZ ; CvPlot::isVisibleToWatchingHuman
	movzx	ecx, al
	test	ecx, ecx
	je	$LN18@ContinueMi

; 780  : 			{
; 781  : 				UpdateMissionTimer(hUnit, iSteps);

	mov	edx, DWORD PTR _iSteps$[ebp]
	push	edx
	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR $T219658[ebp], esp
	mov	DWORD PTR $T220385[ebp], eax
	mov	ecx, DWORD PTR $T220385[ebp]
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T220385[ebp]
	mov	cl, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [eax+4], cl
	mov	edx, DWORD PTR $T220385[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN457@ContinueMi
	mov	eax, DWORD PTR $T220385[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN457@ContinueMi:
	mov	ecx, DWORD PTR $T220385[ebp]
	mov	DWORD PTR tv1218[ebp], ecx
	call	?UpdateMissionTimer@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z ; CvUnitMission::UpdateMissionTimer
	add	esp, 12					; 0000000cH

; 782  : 
; 783  : 				if(hUnit->ShowMoves() && GC.getGame().getActivePlayer() != NO_PLAYER && hUnit->getOwner() != GC.getGame().getActivePlayer() && hUnit->plot()->isActiveVisible(false))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220389[ebp], edx
	mov	ecx, DWORD PTR $T220389[ebp]
	call	?ShowMoves@CvUnit@@QBE_NXZ		; CvUnit::ShowMoves
	movzx	eax, al
	test	eax, eax
	je	$LN18@ContinueMi
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T220393[ebp], ecx
	mov	ecx, DWORD PTR $T220393[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	eax, -1
	je	$LN18@ContinueMi
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220397[ebp], edx
	mov	eax, DWORD PTR $T220397[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR $T220406[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T220410[ebp], edx
	mov	ecx, DWORD PTR $T220410[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR $T220406[ebp], eax
	je	$LN18@ContinueMi
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220414[ebp], eax
	push	0
	mov	ecx, DWORD PTR $T220414[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	ecx, eax
	call	?isActiveVisible@CvPlot@@QBE_N_N@Z	; CvPlot::isActiveVisible
	movzx	ecx, al
	test	ecx, ecx
	je	$LN18@ContinueMi

; 784  : 				{
; 785  : 					auto_ptr<ICvPlot1> pDllPlot = GC.WrapPlotPointer(hUnit->plot());

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220418[ebp], edx
	mov	ecx, DWORD PTR $T220418[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	push	eax
	lea	eax, DWORD PTR $T219659[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?WrapPlotPointer@CvGlobals@@QAE?AV?$auto_ptr@VICvPlot1@@@std@@PAVCvPlot@@@Z ; CvGlobals::WrapPlotPointer
	mov	DWORD PTR $T220429[ebp], eax
	mov	ecx, DWORD PTR $T220429[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Cvtptr$220427[ebp], edx
	mov	eax, DWORD PTR __Cvtptr$220427[ebp]
	mov	DWORD PTR __Ans$220428[ebp], eax
	mov	ecx, DWORD PTR $T220429[ebp]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR __Ans$220428[ebp]
	mov	DWORD PTR $T219660[ebp], edx
	mov	eax, DWORD PTR $T219660[ebp]
	mov	DWORD PTR $T220434[ebp], eax
	mov	ecx, DWORD PTR $T220434[ebp]
	mov	DWORD PTR __Ptr$220433[ebp], ecx
	mov	DWORD PTR $T220434[ebp], 0
	mov	edx, DWORD PTR __Ptr$220433[ebp]
	mov	DWORD PTR _pDllPlot$217850[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR $T219659[ebp]
	mov	DWORD PTR $T220443[ebp], eax
	cmp	DWORD PTR $T220443[ebp], 0
	je	SHORT $LN483@ContinueMi
	mov	ecx, DWORD PTR $T220443[ebp]
	mov	DWORD PTR _inst$220447[ebp], ecx
	mov	edx, DWORD PTR _inst$220447[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _inst$220447[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+4]
	call	edx
$LN483@ContinueMi:

; 786  : 					GC.GetEngineUserInterface()->lookAt(pDllPlot.get(), CAMERALOOKAT_NORMAL);

	mov	eax, DWORD PTR $T220452[ebp]
	mov	DWORD PTR tv997[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv997[ebp], ecx
	push	0
	mov	edx, DWORD PTR _pDllPlot$217850[ebp]
	push	edx
	mov	eax, DWORD PTR tv997[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv997[ebp]
	mov	eax, DWORD PTR [edx+272]
	call	eax

; 787  : 				}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _pDllPlot$217850[ebp]
	mov	DWORD PTR $T220464[ebp], ecx
	cmp	DWORD PTR $T220464[ebp], 0
	je	SHORT $LN18@ContinueMi
	mov	edx, DWORD PTR $T220464[ebp]
	mov	DWORD PTR _inst$220468[ebp], edx
	mov	eax, DWORD PTR _inst$220468[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$220468[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN18@ContinueMi:

; 788  : 			}
; 789  : 
; 790  : 			if(bDone)

	movzx	ecx, BYTE PTR _bDone$217673[ebp]
	test	ecx, ecx
	je	$LN15@ContinueMi

; 791  : 			{
; 792  : 				if(hUnit->IsWork())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220473[ebp], edx
	mov	ecx, DWORD PTR $T220473[ebp]
	call	?IsWork@CvUnit@@QBE_NXZ			; CvUnit::IsWork
	movzx	eax, al
	test	eax, eax
	je	$LN14@ContinueMi

; 793  : 				{
; 794  : 					auto_ptr<ICvUnit1> pDllUnit(new CvDllUnit(hUnit.pointer()));

	push	12					; 0000000cH
	call	??2CvDllUnit@@SAPAXI@Z			; CvDllUnit::operator new
	add	esp, 4
	mov	DWORD PTR $T219662[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T219662[ebp], 0
	je	SHORT $LN112@ContinueMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220477[ebp], ecx
	mov	edx, DWORD PTR $T220477[ebp]
	push	edx
	mov	ecx, DWORD PTR $T219662[ebp]
	call	??0CvDllUnit@@QAE@PAVCvUnit@@@Z		; CvDllUnit::CvDllUnit
	mov	DWORD PTR tv1027[ebp], eax
	jmp	SHORT $LN113@ContinueMi
$LN112@ContinueMi:
	mov	DWORD PTR tv1027[ebp], 0
$LN113@ContinueMi:
	mov	eax, DWORD PTR tv1027[ebp]
	mov	DWORD PTR $T219661[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T219661[ebp]
	mov	DWORD PTR _pDllUnit$217877[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5

; 795  : 					gDLL->GameplayUnitWork(pDllUnit.get(), -1);

	mov	edx, DWORD PTR $T220484[ebp]
	mov	DWORD PTR tv1037[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv1037[ebp], eax
	push	-1
	mov	ecx, DWORD PTR _pDllUnit$217877[ebp]
	push	ecx
	mov	edx, DWORD PTR tv1037[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv1037[ebp]
	mov	edx, DWORD PTR [eax+612]
	call	edx

; 796  : 				}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _pDllUnit$217877[ebp]
	mov	DWORD PTR $T220496[ebp], eax
	cmp	DWORD PTR $T220496[ebp], 0
	je	SHORT $LN14@ContinueMi
	mov	ecx, DWORD PTR $T220496[ebp]
	mov	DWORD PTR _inst$220500[ebp], ecx
	mov	edx, DWORD PTR _inst$220500[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _inst$220500[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+4]
	call	edx
$LN14@ContinueMi:

; 797  : 
; 798  : 				if(hUnit->GetMissionTimer() == 0 && !hUnit->isInCombat())	// Was hUnit->IsBusy(), but its ok to clear the mission if the unit is just completing a move visualization

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220505[ebp], eax
	mov	ecx, DWORD PTR $T220505[ebp]
	call	?GetMissionTimer@CvUnit@@QBEHXZ		; CvUnit::GetMissionTimer
	test	eax, eax
	jne	$LN13@ContinueMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220509[ebp], ecx
	mov	ecx, DWORD PTR $T220509[ebp]
	call	?isInCombat@CvUnit@@QBE_NXZ		; CvUnit::isInCombat
	movzx	edx, al
	test	edx, edx
	jne	$LN13@ContinueMi

; 799  : 				{
; 800  : 					if(hUnit->getOwner() == GC.getGame().getActivePlayer() && hUnit->IsSelected())

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220513[ebp], eax
	mov	ecx, DWORD PTR $T220513[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR $T220522[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T220526[ebp], eax
	mov	ecx, DWORD PTR $T220526[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR $T220522[ebp], eax
	jne	$LN12@ContinueMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220530[ebp], ecx
	mov	ecx, DWORD PTR $T220530[ebp]
	call	?IsSelected@CvUnit@@QBE_NXZ		; CvUnit::IsSelected
	movzx	edx, al
	test	edx, edx
	je	$LN12@ContinueMi

; 801  : 					{
; 802  : 						const MissionData& kMissionData = *HeadMissionQueueNode(kMissionQueue);

	mov	eax, DWORD PTR _kMissionQueue$217718[ebp]
	push	eax
	call	?HeadMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::HeadMissionQueueNode
	add	esp, 4
	mov	DWORD PTR _kMissionData$217880[ebp], eax

; 803  : 
; 804  : 						if((kMissionData.eMissionType == CvTypes::getMISSION_MOVE_TO()) ||
; 805  : 						        (kMissionData.eMissionType == CvTypes::getMISSION_ROUTE_TO()) ||
; 806  : 						        (kMissionData.eMissionType == CvTypes::getMISSION_MOVE_TO_UNIT()))

	call	?getMISSION_MOVE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MOVE_TO
	mov	ecx, DWORD PTR _kMissionData$217880[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN10@ContinueMi
	call	?getMISSION_ROUTE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ROUTE_TO
	mov	edx, DWORD PTR _kMissionData$217880[ebp]
	cmp	DWORD PTR [edx], eax
	je	SHORT $LN10@ContinueMi
	call	?getMISSION_MOVE_TO_UNIT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MOVE_TO_UNIT
	mov	ecx, DWORD PTR _kMissionData$217880[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	$LN12@ContinueMi
$LN10@ContinueMi:

; 807  : 						{
; 808  : 							// How long does the camera wait before jumping to the next item?
; 809  : 							int iCameraTime;
; 810  : 
; 811  : 							if(GET_PLAYER(hUnit->getOwner()).isOption(PLAYEROPTION_QUICK_MOVES))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220534[ebp], edx
	mov	eax, DWORD PTR $T220534[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR $T220543[ebp], ecx
	mov	edx, DWORD PTR $T220543[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T220547[ebp], edx
	push	3
	mov	ecx, DWORD PTR $T220547[ebp]
	call	?isOption@CvPlayer@@QBE_NW4PlayerOptionTypes@@@Z ; CvPlayer::isOption
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@ContinueMi

; 812  : 							{
; 813  : 								iCameraTime = 1;

	mov	DWORD PTR _iCameraTime$217883[ebp], 1
	jmp	SHORT $LN8@ContinueMi
$LN9@ContinueMi:

; 814  : 							}
; 815  : 							// If our move revealed a Plot, camera jumps slower
; 816  : 							else if(GC.GetEngineUserInterface()->IsSelectedUnitRevealingNewPlots())

	mov	ecx, DWORD PTR $T220551[ebp]
	mov	DWORD PTR tv1100[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv1100[ebp], edx
	mov	eax, DWORD PTR tv1100[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv1100[ebp]
	mov	eax, DWORD PTR [edx+228]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@ContinueMi

; 817  : 							{
; 818  : 								iCameraTime = 10;

	mov	DWORD PTR _iCameraTime$217883[ebp], 10	; 0000000aH

; 819  : 							}
; 820  : 							// No plots revealed by this move, go quicker
; 821  : 							else

	jmp	SHORT $LN8@ContinueMi
$LN7@ContinueMi:

; 822  : 							{
; 823  : 								iCameraTime = 5;

	mov	DWORD PTR _iCameraTime$217883[ebp], 5
$LN8@ContinueMi:

; 824  : 							}
; 825  : 
; 826  : 							GC.GetEngineUserInterface()->changeCycleSelectionCounter(iCameraTime);

	mov	edx, DWORD PTR $T220555[ebp]
	mov	DWORD PTR tv1113[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv1113[ebp], eax
	mov	ecx, DWORD PTR _iCameraTime$217883[ebp]
	push	ecx
	mov	edx, DWORD PTR tv1113[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv1113[ebp]
	mov	edx, DWORD PTR [eax+224]
	call	edx
$LN12@ContinueMi:

; 827  : 						}
; 828  : 					}
; 829  : 
; 830  : 					if(hUnit->m_unitMoveLocs.size() > 0)

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220559[ebp], eax
	mov	ecx, DWORD PTR $T220559[ebp]
	mov	edx, DWORD PTR [ecx+2400]
	mov	DWORD PTR $T220563[ebp], edx
	cmp	DWORD PTR $T220563[ebp], 0
	jbe	SHORT $LN5@ContinueMi

; 831  : 					{
; 832  : 						hUnit->PublishQueuedVisualizationMoves();

	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?PublishQueuedVisualizationMoves@CvUnit@@IAEXXZ ; CvUnit::PublishQueuedVisualizationMoves
$LN5@ContinueMi:

; 833  : 					}
; 834  : 
; 835  : 					DeleteMissionQueueNode(hUnit, HeadMissionQueueNode(hUnit->m_missionQueue));

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220570[ebp], eax
	mov	ecx, DWORD PTR $T220570[ebp]
	add	ecx, 2600				; 00000a28H
	push	ecx
	call	?HeadMissionQueueNode@CvUnitMission@@CAPAUMissionData@@AAV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::HeadMissionQueueNode
	add	esp, 4
	push	eax
	sub	esp, 8
	mov	edx, esp
	mov	DWORD PTR $T219665[ebp], esp
	mov	DWORD PTR $T220580[ebp], edx
	mov	eax, DWORD PTR $T220580[ebp]
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T220580[ebp]
	mov	al, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [edx+4], al
	mov	ecx, DWORD PTR $T220580[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN547@ContinueMi
	mov	edx, DWORD PTR $T220580[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN547@ContinueMi:
	mov	eax, DWORD PTR $T220580[ebp]
	mov	DWORD PTR tv1226[ebp], eax
	call	?DeleteMissionQueueNode@CvUnitMission@@CAPAUMissionData@@V?$FObjectHandle@VCvUnit@@@@PAU2@@Z ; CvUnitMission::DeleteMissionQueueNode
	add	esp, 12					; 0000000cH
$LN13@ContinueMi:

; 836  : 				}
; 837  : 			}
; 838  : 			else

	jmp	$LN19@ContinueMi
$LN15@ContinueMi:

; 839  : 			{
; 840  : 				// if we can still act, process the mission again
; 841  : 				if(hUnit->canMove() && !hUnit->IsDoingPartialMove())

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220584[ebp], ecx
	mov	ecx, DWORD PTR $T220584[ebp]
	call	?canMove@CvUnit@@QBE_NXZ		; CvUnit::canMove
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@ContinueMi
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220588[ebp], eax
	mov	ecx, DWORD PTR $T220588[ebp]
	call	?IsDoingPartialMove@CvUnit@@QBE_NXZ	; CvUnit::IsDoingPartialMove
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@ContinueMi

; 842  : 				{
; 843  : 					iSteps++;

	mov	edx, DWORD PTR _iSteps$[ebp]
	add	edx, 1
	mov	DWORD PTR _iSteps$[ebp], edx

; 844  : 					bContinueMissionRestart = true;	// keep looping

	mov	BYTE PTR _bContinueMissionRestart$[ebp], 1
	jmp	$LN19@ContinueMi
$LN3@ContinueMi:

; 845  : 				}
; 846  : 				else if(!hUnit->IsBusy() && hUnit->getOwner() == GC.getGame().getActivePlayer() && hUnit->IsSelected())

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220592[ebp], eax
	mov	ecx, DWORD PTR $T220592[ebp]
	call	?IsBusy@CvUnit@@QBE_NXZ			; CvUnit::IsBusy
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN19@ContinueMi
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220596[ebp], edx
	mov	eax, DWORD PTR $T220596[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR $T220605[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T220609[ebp], edx
	mov	ecx, DWORD PTR $T220609[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR $T220605[ebp], eax
	jne	SHORT $LN19@ContinueMi
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220613[ebp], eax
	mov	ecx, DWORD PTR $T220613[ebp]
	call	?IsSelected@CvUnit@@QBE_NXZ		; CvUnit::IsSelected
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN19@ContinueMi

; 847  : 				{
; 848  : 					GC.GetEngineUserInterface()->changeCycleSelectionCounter(1);

	mov	edx, DWORD PTR $T220617[ebp]
	mov	DWORD PTR tv1191[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv1191[ebp], eax
	push	1
	mov	ecx, DWORD PTR tv1191[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv1191[ebp]
	mov	eax, DWORD PTR [edx+224]
	call	eax
$LN19@ContinueMi:

; 849  : 				}
; 850  : 			}
; 851  : 		}
; 852  : 	}

	jmp	$LN109@ContinueMi
$ContinueMissionExit$217677:

; 853  : ContinueMissionExit: // goto destination to clean up the flag value
; 854  : 	hUnit->m_iFlags =hUnit-> m_iFlags & ~CvUnit::UNITFLAG_EVALUATING_MISSION;

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220621[ebp], ecx
	mov	edx, DWORD PTR $T220621[ebp]
	mov	eax, DWORD PTR [edx+1364]
	and	eax, -2					; fffffffeH
	mov	DWORD PTR $T219666[ebp], eax
	mov	ecx, DWORD PTR _hUnit$[ebp]
	add	ecx, 1360				; 00000550H
	mov	DWORD PTR $T220797[ebp], ecx
	mov	edx, DWORD PTR $T220797[ebp]
	mov	eax, DWORD PTR $T219666[ebp]
	cmp	eax, DWORD PTR [edx+4]
	je	SHORT $LN576@ContinueMi
	mov	ecx, DWORD PTR $T220797[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR $T219666[ebp]
	je	SHORT $LN576@ContinueMi
	mov	eax, DWORD PTR $T220797[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T220779[ebp], ecx
	mov	edx, DWORD PTR $T220797[ebp]
	mov	DWORD PTR $T220792[ebp], edx
	lea	eax, DWORD PTR $T220792[ebp]
	push	eax
	lea	ecx, DWORD PTR $T220793[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T220779[ebp]
	add	ecx, 20					; 00000014H
	call	?insert@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@_N@2@ABQAVFAutoVariableBase@@@Z ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::insert
	mov	edx, DWORD PTR $T220797[ebp]
	mov	eax, DWORD PTR $T219666[ebp]
	mov	DWORD PTR [edx+4], eax
$LN576@ContinueMi:

; 855  : 	GC.getGame().SetCombatWarned(false);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T220801[ebp], ecx
	push	0
	mov	ecx, DWORD PTR $T220801[ebp]
	call	?SetCombatWarned@CvGame@@QAEX_N@Z	; CvGame::SetCombatWarned

; 856  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN110@ContinueMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN110@ContinueMi:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z$5:
	lea	ecx, DWORD PTR _hUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__unwindfunclet$?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z$7:
	lea	ecx, DWORD PTR _pTargetUnit$217751[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__unwindfunclet$?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z$8:
	lea	ecx, DWORD PTR _pTargetUnit$217784[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__unwindfunclet$?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z$11:
	lea	ecx, DWORD PTR _pDllPlot$217850[ebp]
	jmp	??1?$auto_ptr@VICvPlot1@@@std@@QAE@XZ	; std::auto_ptr<ICvPlot1>::~auto_ptr<ICvPlot1>
__unwindfunclet$?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z$12:
	mov	eax, DWORD PTR $T219662[ebp]
	push	eax
	call	??3CvDllUnit@@SAXPAX@Z			; CvDllUnit::operator delete
	pop	ecx
	ret	0
__unwindfunclet$?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z$13:
	lea	ecx, DWORD PTR _pDllUnit$217877[ebp]
	jmp	??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ	; std::auto_ptr<ICvUnit1>::~auto_ptr<ICvUnit1>
__ehhandler$?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-2220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z ENDP ; CvUnitMission::ContinueMission
PUBLIC	??_C@_0BA@JEHNJEHH@CanStartMission?$AA@		; `string'
PUBLIC	?CanStartMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@HHHPAVCvPlot@@_N@Z ; CvUnitMission::CanStartMission
EXTRN	?canChangeAdmiralPort@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC ; CvUnit::canChangeAdmiralPort
EXTRN	?canBlastTourism@CvUnit@@QBE_NPBVCvPlot@@_N@Z:PROC ; CvUnit::canBlastTourism
EXTRN	?canGivePolicies@CvUnit@@QBE_NPBVCvPlot@@_N@Z:PROC ; CvUnit::canGivePolicies
EXTRN	?canSellExoticGoods@CvUnit@@QBE_NPBVCvPlot@@_N@Z:PROC ; CvUnit::canSellExoticGoods
EXTRN	?canChangeTradeUnitHomeCity@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC ; CvUnit::canChangeTradeUnitHomeCity
EXTRN	?canCreateGreatWork@CvUnit@@QBE_NPBVCvPlot@@_N@Z:PROC ; CvUnit::canCreateGreatWork
EXTRN	?canPlunderTradeRoute@CvUnit@@QBE_NPBVCvPlot@@_N@Z:PROC ; CvUnit::canPlunderTradeRoute
EXTRN	?canMakeTradeRoute@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC ; CvUnit::canMakeTradeRoute
EXTRN	?canLead@CvUnit@@QBEHPBVCvPlot@@H@Z:PROC	; CvUnit::canLead
EXTRN	?canBuild@CvUnit@@QBE_NPBVCvPlot@@W4BuildTypes@@_N2@Z:PROC ; CvUnit::canBuild
EXTRN	?canGoldenAge@CvUnit@@QBE_NPBVCvPlot@@_N@Z:PROC	; CvUnit::canGoldenAge
EXTRN	?CanRemoveHeresy@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC ; CvUnit::CanRemoveHeresy
EXTRN	?CanEnhanceReligion@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC ; CvUnit::CanEnhanceReligion
EXTRN	?CanSpreadReligion@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC ; CvUnit::CanSpreadReligion
EXTRN	?CanFoundReligion@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC ; CvUnit::CanFoundReligion
EXTRN	?CanCultureBomb@CvUnit@@QBE_NPBVCvPlot@@_N@Z:PROC ; CvUnit::CanCultureBomb
EXTRN	?CanBuildSpaceship@CvUnit@@QBE_NPBVCvPlot@@_N@Z:PROC ; CvUnit::CanBuildSpaceship
EXTRN	?canBuyCityState@CvUnit@@QBE_NPBVCvPlot@@_N@Z:PROC ; CvUnit::canBuyCityState
EXTRN	?canRepairFleet@CvUnit@@QBE_NPBVCvPlot@@_N@Z:PROC ; CvUnit::canRepairFleet
EXTRN	?canTrade@CvUnit@@QBE_NPBVCvPlot@@_N@Z:PROC	; CvUnit::canTrade
EXTRN	?canHurry@CvUnit@@QBE_NPBVCvPlot@@_N@Z:PROC	; CvUnit::canHurry
EXTRN	?canDiscover@CvUnit@@QBE_NPBVCvPlot@@_N@Z:PROC	; CvUnit::canDiscover
EXTRN	?canConstruct@CvUnit@@QBE_NPBVCvPlot@@W4BuildingTypes@@@Z:PROC ; CvUnit::canConstruct
EXTRN	?canJoin@CvUnit@@QBE_NPBVCvPlot@@W4SpecialistTypes@@@Z:PROC ; CvUnit::canJoin
EXTRN	?canFound@CvUnit@@QBE_NPBVCvPlot@@_N@Z:PROC	; CvUnit::canFound
EXTRN	?canPillage@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC	; CvUnit::canPillage
EXTRN	?canRangeStrikeAt@CvUnit@@QBE_NHH_N0@Z:PROC	; CvUnit::canRangeStrikeAt
EXTRN	?canRebaseAt@CvUnit@@QBE_NPBVCvPlot@@HH@Z:PROC	; CvUnit::canRebaseAt
EXTRN	?canAirSweepAt@CvUnit@@QBE_NHH@Z:PROC		; CvUnit::canAirSweepAt
EXTRN	?canParadropAt@CvUnit@@QBE_NPBVCvPlot@@HH@Z:PROC ; CvUnit::canParadropAt
EXTRN	?canNukeAt@CvUnit@@QBE_NPBVCvPlot@@HH@Z:PROC	; CvUnit::canNukeAt
EXTRN	?canAirliftAt@CvUnit@@QBE_NPBVCvPlot@@HH@Z:PROC	; CvUnit::canAirliftAt
EXTRN	?canSentry@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC	; CvUnit::canSentry
EXTRN	?getMISSION_ALERT@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_ALERT
EXTRN	?canHeal@CvUnit@@QBE_NPBVCvPlot@@_N@Z:PROC	; CvUnit::canHeal
EXTRN	?getMISSION_HEAL@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_HEAL
EXTRN	?canAirPatrol@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC	; CvUnit::canAirPatrol
EXTRN	?getMISSION_AIRPATROL@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_AIRPATROL
EXTRN	?canDisembark@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC	; CvUnit::canDisembark
EXTRN	?canEmbark@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC	; CvUnit::canEmbark
EXTRN	?canSetUpForRangedAttack@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC ; CvUnit::canSetUpForRangedAttack
EXTRN	?canFortify@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC	; CvUnit::canFortify
EXTRN	?getMISSION_FORTIFY@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_FORTIFY
EXTRN	?canSleep@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC	; CvUnit::canSleep
EXTRN	?getMISSION_SLEEP@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_SLEEP
EXTRN	?canHold@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC	; CvUnit::canHold
EXTRN	?getMISSION_SKIP@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_SKIP
EXTRN	?atPlot@CvUnit@@QBE_NABVCvPlot@@@Z:PROC		; CvUnit::atPlot
EXTRN	?at@CvPlot@@QBE_NHH@Z:PROC			; CvPlot::at
EXTRN	?IsImmobile@CvUnit@@QBE_NXZ:PROC		; CvUnit::IsImmobile
EXTRN	??1CvLuaArgsHandle@@QAE@XZ:PROC			; CvLuaArgsHandle::~CvLuaArgsHandle
EXTRN	?CallTestAll@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z:PROC ; LuaSupport::CallTestAll
EXTRN	??0CvLuaArgsHandle@@QAE@XZ:PROC			; CvLuaArgsHandle::CvLuaArgsHandle
;	COMDAT ??_C@_0BA@JEHNJEHH@CanStartMission?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
CONST	SEGMENT
??_C@_0BA@JEHNJEHH@CanStartMission?$AA@ DB 'CanStartMission', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CanStartMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@HHHPAVCvPlot@@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CanStartMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@HHHPAVCvPlot@@_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?CanStartMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@HHHPAVCvPlot@@_N@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?CanStartMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@HHHPAVCvPlot@@_N@Z$2
__ehfuncinfo$?CanStartMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@HHHPAVCvPlot@@_N@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?CanStartMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@HHHPAVCvPlot@@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvunitmission.cpp
xdata$x	ENDS
;	COMDAT ?CanStartMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@HHHPAVCvPlot@@_N@Z
_TEXT	SEGMENT
tv146 = -324						; size = 4
tv135 = -320						; size = 4
tv92 = -316						; size = 4
tv81 = -312						; size = 4
$T222053 = -308						; size = 4
$T222031 = -304						; size = 4
$T221991 = -300						; size = 4
$T221951 = -296						; size = 4
$T221929 = -292						; size = 4
$T221907 = -288						; size = 4
$T221885 = -284						; size = 4
$T221863 = -280						; size = 4
$T221841 = -276						; size = 4
$T221819 = -272						; size = 4
$T221797 = -268						; size = 4
$T221757 = -264						; size = 4
$T221735 = -260						; size = 4
$T221713 = -256						; size = 4
$T221691 = -252						; size = 4
$T221669 = -248						; size = 4
$T221647 = -244						; size = 4
$T221625 = -240						; size = 4
$T221603 = -236						; size = 4
$T221581 = -232						; size = 4
$T221559 = -228						; size = 4
$T221537 = -224						; size = 4
$T221515 = -220						; size = 4
$T221493 = -216						; size = 4
$T221471 = -212						; size = 4
$T221449 = -208						; size = 4
$T221427 = -204						; size = 4
$T221405 = -200						; size = 4
$T221383 = -196						; size = 4
$T221361 = -192						; size = 4
$T221339 = -188						; size = 4
$T221317 = -184						; size = 4
$T221295 = -180						; size = 4
$T221273 = -176						; size = 4
$T221251 = -172						; size = 4
$T221229 = -168						; size = 4
$T221207 = -164						; size = 4
$T221185 = -160						; size = 4
$T221163 = -156						; size = 4
$T221141 = -152						; size = 4
$T221119 = -148						; size = 4
$T221079 = -144						; size = 4
$T221054 = -140						; size = 4
$T221050 = -136						; size = 4
$T221034 = -132						; size = 4
$T221012 = -128						; size = 4
$T220972 = -124						; size = 4
$T220968 = -120						; size = 4
$T220964 = -116						; size = 4
$T220942 = -112						; size = 4
$T220935 = -108						; size = 4
$T220926 = -104						; size = 4
$T220919 = -100						; size = 4
$T220910 = -96						; size = 4
$T220903 = -92						; size = 4
$T220881 = -88						; size = 4
$T220871 = -82						; size = 1
$T220870 = -81						; size = 1
$T220869 = -80						; size = 1
$T220868 = -79						; size = 1
$T220867 = -78						; size = 1
$T220866 = -77						; size = 1
$T220865 = -76						; size = 1
$T220864 = -75						; size = 1
$T220863 = -74						; size = 1
$T220862 = -73						; size = 1
$T220861 = -72						; size = 1
$T220860 = -71						; size = 1
$T220859 = -70						; size = 1
$T220858 = -69						; size = 1
$T220857 = -68						; size = 1
$T220856 = -67						; size = 1
$T220855 = -66						; size = 1
$T220854 = -65						; size = 1
$T220853 = -64						; size = 1
$T220852 = -63						; size = 1
$T220851 = -62						; size = 1
$T220850 = -61						; size = 1
$T220849 = -60						; size = 1
$T220848 = -59						; size = 1
$T220847 = -58						; size = 1
$T220846 = -57						; size = 1
$T220845 = -56						; size = 1
$T220844 = -55						; size = 1
$T220843 = -54						; size = 1
$T220842 = -53						; size = 1
$T220841 = -52						; size = 1
$T220840 = -51						; size = 1
$T220839 = -50						; size = 1
$T220838 = -49						; size = 1
$T220837 = -48						; size = 1
$T220836 = -47						; size = 1
$T220835 = -46						; size = 1
$T220834 = -45						; size = 1
$T220833 = -44						; size = 1
$T220832 = -43						; size = 1
$T220831 = -42						; size = 1
$T220830 = -41						; size = 1
$T220829 = -40						; size = 1
$T220828 = -39						; size = 1
$T220827 = -38						; size = 1
$T220826 = -37						; size = 1
$T220825 = -36						; size = 1
$T220824 = -35						; size = 1
$T220823 = -34						; size = 1
$T220822 = -33						; size = 1
$T220821 = -32						; size = 1
$T220820 = -31						; size = 1
$T220819 = -30						; size = 1
_bResult$217909 = -29					; size = 1
_args$217908 = -28					; size = 4
_pkScriptSystem$ = -24					; size = 4
_pTargetUnit$ = -20					; size = 8
__$EHRec$ = -12						; size = 12
_hUnit$ = 8						; size = 8
_iMission$ = 16						; size = 4
_iData1$ = 20						; size = 4
_iData2$ = 24						; size = 4
_pPlot$ = 28						; size = 4
_bTestVisible$ = 32					; size = 1
?CanStartMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@HHHPAVCvPlot@@_N@Z PROC ; CvUnitMission::CanStartMission, COMDAT

; 861  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CanStartMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@HHHPAVCvPlot@@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 312				; 00000138H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 862  : 	UnitHandle pTargetUnit;

	mov	DWORD PTR _pTargetUnit$[ebp], 0
	mov	BYTE PTR _pTargetUnit$[ebp+4], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 863  : 
; 864  : 	if(hUnit->IsBusy())

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220881[ebp], eax
	mov	ecx, DWORD PTR $T220881[ebp]
	call	?IsBusy@CvUnit@@QBE_NXZ			; CvUnit::IsBusy
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN145@CanStartMi

; 865  : 	{
; 866  : 		return false;

	mov	BYTE PTR $T220819[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN156@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN156@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN161@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN161@CanStartMi:
	mov	al, BYTE PTR $T220819[ebp]
	jmp	$LN146@CanStartMi
$LN145@CanStartMi:

; 867  : 	}
; 868  : 
; 869  : #ifdef AUI_UNIT_MISSION_FIX_NO_MISSION_ON_DEATH
; 870  : 	if (hUnit->isDelayedDeath())
; 871  : 	{
; 872  : 		return false;
; 873  : 	}
; 874  : #endif
; 875  : 
; 876  : 	// Prevented by scripting?
; 877  : 	ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	edx, DWORD PTR $T220903[ebp]
	mov	DWORD PTR tv81[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv81[ebp], eax
	mov	ecx, DWORD PTR tv81[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv81[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR _pkScriptSystem$[ebp], eax

; 878  : 	if(pkScriptSystem)

	cmp	DWORD PTR _pkScriptSystem$[ebp], 0
	je	$LN144@CanStartMi

; 879  : 	{
; 880  : 		CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$217908[ebp]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 881  : 		args->Push(hUnit->getOwner());

	mov	ecx, DWORD PTR _args$217908[ebp]
	mov	DWORD PTR tv92[ebp], ecx
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220910[ebp], edx
	mov	eax, DWORD PTR $T220910[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR $T220919[ebp], ecx
	mov	edx, DWORD PTR $T220919[ebp]
	push	edx
	mov	eax, DWORD PTR tv92[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv92[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 882  : 		args->Push(hUnit->GetID());

	mov	ecx, DWORD PTR _args$217908[ebp]
	mov	DWORD PTR tv135[ebp], ecx
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220926[ebp], edx
	mov	eax, DWORD PTR $T220926[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	DWORD PTR $T220935[ebp], ecx
	mov	edx, DWORD PTR $T220935[ebp]
	push	edx
	mov	eax, DWORD PTR tv135[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv135[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 883  : 		args->Push(iMission);

	mov	ecx, DWORD PTR _args$217908[ebp]
	mov	DWORD PTR tv146[ebp], ecx
	mov	edx, DWORD PTR _iMission$[ebp]
	push	edx
	mov	eax, DWORD PTR tv146[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv146[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 884  : 
; 885  : 		// Attempt to execute the game events.
; 886  : 		// Will return false if there are no registered listeners.
; 887  : 		bool bResult = false;

	mov	BYTE PTR _bResult$217909[ebp], 0

; 888  : 		if(LuaSupport::CallTestAll(pkScriptSystem, "CanStartMission", args.get(), bResult))

	mov	ecx, DWORD PTR _args$217908[ebp]
	mov	DWORD PTR $T220942[ebp], ecx
	lea	edx, DWORD PTR _bResult$217909[ebp]
	push	edx
	mov	eax, DWORD PTR $T220942[ebp]
	push	eax
	push	OFFSET ??_C@_0BA@JEHNJEHH@CanStartMission?$AA@
	mov	ecx, DWORD PTR _pkScriptSystem$[ebp]
	push	ecx
	call	?CallTestAll@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z ; LuaSupport::CallTestAll
	add	esp, 16					; 00000010H
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN143@CanStartMi

; 889  : 		{
; 890  : 			// Check the result.
; 891  : 			if(bResult == false)

	movzx	eax, BYTE PTR _bResult$217909[ebp]
	test	eax, eax
	jne	SHORT $LN143@CanStartMi

; 892  : 			{
; 893  : 				return false;

	mov	BYTE PTR $T220820[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _args$217908[ebp]
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN188@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN188@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN193@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN193@CanStartMi:
	mov	al, BYTE PTR $T220820[ebp]
	jmp	$LN146@CanStartMi
$LN143@CanStartMi:

; 894  : 			}
; 895  : 		}
; 896  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _args$217908[ebp]
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN144@CanStartMi:

; 897  : 
; 898  : 	if(pPlot == NULL)

	cmp	DWORD PTR _pPlot$[ebp], 0
	jne	SHORT $LN141@CanStartMi

; 899  : 	{
; 900  : 		pPlot = hUnit->plot();

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220964[ebp], ecx
	mov	ecx, DWORD PTR $T220964[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	DWORD PTR _pPlot$[ebp], eax
$LN141@CanStartMi:

; 901  : 	}
; 902  : 
; 903  : 	if(iMission == CvTypes::getMISSION_MOVE_TO() ||
; 904  : 	        iMission == CvTypes::getMISSION_SWAP_UNITS())

	call	?getMISSION_MOVE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MOVE_TO
	cmp	DWORD PTR _iMission$[ebp], eax
	je	SHORT $LN139@CanStartMi
	call	?getMISSION_SWAP_UNITS@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SWAP_UNITS
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	$LN140@CanStartMi
$LN139@CanStartMi:

; 905  : 	{
; 906  : 		if (hUnit->IsImmobile() && hUnit->getDomainType() != DOMAIN_AIR)	// If immobile, we can't move... unless we are an air unit.

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220968[ebp], edx
	mov	ecx, DWORD PTR $T220968[ebp]
	call	?IsImmobile@CvUnit@@QBE_NXZ		; CvUnit::IsImmobile
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN138@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T220972[ebp], ecx
	mov	ecx, DWORD PTR $T220972[ebp]
	call	?getDomainType@CvUnit@@QBE?AW4DomainTypes@@XZ ; CvUnit::getDomainType
	cmp	eax, 1
	je	SHORT $LN138@CanStartMi

; 907  : 		{
; 908  : 			return false;

	mov	BYTE PTR $T220821[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN204@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN204@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN209@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN209@CanStartMi:
	mov	al, BYTE PTR $T220821[ebp]
	jmp	$LN146@CanStartMi
$LN138@CanStartMi:

; 909  : 		}
; 910  : 
; 911  : 		if(!(pPlot->at(iData1, iData2)))

	mov	edx, DWORD PTR _iData2$[ebp]
	push	edx
	mov	eax, DWORD PTR _iData1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?at@CvPlot@@QBE_NHH@Z			; CvPlot::at
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN137@CanStartMi

; 912  : 		{
; 913  : 			return true;

	mov	BYTE PTR $T220822[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN214@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN214@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN219@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN219@CanStartMi:
	mov	al, BYTE PTR $T220822[ebp]
	jmp	$LN146@CanStartMi
$LN137@CanStartMi:

; 914  : 		}
; 915  : 	}

	jmp	$LN136@CanStartMi
$LN140@CanStartMi:

; 916  : 	else if(iMission == CvTypes::getMISSION_ROUTE_TO())

	call	?getMISSION_ROUTE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ROUTE_TO
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN135@CanStartMi

; 917  : 	{
; 918  : 		if(!(pPlot->at(iData1, iData2)) || (hUnit->GetBestBuildRoute(pPlot) != NO_ROUTE))

	mov	edx, DWORD PTR _iData2$[ebp]
	push	edx
	mov	eax, DWORD PTR _iData1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?at@CvPlot@@QBE_NHH@Z			; CvPlot::at
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN133@CanStartMi
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221012[ebp], edx
	push	0
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T221012[ebp]
	call	?GetBestBuildRoute@CvUnit@@QBE?AW4RouteTypes@@PAVCvPlot@@PAW4BuildTypes@@@Z ; CvUnit::GetBestBuildRoute
	cmp	eax, -1
	je	SHORT $LN134@CanStartMi
$LN133@CanStartMi:

; 919  : 		{
; 920  : 			return true;

	mov	BYTE PTR $T220823[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN226@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN226@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN231@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN231@CanStartMi:
	mov	al, BYTE PTR $T220823[ebp]
	jmp	$LN146@CanStartMi
$LN134@CanStartMi:

; 921  : 		}
; 922  : 	}

	jmp	$LN136@CanStartMi
$LN135@CanStartMi:

; 923  : 	else if(iMission == CvTypes::getMISSION_MOVE_TO_UNIT())

	call	?getMISSION_MOVE_TO_UNIT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MOVE_TO_UNIT
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	$LN131@CanStartMi

; 924  : 	{
; 925  : 		CvAssertMsg(iData1 != NO_PLAYER, "iData1 should be a valid Player");
; 926  : 		CvAssertMsg(iData2 != NO_UNIT, "iData2 should be a valid Unit ID");
; 927  : 		if (iData1 != NO_PLAYER && iData2 != NO_UNIT)

	cmp	DWORD PTR _iData1$[ebp], -1
	je	$LN130@CanStartMi
	cmp	DWORD PTR _iData2$[ebp], -1
	je	$LN130@CanStartMi

; 928  : 		{
; 929  : 			pTargetUnit = GET_PLAYER((PlayerTypes)iData1).getUnit(iData2);

	mov	ecx, DWORD PTR _iData1$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T221034[ebp], ecx
	mov	edx, DWORD PTR _iData2$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T221034[ebp]
	call	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z	; CvPlayer::getUnit
	mov	DWORD PTR $T221050[ebp], eax
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN238@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN238@CanStartMi:
	mov	eax, DWORD PTR $T221050[ebp]
	mov	DWORD PTR _pTargetUnit$[ebp], eax
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN239@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN239@CanStartMi:

; 930  : 
; 931  : 			if (pTargetUnit->IsImmobile())

	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	mov	DWORD PTR $T221054[ebp], ecx
	mov	ecx, DWORD PTR $T221054[ebp]
	call	?IsImmobile@CvUnit@@QBE_NXZ		; CvUnit::IsImmobile
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN257@CanStartMi

; 932  : 			{
; 933  : 				return false;

	mov	BYTE PTR $T220824[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN248@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN248@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN253@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN253@CanStartMi:
	mov	al, BYTE PTR $T220824[ebp]
	jmp	$LN146@CanStartMi

; 934  : 			}
; 935  : 
; 936  : 			if((pTargetUnit) && !(pTargetUnit->atPlot(*pPlot)))

$LN257@CanStartMi:
	xor	eax, eax
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	setne	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN128@CanStartMi
	mov	edx, DWORD PTR _pTargetUnit$[ebp]
	mov	DWORD PTR $T221079[ebp], edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T221079[ebp]
	call	?atPlot@CvUnit@@QBE_NABVCvPlot@@@Z	; CvUnit::atPlot
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN128@CanStartMi

; 937  : 			{
; 938  : 				return true;

	mov	BYTE PTR $T220825[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN262@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN262@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN267@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN267@CanStartMi:
	mov	al, BYTE PTR $T220825[ebp]
	jmp	$LN146@CanStartMi
$LN128@CanStartMi:

; 939  : 			}
; 940  : 		}
; 941  : 		else

	jmp	SHORT $LN127@CanStartMi
$LN130@CanStartMi:

; 942  : 			return false;

	mov	BYTE PTR $T220826[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN272@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN272@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN277@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN277@CanStartMi:
	mov	al, BYTE PTR $T220826[ebp]
	jmp	$LN146@CanStartMi
$LN127@CanStartMi:
	jmp	$LN136@CanStartMi
$LN131@CanStartMi:

; 943  : 	}
; 944  : 	else if(iMission == CvTypes::getMISSION_SKIP())

	call	?getMISSION_SKIP@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SKIP
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN125@CanStartMi

; 945  : 	{
; 946  : 		if(hUnit->canHold(pPlot))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221119[ebp], edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T221119[ebp]
	call	?canHold@CvUnit@@QBE_NPBVCvPlot@@@Z	; CvUnit::canHold
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN124@CanStartMi

; 947  : 		{
; 948  : 			return true;

	mov	BYTE PTR $T220827[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN284@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN284@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN289@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN289@CanStartMi:
	mov	al, BYTE PTR $T220827[ebp]
	jmp	$LN146@CanStartMi
$LN124@CanStartMi:

; 949  : 		}
; 950  : 	}

	jmp	$LN136@CanStartMi
$LN125@CanStartMi:

; 951  : 	else if(iMission == CvTypes::getMISSION_SLEEP())

	call	?getMISSION_SLEEP@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SLEEP
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN122@CanStartMi

; 952  : 	{
; 953  : 		if(hUnit->canSleep(pPlot))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221141[ebp], edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T221141[ebp]
	call	?canSleep@CvUnit@@QBE_NPBVCvPlot@@@Z	; CvUnit::canSleep
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN121@CanStartMi

; 954  : 		{
; 955  : 			return true;

	mov	BYTE PTR $T220828[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN296@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN296@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN301@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN301@CanStartMi:
	mov	al, BYTE PTR $T220828[ebp]
	jmp	$LN146@CanStartMi
$LN121@CanStartMi:

; 956  : 		}
; 957  : 	}

	jmp	$LN136@CanStartMi
$LN122@CanStartMi:

; 958  : 	else if(iMission == CvTypes::getMISSION_FORTIFY())

	call	?getMISSION_FORTIFY@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_FORTIFY
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN119@CanStartMi

; 959  : 	{
; 960  : 		if(hUnit->canFortify(pPlot))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221163[ebp], edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T221163[ebp]
	call	?canFortify@CvUnit@@QBE_NPBVCvPlot@@@Z	; CvUnit::canFortify
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN118@CanStartMi

; 961  : 		{
; 962  : 			return true;

	mov	BYTE PTR $T220829[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN308@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN308@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN313@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN313@CanStartMi:
	mov	al, BYTE PTR $T220829[ebp]
	jmp	$LN146@CanStartMi
$LN118@CanStartMi:

; 963  : 		}
; 964  : 	}

	jmp	$LN136@CanStartMi
$LN119@CanStartMi:

; 965  : 	else if(iMission == CvTypes::getMISSION_SET_UP_FOR_RANGED_ATTACK())

	call	?getMISSION_SET_UP_FOR_RANGED_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SET_UP_FOR_RANGED_ATTACK
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN116@CanStartMi

; 966  : 	{
; 967  : 		if(hUnit->canSetUpForRangedAttack(pPlot))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221185[ebp], edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T221185[ebp]
	call	?canSetUpForRangedAttack@CvUnit@@QBE_NPBVCvPlot@@@Z ; CvUnit::canSetUpForRangedAttack
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN115@CanStartMi

; 968  : 		{
; 969  : 			return true;

	mov	BYTE PTR $T220830[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN320@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN320@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN325@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN325@CanStartMi:
	mov	al, BYTE PTR $T220830[ebp]
	jmp	$LN146@CanStartMi
$LN115@CanStartMi:

; 970  : 		}
; 971  : 	}

	jmp	$LN136@CanStartMi
$LN116@CanStartMi:

; 972  : 	else if(iMission == CvTypes::getMISSION_EMBARK())

	call	?getMISSION_EMBARK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_EMBARK
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN113@CanStartMi

; 973  : 	{
; 974  : 		if(hUnit->canEmbark(pPlot))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221207[ebp], edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T221207[ebp]
	call	?canEmbark@CvUnit@@QBE_NPBVCvPlot@@@Z	; CvUnit::canEmbark
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN112@CanStartMi

; 975  : 		{
; 976  : 			return true;

	mov	BYTE PTR $T220831[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN332@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN332@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN337@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN337@CanStartMi:
	mov	al, BYTE PTR $T220831[ebp]
	jmp	$LN146@CanStartMi
$LN112@CanStartMi:

; 977  : 		}
; 978  : 	}

	jmp	$LN136@CanStartMi
$LN113@CanStartMi:

; 979  : 	else if(iMission == CvTypes::getMISSION_DISEMBARK())

	call	?getMISSION_DISEMBARK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_DISEMBARK
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN110@CanStartMi

; 980  : 	{
; 981  : 		if(hUnit->canDisembark(pPlot))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221229[ebp], edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T221229[ebp]
	call	?canDisembark@CvUnit@@QBE_NPBVCvPlot@@@Z ; CvUnit::canDisembark
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN109@CanStartMi

; 982  : 		{
; 983  : 			return true;

	mov	BYTE PTR $T220832[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN344@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN344@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN349@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN349@CanStartMi:
	mov	al, BYTE PTR $T220832[ebp]
	jmp	$LN146@CanStartMi
$LN109@CanStartMi:

; 984  : 		}
; 985  : 	}

	jmp	$LN136@CanStartMi
$LN110@CanStartMi:

; 986  : 	else if(iMission == CvTypes::getMISSION_AIRPATROL())

	call	?getMISSION_AIRPATROL@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_AIRPATROL
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN107@CanStartMi

; 987  : 	{
; 988  : 		if(hUnit->canAirPatrol(pPlot))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221251[ebp], edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T221251[ebp]
	call	?canAirPatrol@CvUnit@@QBE_NPBVCvPlot@@@Z ; CvUnit::canAirPatrol
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN106@CanStartMi

; 989  : 		{
; 990  : 			return true;

	mov	BYTE PTR $T220833[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN356@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN356@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN361@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN361@CanStartMi:
	mov	al, BYTE PTR $T220833[ebp]
	jmp	$LN146@CanStartMi
$LN106@CanStartMi:

; 991  : 		}
; 992  : 	}

	jmp	$LN136@CanStartMi
$LN107@CanStartMi:

; 993  : 	else if(iMission == CvTypes::getMISSION_HEAL())

	call	?getMISSION_HEAL@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_HEAL
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN104@CanStartMi

; 994  : 	{
; 995  : 		if(hUnit->canHeal(pPlot, bTestVisible))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221273[ebp], edx
	movzx	eax, BYTE PTR _bTestVisible$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T221273[ebp]
	call	?canHeal@CvUnit@@QBE_NPBVCvPlot@@_N@Z	; CvUnit::canHeal
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN103@CanStartMi

; 996  : 		{
; 997  : 			return true;

	mov	BYTE PTR $T220834[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN368@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN368@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN373@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN373@CanStartMi:
	mov	al, BYTE PTR $T220834[ebp]
	jmp	$LN146@CanStartMi
$LN103@CanStartMi:

; 998  : 		}
; 999  : 	}

	jmp	$LN136@CanStartMi
$LN104@CanStartMi:

; 1000 : 	else if(iMission == CvTypes::getMISSION_ALERT())

	call	?getMISSION_ALERT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ALERT
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN101@CanStartMi

; 1001 : 	{
; 1002 : 		if(hUnit->canSentry(pPlot))

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221295[ebp], eax
	mov	ecx, DWORD PTR _pPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T221295[ebp]
	call	?canSentry@CvUnit@@QBE_NPBVCvPlot@@@Z	; CvUnit::canSentry
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN100@CanStartMi

; 1003 : 		{
; 1004 : 			return true;

	mov	BYTE PTR $T220835[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN380@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN380@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN385@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN385@CanStartMi:
	mov	al, BYTE PTR $T220835[ebp]
	jmp	$LN146@CanStartMi
$LN100@CanStartMi:

; 1005 : 		}
; 1006 : 	}

	jmp	$LN136@CanStartMi
$LN101@CanStartMi:

; 1007 : 	else if(iMission == CvTypes::getMISSION_AIRLIFT())

	call	?getMISSION_AIRLIFT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_AIRLIFT
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN98@CanStartMi

; 1008 : 	{
; 1009 : 		if(hUnit->canAirliftAt(pPlot, iData1, iData2))

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221317[ebp], eax
	mov	ecx, DWORD PTR _iData2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iData1$[ebp]
	push	edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T221317[ebp]
	call	?canAirliftAt@CvUnit@@QBE_NPBVCvPlot@@HH@Z ; CvUnit::canAirliftAt
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN97@CanStartMi

; 1010 : 		{
; 1011 : 			return true;

	mov	BYTE PTR $T220836[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN392@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN392@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN397@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN397@CanStartMi:
	mov	al, BYTE PTR $T220836[ebp]
	jmp	$LN146@CanStartMi
$LN97@CanStartMi:

; 1012 : 		}
; 1013 : 	}

	jmp	$LN136@CanStartMi
$LN98@CanStartMi:

; 1014 : 	else if(iMission == CvTypes::getMISSION_NUKE())

	call	?getMISSION_NUKE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_NUKE
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN95@CanStartMi

; 1015 : 	{
; 1016 : 		if(hUnit->canNukeAt(pPlot, iData1, iData2))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221339[ebp], edx
	mov	eax, DWORD PTR _iData2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iData1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T221339[ebp]
	call	?canNukeAt@CvUnit@@QBE_NPBVCvPlot@@HH@Z	; CvUnit::canNukeAt
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN94@CanStartMi

; 1017 : 		{
; 1018 : 			return true;

	mov	BYTE PTR $T220837[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN404@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN404@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN409@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN409@CanStartMi:
	mov	al, BYTE PTR $T220837[ebp]
	jmp	$LN146@CanStartMi
$LN94@CanStartMi:

; 1019 : 		}
; 1020 : 	}

	jmp	$LN136@CanStartMi
$LN95@CanStartMi:

; 1021 : 	else if(iMission == CvTypes::getMISSION_PARADROP())

	call	?getMISSION_PARADROP@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_PARADROP
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN92@CanStartMi

; 1022 : 	{
; 1023 : 		if(hUnit->canParadropAt(pPlot, iData1, iData2))

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221361[ebp], ecx
	mov	edx, DWORD PTR _iData2$[ebp]
	push	edx
	mov	eax, DWORD PTR _iData1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T221361[ebp]
	call	?canParadropAt@CvUnit@@QBE_NPBVCvPlot@@HH@Z ; CvUnit::canParadropAt
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN91@CanStartMi

; 1024 : 		{
; 1025 : 			return true;

	mov	BYTE PTR $T220838[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN416@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN416@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN421@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN421@CanStartMi:
	mov	al, BYTE PTR $T220838[ebp]
	jmp	$LN146@CanStartMi
$LN91@CanStartMi:

; 1026 : 		}
; 1027 : 	}

	jmp	$LN136@CanStartMi
$LN92@CanStartMi:

; 1028 : 	else if(iMission == CvTypes::getMISSION_AIR_SWEEP())

	call	?getMISSION_AIR_SWEEP@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_AIR_SWEEP
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN89@CanStartMi

; 1029 : 	{
; 1030 : 		if(hUnit->canAirSweepAt(iData1, iData2))

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221383[ebp], eax
	mov	ecx, DWORD PTR _iData2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iData1$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T221383[ebp]
	call	?canAirSweepAt@CvUnit@@QBE_NHH@Z	; CvUnit::canAirSweepAt
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN88@CanStartMi

; 1031 : 		{
; 1032 : 			return true;

	mov	BYTE PTR $T220839[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN428@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN428@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN433@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN433@CanStartMi:
	mov	al, BYTE PTR $T220839[ebp]
	jmp	$LN146@CanStartMi
$LN88@CanStartMi:

; 1033 : 		}
; 1034 : 	}

	jmp	$LN136@CanStartMi
$LN89@CanStartMi:

; 1035 : 	else if(iMission == CvTypes::getMISSION_REBASE())

	call	?getMISSION_REBASE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_REBASE
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN86@CanStartMi

; 1036 : 	{
; 1037 : 		if(hUnit->canRebaseAt(pPlot, iData1, iData2))

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221405[ebp], ecx
	mov	edx, DWORD PTR _iData2$[ebp]
	push	edx
	mov	eax, DWORD PTR _iData1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T221405[ebp]
	call	?canRebaseAt@CvUnit@@QBE_NPBVCvPlot@@HH@Z ; CvUnit::canRebaseAt
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN85@CanStartMi

; 1038 : 		{
; 1039 : 			return true;

	mov	BYTE PTR $T220840[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN440@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN440@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN445@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN445@CanStartMi:
	mov	al, BYTE PTR $T220840[ebp]
	jmp	$LN146@CanStartMi
$LN85@CanStartMi:

; 1040 : 		}
; 1041 : 	}

	jmp	$LN136@CanStartMi
$LN86@CanStartMi:

; 1042 : 	else if(iMission == CvTypes::getMISSION_RANGE_ATTACK())

	call	?getMISSION_RANGE_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_RANGE_ATTACK
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN83@CanStartMi

; 1043 : 	{
; 1044 : 		if(hUnit->canRangeStrikeAt(iData1, iData2))

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221427[ebp], eax
	push	1
	push	1
	mov	ecx, DWORD PTR _iData2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iData1$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T221427[ebp]
	call	?canRangeStrikeAt@CvUnit@@QBE_NHH_N0@Z	; CvUnit::canRangeStrikeAt
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN82@CanStartMi

; 1045 : 		{
; 1046 : 			return true;

	mov	BYTE PTR $T220841[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN452@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN452@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN457@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN457@CanStartMi:
	mov	al, BYTE PTR $T220841[ebp]
	jmp	$LN146@CanStartMi
$LN82@CanStartMi:

; 1047 : 		}
; 1048 : 	}

	jmp	$LN136@CanStartMi
$LN83@CanStartMi:

; 1049 : 	else if(iMission == CvTypes::getMISSION_PILLAGE())

	call	?getMISSION_PILLAGE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_PILLAGE
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN80@CanStartMi

; 1050 : 	{
; 1051 : 		if(hUnit->canPillage(pPlot))

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221449[ebp], ecx
	mov	edx, DWORD PTR _pPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T221449[ebp]
	call	?canPillage@CvUnit@@QBE_NPBVCvPlot@@@Z	; CvUnit::canPillage
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN79@CanStartMi

; 1052 : 		{
; 1053 : 			return true;

	mov	BYTE PTR $T220842[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN464@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN464@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN469@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN469@CanStartMi:
	mov	al, BYTE PTR $T220842[ebp]
	jmp	$LN146@CanStartMi
$LN79@CanStartMi:

; 1054 : 		}
; 1055 : 	}

	jmp	$LN136@CanStartMi
$LN80@CanStartMi:

; 1056 : 	else if(iMission == CvTypes::getMISSION_FOUND())

	call	?getMISSION_FOUND@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_FOUND
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN77@CanStartMi

; 1057 : 	{
; 1058 : 		if(hUnit->canFound(pPlot, bTestVisible))

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221471[ebp], ecx
	movzx	edx, BYTE PTR _bTestVisible$[ebp]
	push	edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T221471[ebp]
	call	?canFound@CvUnit@@QBE_NPBVCvPlot@@_N@Z	; CvUnit::canFound
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN76@CanStartMi

; 1059 : 		{
; 1060 : 			return true;

	mov	BYTE PTR $T220843[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN476@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN476@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN481@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN481@CanStartMi:
	mov	al, BYTE PTR $T220843[ebp]
	jmp	$LN146@CanStartMi
$LN76@CanStartMi:

; 1061 : 		}
; 1062 : 	}

	jmp	$LN136@CanStartMi
$LN77@CanStartMi:

; 1063 : 	else if(iMission == CvTypes::getMISSION_JOIN())

	call	?getMISSION_JOIN@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_JOIN
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN74@CanStartMi

; 1064 : 	{
; 1065 : 		if(hUnit->canJoin(pPlot, ((SpecialistTypes)iData1)))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221493[ebp], edx
	mov	eax, DWORD PTR _iData1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T221493[ebp]
	call	?canJoin@CvUnit@@QBE_NPBVCvPlot@@W4SpecialistTypes@@@Z ; CvUnit::canJoin
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN73@CanStartMi

; 1066 : 		{
; 1067 : 			return true;

	mov	BYTE PTR $T220844[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN488@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN488@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN493@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN493@CanStartMi:
	mov	al, BYTE PTR $T220844[ebp]
	jmp	$LN146@CanStartMi
$LN73@CanStartMi:

; 1068 : 		}
; 1069 : 	}

	jmp	$LN136@CanStartMi
$LN74@CanStartMi:

; 1070 : 	else if(iMission == CvTypes::getMISSION_CONSTRUCT())

	call	?getMISSION_CONSTRUCT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_CONSTRUCT
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN71@CanStartMi

; 1071 : 	{
; 1072 : 		if(hUnit->canConstruct(pPlot, ((BuildingTypes)iData1)))

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221515[ebp], eax
	mov	ecx, DWORD PTR _iData1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T221515[ebp]
	call	?canConstruct@CvUnit@@QBE_NPBVCvPlot@@W4BuildingTypes@@@Z ; CvUnit::canConstruct
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN70@CanStartMi

; 1073 : 		{
; 1074 : 			return true;

	mov	BYTE PTR $T220845[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN500@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN500@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN505@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN505@CanStartMi:
	mov	al, BYTE PTR $T220845[ebp]
	jmp	$LN146@CanStartMi
$LN70@CanStartMi:

; 1075 : 		}
; 1076 : 	}

	jmp	$LN136@CanStartMi
$LN71@CanStartMi:

; 1077 : 	else if(iMission == CvTypes::getMISSION_DISCOVER())

	call	?getMISSION_DISCOVER@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_DISCOVER
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN68@CanStartMi

; 1078 : 	{
; 1079 : 		if(hUnit->canDiscover(pPlot, bTestVisible))

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221537[ebp], ecx
	movzx	edx, BYTE PTR _bTestVisible$[ebp]
	push	edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T221537[ebp]
	call	?canDiscover@CvUnit@@QBE_NPBVCvPlot@@_N@Z ; CvUnit::canDiscover
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN67@CanStartMi

; 1080 : 		{
; 1081 : 			return true;

	mov	BYTE PTR $T220846[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN512@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN512@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN517@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN517@CanStartMi:
	mov	al, BYTE PTR $T220846[ebp]
	jmp	$LN146@CanStartMi
$LN67@CanStartMi:

; 1082 : 		}
; 1083 : 	}

	jmp	$LN136@CanStartMi
$LN68@CanStartMi:

; 1084 : 	else if(iMission == CvTypes::getMISSION_HURRY())

	call	?getMISSION_HURRY@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_HURRY
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN65@CanStartMi

; 1085 : 	{
; 1086 : 		//if (hUnit->IsCanRushBuilding(pPlot->getPlotCity(), bTestVisible))
; 1087 : 		if(hUnit->canHurry(pPlot, bTestVisible))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221559[ebp], edx
	movzx	eax, BYTE PTR _bTestVisible$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T221559[ebp]
	call	?canHurry@CvUnit@@QBE_NPBVCvPlot@@_N@Z	; CvUnit::canHurry
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN64@CanStartMi

; 1088 : 		{
; 1089 : 			return true;

	mov	BYTE PTR $T220847[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN524@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN524@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN529@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN529@CanStartMi:
	mov	al, BYTE PTR $T220847[ebp]
	jmp	$LN146@CanStartMi
$LN64@CanStartMi:

; 1090 : 		}
; 1091 : 	}

	jmp	$LN136@CanStartMi
$LN65@CanStartMi:

; 1092 : 	else if(iMission == CvTypes::getMISSION_TRADE())

	call	?getMISSION_TRADE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_TRADE
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN62@CanStartMi

; 1093 : 	{
; 1094 : 		if(hUnit->canTrade(pPlot, bTestVisible))

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221581[ebp], eax
	movzx	ecx, BYTE PTR _bTestVisible$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T221581[ebp]
	call	?canTrade@CvUnit@@QBE_NPBVCvPlot@@_N@Z	; CvUnit::canTrade
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN61@CanStartMi

; 1095 : 		{
; 1096 : 			return true;

	mov	BYTE PTR $T220848[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN536@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN536@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN541@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN541@CanStartMi:
	mov	al, BYTE PTR $T220848[ebp]
	jmp	$LN146@CanStartMi
$LN61@CanStartMi:

; 1097 : 		}
; 1098 : 	}

	jmp	$LN136@CanStartMi
$LN62@CanStartMi:

; 1099 : 	else if(iMission == CvTypes::getMISSION_REPAIR_FLEET())

	call	?getMISSION_REPAIR_FLEET@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_REPAIR_FLEET
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN59@CanStartMi

; 1100 : 	{
; 1101 : 		if(hUnit->canRepairFleet(pPlot, bTestVisible))

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221603[ebp], ecx
	movzx	edx, BYTE PTR _bTestVisible$[ebp]
	push	edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T221603[ebp]
	call	?canRepairFleet@CvUnit@@QBE_NPBVCvPlot@@_N@Z ; CvUnit::canRepairFleet
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN58@CanStartMi

; 1102 : 		{
; 1103 : 			return true;

	mov	BYTE PTR $T220849[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN548@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN548@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN553@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN553@CanStartMi:
	mov	al, BYTE PTR $T220849[ebp]
	jmp	$LN146@CanStartMi
$LN58@CanStartMi:

; 1104 : 		}
; 1105 : 	}

	jmp	$LN136@CanStartMi
$LN59@CanStartMi:

; 1106 : 	else if (iMission == CvTypes::getMISSION_BUY_CITY_STATE())

	call	?getMISSION_BUY_CITY_STATE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_BUY_CITY_STATE
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN56@CanStartMi

; 1107 : 	{
; 1108 : 		if (hUnit->canBuyCityState(pPlot, bTestVisible))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221625[ebp], edx
	movzx	eax, BYTE PTR _bTestVisible$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T221625[ebp]
	call	?canBuyCityState@CvUnit@@QBE_NPBVCvPlot@@_N@Z ; CvUnit::canBuyCityState
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN55@CanStartMi

; 1109 : 		{
; 1110 : 			return true;

	mov	BYTE PTR $T220850[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN560@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN560@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN565@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN565@CanStartMi:
	mov	al, BYTE PTR $T220850[ebp]
	jmp	$LN146@CanStartMi
$LN55@CanStartMi:

; 1111 : 		}
; 1112 : 	}

	jmp	$LN136@CanStartMi
$LN56@CanStartMi:

; 1113 : 	else if(iMission == CvTypes::getMISSION_SPACESHIP())

	call	?getMISSION_SPACESHIP@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SPACESHIP
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN53@CanStartMi

; 1114 : 	{
; 1115 : 		if(hUnit->CanBuildSpaceship(pPlot, bTestVisible))

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221647[ebp], eax
	movzx	ecx, BYTE PTR _bTestVisible$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T221647[ebp]
	call	?CanBuildSpaceship@CvUnit@@QBE_NPBVCvPlot@@_N@Z ; CvUnit::CanBuildSpaceship
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN52@CanStartMi

; 1116 : 		{
; 1117 : 			return true;

	mov	BYTE PTR $T220851[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN572@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN572@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN577@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN577@CanStartMi:
	mov	al, BYTE PTR $T220851[ebp]
	jmp	$LN146@CanStartMi
$LN52@CanStartMi:

; 1118 : 		}
; 1119 : 	}

	jmp	$LN136@CanStartMi
$LN53@CanStartMi:

; 1120 : 	else if(iMission == CvTypes::getMISSION_CULTURE_BOMB())

	call	?getMISSION_CULTURE_BOMB@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_CULTURE_BOMB
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN50@CanStartMi

; 1121 : 	{
; 1122 : 		if(hUnit->CanCultureBomb(pPlot, bTestVisible))

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221669[ebp], ecx
	movzx	edx, BYTE PTR _bTestVisible$[ebp]
	push	edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T221669[ebp]
	call	?CanCultureBomb@CvUnit@@QBE_NPBVCvPlot@@_N@Z ; CvUnit::CanCultureBomb
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN49@CanStartMi

; 1123 : 		{
; 1124 : 			return true;

	mov	BYTE PTR $T220852[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN584@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN584@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN589@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN589@CanStartMi:
	mov	al, BYTE PTR $T220852[ebp]
	jmp	$LN146@CanStartMi
$LN49@CanStartMi:

; 1125 : 		}
; 1126 : 	}

	jmp	$LN136@CanStartMi
$LN50@CanStartMi:

; 1127 : 	else if(iMission == CvTypes::getMISSION_FOUND_RELIGION())

	call	?getMISSION_FOUND_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_FOUND_RELIGION
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN47@CanStartMi

; 1128 : 	{
; 1129 : 		if(hUnit->CanFoundReligion(pPlot))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221691[ebp], edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T221691[ebp]
	call	?CanFoundReligion@CvUnit@@QBE_NPBVCvPlot@@@Z ; CvUnit::CanFoundReligion
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN46@CanStartMi

; 1130 : 		{
; 1131 : 			return true;

	mov	BYTE PTR $T220853[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN596@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN596@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN601@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN601@CanStartMi:
	mov	al, BYTE PTR $T220853[ebp]
	jmp	$LN146@CanStartMi
$LN46@CanStartMi:

; 1132 : 		}
; 1133 : 	}

	jmp	$LN136@CanStartMi
$LN47@CanStartMi:

; 1134 : 	else if(iMission == CvTypes::getMISSION_SPREAD_RELIGION())

	call	?getMISSION_SPREAD_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SPREAD_RELIGION
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN44@CanStartMi

; 1135 : 	{
; 1136 : 		if(hUnit->CanSpreadReligion(pPlot))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221713[ebp], edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T221713[ebp]
	call	?CanSpreadReligion@CvUnit@@QBE_NPBVCvPlot@@@Z ; CvUnit::CanSpreadReligion
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN43@CanStartMi

; 1137 : 		{
; 1138 : 			return true;

	mov	BYTE PTR $T220854[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN608@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN608@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN613@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN613@CanStartMi:
	mov	al, BYTE PTR $T220854[ebp]
	jmp	$LN146@CanStartMi
$LN43@CanStartMi:

; 1139 : 		}
; 1140 : 	}

	jmp	$LN136@CanStartMi
$LN44@CanStartMi:

; 1141 : 	else if(iMission == CvTypes::getMISSION_ENHANCE_RELIGION())

	call	?getMISSION_ENHANCE_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ENHANCE_RELIGION
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN41@CanStartMi

; 1142 : 	{
; 1143 : 		if(hUnit->CanEnhanceReligion(pPlot))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221735[ebp], edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T221735[ebp]
	call	?CanEnhanceReligion@CvUnit@@QBE_NPBVCvPlot@@@Z ; CvUnit::CanEnhanceReligion
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN40@CanStartMi

; 1144 : 		{
; 1145 : 			return true;

	mov	BYTE PTR $T220855[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN620@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN620@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN625@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN625@CanStartMi:
	mov	al, BYTE PTR $T220855[ebp]
	jmp	$LN146@CanStartMi
$LN40@CanStartMi:

; 1146 : 		}
; 1147 : 	}

	jmp	$LN136@CanStartMi
$LN41@CanStartMi:

; 1148 : 	else if(iMission == CvTypes::getMISSION_REMOVE_HERESY())

	call	?getMISSION_REMOVE_HERESY@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_REMOVE_HERESY
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN38@CanStartMi

; 1149 : 	{
; 1150 : 		if(hUnit->CanRemoveHeresy(pPlot))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221757[ebp], edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T221757[ebp]
	call	?CanRemoveHeresy@CvUnit@@QBE_NPBVCvPlot@@@Z ; CvUnit::CanRemoveHeresy
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN37@CanStartMi

; 1151 : 		{
; 1152 : 			return true;

	mov	BYTE PTR $T220856[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN632@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN632@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN637@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN637@CanStartMi:
	mov	al, BYTE PTR $T220856[ebp]
	jmp	$LN146@CanStartMi
$LN37@CanStartMi:

; 1153 : 		}
; 1154 : 	}

	jmp	$LN136@CanStartMi
$LN38@CanStartMi:

; 1155 : 	else if(iMission == CvTypes::getMISSION_GOLDEN_AGE())

	call	?getMISSION_GOLDEN_AGE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_GOLDEN_AGE
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	$LN35@CanStartMi

; 1156 : 	{
; 1157 : 		//this means to play the animation only
; 1158 : 		if(iData1 != -1)

	cmp	DWORD PTR _iData1$[ebp], -1
	je	SHORT $LN34@CanStartMi

; 1159 : 		{
; 1160 : 			return true;

	mov	BYTE PTR $T220857[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN642@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN642@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN647@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN647@CanStartMi:
	mov	al, BYTE PTR $T220857[ebp]
	jmp	$LN146@CanStartMi
$LN34@CanStartMi:

; 1161 : 		}
; 1162 : 
; 1163 : 		if(hUnit->canGoldenAge(pPlot, bTestVisible))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221797[ebp], edx
	movzx	eax, BYTE PTR _bTestVisible$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T221797[ebp]
	call	?canGoldenAge@CvUnit@@QBE_NPBVCvPlot@@_N@Z ; CvUnit::canGoldenAge
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN33@CanStartMi

; 1164 : 		{
; 1165 : 			return true;

	mov	BYTE PTR $T220858[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN654@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN654@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN659@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN659@CanStartMi:
	mov	al, BYTE PTR $T220858[ebp]
	jmp	$LN146@CanStartMi
$LN33@CanStartMi:

; 1166 : 		}
; 1167 : 	}

	jmp	$LN136@CanStartMi
$LN35@CanStartMi:

; 1168 : 	else if(iMission == CvTypes::getMISSION_BUILD())

	call	?getMISSION_BUILD@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_BUILD
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN31@CanStartMi

; 1169 : 	{
; 1170 : 		CvAssertMsg(((BuildTypes)iData1) < GC.getNumBuildInfos(), "Invalid Build");
; 1171 : 		if(hUnit->canBuild(pPlot, ((BuildTypes)iData1), bTestVisible))

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221819[ebp], eax
	push	1
	movzx	ecx, BYTE PTR _bTestVisible$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iData1$[ebp]
	push	edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T221819[ebp]
	call	?canBuild@CvUnit@@QBE_NPBVCvPlot@@W4BuildTypes@@_N2@Z ; CvUnit::canBuild
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN30@CanStartMi

; 1172 : 		{
; 1173 : 			return true;

	mov	BYTE PTR $T220859[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN666@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN666@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN671@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN671@CanStartMi:
	mov	al, BYTE PTR $T220859[ebp]
	jmp	$LN146@CanStartMi
$LN30@CanStartMi:

; 1174 : 		}
; 1175 : 	}

	jmp	$LN136@CanStartMi
$LN31@CanStartMi:

; 1176 : 	else if(iMission == CvTypes::getMISSION_LEAD())

	call	?getMISSION_LEAD@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_LEAD
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN28@CanStartMi

; 1177 : 	{
; 1178 : 		if(hUnit->canLead(pPlot, iData1))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221841[ebp], edx
	mov	eax, DWORD PTR _iData1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T221841[ebp]
	call	?canLead@CvUnit@@QBEHPBVCvPlot@@H@Z	; CvUnit::canLead
	test	eax, eax
	je	SHORT $LN27@CanStartMi

; 1179 : 		{
; 1180 : 			return true;

	mov	BYTE PTR $T220860[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN678@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN678@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN683@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN683@CanStartMi:
	mov	al, BYTE PTR $T220860[ebp]
	jmp	$LN146@CanStartMi
$LN27@CanStartMi:

; 1181 : 		}
; 1182 : 	}

	jmp	$LN136@CanStartMi
$LN28@CanStartMi:

; 1183 : 	else if (iMission == CvTypes::getMISSION_ESTABLISH_TRADE_ROUTE())

	call	?getMISSION_ESTABLISH_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ESTABLISH_TRADE_ROUTE
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN25@CanStartMi

; 1184 : 	{
; 1185 : 		if (hUnit->canMakeTradeRoute(pPlot))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221863[ebp], edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T221863[ebp]
	call	?canMakeTradeRoute@CvUnit@@QBE_NPBVCvPlot@@@Z ; CvUnit::canMakeTradeRoute
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN24@CanStartMi

; 1186 : 		{
; 1187 : 			return true;

	mov	BYTE PTR $T220861[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN690@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN690@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN695@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN695@CanStartMi:
	mov	al, BYTE PTR $T220861[ebp]
	jmp	$LN146@CanStartMi
$LN24@CanStartMi:

; 1188 : 		}
; 1189 : 	}

	jmp	$LN136@CanStartMi
$LN25@CanStartMi:

; 1190 : 	else if (iMission == CvTypes::getMISSION_PLUNDER_TRADE_ROUTE())

	call	?getMISSION_PLUNDER_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_PLUNDER_TRADE_ROUTE
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN22@CanStartMi

; 1191 : 	{
; 1192 : 		if (hUnit->canPlunderTradeRoute(pPlot, bTestVisible))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221885[ebp], edx
	movzx	eax, BYTE PTR _bTestVisible$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T221885[ebp]
	call	?canPlunderTradeRoute@CvUnit@@QBE_NPBVCvPlot@@_N@Z ; CvUnit::canPlunderTradeRoute
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN21@CanStartMi

; 1193 : 		{
; 1194 : 			return true;

	mov	BYTE PTR $T220862[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN702@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN702@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN707@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN707@CanStartMi:
	mov	al, BYTE PTR $T220862[ebp]
	jmp	$LN146@CanStartMi
$LN21@CanStartMi:

; 1195 : 		}
; 1196 : 	}

	jmp	$LN136@CanStartMi
$LN22@CanStartMi:

; 1197 : 	else if (iMission == CvTypes::getMISSION_GREAT_WORK())

	call	?getMISSION_GREAT_WORK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_GREAT_WORK
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN19@CanStartMi

; 1198 : 	{
; 1199 : 		if (hUnit->canCreateGreatWork(pPlot, bTestVisible))

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221907[ebp], eax
	movzx	ecx, BYTE PTR _bTestVisible$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T221907[ebp]
	call	?canCreateGreatWork@CvUnit@@QBE_NPBVCvPlot@@_N@Z ; CvUnit::canCreateGreatWork
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@CanStartMi

; 1200 : 		{
; 1201 : 			return true;

	mov	BYTE PTR $T220863[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN714@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN714@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN719@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN719@CanStartMi:
	mov	al, BYTE PTR $T220863[ebp]
	jmp	$LN146@CanStartMi
$LN18@CanStartMi:

; 1202 : 		}
; 1203 : 	}

	jmp	$LN136@CanStartMi
$LN19@CanStartMi:

; 1204 : 	else if (iMission == CvTypes::getMISSION_CHANGE_TRADE_UNIT_HOME_CITY())

	call	?getMISSION_CHANGE_TRADE_UNIT_HOME_CITY@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_CHANGE_TRADE_UNIT_HOME_CITY
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN16@CanStartMi

; 1205 : 	{
; 1206 : 		if (hUnit->canChangeTradeUnitHomeCity(pPlot))

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221929[ebp], ecx
	mov	edx, DWORD PTR _pPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T221929[ebp]
	call	?canChangeTradeUnitHomeCity@CvUnit@@QBE_NPBVCvPlot@@@Z ; CvUnit::canChangeTradeUnitHomeCity
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@CanStartMi

; 1207 : 		{
; 1208 : 			return true;

	mov	BYTE PTR $T220864[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN726@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN726@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN731@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN731@CanStartMi:
	mov	al, BYTE PTR $T220864[ebp]
	jmp	$LN146@CanStartMi
$LN15@CanStartMi:

; 1209 : 		}
; 1210 : 	}

	jmp	$LN136@CanStartMi
$LN16@CanStartMi:

; 1211 : 	else if (iMission == CvTypes::getMISSION_SELL_EXOTIC_GOODS())

	call	?getMISSION_SELL_EXOTIC_GOODS@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SELL_EXOTIC_GOODS
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN13@CanStartMi

; 1212 : 	{
; 1213 : 		if (hUnit->canSellExoticGoods(pPlot, bTestVisible))

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221951[ebp], ecx
	movzx	edx, BYTE PTR _bTestVisible$[ebp]
	push	edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T221951[ebp]
	call	?canSellExoticGoods@CvUnit@@QBE_NPBVCvPlot@@_N@Z ; CvUnit::canSellExoticGoods
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@CanStartMi

; 1214 : 		{
; 1215 : 			return true;

	mov	BYTE PTR $T220865[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN738@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN738@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN743@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN743@CanStartMi:
	mov	al, BYTE PTR $T220865[ebp]
	jmp	$LN146@CanStartMi
$LN12@CanStartMi:

; 1216 : 		}
; 1217 : 	}

	jmp	$LN136@CanStartMi
$LN13@CanStartMi:

; 1218 : 	else if(iMission == CvTypes::getMISSION_GIVE_POLICIES())

	call	?getMISSION_GIVE_POLICIES@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_GIVE_POLICIES
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	$LN10@CanStartMi

; 1219 : 	{
; 1220 : 		//this means to play the animation only
; 1221 : 		if(iData1 != -1)

	cmp	DWORD PTR _iData1$[ebp], -1
	je	SHORT $LN9@CanStartMi

; 1222 : 		{
; 1223 : 			return true;

	mov	BYTE PTR $T220866[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN748@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN748@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN753@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN753@CanStartMi:
	mov	al, BYTE PTR $T220866[ebp]
	jmp	$LN146@CanStartMi
$LN9@CanStartMi:

; 1224 : 		}
; 1225 : 
; 1226 : 		if(hUnit->canGivePolicies(pPlot, bTestVisible))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T221991[ebp], edx
	movzx	eax, BYTE PTR _bTestVisible$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T221991[ebp]
	call	?canGivePolicies@CvUnit@@QBE_NPBVCvPlot@@_N@Z ; CvUnit::canGivePolicies
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN8@CanStartMi

; 1227 : 		{
; 1228 : 			return true;

	mov	BYTE PTR $T220867[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN760@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN760@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN765@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN765@CanStartMi:
	mov	al, BYTE PTR $T220867[ebp]
	jmp	$LN146@CanStartMi
$LN8@CanStartMi:

; 1229 : 		}
; 1230 : 	}

	jmp	$LN136@CanStartMi
$LN10@CanStartMi:

; 1231 : 	else if(iMission == CvTypes::getMISSION_ONE_SHOT_TOURISM())

	call	?getMISSION_ONE_SHOT_TOURISM@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ONE_SHOT_TOURISM
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	$LN6@CanStartMi

; 1232 : 	{
; 1233 : 		//this means to play the animation only
; 1234 : 		if(iData1 != -1)

	cmp	DWORD PTR _iData1$[ebp], -1
	je	SHORT $LN5@CanStartMi

; 1235 : 		{
; 1236 : 			return true;

	mov	BYTE PTR $T220868[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN770@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN770@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN775@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN775@CanStartMi:
	mov	al, BYTE PTR $T220868[ebp]
	jmp	$LN146@CanStartMi
$LN5@CanStartMi:

; 1237 : 		}
; 1238 : 
; 1239 : 		if(hUnit->canBlastTourism(pPlot, bTestVisible))

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222031[ebp], eax
	movzx	ecx, BYTE PTR _bTestVisible$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T222031[ebp]
	call	?canBlastTourism@CvUnit@@QBE_NPBVCvPlot@@_N@Z ; CvUnit::canBlastTourism
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@CanStartMi

; 1240 : 		{
; 1241 : 			return true;

	mov	BYTE PTR $T220869[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN782@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN782@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN787@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN787@CanStartMi:
	mov	al, BYTE PTR $T220869[ebp]
	jmp	$LN146@CanStartMi
$LN4@CanStartMi:

; 1242 : 		}
; 1243 : 	}

	jmp	SHORT $LN136@CanStartMi
$LN6@CanStartMi:

; 1244 : 	else if (iMission == CvTypes::getMISSION_CHANGE_ADMIRAL_PORT())

	call	?getMISSION_CHANGE_ADMIRAL_PORT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_CHANGE_ADMIRAL_PORT
	cmp	DWORD PTR _iMission$[ebp], eax
	jne	SHORT $LN136@CanStartMi

; 1245 : 	{
; 1246 : 		if (hUnit->canChangeAdmiralPort(pPlot))

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222053[ebp], ecx
	mov	edx, DWORD PTR _pPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T222053[ebp]
	call	?canChangeAdmiralPort@CvUnit@@QBE_NPBVCvPlot@@@Z ; CvUnit::canChangeAdmiralPort
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN136@CanStartMi

; 1247 : 		{
; 1248 : 			return true;

	mov	BYTE PTR $T220870[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN794@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN794@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN799@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN799@CanStartMi:
	mov	al, BYTE PTR $T220870[ebp]
	jmp	SHORT $LN146@CanStartMi
$LN136@CanStartMi:

; 1249 : 		}
; 1250 : 	}
; 1251 : 
; 1252 : 	return false;

	mov	BYTE PTR $T220871[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN804@CanStartMi
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN804@CanStartMi:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN809@CanStartMi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN809@CanStartMi:
	mov	al, BYTE PTR $T220871[ebp]
$LN146@CanStartMi:

; 1253 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CanStartMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@HHHPAVCvPlot@@_N@Z$0:
	lea	ecx, DWORD PTR _hUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__unwindfunclet$?CanStartMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@HHHPAVCvPlot@@_N@Z$1:
	lea	ecx, DWORD PTR _pTargetUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__unwindfunclet$?CanStartMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@HHHPAVCvPlot@@_N@Z$2:
	lea	ecx, DWORD PTR _args$217908[ebp]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__ehhandler$?CanStartMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@HHHPAVCvPlot@@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-316]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CanStartMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@HHHPAVCvPlot@@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CanStartMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@HHHPAVCvPlot@@_N@Z ENDP ; CvUnitMission::CanStartMission
PUBLIC	?CalculateMissionTimer@CvUnitMission@@SAHV?$FObjectHandle@VCvUnit@@@@H@Z ; CvUnitMission::CalculateMissionTimer
PUBLIC	?GetHeadMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@@Z ; CvUnitMission::GetHeadMissionData
EXTRN	?changeAdmiralPort@CvUnit@@QAE_NHH@Z:PROC	; CvUnit::changeAdmiralPort
EXTRN	?blastTourism@CvUnit@@QAE_NXZ:PROC		; CvUnit::blastTourism
EXTRN	?givePolicies@CvUnit@@QAE_NXZ:PROC		; CvUnit::givePolicies
EXTRN	?lead@CvUnit@@QAE_NH@Z:PROC			; CvUnit::lead
EXTRN	?ChangeGold@CvTreasury@@QAEXH@Z:PROC		; CvTreasury::ChangeGold
EXTRN	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ:PROC ; CvPlayer::GetTreasury
EXTRN	?getBuildCost@CvPlayer@@QBEHPBVCvPlot@@W4BuildTypes@@@Z:PROC ; CvPlayer::getBuildCost
EXTRN	?sellExoticGoods@CvUnit@@QAE_NXZ:PROC		; CvUnit::sellExoticGoods
EXTRN	?changeTradeUnitHomeCity@CvUnit@@QAE_NHH@Z:PROC	; CvUnit::changeTradeUnitHomeCity
EXTRN	?createGreatWork@CvUnit@@QAE_NXZ:PROC		; CvUnit::createGreatWork
EXTRN	?plunderTradeRoute@CvUnit@@QAE_NXZ:PROC		; CvUnit::plunderTradeRoute
EXTRN	?makeTradeRoute@CvUnit@@QAE_NHHW4TradeConnectionType@@@Z:PROC ; CvUnit::makeTradeRoute
EXTRN	?goldenAge@CvUnit@@QAE_NXZ:PROC			; CvUnit::goldenAge
EXTRN	?DoRemoveHeresy@CvUnit@@QAE_NXZ:PROC		; CvUnit::DoRemoveHeresy
EXTRN	?DoEnhanceReligion@CvUnit@@QAE_NXZ:PROC		; CvUnit::DoEnhanceReligion
EXTRN	?DoSpreadReligion@CvUnit@@QAE_NXZ:PROC		; CvUnit::DoSpreadReligion
EXTRN	?DoFoundReligion@CvUnit@@QAE_NXZ:PROC		; CvUnit::DoFoundReligion
EXTRN	?DoCultureBomb@CvUnit@@QAE_NXZ:PROC		; CvUnit::DoCultureBomb
EXTRN	?DoBuildSpaceship@CvUnit@@QAE_NXZ:PROC		; CvUnit::DoBuildSpaceship
EXTRN	?repairFleet@CvUnit@@QAE_NXZ:PROC		; CvUnit::repairFleet
EXTRN	?buyCityState@CvUnit@@QAE_NXZ:PROC		; CvUnit::buyCityState
EXTRN	?trade@CvUnit@@QAE_NXZ:PROC			; CvUnit::trade
EXTRN	?hurry@CvUnit@@QAE_NXZ:PROC			; CvUnit::hurry
EXTRN	?discover@CvUnit@@QAE_NXZ:PROC			; CvUnit::discover
EXTRN	?construct@CvUnit@@QAE_NW4BuildingTypes@@@Z:PROC ; CvUnit::construct
EXTRN	?join@CvUnit@@QAE_NW4SpecialistTypes@@@Z:PROC	; CvUnit::join
EXTRN	?found@CvUnit@@QAE_NXZ:PROC			; CvUnit::found
EXTRN	?pillage@CvUnit@@QAE_NXZ:PROC			; CvUnit::pillage
EXTRN	?rebase@CvUnit@@QAE_NHH@Z:PROC			; CvUnit::rebase
EXTRN	?airSweep@CvUnit@@QAE_NHH@Z:PROC		; CvUnit::airSweep
EXTRN	?isActiveVisible@CvPlot@@QBE_NXZ:PROC		; CvPlot::isActiveVisible
EXTRN	?paradrop@CvUnit@@QAE_NHH@Z:PROC		; CvUnit::paradrop
EXTRN	?airlift@CvUnit@@QAE_NHH@Z:PROC			; CvUnit::airlift
EXTRN	?setSetUpForRangedAttack@CvUnit@@QAEX_N@Z:PROC	; CvUnit::setSetUpForRangedAttack
EXTRN	?SetFortifiedThisTurn@CvUnit@@QAEX_N@Z:PROC	; CvUnit::SetFortifiedThisTurn
EXTRN	?CanStartMission@CvUnit@@QAE_NHHHPAVCvPlot@@_N@Z:PROC ; CvUnit::CanStartMission
EXTRN	?isTurnActive@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isTurnActive
EXTRN	?isSimultaneousTurns@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::isSimultaneousTurns
;	COMDAT ?stackDepth@?1??StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z@4HA
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
_BSS	SEGMENT
?stackDepth@?1??StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z@4HA DD 01H DUP (?) ; `CvUnitMission::StartMission'::`2'::stackDepth
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$7
	DD	00H
	DD	FLAT:__unwindfunclet$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$8
	DD	00H
	DD	FLAT:__unwindfunclet$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$9
	DD	00H
	DD	FLAT:__unwindfunclet$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$10
	DD	00H
	DD	FLAT:__unwindfunclet$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$11
	DD	00H
	DD	FLAT:__unwindfunclet$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$12
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvunitmission.cpp
xdata$x	ENDS
;	COMDAT ?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
tv1038 = -700						; size = 4
tv1034 = -696						; size = 4
tv950 = -692						; size = 4
tv1031 = -688						; size = 4
tv821 = -684						; size = 4
tv811 = -680						; size = 4
tv782 = -676						; size = 4
tv772 = -672						; size = 4
tv610 = -668						; size = 4
tv1110 = -664						; size = 4
tv491 = -660						; size = 4
tv481 = -656						; size = 4
tv1022 = -652						; size = 4
tv1021 = -648						; size = 4
tv397 = -644						; size = 4
tv387 = -640						; size = 4
tv1016 = -636						; size = 4
tv1015 = -632						; size = 4
tv1090 = -628						; size = 4
tv1012 = -624						; size = 4
tv1011 = -620						; size = 4
tv1009 = -616						; size = 4
tv1008 = -612						; size = 4
tv142 = -608						; size = 4
$T222828 = -604						; size = 4
$T222818 = -600						; size = 4
$T222814 = -596						; size = 4
$T222804 = -592						; size = 4
$T222800 = -588						; size = 4
$T222796 = -584						; size = 4
$T222792 = -580						; size = 4
$T222788 = -576						; size = 4
$T222779 = -572						; size = 4
$T222775 = -568						; size = 4
$T222771 = -564						; size = 4
$T222761 = -560						; size = 4
$T222757 = -556						; size = 4
$T222753 = -552						; size = 4
$T222749 = -548						; size = 4
$T222745 = -544						; size = 4
$T222741 = -540						; size = 4
$T222737 = -536						; size = 4
$T222733 = -532						; size = 4
$T222729 = -528						; size = 4
$T222725 = -524						; size = 4
_inst$222721 = -520					; size = 4
$T222717 = -516						; size = 4
$T222704 = -512						; size = 4
$T222697 = -508						; size = 4
_inst$222693 = -504					; size = 4
$T222689 = -500						; size = 4
$T222679 = -496						; size = 4
$T222675 = -492						; size = 4
$T222671 = -488						; size = 4
$T222664 = -484						; size = 4
$T222660 = -480						; size = 4
$T222656 = -476						; size = 4
$T222652 = -472						; size = 4
$T222648 = -468						; size = 4
$T222644 = -464						; size = 4
$T222640 = -460						; size = 4
$T222636 = -456						; size = 4
$T222632 = -452						; size = 4
$T222628 = -448						; size = 4
$T222624 = -444						; size = 4
$T222617 = -440						; size = 4
$T222610 = -436						; size = 4
$T222606 = -432						; size = 4
$T222602 = -428						; size = 4
$T222598 = -424						; size = 4
$T222594 = -420						; size = 4
$T222590 = -416						; size = 4
$T222586 = -412						; size = 4
$T222582 = -408						; size = 4
$T222578 = -404						; size = 4
$T222574 = -400						; size = 4
$T222570 = -396						; size = 4
$T222566 = -392						; size = 4
$T222562 = -388						; size = 4
$T222558 = -384						; size = 4
$T222554 = -380						; size = 4
$T222550 = -376						; size = 4
$T222546 = -372						; size = 4
$T222542 = -368						; size = 4
$T222538 = -364						; size = 4
$T222534 = -360						; size = 4
$T222530 = -356						; size = 4
$T222526 = -352						; size = 4
$T222525 = -348						; size = 4
$T222524 = -344						; size = 4
$T222493 = -340						; size = 4
$T222488 = -336						; size = 4
$T222484 = -329						; size = 1
$T222473 = -328						; size = 4
$T222469 = -321						; size = 1
_iMapY$222523 = -320					; size = 4
_iMapX$222522 = -316					; size = 4
$T222462 = -312						; size = 4
$T222458 = -308						; size = 4
_inst$222453 = -304					; size = 4
$T222449 = -300						; size = 4
$T222437 = -296						; size = 4
$T222430 = -292						; size = 4
$T222426 = -288						; size = 4
$T222416 = -284						; size = 4
$T222412 = -280						; size = 4
$T222408 = -276						; size = 4
$T222404 = -272						; size = 4
$T222400 = -268						; size = 4
_inst$222395 = -264					; size = 4
$T222391 = -260						; size = 4
$T222379 = -256						; size = 4
$T222372 = -252						; size = 4
$T222368 = -248						; size = 4
$T222358 = -244						; size = 4
$T222354 = -240						; size = 4
$T222350 = -236						; size = 4
$T222346 = -232						; size = 4
$T222342 = -228						; size = 4
$T222338 = -224						; size = 4
$T222334 = -220						; size = 4
$T222333 = -216						; size = 4
$T222332 = -212						; size = 4
$T222301 = -208						; size = 4
$T222296 = -204						; size = 4
$T222292 = -197						; size = 1
$T222281 = -196						; size = 4
$T222277 = -189						; size = 1
_iMapY$222331 = -188					; size = 4
_iMapX$222330 = -184					; size = 4
$T222270 = -180						; size = 4
$T222266 = -176						; size = 4
$T222262 = -172						; size = 4
$T222249 = -168						; size = 4
$T222245 = -164						; size = 4
$T222217 = -160						; size = 4
$T222213 = -156						; size = 4
$T222209 = -152						; size = 4
$T222190 = -148						; size = 4
$T222177 = -144						; size = 4
$T222173 = -140						; size = 4
$T222169 = -136						; size = 4
$T222165 = -132						; size = 4
$T222156 = -128						; size = 4
$T222149 = -124						; size = 4
$T222140 = -120						; size = 4
$T222120 = -116						; size = 4
$T222119 = -112						; size = 4
$T222118 = -108						; size = 4
$T222115 = -104						; size = 4
$T222114 = -100						; size = 4
$T222111 = -96						; size = 4
$T222110 = -92						; size = 4
$T222107 = -88						; size = 4
$T222106 = -84						; size = 4
$T222105 = -80						; size = 4
$T222102 = -76						; size = 4
$T222101 = -72						; size = 4
$T222100 = -68						; size = 4
$T222099 = -64						; size = 4
$T222098 = -60						; size = 4
_pDllUnit$218279 = -56					; size = 4
_pDllUnit$218271 = -52					; size = 4
_pPlot$218247 = -48					; size = 4
_kMissionData$218190 = -44				; size = 4
_pDllUnit$218187 = -40					; size = 4
_pDllUnit$218172 = -36					; size = 4
_kMissionData$218158 = -32				; size = 4
_bAction$ = -26						; size = 1
_bNotify$ = -25						; size = 1
_kUnitOwner$ = -24					; size = 4
_pkQueueData$ = -20					; size = 4
_bDelete$ = -13						; size = 1
__$EHRec$ = -12						; size = 12
_hUnit$ = 8						; size = 8
?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z PROC ; CvUnitMission::StartMission, COMDAT

; 1258 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 688				; 000002b0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1259 : 	bool bDelete;
; 1260 : 	bool bAction;
; 1261 : 	bool bNotify;
; 1262 : 
; 1263 : 	static int stackDepth = 0;
; 1264 : 	++stackDepth; // JAR debugging

	mov	eax, DWORD PTR ?stackDepth@?1??StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z@4HA
	add	eax, 1
	mov	DWORD PTR ?stackDepth@?1??StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z@4HA, eax

; 1265 : 
; 1266 : 	CvAssert(stackDepth < 100);
; 1267 : 
; 1268 : 	CvAssert(!hUnit->IsBusy());
; 1269 : 	CvAssert(hUnit->getOwner() != NO_PLAYER);
; 1270 : 	CvAssert(hUnit->HeadMissionQueueNode() != NULL);
; 1271 : 
; 1272 : 	CvPlayerAI& kUnitOwner = GET_PLAYER(hUnit->getOwner());

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222140[ebp], ecx
	mov	edx, DWORD PTR $T222140[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR $T222149[ebp], eax
	mov	ecx, DWORD PTR $T222149[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kUnitOwner$[ebp], ecx

; 1273 : 
; 1274 : 
; 1275 : 	if(!kUnitOwner.isSimultaneousTurns())

	mov	ecx, DWORD PTR _kUnitOwner$[ebp]
	call	?isSimultaneousTurns@CvPlayer@@QBE_NXZ	; CvPlayer::isSimultaneousTurns
	movzx	edx, al
	test	edx, edx
	jne	$LN153@StartMissi

; 1276 : 	{
; 1277 : 		if(!kUnitOwner.isTurnActive())

	mov	ecx, DWORD PTR _kUnitOwner$[ebp]
	call	?isTurnActive@CvPlayer@@QBE_NXZ		; CvPlayer::isTurnActive
	movzx	eax, al
	test	eax, eax
	jne	$LN153@StartMissi

; 1278 : 		{
; 1279 : 			if(hUnit->getOwner() == GC.getGame().getActivePlayer())

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222156[ebp], ecx
	mov	edx, DWORD PTR $T222156[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR $T222165[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T222169[ebp], ecx
	mov	ecx, DWORD PTR $T222169[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR $T222165[ebp], eax
	jne	SHORT $LN151@StartMissi

; 1280 : 			{
; 1281 : 				if(hUnit->IsSelected())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222173[ebp], edx
	mov	ecx, DWORD PTR $T222173[ebp]
	call	?IsSelected@CvUnit@@QBE_NXZ		; CvUnit::IsSelected
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN151@StartMissi

; 1282 : 				{
; 1283 : 					GC.GetEngineUserInterface()->changeCycleSelectionCounter(1);

	mov	ecx, DWORD PTR $T222177[ebp]
	mov	DWORD PTR tv142[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv142[ebp], edx
	push	1
	mov	eax, DWORD PTR tv142[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv142[ebp]
	mov	eax, DWORD PTR [edx+224]
	call	eax
$LN151@StartMissi:

; 1284 : 				}
; 1285 : 			}
; 1286 : 
; 1287 : 			--stackDepth; // JAR debugging

	mov	ecx, DWORD PTR ?stackDepth@?1??StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z@4HA
	sub	ecx, 1
	mov	DWORD PTR ?stackDepth@?1??StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z@4HA, ecx

; 1288 : 			return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN201@StartMissi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN201@StartMissi:
	jmp	$LN154@StartMissi
$LN153@StartMissi:

; 1289 : 		}
; 1290 : 	}
; 1291 : 
; 1292 : 	if(hUnit->canMove())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222190[ebp], edx
	mov	ecx, DWORD PTR $T222190[ebp]
	call	?canMove@CvUnit@@QBE_NXZ		; CvUnit::canMove
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN209@StartMissi

; 1293 : 	{
; 1294 : 		hUnit->SetActivityType(ACTIVITY_MISSION);

	push	6
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?SetActivityType@CvUnit@@QAEXW4ActivityTypes@@@Z ; CvUnit::SetActivityType

; 1295 : 	}
; 1296 : 	else

	jmp	SHORT $LN148@StartMissi

; 1297 : 	{
; 1298 : 		hUnit->SetActivityType(ACTIVITY_HOLD);

$LN209@StartMissi:
	push	1
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?SetActivityType@CvUnit@@QAEXW4ActivityTypes@@@Z ; CvUnit::SetActivityType
$LN148@StartMissi:

; 1299 : 	}
; 1300 : 
; 1301 : 	bDelete = false;

	mov	BYTE PTR _bDelete$[ebp], 0

; 1302 : 	bAction = false;

	mov	BYTE PTR _bAction$[ebp], 0

; 1303 : 	bNotify = false;

	mov	BYTE PTR _bNotify$[ebp], 0

; 1304 : 
; 1305 : 	hUnit->ClearPathCache();

	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?ClearPathCache@CvUnit@@IAEXXZ		; CvUnit::ClearPathCache

; 1306 : 
; 1307 : 	const MissionData* pkQueueData = GetHeadMissionData(hUnit);

	sub	esp, 8
	mov	ecx, esp
	mov	DWORD PTR $T222098[ebp], esp
	mov	DWORD PTR $T222209[ebp], ecx
	mov	edx, DWORD PTR $T222209[ebp]
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T222209[ebp]
	mov	dl, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [ecx+4], dl
	mov	eax, DWORD PTR $T222209[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN214@StartMissi
	mov	ecx, DWORD PTR $T222209[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN214@StartMissi:
	mov	edx, DWORD PTR $T222209[ebp]
	mov	DWORD PTR tv1008[ebp], edx
	call	?GetHeadMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@@Z ; CvUnitMission::GetHeadMissionData
	add	esp, 8
	mov	DWORD PTR tv1009[ebp], eax
	mov	eax, DWORD PTR tv1009[ebp]
	mov	DWORD PTR _pkQueueData$[ebp], eax

; 1308 : 	if(!hUnit->CanStartMission(pkQueueData->eMissionType, pkQueueData->iData1, pkQueueData->iData2, hUnit->plot()))

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222213[ebp], ecx
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222217[ebp], edx
	push	0
	mov	ecx, DWORD PTR $T222213[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	push	eax
	mov	eax, DWORD PTR _pkQueueData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _pkQueueData$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR $T222217[ebp]
	call	?CanStartMission@CvUnit@@QAE_NHHHPAVCvPlot@@_N@Z ; CvUnit::CanStartMission
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN147@StartMissi

; 1309 : 	{
; 1310 : 		bDelete = true;

	mov	BYTE PTR _bDelete$[ebp], 1

; 1311 : 	}
; 1312 : 	else

	jmp	$LN146@StartMissi
$LN147@StartMissi:

; 1313 : 	{
; 1314 : 		CvAssertMsg(kUnitOwner.isTurnActive() || kUnitOwner.isHuman(), "It's expected that either the turn is active for this player or the player is human");
; 1315 : 
; 1316 : 		if(pkQueueData->eMissionType == CvTypes::getMISSION_SKIP())

	call	?getMISSION_SKIP@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SKIP
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN145@StartMissi

; 1317 : 		{
; 1318 : 			hUnit->SetActivityType(ACTIVITY_HOLD);

	push	1
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?SetActivityType@CvUnit@@QAEXW4ActivityTypes@@@Z ; CvUnit::SetActivityType

; 1319 : 			bDelete = true;

	mov	BYTE PTR _bDelete$[ebp], 1
	jmp	$LN144@StartMissi
$LN145@StartMissi:

; 1320 : 		}
; 1321 : 
; 1322 : 		else if(pkQueueData->eMissionType == CvTypes::getMISSION_SLEEP())

	call	?getMISSION_SLEEP@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SLEEP
	mov	edx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [edx], eax
	jne	SHORT $LN143@StartMissi

; 1323 : 		{
; 1324 : 			hUnit->SetActivityType(ACTIVITY_SLEEP);

	push	2
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?SetActivityType@CvUnit@@QAEXW4ActivityTypes@@@Z ; CvUnit::SetActivityType

; 1325 : 			bNotify = true;

	mov	BYTE PTR _bNotify$[ebp], 1

; 1326 : 			bDelete = true;

	mov	BYTE PTR _bDelete$[ebp], 1
	jmp	SHORT $LN144@StartMissi
$LN143@StartMissi:

; 1327 : 		}
; 1328 : 
; 1329 : 		else if(pkQueueData->eMissionType == CvTypes::getMISSION_FORTIFY())

	call	?getMISSION_FORTIFY@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_FORTIFY
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN141@StartMissi

; 1330 : 		{
; 1331 : 			hUnit->SetActivityType(ACTIVITY_SLEEP);

	push	2
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?SetActivityType@CvUnit@@QAEXW4ActivityTypes@@@Z ; CvUnit::SetActivityType

; 1332 : 			bNotify = true;

	mov	BYTE PTR _bNotify$[ebp], 1

; 1333 : 			bDelete = true;

	mov	BYTE PTR _bDelete$[ebp], 1
	jmp	SHORT $LN144@StartMissi
$LN141@StartMissi:

; 1334 : 		}
; 1335 : 
; 1336 : 		else if(pkQueueData->eMissionType == CvTypes::getMISSION_AIRPATROL())

	call	?getMISSION_AIRPATROL@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_AIRPATROL
	mov	edx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [edx], eax
	jne	SHORT $LN139@StartMissi

; 1337 : 		{
; 1338 : 			hUnit->SetActivityType(ACTIVITY_INTERCEPT);

	push	5
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?SetActivityType@CvUnit@@QAEXW4ActivityTypes@@@Z ; CvUnit::SetActivityType

; 1339 : 			bDelete = true;

	mov	BYTE PTR _bDelete$[ebp], 1
	jmp	SHORT $LN144@StartMissi
$LN139@StartMissi:

; 1340 : 		}
; 1341 : 
; 1342 : 		else if(pkQueueData->eMissionType == CvTypes::getMISSION_HEAL())

	call	?getMISSION_HEAL@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_HEAL
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN137@StartMissi

; 1343 : 		{
; 1344 : 			hUnit->SetActivityType(ACTIVITY_HEAL);

	push	3
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?SetActivityType@CvUnit@@QAEXW4ActivityTypes@@@Z ; CvUnit::SetActivityType

; 1345 : 			bNotify = true;

	mov	BYTE PTR _bNotify$[ebp], 1

; 1346 : 			bDelete = true;

	mov	BYTE PTR _bDelete$[ebp], 1
	jmp	SHORT $LN144@StartMissi
$LN137@StartMissi:

; 1347 : 		}
; 1348 : 
; 1349 : 		else if(pkQueueData->eMissionType == CvTypes::getMISSION_ALERT())

	call	?getMISSION_ALERT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ALERT
	mov	edx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [edx], eax
	jne	SHORT $LN144@StartMissi

; 1350 : 		{
; 1351 : 			hUnit->SetActivityType(ACTIVITY_SENTRY);

	push	4
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?SetActivityType@CvUnit@@QAEXW4ActivityTypes@@@Z ; CvUnit::SetActivityType

; 1352 : 			bNotify = true;

	mov	BYTE PTR _bNotify$[ebp], 1

; 1353 : 			bDelete = true;

	mov	BYTE PTR _bDelete$[ebp], 1
$LN144@StartMissi:

; 1354 : 		}
; 1355 : 
; 1356 : 
; 1357 : 		if(bNotify)

	movzx	eax, BYTE PTR _bNotify$[ebp]
	test	eax, eax
	je	SHORT $LN134@StartMissi

; 1358 : 		{
; 1359 : 			// The entity should not futz with the missions, but...
; 1360 : 			CvAssert(GetHeadMissionData(hUnit) == pkQueueData);
; 1361 : 			pkQueueData = GetHeadMissionData(hUnit);

	sub	esp, 8
	mov	ecx, esp
	mov	DWORD PTR $T222099[ebp], esp
	mov	DWORD PTR $T222245[ebp], ecx
	mov	edx, DWORD PTR $T222245[ebp]
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T222245[ebp]
	mov	dl, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [ecx+4], dl
	mov	eax, DWORD PTR $T222245[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN235@StartMissi
	mov	ecx, DWORD PTR $T222245[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN235@StartMissi:
	mov	edx, DWORD PTR $T222245[ebp]
	mov	DWORD PTR tv1011[ebp], edx
	call	?GetHeadMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@@Z ; CvUnitMission::GetHeadMissionData
	add	esp, 8
	mov	DWORD PTR tv1012[ebp], eax
	mov	eax, DWORD PTR tv1012[ebp]
	mov	DWORD PTR _pkQueueData$[ebp], eax
$LN134@StartMissi:

; 1362 : 		}
; 1363 : 
; 1364 : 		if(hUnit->canMove())

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222249[ebp], ecx
	mov	ecx, DWORD PTR $T222249[ebp]
	call	?canMove@CvUnit@@QBE_NXZ		; CvUnit::canMove
	movzx	edx, al
	test	edx, edx
	je	$LN146@StartMissi

; 1365 : 		{
; 1366 : 			if(pkQueueData->eMissionType == CvTypes::getMISSION_FORTIFY())

	call	?getMISSION_FORTIFY@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_FORTIFY
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN132@StartMissi

; 1367 : 			{
; 1368 : 				hUnit->SetFortifiedThisTurn(true);

	push	1
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?SetFortifiedThisTurn@CvUnit@@QAEX_N@Z	; CvUnit::SetFortifiedThisTurn

; 1369 : 			}
; 1370 : 
; 1371 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_HEAL() ||

	jmp	$LN146@StartMissi
$LN132@StartMissi:

; 1372 : 			        pkQueueData->eMissionType == CvTypes::getMISSION_ALERT())

	call	?getMISSION_HEAL@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_HEAL
	mov	edx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [edx], eax
	je	SHORT $LN243@StartMissi
	call	?getMISSION_ALERT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ALERT
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN130@StartMissi

; 1373 : 			{
; 1374 : 				hUnit->SetFortifiedThisTurn(true);

$LN243@StartMissi:
	push	1
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?SetFortifiedThisTurn@CvUnit@@QAEX_N@Z	; CvUnit::SetFortifiedThisTurn
	jmp	$LN146@StartMissi
$LN130@StartMissi:

; 1375 : 			}
; 1376 : 
; 1377 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_SET_UP_FOR_RANGED_ATTACK())

	call	?getMISSION_SET_UP_FOR_RANGED_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SET_UP_FOR_RANGED_ATTACK
	mov	edx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [edx], eax
	jne	SHORT $LN127@StartMissi

; 1378 : 			{
; 1379 : 				hUnit->setSetUpForRangedAttack(true);

	push	1
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?setSetUpForRangedAttack@CvUnit@@QAEX_N@Z ; CvUnit::setSetUpForRangedAttack

; 1380 : 				bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
	jmp	$LN146@StartMissi
$LN127@StartMissi:

; 1381 : 			}
; 1382 : 
; 1383 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_EMBARK())

	call	?getMISSION_EMBARK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_EMBARK
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN125@StartMissi

; 1384 : 			{
; 1385 : 				bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
	jmp	$LN146@StartMissi
$LN125@StartMissi:

; 1386 : 			}
; 1387 : 
; 1388 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_DISEMBARK())

	call	?getMISSION_DISEMBARK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_DISEMBARK
	mov	edx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [edx], eax
	jne	SHORT $LN123@StartMissi

; 1389 : 			{
; 1390 : 				bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
	jmp	$LN146@StartMissi
$LN123@StartMissi:

; 1391 : 			}
; 1392 : 
; 1393 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_AIRLIFT())

	call	?getMISSION_AIRLIFT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_AIRLIFT
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN121@StartMissi

; 1394 : 			{
; 1395 : 				if(hUnit->airlift(pkQueueData->iData1, pkQueueData->iData2))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222262[ebp], edx
	mov	eax, DWORD PTR _pkQueueData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _pkQueueData$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR $T222262[ebp]
	call	?airlift@CvUnit@@QAE_NHH@Z		; CvUnit::airlift
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN120@StartMissi

; 1396 : 				{
; 1397 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN120@StartMissi:

; 1398 : 				}
; 1399 : 			}

	jmp	$LN146@StartMissi
$LN121@StartMissi:

; 1400 : 
; 1401 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_NUKE())

	call	?getMISSION_NUKE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_NUKE
	mov	edx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [edx], eax
	jne	$LN118@StartMissi

; 1402 : 			{
; 1403 : 				MissionData& kMissionData = *hUnit->HeadMissionQueueNode();

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222266[ebp], eax
	mov	ecx, DWORD PTR $T222266[ebp]
	call	?HeadMissionQueueNode@CvUnit@@IAEPAUMissionData@@XZ ; CvUnit::HeadMissionQueueNode
	mov	DWORD PTR _kMissionData$218158[ebp], eax

; 1404 : 				if(GC.getMap().plot(kMissionData.iData1, kMissionData.iData2) == NULL || !hUnit->canNukeAt(hUnit->plot(), kMissionData.iData1, kMissionData.iData2))

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T222270[ebp], ecx
	mov	edx, DWORD PTR _kMissionData$218158[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T222333[ebp], eax
	mov	ecx, DWORD PTR _kMissionData$218158[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T222332[ebp], edx
	cmp	DWORD PTR $T222332[ebp], -2147483647	; 80000001H
	je	SHORT $LN253@StartMissi
	cmp	DWORD PTR $T222333[ebp], -2147483647	; 80000001H
	jne	SHORT $LN254@StartMissi
$LN253@StartMissi:
	mov	DWORD PTR $T222334[ebp], 0
	jmp	$LN255@StartMissi
$LN254@StartMissi:
	mov	eax, DWORD PTR $T222270[ebp]
	mov	cl, BYTE PTR [eax+4056]
	mov	BYTE PTR $T222277[ebp], cl
	mov	edx, DWORD PTR $T222270[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T222281[ebp], eax
	movzx	ecx, BYTE PTR $T222277[ebp]
	test	ecx, ecx
	je	SHORT $LN266@StartMissi
	cmp	DWORD PTR $T222332[ebp], 0
	jge	SHORT $LN265@StartMissi
	mov	eax, DWORD PTR $T222332[ebp]
	cdq
	idiv	DWORD PTR $T222281[ebp]
	add	edx, DWORD PTR $T222281[ebp]
	mov	DWORD PTR _iMapX$222330[ebp], edx
	jmp	SHORT $LN267@StartMissi
	jmp	SHORT $LN266@StartMissi
$LN265@StartMissi:
	mov	edx, DWORD PTR $T222332[ebp]
	cmp	edx, DWORD PTR $T222281[ebp]
	jl	SHORT $LN266@StartMissi
	mov	eax, DWORD PTR $T222332[ebp]
	cdq
	idiv	DWORD PTR $T222281[ebp]
	mov	DWORD PTR _iMapX$222330[ebp], edx
	jmp	SHORT $LN267@StartMissi
$LN266@StartMissi:
	mov	eax, DWORD PTR $T222332[ebp]
	mov	DWORD PTR _iMapX$222330[ebp], eax
$LN267@StartMissi:
	mov	ecx, DWORD PTR $T222270[ebp]
	mov	dl, BYTE PTR [ecx+4057]
	mov	BYTE PTR $T222292[ebp], dl
	mov	eax, DWORD PTR $T222270[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T222296[ebp], ecx
	movzx	edx, BYTE PTR $T222292[ebp]
	push	edx
	mov	eax, DWORD PTR $T222296[ebp]
	push	eax
	mov	ecx, DWORD PTR $T222333[ebp]
	push	ecx
	call	?coordRange@@YAHHH_N@Z			; coordRange
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iMapY$222331[ebp], eax
	mov	edx, DWORD PTR _iMapY$222331[ebp]
	push	edx
	mov	eax, DWORD PTR _iMapX$222330[ebp]
	push	eax
	mov	ecx, DWORD PTR $T222270[ebp]
	call	?isPlot@CvMap@@QBEHHH@Z			; CvMap::isPlot
	test	eax, eax
	je	SHORT $LN257@StartMissi
	mov	ecx, DWORD PTR $T222270[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T222301[ebp], edx
	mov	eax, DWORD PTR _iMapY$222331[ebp]
	imul	eax, DWORD PTR $T222301[ebp]
	add	eax, DWORD PTR _iMapX$222330[ebp]
	imul	eax, 484				; 000001e4H
	mov	ecx, DWORD PTR $T222270[ebp]
	add	eax, DWORD PTR [ecx+4068]
	mov	DWORD PTR tv1090[ebp], eax
	jmp	SHORT $LN258@StartMissi
$LN257@StartMissi:
	mov	DWORD PTR tv1090[ebp], 0
$LN258@StartMissi:
	mov	edx, DWORD PTR tv1090[ebp]
	mov	DWORD PTR $T222334[ebp], edx
$LN255@StartMissi:
	cmp	DWORD PTR $T222334[ebp], 0
	je	SHORT $LN116@StartMissi
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222338[ebp], eax
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222342[ebp], ecx
	mov	edx, DWORD PTR _kMissionData$218158[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _kMissionData$218158[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR $T222338[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	push	eax
	mov	ecx, DWORD PTR $T222342[ebp]
	call	?canNukeAt@CvUnit@@QBE_NPBVCvPlot@@HH@Z	; CvUnit::canNukeAt
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN117@StartMissi
$LN116@StartMissi:

; 1405 : 				{
; 1406 : 					// Invalid, delete the mission
; 1407 : 					bDelete = true;

	mov	BYTE PTR _bDelete$[ebp], 1
$LN117@StartMissi:

; 1408 : 				}
; 1409 : 			}

	jmp	$LN146@StartMissi
$LN118@StartMissi:

; 1410 : 
; 1411 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_PARADROP())

	call	?getMISSION_PARADROP@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_PARADROP
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	$LN114@StartMissi

; 1412 : 			{
; 1413 : 				if(hUnit->paradrop(pkQueueData->iData1, pkQueueData->iData2))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222346[ebp], edx
	mov	eax, DWORD PTR _pkQueueData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _pkQueueData$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR $T222346[ebp]
	call	?paradrop@CvUnit@@QAE_NHH@Z		; CvUnit::paradrop
	movzx	ecx, al
	test	ecx, ecx
	je	$LN113@StartMissi

; 1414 : 				{
; 1415 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1

; 1416 : 					// The Paradrop needs to have GameplayUnitMissionEnd, so if no mission timer will be started, do it now.
; 1417 : 					if (hUnit->plot()->isActiveVisible() && (!hUnit->isHuman() || !hUnit->plot()->isVisibleToWatchingHuman() || CalculateMissionTimer(hUnit) == 0))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222350[ebp], edx
	mov	ecx, DWORD PTR $T222350[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	ecx, eax
	call	?isActiveVisible@CvPlot@@QBE_NXZ	; CvPlot::isActiveVisible
	movzx	eax, al
	test	eax, eax
	je	$LN113@StartMissi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222354[ebp], ecx
	mov	ecx, DWORD PTR $T222354[ebp]
	call	?isHuman@CvUnit@@QBE_NXZ		; CvUnit::isHuman
	movzx	edx, al
	test	edx, edx
	je	$LN111@StartMissi
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222358[ebp], eax
	mov	ecx, DWORD PTR $T222358[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	ecx, eax
	call	?isVisibleToWatchingHuman@CvPlot@@QBE_NXZ ; CvPlot::isVisibleToWatchingHuman
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN111@StartMissi
	push	0
	sub	esp, 8
	mov	edx, esp
	mov	DWORD PTR $T222100[ebp], esp
	mov	DWORD PTR $T222368[ebp], edx
	mov	eax, DWORD PTR $T222368[ebp]
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T222368[ebp]
	mov	al, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [edx+4], al
	mov	ecx, DWORD PTR $T222368[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN290@StartMissi
	mov	edx, DWORD PTR $T222368[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN290@StartMissi:
	mov	eax, DWORD PTR $T222368[ebp]
	mov	DWORD PTR tv1015[ebp], eax
	call	?CalculateMissionTimer@CvUnitMission@@SAHV?$FObjectHandle@VCvUnit@@@@H@Z ; CvUnitMission::CalculateMissionTimer
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1016[ebp], eax
	cmp	DWORD PTR tv1016[ebp], 0
	jne	$LN113@StartMissi
$LN111@StartMissi:

; 1418 : 					{
; 1419 : 						auto_ptr<ICvUnit1> pDllUnit(new CvDllUnit(hUnit.pointer()));

	push	12					; 0000000cH
	call	??2CvDllUnit@@SAPAXI@Z			; CvDllUnit::operator new
	add	esp, 4
	mov	DWORD PTR $T222102[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T222102[ebp], 0
	je	SHORT $LN156@StartMissi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222372[ebp], ecx
	mov	edx, DWORD PTR $T222372[ebp]
	push	edx
	mov	ecx, DWORD PTR $T222102[ebp]
	call	??0CvDllUnit@@QAE@PAVCvUnit@@@Z		; CvDllUnit::CvDllUnit
	mov	DWORD PTR tv387[ebp], eax
	jmp	SHORT $LN157@StartMissi
$LN156@StartMissi:
	mov	DWORD PTR tv387[ebp], 0
$LN157@StartMissi:
	mov	eax, DWORD PTR tv387[ebp]
	mov	DWORD PTR $T222101[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T222101[ebp]
	mov	DWORD PTR _pDllUnit$218172[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 1420 : 						gDLL->GameplayUnitMissionEnd(pDllUnit.get());

	mov	edx, DWORD PTR $T222379[ebp]
	mov	DWORD PTR tv397[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv397[ebp], eax
	mov	ecx, DWORD PTR _pDllUnit$218172[ebp]
	push	ecx
	mov	edx, DWORD PTR tv397[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv397[ebp]
	mov	edx, DWORD PTR [eax+672]
	call	edx

; 1421 : 					}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _pDllUnit$218172[ebp]
	mov	DWORD PTR $T222391[ebp], eax
	cmp	DWORD PTR $T222391[ebp], 0
	je	SHORT $LN113@StartMissi
	mov	ecx, DWORD PTR $T222391[ebp]
	mov	DWORD PTR _inst$222395[ebp], ecx
	mov	edx, DWORD PTR _inst$222395[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _inst$222395[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+4]
	call	edx
$LN113@StartMissi:

; 1422 : 				}
; 1423 : 			}

	jmp	$LN146@StartMissi
$LN114@StartMissi:

; 1424 : 
; 1425 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_AIR_SWEEP())

	call	?getMISSION_AIR_SWEEP@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_AIR_SWEEP
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN109@StartMissi

; 1426 : 			{
; 1427 : 				if(hUnit->airSweep(pkQueueData->iData1, pkQueueData->iData2))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222400[ebp], edx
	mov	eax, DWORD PTR _pkQueueData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _pkQueueData$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR $T222400[ebp]
	call	?airSweep@CvUnit@@QAE_NHH@Z		; CvUnit::airSweep
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN108@StartMissi

; 1428 : 				{
; 1429 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN108@StartMissi:

; 1430 : 				}
; 1431 : 			}

	jmp	$LN146@StartMissi
$LN109@StartMissi:

; 1432 : 
; 1433 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_REBASE())

	call	?getMISSION_REBASE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_REBASE
	mov	edx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [edx], eax
	jne	$LN106@StartMissi

; 1434 : 			{
; 1435 : 				if(hUnit->rebase(pkQueueData->iData1, pkQueueData->iData2))

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222404[ebp], eax
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _pkQueueData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR $T222404[ebp]
	call	?rebase@CvUnit@@QAE_NHH@Z		; CvUnit::rebase
	movzx	edx, al
	test	edx, edx
	je	$LN105@StartMissi

; 1436 : 				{
; 1437 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1

; 1438 : 					// The Rebase needs to have GameplayUnitMissionEnd, so if no mission timer will be started, do it now.
; 1439 : 					if (hUnit->plot()->isActiveVisible() && (!hUnit->isHuman() || !hUnit->plot()->isVisibleToWatchingHuman() || CalculateMissionTimer(hUnit) == 0))

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222408[ebp], eax
	mov	ecx, DWORD PTR $T222408[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	ecx, eax
	call	?isActiveVisible@CvPlot@@QBE_NXZ	; CvPlot::isActiveVisible
	movzx	ecx, al
	test	ecx, ecx
	je	$LN105@StartMissi
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222412[ebp], edx
	mov	ecx, DWORD PTR $T222412[ebp]
	call	?isHuman@CvUnit@@QBE_NXZ		; CvUnit::isHuman
	movzx	eax, al
	test	eax, eax
	je	$LN103@StartMissi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222416[ebp], ecx
	mov	ecx, DWORD PTR $T222416[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	ecx, eax
	call	?isVisibleToWatchingHuman@CvPlot@@QBE_NXZ ; CvPlot::isVisibleToWatchingHuman
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN103@StartMissi
	push	0
	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR $T222105[ebp], esp
	mov	DWORD PTR $T222426[ebp], eax
	mov	ecx, DWORD PTR $T222426[ebp]
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T222426[ebp]
	mov	cl, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [eax+4], cl
	mov	edx, DWORD PTR $T222426[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN318@StartMissi
	mov	eax, DWORD PTR $T222426[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN318@StartMissi:
	mov	ecx, DWORD PTR $T222426[ebp]
	mov	DWORD PTR tv1021[ebp], ecx
	call	?CalculateMissionTimer@CvUnitMission@@SAHV?$FObjectHandle@VCvUnit@@@@H@Z ; CvUnitMission::CalculateMissionTimer
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1022[ebp], eax
	cmp	DWORD PTR tv1022[ebp], 0
	jne	$LN105@StartMissi
$LN103@StartMissi:

; 1440 : 					{
; 1441 : 						auto_ptr<ICvUnit1> pDllUnit(new CvDllUnit(hUnit.pointer()));

	push	12					; 0000000cH
	call	??2CvDllUnit@@SAPAXI@Z			; CvDllUnit::operator new
	add	esp, 4
	mov	DWORD PTR $T222107[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T222107[ebp], 0
	je	SHORT $LN158@StartMissi
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222430[ebp], edx
	mov	eax, DWORD PTR $T222430[ebp]
	push	eax
	mov	ecx, DWORD PTR $T222107[ebp]
	call	??0CvDllUnit@@QAE@PAVCvUnit@@@Z		; CvDllUnit::CvDllUnit
	mov	DWORD PTR tv481[ebp], eax
	jmp	SHORT $LN159@StartMissi
$LN158@StartMissi:
	mov	DWORD PTR tv481[ebp], 0
$LN159@StartMissi:
	mov	ecx, DWORD PTR tv481[ebp]
	mov	DWORD PTR $T222106[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T222106[ebp]
	mov	DWORD PTR _pDllUnit$218187[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 1442 : 						gDLL->GameplayUnitMissionEnd(pDllUnit.get());

	mov	eax, DWORD PTR $T222437[ebp]
	mov	DWORD PTR tv491[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv491[ebp], ecx
	mov	edx, DWORD PTR _pDllUnit$218187[ebp]
	push	edx
	mov	eax, DWORD PTR tv491[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv491[ebp]
	mov	eax, DWORD PTR [edx+672]
	call	eax

; 1443 : 					}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _pDllUnit$218187[ebp]
	mov	DWORD PTR $T222449[ebp], ecx
	cmp	DWORD PTR $T222449[ebp], 0
	je	SHORT $LN105@StartMissi
	mov	edx, DWORD PTR $T222449[ebp]
	mov	DWORD PTR _inst$222453[ebp], edx
	mov	eax, DWORD PTR _inst$222453[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$222453[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN105@StartMissi:

; 1444 : 				}
; 1445 : 			}

	jmp	$LN146@StartMissi
$LN106@StartMissi:

; 1446 : 
; 1447 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_RANGE_ATTACK())

	call	?getMISSION_RANGE_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_RANGE_ATTACK
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	$LN101@StartMissi

; 1448 : 			{
; 1449 : 				MissionData& kMissionData = *hUnit->HeadMissionQueueNode();

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222458[ebp], edx
	mov	ecx, DWORD PTR $T222458[ebp]
	call	?HeadMissionQueueNode@CvUnit@@IAEPAUMissionData@@XZ ; CvUnit::HeadMissionQueueNode
	mov	DWORD PTR _kMissionData$218190[ebp], eax

; 1450 : 				if(GC.getMap().plot(kMissionData.iData1, kMissionData.iData2) == NULL || !hUnit->canRangeStrikeAt(kMissionData.iData1, kMissionData.iData2))

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T222462[ebp], eax
	mov	ecx, DWORD PTR _kMissionData$218190[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T222525[ebp], edx
	mov	eax, DWORD PTR _kMissionData$218190[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T222524[ebp], ecx
	cmp	DWORD PTR $T222524[ebp], -2147483647	; 80000001H
	je	SHORT $LN339@StartMissi
	cmp	DWORD PTR $T222525[ebp], -2147483647	; 80000001H
	jne	SHORT $LN340@StartMissi
$LN339@StartMissi:
	mov	DWORD PTR $T222526[ebp], 0
	jmp	$LN341@StartMissi
$LN340@StartMissi:
	mov	edx, DWORD PTR $T222462[ebp]
	mov	al, BYTE PTR [edx+4056]
	mov	BYTE PTR $T222469[ebp], al
	mov	ecx, DWORD PTR $T222462[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T222473[ebp], edx
	movzx	eax, BYTE PTR $T222469[ebp]
	test	eax, eax
	je	SHORT $LN352@StartMissi
	cmp	DWORD PTR $T222524[ebp], 0
	jge	SHORT $LN351@StartMissi
	mov	eax, DWORD PTR $T222524[ebp]
	cdq
	idiv	DWORD PTR $T222473[ebp]
	add	edx, DWORD PTR $T222473[ebp]
	mov	DWORD PTR _iMapX$222522[ebp], edx
	jmp	SHORT $LN353@StartMissi
	jmp	SHORT $LN352@StartMissi
$LN351@StartMissi:
	mov	ecx, DWORD PTR $T222524[ebp]
	cmp	ecx, DWORD PTR $T222473[ebp]
	jl	SHORT $LN352@StartMissi
	mov	eax, DWORD PTR $T222524[ebp]
	cdq
	idiv	DWORD PTR $T222473[ebp]
	mov	DWORD PTR _iMapX$222522[ebp], edx
	jmp	SHORT $LN353@StartMissi
$LN352@StartMissi:
	mov	edx, DWORD PTR $T222524[ebp]
	mov	DWORD PTR _iMapX$222522[ebp], edx
$LN353@StartMissi:
	mov	eax, DWORD PTR $T222462[ebp]
	mov	cl, BYTE PTR [eax+4057]
	mov	BYTE PTR $T222484[ebp], cl
	mov	edx, DWORD PTR $T222462[ebp]
	mov	eax, DWORD PTR [edx+4024]
	mov	DWORD PTR $T222488[ebp], eax
	movzx	ecx, BYTE PTR $T222484[ebp]
	push	ecx
	mov	edx, DWORD PTR $T222488[ebp]
	push	edx
	mov	eax, DWORD PTR $T222525[ebp]
	push	eax
	call	?coordRange@@YAHHH_N@Z			; coordRange
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iMapY$222523[ebp], eax
	mov	ecx, DWORD PTR _iMapY$222523[ebp]
	push	ecx
	mov	edx, DWORD PTR _iMapX$222522[ebp]
	push	edx
	mov	ecx, DWORD PTR $T222462[ebp]
	call	?isPlot@CvMap@@QBEHHH@Z			; CvMap::isPlot
	test	eax, eax
	je	SHORT $LN343@StartMissi
	mov	eax, DWORD PTR $T222462[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T222493[ebp], ecx
	mov	edx, DWORD PTR _iMapY$222523[ebp]
	imul	edx, DWORD PTR $T222493[ebp]
	add	edx, DWORD PTR _iMapX$222522[ebp]
	imul	edx, 484				; 000001e4H
	mov	eax, DWORD PTR $T222462[ebp]
	add	edx, DWORD PTR [eax+4068]
	mov	DWORD PTR tv1110[ebp], edx
	jmp	SHORT $LN344@StartMissi
$LN343@StartMissi:
	mov	DWORD PTR tv1110[ebp], 0
$LN344@StartMissi:
	mov	ecx, DWORD PTR tv1110[ebp]
	mov	DWORD PTR $T222526[ebp], ecx
$LN341@StartMissi:
	cmp	DWORD PTR $T222526[ebp], 0
	je	SHORT $LN99@StartMissi
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222530[ebp], edx
	push	1
	push	1
	mov	eax, DWORD PTR _kMissionData$218190[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _kMissionData$218190[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR $T222530[ebp]
	call	?canRangeStrikeAt@CvUnit@@QBE_NHH_N0@Z	; CvUnit::canRangeStrikeAt
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN100@StartMissi
$LN99@StartMissi:

; 1451 : 				{
; 1452 : 					// Invalid, delete the mission
; 1453 : 					bDelete = true;

	mov	BYTE PTR _bDelete$[ebp], 1
$LN100@StartMissi:

; 1454 : 				}
; 1455 : 			}

	jmp	$LN146@StartMissi
$LN101@StartMissi:

; 1456 : 
; 1457 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_PILLAGE())

	call	?getMISSION_PILLAGE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_PILLAGE
	mov	edx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [edx], eax
	jne	SHORT $LN97@StartMissi

; 1458 : 			{
; 1459 : 				if(hUnit->pillage())

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222534[ebp], eax
	mov	ecx, DWORD PTR $T222534[ebp]
	call	?pillage@CvUnit@@QAE_NXZ		; CvUnit::pillage
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN96@StartMissi

; 1460 : 				{
; 1461 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN96@StartMissi:

; 1462 : 				}
; 1463 : 			}

	jmp	$LN146@StartMissi
$LN97@StartMissi:

; 1464 : 
; 1465 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_FOUND())

	call	?getMISSION_FOUND@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_FOUND
	mov	edx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [edx], eax
	jne	SHORT $LN94@StartMissi

; 1466 : 			{
; 1467 : 				if(hUnit->found())

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222538[ebp], eax
	mov	ecx, DWORD PTR $T222538[ebp]
	call	?found@CvUnit@@QAE_NXZ			; CvUnit::found
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN93@StartMissi

; 1468 : 				{
; 1469 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN93@StartMissi:

; 1470 : 				}
; 1471 : 			}

	jmp	$LN146@StartMissi
$LN94@StartMissi:

; 1472 : 
; 1473 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_JOIN())

	call	?getMISSION_JOIN@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_JOIN
	mov	edx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [edx], eax
	jne	SHORT $LN91@StartMissi

; 1474 : 			{
; 1475 : 				if(hUnit->join((SpecialistTypes)(hUnit->HeadMissionQueueNode()->iData1)))

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222542[ebp], eax
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222546[ebp], ecx
	mov	ecx, DWORD PTR $T222542[ebp]
	call	?HeadMissionQueueNode@CvUnit@@IAEPAUMissionData@@XZ ; CvUnit::HeadMissionQueueNode
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	ecx, DWORD PTR $T222546[ebp]
	call	?join@CvUnit@@QAE_NW4SpecialistTypes@@@Z ; CvUnit::join
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN90@StartMissi

; 1476 : 				{
; 1477 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN90@StartMissi:

; 1478 : 				}
; 1479 : 			}

	jmp	$LN146@StartMissi
$LN91@StartMissi:

; 1480 : 
; 1481 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_CONSTRUCT())

	call	?getMISSION_CONSTRUCT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_CONSTRUCT
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN88@StartMissi

; 1482 : 			{
; 1483 : 				if(hUnit->construct((BuildingTypes)(hUnit->HeadMissionQueueNode()->iData1)))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222550[ebp], edx
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222554[ebp], eax
	mov	ecx, DWORD PTR $T222550[ebp]
	call	?HeadMissionQueueNode@CvUnit@@IAEPAUMissionData@@XZ ; CvUnit::HeadMissionQueueNode
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR $T222554[ebp]
	call	?construct@CvUnit@@QAE_NW4BuildingTypes@@@Z ; CvUnit::construct
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN87@StartMissi

; 1484 : 				{
; 1485 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN87@StartMissi:

; 1486 : 				}
; 1487 : 			}

	jmp	$LN146@StartMissi
$LN88@StartMissi:

; 1488 : 
; 1489 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_DISCOVER())

	call	?getMISSION_DISCOVER@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_DISCOVER
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN85@StartMissi

; 1490 : 			{
; 1491 : 				if(hUnit->discover())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222558[ebp], edx
	mov	ecx, DWORD PTR $T222558[ebp]
	call	?discover@CvUnit@@QAE_NXZ		; CvUnit::discover
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN84@StartMissi

; 1492 : 				{
; 1493 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN84@StartMissi:

; 1494 : 				}
; 1495 : 			}

	jmp	$LN146@StartMissi
$LN85@StartMissi:

; 1496 : 
; 1497 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_HURRY())

	call	?getMISSION_HURRY@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_HURRY
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN82@StartMissi

; 1498 : 			{
; 1499 : 				//if (hUnit->DoRushBuilding())
; 1500 : 				if(hUnit->hurry())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222562[ebp], edx
	mov	ecx, DWORD PTR $T222562[ebp]
	call	?hurry@CvUnit@@QAE_NXZ			; CvUnit::hurry
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN81@StartMissi

; 1501 : 				{
; 1502 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN81@StartMissi:

; 1503 : 				}
; 1504 : 			}

	jmp	$LN146@StartMissi
$LN82@StartMissi:

; 1505 : 
; 1506 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_TRADE())

	call	?getMISSION_TRADE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_TRADE
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN79@StartMissi

; 1507 : 			{
; 1508 : 				if(hUnit->trade())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222566[ebp], edx
	mov	ecx, DWORD PTR $T222566[ebp]
	call	?trade@CvUnit@@QAE_NXZ			; CvUnit::trade
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN78@StartMissi

; 1509 : 				{
; 1510 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN78@StartMissi:

; 1511 : 				}
; 1512 : 			}

	jmp	$LN146@StartMissi
$LN79@StartMissi:

; 1513 : 
; 1514 : 			else if (pkQueueData->eMissionType == CvTypes::getMISSION_BUY_CITY_STATE())

	call	?getMISSION_BUY_CITY_STATE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_BUY_CITY_STATE
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN76@StartMissi

; 1515 : 			{
; 1516 : 				if (hUnit->buyCityState())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222570[ebp], edx
	mov	ecx, DWORD PTR $T222570[ebp]
	call	?buyCityState@CvUnit@@QAE_NXZ		; CvUnit::buyCityState
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN75@StartMissi

; 1517 : 				{
; 1518 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN75@StartMissi:

; 1519 : 				}
; 1520 : 			}

	jmp	$LN146@StartMissi
$LN76@StartMissi:

; 1521 : 
; 1522 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_REPAIR_FLEET())

	call	?getMISSION_REPAIR_FLEET@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_REPAIR_FLEET
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN73@StartMissi

; 1523 : 			{
; 1524 : 				if(hUnit->repairFleet())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222574[ebp], edx
	mov	ecx, DWORD PTR $T222574[ebp]
	call	?repairFleet@CvUnit@@QAE_NXZ		; CvUnit::repairFleet
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN72@StartMissi

; 1525 : 				{
; 1526 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN72@StartMissi:

; 1527 : 				}
; 1528 : 			}

	jmp	$LN146@StartMissi
$LN73@StartMissi:

; 1529 : 			
; 1530 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_SPACESHIP())

	call	?getMISSION_SPACESHIP@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SPACESHIP
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN70@StartMissi

; 1531 : 			{
; 1532 : 				if(hUnit->DoBuildSpaceship())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222578[ebp], edx
	mov	ecx, DWORD PTR $T222578[ebp]
	call	?DoBuildSpaceship@CvUnit@@QAE_NXZ	; CvUnit::DoBuildSpaceship
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN69@StartMissi

; 1533 : 				{
; 1534 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN69@StartMissi:

; 1535 : 				}
; 1536 : 			}

	jmp	$LN146@StartMissi
$LN70@StartMissi:

; 1537 : 
; 1538 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_CULTURE_BOMB())

	call	?getMISSION_CULTURE_BOMB@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_CULTURE_BOMB
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN67@StartMissi

; 1539 : 			{
; 1540 : 				if(hUnit->DoCultureBomb())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222582[ebp], edx
	mov	ecx, DWORD PTR $T222582[ebp]
	call	?DoCultureBomb@CvUnit@@QAE_NXZ		; CvUnit::DoCultureBomb
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN66@StartMissi

; 1541 : 				{
; 1542 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN66@StartMissi:

; 1543 : 				}
; 1544 : 			}

	jmp	$LN146@StartMissi
$LN67@StartMissi:

; 1545 : 
; 1546 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_FOUND_RELIGION())

	call	?getMISSION_FOUND_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_FOUND_RELIGION
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN64@StartMissi

; 1547 : 			{
; 1548 : 				if(hUnit->DoFoundReligion())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222586[ebp], edx
	mov	ecx, DWORD PTR $T222586[ebp]
	call	?DoFoundReligion@CvUnit@@QAE_NXZ	; CvUnit::DoFoundReligion
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN63@StartMissi

; 1549 : 				{
; 1550 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN63@StartMissi:

; 1551 : 				}
; 1552 : 			}

	jmp	$LN146@StartMissi
$LN64@StartMissi:

; 1553 : 
; 1554 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_SPREAD_RELIGION())

	call	?getMISSION_SPREAD_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SPREAD_RELIGION
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN61@StartMissi

; 1555 : 			{
; 1556 : 				if(hUnit->DoSpreadReligion())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222590[ebp], edx
	mov	ecx, DWORD PTR $T222590[ebp]
	call	?DoSpreadReligion@CvUnit@@QAE_NXZ	; CvUnit::DoSpreadReligion
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN60@StartMissi

; 1557 : 				{
; 1558 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN60@StartMissi:

; 1559 : 				}
; 1560 : 			}

	jmp	$LN146@StartMissi
$LN61@StartMissi:

; 1561 : 
; 1562 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_ENHANCE_RELIGION())

	call	?getMISSION_ENHANCE_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ENHANCE_RELIGION
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN58@StartMissi

; 1563 : 			{
; 1564 : 				if(hUnit->DoEnhanceReligion())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222594[ebp], edx
	mov	ecx, DWORD PTR $T222594[ebp]
	call	?DoEnhanceReligion@CvUnit@@QAE_NXZ	; CvUnit::DoEnhanceReligion
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN57@StartMissi

; 1565 : 				{
; 1566 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN57@StartMissi:

; 1567 : 				}
; 1568 : 			}

	jmp	$LN146@StartMissi
$LN58@StartMissi:

; 1569 : 
; 1570 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_REMOVE_HERESY())

	call	?getMISSION_REMOVE_HERESY@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_REMOVE_HERESY
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN55@StartMissi

; 1571 : 			{
; 1572 : 				if(hUnit->DoRemoveHeresy())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222598[ebp], edx
	mov	ecx, DWORD PTR $T222598[ebp]
	call	?DoRemoveHeresy@CvUnit@@QAE_NXZ		; CvUnit::DoRemoveHeresy
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN54@StartMissi

; 1573 : 				{
; 1574 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN54@StartMissi:

; 1575 : 				}
; 1576 : 			}

	jmp	$LN146@StartMissi
$LN55@StartMissi:

; 1577 : 
; 1578 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_GOLDEN_AGE())

	call	?getMISSION_GOLDEN_AGE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_GOLDEN_AGE
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN52@StartMissi

; 1579 : 			{
; 1580 : 				//just play animation, not golden age - JW
; 1581 : 				if(hUnit->HeadMissionQueueNode()->iData1 != -1)

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222602[ebp], edx
	mov	ecx, DWORD PTR $T222602[ebp]
	call	?HeadMissionQueueNode@CvUnit@@IAEPAUMissionData@@XZ ; CvUnit::HeadMissionQueueNode
	cmp	DWORD PTR [eax+4], -1
	je	SHORT $LN51@StartMissi

; 1582 : 				{
; 1583 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1

; 1584 : 				}
; 1585 : 				else

	jmp	SHORT $LN50@StartMissi
$LN51@StartMissi:

; 1586 : 				{
; 1587 : 					if(hUnit->goldenAge())

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222606[ebp], eax
	mov	ecx, DWORD PTR $T222606[ebp]
	call	?goldenAge@CvUnit@@QAE_NXZ		; CvUnit::goldenAge
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN50@StartMissi

; 1588 : 					{
; 1589 : 						bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN50@StartMissi:

; 1590 : 					}
; 1591 : 				}

	jmp	$LN146@StartMissi
$LN52@StartMissi:

; 1592 : 			}
; 1593 : 
; 1594 : 			else if (pkQueueData->eMissionType == CvTypes::getMISSION_ESTABLISH_TRADE_ROUTE())

	call	?getMISSION_ESTABLISH_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ESTABLISH_TRADE_ROUTE
	mov	edx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [edx], eax
	jne	$LN47@StartMissi

; 1595 : 			{
; 1596 : 				CvPlot* pPlot = GC.getMap().plotByIndex(pkQueueData->iData1);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T222610[ebp], eax
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T222624[ebp], edx
	cmp	DWORD PTR $T222624[ebp], 0
	jl	SHORT $LN407@StartMissi
	mov	eax, DWORD PTR $T222610[ebp]
	mov	ecx, DWORD PTR [eax+4028]
	mov	DWORD PTR $T222617[ebp], ecx
	mov	edx, DWORD PTR $T222624[ebp]
	cmp	edx, DWORD PTR $T222617[ebp]
	jge	SHORT $LN407@StartMissi
	mov	eax, DWORD PTR $T222624[ebp]
	imul	eax, 484				; 000001e4H
	mov	ecx, DWORD PTR $T222610[ebp]
	add	eax, DWORD PTR [ecx+4068]
	mov	DWORD PTR tv610[ebp], eax
	jmp	SHORT $LN405@StartMissi
$LN407@StartMissi:
	mov	DWORD PTR tv610[ebp], 0
$LN405@StartMissi:
	mov	edx, DWORD PTR tv610[ebp]
	mov	DWORD PTR _pPlot$218247[ebp], edx

; 1597 : 				CvAssertMsg(pPlot, "pPlot is null! OH NOES, JOEY!");
; 1598 : 				if (pPlot)

	cmp	DWORD PTR _pPlot$218247[ebp], 0
	je	SHORT $LN46@StartMissi

; 1599 : 				{
; 1600 : 					if(hUnit->makeTradeRoute(pPlot->getX(), pPlot->getY(), (TradeConnectionType)pkQueueData->iData2))

	mov	eax, DWORD PTR _pPlot$218247[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR $T222628[ebp], ecx
	mov	edx, DWORD PTR _pPlot$218247[ebp]
	movsx	eax, WORD PTR [edx]
	mov	DWORD PTR $T222632[ebp], eax
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222636[ebp], ecx
	mov	edx, DWORD PTR _pkQueueData$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR $T222628[ebp]
	push	ecx
	mov	edx, DWORD PTR $T222632[ebp]
	push	edx
	mov	ecx, DWORD PTR $T222636[ebp]
	call	?makeTradeRoute@CvUnit@@QAE_NHHW4TradeConnectionType@@@Z ; CvUnit::makeTradeRoute
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN46@StartMissi

; 1601 : 					{
; 1602 : 						bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN46@StartMissi:

; 1603 : 					}
; 1604 : 				}
; 1605 : 			}

	jmp	$LN146@StartMissi
$LN47@StartMissi:

; 1606 : 	
; 1607 : 			else if (pkQueueData->eMissionType == CvTypes::getMISSION_PLUNDER_TRADE_ROUTE())

	call	?getMISSION_PLUNDER_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_PLUNDER_TRADE_ROUTE
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN43@StartMissi

; 1608 : 			{
; 1609 : 				if (hUnit->plunderTradeRoute())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222640[ebp], edx
	mov	ecx, DWORD PTR $T222640[ebp]
	call	?plunderTradeRoute@CvUnit@@QAE_NXZ	; CvUnit::plunderTradeRoute
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN42@StartMissi

; 1610 : 				{
; 1611 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN42@StartMissi:

; 1612 : 				}
; 1613 : 			}

	jmp	$LN146@StartMissi
$LN43@StartMissi:

; 1614 : 
; 1615 : 			else if (pkQueueData->eMissionType == CvTypes::getMISSION_GREAT_WORK())

	call	?getMISSION_GREAT_WORK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_GREAT_WORK
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN40@StartMissi

; 1616 : 			{
; 1617 : 				if (hUnit->createGreatWork())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222644[ebp], edx
	mov	ecx, DWORD PTR $T222644[ebp]
	call	?createGreatWork@CvUnit@@QAE_NXZ	; CvUnit::createGreatWork
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN39@StartMissi

; 1618 : 				{
; 1619 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN39@StartMissi:

; 1620 : 				}
; 1621 : 			}

	jmp	$LN146@StartMissi
$LN40@StartMissi:

; 1622 : 
; 1623 : 			else if (pkQueueData->eMissionType == CvTypes::getMISSION_CHANGE_TRADE_UNIT_HOME_CITY())

	call	?getMISSION_CHANGE_TRADE_UNIT_HOME_CITY@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_CHANGE_TRADE_UNIT_HOME_CITY
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN37@StartMissi

; 1624 : 			{
; 1625 : 				if(hUnit->changeTradeUnitHomeCity(pkQueueData->iData1, pkQueueData->iData2))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222648[ebp], edx
	mov	eax, DWORD PTR _pkQueueData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _pkQueueData$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR $T222648[ebp]
	call	?changeTradeUnitHomeCity@CvUnit@@QAE_NHH@Z ; CvUnit::changeTradeUnitHomeCity
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN36@StartMissi

; 1626 : 				{
; 1627 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN36@StartMissi:

; 1628 : 				}
; 1629 : 			}

	jmp	$LN146@StartMissi
$LN37@StartMissi:

; 1630 : 
; 1631 : 			else if (pkQueueData->eMissionType == CvTypes::getMISSION_SELL_EXOTIC_GOODS())

	call	?getMISSION_SELL_EXOTIC_GOODS@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SELL_EXOTIC_GOODS
	mov	edx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [edx], eax
	jne	SHORT $LN34@StartMissi

; 1632 : 			{
; 1633 : 				if (hUnit->sellExoticGoods())

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222652[ebp], eax
	mov	ecx, DWORD PTR $T222652[ebp]
	call	?sellExoticGoods@CvUnit@@QAE_NXZ	; CvUnit::sellExoticGoods
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN33@StartMissi

; 1634 : 				{
; 1635 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN33@StartMissi:

; 1636 : 				}
; 1637 : 			}

	jmp	$LN146@StartMissi
$LN34@StartMissi:

; 1638 : 
; 1639 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_BUILD())

	call	?getMISSION_BUILD@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_BUILD
	mov	edx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [edx], eax
	jne	$LN31@StartMissi

; 1640 : 			{
; 1641 : 				// Gold cost for Improvement construction
; 1642 : 				kUnitOwner.GetTreasury()->ChangeGold(-(kUnitOwner.getBuildCost(hUnit->plot(), (BuildTypes)(hUnit->HeadMissionQueueNode()->iData1))));

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222656[ebp], eax
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222660[ebp], ecx
	mov	ecx, DWORD PTR $T222656[ebp]
	call	?HeadMissionQueueNode@CvUnit@@IAEPAUMissionData@@XZ ; CvUnit::HeadMissionQueueNode
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	ecx, DWORD PTR $T222660[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	push	eax
	mov	ecx, DWORD PTR _kUnitOwner$[ebp]
	call	?getBuildCost@CvPlayer@@QBEHPBVCvPlot@@W4BuildTypes@@@Z ; CvPlayer::getBuildCost
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _kUnitOwner$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?ChangeGold@CvTreasury@@QAEXH@Z		; CvTreasury::ChangeGold

; 1643 : 
; 1644 : 				auto_ptr<ICvUnit1> pDllUnit(new CvDllUnit(hUnit.pointer()));

	push	12					; 0000000cH
	call	??2CvDllUnit@@SAPAXI@Z			; CvDllUnit::operator new
	add	esp, 4
	mov	DWORD PTR $T222111[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T222111[ebp], 0
	je	SHORT $LN160@StartMissi
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222664[ebp], eax
	mov	ecx, DWORD PTR $T222664[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T222111[ebp]
	call	??0CvDllUnit@@QAE@PAVCvUnit@@@Z		; CvDllUnit::CvDllUnit
	mov	DWORD PTR tv772[ebp], eax
	jmp	SHORT $LN161@StartMissi
$LN160@StartMissi:
	mov	DWORD PTR tv772[ebp], 0
$LN161@StartMissi:
	mov	edx, DWORD PTR tv772[ebp]
	mov	DWORD PTR $T222110[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T222110[ebp]
	mov	DWORD PTR _pDllUnit$218271[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6

; 1645 : 				gDLL->GameplayUnitWork(pDllUnit.get(), (hUnit->HeadMissionQueueNode()->iData1));

	mov	ecx, DWORD PTR $T222671[ebp]
	mov	DWORD PTR tv782[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv782[ebp], edx
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222675[ebp], eax
	mov	ecx, DWORD PTR _pDllUnit$218271[ebp]
	mov	DWORD PTR $T222679[ebp], ecx
	mov	ecx, DWORD PTR $T222675[ebp]
	call	?HeadMissionQueueNode@CvUnit@@IAEPAUMissionData@@XZ ; CvUnit::HeadMissionQueueNode
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR $T222679[ebp]
	push	eax
	mov	ecx, DWORD PTR tv782[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv782[ebp]
	mov	eax, DWORD PTR [edx+612]
	call	eax

; 1646 : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _pDllUnit$218271[ebp]
	mov	DWORD PTR $T222689[ebp], ecx
	cmp	DWORD PTR $T222689[ebp], 0
	je	SHORT $LN439@StartMissi
	mov	edx, DWORD PTR $T222689[ebp]
	mov	DWORD PTR _inst$222693[ebp], edx
	mov	eax, DWORD PTR _inst$222693[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$222693[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN439@StartMissi:

; 1647 : 
; 1648 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_ROUTE_TO())

	jmp	$LN146@StartMissi
$LN31@StartMissi:
	call	?getMISSION_ROUTE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ROUTE_TO
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	$LN29@StartMissi

; 1649 : 			{
; 1650 : 				auto_ptr<ICvUnit1> pDllUnit(new CvDllUnit(hUnit.pointer()));

	push	12					; 0000000cH
	call	??2CvDllUnit@@SAPAXI@Z			; CvDllUnit::operator new
	add	esp, 4
	mov	DWORD PTR $T222115[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	cmp	DWORD PTR $T222115[ebp], 0
	je	SHORT $LN162@StartMissi
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222697[ebp], edx
	mov	eax, DWORD PTR $T222697[ebp]
	push	eax
	mov	ecx, DWORD PTR $T222115[ebp]
	call	??0CvDllUnit@@QAE@PAVCvUnit@@@Z		; CvDllUnit::CvDllUnit
	mov	DWORD PTR tv811[ebp], eax
	jmp	SHORT $LN163@StartMissi
$LN162@StartMissi:
	mov	DWORD PTR tv811[ebp], 0
$LN163@StartMissi:
	mov	ecx, DWORD PTR tv811[ebp]
	mov	DWORD PTR $T222114[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T222114[ebp]
	mov	DWORD PTR _pDllUnit$218279[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 8

; 1651 : 				gDLL->GameplayUnitWork(pDllUnit.get(), 0);

	mov	eax, DWORD PTR $T222704[ebp]
	mov	DWORD PTR tv821[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv821[ebp], ecx
	push	0
	mov	edx, DWORD PTR _pDllUnit$218279[ebp]
	push	edx
	mov	eax, DWORD PTR tv821[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv821[ebp]
	mov	eax, DWORD PTR [edx+612]
	call	eax

; 1652 : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _pDllUnit$218279[ebp]
	mov	DWORD PTR $T222717[ebp], ecx
	cmp	DWORD PTR $T222717[ebp], 0
	je	SHORT $LN452@StartMissi
	mov	edx, DWORD PTR $T222717[ebp]
	mov	DWORD PTR _inst$222721[ebp], edx
	mov	eax, DWORD PTR _inst$222721[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$222721[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN452@StartMissi:

; 1653 : 
; 1654 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_LEAD())

	jmp	$LN146@StartMissi
$LN29@StartMissi:
	call	?getMISSION_LEAD@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_LEAD
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN27@StartMissi

; 1655 : 			{
; 1656 : 				if(hUnit->lead(hUnit->HeadMissionQueueNode()->iData1))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222725[ebp], edx
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222729[ebp], eax
	mov	ecx, DWORD PTR $T222725[ebp]
	call	?HeadMissionQueueNode@CvUnit@@IAEPAUMissionData@@XZ ; CvUnit::HeadMissionQueueNode
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR $T222729[ebp]
	call	?lead@CvUnit@@QAE_NH@Z			; CvUnit::lead
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN26@StartMissi

; 1657 : 				{
; 1658 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN26@StartMissi:

; 1659 : 				}
; 1660 : 			}

	jmp	$LN146@StartMissi
$LN27@StartMissi:

; 1661 : 
; 1662 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_DIE_ANIMATION())

	call	?getMISSION_DIE_ANIMATION@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_DIE_ANIMATION
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN24@StartMissi

; 1663 : 			{
; 1664 : 				bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
	jmp	$LN146@StartMissi
$LN24@StartMissi:

; 1665 : 			}
; 1666 : 
; 1667 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_GIVE_POLICIES())

	call	?getMISSION_GIVE_POLICIES@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_GIVE_POLICIES
	mov	edx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [edx], eax
	jne	SHORT $LN22@StartMissi

; 1668 : 			{
; 1669 : 				//just play animation, not golden age - JW
; 1670 : 				if(hUnit->HeadMissionQueueNode()->iData1 != -1)

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222733[ebp], eax
	mov	ecx, DWORD PTR $T222733[ebp]
	call	?HeadMissionQueueNode@CvUnit@@IAEPAUMissionData@@XZ ; CvUnit::HeadMissionQueueNode
	cmp	DWORD PTR [eax+4], -1
	je	SHORT $LN21@StartMissi

; 1671 : 				{
; 1672 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1

; 1673 : 				}
; 1674 : 				else

	jmp	SHORT $LN20@StartMissi
$LN21@StartMissi:

; 1675 : 				{
; 1676 : 					if(hUnit->givePolicies())

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222737[ebp], ecx
	mov	ecx, DWORD PTR $T222737[ebp]
	call	?givePolicies@CvUnit@@QAE_NXZ		; CvUnit::givePolicies
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN20@StartMissi

; 1677 : 					{
; 1678 : 						bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN20@StartMissi:

; 1679 : 					}
; 1680 : 				}

	jmp	$LN146@StartMissi
$LN22@StartMissi:

; 1681 : 			}
; 1682 : 
; 1683 : 			else if(pkQueueData->eMissionType == CvTypes::getMISSION_ONE_SHOT_TOURISM())

	call	?getMISSION_ONE_SHOT_TOURISM@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ONE_SHOT_TOURISM
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN17@StartMissi

; 1684 : 			{
; 1685 : 				//just play animation, not golden age - JW
; 1686 : 				if(hUnit->HeadMissionQueueNode()->iData1 != -1)

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222741[ebp], edx
	mov	ecx, DWORD PTR $T222741[ebp]
	call	?HeadMissionQueueNode@CvUnit@@IAEPAUMissionData@@XZ ; CvUnit::HeadMissionQueueNode
	cmp	DWORD PTR [eax+4], -1
	je	SHORT $LN16@StartMissi

; 1687 : 				{
; 1688 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1

; 1689 : 				}
; 1690 : 				else

	jmp	SHORT $LN15@StartMissi
$LN16@StartMissi:

; 1691 : 				{
; 1692 : 					if(hUnit->blastTourism())

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222745[ebp], eax
	mov	ecx, DWORD PTR $T222745[ebp]
	call	?blastTourism@CvUnit@@QAE_NXZ		; CvUnit::blastTourism
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN15@StartMissi

; 1693 : 					{
; 1694 : 						bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN15@StartMissi:

; 1695 : 					}
; 1696 : 				}

	jmp	SHORT $LN146@StartMissi
$LN17@StartMissi:

; 1697 : 			}
; 1698 : 
; 1699 : 			else if (pkQueueData->eMissionType == CvTypes::getMISSION_CHANGE_ADMIRAL_PORT())

	call	?getMISSION_CHANGE_ADMIRAL_PORT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_CHANGE_ADMIRAL_PORT
	mov	edx, DWORD PTR _pkQueueData$[ebp]
	cmp	DWORD PTR [edx], eax
	jne	SHORT $LN146@StartMissi

; 1700 : 			{
; 1701 : 				if(hUnit->changeAdmiralPort(pkQueueData->iData1, pkQueueData->iData2))

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222749[ebp], eax
	mov	ecx, DWORD PTR _pkQueueData$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _pkQueueData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR $T222749[ebp]
	call	?changeAdmiralPort@CvUnit@@QAE_NHH@Z	; CvUnit::changeAdmiralPort
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN146@StartMissi

; 1702 : 				{
; 1703 : 					bAction = true;

	mov	BYTE PTR _bAction$[ebp], 1
$LN146@StartMissi:

; 1704 : 				}
; 1705 : 			}
; 1706 : 		}
; 1707 : 	}
; 1708 : 
; 1709 : 	if(hUnit->HeadMissionQueueNode() != NULL)

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222753[ebp], eax
	mov	ecx, DWORD PTR $T222753[ebp]
	call	?HeadMissionQueueNode@CvUnit@@IAEPAUMissionData@@XZ ; CvUnit::HeadMissionQueueNode
	test	eax, eax
	je	$LN10@StartMissi

; 1710 : 	{
; 1711 : 		if(bAction)

	movzx	ecx, BYTE PTR _bAction$[ebp]
	test	ecx, ecx
	je	$LN9@StartMissi

; 1712 : 		{
; 1713 : 			if(hUnit->isHuman())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222757[ebp], edx
	mov	ecx, DWORD PTR $T222757[ebp]
	call	?isHuman@CvUnit@@QBE_NXZ		; CvUnit::isHuman
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@StartMissi

; 1714 : 			{
; 1715 : 				if(hUnit->plot()->isVisibleToWatchingHuman())

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222761[ebp], ecx
	mov	ecx, DWORD PTR $T222761[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	ecx, eax
	call	?isVisibleToWatchingHuman@CvPlot@@QBE_NXZ ; CvPlot::isVisibleToWatchingHuman
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN9@StartMissi

; 1716 : 				{
; 1717 : 					UpdateMissionTimer(hUnit);

	push	0
	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR $T222118[ebp], esp
	mov	DWORD PTR $T222771[ebp], eax
	mov	ecx, DWORD PTR $T222771[ebp]
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T222771[ebp]
	mov	cl, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [eax+4], cl
	mov	edx, DWORD PTR $T222771[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN478@StartMissi
	mov	eax, DWORD PTR $T222771[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN478@StartMissi:
	mov	ecx, DWORD PTR $T222771[ebp]
	mov	DWORD PTR tv1031[ebp], ecx
	call	?UpdateMissionTimer@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z ; CvUnitMission::UpdateMissionTimer
	add	esp, 12					; 0000000cH
$LN9@StartMissi:

; 1718 : 				}
; 1719 : 			}
; 1720 : 		}
; 1721 : 
; 1722 : 		if(!hUnit->IsBusy())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222775[ebp], edx
	mov	ecx, DWORD PTR $T222775[ebp]
	call	?IsBusy@CvUnit@@QBE_NXZ			; CvUnit::IsBusy
	movzx	eax, al
	test	eax, eax
	jne	$LN10@StartMissi

; 1723 : 		{
; 1724 : 			if(bDelete)

	movzx	ecx, BYTE PTR _bDelete$[ebp]
	test	ecx, ecx
	je	$LN5@StartMissi

; 1725 : 			{
; 1726 : 				if(hUnit->getOwner() == GC.getGame().getActivePlayer())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222779[ebp], edx
	mov	eax, DWORD PTR $T222779[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR $T222788[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T222792[ebp], edx
	mov	ecx, DWORD PTR $T222792[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR $T222788[ebp], eax
	jne	SHORT $LN4@StartMissi

; 1727 : 				{
; 1728 : 					if(hUnit->IsSelected())

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222796[ebp], eax
	mov	ecx, DWORD PTR $T222796[ebp]
	call	?IsSelected@CvUnit@@QBE_NXZ		; CvUnit::IsSelected
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@StartMissi

; 1729 : 					{
; 1730 : 						GC.GetEngineUserInterface()->changeCycleSelectionCounter(kUnitOwner.isOption(PLAYEROPTION_QUICK_MOVES)? 1 : 2);

	mov	edx, DWORD PTR $T222800[ebp]
	mov	DWORD PTR tv950[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv950[ebp], eax
	push	3
	mov	ecx, DWORD PTR _kUnitOwner$[ebp]
	call	?isOption@CvPlayer@@QBE_NW4PlayerOptionTypes@@@Z ; CvPlayer::isOption
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR tv950[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv950[ebp]
	mov	edx, DWORD PTR [eax+224]
	call	edx
$LN4@StartMissi:

; 1731 : 					}
; 1732 : 				}
; 1733 : 
; 1734 : 				DeleteMissionQueueNode(hUnit, hUnit->HeadMissionQueueNode());

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222804[ebp], eax
	mov	ecx, DWORD PTR $T222804[ebp]
	call	?HeadMissionQueueNode@CvUnit@@IAEPAUMissionData@@XZ ; CvUnit::HeadMissionQueueNode
	push	eax
	sub	esp, 8
	mov	ecx, esp
	mov	DWORD PTR $T222119[ebp], esp
	mov	DWORD PTR $T222814[ebp], ecx
	mov	edx, DWORD PTR $T222814[ebp]
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T222814[ebp]
	mov	dl, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [ecx+4], dl
	mov	eax, DWORD PTR $T222814[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN499@StartMissi
	mov	ecx, DWORD PTR $T222814[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN499@StartMissi:
	mov	edx, DWORD PTR $T222814[ebp]
	mov	DWORD PTR tv1034[ebp], edx
	call	?DeleteMissionQueueNode@CvUnitMission@@CAPAUMissionData@@V?$FObjectHandle@VCvUnit@@@@PAU2@@Z ; CvUnitMission::DeleteMissionQueueNode
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN10@StartMissi
$LN5@StartMissi:

; 1735 : 			}
; 1736 : 			else if(hUnit->GetActivityType() == ACTIVITY_MISSION)

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222818[ebp], eax
	mov	ecx, DWORD PTR $T222818[ebp]
	call	?GetActivityType@CvUnit@@QBE?AW4ActivityTypes@@XZ ; CvUnit::GetActivityType
	cmp	eax, 6
	jne	SHORT $LN10@StartMissi

; 1737 : 			{
; 1738 : 				ContinueMission(hUnit);

	push	-1
	push	0
	sub	esp, 8
	mov	ecx, esp
	mov	DWORD PTR $T222120[ebp], esp
	mov	DWORD PTR $T222828[ebp], ecx
	mov	edx, DWORD PTR $T222828[ebp]
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T222828[ebp]
	mov	dl, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [ecx+4], dl
	mov	eax, DWORD PTR $T222828[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN506@StartMissi
	mov	ecx, DWORD PTR $T222828[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN506@StartMissi:
	mov	edx, DWORD PTR $T222828[ebp]
	mov	DWORD PTR tv1038[ebp], edx
	call	?ContinueMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@HH@Z ; CvUnitMission::ContinueMission
	add	esp, 16					; 00000010H
$LN10@StartMissi:

; 1739 : 			}
; 1740 : 		}
; 1741 : 	}
; 1742 : 	--stackDepth;

	mov	eax, DWORD PTR ?stackDepth@?1??StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z@4HA
	sub	eax, 1
	mov	DWORD PTR ?stackDepth@?1??StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z@4HA, eax

; 1743 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN154@StartMissi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN154@StartMissi:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$0:
	lea	ecx, DWORD PTR _hUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__unwindfunclet$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$4:
	mov	eax, DWORD PTR $T222102[ebp]
	push	eax
	call	??3CvDllUnit@@SAXPAX@Z			; CvDllUnit::operator delete
	pop	ecx
	ret	0
__unwindfunclet$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$5:
	lea	ecx, DWORD PTR _pDllUnit$218172[ebp]
	jmp	??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ	; std::auto_ptr<ICvUnit1>::~auto_ptr<ICvUnit1>
__unwindfunclet$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$7:
	mov	eax, DWORD PTR $T222107[ebp]
	push	eax
	call	??3CvDllUnit@@SAXPAX@Z			; CvDllUnit::operator delete
	pop	ecx
	ret	0
__unwindfunclet$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$8:
	lea	ecx, DWORD PTR _pDllUnit$218187[ebp]
	jmp	??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ	; std::auto_ptr<ICvUnit1>::~auto_ptr<ICvUnit1>
__unwindfunclet$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$9:
	mov	eax, DWORD PTR $T222111[ebp]
	push	eax
	call	??3CvDllUnit@@SAXPAX@Z			; CvDllUnit::operator delete
	pop	ecx
	ret	0
__unwindfunclet$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$10:
	lea	ecx, DWORD PTR _pDllUnit$218271[ebp]
	jmp	??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ	; std::auto_ptr<ICvUnit1>::~auto_ptr<ICvUnit1>
__unwindfunclet$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$11:
	mov	eax, DWORD PTR $T222115[ebp]
	push	eax
	call	??3CvDllUnit@@SAXPAX@Z			; CvDllUnit::operator delete
	pop	ecx
	ret	0
__unwindfunclet$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z$12:
	lea	ecx, DWORD PTR _pDllUnit$218279[ebp]
	jmp	??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ	; std::auto_ptr<ICvUnit1>::~auto_ptr<ICvUnit1>
__ehhandler$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-692]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z ENDP ; CvUnitMission::StartMission
PUBLIC	?PrevMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@PBU2@@Z ; CvUnitMission::PrevMissionQueueNode
PUBLIC	?LastMissionPlot@CvUnitMission@@SAPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@@Z ; CvUnitMission::LastMissionPlot
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?LastMissionPlot@CvUnitMission@@SAPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LastMissionPlot@CvUnitMission@@SAPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LastMissionPlot@CvUnitMission@@SAPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@@Z$1
__ehfuncinfo$?LastMissionPlot@CvUnitMission@@SAPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?LastMissionPlot@CvUnitMission@@SAPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvunitmission.cpp
xdata$x	ENDS
;	COMDAT ?LastMissionPlot@CvUnitMission@@SAPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
tv187 = -104						; size = 4
$T222987 = -100						; size = 4
$T222983 = -96						; size = 4
$T222952 = -92						; size = 4
$T222945 = -88						; size = 4
$T222935 = -84						; size = 4
$T222922 = -80						; size = 4
$T222921 = -76						; size = 4
$T222890 = -72						; size = 4
$T222885 = -68						; size = 4
$T222881 = -61						; size = 1
$T222870 = -60						; size = 4
$T222866 = -53						; size = 1
_iMapY$222920 = -52					; size = 4
_iMapX$222919 = -48					; size = 4
$T222859 = -44						; size = 4
$T222855 = -40						; size = 4
$T222849 = -36						; size = 4
$T222848 = -32						; size = 4
$T222847 = -28						; size = 4
_pTargetUnit$218323 = -24				; size = 8
_pMissionNode$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_hUnit$ = 8						; size = 8
?LastMissionPlot@CvUnitMission@@SAPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@@Z PROC ; CvUnitMission::LastMissionPlot, COMDAT

; 1748 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LastMissionPlot@CvUnitMission@@SAPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1749 : 	const MissionQueueNode* pMissionNode = TailMissionQueueNode(hUnit->m_missionQueue);

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222855[ebp], eax
	mov	ecx, DWORD PTR $T222855[ebp]
	add	ecx, 2600				; 00000a28H
	push	ecx
	call	?TailMissionQueueNode@CvUnitMission@@CAPAUMissionData@@AAV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::TailMissionQueueNode
	add	esp, 4
	mov	DWORD PTR _pMissionNode$[ebp], eax
$LN7@LastMissio:

; 1750 : 
; 1751 : 	while(pMissionNode != NULL)

	cmp	DWORD PTR _pMissionNode$[ebp], 0
	je	$LN6@LastMissio

; 1752 : 	{
; 1753 : 		if(pMissionNode->eMissionType == CvTypes::getMISSION_MOVE_TO() ||
; 1754 : 		        pMissionNode->eMissionType == CvTypes::getMISSION_ROUTE_TO() ||
; 1755 : 		        pMissionNode->eMissionType == CvTypes::getMISSION_SWAP_UNITS())

	call	?getMISSION_MOVE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MOVE_TO
	mov	edx, DWORD PTR _pMissionNode$[ebp]
	cmp	DWORD PTR [edx], eax
	je	SHORT $LN4@LastMissio
	call	?getMISSION_ROUTE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ROUTE_TO
	mov	ecx, DWORD PTR _pMissionNode$[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN4@LastMissio
	call	?getMISSION_SWAP_UNITS@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SWAP_UNITS
	mov	edx, DWORD PTR _pMissionNode$[ebp]
	cmp	DWORD PTR [edx], eax
	jne	$LN5@LastMissio
$LN4@LastMissio:

; 1756 : 		{
; 1757 : 			return GC.getMap().plot(pMissionNode->iData1, pMissionNode->iData2);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T222859[ebp], eax
	mov	ecx, DWORD PTR _pMissionNode$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T222922[ebp], edx
	mov	eax, DWORD PTR _pMissionNode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T222921[ebp], ecx
	cmp	DWORD PTR $T222921[ebp], -2147483647	; 80000001H
	je	SHORT $LN16@LastMissio
	cmp	DWORD PTR $T222922[ebp], -2147483647	; 80000001H
	jne	SHORT $LN17@LastMissio
$LN16@LastMissio:
	mov	DWORD PTR $T222847[ebp], 0
	jmp	$LN18@LastMissio
$LN17@LastMissio:
	mov	edx, DWORD PTR $T222859[ebp]
	mov	al, BYTE PTR [edx+4056]
	mov	BYTE PTR $T222866[ebp], al
	mov	ecx, DWORD PTR $T222859[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T222870[ebp], edx
	movzx	eax, BYTE PTR $T222866[ebp]
	test	eax, eax
	je	SHORT $LN29@LastMissio
	cmp	DWORD PTR $T222921[ebp], 0
	jge	SHORT $LN28@LastMissio
	mov	eax, DWORD PTR $T222921[ebp]
	cdq
	idiv	DWORD PTR $T222870[ebp]
	add	edx, DWORD PTR $T222870[ebp]
	mov	DWORD PTR _iMapX$222919[ebp], edx
	jmp	SHORT $LN30@LastMissio
	jmp	SHORT $LN29@LastMissio
$LN28@LastMissio:
	mov	ecx, DWORD PTR $T222921[ebp]
	cmp	ecx, DWORD PTR $T222870[ebp]
	jl	SHORT $LN29@LastMissio
	mov	eax, DWORD PTR $T222921[ebp]
	cdq
	idiv	DWORD PTR $T222870[ebp]
	mov	DWORD PTR _iMapX$222919[ebp], edx
	jmp	SHORT $LN30@LastMissio
$LN29@LastMissio:
	mov	edx, DWORD PTR $T222921[ebp]
	mov	DWORD PTR _iMapX$222919[ebp], edx
$LN30@LastMissio:
	mov	eax, DWORD PTR $T222859[ebp]
	mov	cl, BYTE PTR [eax+4057]
	mov	BYTE PTR $T222881[ebp], cl
	mov	edx, DWORD PTR $T222859[ebp]
	mov	eax, DWORD PTR [edx+4024]
	mov	DWORD PTR $T222885[ebp], eax
	movzx	ecx, BYTE PTR $T222881[ebp]
	push	ecx
	mov	edx, DWORD PTR $T222885[ebp]
	push	edx
	mov	eax, DWORD PTR $T222922[ebp]
	push	eax
	call	?coordRange@@YAHHH_N@Z			; coordRange
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iMapY$222920[ebp], eax
	mov	ecx, DWORD PTR _iMapY$222920[ebp]
	push	ecx
	mov	edx, DWORD PTR _iMapX$222919[ebp]
	push	edx
	mov	ecx, DWORD PTR $T222859[ebp]
	call	?isPlot@CvMap@@QBEHHH@Z			; CvMap::isPlot
	test	eax, eax
	je	SHORT $LN20@LastMissio
	mov	eax, DWORD PTR $T222859[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T222890[ebp], ecx
	mov	edx, DWORD PTR _iMapY$222920[ebp]
	imul	edx, DWORD PTR $T222890[ebp]
	add	edx, DWORD PTR _iMapX$222919[ebp]
	imul	edx, 484				; 000001e4H
	mov	eax, DWORD PTR $T222859[ebp]
	add	edx, DWORD PTR [eax+4068]
	mov	DWORD PTR tv187[ebp], edx
	jmp	SHORT $LN21@LastMissio
$LN20@LastMissio:
	mov	DWORD PTR tv187[ebp], 0
$LN21@LastMissio:
	mov	ecx, DWORD PTR tv187[ebp]
	mov	DWORD PTR $T222847[ebp], ecx
$LN18@LastMissio:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN41@LastMissio
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN41@LastMissio:
	mov	eax, DWORD PTR $T222847[ebp]
	jmp	$LN8@LastMissio
	jmp	$LN3@LastMissio
$LN5@LastMissio:

; 1758 : 		}
; 1759 : 
; 1760 : 		else if(pMissionNode->eMissionType == CvTypes::getMISSION_MOVE_TO_UNIT())

	call	?getMISSION_MOVE_TO_UNIT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MOVE_TO_UNIT
	mov	edx, DWORD PTR _pMissionNode$[ebp]
	cmp	DWORD PTR [edx], eax
	jne	$LN3@LastMissio

; 1761 : 		{
; 1762 : 			UnitHandle pTargetUnit = GET_PLAYER((PlayerTypes)pMissionNode->iData1).getUnit(pMissionNode->iData2);

	mov	eax, DWORD PTR _pMissionNode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T222935[ebp], ecx
	mov	edx, DWORD PTR _pMissionNode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR $T222935[ebp]
	call	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z	; CvPlayer::getUnit
	mov	DWORD PTR $T222945[ebp], eax
	mov	ecx, DWORD PTR $T222945[ebp]
	mov	DWORD PTR _pTargetUnit$218323[ebp], ecx
	mov	BYTE PTR _pTargetUnit$218323[ebp+4], 0
	cmp	DWORD PTR _pTargetUnit$218323[ebp], 0
	je	SHORT $LN48@LastMissio
	mov	ecx, DWORD PTR _pTargetUnit$218323[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN48@LastMissio:
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 1763 : 			if(pTargetUnit)

	xor	edx, edx
	cmp	DWORD PTR _pTargetUnit$218323[ebp], 0
	setne	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN1@LastMissio

; 1764 : 			{
; 1765 : 				return pTargetUnit->plot();

	mov	ecx, DWORD PTR _pTargetUnit$218323[ebp]
	mov	DWORD PTR $T222952[ebp], ecx
	mov	ecx, DWORD PTR $T222952[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	DWORD PTR $T222848[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$218323[ebp], 0
	je	SHORT $LN57@LastMissio
	mov	ecx, DWORD PTR _pTargetUnit$218323[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN57@LastMissio:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN62@LastMissio
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN62@LastMissio:
	mov	eax, DWORD PTR $T222848[ebp]
	jmp	SHORT $LN8@LastMissio
$LN1@LastMissio:

; 1766 : 			}
; 1767 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$218323[ebp], 0
	je	SHORT $LN3@LastMissio
	mov	ecx, DWORD PTR _pTargetUnit$218323[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN3@LastMissio:

; 1768 : 
; 1769 : 		pMissionNode = PrevMissionQueueNode(hUnit->m_missionQueue, pMissionNode);

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222983[ebp], edx
	mov	eax, DWORD PTR _pMissionNode$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T222983[ebp]
	add	ecx, 2600				; 00000a28H
	push	ecx
	call	?PrevMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@PBU2@@Z ; CvUnitMission::PrevMissionQueueNode
	add	esp, 8
	mov	DWORD PTR _pMissionNode$[ebp], eax

; 1770 : 	}

	jmp	$LN7@LastMissio
$LN6@LastMissio:

; 1771 : 
; 1772 : 	return hUnit->plot();

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T222987[ebp], edx
	mov	ecx, DWORD PTR $T222987[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	DWORD PTR $T222849[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN76@LastMissio
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN76@LastMissio:
	mov	eax, DWORD PTR $T222849[ebp]
$LN8@LastMissio:

; 1773 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LastMissionPlot@CvUnitMission@@SAPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@@Z$0:
	lea	ecx, DWORD PTR _hUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__unwindfunclet$?LastMissionPlot@CvUnitMission@@SAPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@@Z$1:
	lea	ecx, DWORD PTR _pTargetUnit$218323[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?LastMissionPlot@CvUnitMission@@SAPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LastMissionPlot@CvUnitMission@@SAPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LastMissionPlot@CvUnitMission@@SAPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@@Z ENDP ; CvUnitMission::LastMissionPlot
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?CalculateMissionTimer@CvUnitMission@@SAHV?$FObjectHandle@VCvUnit@@@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CalculateMissionTimer@CvUnitMission@@SAHV?$FObjectHandle@VCvUnit@@@@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?CalculateMissionTimer@CvUnitMission@@SAHV?$FObjectHandle@VCvUnit@@@@H@Z$1
__ehfuncinfo$?CalculateMissionTimer@CvUnitMission@@SAHV?$FObjectHandle@VCvUnit@@@@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CalculateMissionTimer@CvUnitMission@@SAHV?$FObjectHandle@VCvUnit@@@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvunitmission.cpp
xdata$x	ENDS
;	COMDAT ?CalculateMissionTimer@CvUnitMission@@SAHV?$FObjectHandle@VCvUnit@@@@H@Z
_TEXT	SEGMENT
tv167 = -156						; size = 4
tv150 = -152						; size = 4
tv217 = -148						; size = 4
tv229 = -144						; size = 4
$T223173 = -140						; size = 4
$T223166 = -136						; size = 4
$T223162 = -132						; size = 4
$T223156 = -128						; size = 4
$T223149 = -124						; size = 4
$T223145 = -120						; size = 4
$T223144 = -116						; size = 4
$T223105 = -112						; size = 4
$T223092 = -108						; size = 4
$T223088 = -104						; size = 4
$T223081 = -100						; size = 4
$T223077 = -93						; size = 1
$T223066 = -92						; size = 4
$T223062 = -85						; size = 1
_iMapY$223114 = -84					; size = 4
_iMapX$223113 = -80					; size = 4
$T223055 = -76						; size = 4
$T223051 = -72						; size = 4
$T223044 = -68						; size = 4
$T223028 = -64						; size = 4
$T223024 = -60						; size = 4
$T223020 = -56						; size = 4
$T223016 = -52						; size = 4
$T223007 = -48						; size = 4
$T223006 = -44						; size = 4
$T223005 = -40						; size = 4
_kMissionData$218339 = -36				; size = 4
_iTime$ = -32						; size = 4
_pkMissionNode$ = -28					; size = 4
_pTargetPlot$ = -24					; size = 4
_pTargetUnit$ = -20					; size = 8
__$EHRec$ = -12						; size = 12
_hUnit$ = 8						; size = 8
_iSteps$ = 16						; size = 4
?CalculateMissionTimer@CvUnitMission@@SAHV?$FObjectHandle@VCvUnit@@@@H@Z PROC ; CvUnitMission::CalculateMissionTimer, COMDAT

; 1785 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CalculateMissionTimer@CvUnitMission@@SAHV?$FObjectHandle@VCvUnit@@@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 144				; 00000090H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1786 : 	UnitHandle pTargetUnit;

	mov	DWORD PTR _pTargetUnit$[ebp], 0
	mov	BYTE PTR _pTargetUnit$[ebp+4], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 1787 : 	CvPlot* pTargetPlot;
; 1788 : 	int iTime = 0;

	mov	DWORD PTR _iTime$[ebp], 0

; 1789 : 
; 1790 : 	MissionQueueNode* pkMissionNode;
; 1791 : 	if(!hUnit->isHuman() && !hUnit->ShowMoves())

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223016[ebp], eax
	mov	ecx, DWORD PTR $T223016[ebp]
	call	?isHuman@CvUnit@@QBE_NXZ		; CvUnit::isHuman
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN13@CalculateM
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223020[ebp], edx
	mov	ecx, DWORD PTR $T223020[ebp]
	call	?ShowMoves@CvUnit@@QBE_NXZ		; CvUnit::ShowMoves
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN13@CalculateM

; 1792 : 	{
; 1793 : 		iTime = 0;

	mov	DWORD PTR _iTime$[ebp], 0
	jmp	$LN12@CalculateM
$LN13@CalculateM:

; 1794 : 	}
; 1795 : 	else if((pkMissionNode = HeadMissionQueueNode(hUnit->m_missionQueue)) != NULL)

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223024[ebp], ecx
	mov	edx, DWORD PTR $T223024[ebp]
	add	edx, 2600				; 00000a28H
	push	edx
	call	?HeadMissionQueueNode@CvUnitMission@@CAPAUMissionData@@AAV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::HeadMissionQueueNode
	add	esp, 4
	mov	DWORD PTR _pkMissionNode$[ebp], eax
	cmp	DWORD PTR _pkMissionNode$[ebp], 0
	je	$LN11@CalculateM

; 1796 : 	{
; 1797 : 		MissionData& kMissionData = *pkMissionNode;

	mov	eax, DWORD PTR _pkMissionNode$[ebp]
	mov	DWORD PTR _kMissionData$218339[ebp], eax

; 1798 : 
; 1799 : 		iTime = 1;

	mov	DWORD PTR _iTime$[ebp], 1

; 1800 : 
; 1801 : 		if((kMissionData.eMissionType == CvTypes::getMISSION_MOVE_TO()) ||
; 1802 : 		        (kMissionData.eMissionType == CvTypes::getMISSION_ROUTE_TO()) ||
; 1803 : 		        (kMissionData.eMissionType == CvTypes::getMISSION_MOVE_TO_UNIT()))

	call	?getMISSION_MOVE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MOVE_TO
	mov	ecx, DWORD PTR _kMissionData$218339[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN9@CalculateM
	call	?getMISSION_ROUTE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ROUTE_TO
	mov	edx, DWORD PTR _kMissionData$218339[ebp]
	cmp	DWORD PTR [edx], eax
	je	SHORT $LN9@CalculateM
	call	?getMISSION_MOVE_TO_UNIT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MOVE_TO_UNIT
	mov	ecx, DWORD PTR _kMissionData$218339[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	$LN10@CalculateM
$LN9@CalculateM:

; 1804 : 		{
; 1805 : 			if(kMissionData.eMissionType == CvTypes::getMISSION_MOVE_TO_UNIT())

	call	?getMISSION_MOVE_TO_UNIT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MOVE_TO_UNIT
	mov	edx, DWORD PTR _kMissionData$218339[ebp]
	cmp	DWORD PTR [edx], eax
	jne	SHORT $LN8@CalculateM

; 1806 : 			{
; 1807 : 				pTargetUnit = GET_PLAYER((PlayerTypes)kMissionData.iData1).getUnit(kMissionData.iData2);

	mov	eax, DWORD PTR _kMissionData$218339[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T223028[ebp], ecx
	mov	edx, DWORD PTR _kMissionData$218339[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR $T223028[ebp]
	call	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z	; CvPlayer::getUnit
	mov	DWORD PTR $T223044[ebp], eax
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN29@CalculateM
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN29@CalculateM:
	mov	ecx, DWORD PTR $T223044[ebp]
	mov	DWORD PTR _pTargetUnit$[ebp], ecx
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN36@CalculateM
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification

; 1808 : 				if(pTargetUnit)

$LN36@CalculateM:
	xor	edx, edx
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	setne	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN7@CalculateM

; 1809 : 				{
; 1810 : 					pTargetPlot = pTargetUnit->plot();

	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	mov	DWORD PTR $T223051[ebp], ecx
	mov	ecx, DWORD PTR $T223051[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	DWORD PTR _pTargetPlot$[ebp], eax

; 1811 : 				}
; 1812 : 				else

	jmp	SHORT $LN6@CalculateM
$LN7@CalculateM:

; 1813 : 				{
; 1814 : 					pTargetPlot = NULL;

	mov	DWORD PTR _pTargetPlot$[ebp], 0
$LN6@CalculateM:

; 1815 : 				}
; 1816 : 			}
; 1817 : 			else

	jmp	$LN5@CalculateM
$LN8@CalculateM:

; 1818 : 			{
; 1819 : 				pTargetPlot = GC.getMap().plot(kMissionData.iData1, kMissionData.iData2);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T223055[ebp], edx
	mov	eax, DWORD PTR _kMissionData$218339[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T223145[ebp], ecx
	mov	edx, DWORD PTR _kMissionData$218339[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T223144[ebp], eax
	cmp	DWORD PTR $T223144[ebp], -2147483647	; 80000001H
	je	SHORT $LN42@CalculateM
	cmp	DWORD PTR $T223145[ebp], -2147483647	; 80000001H
	jne	SHORT $LN43@CalculateM
$LN42@CalculateM:
	mov	DWORD PTR _pTargetPlot$[ebp], 0
	jmp	$LN5@CalculateM
$LN43@CalculateM:
	mov	ecx, DWORD PTR $T223055[ebp]
	mov	dl, BYTE PTR [ecx+4056]
	mov	BYTE PTR $T223062[ebp], dl
	mov	eax, DWORD PTR $T223055[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T223066[ebp], ecx
	movzx	edx, BYTE PTR $T223062[ebp]
	test	edx, edx
	je	SHORT $LN55@CalculateM
	cmp	DWORD PTR $T223144[ebp], 0
	jge	SHORT $LN54@CalculateM
	mov	eax, DWORD PTR $T223144[ebp]
	cdq
	idiv	DWORD PTR $T223066[ebp]
	add	edx, DWORD PTR $T223066[ebp]
	mov	DWORD PTR _iMapX$223113[ebp], edx
	jmp	SHORT $LN56@CalculateM
	jmp	SHORT $LN55@CalculateM
$LN54@CalculateM:
	mov	eax, DWORD PTR $T223144[ebp]
	cmp	eax, DWORD PTR $T223066[ebp]
	jl	SHORT $LN55@CalculateM
	mov	eax, DWORD PTR $T223144[ebp]
	cdq
	idiv	DWORD PTR $T223066[ebp]
	mov	DWORD PTR _iMapX$223113[ebp], edx
	jmp	SHORT $LN56@CalculateM
$LN55@CalculateM:
	mov	ecx, DWORD PTR $T223144[ebp]
	mov	DWORD PTR _iMapX$223113[ebp], ecx
$LN56@CalculateM:
	mov	edx, DWORD PTR $T223055[ebp]
	mov	al, BYTE PTR [edx+4057]
	mov	BYTE PTR $T223077[ebp], al
	mov	ecx, DWORD PTR $T223055[ebp]
	mov	edx, DWORD PTR [ecx+4024]
	mov	DWORD PTR $T223081[ebp], edx
	movzx	eax, BYTE PTR $T223077[ebp]
	push	eax
	mov	ecx, DWORD PTR $T223081[ebp]
	push	ecx
	mov	edx, DWORD PTR $T223145[ebp]
	push	edx
	call	?coordRange@@YAHHH_N@Z			; coordRange
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iMapY$223114[ebp], eax
	cmp	DWORD PTR _iMapX$223113[ebp], 0
	jl	SHORT $LN64@CalculateM
	mov	eax, DWORD PTR $T223055[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T223088[ebp], ecx
	mov	edx, DWORD PTR _iMapX$223113[ebp]
	cmp	edx, DWORD PTR $T223088[ebp]
	jge	SHORT $LN64@CalculateM
	cmp	DWORD PTR _iMapY$223114[ebp], 0
	jl	SHORT $LN64@CalculateM
	mov	eax, DWORD PTR $T223055[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T223092[ebp], ecx
	mov	edx, DWORD PTR _iMapY$223114[ebp]
	cmp	edx, DWORD PTR $T223092[ebp]
	jge	SHORT $LN64@CalculateM
	mov	DWORD PTR tv229[ebp], 1
	jmp	SHORT $LN62@CalculateM
$LN64@CalculateM:
	mov	DWORD PTR tv229[ebp], 0
$LN62@CalculateM:
	cmp	DWORD PTR tv229[ebp], 0
	je	SHORT $LN46@CalculateM
	mov	eax, DWORD PTR $T223055[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T223105[ebp], ecx
	mov	edx, DWORD PTR _iMapY$223114[ebp]
	imul	edx, DWORD PTR $T223105[ebp]
	add	edx, DWORD PTR _iMapX$223113[ebp]
	imul	edx, 484				; 000001e4H
	mov	eax, DWORD PTR $T223055[ebp]
	add	edx, DWORD PTR [eax+4068]
	mov	DWORD PTR tv217[ebp], edx
	jmp	SHORT $LN47@CalculateM
$LN46@CalculateM:
	mov	DWORD PTR tv217[ebp], 0
$LN47@CalculateM:
	mov	ecx, DWORD PTR tv217[ebp]
	mov	DWORD PTR _pTargetPlot$[ebp], ecx
$LN5@CalculateM:

; 1820 : 			}
; 1821 : 
; 1822 : 			if(pTargetPlot && hUnit->atPlot(*pTargetPlot))

	cmp	DWORD PTR _pTargetPlot$[ebp], 0
	je	SHORT $LN4@CalculateM
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223149[ebp], edx
	mov	eax, DWORD PTR _pTargetPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T223149[ebp]
	call	?atPlot@CvUnit@@QBE_NABVCvPlot@@@Z	; CvUnit::atPlot
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@CalculateM

; 1823 : 			{
; 1824 : 				iTime += iSteps;

	mov	edx, DWORD PTR _iTime$[ebp]
	add	edx, DWORD PTR _iSteps$[ebp]
	mov	DWORD PTR _iTime$[ebp], edx

; 1825 : 			}
; 1826 : 			else

	jmp	SHORT $LN10@CalculateM
$LN4@CalculateM:

; 1827 : 			{
; 1828 : 				iTime = std::min(iTime, 2);

	mov	DWORD PTR $T223005[ebp], 2
	mov	eax, DWORD PTR $T223005[ebp]
	cmp	eax, DWORD PTR _iTime$[ebp]
	jge	SHORT $LN78@CalculateM
	lea	ecx, DWORD PTR $T223005[ebp]
	mov	DWORD PTR tv150[ebp], ecx
	jmp	SHORT $LN79@CalculateM
$LN78@CalculateM:
	lea	edx, DWORD PTR _iTime$[ebp]
	mov	DWORD PTR tv150[ebp], edx
$LN79@CalculateM:
	mov	eax, DWORD PTR tv150[ebp]
	mov	DWORD PTR $T223156[ebp], eax
	mov	ecx, DWORD PTR $T223156[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _iTime$[ebp], edx
$LN10@CalculateM:

; 1829 : 			}
; 1830 : 		}
; 1831 : 
; 1832 : 		if(hUnit->isHuman() && (hUnit->IsAutomated() /*|| (GET_PLAYER((GC.getGame().isNetworkMultiPlayer()) ? hUnit->getOwner() : GC.getGame().getActivePlayer()).isOption(PLAYEROPTION_QUICK_MOVES))*/))

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223162[ebp], eax
	mov	ecx, DWORD PTR $T223162[ebp]
	call	?isHuman@CvUnit@@QBE_NXZ		; CvUnit::isHuman
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@CalculateM
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223166[ebp], edx
	mov	ecx, DWORD PTR $T223166[ebp]
	call	?IsAutomated@CvUnit@@QBE_NXZ		; CvUnit::IsAutomated
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@CalculateM

; 1833 : 		{
; 1834 : 			iTime = std::min(iTime, 1);

	mov	DWORD PTR $T223006[ebp], 1
	mov	ecx, DWORD PTR $T223006[ebp]
	cmp	ecx, DWORD PTR _iTime$[ebp]
	jge	SHORT $LN86@CalculateM
	lea	edx, DWORD PTR $T223006[ebp]
	mov	DWORD PTR tv167[ebp], edx
	jmp	SHORT $LN87@CalculateM
$LN86@CalculateM:
	lea	eax, DWORD PTR _iTime$[ebp]
	mov	DWORD PTR tv167[ebp], eax
$LN87@CalculateM:
	mov	ecx, DWORD PTR tv167[ebp]
	mov	DWORD PTR $T223173[ebp], ecx
	mov	edx, DWORD PTR $T223173[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _iTime$[ebp], eax
$LN2@CalculateM:

; 1835 : 		}
; 1836 : 	}
; 1837 : 	else

	jmp	SHORT $LN12@CalculateM
$LN11@CalculateM:

; 1838 : 	{
; 1839 : 		iTime = 0;

	mov	DWORD PTR _iTime$[ebp], 0
$LN12@CalculateM:

; 1840 : 	}
; 1841 : 
; 1842 : 	return iTime;

	mov	ecx, DWORD PTR _iTime$[ebp]
	mov	DWORD PTR $T223007[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$[ebp], 0
	je	SHORT $LN89@CalculateM
	mov	ecx, DWORD PTR _pTargetUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN89@CalculateM:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN94@CalculateM
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN94@CalculateM:
	mov	eax, DWORD PTR $T223007[ebp]

; 1843 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CalculateMissionTimer@CvUnitMission@@SAHV?$FObjectHandle@VCvUnit@@@@H@Z$0:
	lea	ecx, DWORD PTR _hUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__unwindfunclet$?CalculateMissionTimer@CvUnitMission@@SAHV?$FObjectHandle@VCvUnit@@@@H@Z$1:
	lea	ecx, DWORD PTR _pTargetUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?CalculateMissionTimer@CvUnitMission@@SAHV?$FObjectHandle@VCvUnit@@@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-148]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CalculateMissionTimer@CvUnitMission@@SAHV?$FObjectHandle@VCvUnit@@@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CalculateMissionTimer@CvUnitMission@@SAHV?$FObjectHandle@VCvUnit@@@@H@Z ENDP ; CvUnitMission::CalculateMissionTimer
EXTRN	?SetMissionTimer@CvUnit@@QAEXH@Z:PROC		; CvUnit::SetMissionTimer
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?UpdateMissionTimer@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UpdateMissionTimer@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z$0
__ehfuncinfo$?UpdateMissionTimer@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?UpdateMissionTimer@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvunitmission.cpp
xdata$x	ENDS
;	COMDAT ?UpdateMissionTimer@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z
_TEXT	SEGMENT
tv89 = -28						; size = 4
tv88 = -24						; size = 4
$T223214 = -20						; size = 4
$T223202 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_hUnit$ = 8						; size = 8
_iSteps$ = 16						; size = 4
?UpdateMissionTimer@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z PROC ; CvUnitMission::UpdateMissionTimer, COMDAT

; 1847 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UpdateMissionTimer@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1848 : 	hUnit->SetMissionTimer(CalculateMissionTimer(hUnit, iSteps));

	mov	eax, DWORD PTR _iSteps$[ebp]
	push	eax
	sub	esp, 8
	mov	ecx, esp
	mov	DWORD PTR $T223202[ebp], esp
	mov	DWORD PTR $T223214[ebp], ecx
	mov	edx, DWORD PTR $T223214[ebp]
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T223214[ebp]
	mov	dl, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [ecx+4], dl
	mov	eax, DWORD PTR $T223214[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@UpdateMiss@2
	mov	ecx, DWORD PTR $T223214[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN6@UpdateMiss@2:
	mov	edx, DWORD PTR $T223214[ebp]
	mov	DWORD PTR tv88[ebp], edx
	call	?CalculateMissionTimer@CvUnitMission@@SAHV?$FObjectHandle@VCvUnit@@@@H@Z ; CvUnitMission::CalculateMissionTimer
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv89[ebp], eax
	mov	eax, DWORD PTR tv89[ebp]
	push	eax
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?SetMissionTimer@CvUnit@@QAEXH@Z	; CvUnit::SetMissionTimer

; 1849 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN1@UpdateMiss@2
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN1@UpdateMiss@2:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?UpdateMissionTimer@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z$0:
	lea	ecx, DWORD PTR _hUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?UpdateMissionTimer@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UpdateMissionTimer@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UpdateMissionTimer@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z ENDP ; CvUnitMission::UpdateMissionTimer
PUBLIC	?NextMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@PBU2@@Z ; CvUnitMission::NextMissionQueueNode
PUBLIC	?GetMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z ; CvUnitMission::GetMissionData
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?GetMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z$0
__ehfuncinfo$?GetMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvunitmission.cpp
xdata$x	ENDS
;	COMDAT ?GetMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z
_TEXT	SEGMENT
$T223236 = -32						; size = 4
$T223235 = -28						; size = 4
_iCount$ = -24						; size = 4
_kQueue$ = -20						; size = 4
_pMissionNode$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_hUnit$ = 8						; size = 8
_iNode$ = 16						; size = 4
?GetMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z PROC ; CvUnitMission::GetMissionData, COMDAT

; 1854 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1855 : 	int iCount = 0;

	mov	DWORD PTR _iCount$[ebp], 0

; 1856 : 
; 1857 : 	const MissionQueue& kQueue = hUnit->m_missionQueue;

	mov	eax, DWORD PTR _hUnit$[ebp]
	add	eax, 2600				; 00000a28H
	mov	DWORD PTR _kQueue$[ebp], eax

; 1858 : 	const MissionQueueNode* pMissionNode = HeadMissionQueueNode(kQueue);

	mov	ecx, DWORD PTR _kQueue$[ebp]
	push	ecx
	call	?HeadMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::HeadMissionQueueNode
	add	esp, 4
	mov	DWORD PTR _pMissionNode$[ebp], eax
$LN3@GetMission:

; 1859 : 
; 1860 : 	while(pMissionNode != NULL)

	cmp	DWORD PTR _pMissionNode$[ebp], 0
	je	SHORT $LN2@GetMission

; 1861 : 	{
; 1862 : 		if(iNode == iCount)

	mov	edx, DWORD PTR _iNode$[ebp]
	cmp	edx, DWORD PTR _iCount$[ebp]
	jne	SHORT $LN1@GetMission

; 1863 : 		{
; 1864 : 			return pMissionNode;

	mov	eax, DWORD PTR _pMissionNode$[ebp]
	mov	DWORD PTR $T223235[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN10@GetMission
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN10@GetMission:
	mov	eax, DWORD PTR $T223235[ebp]
	jmp	SHORT $LN4@GetMission
$LN1@GetMission:

; 1865 : 		}
; 1866 : 
; 1867 : 		iCount++;

	mov	ecx, DWORD PTR _iCount$[ebp]
	add	ecx, 1
	mov	DWORD PTR _iCount$[ebp], ecx

; 1868 : 
; 1869 : 		pMissionNode = NextMissionQueueNode(kQueue, pMissionNode);

	mov	edx, DWORD PTR _pMissionNode$[ebp]
	push	edx
	mov	eax, DWORD PTR _kQueue$[ebp]
	push	eax
	call	?NextMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@PBU2@@Z ; CvUnitMission::NextMissionQueueNode
	add	esp, 8
	mov	DWORD PTR _pMissionNode$[ebp], eax

; 1870 : 	}

	jmp	SHORT $LN3@GetMission
$LN2@GetMission:

; 1871 : 
; 1872 : 	return NULL;

	mov	DWORD PTR $T223236[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN15@GetMission
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN15@GetMission:
	mov	eax, DWORD PTR $T223236[ebp]
$LN4@GetMission:

; 1873 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z$0:
	lea	ecx, DWORD PTR _hUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?GetMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z ENDP ; CvUnitMission::GetMissionData
PUBLIC	?ActivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@@Z ; CvUnitMission::ActivateHeadMission
PUBLIC	?GetLengthMissionQueue@CvUnitMission@@CAHABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::GetLengthMissionQueue
PUBLIC	?push_back@?$FStaticVector@UMissionData@@$0M@$00$0BCJ@$0A@@@QAEIABUMissionData@@@Z ; FStaticVector<MissionData,12,1,297,0>::push_back
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?InsertAtEndMissionQueue@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@UMissionData@@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InsertAtEndMissionQueue@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@UMissionData@@_N@Z$0
__ehfuncinfo$?InsertAtEndMissionQueue@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@UMissionData@@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?InsertAtEndMissionQueue@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@UMissionData@@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvunitmission.cpp
xdata$x	ENDS
;	COMDAT ?InsertAtEndMissionQueue@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@UMissionData@@_N@Z
_TEXT	SEGMENT
tv167 = -68						; size = 4
tv155 = -64						; size = 4
tv143 = -60						; size = 4
tv174 = -56						; size = 4
$T223318 = -52						; size = 4
$T223314 = -48						; size = 4
$T223310 = -44						; size = 4
$T223306 = -40						; size = 4
$T223302 = -36						; size = 4
$T223298 = -32						; size = 4
$T223289 = -28						; size = 4
$T223285 = -24						; size = 4
$T223267 = -20						; size = 4
_kQueue$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_hUnit$ = 8						; size = 8
_mission$ = 16						; size = 20
_bStart$ = 36						; size = 1
?InsertAtEndMissionQueue@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@UMissionData@@_N@Z PROC ; CvUnitMission::InsertAtEndMissionQueue, COMDAT

; 1878 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InsertAtEndMissionQueue@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@UMissionData@@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1879 : 	CvAssert(hUnit->getOwner() != NO_PLAYER);
; 1880 : 
; 1881 : 	MissionQueue& kQueue = hUnit->m_missionQueue;

	mov	eax, DWORD PTR _hUnit$[ebp]
	add	eax, 2600				; 00000a28H
	mov	DWORD PTR _kQueue$[ebp], eax

; 1882 : 	kQueue.insertAtEnd(&mission);

	lea	ecx, DWORD PTR _mission$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kQueue$[ebp]
	call	?push_back@?$FStaticVector@UMissionData@@$0M@$00$0BCJ@$0A@@@QAEIABUMissionData@@@Z ; FStaticVector<MissionData,12,1,297,0>::push_back

; 1883 : 
; 1884 : 	CvAssert(kQueue.getLength() < 10);
; 1885 : 
; 1886 : 	if((GetLengthMissionQueue(kQueue) == 1) && bStart)

	mov	edx, DWORD PTR _kQueue$[ebp]
	push	edx
	call	?GetLengthMissionQueue@CvUnitMission@@CAHABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::GetLengthMissionQueue
	add	esp, 4
	cmp	eax, 1
	jne	SHORT $LN2@InsertAtEn
	movzx	eax, BYTE PTR _bStart$[ebp]
	test	eax, eax
	je	SHORT $LN2@InsertAtEn

; 1887 : 	{
; 1888 : 		ActivateHeadMission(hUnit);

	sub	esp, 8
	mov	ecx, esp
	mov	DWORD PTR $T223267[ebp], esp
	mov	DWORD PTR $T223285[ebp], ecx
	mov	edx, DWORD PTR $T223285[ebp]
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T223285[ebp]
	mov	dl, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [ecx+4], dl
	mov	eax, DWORD PTR $T223285[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN12@InsertAtEn
	mov	ecx, DWORD PTR $T223285[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN12@InsertAtEn:
	mov	edx, DWORD PTR $T223285[ebp]
	mov	DWORD PTR tv174[ebp], edx
	call	?ActivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@@Z ; CvUnitMission::ActivateHeadMission
	add	esp, 8
$LN2@InsertAtEn:

; 1889 : 	}
; 1890 : 
; 1891 : 	if((hUnit->getOwner() == GC.getGame().getActivePlayer()) && hUnit->IsSelected())

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223289[ebp], eax
	mov	ecx, DWORD PTR $T223289[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR $T223298[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T223302[ebp], eax
	mov	ecx, DWORD PTR $T223302[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR $T223298[ebp], eax
	jne	SHORT $LN1@InsertAtEn
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223306[ebp], ecx
	mov	ecx, DWORD PTR $T223306[ebp]
	call	?IsSelected@CvUnit@@QBE_NXZ		; CvUnit::IsSelected
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@InsertAtEn

; 1892 : 	{
; 1893 : 		
; 1894 : 		GC.GetEngineUserInterface()->setDirty(Waypoints_DIRTY_BIT, true);

	mov	eax, DWORD PTR $T223310[ebp]
	mov	DWORD PTR tv143[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv143[ebp], ecx
	push	1
	push	2
	mov	edx, DWORD PTR tv143[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv143[ebp]
	mov	edx, DWORD PTR [eax+260]
	call	edx

; 1895 : 		GC.GetEngineUserInterface()->setDirty(SelectionButtons_DIRTY_BIT, true);

	mov	eax, DWORD PTR $T223314[ebp]
	mov	DWORD PTR tv155[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv155[ebp], ecx
	push	1
	push	6
	mov	edx, DWORD PTR tv155[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv155[ebp]
	mov	edx, DWORD PTR [eax+260]
	call	edx

; 1896 : 		GC.GetEngineUserInterface()->setDirty(UnitInfo_DIRTY_BIT, true);

	mov	eax, DWORD PTR $T223318[ebp]
	mov	DWORD PTR tv167[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv167[ebp], ecx
	push	1
	push	19					; 00000013H
	mov	edx, DWORD PTR tv167[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv167[ebp]
	mov	edx, DWORD PTR [eax+260]
	call	edx
$LN1@InsertAtEn:

; 1897 : 	}
; 1898 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN3@InsertAtEn
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN3@InsertAtEn:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InsertAtEndMissionQueue@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@UMissionData@@_N@Z$0:
	lea	ecx, DWORD PTR _hUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?InsertAtEndMissionQueue@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@UMissionData@@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InsertAtEndMissionQueue@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@UMissionData@@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?InsertAtEndMissionQueue@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@UMissionData@@_N@Z ENDP ; CvUnitMission::InsertAtEndMissionQueue
PUBLIC	?DeactivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@H@Z ; CvUnitMission::DeactivateHeadMission
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?DeleteMissionQueueNode@CvUnitMission@@CAPAUMissionData@@V?$FObjectHandle@VCvUnit@@@@PAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DeleteMissionQueueNode@CvUnitMission@@CAPAUMissionData@@V?$FObjectHandle@VCvUnit@@@@PAU2@@Z$0
__ehfuncinfo$?DeleteMissionQueueNode@CvUnitMission@@CAPAUMissionData@@V?$FObjectHandle@VCvUnit@@@@PAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DeleteMissionQueueNode@CvUnitMission@@CAPAUMissionData@@V?$FObjectHandle@VCvUnit@@@@PAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvunitmission.cpp
xdata$x	ENDS
;	COMDAT ?DeleteMissionQueueNode@CvUnitMission@@CAPAUMissionData@@V?$FObjectHandle@VCvUnit@@@@PAU2@@Z
_TEXT	SEGMENT
tv188 = -116						; size = 4
tv176 = -112						; size = 4
tv164 = -108						; size = 4
tv198 = -104						; size = 4
tv196 = -100						; size = 4
$T223457 = -96						; size = 4
$T223453 = -92						; size = 4
$T223449 = -88						; size = 4
$T223445 = -84						; size = 4
$T223441 = -80						; size = 4
$T223437 = -76						; size = 4
$T223428 = -72						; size = 4
$T223424 = -68						; size = 4
$T223382 = -64						; size = 4
$T223378 = -60						; size = 4
$T223373 = -56						; size = 4
$T223366 = -52						; size = 4
$T223362 = -48						; size = 4
_uIdx$223406 = -44					; size = 4
_uDeletePos$223405 = -40				; size = 4
$T223354 = -36						; size = 4
$T223338 = -32						; size = 4
$T223337 = -28						; size = 4
$T223336 = -24						; size = 4
_pNextMissionNode$ = -20				; size = 4
_kQueue$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_hUnit$ = 8						; size = 8
_pNode$ = 16						; size = 4
?DeleteMissionQueueNode@CvUnitMission@@CAPAUMissionData@@V?$FObjectHandle@VCvUnit@@@@PAU2@@Z PROC ; CvUnitMission::DeleteMissionQueueNode, COMDAT

; 1903 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DeleteMissionQueueNode@CvUnitMission@@CAPAUMissionData@@V?$FObjectHandle@VCvUnit@@@@PAU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 104				; 00000068H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1904 : 	MissionQueueNode* pNextMissionNode;
; 1905 : 
; 1906 : 	CvAssertMsg(pNode != NULL, "Node is not assigned a valid value");
; 1907 : 	CvAssert(hUnit->getOwner() != NO_PLAYER);
; 1908 : 
; 1909 : 	MissionQueue& kQueue = hUnit->m_missionQueue;

	mov	eax, DWORD PTR _hUnit$[ebp]
	add	eax, 2600				; 00000a28H
	mov	DWORD PTR _kQueue$[ebp], eax

; 1910 : 
; 1911 : 	if(pNode == HeadMissionQueueNode(kQueue))

	mov	ecx, DWORD PTR _kQueue$[ebp]
	push	ecx
	call	?HeadMissionQueueNode@CvUnitMission@@CAPAUMissionData@@AAV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::HeadMissionQueueNode
	add	esp, 4
	cmp	DWORD PTR _pNode$[ebp], eax
	jne	SHORT $LN24@DeleteMiss

; 1912 : 	{
; 1913 : 		DeactivateHeadMission(hUnit, /*iUnitCycleTimer*/ 1);

	push	1
	sub	esp, 8
	mov	edx, esp
	mov	DWORD PTR $T223336[ebp], esp
	mov	DWORD PTR $T223354[ebp], edx
	mov	eax, DWORD PTR $T223354[ebp]
	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T223354[ebp]
	mov	al, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [edx+4], al
	mov	ecx, DWORD PTR $T223354[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN13@DeleteMiss
	mov	edx, DWORD PTR $T223354[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN13@DeleteMiss:
	mov	eax, DWORD PTR $T223354[ebp]
	mov	DWORD PTR tv196[ebp], eax
	call	?DeactivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@H@Z ; CvUnitMission::DeactivateHeadMission
	add	esp, 12					; 0000000cH

; 1914 : 	}
; 1915 : 
; 1916 : 	pNextMissionNode = kQueue.deleteNode(pNode);

$LN24@DeleteMiss:
	xor	ecx, ecx
	imul	ecx, 20					; 00000014H
	mov	edx, DWORD PTR _kQueue$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, ecx
	mov	ecx, DWORD PTR _pNode$[ebp]
	sub	ecx, eax
	mov	eax, ecx
	cdq
	mov	ecx, 20					; 00000014H
	idiv	ecx
	mov	DWORD PTR _uDeletePos$223405[ebp], eax
	mov	edx, DWORD PTR _uDeletePos$223405[ebp]
	mov	DWORD PTR _uIdx$223406[ebp], edx
	jmp	SHORT $LN21@DeleteMiss
$LN20@DeleteMiss:
	mov	eax, DWORD PTR _uIdx$223406[ebp]
	add	eax, 1
	mov	DWORD PTR _uIdx$223406[ebp], eax
$LN21@DeleteMiss:
	mov	ecx, DWORD PTR _kQueue$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T223362[ebp], edx
	mov	eax, DWORD PTR _uIdx$223406[ebp]
	add	eax, 1
	cmp	eax, DWORD PTR $T223362[ebp]
	jae	SHORT $LN19@DeleteMiss
	mov	ecx, DWORD PTR _uIdx$223406[ebp]
	add	ecx, 1
	imul	ecx, 20					; 00000014H
	mov	edx, DWORD PTR _kQueue$[ebp]
	add	ecx, DWORD PTR [edx]
	mov	DWORD PTR $T223366[ebp], ecx
	mov	eax, DWORD PTR $T223366[ebp]
	mov	ecx, DWORD PTR _uIdx$223406[ebp]
	imul	ecx, 20					; 00000014H
	mov	edx, DWORD PTR _kQueue$[ebp]
	mov	edx, DWORD PTR [edx]
	add	edx, ecx
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+12], ecx
	mov	eax, DWORD PTR [eax+16]
	mov	DWORD PTR [edx+16], eax
	jmp	SHORT $LN20@DeleteMiss
$LN19@DeleteMiss:
	mov	ecx, DWORD PTR _kQueue$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T223373[ebp], edx
	mov	eax, DWORD PTR $T223373[ebp]
	sub	eax, 1
	mov	DWORD PTR $T223378[ebp], eax
	mov	ecx, DWORD PTR _kQueue$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR $T223378[ebp]
	jae	SHORT $LN34@DeleteMiss
	mov	eax, DWORD PTR $T223378[ebp]
	push	eax
	mov	ecx, DWORD PTR _kQueue$[ebp]
	call	?GrowSize@?$FStaticVector@UMissionData@@$0M@$00$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<MissionData,12,1,297,0>::GrowSize
$LN34@DeleteMiss:
	mov	ecx, DWORD PTR _kQueue$[ebp]
	mov	edx, DWORD PTR $T223378[ebp]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR _kQueue$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T223382[ebp], ecx
	mov	edx, DWORD PTR _uDeletePos$223405[ebp]
	cmp	edx, DWORD PTR $T223382[ebp]
	jae	SHORT $LN18@DeleteMiss
	mov	eax, DWORD PTR _uDeletePos$223405[ebp]
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR _kQueue$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	DWORD PTR _pNextMissionNode$[ebp], eax
	jmp	SHORT $LN22@DeleteMiss
	jmp	SHORT $LN22@DeleteMiss
$LN18@DeleteMiss:
	mov	DWORD PTR _pNextMissionNode$[ebp], 0
$LN22@DeleteMiss:

; 1917 : 	if(pNextMissionNode == NULL)

	cmp	DWORD PTR _pNextMissionNode$[ebp], 0
	jne	SHORT $LN3@DeleteMiss

; 1918 : 		hUnit->ClearPathCache();

	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?ClearPathCache@CvUnit@@IAEXXZ		; CvUnit::ClearPathCache
$LN3@DeleteMiss:

; 1919 : 
; 1920 : 	if(pNextMissionNode == HeadMissionQueueNode(kQueue))

	mov	edx, DWORD PTR _kQueue$[ebp]
	push	edx
	call	?HeadMissionQueueNode@CvUnitMission@@CAPAUMissionData@@AAV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::HeadMissionQueueNode
	add	esp, 4
	cmp	DWORD PTR _pNextMissionNode$[ebp], eax
	jne	SHORT $LN2@DeleteMiss

; 1921 : 	{
; 1922 : 		ActivateHeadMission(hUnit);

	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR $T223337[ebp], esp
	mov	DWORD PTR $T223424[ebp], eax
	mov	ecx, DWORD PTR $T223424[ebp]
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T223424[ebp]
	mov	cl, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [eax+4], cl
	mov	edx, DWORD PTR $T223424[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN44@DeleteMiss
	mov	eax, DWORD PTR $T223424[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN44@DeleteMiss:
	mov	ecx, DWORD PTR $T223424[ebp]
	mov	DWORD PTR tv198[ebp], ecx
	call	?ActivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@@Z ; CvUnitMission::ActivateHeadMission
	add	esp, 8
$LN2@DeleteMiss:

; 1923 : 	}
; 1924 : 
; 1925 : 	if((hUnit->getOwner() == GC.getGame().getActivePlayer()) && hUnit->IsSelected())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223428[ebp], edx
	mov	eax, DWORD PTR $T223428[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR $T223437[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T223441[ebp], edx
	mov	ecx, DWORD PTR $T223441[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR $T223437[ebp], eax
	jne	SHORT $LN1@DeleteMiss
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223445[ebp], eax
	mov	ecx, DWORD PTR $T223445[ebp]
	call	?IsSelected@CvUnit@@QBE_NXZ		; CvUnit::IsSelected
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@DeleteMiss

; 1926 : 	{
; 1927 : 		GC.GetEngineUserInterface()->setDirty(Waypoints_DIRTY_BIT, true);

	mov	edx, DWORD PTR $T223449[ebp]
	mov	DWORD PTR tv164[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv164[ebp], eax
	push	1
	push	2
	mov	ecx, DWORD PTR tv164[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv164[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 1928 : 		GC.GetEngineUserInterface()->setDirty(SelectionButtons_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T223453[ebp]
	mov	DWORD PTR tv176[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv176[ebp], edx
	push	1
	push	6
	mov	eax, DWORD PTR tv176[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv176[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 1929 : 		GC.GetEngineUserInterface()->setDirty(UnitInfo_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T223457[ebp]
	mov	DWORD PTR tv188[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv188[ebp], edx
	push	1
	push	19					; 00000013H
	mov	eax, DWORD PTR tv188[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv188[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax
$LN1@DeleteMiss:

; 1930 : 	}
; 1931 : 
; 1932 : 	return pNextMissionNode;

	mov	ecx, DWORD PTR _pNextMissionNode$[ebp]
	mov	DWORD PTR $T223338[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN65@DeleteMiss
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN65@DeleteMiss:
	mov	eax, DWORD PTR $T223338[ebp]

; 1933 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DeleteMissionQueueNode@CvUnitMission@@CAPAUMissionData@@V?$FObjectHandle@VCvUnit@@@@PAU2@@Z$0:
	lea	ecx, DWORD PTR _hUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?DeleteMissionQueueNode@CvUnitMission@@CAPAUMissionData@@V?$FObjectHandle@VCvUnit@@@@PAU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-108]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DeleteMissionQueueNode@CvUnitMission@@CAPAUMissionData@@V?$FObjectHandle@VCvUnit@@@@PAU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DeleteMissionQueueNode@CvUnitMission@@CAPAUMissionData@@V?$FObjectHandle@VCvUnit@@@@PAU2@@Z ENDP ; CvUnitMission::DeleteMissionQueueNode
PUBLIC	?ClearMissionQueue@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z ; CvUnitMission::ClearMissionQueue
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?ClearMissionQueue@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ClearMissionQueue@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z$0
__ehfuncinfo$?ClearMissionQueue@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ClearMissionQueue@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvunitmission.cpp
xdata$x	ENDS
;	COMDAT ?ClearMissionQueue@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z
_TEXT	SEGMENT
tv181 = -84						; size = 4
tv169 = -80						; size = 4
tv157 = -76						; size = 4
tv191 = -72						; size = 4
tv189 = -68						; size = 4
$T223548 = -64						; size = 4
$T223544 = -60						; size = 4
$T223540 = -56						; size = 4
$T223536 = -52						; size = 4
$T223532 = -48						; size = 4
$T223528 = -44						; size = 4
$T223519 = -40						; size = 4
$T223512 = -36						; size = 4
$T223498 = -32						; size = 4
$T223493 = -28						; size = 4
$T223489 = -24						; size = 4
$T223476 = -20						; size = 4
$T223475 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_hUnit$ = 8						; size = 8
_iUnitCycleTimerOverride$ = 16				; size = 4
?ClearMissionQueue@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z PROC ; CvUnitMission::ClearMissionQueue, COMDAT

; 1938 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ClearMissionQueue@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1939 : 	//VALIDATE_OBJECT
; 1940 : 	CvAssert(hUnit->getOwner() != NO_PLAYER);
; 1941 : 
; 1942 : 	DeactivateHeadMission(hUnit, iUnitCycleTimerOverride);

	mov	eax, DWORD PTR _iUnitCycleTimerOverride$[ebp]
	push	eax
	sub	esp, 8
	mov	ecx, esp
	mov	DWORD PTR $T223475[ebp], esp
	mov	DWORD PTR $T223489[ebp], ecx
	mov	edx, DWORD PTR $T223489[ebp]
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T223489[ebp]
	mov	dl, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [ecx+4], dl
	mov	eax, DWORD PTR $T223489[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN10@ClearMissi
	mov	ecx, DWORD PTR $T223489[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN10@ClearMissi:
	mov	edx, DWORD PTR $T223489[ebp]
	mov	DWORD PTR tv189[ebp], edx
	call	?DeactivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@H@Z ; CvUnitMission::DeactivateHeadMission
	add	esp, 12					; 0000000cH
$LN3@ClearMissi:

; 1943 : 
; 1944 : 	while(hUnit->m_missionQueue.getLength() > 0)

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223493[ebp], eax
	mov	ecx, DWORD PTR $T223493[ebp]
	mov	edx, DWORD PTR [ecx+2604]
	mov	DWORD PTR $T223498[ebp], edx
	cmp	DWORD PTR $T223498[ebp], 0
	jle	SHORT $LN25@ClearMissi

; 1945 : 	{
; 1946 : 		PopMission(hUnit);

	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR $T223476[ebp], esp
	mov	DWORD PTR $T223512[ebp], eax
	mov	ecx, DWORD PTR $T223512[ebp]
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T223512[ebp]
	mov	cl, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [eax+4], cl
	mov	edx, DWORD PTR $T223512[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN21@ClearMissi
	mov	eax, DWORD PTR $T223512[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN21@ClearMissi:
	mov	ecx, DWORD PTR $T223512[ebp]
	mov	DWORD PTR tv191[ebp], ecx
	call	?PopMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z ; CvUnitMission::PopMission
	add	esp, 8

; 1947 : 	}

	jmp	SHORT $LN3@ClearMissi

; 1948 : 
; 1949 : 	hUnit->ClearPathCache();

$LN25@ClearMissi:
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?ClearPathCache@CvUnit@@IAEXXZ		; CvUnit::ClearPathCache

; 1950 : //	hUnit->m_missionQueue.clear();
; 1951 : 
; 1952 : 	if((hUnit->getOwner() == GC.getGame().getActivePlayer()) && hUnit->IsSelected())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223519[ebp], edx
	mov	eax, DWORD PTR $T223519[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR $T223528[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T223532[ebp], edx
	mov	ecx, DWORD PTR $T223532[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR $T223528[ebp], eax
	jne	SHORT $LN1@ClearMissi
	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223536[ebp], eax
	mov	ecx, DWORD PTR $T223536[ebp]
	call	?IsSelected@CvUnit@@QBE_NXZ		; CvUnit::IsSelected
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@ClearMissi

; 1953 : 	{
; 1954 : 		GC.GetEngineUserInterface()->setDirty(Waypoints_DIRTY_BIT, true);

	mov	edx, DWORD PTR $T223540[ebp]
	mov	DWORD PTR tv157[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv157[ebp], eax
	push	1
	push	2
	mov	ecx, DWORD PTR tv157[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv157[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 1955 : 		GC.GetEngineUserInterface()->setDirty(SelectionButtons_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T223544[ebp]
	mov	DWORD PTR tv169[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv169[ebp], edx
	push	1
	push	6
	mov	eax, DWORD PTR tv169[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv169[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 1956 : 		GC.GetEngineUserInterface()->setDirty(UnitInfo_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T223548[ebp]
	mov	DWORD PTR tv181[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv181[ebp], edx
	push	1
	push	19					; 00000013H
	mov	eax, DWORD PTR tv181[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv181[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax
$LN1@ClearMissi:

; 1957 : 	}
; 1958 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN4@ClearMissi
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN4@ClearMissi:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ClearMissionQueue@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z$0:
	lea	ecx, DWORD PTR _hUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?ClearMissionQueue@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ClearMissionQueue@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ClearMissionQueue@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@H@Z ENDP ; CvUnitMission::ClearMissionQueue
EXTRN	?GetLengthMissionQueue@CvUnit@@QBEHXZ:PROC	; CvUnit::GetLengthMissionQueue
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?ActivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ActivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@@Z$0
__ehfuncinfo$?ActivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ActivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvunitmission.cpp
xdata$x	ENDS
;	COMDAT ?ActivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
tv92 = -32						; size = 4
$T223586 = -28						; size = 4
$T223576 = -24						; size = 4
$T223572 = -20						; size = 4
$T223566 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_hUnit$ = 8						; size = 8
?ActivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@@Z PROC ; CvUnitMission::ActivateHeadMission, COMDAT

; 1963 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ActivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1964 : 	VALIDATE_OBJECT
; 1965 : 	CvAssert(hUnit->getOwner() != NO_PLAYER);
; 1966 : 	if(hUnit->GetLengthMissionQueue() != 0)

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223572[ebp], eax
	mov	ecx, DWORD PTR $T223572[ebp]
	call	?GetLengthMissionQueue@CvUnit@@QBEHXZ	; CvUnit::GetLengthMissionQueue
	test	eax, eax
	je	SHORT $LN2@ActivateHe

; 1967 : 	{
; 1968 : 		if(!hUnit->IsBusy())

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223576[ebp], ecx
	mov	ecx, DWORD PTR $T223576[ebp]
	call	?IsBusy@CvUnit@@QBE_NXZ			; CvUnit::IsBusy
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@ActivateHe

; 1969 : 		{
; 1970 : 			StartMission(hUnit);

	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR $T223566[ebp], esp
	mov	DWORD PTR $T223586[ebp], eax
	mov	ecx, DWORD PTR $T223586[ebp]
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T223586[ebp]
	mov	cl, BYTE PTR _hUnit$[ebp+4]
	mov	BYTE PTR [eax+4], cl
	mov	edx, DWORD PTR $T223586[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN12@ActivateHe
	mov	eax, DWORD PTR $T223586[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN12@ActivateHe:
	mov	ecx, DWORD PTR $T223586[ebp]
	mov	DWORD PTR tv92[ebp], ecx
	call	?StartMission@CvUnitMission@@SAXV?$FObjectHandle@VCvUnit@@@@@Z ; CvUnitMission::StartMission
	add	esp, 8
$LN2@ActivateHe:

; 1971 : 		}
; 1972 : 	}
; 1973 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN3@ActivateHe
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN3@ActivateHe:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ActivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@@Z$0:
	lea	ecx, DWORD PTR _hUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?ActivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ActivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ActivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@@Z ENDP ; CvUnitMission::ActivateHeadMission
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?DeactivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DeactivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@H@Z$0
__ehfuncinfo$?DeactivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DeactivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvunitmission.cpp
xdata$x	ENDS
;	COMDAT ?DeactivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@H@Z
_TEXT	SEGMENT
tv155 = -68						; size = 4
tv65 = -64						; size = 4
$T223670 = -60						; size = 4
$T223663 = -56						; size = 4
$T223657 = -52						; size = 4
$T223653 = -48						; size = 4
$T223644 = -44						; size = 4
$T223640 = -40						; size = 4
$T223636 = -36						; size = 4
$T223632 = -32						; size = 4
$T223623 = -28						; size = 4
$T223613 = -24						; size = 4
$T223609 = -20						; size = 4
$T223604 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_hUnit$ = 8						; size = 8
_iUnitCycleTimer$ = 16					; size = 4
?DeactivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@H@Z PROC ; CvUnitMission::DeactivateHeadMission, COMDAT

; 1978 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DeactivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1979 : 	VALIDATE_OBJECT
; 1980 : 	CvAssert(hUnit->getOwner() != NO_PLAYER);
; 1981 : 
; 1982 : 	if(hUnit->GetLengthMissionQueue() != 0)

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223609[ebp], eax
	mov	ecx, DWORD PTR $T223609[ebp]
	call	?GetLengthMissionQueue@CvUnit@@QBEHXZ	; CvUnit::GetLengthMissionQueue
	test	eax, eax
	je	$LN5@Deactivate

; 1983 : 	{
; 1984 : 		if(hUnit->GetActivityType() == ACTIVITY_MISSION)

	mov	ecx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223613[ebp], ecx
	mov	ecx, DWORD PTR $T223613[ebp]
	call	?GetActivityType@CvUnit@@QBE?AW4ActivityTypes@@XZ ; CvUnit::GetActivityType
	cmp	eax, 6
	jne	SHORT $LN15@Deactivate

; 1985 : 		{
; 1986 : 			hUnit->SetActivityType(ACTIVITY_AWAKE);

	push	0
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?SetActivityType@CvUnit@@QAEXW4ActivityTypes@@@Z ; CvUnit::SetActivityType

; 1987 : 		}
; 1988 : 
; 1989 : 		hUnit->SetMissionTimer(0);

$LN15@Deactivate:
	push	0
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?SetMissionTimer@CvUnit@@QAEXH@Z	; CvUnit::SetMissionTimer

; 1990 : 
; 1991 : 		if(hUnit->getOwner() == GC.getGame().getActivePlayer())

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223623[ebp], edx
	mov	eax, DWORD PTR $T223623[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR $T223632[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T223636[ebp], edx
	mov	ecx, DWORD PTR $T223636[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR $T223632[ebp], eax
	jne	$LN5@Deactivate

; 1992 : 		{
; 1993 : 			if(hUnit->IsSelected())

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223640[ebp], eax
	mov	ecx, DWORD PTR $T223640[ebp]
	call	?IsSelected@CvUnit@@QBE_NXZ		; CvUnit::IsSelected
	movzx	ecx, al
	test	ecx, ecx
	je	$LN5@Deactivate

; 1994 : 			{
; 1995 : 				if(GET_PLAYER(hUnit->getOwner()).isOption(PLAYEROPTION_QUICK_MOVES))

	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223644[ebp], edx
	mov	eax, DWORD PTR $T223644[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR $T223653[ebp], ecx
	mov	edx, DWORD PTR $T223653[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T223657[ebp], edx
	push	3
	mov	ecx, DWORD PTR $T223657[ebp]
	call	?isOption@CvPlayer@@QBE_NW4PlayerOptionTypes@@@Z ; CvPlayer::isOption
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@Deactivate

; 1996 : 					iUnitCycleTimer = min(1, iUnitCycleTimer);

	mov	DWORD PTR $T223604[ebp], 1
	mov	ecx, DWORD PTR _iUnitCycleTimer$[ebp]
	cmp	ecx, DWORD PTR $T223604[ebp]
	jge	SHORT $LN37@Deactivate
	lea	edx, DWORD PTR _iUnitCycleTimer$[ebp]
	mov	DWORD PTR tv65[ebp], edx
	jmp	SHORT $LN38@Deactivate
$LN37@Deactivate:
	lea	eax, DWORD PTR $T223604[ebp]
	mov	DWORD PTR tv65[ebp], eax
$LN38@Deactivate:
	mov	ecx, DWORD PTR tv65[ebp]
	mov	DWORD PTR $T223663[ebp], ecx
	mov	edx, DWORD PTR $T223663[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _iUnitCycleTimer$[ebp], eax
$LN1@Deactivate:

; 1997 : 
; 1998 : 				GC.GetEngineUserInterface()->changeCycleSelectionCounter(iUnitCycleTimer);

	mov	ecx, DWORD PTR $T223670[ebp]
	mov	DWORD PTR tv155[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv155[ebp], edx
	mov	eax, DWORD PTR _iUnitCycleTimer$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv155[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv155[ebp]
	mov	eax, DWORD PTR [edx+224]
	call	eax
$LN5@Deactivate:

; 1999 : 			}
; 2000 : 		}
; 2001 : 	}
; 2002 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN6@Deactivate
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN6@Deactivate:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DeactivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@H@Z$0:
	lea	ecx, DWORD PTR _hUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?DeactivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DeactivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DeactivateHeadMission@CvUnitMission@@CAXV?$FObjectHandle@VCvUnit@@@@H@Z ENDP ; CvUnitMission::DeactivateHeadMission
; Function compile flags: /Odtp
;	COMDAT ?NextMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@PBU2@@Z
_TEXT	SEGMENT
$T223708 = -12						; size = 4
$T223696 = -8						; size = 4
_iIndex$223710 = -4					; size = 4
_kQueue$ = 8						; size = 4
_pNode$ = 12						; size = 4
?NextMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@PBU2@@Z PROC ; CvUnitMission::NextMissionQueueNode, COMDAT

; 2007 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2008 : 	return kQueue.next(pNode);

	mov	eax, DWORD PTR _pNode$[ebp]
	add	eax, 20					; 00000014H
	xor	ecx, ecx
	imul	ecx, 20					; 00000014H
	mov	edx, DWORD PTR _kQueue$[ebp]
	mov	edx, DWORD PTR [edx]
	add	edx, ecx
	sub	eax, edx
	cdq
	mov	ecx, 20					; 00000014H
	idiv	ecx
	mov	DWORD PTR _iIndex$223710[ebp], eax
	mov	edx, DWORD PTR _kQueue$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T223696[ebp], eax
	mov	ecx, DWORD PTR _iIndex$223710[ebp]
	cmp	ecx, DWORD PTR $T223696[ebp]
	jae	SHORT $LN8@NextMissio
	mov	edx, DWORD PTR _iIndex$223710[ebp]
	imul	edx, 20					; 00000014H
	mov	eax, DWORD PTR _kQueue$[ebp]
	add	edx, DWORD PTR [eax]
	mov	DWORD PTR $T223708[ebp], edx
	jmp	SHORT $LN3@NextMissio
	jmp	SHORT $LN3@NextMissio
$LN8@NextMissio:
	mov	DWORD PTR $T223708[ebp], 0
$LN3@NextMissio:
	mov	eax, DWORD PTR $T223708[ebp]

; 2009 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?NextMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@PBU2@@Z ENDP ; CvUnitMission::NextMissionQueueNode
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?PrevMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@PBU2@@Z
_TEXT	SEGMENT
$T223744 = -12						; size = 4
$T223732 = -8						; size = 4
_iIndex$223746 = -4					; size = 4
_kQueue$ = 8						; size = 4
_pNode$ = 12						; size = 4
?PrevMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@PBU2@@Z PROC ; CvUnitMission::PrevMissionQueueNode, COMDAT

; 2014 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2015 : 	return kQueue.prev(pNode);

	mov	eax, DWORD PTR _pNode$[ebp]
	sub	eax, 20					; 00000014H
	xor	ecx, ecx
	imul	ecx, 20					; 00000014H
	mov	edx, DWORD PTR _kQueue$[ebp]
	mov	edx, DWORD PTR [edx]
	add	edx, ecx
	sub	eax, edx
	cdq
	mov	ecx, 20					; 00000014H
	idiv	ecx
	mov	DWORD PTR _iIndex$223746[ebp], eax
	mov	edx, DWORD PTR _kQueue$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T223732[ebp], eax
	mov	ecx, DWORD PTR _iIndex$223746[ebp]
	cmp	ecx, DWORD PTR $T223732[ebp]
	jae	SHORT $LN8@PrevMissio
	mov	edx, DWORD PTR _iIndex$223746[ebp]
	imul	edx, 20					; 00000014H
	mov	eax, DWORD PTR _kQueue$[ebp]
	add	edx, DWORD PTR [eax]
	mov	DWORD PTR $T223744[ebp], edx
	jmp	SHORT $LN3@PrevMissio
	jmp	SHORT $LN3@PrevMissio
$LN8@PrevMissio:
	mov	DWORD PTR $T223744[ebp], 0
$LN3@PrevMissio:
	mov	eax, DWORD PTR $T223744[ebp]

; 2016 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PrevMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@PBU2@@Z ENDP ; CvUnitMission::PrevMissionQueueNode
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?HeadMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z
_TEXT	SEGMENT
$T223776 = -8						; size = 4
_uSize$223768 = -4					; size = 4
_kQueue$ = 8						; size = 4
?HeadMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z PROC ; CvUnitMission::HeadMissionQueueNode, COMDAT

; 2021 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2022 : 	return kQueue.head();

	mov	eax, DWORD PTR _kQueue$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _uSize$223768[ebp], ecx
	cmp	DWORD PTR _uSize$223768[ebp], 0
	jbe	SHORT $LN4@HeadMissio
	xor	edx, edx
	imul	edx, 20					; 00000014H
	mov	eax, DWORD PTR _kQueue$[ebp]
	add	edx, DWORD PTR [eax]
	mov	DWORD PTR $T223776[ebp], edx
	jmp	SHORT $LN5@HeadMissio
	jmp	SHORT $LN5@HeadMissio
$LN4@HeadMissio:
	mov	DWORD PTR $T223776[ebp], 0
$LN5@HeadMissio:
	mov	eax, DWORD PTR $T223776[ebp]

; 2023 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?HeadMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ENDP ; CvUnitMission::HeadMissionQueueNode
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?HeadMissionQueueNode@CvUnitMission@@CAPAUMissionData@@AAV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z
_TEXT	SEGMENT
$T223795 = -8						; size = 4
_uSize$223787 = -4					; size = 4
_kQueue$ = 8						; size = 4
?HeadMissionQueueNode@CvUnitMission@@CAPAUMissionData@@AAV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z PROC ; CvUnitMission::HeadMissionQueueNode, COMDAT

; 2028 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2029 : 	return kQueue.head();

	mov	eax, DWORD PTR _kQueue$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _uSize$223787[ebp], ecx
	cmp	DWORD PTR _uSize$223787[ebp], 0
	jbe	SHORT $LN4@HeadMissio@2
	xor	edx, edx
	imul	edx, 20					; 00000014H
	mov	eax, DWORD PTR _kQueue$[ebp]
	add	edx, DWORD PTR [eax]
	mov	DWORD PTR $T223795[ebp], edx
	jmp	SHORT $LN5@HeadMissio@2
	jmp	SHORT $LN5@HeadMissio@2
$LN4@HeadMissio@2:
	mov	DWORD PTR $T223795[ebp], 0
$LN5@HeadMissio@2:
	mov	eax, DWORD PTR $T223795[ebp]

; 2030 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?HeadMissionQueueNode@CvUnitMission@@CAPAUMissionData@@AAV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ENDP ; CvUnitMission::HeadMissionQueueNode
_TEXT	ENDS
PUBLIC	?TailMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::TailMissionQueueNode
; Function compile flags: /Odtp
;	COMDAT ?TailMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z
_TEXT	SEGMENT
$T223814 = -8						; size = 4
_uSize$223806 = -4					; size = 4
_kQueue$ = 8						; size = 4
?TailMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z PROC ; CvUnitMission::TailMissionQueueNode, COMDAT

; 2035 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2036 : 	return ((MissionQueue&)kQueue).tail();

	mov	eax, DWORD PTR _kQueue$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _uSize$223806[ebp], ecx
	cmp	DWORD PTR _uSize$223806[ebp], 0
	jbe	SHORT $LN4@TailMissio
	mov	edx, DWORD PTR _uSize$223806[ebp]
	sub	edx, 1
	imul	edx, 20					; 00000014H
	mov	eax, DWORD PTR _kQueue$[ebp]
	add	edx, DWORD PTR [eax]
	mov	DWORD PTR $T223814[ebp], edx
	jmp	SHORT $LN5@TailMissio
	jmp	SHORT $LN5@TailMissio
$LN4@TailMissio:
	mov	DWORD PTR $T223814[ebp], 0
$LN5@TailMissio:
	mov	eax, DWORD PTR $T223814[ebp]

; 2037 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?TailMissionQueueNode@CvUnitMission@@CAPBUMissionData@@ABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ENDP ; CvUnitMission::TailMissionQueueNode
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?TailMissionQueueNode@CvUnitMission@@CAPAUMissionData@@AAV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z
_TEXT	SEGMENT
$T223833 = -8						; size = 4
_uSize$223825 = -4					; size = 4
_kQueue$ = 8						; size = 4
?TailMissionQueueNode@CvUnitMission@@CAPAUMissionData@@AAV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z PROC ; CvUnitMission::TailMissionQueueNode, COMDAT

; 2042 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2043 : 	return kQueue.tail();

	mov	eax, DWORD PTR _kQueue$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _uSize$223825[ebp], ecx
	cmp	DWORD PTR _uSize$223825[ebp], 0
	jbe	SHORT $LN4@TailMissio@2
	mov	edx, DWORD PTR _uSize$223825[ebp]
	sub	edx, 1
	imul	edx, 20					; 00000014H
	mov	eax, DWORD PTR _kQueue$[ebp]
	add	edx, DWORD PTR [eax]
	mov	DWORD PTR $T223833[ebp], edx
	jmp	SHORT $LN5@TailMissio@2
	jmp	SHORT $LN5@TailMissio@2
$LN4@TailMissio@2:
	mov	DWORD PTR $T223833[ebp], 0
$LN5@TailMissio@2:
	mov	eax, DWORD PTR $T223833[ebp]

; 2044 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?TailMissionQueueNode@CvUnitMission@@CAPAUMissionData@@AAV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ENDP ; CvUnitMission::TailMissionQueueNode
_TEXT	ENDS
PUBLIC	?GetMissionFromQueue@CvUnitMission@@CAPAUMissionData@@AAV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@H@Z ; CvUnitMission::GetMissionFromQueue
; Function compile flags: /Odtp
;	COMDAT ?GetMissionFromQueue@CvUnitMission@@CAPAUMissionData@@AAV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@H@Z
_TEXT	SEGMENT
$T223852 = -8						; size = 4
$T223840 = -4						; size = 4
_kQueue$ = 8						; size = 4
_iIndex$ = 12						; size = 4
?GetMissionFromQueue@CvUnitMission@@CAPAUMissionData@@AAV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@H@Z PROC ; CvUnitMission::GetMissionFromQueue, COMDAT

; 2049 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2050 : 	return kQueue.getAt(iIndex);

	mov	eax, DWORD PTR _kQueue$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T223840[ebp], ecx
	mov	edx, DWORD PTR _iIndex$[ebp]
	cmp	edx, DWORD PTR $T223840[ebp]
	jae	SHORT $LN4@GetMission@2
	mov	eax, DWORD PTR _iIndex$[ebp]
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR _kQueue$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	DWORD PTR $T223852[ebp], eax
	jmp	SHORT $LN5@GetMission@2
	jmp	SHORT $LN5@GetMission@2
$LN4@GetMission@2:
	mov	DWORD PTR $T223852[ebp], 0
$LN5@GetMission@2:
	mov	eax, DWORD PTR $T223852[ebp]

; 2051 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetMissionFromQueue@CvUnitMission@@CAPAUMissionData@@AAV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@H@Z ENDP ; CvUnitMission::GetMissionFromQueue
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetLengthMissionQueue@CvUnitMission@@CAHABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z
_TEXT	SEGMENT
$T223859 = -4						; size = 4
_kQueue$ = 8						; size = 4
?GetLengthMissionQueue@CvUnitMission@@CAHABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z PROC ; CvUnitMission::GetLengthMissionQueue, COMDAT

; 2056 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2057 : 	return kQueue.getLength();

	mov	eax, DWORD PTR _kQueue$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T223859[ebp], ecx
	mov	eax, DWORD PTR $T223859[ebp]

; 2058 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetLengthMissionQueue@CvUnitMission@@CAHABV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ENDP ; CvUnitMission::GetLengthMissionQueue
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?GetHeadMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetHeadMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@@Z$0
__ehfuncinfo$?GetHeadMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetHeadMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvunitmission.cpp
xdata$x	ENDS
;	COMDAT ?GetHeadMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
$T223902 = -40						; size = 4
_uSize$223894 = -36					; size = 4
$T223885 = -32						; size = 4
$T223877 = -28						; size = 4
$T223872 = -24						; size = 4
$T223867 = -20						; size = 4
$T223866 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_hUnit$ = 8						; size = 8
?GetHeadMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@@Z PROC ; CvUnitMission::GetHeadMissionData, COMDAT

; 2062 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetHeadMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2063 : 	CvAssert(hUnit.pointer() != NULL);
; 2064 : 	if(hUnit->m_missionQueue.getLength())

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223872[ebp], eax
	mov	ecx, DWORD PTR $T223872[ebp]
	mov	edx, DWORD PTR [ecx+2604]
	mov	DWORD PTR $T223877[ebp], edx
	cmp	DWORD PTR $T223877[ebp], 0
	je	SHORT $LN1@GetHeadMis

; 2065 : 		return (hUnit->m_missionQueue.head());

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223885[ebp], eax
	mov	ecx, DWORD PTR $T223885[ebp]
	add	ecx, 2600				; 00000a28H
	mov	DWORD PTR $T223902[ebp], ecx
	mov	edx, DWORD PTR $T223902[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _uSize$223894[ebp], eax
	cmp	DWORD PTR _uSize$223894[ebp], 0
	jbe	SHORT $LN14@GetHeadMis
	xor	ecx, ecx
	imul	ecx, 20					; 00000014H
	mov	edx, DWORD PTR $T223902[ebp]
	add	ecx, DWORD PTR [edx]
	mov	DWORD PTR $T223866[ebp], ecx
	jmp	SHORT $LN15@GetHeadMis
	jmp	SHORT $LN15@GetHeadMis
$LN14@GetHeadMis:
	mov	DWORD PTR $T223866[ebp], 0
$LN15@GetHeadMis:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN22@GetHeadMis
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN22@GetHeadMis:
	mov	eax, DWORD PTR $T223866[ebp]
	jmp	SHORT $LN2@GetHeadMis
$LN1@GetHeadMis:

; 2066 : 	return NULL;

	mov	DWORD PTR $T223867[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN27@GetHeadMis
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN27@GetHeadMis:
	mov	eax, DWORD PTR $T223867[ebp]
$LN2@GetHeadMis:

; 2067 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetHeadMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@@Z$0:
	lea	ecx, DWORD PTR _hUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?GetHeadMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetHeadMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetHeadMissionData@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@@Z ENDP ; CvUnitMission::GetHeadMissionData
PUBLIC	?IsHeadMission@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z ; CvUnitMission::IsHeadMission
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?IsHeadMission@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?IsHeadMission@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z$0
__ehfuncinfo$?IsHeadMission@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?IsHeadMission@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvunitmission.cpp
xdata$x	ENDS
;	COMDAT ?IsHeadMission@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z
_TEXT	SEGMENT
$T223965 = -44						; size = 4
_uSize$223957 = -40					; size = 4
$T223948 = -36						; size = 4
$T223940 = -32						; size = 4
$T223935 = -28						; size = 4
$T223930 = -24						; size = 4
$T223929 = -20						; size = 4
_kMissionData$218464 = -16				; size = 4
__$EHRec$ = -12						; size = 12
_hUnit$ = 8						; size = 8
_iMission$ = 16						; size = 4
?IsHeadMission@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z PROC ; CvUnitMission::IsHeadMission, COMDAT

; 2071 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?IsHeadMission@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2072 : 	CvAssert(hUnit.pointer() != NULL);
; 2073 : 	if(hUnit->m_missionQueue.getLength())

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223935[ebp], eax
	mov	ecx, DWORD PTR $T223935[ebp]
	mov	edx, DWORD PTR [ecx+2604]
	mov	DWORD PTR $T223940[ebp], edx
	cmp	DWORD PTR $T223940[ebp], 0
	je	SHORT $LN2@IsHeadMiss

; 2074 : 	{
; 2075 : 		const MissionData& kMissionData = *hUnit->m_missionQueue.head();

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T223948[ebp], eax
	mov	ecx, DWORD PTR $T223948[ebp]
	add	ecx, 2600				; 00000a28H
	mov	DWORD PTR $T223965[ebp], ecx
	mov	edx, DWORD PTR $T223965[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _uSize$223957[ebp], eax
	cmp	DWORD PTR _uSize$223957[ebp], 0
	jbe	SHORT $LN15@IsHeadMiss
	xor	ecx, ecx
	imul	ecx, 20					; 00000014H
	mov	edx, DWORD PTR $T223965[ebp]
	add	ecx, DWORD PTR [edx]
	mov	DWORD PTR _kMissionData$218464[ebp], ecx
	jmp	SHORT $LN16@IsHeadMiss
	jmp	SHORT $LN16@IsHeadMiss
$LN15@IsHeadMiss:
	mov	DWORD PTR _kMissionData$218464[ebp], 0
$LN16@IsHeadMiss:

; 2076 : 		if(kMissionData.eMissionType == (MissionTypes)iMission)

	mov	eax, DWORD PTR _kMissionData$218464[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _iMission$[ebp]
	jne	SHORT $LN2@IsHeadMiss

; 2077 : 			return &kMissionData;

	mov	edx, DWORD PTR _kMissionData$218464[ebp]
	mov	DWORD PTR $T223929[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN23@IsHeadMiss
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN23@IsHeadMiss:
	mov	eax, DWORD PTR $T223929[ebp]
	jmp	SHORT $LN3@IsHeadMiss
$LN2@IsHeadMiss:

; 2078 : 	}
; 2079 : 	return NULL;

	mov	DWORD PTR $T223930[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN28@IsHeadMiss
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN28@IsHeadMiss:
	mov	eax, DWORD PTR $T223930[ebp]
$LN3@IsHeadMiss:

; 2080 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?IsHeadMission@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z$0:
	lea	ecx, DWORD PTR _hUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?IsHeadMission@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?IsHeadMission@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?IsHeadMission@CvUnitMission@@SAPBUMissionData@@V?$FObjectHandle@VCvUnit@@@@H@Z ENDP ; CvUnitMission::IsHeadMission
PUBLIC	?HasCompletedMoveMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@@Z ; CvUnitMission::HasCompletedMoveMission
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?HasCompletedMoveMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HasCompletedMoveMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?HasCompletedMoveMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@@Z$1
__ehfuncinfo$?HasCompletedMoveMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?HasCompletedMoveMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvunitmission.cpp
xdata$x	ENDS
;	COMDAT ?HasCompletedMoveMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
tv191 = -112						; size = 4
tv206 = -108						; size = 4
$T224159 = -104						; size = 4
$T224155 = -100						; size = 4
$T224154 = -96						; size = 4
$T224109 = -92						; size = 4
$T224096 = -88						; size = 4
$T224092 = -84						; size = 4
$T224078 = -80						; size = 4
$T224074 = -73						; size = 1
$T224063 = -72						; size = 4
$T224059 = -65						; size = 1
_iMapY$224118 = -64					; size = 4
_iMapX$224117 = -60					; size = 4
$T224052 = -56						; size = 4
$T224021 = -52						; size = 4
$T224014 = -48						; size = 4
$T224004 = -44						; size = 4
$T224000 = -40						; size = 4
$T223994 = -35						; size = 1
$T223993 = -34						; size = 1
$T223992 = -33						; size = 1
_pTargetUnit$218479 = -32				; size = 8
_pTargetPlot$218477 = -24				; size = 4
_kMissionData$218474 = -20				; size = 4
_pkMissionNode$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_hUnit$ = 8						; size = 8
?HasCompletedMoveMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@@Z PROC ; CvUnitMission::HasCompletedMoveMission, COMDAT

; 2085 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?HasCompletedMoveMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 100				; 00000064H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2086 : 	MissionQueueNode* pkMissionNode;
; 2087 : 	if((pkMissionNode = HeadMissionQueueNode(hUnit->m_missionQueue)) != NULL)

	mov	eax, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T224000[ebp], eax
	mov	ecx, DWORD PTR $T224000[ebp]
	add	ecx, 2600				; 00000a28H
	push	ecx
	call	?HeadMissionQueueNode@CvUnitMission@@CAPAUMissionData@@AAV?$FFastSmallFixedList@UMissionData@@$0M@$00$0BCJ@$0A@@@@Z ; CvUnitMission::HeadMissionQueueNode
	add	esp, 4
	mov	DWORD PTR _pkMissionNode$[ebp], eax
	cmp	DWORD PTR _pkMissionNode$[ebp], 0
	je	$LN8@HasComplet

; 2088 : 	{
; 2089 : 		MissionData& kMissionData = *pkMissionNode;

	mov	edx, DWORD PTR _pkMissionNode$[ebp]
	mov	DWORD PTR _kMissionData$218474[ebp], edx

; 2090 : 		if((kMissionData.eMissionType == CvTypes::getMISSION_MOVE_TO()) ||
; 2091 : 		        (kMissionData.eMissionType == CvTypes::getMISSION_ROUTE_TO()) ||
; 2092 : 		        (kMissionData.eMissionType == CvTypes::getMISSION_MOVE_TO_UNIT()))

	call	?getMISSION_MOVE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MOVE_TO
	mov	ecx, DWORD PTR _kMissionData$218474[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN6@HasComplet
	call	?getMISSION_ROUTE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ROUTE_TO
	mov	edx, DWORD PTR _kMissionData$218474[ebp]
	cmp	DWORD PTR [edx], eax
	je	SHORT $LN6@HasComplet
	call	?getMISSION_MOVE_TO_UNIT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MOVE_TO_UNIT
	mov	ecx, DWORD PTR _kMissionData$218474[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	$LN8@HasComplet
$LN6@HasComplet:

; 2093 : 		{
; 2094 : 			CvPlot* pTargetPlot = NULL;

	mov	DWORD PTR _pTargetPlot$218477[ebp], 0

; 2095 : 
; 2096 : 			if(kMissionData.eMissionType == CvTypes::getMISSION_MOVE_TO_UNIT())

	call	?getMISSION_MOVE_TO_UNIT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MOVE_TO_UNIT
	mov	edx, DWORD PTR _kMissionData$218474[ebp]
	cmp	DWORD PTR [edx], eax
	jne	$LN5@HasComplet

; 2097 : 			{
; 2098 : 				UnitHandle pTargetUnit = GET_PLAYER((PlayerTypes)kMissionData.iData1).getUnit(kMissionData.iData2);

	mov	eax, DWORD PTR _kMissionData$218474[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224004[ebp], ecx
	mov	edx, DWORD PTR _kMissionData$218474[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR $T224004[ebp]
	call	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z	; CvPlayer::getUnit
	mov	DWORD PTR $T224014[ebp], eax
	mov	ecx, DWORD PTR $T224014[ebp]
	mov	DWORD PTR _pTargetUnit$218479[ebp], ecx
	mov	BYTE PTR _pTargetUnit$218479[ebp+4], 0
	cmp	DWORD PTR _pTargetUnit$218479[ebp], 0
	je	SHORT $LN18@HasComplet
	mov	ecx, DWORD PTR _pTargetUnit$218479[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN18@HasComplet:
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2099 : 				if(pTargetUnit)

	xor	edx, edx
	cmp	DWORD PTR _pTargetUnit$218479[ebp], 0
	setne	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN4@HasComplet

; 2100 : 				{
; 2101 : 					pTargetPlot = pTargetUnit->plot();

	mov	ecx, DWORD PTR _pTargetUnit$218479[ebp]
	mov	DWORD PTR $T224021[ebp], ecx
	mov	ecx, DWORD PTR $T224021[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	DWORD PTR _pTargetPlot$218477[ebp], eax

; 2102 : 				}
; 2103 : 				else

	jmp	SHORT $LN3@HasComplet
$LN4@HasComplet:

; 2104 : 				{
; 2105 : 					return true;	// Our unit is gone, assume we are done.

	mov	BYTE PTR $T223992[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$218479[ebp], 0
	je	SHORT $LN27@HasComplet
	mov	ecx, DWORD PTR _pTargetUnit$218479[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN27@HasComplet:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN32@HasComplet
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN32@HasComplet:
	mov	al, BYTE PTR $T223992[ebp]
	jmp	$LN9@HasComplet
$LN3@HasComplet:

; 2106 : 				}
; 2107 : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pTargetUnit$218479[ebp], 0
	je	SHORT $LN37@HasComplet
	mov	ecx, DWORD PTR _pTargetUnit$218479[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN37@HasComplet:

; 2108 : 			else

	jmp	$LN2@HasComplet
$LN5@HasComplet:

; 2109 : 			{
; 2110 : 				pTargetPlot = GC.getMap().plot(kMissionData.iData1, kMissionData.iData2);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T224052[ebp], edx
	mov	eax, DWORD PTR _kMissionData$218474[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T224155[ebp], ecx
	mov	edx, DWORD PTR _kMissionData$218474[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T224154[ebp], eax
	cmp	DWORD PTR $T224154[ebp], -2147483647	; 80000001H
	je	SHORT $LN43@HasComplet
	cmp	DWORD PTR $T224155[ebp], -2147483647	; 80000001H
	jne	SHORT $LN44@HasComplet
$LN43@HasComplet:
	mov	DWORD PTR _pTargetPlot$218477[ebp], 0
	jmp	$LN2@HasComplet
$LN44@HasComplet:
	mov	ecx, DWORD PTR $T224052[ebp]
	mov	dl, BYTE PTR [ecx+4056]
	mov	BYTE PTR $T224059[ebp], dl
	mov	eax, DWORD PTR $T224052[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T224063[ebp], ecx
	movzx	edx, BYTE PTR $T224059[ebp]
	test	edx, edx
	je	SHORT $LN56@HasComplet
	cmp	DWORD PTR $T224154[ebp], 0
	jge	SHORT $LN55@HasComplet
	mov	eax, DWORD PTR $T224154[ebp]
	cdq
	idiv	DWORD PTR $T224063[ebp]
	add	edx, DWORD PTR $T224063[ebp]
	mov	DWORD PTR _iMapX$224117[ebp], edx
	jmp	SHORT $LN57@HasComplet
	jmp	SHORT $LN56@HasComplet
$LN55@HasComplet:
	mov	eax, DWORD PTR $T224154[ebp]
	cmp	eax, DWORD PTR $T224063[ebp]
	jl	SHORT $LN56@HasComplet
	mov	eax, DWORD PTR $T224154[ebp]
	cdq
	idiv	DWORD PTR $T224063[ebp]
	mov	DWORD PTR _iMapX$224117[ebp], edx
	jmp	SHORT $LN57@HasComplet
$LN56@HasComplet:
	mov	ecx, DWORD PTR $T224154[ebp]
	mov	DWORD PTR _iMapX$224117[ebp], ecx
$LN57@HasComplet:
	mov	edx, DWORD PTR $T224052[ebp]
	mov	al, BYTE PTR [edx+4057]
	mov	BYTE PTR $T224074[ebp], al
	mov	ecx, DWORD PTR $T224052[ebp]
	mov	edx, DWORD PTR [ecx+4024]
	mov	DWORD PTR $T224078[ebp], edx
	movzx	eax, BYTE PTR $T224074[ebp]
	test	eax, eax
	je	SHORT $LN66@HasComplet
	cmp	DWORD PTR $T224155[ebp], 0
	jge	SHORT $LN65@HasComplet
	mov	eax, DWORD PTR $T224155[ebp]
	cdq
	idiv	DWORD PTR $T224078[ebp]
	add	edx, DWORD PTR $T224078[ebp]
	mov	DWORD PTR _iMapY$224118[ebp], edx
	jmp	SHORT $LN67@HasComplet
	jmp	SHORT $LN66@HasComplet
$LN65@HasComplet:
	mov	ecx, DWORD PTR $T224155[ebp]
	cmp	ecx, DWORD PTR $T224078[ebp]
	jl	SHORT $LN66@HasComplet
	mov	eax, DWORD PTR $T224155[ebp]
	cdq
	idiv	DWORD PTR $T224078[ebp]
	mov	DWORD PTR _iMapY$224118[ebp], edx
	jmp	SHORT $LN67@HasComplet
$LN66@HasComplet:
	mov	edx, DWORD PTR $T224155[ebp]
	mov	DWORD PTR _iMapY$224118[ebp], edx
$LN67@HasComplet:
	cmp	DWORD PTR _iMapX$224117[ebp], 0
	jl	SHORT $LN71@HasComplet
	mov	eax, DWORD PTR $T224052[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T224092[ebp], ecx
	mov	edx, DWORD PTR _iMapX$224117[ebp]
	cmp	edx, DWORD PTR $T224092[ebp]
	jge	SHORT $LN71@HasComplet
	cmp	DWORD PTR _iMapY$224118[ebp], 0
	jl	SHORT $LN71@HasComplet
	mov	eax, DWORD PTR $T224052[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T224096[ebp], ecx
	mov	edx, DWORD PTR _iMapY$224118[ebp]
	cmp	edx, DWORD PTR $T224096[ebp]
	jge	SHORT $LN71@HasComplet
	mov	DWORD PTR tv206[ebp], 1
	jmp	SHORT $LN69@HasComplet
$LN71@HasComplet:
	mov	DWORD PTR tv206[ebp], 0
$LN69@HasComplet:
	cmp	DWORD PTR tv206[ebp], 0
	je	SHORT $LN47@HasComplet
	mov	eax, DWORD PTR $T224052[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T224109[ebp], ecx
	mov	edx, DWORD PTR _iMapY$224118[ebp]
	imul	edx, DWORD PTR $T224109[ebp]
	add	edx, DWORD PTR _iMapX$224117[ebp]
	imul	edx, 484				; 000001e4H
	mov	eax, DWORD PTR $T224052[ebp]
	add	edx, DWORD PTR [eax+4068]
	mov	DWORD PTR tv191[ebp], edx
	jmp	SHORT $LN48@HasComplet
$LN47@HasComplet:
	mov	DWORD PTR tv191[ebp], 0
$LN48@HasComplet:
	mov	ecx, DWORD PTR tv191[ebp]
	mov	DWORD PTR _pTargetPlot$218477[ebp], ecx
$LN2@HasComplet:

; 2111 : 			}
; 2112 : 
; 2113 : 			if(pTargetPlot && hUnit->atPlot(*pTargetPlot))

	cmp	DWORD PTR _pTargetPlot$218477[ebp], 0
	je	SHORT $LN8@HasComplet
	mov	edx, DWORD PTR _hUnit$[ebp]
	mov	DWORD PTR $T224159[ebp], edx
	mov	eax, DWORD PTR _pTargetPlot$218477[ebp]
	push	eax
	mov	ecx, DWORD PTR $T224159[ebp]
	call	?atPlot@CvUnit@@QBE_NABVCvPlot@@@Z	; CvUnit::atPlot
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN8@HasComplet

; 2114 : 			{
; 2115 : 				return true;

	mov	BYTE PTR $T223993[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN84@HasComplet
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN84@HasComplet:
	mov	al, BYTE PTR $T223993[ebp]
	jmp	SHORT $LN9@HasComplet
$LN8@HasComplet:

; 2116 : 			}
; 2117 : 		}
; 2118 : 	}
; 2119 : 
; 2120 : 	return false;

	mov	BYTE PTR $T223994[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _hUnit$[ebp], 0
	je	SHORT $LN89@HasComplet
	mov	ecx, DWORD PTR _hUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN89@HasComplet:
	mov	al, BYTE PTR $T223994[ebp]
$LN9@HasComplet:

; 2121 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?HasCompletedMoveMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@@Z$0:
	lea	ecx, DWORD PTR _hUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__unwindfunclet$?HasCompletedMoveMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@@Z$1:
	lea	ecx, DWORD PTR _pTargetUnit$218479[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?HasCompletedMoveMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?HasCompletedMoveMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?HasCompletedMoveMission@CvUnitMission@@SA_NV?$FObjectHandle@VCvUnit@@@@@Z ENDP ; CvUnitMission::HasCompletedMoveMission
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
;	COMDAT ??1?$FObjectHandle@VCvUnit@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$FObjectHandle@VCvUnit@@@@QAE@XZ PROC		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>, COMDAT
; _this$ = ecx

; 146  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 147  : 		if(m_target) 

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@FObjectHan

; 148  : 		{
; 149  : 			m_target->getDestructionNotification().removeTarget(*this);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN2@FObjectHan:

; 150  : 		}
; 151  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$FObjectHandle@VCvUnit@@@@QAE@XZ ENDP		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_inst$224195 = -8					; size = 4
$T224191 = -4						; size = 4
??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ PROC		; std::auto_ptr<ICvUnit1>::~auto_ptr<ICvUnit1>, COMDAT
; _this$ = ecx

; 720  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 721  : 		delete _Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T224191[ebp], ecx
	cmp	DWORD PTR $T224191[ebp], 0
	je	SHORT $LN1@auto_ptr
	mov	edx, DWORD PTR $T224191[ebp]
	mov	DWORD PTR _inst$224195[ebp], edx
	mov	eax, DWORD PTR _inst$224195[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$224195[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN1@auto_ptr:

; 722  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ ENDP		; std::auto_ptr<ICvUnit1>::~auto_ptr<ICvUnit1>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$auto_ptr@VICvPlot1@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_inst$224203 = -8					; size = 4
$T224199 = -4						; size = 4
??1?$auto_ptr@VICvPlot1@@@std@@QAE@XZ PROC		; std::auto_ptr<ICvPlot1>::~auto_ptr<ICvPlot1>, COMDAT
; _this$ = ecx

; 720  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 721  : 		delete _Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T224199[ebp], ecx
	cmp	DWORD PTR $T224199[ebp], 0
	je	SHORT $LN1@auto_ptr@2
	mov	edx, DWORD PTR $T224199[ebp]
	mov	DWORD PTR _inst$224203[ebp], edx
	mov	eax, DWORD PTR _inst$224203[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$224203[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN1@auto_ptr@2:

; 722  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$auto_ptr@VICvPlot1@@@std@@QAE@XZ ENDP		; std::auto_ptr<ICvPlot1>::~auto_ptr<ICvPlot1>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
_TEXT	ENDS
;	COMDAT ?push_back@?$FStaticVector@UMissionData@@$0M@$00$0BCJ@$0A@@@QAEIABUMissionData@@@Z
_TEXT	SEGMENT
tv141 = -52						; size = 4
tv132 = -48						; size = 4
_this$ = -44						; size = 4
$T224207 = -4						; size = 4
_element$ = 8						; size = 4
?push_back@?$FStaticVector@UMissionData@@$0M@$00$0BCJ@$0A@@@QAEIABUMissionData@@@Z PROC ; FStaticVector<MissionData,12,1,297,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	DWORD PTR _this$[ebp], ecx

; 677  : 		m_bIsResized = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+252], 0

; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN35@push_back

; 679  : 			GrowSize(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GrowSize@?$FStaticVector@UMissionData@@$0M@$00$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<MissionData,12,1,297,0>::GrowSize

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

$LN35@push_back:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 20					; 00000014H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	mov	DWORD PTR $T224207[ebp], ecx
	je	SHORT $LN4@push_back
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR $T224207[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], edx
	mov	eax, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx+16], eax
	mov	ecx, DWORD PTR $T224207[ebp]
	mov	DWORD PTR tv132[ebp], ecx
	jmp	SHORT $LN5@push_back
$LN4@push_back:
	mov	DWORD PTR tv132[ebp], 0
$LN5@push_back:

; 681  : 		return m_uiCurrSize++;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR tv141[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR tv141[ebp]

; 682  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$FStaticVector@UMissionData@@$0M@$00$0BCJ@$0A@@@QAEIABUMissionData@@@Z ENDP ; FStaticVector<MissionData,12,1,297,0>::push_back
_TEXT	ENDS
PUBLIC	??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@ ; `string'
EXTRN	?FireFreeAlignedNoTracking@@YAXPAX@Z:PROC	; FireFreeAlignedNoTracking
EXTRN	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z:PROC ; FireMallocAlignedNoTracking
EXTRN	_memcpy:PROC
;	COMDAT ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
CONST	SEGMENT
??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@ DB 'd:\sources\'
	DB	'lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\FF'
	DB	'astVector.h', 00H				; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?GrowSize@?$FStaticVector@UMissionData@@$0M@$00$0BCJ@$0A@@@IAEXI@Z
_TEXT	SEGMENT
tv179 = -44						; size = 4
_this$ = -40						; size = 4
$T224285 = -36						; size = 4
$T224284 = -32						; size = 4
_i$224277 = -28						; size = 4
$T224260 = -24						; size = 4
_pRet$224256 = -20					; size = 4
$T224251 = -16						; size = 4
_i$218619 = -12						; size = 4
_uiNewSize$218611 = -8					; size = 4
_pTemp$ = -4						; size = 4
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@UMissionData@@$0M@$00$0BCJ@$0A@@@IAEXI@Z PROC ; FStaticVector<MissionData,12,1,297,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN8@GrowSize
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1
$LN8@GrowSize:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jb	SHORT $LN7@GrowSize

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shl	edx, 1
	mov	DWORD PTR _uiNewSize$218611[ebp], edx

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _uiNewSize$218611[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN6@GrowSize

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	mov	DWORD PTR [edx+8], eax

; 754  : 				break;

	jmp	SHORT $LN7@GrowSize
$LN6@GrowSize:

; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _uiNewSize$218611[ebp]
	mov	DWORD PTR [ecx+8], edx

; 759  : 		}

	jmp	SHORT $LN8@GrowSize
$LN7@GrowSize:

; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T224260[ebp], ecx
	cmp	DWORD PTR $T224260[ebp], 12		; 0000000cH
	jbe	SHORT $LN15@GrowSize
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	edx, DWORD PTR $T224260[ebp]
	imul	edx, 20					; 00000014H
	push	edx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$224256[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T224260[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN16@GrowSize
$LN15@GrowSize:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _pRet$224256[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 12			; 0000000cH
$LN16@GrowSize:
	mov	ecx, DWORD PTR _pRet$224256[ebp]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 762  : 		if( bPODType ){

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@GrowSize

; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 20					; 00000014H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pTemp$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 764  : 		}else{

	jmp	SHORT $LN4@GrowSize
$LN5@GrowSize:

; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	mov	DWORD PTR _i$218619[ebp], 0
	jmp	SHORT $LN3@GrowSize
$LN2@GrowSize:
	mov	edx, DWORD PTR _i$218619[ebp]
	add	edx, 1
	mov	DWORD PTR _i$218619[ebp], edx
$LN3@GrowSize:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$218619[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN4@GrowSize

; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);

	mov	edx, DWORD PTR _i$218619[ebp]
	imul	edx, 20					; 00000014H
	add	edx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR $T224251[ebp], edx
	je	SHORT $LN12@GrowSize
	mov	eax, DWORD PTR _i$218619[ebp]
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, eax
	mov	eax, DWORD PTR $T224251[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [edx+12]
	mov	DWORD PTR [eax+12], ecx
	mov	edx, DWORD PTR [edx+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR $T224251[ebp]
	mov	DWORD PTR tv179[ebp], eax
	jmp	SHORT $LN13@GrowSize
$LN12@GrowSize:
	mov	DWORD PTR tv179[ebp], 0
$LN13@GrowSize:
	jmp	SHORT $LN2@GrowSize
$LN4@GrowSize:

; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T224285[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T224284[ebp], ecx
	xor	edx, edx
	je	SHORT $LN21@GrowSize
	xor	eax, eax
	je	SHORT $LN21@GrowSize
	mov	DWORD PTR _i$224277[ebp], 0
	jmp	SHORT $LN26@GrowSize
$LN25@GrowSize:
	mov	ecx, DWORD PTR _i$224277[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$224277[ebp], ecx
$LN26@GrowSize:
	mov	edx, DWORD PTR _i$224277[ebp]
	cmp	edx, DWORD PTR $T224285[ebp]
	jae	SHORT $LN21@GrowSize
	jmp	SHORT $LN25@GrowSize
$LN21@GrowSize:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	cmp	DWORD PTR $T224284[ebp], eax
	je	SHORT $LN22@GrowSize
	mov	ecx, DWORD PTR $T224284[ebp]
	push	ecx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN22@GrowSize:

; 769  : 		m_pData = pTemp;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR [edx], eax

; 770  : 
; 771  : 		m_bIsResized = true;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+252], 1

; 772  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?GrowSize@?$FStaticVector@UMissionData@@$0M@$00$0BCJ@$0A@@@IAEXI@Z ENDP ; FStaticVector<MissionData,12,1,297,0>::GrowSize
_TEXT	ENDS
EXTRN	?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B:DWORD ; CvPreGame::sr_TeamTypes
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvpregame.h
;	COMDAT ?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z PROC ; CvPreGame::teamType, COMDAT

; 298  : {

	push	ebp
	mov	ebp, esp

; 299  : 	if(p >= 0 && p < MAX_PLAYERS)

	cmp	DWORD PTR _p$[ebp], 0
	jl	SHORT $LN1@teamType
	cmp	DWORD PTR _p$[ebp], 64			; 00000040H
	jge	SHORT $LN1@teamType

; 300  : 		return sr_TeamTypes[p];

	mov	eax, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	jmp	SHORT $LN2@teamType
$LN1@teamType:

; 301  : 	return NO_TEAM;

	or	eax, -1
$LN2@teamType:

; 302  : }

	pop	ebp
	ret	0
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ENDP ; CvPreGame::teamType
_TEXT	ENDS
EXTRN	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z:PROC	; CvPlayer::getCity
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvplot.h
;	COMDAT ?isCity@CvPlot@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T224297 = -4						; size = 4
?isCity@CvPlot@@QBE_NXZ PROC				; CvPlot::isCity, COMDAT
; _this$ = ecx

; 244  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 245  : 		if((m_plotCity.eOwner >= 0) && m_plotCity.eOwner < MAX_PLAYERS)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+104], 0
	jl	SHORT $LN1@isCity
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+104], 64			; 00000040H
	jge	SHORT $LN1@isCity

; 246  : 			return (GET_PLAYER((PlayerTypes)m_plotCity.eOwner).getCity(m_plotCity.iID)) != NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+104]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224297[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	ecx, DWORD PTR $T224297[ebp]
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	neg	eax
	sbb	eax, eax
	neg	eax
	jmp	SHORT $LN2@isCity
$LN1@isCity:

; 247  : 
; 248  : 		return false;

	xor	al, al
$LN2@isCity:

; 249  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?isCity@CvPlot@@QBE_NXZ ENDP				; CvPlot::isCity
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
_TEXT	ENDS
;	COMDAT ?coordRange@@YAHHH_N@Z
_TEXT	SEGMENT
_iCoord$ = 8						; size = 4
_iRange$ = 12						; size = 4
_bWrap$ = 16						; size = 1
?coordRange@@YAHHH_N@Z PROC				; coordRange, COMDAT

; 87   : {

	push	ebp
	mov	ebp, esp

; 88   : 	if(bWrap)

	movzx	eax, BYTE PTR _bWrap$[ebp]
	test	eax, eax
	je	SHORT $LN4@coordRange

; 89   : 	{
; 90   : 		if(iCoord < 0)

	cmp	DWORD PTR _iCoord$[ebp], 0
	jge	SHORT $LN3@coordRange

; 91   : 		{
; 92   : 			return (iRange + (iCoord % iRange));

	mov	eax, DWORD PTR _iCoord$[ebp]
	cdq
	idiv	DWORD PTR _iRange$[ebp]
	add	edx, DWORD PTR _iRange$[ebp]
	mov	eax, edx
	jmp	SHORT $LN5@coordRange
	jmp	SHORT $LN4@coordRange
$LN3@coordRange:

; 93   : 		}
; 94   : 		else if(iCoord >= iRange)

	mov	ecx, DWORD PTR _iCoord$[ebp]
	cmp	ecx, DWORD PTR _iRange$[ebp]
	jl	SHORT $LN4@coordRange

; 95   : 		{
; 96   : 			return (iCoord % iRange);

	mov	eax, DWORD PTR _iCoord$[ebp]
	cdq
	idiv	DWORD PTR _iRange$[ebp]
	mov	eax, edx
	jmp	SHORT $LN5@coordRange
$LN4@coordRange:

; 97   : 		}
; 98   : 	}
; 99   : 
; 100  : 	return iCoord;

	mov	eax, DWORD PTR _iCoord$[ebp]
$LN5@coordRange:

; 101  : }

	pop	ebp
	ret	0
?coordRange@@YAHHH_N@Z ENDP				; coordRange
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?isPlot@CvMap@@QBEHHH@Z
_TEXT	SEGMENT
tv72 = -16						; size = 4
_this$ = -12						; size = 4
$T224311 = -8						; size = 4
$T224307 = -4						; size = 4
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?isPlot@CvMap@@QBEHHH@Z PROC				; CvMap::isPlot, COMDAT
; _this$ = ecx

; 156  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 157  : #ifdef AUI_WARNING_FIXES
; 158  : 		return ((iX >= 0) && (uint(iX) < getGridWidth()) && (iY >= 0) && (uint(iY) < getGridHeight()));
; 159  : #else
; 160  : 		return ((iX >= 0) && (iX < getGridWidth()) && (iY >= 0) && (iY < getGridHeight()));

	cmp	DWORD PTR _iX$[ebp], 0
	jl	SHORT $LN3@isPlot
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T224307[ebp], ecx
	mov	edx, DWORD PTR _iX$[ebp]
	cmp	edx, DWORD PTR $T224307[ebp]
	jge	SHORT $LN3@isPlot
	cmp	DWORD PTR _iY$[ebp], 0
	jl	SHORT $LN3@isPlot
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T224311[ebp], ecx
	mov	edx, DWORD PTR _iY$[ebp]
	cmp	edx, DWORD PTR $T224311[ebp]
	jge	SHORT $LN3@isPlot
	mov	DWORD PTR tv72[ebp], 1
	jmp	SHORT $LN4@isPlot
$LN3@isPlot:
	mov	DWORD PTR tv72[ebp], 0
$LN4@isPlot:
	mov	eax, DWORD PTR tv72[ebp]

; 161  : #endif
; 162  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?isPlot@CvMap@@QBEHHH@Z ENDP				; CvMap::isPlot
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::const_iterator::_Dec
PUBLIC	?_Insert@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@ABQAVFAutoVariableBase@@@Z ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Insert
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?insert@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@_N@2@ABQAVFAutoVariableBase@@@Z
_TEXT	SEGMENT
tv90 = -156						; size = 4
_this$ = -152						; size = 4
$T224446 = -148						; size = 4
$T224426 = -144						; size = 4
$T224411 = -140						; size = 4
$T224394 = -136						; size = 4
$T224381 = -132						; size = 4
$T224367 = -128						; size = 4
$T224323 = -45						; size = 1
$T224322 = -44						; size = 4
$T224321 = -37						; size = 1
$T224320 = -36						; size = 4
$T224319 = -29						; size = 1
$T224318 = -28						; size = 4
$T224317 = -24						; size = 4
$T224316 = -17						; size = 1
__Where$198767 = -16					; size = 4
__Trynode$ = -12					; size = 4
__Wherenode$ = -8					; size = 4
__Addleft$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@_N@2@ABQAVFAutoVariableBase@@@Z PROC ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::insert, COMDAT
; _this$ = ecx

; 630  : 		{	// try to insert node with value _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 156				; 0000009cH
	mov	DWORD PTR _this$[ebp], ecx

; 631  : 		_Nodeptr _Trynode = _Root();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Trynode$[ebp], edx

; 632  : 		_Nodeptr _Wherenode = _Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Wherenode$[ebp], ecx

; 633  : 		bool _Addleft = true;	// add to left of head if tree empty

	mov	BYTE PTR __Addleft$[ebp], 1

; 634  : 		while (!_Isnil(_Trynode))

$LN19@insert:
	mov	edx, DWORD PTR __Trynode$[ebp]
	movsx	eax, BYTE PTR [edx+17]
	test	eax, eax
	jne	SHORT $LN9@insert

; 635  : 			{	// look for leaf to insert before (_Addleft) or after
; 636  : 			_Wherenode = _Trynode;

	mov	ecx, DWORD PTR __Trynode$[ebp]
	mov	DWORD PTR __Wherenode$[ebp], ecx

; 637  : 			_Addleft = _DEBUG_LT_PRED(this->comp,

	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR __Trynode$[ebp]
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax+12]
	sbb	edx, edx
	neg	edx
	mov	BYTE PTR __Addleft$[ebp], dl

; 638  : 				this->_Kfn(_Val), _Key(_Trynode));
; 639  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

	movzx	eax, BYTE PTR __Addleft$[ebp]
	test	eax, eax
	je	SHORT $LN33@insert
	mov	ecx, DWORD PTR __Trynode$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv90[ebp], edx
	jmp	SHORT $LN14@insert
$LN33@insert:
	mov	eax, DWORD PTR __Trynode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR tv90[ebp], ecx
$LN14@insert:
	mov	edx, DWORD PTR tv90[ebp]
	mov	DWORD PTR __Trynode$[ebp], edx

; 640  : 			}

	jmp	SHORT $LN19@insert
$LN9@insert:

; 641  : 
; 642  : 		if (this->_Multi)

	xor	eax, eax
	je	SHORT $LN8@insert

; 643  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

	mov	BYTE PTR $T224316[ebp], 1
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	movzx	eax, BYTE PTR __Addleft$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T224317[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@ABQAVFAutoVariableBase@@@Z ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Insert
	mov	DWORD PTR $T224367[ebp], eax
	mov	edx, DWORD PTR $T224367[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	al, BYTE PTR $T224316[ebp]
	mov	BYTE PTR [edx+4], al
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN11@insert

; 644  : 		else

	jmp	$LN11@insert
$LN8@insert:

; 645  : 			{	// insert only if unique
; 646  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);

	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR __Where$198767[ebp], ecx

; 647  : 			if (!_Addleft)

	movzx	edx, BYTE PTR __Addleft$[ebp]
	test	edx, edx
	jne	SHORT $LN6@insert
	jmp	$LN79@insert
$LN6@insert:

; 648  : 				;	// need to test if insert after is okay
; 649  : 			else if (_Where == begin())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T224381[ebp], ecx
	mov	edx, DWORD PTR $T224381[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T224394[ebp], eax
	mov	ecx, DWORD PTR $T224394[ebp]
	mov	DWORD PTR $T224318[ebp], ecx
	mov	edx, DWORD PTR __Where$198767[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR $T224318[ebp]
	sete	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@insert

; 650  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

	mov	BYTE PTR $T224319[ebp], 1
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	push	1
	lea	ecx, DWORD PTR $T224320[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@ABQAVFAutoVariableBase@@@Z ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Insert
	mov	DWORD PTR $T224411[ebp], eax
	mov	edx, DWORD PTR $T224411[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	al, BYTE PTR $T224319[ebp]
	mov	BYTE PTR [edx+4], al
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN11@insert

; 651  : 			else

	jmp	SHORT $LN79@insert
$LN4@insert:

; 652  : 				--_Where;	// need to test if insert before is okay

	lea	ecx, DWORD PTR __Where$198767[ebp]
	call	?_Dec@const_iterator@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::const_iterator::_Dec

; 653  : 
; 654  : 			if (_DEBUG_LT_PRED(this->comp,

$LN79@insert:
	mov	ecx, DWORD PTR __Where$198767[ebp]
	mov	DWORD PTR $T224426[ebp], ecx
	mov	edx, DWORD PTR $T224426[ebp]
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	cmp	ecx, DWORD PTR [eax]
	sbb	edx, edx
	neg	edx
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN2@insert

; 655  : 				_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 656  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

	mov	BYTE PTR $T224321[ebp], 1
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	movzx	eax, BYTE PTR __Addleft$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T224322[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@ABQAVFAutoVariableBase@@@Z ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Insert
	mov	DWORD PTR $T224446[ebp], eax
	mov	edx, DWORD PTR $T224446[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	al, BYTE PTR $T224321[ebp]
	mov	BYTE PTR [edx+4], al
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN11@insert

; 657  : 			else

	jmp	SHORT $LN11@insert
$LN2@insert:

; 658  : 				return (_Pairib(_Where, false));

	mov	BYTE PTR $T224323[ebp], 0
	mov	ecx, DWORD PTR __Where$198767[ebp]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR $T224323[ebp]
	mov	BYTE PTR [eax+4], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN11@insert:

; 659  : 			}
; 660  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?insert@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@_N@2@ABQAVFAutoVariableBase@@@Z ENDP ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::insert
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Rrotate
PUBLIC	?_Lrotate@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Lrotate
PUBLIC	?_Buynode@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@PAU342@00ABQAVFAutoVariableBase@@D@Z ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Buynode
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:PROC		; std::length_error::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_Elength_error@std@@UAEPAXI@Z ; std::length_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Insert@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@ABQAVFAutoVariableBase@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@ABQAVFAutoVariableBase@@@Z$0
__ehfuncinfo$?_Insert@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@ABQAVFAutoVariableBase@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Insert@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@ABQAVFAutoVariableBase@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@ABQAVFAutoVariableBase@@@Z
_TEXT	SEGMENT
tv277 = -196						; size = 4
_this$ = -192						; size = 4
$T224986 = -188						; size = 4
$T224898 = -172						; size = 4
$T224813 = -160						; size = 4
$T224797 = -156						; size = 4
$T224778 = -152						; size = 4
$T224774 = -148						; size = 4
$T224689 = -136						; size = 4
$T224588 = -120						; size = 4
$T224566 = -116						; size = 4
$T224559 = -112						; size = 4
$T224555 = -108						; size = 4
$T224516 = -104						; size = 4
$T224507 = -100						; size = 4
$T224487 = -96						; size = 4
__Count$224470 = -92					; size = 4
$T224453 = -88						; size = 28
$T224452 = -60						; size = 40
__Pnode$201484 = -20					; size = 4
__Newnode$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@ABQAVFAutoVariableBase@@@Z PROC ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Insert, COMDAT
; _this$ = ecx

; 1187 : 		{	// add node with value next to _Wherenode, to left if _Addnode

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@ABQAVFAutoVariableBase@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 184				; 000000b8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1188 : 		if (max_size() - 1 <= _Mysize)

	mov	DWORD PTR __Count$224470[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$224470[ebp], 0
	jbe	SHORT $LN25@Insert
	mov	eax, DWORD PTR __Count$224470[ebp]
	mov	DWORD PTR tv277[ebp], eax
	jmp	SHORT $LN21@Insert
$LN25@Insert:
	mov	DWORD PTR tv277[ebp], 1
$LN21@Insert:
	mov	ecx, DWORD PTR tv277[ebp]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+8]
	ja	SHORT $LN17@Insert

; 1189 : 			_THROW(length_error, "map/set<T> too long");

	push	OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T224453[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR $T224453[ebp]
	push	eax
	lea	ecx, DWORD PTR $T224452[ebp]
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	mov	DWORD PTR $T224452[ebp], OFFSET ??_7length_error@std@@6B@
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T224452[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T224453[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN17@Insert:

; 1190 : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 1191 : 			_Val, _Red);

	push	0
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@PAU342@00ABQAVFAutoVariableBase@@D@Z ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Buynode
	mov	DWORD PTR __Newnode$[ebp], eax

; 1192 : 
; 1193 : 		++_Mysize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 1194 : 		if (_Wherenode == _Myhead)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Wherenode$[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jne	SHORT $LN16@Insert

; 1195 : 			{	// first node in tree, just set head values
; 1196 : 			_Root() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [edx+4], eax

; 1197 : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T224487[ebp], edx
	mov	eax, DWORD PTR $T224487[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN15@Insert
$LN16@Insert:

; 1198 : 			}
; 1199 : 		else if (_Addleft)

	movzx	edx, BYTE PTR __Addleft$[ebp]
	test	edx, edx
	je	SHORT $LN52@Insert

; 1200 : 			{	// add to left of _Wherenode
; 1201 : 			_Left(_Wherenode) = _Newnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1202 : 			if (_Wherenode == _Lmost())

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T224507[ebp], eax
	mov	ecx, DWORD PTR $T224507[ebp]
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN13@Insert

; 1203 : 				_Lmost() = _Newnode;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T224516[ebp], ecx
	mov	edx, DWORD PTR $T224516[ebp]
	mov	eax, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [edx], eax
$LN13@Insert:

; 1204 : 			}
; 1205 : 		else

	jmp	SHORT $LN15@Insert

; 1206 : 			{	// add to right of _Wherenode
; 1207 : 			_Right(_Wherenode) = _Newnode;

$LN52@Insert:
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [ecx+8], edx

; 1208 : 			if (_Wherenode == _Rmost())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN15@Insert

; 1209 : 				_Rmost() = _Newnode;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [ecx+8], edx
$LN15@Insert:

; 1210 : 			}
; 1211 : 
; 1212 : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

	mov	eax, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR __Pnode$201484[ebp], eax
$LN64@Insert:
	mov	ecx, DWORD PTR __Pnode$201484[ebp]
	mov	edx, DWORD PTR [ecx+4]
	movsx	eax, BYTE PTR [edx+16]
	test	eax, eax
	jne	$LN360@Insert

; 1213 : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

	mov	ecx, DWORD PTR __Pnode$201484[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 4
	mov	DWORD PTR $T224555[ebp], edx
	mov	eax, DWORD PTR $T224555[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T224559[ebp], ecx
	mov	edx, DWORD PTR __Pnode$201484[ebp]
	mov	eax, DWORD PTR $T224559[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN216@Insert

; 1214 : 				{	// fixup red-red in left subtree
; 1215 : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

	mov	edx, DWORD PTR __Pnode$201484[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 4
	mov	DWORD PTR $T224566[ebp], eax
	mov	ecx, DWORD PTR $T224566[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR __Wherenode$[ebp], eax

; 1216 : 				if (_Color(_Wherenode) == _Red)

	mov	ecx, DWORD PTR __Wherenode$[ebp]
	movsx	edx, BYTE PTR [ecx+16]
	test	edx, edx
	jne	SHORT $LN100@Insert

; 1217 : 					{	// parent has two red children, blacken both
; 1218 : 					_Color(_Parent(_Pnode)) = _Black;

	mov	eax, DWORD PTR __Pnode$201484[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	BYTE PTR [ecx+16], 1

; 1219 : 					_Color(_Wherenode) = _Black;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	BYTE PTR [edx+16], 1

; 1220 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	eax, DWORD PTR __Pnode$201484[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 4
	mov	DWORD PTR $T224588[ebp], ecx
	mov	edx, DWORD PTR $T224588[ebp]
	mov	eax, DWORD PTR [edx]
	mov	BYTE PTR [eax+16], 0

; 1221 : 					_Pnode = _Parent(_Parent(_Pnode));

	mov	ecx, DWORD PTR __Pnode$201484[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Pnode$201484[ebp], eax

; 1222 : 					}
; 1223 : 				else

	jmp	SHORT $LN6@Insert

; 1224 : 					{	// parent has red and black children
; 1225 : 					if (_Pnode == _Right(_Parent(_Pnode)))

$LN100@Insert:
	mov	ecx, DWORD PTR __Pnode$201484[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR __Pnode$201484[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN155@Insert

; 1226 : 						{	// rotate right child to left
; 1227 : 						_Pnode = _Parent(_Pnode);

	mov	ecx, DWORD PTR __Pnode$201484[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Pnode$201484[ebp], edx

; 1228 : 						_Lrotate(_Pnode);

	mov	eax, DWORD PTR __Pnode$201484[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Lrotate

; 1229 : 						}
; 1230 : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

$LN155@Insert:
	mov	ecx, DWORD PTR __Pnode$201484[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	BYTE PTR [edx+16], 1

; 1231 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	eax, DWORD PTR __Pnode$201484[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 4
	mov	DWORD PTR $T224689[ebp], ecx
	mov	edx, DWORD PTR $T224689[ebp]
	mov	eax, DWORD PTR [edx]
	mov	BYTE PTR [eax+16], 0

; 1232 : 					_Rrotate(_Parent(_Parent(_Pnode)));

	mov	ecx, DWORD PTR __Pnode$201484[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Rrotate
$LN6@Insert:

; 1233 : 					}
; 1234 : 				}
; 1235 : 			else

	jmp	$LN4@Insert

; 1236 : 				{	// fixup red-red in right subtree
; 1237 : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));

$LN216@Insert:
	mov	ecx, DWORD PTR __Pnode$201484[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 4
	mov	DWORD PTR $T224774[ebp], edx
	mov	eax, DWORD PTR $T224774[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T224778[ebp], ecx
	mov	edx, DWORD PTR $T224778[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Wherenode$[ebp], eax

; 1238 : 				if (_Color(_Wherenode) == _Red)

	mov	ecx, DWORD PTR __Wherenode$[ebp]
	movsx	edx, BYTE PTR [ecx+16]
	test	edx, edx
	jne	SHORT $LN240@Insert

; 1239 : 					{	// parent has two red children, blacken both
; 1240 : 					_Color(_Parent(_Pnode)) = _Black;

	mov	eax, DWORD PTR __Pnode$201484[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	BYTE PTR [ecx+16], 1

; 1241 : 					_Color(_Wherenode) = _Black;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	BYTE PTR [edx+16], 1

; 1242 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	eax, DWORD PTR __Pnode$201484[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 4
	mov	DWORD PTR $T224797[ebp], ecx
	mov	edx, DWORD PTR $T224797[ebp]
	mov	eax, DWORD PTR [edx]
	mov	BYTE PTR [eax+16], 0

; 1243 : 					_Pnode = _Parent(_Parent(_Pnode));

	mov	ecx, DWORD PTR __Pnode$201484[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Pnode$201484[ebp], eax

; 1244 : 					}
; 1245 : 				else

	jmp	SHORT $LN4@Insert

; 1246 : 					{	// parent has red and black children
; 1247 : 					if (_Pnode == _Left(_Parent(_Pnode)))

$LN240@Insert:
	mov	ecx, DWORD PTR __Pnode$201484[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T224813[ebp], edx
	mov	eax, DWORD PTR $T224813[ebp]
	mov	ecx, DWORD PTR __Pnode$201484[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN297@Insert

; 1248 : 						{	// rotate left child to right
; 1249 : 						_Pnode = _Parent(_Pnode);

	mov	edx, DWORD PTR __Pnode$201484[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Pnode$201484[ebp], eax

; 1250 : 						_Rrotate(_Pnode);

	mov	ecx, DWORD PTR __Pnode$201484[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Rrotate

; 1251 : 						}
; 1252 : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

$LN297@Insert:
	mov	edx, DWORD PTR __Pnode$201484[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	BYTE PTR [eax+16], 1

; 1253 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	ecx, DWORD PTR __Pnode$201484[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 4
	mov	DWORD PTR $T224898[ebp], edx
	mov	eax, DWORD PTR $T224898[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+16], 0

; 1254 : 					_Lrotate(_Parent(_Parent(_Pnode)));

	mov	edx, DWORD PTR __Pnode$201484[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Lrotate
$LN4@Insert:

; 1255 : 					}
; 1256 : 				}

	jmp	$LN64@Insert

; 1257 : 
; 1258 : 		_Color(_Root()) = _Black;	// root is always black

$LN360@Insert:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 4
	mov	DWORD PTR $T224986[ebp], eax
	mov	ecx, DWORD PTR $T224986[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	BYTE PTR [edx+16], 1

; 1259 : 		return (_TREE_ITERATOR(_Newnode));

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN19@Insert:

; 1260 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Insert@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@ABQAVFAutoVariableBase@@@Z$0:
	lea	ecx, DWORD PTR $T224453[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?_Insert@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@ABQAVFAutoVariableBase@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-188]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Insert@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@ABQAVFAutoVariableBase@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@ABQAVFAutoVariableBase@@@Z ENDP ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Insert
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??0exception@std@@QAE@XZ:PROC
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
;	COMDAT ??_7logic_error@std@@6B@
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_Elogic_error@std@@UAEPAXI@Z ; std::logic_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 26   : 		{	// construct from message string

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR __Message$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z

; 27   : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
; Function compile flags: /Odtp
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?what@logic_error@std@@UBEPBDXZ PROC			; std::logic_error::what, COMDAT
; _this$ = ecx

; 34   : 		{	// return pointer to message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 35   : 		return (_Str.c_str());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 36   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN1@scalar
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1length_error@std@@UAE@XZ PROC			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 109  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@

; 110  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC			; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	edx, DWORD PTR ___flags$[ebp]
	and	edx, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0length_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$1
__ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0length_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC			; std::length_error::length_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0length_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0length_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T225118 = -12						; size = 4
$T225111 = -8						; size = 4
__Pnode$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1285 : 		{	// promote right node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1286 : 		_Nodeptr _Pnode = _Right(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1287 : 		_Right(_Wherenode) = _Left(_Pnode);

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], ecx

; 1288 : 
; 1289 : 		if (!_Isnil(_Left(_Pnode)))

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	jne	SHORT $LN24@Lrotate

; 1290 : 			_Parent(_Left(_Pnode)) = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1291 : 		_Parent(_Pnode) = _Parent(_Wherenode);

$LN24@Lrotate:
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 1292 : 
; 1293 : 		if (_Wherenode == _Root())

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN34@Lrotate

; 1294 : 			_Root() = _Pnode;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+4], ecx
	jmp	SHORT $LN46@Lrotate

; 1295 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

$LN34@Lrotate:
	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T225111[ebp], eax
	mov	ecx, DWORD PTR $T225111[ebp]
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN44@Lrotate

; 1296 : 			_Left(_Parent(_Wherenode)) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T225118[ebp], ecx
	mov	edx, DWORD PTR $T225118[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [edx], eax

; 1297 : 		else

	jmp	SHORT $LN46@Lrotate

; 1298 : 			_Right(_Parent(_Wherenode)) = _Pnode;

$LN44@Lrotate:
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [edx+8], eax

; 1299 : 
; 1300 : 		_Left(_Pnode) = _Wherenode;

$LN46@Lrotate:
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [ecx], edx

; 1301 : 		_Parent(_Wherenode) = _Pnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1302 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Lrotate@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Lrotate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T225194 = -8						; size = 4
__Pnode$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1329 : 		{	// promote left node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1330 : 		_Nodeptr _Pnode = _Left(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1331 : 		_Left(_Wherenode) = _Right(_Pnode);

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx], ecx

; 1332 : 
; 1333 : 		if (!_Isnil(_Right(_Pnode)))

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	jne	SHORT $LN24@Rrotate

; 1334 : 			_Parent(_Right(_Pnode)) = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1335 : 		_Parent(_Pnode) = _Parent(_Wherenode);

$LN24@Rrotate:
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 1336 : 
; 1337 : 		if (_Wherenode == _Root())

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN36@Rrotate

; 1338 : 			_Root() = _Pnode;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+4], ecx
	jmp	SHORT $LN46@Rrotate

; 1339 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

$LN36@Rrotate:
	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN42@Rrotate

; 1340 : 			_Right(_Parent(_Wherenode)) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 1341 : 		else

	jmp	SHORT $LN46@Rrotate

; 1342 : 			_Left(_Parent(_Wherenode)) = _Pnode;

$LN42@Rrotate:
	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T225194[ebp], eax
	mov	ecx, DWORD PTR $T225194[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], edx

; 1343 : 
; 1344 : 		_Right(_Pnode) = _Wherenode;

$LN46@Rrotate:
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 1345 : 		_Parent(_Wherenode) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [edx+4], eax

; 1346 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Rrotate@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Node>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Buynode@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@PAU342@00ABQAVFAutoVariableBase@@D@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@PAU342@00ABQAVFAutoVariableBase@@D@Z$0
__unwindtable$?_Buynode@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@PAU342@00ABQAVFAutoVariableBase@@D@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@PAU342@00ABQAVFAutoVariableBase@@D@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@PAU342@00ABQAVFAutoVariableBase@@D@Z$3
__ehfuncinfo$?_Buynode@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@PAU342@00ABQAVFAutoVariableBase@@D@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@PAU342@00ABQAVFAutoVariableBase@@D@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@PAU342@00ABQAVFAutoVariableBase@@D@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@PAU342@00ABQAVFAutoVariableBase@@D@Z
_TEXT	SEGMENT
tv86 = -52						; size = 4
_this$ = -48						; size = 4
$T225204 = -28						; size = 4
$T225203 = -24						; size = 4
__Wherenode$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@PAU342@00ABQAVFAutoVariableBase@@D@Z PROC ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1408 : 		{	// allocate a node with pointers, value, and color

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@PAU342@00ABQAVFAutoVariableBase@@D@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1409 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

	push	0
	push	1
	call	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Node>
	add	esp, 8
	mov	DWORD PTR __Wherenode$[ebp], eax

; 1410 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1411 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR $T225204[ebp], eax
	cmp	DWORD PTR $T225204[ebp], 0
	je	SHORT $LN4@Buynode
	mov	ecx, DWORD PTR $T225204[ebp]
	mov	edx, DWORD PTR __Larg$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T225204[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR $T225204[ebp]
	mov	eax, DWORD PTR __Rarg$[ebp]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR $T225204[ebp]
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, DWORD PTR $T225204[ebp]
	mov	dl, BYTE PTR __Carg$[ebp]
	mov	BYTE PTR [ecx+16], dl
	mov	eax, DWORD PTR $T225204[ebp]
	mov	BYTE PTR [eax+17], 0
	mov	ecx, DWORD PTR $T225204[ebp]
	mov	DWORD PTR tv86[ebp], ecx
	jmp	SHORT $LN5@Buynode
$LN4@Buynode:
	mov	DWORD PTR tv86[ebp], 0
$LN5@Buynode:
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR $T225203[ebp], edx
	jmp	SHORT $LN6@Buynode
__catch$?_Buynode@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@PAU342@00ABQAVFAutoVariableBase@@D@Z$0:

; 1412 : 		_CATCH_ALL
; 1413 : 		this->_Alnod.deallocate(_Wherenode, 1);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1414 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1415 : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@PAU342@00ABQAVFAutoVariableBase@@D@Z$1
	ret	0
$LN6@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@PAU342@00ABQAVFAutoVariableBase@@D@Z$1:

; 1416 : 		return (_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
$LN3@Buynode:

; 1417 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@PAU342@00ABQAVFAutoVariableBase@@D@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@PAU342@00ABQAVFAutoVariableBase@@D@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@2@PAU342@00ABQAVFAutoVariableBase@@D@Z ENDP ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Buynode
; Function compile flags: /Odtp
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T225281 = -16						; size = 4
$T225260 = -12						; size = 4
$T225253 = -8						; size = 4
__Pnode$202260 = -4					; size = 4
?_Dec@const_iterator@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 320  : 			{	// move to node with next smaller value

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 321  : 
; 322  :  #if _HAS_ITERATOR_DEBUGGING
; 323  : 			if (this->_Mycont == 0
; 324  : 				|| _Ptr == 0)
; 325  : 				{
; 326  : 				_DEBUG_ERROR("map/set iterator not decrementable");
; 327  : 				_SCL_SECURE_INVALID_ARGUMENT;
; 328  : 				}
; 329  :  #else
; 330  : 			_SCL_SECURE_VALIDATE(this->_Has_container());
; 331  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 332  : 
; 333  : 			if (_Isnil(_Ptr))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx+17]
	test	edx, edx
	je	SHORT $LN9@Dec

; 334  : 			{
; 335  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx], eax

; 336  :    				if (_Isnil(_Ptr))

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	movsx	eax, BYTE PTR [edx+17]
	test	eax, eax
	je	SHORT $LN8@Dec

; 337  : #if _HAS_ITERATOR_DEBUGGING
; 338  : 				{
; 339  : 					_DEBUG_ERROR("map/set iterator not decrementable");
; 340  : 					_SCL_SECURE_OUT_OF_RANGE;
; 341  : 				}
; 342  : #elif _SECURE_SCL
; 343  : 				{
; 344  :     				_SCL_SECURE_OUT_OF_RANGE;
; 345  : 				}
; 346  : #else
; 347  : 				return;	// begin() shouldn't be incremented, don't move

	jmp	$LN10@Dec
$LN8@Dec:

; 348  : #endif
; 349  : 			}

	jmp	$LN10@Dec
$LN9@Dec:

; 350  : 			else if (!_Isnil(_Left(_Ptr)))

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T225253[ebp], edx
	mov	eax, DWORD PTR $T225253[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx+17]
	test	edx, edx
	jne	SHORT $LN34@Dec

; 351  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T225260[ebp], ecx
	mov	edx, DWORD PTR $T225260[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T225281[ebp], eax
$LN30@Dec:
	mov	ecx, DWORD PTR $T225281[ebp]
	mov	edx, DWORD PTR [ecx+8]
	movsx	eax, BYTE PTR [edx+17]
	test	eax, eax
	jne	SHORT $LN26@Dec
	mov	ecx, DWORD PTR $T225281[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T225281[ebp], edx
	jmp	SHORT $LN30@Dec
$LN26@Dec:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T225281[ebp]
	mov	DWORD PTR [eax], ecx

; 352  : 			else

	jmp	SHORT $LN10@Dec

; 353  : 				{	// climb looking for left subtree
; 354  : 				_Nodeptr _Pnode;
; 355  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 356  : 					&& _Ptr == _Left(_Pnode))

$LN34@Dec:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Pnode$202260[ebp], ecx
	mov	edx, DWORD PTR __Pnode$202260[ebp]
	movsx	eax, BYTE PTR [edx+17]
	test	eax, eax
	jne	SHORT $LN40@Dec
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$202260[ebp]
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN40@Dec

; 357  : 					_Ptr = _Pnode;	// ==> parent while left subtree

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$202260[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	SHORT $LN34@Dec

; 358  : 				if (_Isnil(_Ptr))

$LN40@Dec:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx+17]
	test	edx, edx
	je	SHORT $LN2@Dec

; 359  :  #if _HAS_ITERATOR_DEBUGGING
; 360  :  					{
; 361  : 					_DEBUG_ERROR("map/set iterator not decrementable");
; 362  : 					_SCL_SECURE_OUT_OF_RANGE;
; 363  : 					}
; 364  :  #elif _SECURE_SCL
; 365  : 					{
; 366  : 					_SCL_SECURE_OUT_OF_RANGE;
; 367  : 					}
; 368  :  #else
; 369  : 					return;	// begin() shouldn't be incremented, don't move

	jmp	SHORT $LN10@Dec

; 370  :  #endif
; 371  : 				else

	jmp	SHORT $LN10@Dec
$LN2@Dec:

; 372  : 					_Ptr = _Pnode;	// ==> parent if not head

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$202260[ebp]
	mov	DWORD PTR [eax], ecx
$LN10@Dec:

; 373  : 				}
; 374  : 			}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Dec@const_iterator@?$_Tree@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R0?AVbad_alloc@std@@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
xdata$x	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_Ebad_alloc@std@@UAEPAXI@Z ; std::bad_alloc::`vftable'
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
CONST	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T225300 = -16						; size = 4
$T225296 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Node>, COMDAT

; 36   : 	{	// check for integer overflow

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 37   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate

; 38   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate
$LN3@Allocate:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 20					; 00000014H
	jae	SHORT $LN2@Allocate

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	mov	DWORD PTR $T225300[ebp], 0
	lea	eax, DWORD PTR $T225300[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225296[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR $T225296[ebp], OFFSET ??_7bad_alloc@std@@6B@
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T225296[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@Allocate:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	mov	edx, DWORD PTR __Count$[ebp]
	imul	edx, 20					; 00000014H
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate:

; 44   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAVFAutoVariableBase@@U?$less@PAVFAutoVariableBase@@@std@@V?$allocator@PAVFAutoVariableBase@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tset_traits<FAutoVariableBase *,std::less<FAutoVariableBase *>,std::allocator<FAutoVariableBase *>,0> >::_Node>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
_TEXT	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 380  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 381  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN1@scalar@3
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
END
