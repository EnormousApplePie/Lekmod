; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvBeliefClasses.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??1CvBaseInfo@@QAE@XZ				; CvBaseInfo::~CvBaseInfo
PUBLIC	__real@00000000
PUBLIC	??_7CvBeliefEntry@@6B@				; CvBeliefEntry::`vftable'
PUBLIC	??0CvBeliefEntry@@QAE@XZ			; CvBeliefEntry::CvBeliefEntry
PUBLIC	?CacheResults@CvBeliefEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z ; CvBeliefEntry::CacheResults
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	??0CvBaseInfo@@QAE@XZ:PROC			; CvBaseInfo::CvBaseInfo
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__fltused:DWORD
EXTRN	??8CvBaseInfo@@UBE_NABV0@@Z:PROC		; CvBaseInfo::operator==
EXTRN	?readFrom@CvBaseInfo@@UAEXAAVFDataStream@@@Z:PROC ; CvBaseInfo::readFrom
EXTRN	?writeTo@CvBaseInfo@@UBEXAAVFDataStream@@@Z:PROC ; CvBaseInfo::writeTo
;	COMDAT __real@00000000
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_7CvBeliefEntry@@6B@
CONST	SEGMENT
??_7CvBeliefEntry@@6B@ DD FLAT:?CacheResults@CvBeliefEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z ; CvBeliefEntry::`vftable'
	DD	FLAT:??8CvBaseInfo@@UBE_NABV0@@Z
	DD	FLAT:?readFrom@CvBaseInfo@@UAEXAAVFDataStream@@@Z
	DD	FLAT:?writeTo@CvBaseInfo@@UBEXAAVFDataStream@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CvBeliefEntry@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CvBeliefEntry@@QAE@XZ$0
__ehfuncinfo$??0CvBeliefEntry@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CvBeliefEntry@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvbeliefclasses.cpp
xdata$x	ENDS
;	COMDAT ??0CvBeliefEntry@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T219796 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CvBeliefEntry@@QAE@XZ PROC				; CvBeliefEntry::CvBeliefEntry, COMDAT
; _this$ = ecx

; 143  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CvBeliefEntry@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CvBaseInfo@@QAE@XZ			; CvBaseInfo::CvBaseInfo
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CvBeliefEntry@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+260], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+264], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+268], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+272], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+276], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+280], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+284], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+288], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+292], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+296], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+300], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+304], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+308], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+312], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+316], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+320], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+324], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+328], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+332], 0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+336], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+340], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+344], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+348], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+352], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+356], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+360], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+364], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+368], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+372], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+376], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+380], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+384], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+388], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+392], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+396], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+400], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+404], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+408], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+412], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+416], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+420], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+424], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+428], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+432], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+436], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+440], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+444], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+448], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+449], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+450], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+451], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+452], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+453], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+454], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+455], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+456], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+457], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+460], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+464], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+468], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 472				; 000001d8H
	mov	DWORD PTR $T219796[ebp], ecx
	mov	ecx, DWORD PTR $T219796[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+500], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+504], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+508], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+512], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+516], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+520], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+524], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+528], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+532], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+536], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+540], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+544], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+548], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+552], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+556], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+560], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+564], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+568], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+572], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+576], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+580], 0

; 144  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CvBeliefEntry@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CvBaseInfo@@QAE@XZ
__ehhandler$??0CvBeliefEntry@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CvBeliefEntry@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CvBeliefEntry@@QAE@XZ ENDP				; CvBeliefEntry::CvBeliefEntry
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CvBaseInfo@@QAE@XZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$??1CvBaseInfo@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1CvBaseInfo@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$7
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1CvBaseInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -52						; size = 4
$T219866 = -48						; size = 4
$T219861 = -44						; size = 4
$T219856 = -40						; size = 4
$T219851 = -36						; size = 4
$T219846 = -32						; size = 4
$T219841 = -28						; size = 4
$T219836 = -24						; size = 4
$T219831 = -20						; size = 4
$T219826 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CvBaseInfo@@QAE@XZ PROC				; CvBaseInfo::~CvBaseInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CvBaseInfo@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 232				; 000000e8H
	mov	DWORD PTR $T219826[ebp], eax
	mov	ecx, DWORD PTR $T219826[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	mov	DWORD PTR $T219831[ebp], ecx
	mov	ecx, DWORD PTR $T219831[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 176				; 000000b0H
	mov	DWORD PTR $T219836[ebp], edx
	mov	ecx, DWORD PTR $T219836[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 148				; 00000094H
	mov	DWORD PTR $T219841[ebp], eax
	mov	ecx, DWORD PTR $T219841[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	mov	DWORD PTR $T219846[ebp], ecx
	mov	ecx, DWORD PTR $T219846[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 92					; 0000005cH
	mov	DWORD PTR $T219851[ebp], edx
	mov	ecx, DWORD PTR $T219851[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	mov	DWORD PTR $T219856[ebp], eax
	mov	ecx, DWORD PTR $T219856[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	mov	DWORD PTR $T219861[ebp], ecx
	mov	ecx, DWORD PTR $T219861[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 8
	mov	DWORD PTR $T219866[ebp], edx
	mov	ecx, DWORD PTR $T219866[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 176				; 000000b0H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$??1CvBaseInfo@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CvBaseInfo@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CvBaseInfo@@QAE@XZ ENDP				; CvBaseInfo::~CvBaseInfo
PUBLIC	??1CvBeliefEntry@@QAE@XZ			; CvBeliefEntry::~CvBeliefEntry
EXTRN	?SafeDelete2DArray@CvDatabaseUtility@@SAXAAPAPAH@Z:PROC ; CvDatabaseUtility::SafeDelete2DArray
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$??1CvBeliefEntry@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvBeliefEntry@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CvBeliefEntry@@QAE@XZ$1
__ehfuncinfo$??1CvBeliefEntry@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CvBeliefEntry@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvbeliefclasses.cpp
xdata$x	ENDS
;	COMDAT ??1CvBeliefEntry@@QAE@XZ
_TEXT	SEGMENT
_this$ = -56						; size = 4
$T219881 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CvBeliefEntry@@QAE@XZ PROC				; CvBeliefEntry::~CvBeliefEntry, COMDAT
; _this$ = ecx

; 148  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CvBeliefEntry@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CvBeliefEntry@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 149  : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 150  : 	CvDatabaseUtility::SafeDelete2DArray(m_ppiImprovementYieldChanges.first, m_ppiImprovementYieldChanges.second);
; 151  : 	CvDatabaseUtility::SafeDelete2DArray(m_ppiBuildingClassYieldChanges.first, m_ppiBuildingClassYieldChanges.second);
; 152  : #ifdef AUI_BELIEF_BUILDING_CLASS_FLAVOR_MODIFIERS
; 153  : 	CvDatabaseUtility::SafeDelete2DArray(m_ppiBuildingClassFlavorChanges.first, m_ppiBuildingClassFlavorChanges.second);
; 154  : #endif
; 155  : 	CvDatabaseUtility::SafeDelete2DArray(m_ppaiFeatureYieldChange.first, m_ppaiFeatureYieldChange.second);
; 156  : 	CvDatabaseUtility::SafeDelete2DArray(m_ppaiResourceYieldChange.first, m_ppaiResourceYieldChange.second);
; 157  : 	CvDatabaseUtility::SafeDelete2DArray(m_ppaiTerrainYieldChange.first, m_ppaiTerrainYieldChange.second);
; 158  : #else
; 159  : 	CvDatabaseUtility::SafeDelete2DArray(m_ppiImprovementYieldChanges);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 520				; 00000208H
	push	ecx
	call	?SafeDelete2DArray@CvDatabaseUtility@@SAXAAPAPAH@Z ; CvDatabaseUtility::SafeDelete2DArray
	add	esp, 4

; 160  : 	CvDatabaseUtility::SafeDelete2DArray(m_ppiBuildingClassYieldChanges);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 524				; 0000020cH
	push	edx
	call	?SafeDelete2DArray@CvDatabaseUtility@@SAXAAPAPAH@Z ; CvDatabaseUtility::SafeDelete2DArray
	add	esp, 4

; 161  : #ifdef AUI_BELIEF_BUILDING_CLASS_FLAVOR_MODIFIERS
; 162  : 	CvDatabaseUtility::SafeDelete2DArray(m_ppiBuildingClassFlavorChanges);
; 163  : #endif
; 164  : 	CvDatabaseUtility::SafeDelete2DArray(m_ppaiFeatureYieldChange);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 536				; 00000218H
	push	eax
	call	?SafeDelete2DArray@CvDatabaseUtility@@SAXAAPAPAH@Z ; CvDatabaseUtility::SafeDelete2DArray
	add	esp, 4

; 165  : 	CvDatabaseUtility::SafeDelete2DArray(m_ppaiResourceYieldChange);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 540				; 0000021cH
	push	ecx
	call	?SafeDelete2DArray@CvDatabaseUtility@@SAXAAPAPAH@Z ; CvDatabaseUtility::SafeDelete2DArray
	add	esp, 4

; 166  : 	CvDatabaseUtility::SafeDelete2DArray(m_ppaiTerrainYieldChange);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 544				; 00000220H
	push	edx
	call	?SafeDelete2DArray@CvDatabaseUtility@@SAXAAPAPAH@Z ; CvDatabaseUtility::SafeDelete2DArray
	add	esp, 4

; 167  : #endif
; 168  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 472				; 000001d8H
	mov	DWORD PTR $T219881[ebp], eax
	mov	ecx, DWORD PTR $T219881[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CvBaseInfo@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CvBeliefEntry@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CvBaseInfo@@QAE@XZ
__unwindfunclet$??1CvBeliefEntry@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 472				; 000001d8H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$??1CvBeliefEntry@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CvBeliefEntry@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CvBeliefEntry@@QAE@XZ ENDP				; CvBeliefEntry::~CvBeliefEntry
PUBLIC	?GetMinPopulation@CvBeliefEntry@@QBEHXZ		; CvBeliefEntry::GetMinPopulation
; Function compile flags: /Odtp
;	COMDAT ?GetMinPopulation@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMinPopulation@CvBeliefEntry@@QBEHXZ PROC		; CvBeliefEntry::GetMinPopulation, COMDAT
; _this$ = ecx

; 172  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 173  : 	return m_iMinPopulation;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+260]

; 174  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetMinPopulation@CvBeliefEntry@@QBEHXZ ENDP		; CvBeliefEntry::GetMinPopulation
_TEXT	ENDS
PUBLIC	?GetMinFollowers@CvBeliefEntry@@QBEHXZ		; CvBeliefEntry::GetMinFollowers
; Function compile flags: /Odtp
;	COMDAT ?GetMinFollowers@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMinFollowers@CvBeliefEntry@@QBEHXZ PROC		; CvBeliefEntry::GetMinFollowers, COMDAT
; _this$ = ecx

; 178  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 179  : 	return m_iMinFollowers;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+264]

; 180  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetMinFollowers@CvBeliefEntry@@QBEHXZ ENDP		; CvBeliefEntry::GetMinFollowers
_TEXT	ENDS
PUBLIC	?GetMaxDistance@CvBeliefEntry@@QBEHXZ		; CvBeliefEntry::GetMaxDistance
; Function compile flags: /Odtp
;	COMDAT ?GetMaxDistance@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMaxDistance@CvBeliefEntry@@QBEHXZ PROC		; CvBeliefEntry::GetMaxDistance, COMDAT
; _this$ = ecx

; 184  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 	return m_iMaxDistance;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+268]

; 186  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetMaxDistance@CvBeliefEntry@@QBEHXZ ENDP		; CvBeliefEntry::GetMaxDistance
_TEXT	ENDS
PUBLIC	?GetCityGrowthModifier@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetCityGrowthModifier
; Function compile flags: /Odtp
;	COMDAT ?GetCityGrowthModifier@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCityGrowthModifier@CvBeliefEntry@@QBEHXZ PROC	; CvBeliefEntry::GetCityGrowthModifier, COMDAT
; _this$ = ecx

; 190  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 191  : 	return m_iCityGrowthModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+272]

; 192  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetCityGrowthModifier@CvBeliefEntry@@QBEHXZ ENDP	; CvBeliefEntry::GetCityGrowthModifier
_TEXT	ENDS
PUBLIC	?GetFaithFromKills@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetFaithFromKills
; Function compile flags: /Odtp
;	COMDAT ?GetFaithFromKills@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFaithFromKills@CvBeliefEntry@@QBEHXZ PROC		; CvBeliefEntry::GetFaithFromKills, COMDAT
; _this$ = ecx

; 196  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 197  : 	return m_iFaithFromKills;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+276]

; 198  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetFaithFromKills@CvBeliefEntry@@QBEHXZ ENDP		; CvBeliefEntry::GetFaithFromKills
_TEXT	ENDS
PUBLIC	?GetFaithFromDyingUnits@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetFaithFromDyingUnits
; Function compile flags: /Odtp
;	COMDAT ?GetFaithFromDyingUnits@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFaithFromDyingUnits@CvBeliefEntry@@QBEHXZ PROC	; CvBeliefEntry::GetFaithFromDyingUnits, COMDAT
; _this$ = ecx

; 202  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 203  : 	return m_iFaithFromDyingUnits;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+280]

; 204  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetFaithFromDyingUnits@CvBeliefEntry@@QBEHXZ ENDP	; CvBeliefEntry::GetFaithFromDyingUnits
_TEXT	ENDS
PUBLIC	?GetRiverHappiness@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetRiverHappiness
; Function compile flags: /Odtp
;	COMDAT ?GetRiverHappiness@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRiverHappiness@CvBeliefEntry@@QBEHXZ PROC		; CvBeliefEntry::GetRiverHappiness, COMDAT
; _this$ = ecx

; 208  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 209  : 	return m_iRiverHappiness;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+284]

; 210  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetRiverHappiness@CvBeliefEntry@@QBEHXZ ENDP		; CvBeliefEntry::GetRiverHappiness
_TEXT	ENDS
PUBLIC	?GetHappinessPerCity@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetHappinessPerCity
; Function compile flags: /Odtp
;	COMDAT ?GetHappinessPerCity@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHappinessPerCity@CvBeliefEntry@@QBEHXZ PROC		; CvBeliefEntry::GetHappinessPerCity, COMDAT
; _this$ = ecx

; 214  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 215  : 	return m_iHappinessPerCity;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+288]

; 216  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetHappinessPerCity@CvBeliefEntry@@QBEHXZ ENDP		; CvBeliefEntry::GetHappinessPerCity
_TEXT	ENDS
PUBLIC	?GetHappinessPerXPeacefulForeignFollowers@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetHappinessPerXPeacefulForeignFollowers
; Function compile flags: /Odtp
;	COMDAT ?GetHappinessPerXPeacefulForeignFollowers@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHappinessPerXPeacefulForeignFollowers@CvBeliefEntry@@QBEHXZ PROC ; CvBeliefEntry::GetHappinessPerXPeacefulForeignFollowers, COMDAT
; _this$ = ecx

; 220  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 221  : 	return m_iHappinessPerXPeacefulForeignFollowers;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+292]

; 222  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetHappinessPerXPeacefulForeignFollowers@CvBeliefEntry@@QBEHXZ ENDP ; CvBeliefEntry::GetHappinessPerXPeacefulForeignFollowers
_TEXT	ENDS
PUBLIC	?GetPlotCultureCostModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetPlotCultureCostModifier
; Function compile flags: /Odtp
;	COMDAT ?GetPlotCultureCostModifier@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPlotCultureCostModifier@CvBeliefEntry@@QBEHXZ PROC	; CvBeliefEntry::GetPlotCultureCostModifier, COMDAT
; _this$ = ecx

; 226  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 227  : 	return m_iPlotCultureCostModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+296]

; 228  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlotCultureCostModifier@CvBeliefEntry@@QBEHXZ ENDP	; CvBeliefEntry::GetPlotCultureCostModifier
_TEXT	ENDS
PUBLIC	?GetCityRangeStrikeModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCityRangeStrikeModifier
; Function compile flags: /Odtp
;	COMDAT ?GetCityRangeStrikeModifier@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCityRangeStrikeModifier@CvBeliefEntry@@QBEHXZ PROC	; CvBeliefEntry::GetCityRangeStrikeModifier, COMDAT
; _this$ = ecx

; 232  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 233  : 	return m_iCityRangeStrikeModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+300]

; 234  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetCityRangeStrikeModifier@CvBeliefEntry@@QBEHXZ ENDP	; CvBeliefEntry::GetCityRangeStrikeModifier
_TEXT	ENDS
PUBLIC	?GetCombatModifierEnemyCities@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCombatModifierEnemyCities
; Function compile flags: /Odtp
;	COMDAT ?GetCombatModifierEnemyCities@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCombatModifierEnemyCities@CvBeliefEntry@@QBEHXZ PROC ; CvBeliefEntry::GetCombatModifierEnemyCities, COMDAT
; _this$ = ecx

; 238  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 239  : 	return m_iCombatModifierEnemyCities;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+304]

; 240  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetCombatModifierEnemyCities@CvBeliefEntry@@QBEHXZ ENDP ; CvBeliefEntry::GetCombatModifierEnemyCities
_TEXT	ENDS
PUBLIC	?GetCombatModifierFriendlyCities@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCombatModifierFriendlyCities
; Function compile flags: /Odtp
;	COMDAT ?GetCombatModifierFriendlyCities@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCombatModifierFriendlyCities@CvBeliefEntry@@QBEHXZ PROC ; CvBeliefEntry::GetCombatModifierFriendlyCities, COMDAT
; _this$ = ecx

; 244  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 245  : 	return m_iCombatModifierFriendlyCities;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+308]

; 246  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetCombatModifierFriendlyCities@CvBeliefEntry@@QBEHXZ ENDP ; CvBeliefEntry::GetCombatModifierFriendlyCities
_TEXT	ENDS
PUBLIC	?GetFriendlyHealChange@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetFriendlyHealChange
; Function compile flags: /Odtp
;	COMDAT ?GetFriendlyHealChange@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFriendlyHealChange@CvBeliefEntry@@QBEHXZ PROC	; CvBeliefEntry::GetFriendlyHealChange, COMDAT
; _this$ = ecx

; 250  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 251  : 	return m_iFriendlyHealChange;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+312]

; 252  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetFriendlyHealChange@CvBeliefEntry@@QBEHXZ ENDP	; CvBeliefEntry::GetFriendlyHealChange
_TEXT	ENDS
PUBLIC	?GetCityStateFriendshipModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCityStateFriendshipModifier
; Function compile flags: /Odtp
;	COMDAT ?GetCityStateFriendshipModifier@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCityStateFriendshipModifier@CvBeliefEntry@@QBEHXZ PROC ; CvBeliefEntry::GetCityStateFriendshipModifier, COMDAT
; _this$ = ecx

; 256  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 	return m_iCityStateFriendshipModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+316]

; 258  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetCityStateFriendshipModifier@CvBeliefEntry@@QBEHXZ ENDP ; CvBeliefEntry::GetCityStateFriendshipModifier
_TEXT	ENDS
PUBLIC	?GetLandBarbarianConversionPercent@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetLandBarbarianConversionPercent
; Function compile flags: /Odtp
;	COMDAT ?GetLandBarbarianConversionPercent@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetLandBarbarianConversionPercent@CvBeliefEntry@@QBEHXZ PROC ; CvBeliefEntry::GetLandBarbarianConversionPercent, COMDAT
; _this$ = ecx

; 262  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 263  : 	return m_iLandBarbarianConversionPercent;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+320]

; 264  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetLandBarbarianConversionPercent@CvBeliefEntry@@QBEHXZ ENDP ; CvBeliefEntry::GetLandBarbarianConversionPercent
_TEXT	ENDS
PUBLIC	?GetWonderProductionModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetWonderProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?GetWonderProductionModifier@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWonderProductionModifier@CvBeliefEntry@@QBEHXZ PROC	; CvBeliefEntry::GetWonderProductionModifier, COMDAT
; _this$ = ecx

; 268  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 269  : 	return m_iWonderProductionModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+324]

; 270  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetWonderProductionModifier@CvBeliefEntry@@QBEHXZ ENDP	; CvBeliefEntry::GetWonderProductionModifier
_TEXT	ENDS
PUBLIC	?GetPlayerHappiness@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetPlayerHappiness
; Function compile flags: /Odtp
;	COMDAT ?GetPlayerHappiness@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPlayerHappiness@CvBeliefEntry@@QBEHXZ PROC		; CvBeliefEntry::GetPlayerHappiness, COMDAT
; _this$ = ecx

; 274  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 275  : 	return m_iPlayerHappiness;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+328]

; 276  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerHappiness@CvBeliefEntry@@QBEHXZ ENDP		; CvBeliefEntry::GetPlayerHappiness
_TEXT	ENDS
PUBLIC	?GetPlayerCultureModifier@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetPlayerCultureModifier
; Function compile flags: /Odtp
;	COMDAT ?GetPlayerCultureModifier@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPlayerCultureModifier@CvBeliefEntry@@QBEHXZ PROC	; CvBeliefEntry::GetPlayerCultureModifier, COMDAT
; _this$ = ecx

; 280  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 281  : 	return m_iPlayerCultureModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+332]

; 282  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerCultureModifier@CvBeliefEntry@@QBEHXZ ENDP	; CvBeliefEntry::GetPlayerCultureModifier
_TEXT	ENDS
PUBLIC	?GetHappinessPerFollowingCity@CvBeliefEntry@@QBEMXZ ; CvBeliefEntry::GetHappinessPerFollowingCity
; Function compile flags: /Odtp
;	COMDAT ?GetHappinessPerFollowingCity@CvBeliefEntry@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHappinessPerFollowingCity@CvBeliefEntry@@QBEMXZ PROC ; CvBeliefEntry::GetHappinessPerFollowingCity, COMDAT
; _this$ = ecx

; 286  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 287  : 	return m_fHappinessPerFollowingCity;

	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+336]

; 288  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetHappinessPerFollowingCity@CvBeliefEntry@@QBEMXZ ENDP ; CvBeliefEntry::GetHappinessPerFollowingCity
_TEXT	ENDS
PUBLIC	?GetGoldPerFollowingCity@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetGoldPerFollowingCity
; Function compile flags: /Odtp
;	COMDAT ?GetGoldPerFollowingCity@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGoldPerFollowingCity@CvBeliefEntry@@QBEHXZ PROC	; CvBeliefEntry::GetGoldPerFollowingCity, COMDAT
; _this$ = ecx

; 292  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 293  : 	return m_iGoldPerFollowingCity;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+340]

; 294  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetGoldPerFollowingCity@CvBeliefEntry@@QBEHXZ ENDP	; CvBeliefEntry::GetGoldPerFollowingCity
_TEXT	ENDS
PUBLIC	?GetGoldPerXFollowers@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetGoldPerXFollowers
; Function compile flags: /Odtp
;	COMDAT ?GetGoldPerXFollowers@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGoldPerXFollowers@CvBeliefEntry@@QBEHXZ PROC	; CvBeliefEntry::GetGoldPerXFollowers, COMDAT
; _this$ = ecx

; 298  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 299  : 	return m_iGoldPerXFollowers;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+344]

; 300  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetGoldPerXFollowers@CvBeliefEntry@@QBEHXZ ENDP	; CvBeliefEntry::GetGoldPerXFollowers
_TEXT	ENDS
PUBLIC	?GetGoldWhenCityAdopts@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetGoldWhenCityAdopts
; Function compile flags: /Odtp
;	COMDAT ?GetGoldWhenCityAdopts@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGoldWhenCityAdopts@CvBeliefEntry@@QBEHXZ PROC	; CvBeliefEntry::GetGoldWhenCityAdopts, COMDAT
; _this$ = ecx

; 304  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 305  : 	return m_iGoldWhenCityAdopts;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+348]

; 306  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetGoldWhenCityAdopts@CvBeliefEntry@@QBEHXZ ENDP	; CvBeliefEntry::GetGoldWhenCityAdopts
_TEXT	ENDS
PUBLIC	?GetSciencePerOtherReligionFollower@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSciencePerOtherReligionFollower
; Function compile flags: /Odtp
;	COMDAT ?GetSciencePerOtherReligionFollower@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSciencePerOtherReligionFollower@CvBeliefEntry@@QBEHXZ PROC ; CvBeliefEntry::GetSciencePerOtherReligionFollower, COMDAT
; _this$ = ecx

; 310  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 311  : 	return m_iSciencePerOtherReligionFollower;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+352]

; 312  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetSciencePerOtherReligionFollower@CvBeliefEntry@@QBEHXZ ENDP ; CvBeliefEntry::GetSciencePerOtherReligionFollower
_TEXT	ENDS
PUBLIC	?GetSpreadDistanceModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSpreadDistanceModifier
; Function compile flags: /Odtp
;	COMDAT ?GetSpreadDistanceModifier@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSpreadDistanceModifier@CvBeliefEntry@@QBEHXZ PROC	; CvBeliefEntry::GetSpreadDistanceModifier, COMDAT
; _this$ = ecx

; 316  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 317  : 	return m_iSpreadDistanceModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+356]

; 318  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetSpreadDistanceModifier@CvBeliefEntry@@QBEHXZ ENDP	; CvBeliefEntry::GetSpreadDistanceModifier
_TEXT	ENDS
PUBLIC	?GetSpreadStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSpreadStrengthModifier
; Function compile flags: /Odtp
;	COMDAT ?GetSpreadStrengthModifier@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSpreadStrengthModifier@CvBeliefEntry@@QBEHXZ PROC	; CvBeliefEntry::GetSpreadStrengthModifier, COMDAT
; _this$ = ecx

; 322  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 323  : 	return m_iSpreadStrengthModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+360]

; 324  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetSpreadStrengthModifier@CvBeliefEntry@@QBEHXZ ENDP	; CvBeliefEntry::GetSpreadStrengthModifier
_TEXT	ENDS
PUBLIC	?GetProphetStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetProphetStrengthModifier
; Function compile flags: /Odtp
;	COMDAT ?GetProphetStrengthModifier@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetProphetStrengthModifier@CvBeliefEntry@@QBEHXZ PROC	; CvBeliefEntry::GetProphetStrengthModifier, COMDAT
; _this$ = ecx

; 328  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 329  : 	return m_iProphetStrengthModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+364]

; 330  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetProphetStrengthModifier@CvBeliefEntry@@QBEHXZ ENDP	; CvBeliefEntry::GetProphetStrengthModifier
_TEXT	ENDS
PUBLIC	?GetProphetCostModifier@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetProphetCostModifier
; Function compile flags: /Odtp
;	COMDAT ?GetProphetCostModifier@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetProphetCostModifier@CvBeliefEntry@@QBEHXZ PROC	; CvBeliefEntry::GetProphetCostModifier, COMDAT
; _this$ = ecx

; 334  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 335  : 	return m_iProphetCostModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+368]

; 336  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetProphetCostModifier@CvBeliefEntry@@QBEHXZ ENDP	; CvBeliefEntry::GetProphetCostModifier
_TEXT	ENDS
PUBLIC	?GetMissionaryStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetMissionaryStrengthModifier
; Function compile flags: /Odtp
;	COMDAT ?GetMissionaryStrengthModifier@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMissionaryStrengthModifier@CvBeliefEntry@@QBEHXZ PROC ; CvBeliefEntry::GetMissionaryStrengthModifier, COMDAT
; _this$ = ecx

; 340  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 341  : 	return m_iMissionaryStrengthModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+372]

; 342  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetMissionaryStrengthModifier@CvBeliefEntry@@QBEHXZ ENDP ; CvBeliefEntry::GetMissionaryStrengthModifier
_TEXT	ENDS
PUBLIC	?GetFlatFaithPerCitizenBorn@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFlatFaithPerCitizenBorn
; Function compile flags: /Odtp
;	COMDAT ?GetFlatFaithPerCitizenBorn@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFlatFaithPerCitizenBorn@CvBeliefEntry@@QBEHXZ PROC	; CvBeliefEntry::GetFlatFaithPerCitizenBorn, COMDAT
; _this$ = ecx

; 347  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 348  : 	return m_iFlatFaithPerCitizenBorn;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+376]

; 349  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetFlatFaithPerCitizenBorn@CvBeliefEntry@@QBEHXZ ENDP	; CvBeliefEntry::GetFlatFaithPerCitizenBorn
_TEXT	ENDS
PUBLIC	?GetMissionaryExtraSpreads@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetMissionaryExtraSpreads
; Function compile flags: /Odtp
;	COMDAT ?GetMissionaryExtraSpreads@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMissionaryExtraSpreads@CvBeliefEntry@@QBEHXZ PROC	; CvBeliefEntry::GetMissionaryExtraSpreads, COMDAT
; _this$ = ecx

; 355  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 356  : 	return m_iMissionaryExtraSpreads;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+380]

; 357  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetMissionaryExtraSpreads@CvBeliefEntry@@QBEHXZ ENDP	; CvBeliefEntry::GetMissionaryExtraSpreads
_TEXT	ENDS
PUBLIC	?GetSpreadModifierOwnedCities@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSpreadModifierOwnedCities
; Function compile flags: /Odtp
;	COMDAT ?GetSpreadModifierOwnedCities@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSpreadModifierOwnedCities@CvBeliefEntry@@QBEHXZ PROC ; CvBeliefEntry::GetSpreadModifierOwnedCities, COMDAT
; _this$ = ecx

; 363  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 364  : 	return m_iSpreadModifierOwnedCities;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+384]

; 365  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetSpreadModifierOwnedCities@CvBeliefEntry@@QBEHXZ ENDP ; CvBeliefEntry::GetSpreadModifierOwnedCities
_TEXT	ENDS
PUBLIC	?GetSpreadModifierUnownedCities@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSpreadModifierUnownedCities
; Function compile flags: /Odtp
;	COMDAT ?GetSpreadModifierUnownedCities@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSpreadModifierUnownedCities@CvBeliefEntry@@QBEHXZ PROC ; CvBeliefEntry::GetSpreadModifierUnownedCities, COMDAT
; _this$ = ecx

; 369  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 370  : 	return m_iSpreadModifierUnownedCities;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+388]

; 371  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetSpreadModifierUnownedCities@CvBeliefEntry@@QBEHXZ ENDP ; CvBeliefEntry::GetSpreadModifierUnownedCities
_TEXT	ENDS
PUBLIC	?GetExtraTradeRoutes@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetExtraTradeRoutes
; Function compile flags: /Odtp
;	COMDAT ?GetExtraTradeRoutes@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetExtraTradeRoutes@CvBeliefEntry@@QBEHXZ PROC		; CvBeliefEntry::GetExtraTradeRoutes, COMDAT
; _this$ = ecx

; 377  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 378  : 	return m_iExtraTradeRoutes;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+392]

; 379  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetExtraTradeRoutes@CvBeliefEntry@@QBEHXZ ENDP		; CvBeliefEntry::GetExtraTradeRoutes
_TEXT	ENDS
PUBLIC	?GetFaithPerCityStateThisReligion@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFaithPerCityStateThisReligion
; Function compile flags: /Odtp
;	COMDAT ?GetFaithPerCityStateThisReligion@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFaithPerCityStateThisReligion@CvBeliefEntry@@QBEHXZ PROC ; CvBeliefEntry::GetFaithPerCityStateThisReligion, COMDAT
; _this$ = ecx

; 385  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 386  : 	return m_iFaithPerCityStateThisReligion;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+396]

; 387  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetFaithPerCityStateThisReligion@CvBeliefEntry@@QBEHXZ ENDP ; CvBeliefEntry::GetFaithPerCityStateThisReligion
_TEXT	ENDS
PUBLIC	?GetFaithPerForeignTradeRoute@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFaithPerForeignTradeRoute
; Function compile flags: /Odtp
;	COMDAT ?GetFaithPerForeignTradeRoute@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFaithPerForeignTradeRoute@CvBeliefEntry@@QBEHXZ PROC ; CvBeliefEntry::GetFaithPerForeignTradeRoute, COMDAT
; _this$ = ecx

; 393  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 394  : 	return m_iFaithPerForeignTradeRoute;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+400]

; 395  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetFaithPerForeignTradeRoute@CvBeliefEntry@@QBEHXZ ENDP ; CvBeliefEntry::GetFaithPerForeignTradeRoute
_TEXT	ENDS
PUBLIC	?GetGoldenAgeTurns@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetGoldenAgeTurns
; Function compile flags: /Odtp
;	COMDAT ?GetGoldenAgeTurns@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGoldenAgeTurns@CvBeliefEntry@@QBEHXZ PROC		; CvBeliefEntry::GetGoldenAgeTurns, COMDAT
; _this$ = ecx

; 401  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return m_iGoldenAgeTurns;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+404]

; 403  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetGoldenAgeTurns@CvBeliefEntry@@QBEHXZ ENDP		; CvBeliefEntry::GetGoldenAgeTurns
_TEXT	ENDS
PUBLIC	?GetMissionaryCostModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetMissionaryCostModifier
; Function compile flags: /Odtp
;	COMDAT ?GetMissionaryCostModifier@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMissionaryCostModifier@CvBeliefEntry@@QBEHXZ PROC	; CvBeliefEntry::GetMissionaryCostModifier, COMDAT
; _this$ = ecx

; 408  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return m_iMissionaryCostModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+408]

; 410  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetMissionaryCostModifier@CvBeliefEntry@@QBEHXZ ENDP	; CvBeliefEntry::GetMissionaryCostModifier
_TEXT	ENDS
PUBLIC	?GetFriendlyCityStateSpreadModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFriendlyCityStateSpreadModifier
; Function compile flags: /Odtp
;	COMDAT ?GetFriendlyCityStateSpreadModifier@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFriendlyCityStateSpreadModifier@CvBeliefEntry@@QBEHXZ PROC ; CvBeliefEntry::GetFriendlyCityStateSpreadModifier, COMDAT
; _this$ = ecx

; 414  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 415  : 	return m_iFriendlyCityStateSpreadModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+412]

; 416  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetFriendlyCityStateSpreadModifier@CvBeliefEntry@@QBEHXZ ENDP ; CvBeliefEntry::GetFriendlyCityStateSpreadModifier
_TEXT	ENDS
PUBLIC	?GetGreatPersonExpendedFaith@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetGreatPersonExpendedFaith
; Function compile flags: /Odtp
;	COMDAT ?GetGreatPersonExpendedFaith@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGreatPersonExpendedFaith@CvBeliefEntry@@QBEHXZ PROC	; CvBeliefEntry::GetGreatPersonExpendedFaith, COMDAT
; _this$ = ecx

; 420  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 421  : 	return m_iGreatPersonExpendedFaith;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+416]

; 422  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetGreatPersonExpendedFaith@CvBeliefEntry@@QBEHXZ ENDP	; CvBeliefEntry::GetGreatPersonExpendedFaith
_TEXT	ENDS
PUBLIC	?GetCityStateMinimumInfluence@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCityStateMinimumInfluence
; Function compile flags: /Odtp
;	COMDAT ?GetCityStateMinimumInfluence@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCityStateMinimumInfluence@CvBeliefEntry@@QBEHXZ PROC ; CvBeliefEntry::GetCityStateMinimumInfluence, COMDAT
; _this$ = ecx

; 426  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 427  : 	return m_iCityStateMinimumInfluence;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+420]

; 428  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetCityStateMinimumInfluence@CvBeliefEntry@@QBEHXZ ENDP ; CvBeliefEntry::GetCityStateMinimumInfluence
_TEXT	ENDS
PUBLIC	?GetCityStateInfluenceModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCityStateInfluenceModifier
; Function compile flags: /Odtp
;	COMDAT ?GetCityStateInfluenceModifier@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCityStateInfluenceModifier@CvBeliefEntry@@QBEHXZ PROC ; CvBeliefEntry::GetCityStateInfluenceModifier, COMDAT
; _this$ = ecx

; 432  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 433  : 	return m_iCityStateInfluenceModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+424]

; 434  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetCityStateInfluenceModifier@CvBeliefEntry@@QBEHXZ ENDP ; CvBeliefEntry::GetCityStateInfluenceModifier
_TEXT	ENDS
PUBLIC	?GetOtherReligionPressureErosion@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetOtherReligionPressureErosion
; Function compile flags: /Odtp
;	COMDAT ?GetOtherReligionPressureErosion@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetOtherReligionPressureErosion@CvBeliefEntry@@QBEHXZ PROC ; CvBeliefEntry::GetOtherReligionPressureErosion, COMDAT
; _this$ = ecx

; 438  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 439  : 	return m_iOtherReligionPressureErosion;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+428]

; 440  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetOtherReligionPressureErosion@CvBeliefEntry@@QBEHXZ ENDP ; CvBeliefEntry::GetOtherReligionPressureErosion
_TEXT	ENDS
PUBLIC	?GetSpyPressure@CvBeliefEntry@@QBEHXZ		; CvBeliefEntry::GetSpyPressure
; Function compile flags: /Odtp
;	COMDAT ?GetSpyPressure@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSpyPressure@CvBeliefEntry@@QBEHXZ PROC		; CvBeliefEntry::GetSpyPressure, COMDAT
; _this$ = ecx

; 444  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 445  : 	return m_iSpyPressure;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+432]

; 446  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetSpyPressure@CvBeliefEntry@@QBEHXZ ENDP		; CvBeliefEntry::GetSpyPressure
_TEXT	ENDS
PUBLIC	?GetInquisitorPressureRetention@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetInquisitorPressureRetention
; Function compile flags: /Odtp
;	COMDAT ?GetInquisitorPressureRetention@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetInquisitorPressureRetention@CvBeliefEntry@@QBEHXZ PROC ; CvBeliefEntry::GetInquisitorPressureRetention, COMDAT
; _this$ = ecx

; 450  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 451  : 	return m_iInquisitorPressureRetention;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+436]

; 452  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInquisitorPressureRetention@CvBeliefEntry@@QBEHXZ ENDP ; CvBeliefEntry::GetInquisitorPressureRetention
_TEXT	ENDS
PUBLIC	?GetFaithBuildingTourism@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetFaithBuildingTourism
; Function compile flags: /Odtp
;	COMDAT ?GetFaithBuildingTourism@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFaithBuildingTourism@CvBeliefEntry@@QBEHXZ PROC	; CvBeliefEntry::GetFaithBuildingTourism, COMDAT
; _this$ = ecx

; 456  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 457  : 	return m_iFaithBuildingTourism;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+440]

; 458  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetFaithBuildingTourism@CvBeliefEntry@@QBEHXZ ENDP	; CvBeliefEntry::GetFaithBuildingTourism
_TEXT	ENDS
PUBLIC	?GetNumFreeSettlers@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetNumFreeSettlers
; Function compile flags: /Odtp
;	COMDAT ?GetNumFreeSettlers@CvBeliefEntry@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNumFreeSettlers@CvBeliefEntry@@QBEHXZ PROC		; CvBeliefEntry::GetNumFreeSettlers, COMDAT
; _this$ = ecx

; 463  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 464  : 	return m_iNumFreeSettlers;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+444]

; 465  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumFreeSettlers@CvBeliefEntry@@QBEHXZ ENDP		; CvBeliefEntry::GetNumFreeSettlers
_TEXT	ENDS
PUBLIC	?IsPantheonBelief@CvBeliefEntry@@QBE_NXZ	; CvBeliefEntry::IsPantheonBelief
; Function compile flags: /Odtp
;	COMDAT ?IsPantheonBelief@CvBeliefEntry@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsPantheonBelief@CvBeliefEntry@@QBE_NXZ PROC		; CvBeliefEntry::IsPantheonBelief, COMDAT
; _this$ = ecx

; 470  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 471  : 	return m_bPantheon;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+448]

; 472  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsPantheonBelief@CvBeliefEntry@@QBE_NXZ ENDP		; CvBeliefEntry::IsPantheonBelief
_TEXT	ENDS
PUBLIC	?IsFounderBelief@CvBeliefEntry@@QBE_NXZ		; CvBeliefEntry::IsFounderBelief
; Function compile flags: /Odtp
;	COMDAT ?IsFounderBelief@CvBeliefEntry@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsFounderBelief@CvBeliefEntry@@QBE_NXZ PROC		; CvBeliefEntry::IsFounderBelief, COMDAT
; _this$ = ecx

; 476  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 477  : 	return m_bFounder;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+449]

; 478  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsFounderBelief@CvBeliefEntry@@QBE_NXZ ENDP		; CvBeliefEntry::IsFounderBelief
_TEXT	ENDS
PUBLIC	?IsFollowerBelief@CvBeliefEntry@@QBE_NXZ	; CvBeliefEntry::IsFollowerBelief
; Function compile flags: /Odtp
;	COMDAT ?IsFollowerBelief@CvBeliefEntry@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsFollowerBelief@CvBeliefEntry@@QBE_NXZ PROC		; CvBeliefEntry::IsFollowerBelief, COMDAT
; _this$ = ecx

; 482  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 483  : 	return m_bFollower;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+450]

; 484  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsFollowerBelief@CvBeliefEntry@@QBE_NXZ ENDP		; CvBeliefEntry::IsFollowerBelief
_TEXT	ENDS
PUBLIC	?IsEnhancerBelief@CvBeliefEntry@@QBE_NXZ	; CvBeliefEntry::IsEnhancerBelief
; Function compile flags: /Odtp
;	COMDAT ?IsEnhancerBelief@CvBeliefEntry@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEnhancerBelief@CvBeliefEntry@@QBE_NXZ PROC		; CvBeliefEntry::IsEnhancerBelief, COMDAT
; _this$ = ecx

; 488  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 489  : 	return m_bEnhancer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+451]

; 490  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsEnhancerBelief@CvBeliefEntry@@QBE_NXZ ENDP		; CvBeliefEntry::IsEnhancerBelief
_TEXT	ENDS
PUBLIC	?IsReformationBelief@CvBeliefEntry@@QBE_NXZ	; CvBeliefEntry::IsReformationBelief
; Function compile flags: /Odtp
;	COMDAT ?IsReformationBelief@CvBeliefEntry@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsReformationBelief@CvBeliefEntry@@QBE_NXZ PROC	; CvBeliefEntry::IsReformationBelief, COMDAT
; _this$ = ecx

; 494  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 495  : 	return m_bReformer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+452]

; 496  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsReformationBelief@CvBeliefEntry@@QBE_NXZ ENDP	; CvBeliefEntry::IsReformationBelief
_TEXT	ENDS
PUBLIC	?RequiresPeace@CvBeliefEntry@@QBE_NXZ		; CvBeliefEntry::RequiresPeace
; Function compile flags: /Odtp
;	COMDAT ?RequiresPeace@CvBeliefEntry@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?RequiresPeace@CvBeliefEntry@@QBE_NXZ PROC		; CvBeliefEntry::RequiresPeace, COMDAT
; _this$ = ecx

; 500  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 501  : 	return m_bRequiresPeace;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+453]

; 502  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?RequiresPeace@CvBeliefEntry@@QBE_NXZ ENDP		; CvBeliefEntry::RequiresPeace
_TEXT	ENDS
PUBLIC	?ConvertsBarbarians@CvBeliefEntry@@QBE_NXZ	; CvBeliefEntry::ConvertsBarbarians
; Function compile flags: /Odtp
;	COMDAT ?ConvertsBarbarians@CvBeliefEntry@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ConvertsBarbarians@CvBeliefEntry@@QBE_NXZ PROC		; CvBeliefEntry::ConvertsBarbarians, COMDAT
; _this$ = ecx

; 506  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 507  : 	return m_bConvertsBarbarians;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+454]

; 508  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ConvertsBarbarians@CvBeliefEntry@@QBE_NXZ ENDP		; CvBeliefEntry::ConvertsBarbarians
_TEXT	ENDS
PUBLIC	?DeusVult@CvBeliefEntry@@QBE_NXZ		; CvBeliefEntry::DeusVult
; Function compile flags: /Odtp
;	COMDAT ?DeusVult@CvBeliefEntry@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DeusVult@CvBeliefEntry@@QBE_NXZ PROC			; CvBeliefEntry::DeusVult, COMDAT
; _this$ = ecx

; 513  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 514  : 	return m_bDeusVult;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+455]

; 515  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DeusVult@CvBeliefEntry@@QBE_NXZ ENDP			; CvBeliefEntry::DeusVult
_TEXT	ENDS
PUBLIC	?FaithPurchaseAllGreatPeople@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::FaithPurchaseAllGreatPeople
; Function compile flags: /Odtp
;	COMDAT ?FaithPurchaseAllGreatPeople@CvBeliefEntry@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FaithPurchaseAllGreatPeople@CvBeliefEntry@@QBE_NXZ PROC ; CvBeliefEntry::FaithPurchaseAllGreatPeople, COMDAT
; _this$ = ecx

; 520  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 521  : 	return m_bFaithPurchaseAllGreatPeople;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+456]

; 522  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?FaithPurchaseAllGreatPeople@CvBeliefEntry@@QBE_NXZ ENDP ; CvBeliefEntry::FaithPurchaseAllGreatPeople
_TEXT	ENDS
PUBLIC	?AllowsFaithGiftsToMinors@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::AllowsFaithGiftsToMinors
; Function compile flags: /Odtp
;	COMDAT ?AllowsFaithGiftsToMinors@CvBeliefEntry@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AllowsFaithGiftsToMinors@CvBeliefEntry@@QBE_NXZ PROC	; CvBeliefEntry::AllowsFaithGiftsToMinors, COMDAT
; _this$ = ecx

; 527  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 528  : 	return m_bAllowsFaithGiftsToMinors;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+457]

; 529  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?AllowsFaithGiftsToMinors@CvBeliefEntry@@QBE_NXZ ENDP	; CvBeliefEntry::AllowsFaithGiftsToMinors
_TEXT	ENDS
PUBLIC	?GetObsoleteEra@CvBeliefEntry@@QBE?AW4EraTypes@@XZ ; CvBeliefEntry::GetObsoleteEra
; Function compile flags: /Odtp
;	COMDAT ?GetObsoleteEra@CvBeliefEntry@@QBE?AW4EraTypes@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetObsoleteEra@CvBeliefEntry@@QBE?AW4EraTypes@@XZ PROC	; CvBeliefEntry::GetObsoleteEra, COMDAT
; _this$ = ecx

; 534  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 535  : 	return m_eObsoleteEra;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+460]

; 536  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetObsoleteEra@CvBeliefEntry@@QBE?AW4EraTypes@@XZ ENDP	; CvBeliefEntry::GetObsoleteEra
_TEXT	ENDS
PUBLIC	?GetResourceRevealed@CvBeliefEntry@@QBE?AW4ResourceTypes@@XZ ; CvBeliefEntry::GetResourceRevealed
; Function compile flags: /Odtp
;	COMDAT ?GetResourceRevealed@CvBeliefEntry@@QBE?AW4ResourceTypes@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetResourceRevealed@CvBeliefEntry@@QBE?AW4ResourceTypes@@XZ PROC ; CvBeliefEntry::GetResourceRevealed, COMDAT
; _this$ = ecx

; 540  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 541  : 	return m_eResourceRevealed;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+464]

; 542  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetResourceRevealed@CvBeliefEntry@@QBE?AW4ResourceTypes@@XZ ENDP ; CvBeliefEntry::GetResourceRevealed
_TEXT	ENDS
PUBLIC	?GetSpreadModifierDoublingTech@CvBeliefEntry@@QBE?AW4TechTypes@@XZ ; CvBeliefEntry::GetSpreadModifierDoublingTech
; Function compile flags: /Odtp
;	COMDAT ?GetSpreadModifierDoublingTech@CvBeliefEntry@@QBE?AW4TechTypes@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSpreadModifierDoublingTech@CvBeliefEntry@@QBE?AW4TechTypes@@XZ PROC ; CvBeliefEntry::GetSpreadModifierDoublingTech, COMDAT
; _this$ = ecx

; 546  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 547  : 	return m_eSpreadModifierDoublingTech;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+468]

; 548  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetSpreadModifierDoublingTech@CvBeliefEntry@@QBE?AW4TechTypes@@XZ ENDP ; CvBeliefEntry::GetSpreadModifierDoublingTech
_TEXT	ENDS
PUBLIC	?getShortDescription@CvBeliefEntry@@QBEPBDXZ	; CvBeliefEntry::getShortDescription
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
; Function compile flags: /Odtp
;	COMDAT ?getShortDescription@CvBeliefEntry@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getShortDescription@CvBeliefEntry@@QBEPBDXZ PROC	; CvBeliefEntry::getShortDescription, COMDAT
; _this$ = ecx

; 552  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 	return m_strShortDescription;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 472				; 000001d8H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 554  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?getShortDescription@CvBeliefEntry@@QBEPBDXZ ENDP	; CvBeliefEntry::getShortDescription
_TEXT	ENDS
PUBLIC	?setShortDescription@CvBeliefEntry@@QAEXPBD@Z	; CvBeliefEntry::setShortDescription
EXTRN	__imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ:PROC
EXTRN	__imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z:PROC
; Function compile flags: /Odtp
;	COMDAT ?setShortDescription@CvBeliefEntry@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T220075 = -4						; size = 4
_szVal$ = 8						; size = 4
?setShortDescription@CvBeliefEntry@@QAEXPBD@Z PROC	; CvBeliefEntry::setShortDescription, COMDAT
; _this$ = ecx

; 558  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 559  : 	m_strShortDescription = szVal;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 472				; 000001d8H
	mov	DWORD PTR $T220075[ebp], eax
	cmp	DWORD PTR _szVal$[ebp], 0
	je	SHORT $LN4@setShortDe
	mov	ecx, DWORD PTR _szVal$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T220075[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN1@setShortDe
$LN4@setShortDe:
	mov	ecx, DWORD PTR $T220075[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN1@setShortDe:

; 560  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?setShortDescription@CvBeliefEntry@@QAEXPBD@Z ENDP	; CvBeliefEntry::setShortDescription
_TEXT	ENDS
PUBLIC	?GetCityYieldChange@CvBeliefEntry@@QBEHH@Z	; CvBeliefEntry::GetCityYieldChange
; Function compile flags: /Odtp
;	COMDAT ?GetCityYieldChange@CvBeliefEntry@@QBEHH@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?GetCityYieldChange@CvBeliefEntry@@QBEHH@Z PROC		; CvBeliefEntry::GetCityYieldChange, COMDAT
; _this$ = ecx

; 564  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 565  : 	return m_paiCityYieldChange ? m_paiCityYieldChange[i] : -1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+500], 0
	je	SHORT $LN3@GetCityYie
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+500]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@GetCityYie
$LN3@GetCityYie:
	mov	DWORD PTR tv69[ebp], -1
$LN4@GetCityYie:
	mov	eax, DWORD PTR tv69[ebp]

; 566  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetCityYieldChange@CvBeliefEntry@@QBEHH@Z ENDP		; CvBeliefEntry::GetCityYieldChange
_TEXT	ENDS
PUBLIC	?GetHolyCityYieldChange@CvBeliefEntry@@QBEHH@Z	; CvBeliefEntry::GetHolyCityYieldChange
; Function compile flags: /Odtp
;	COMDAT ?GetHolyCityYieldChange@CvBeliefEntry@@QBEHH@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?GetHolyCityYieldChange@CvBeliefEntry@@QBEHH@Z PROC	; CvBeliefEntry::GetHolyCityYieldChange, COMDAT
; _this$ = ecx

; 570  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 571  : 	return m_paiHolyCityYieldChange ? m_paiHolyCityYieldChange[i] : -1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+504], 0
	je	SHORT $LN3@GetHolyCit
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+504]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@GetHolyCit
$LN3@GetHolyCit:
	mov	DWORD PTR tv69[ebp], -1
$LN4@GetHolyCit:
	mov	eax, DWORD PTR tv69[ebp]

; 572  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetHolyCityYieldChange@CvBeliefEntry@@QBEHH@Z ENDP	; CvBeliefEntry::GetHolyCityYieldChange
_TEXT	ENDS
PUBLIC	?GetYieldChangePerForeignCity@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangePerForeignCity
; Function compile flags: /Odtp
;	COMDAT ?GetYieldChangePerForeignCity@CvBeliefEntry@@QBEHH@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?GetYieldChangePerForeignCity@CvBeliefEntry@@QBEHH@Z PROC ; CvBeliefEntry::GetYieldChangePerForeignCity, COMDAT
; _this$ = ecx

; 576  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 577  : 	return m_paiYieldChangePerForeignCity ? m_paiYieldChangePerForeignCity[i] : -1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+508], 0
	je	SHORT $LN3@GetYieldCh
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+508]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@GetYieldCh
$LN3@GetYieldCh:
	mov	DWORD PTR tv69[ebp], -1
$LN4@GetYieldCh:
	mov	eax, DWORD PTR tv69[ebp]

; 578  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetYieldChangePerForeignCity@CvBeliefEntry@@QBEHH@Z ENDP ; CvBeliefEntry::GetYieldChangePerForeignCity
_TEXT	ENDS
PUBLIC	?GetYieldChangePerXForeignFollowers@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangePerXForeignFollowers
; Function compile flags: /Odtp
;	COMDAT ?GetYieldChangePerXForeignFollowers@CvBeliefEntry@@QBEHH@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?GetYieldChangePerXForeignFollowers@CvBeliefEntry@@QBEHH@Z PROC ; CvBeliefEntry::GetYieldChangePerXForeignFollowers, COMDAT
; _this$ = ecx

; 582  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 583  : 	return m_paiYieldChangePerXForeignFollowers ? m_paiYieldChangePerXForeignFollowers[i] : -1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+512], 0
	je	SHORT $LN3@GetYieldCh@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+512]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@GetYieldCh@2
$LN3@GetYieldCh@2:
	mov	DWORD PTR tv69[ebp], -1
$LN4@GetYieldCh@2:
	mov	eax, DWORD PTR tv69[ebp]

; 584  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetYieldChangePerXForeignFollowers@CvBeliefEntry@@QBEHH@Z ENDP ; CvBeliefEntry::GetYieldChangePerXForeignFollowers
_TEXT	ENDS
PUBLIC	?GetResourceQuantityModifier@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetResourceQuantityModifier
; Function compile flags: /Odtp
;	COMDAT ?GetResourceQuantityModifier@CvBeliefEntry@@QBEHH@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?GetResourceQuantityModifier@CvBeliefEntry@@QBEHH@Z PROC ; CvBeliefEntry::GetResourceQuantityModifier, COMDAT
; _this$ = ecx

; 588  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 589  : 	CvAssertMsg(i < GC.getNumResourceInfos(), "Index out of bounds");
; 590  : 	CvAssertMsg(i > -1, "Index out of bounds");
; 591  : 	return m_piResourceQuantityModifiers ? m_piResourceQuantityModifiers[i] : -1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+516], 0
	je	SHORT $LN3@GetResourc
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+516]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@GetResourc
$LN3@GetResourc:
	mov	DWORD PTR tv69[ebp], -1
$LN4@GetResourc:
	mov	eax, DWORD PTR tv69[ebp]

; 592  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetResourceQuantityModifier@CvBeliefEntry@@QBEHH@Z ENDP ; CvBeliefEntry::GetResourceQuantityModifier
_TEXT	ENDS
PUBLIC	?GetImprovementYieldChange@CvBeliefEntry@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z ; CvBeliefEntry::GetImprovementYieldChange
; Function compile flags: /Odtp
;	COMDAT ?GetImprovementYieldChange@CvBeliefEntry@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
_this$ = -4						; size = 4
_eIndex1$ = 8						; size = 4
_eIndex2$ = 12						; size = 4
?GetImprovementYieldChange@CvBeliefEntry@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z PROC ; CvBeliefEntry::GetImprovementYieldChange, COMDAT
; _this$ = ecx

; 596  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 597  : 	CvAssertMsg(eIndex1 < GC.getNumImprovementInfos(), "Index out of bounds");
; 598  : 	CvAssertMsg(eIndex1 > -1, "Index out of bounds");
; 599  : 	CvAssertMsg(eIndex2 < NUM_YIELD_TYPES, "Index out of bounds");
; 600  : 	CvAssertMsg(eIndex2 > -1, "Index out of bounds");
; 601  : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 602  : 	return m_ppiImprovementYieldChanges.first ? m_ppiImprovementYieldChanges.first[eIndex1][eIndex2] : 0;
; 603  : #else
; 604  : 	return m_ppiImprovementYieldChanges ? m_ppiImprovementYieldChanges[eIndex1][eIndex2] : 0;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+520], 0
	je	SHORT $LN3@GetImprove
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+520]
	mov	eax, DWORD PTR _eIndex1$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	edx, DWORD PTR _eIndex2$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@GetImprove
$LN3@GetImprove:
	mov	DWORD PTR tv71[ebp], 0
$LN4@GetImprove:
	mov	eax, DWORD PTR tv71[ebp]

; 605  : #endif
; 606  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetImprovementYieldChange@CvBeliefEntry@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z ENDP ; CvBeliefEntry::GetImprovementYieldChange
_TEXT	ENDS
PUBLIC	?GetBuildingClassYieldChange@CvBeliefEntry@@QBEHHH@Z ; CvBeliefEntry::GetBuildingClassYieldChange
; Function compile flags: /Odtp
;	COMDAT ?GetBuildingClassYieldChange@CvBeliefEntry@@QBEHHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
_j$ = 12						; size = 4
?GetBuildingClassYieldChange@CvBeliefEntry@@QBEHHH@Z PROC ; CvBeliefEntry::GetBuildingClassYieldChange, COMDAT
; _this$ = ecx

; 610  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 611  : 	CvAssertMsg(i < GC.getNumBuildingClassInfos(), "Index out of bounds");
; 612  : 	CvAssertMsg(i > -1, "Index out of bounds");
; 613  : 	CvAssertMsg(j < NUM_YIELD_TYPES, "Index out of bounds");
; 614  : 	CvAssertMsg(j > -1, "Index out of bounds");
; 615  : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 616  : 	return m_ppiBuildingClassYieldChanges.first ? m_ppiBuildingClassYieldChanges.first[i][j] : 0;
; 617  : #else
; 618  : 	return m_ppiBuildingClassYieldChanges[i][j];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+524]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4]

; 619  : #endif
; 620  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetBuildingClassYieldChange@CvBeliefEntry@@QBEHHH@Z ENDP ; CvBeliefEntry::GetBuildingClassYieldChange
_TEXT	ENDS
PUBLIC	?GetBuildingClassHappiness@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetBuildingClassHappiness
; Function compile flags: /Odtp
;	COMDAT ?GetBuildingClassHappiness@CvBeliefEntry@@QBEHH@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?GetBuildingClassHappiness@CvBeliefEntry@@QBEHH@Z PROC	; CvBeliefEntry::GetBuildingClassHappiness, COMDAT
; _this$ = ecx

; 641  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 	CvAssertMsg(i < GC.getNumBuildingClassInfos(), "Index out of bounds");
; 643  : 	CvAssertMsg(i > -1, "Index out of bounds");
; 644  : 	return m_paiBuildingClassHappiness ? m_paiBuildingClassHappiness[i] : -1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+528], 0
	je	SHORT $LN3@GetBuildin
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+528]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@GetBuildin
$LN3@GetBuildin:
	mov	DWORD PTR tv69[ebp], -1
$LN4@GetBuildin:
	mov	eax, DWORD PTR tv69[ebp]

; 645  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetBuildingClassHappiness@CvBeliefEntry@@QBEHH@Z ENDP	; CvBeliefEntry::GetBuildingClassHappiness
_TEXT	ENDS
PUBLIC	?GetBuildingClassTourism@CvBeliefEntry@@QBEHH@Z	; CvBeliefEntry::GetBuildingClassTourism
; Function compile flags: /Odtp
;	COMDAT ?GetBuildingClassTourism@CvBeliefEntry@@QBEHH@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?GetBuildingClassTourism@CvBeliefEntry@@QBEHH@Z PROC	; CvBeliefEntry::GetBuildingClassTourism, COMDAT
; _this$ = ecx

; 649  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 650  : 	CvAssertMsg(i < GC.getNumBuildingClassInfos(), "Index out of bounds");
; 651  : 	CvAssertMsg(i > -1, "Index out of bounds");
; 652  : 	return m_paiBuildingClassTourism ? m_paiBuildingClassTourism[i] : -1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+532], 0
	je	SHORT $LN3@GetBuildin@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+532]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@GetBuildin@2
$LN3@GetBuildin@2:
	mov	DWORD PTR tv69[ebp], -1
$LN4@GetBuildin@2:
	mov	eax, DWORD PTR tv69[ebp]

; 653  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetBuildingClassTourism@CvBeliefEntry@@QBEHH@Z ENDP	; CvBeliefEntry::GetBuildingClassTourism
_TEXT	ENDS
PUBLIC	?GetFeatureYieldChange@CvBeliefEntry@@QBEHHH@Z	; CvBeliefEntry::GetFeatureYieldChange
; Function compile flags: /Odtp
;	COMDAT ?GetFeatureYieldChange@CvBeliefEntry@@QBEHHH@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
_this$ = -4						; size = 4
_i$ = 8							; size = 4
_j$ = 12						; size = 4
?GetFeatureYieldChange@CvBeliefEntry@@QBEHHH@Z PROC	; CvBeliefEntry::GetFeatureYieldChange, COMDAT
; _this$ = ecx

; 657  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 658  : 	CvAssertMsg(i < GC.getNumFeatureInfos(), "Index out of bounds");
; 659  : 	CvAssertMsg(i > -1, "Index out of bounds");
; 660  : 	CvAssertMsg(j < NUM_YIELD_TYPES, "Index out of bounds");
; 661  : 	CvAssertMsg(j > -1, "Index out of bounds");
; 662  : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 663  : 	return m_ppaiFeatureYieldChange.first ? m_ppaiFeatureYieldChange.first[i][j] : -1;
; 664  : #else
; 665  : 	return m_ppaiFeatureYieldChange ? m_ppaiFeatureYieldChange[i][j] : -1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+536], 0
	je	SHORT $LN3@GetFeature
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+536]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	edx, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@GetFeature
$LN3@GetFeature:
	mov	DWORD PTR tv71[ebp], -1
$LN4@GetFeature:
	mov	eax, DWORD PTR tv71[ebp]

; 666  : #endif
; 667  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetFeatureYieldChange@CvBeliefEntry@@QBEHHH@Z ENDP	; CvBeliefEntry::GetFeatureYieldChange
_TEXT	ENDS
PUBLIC	?GetResourceYieldChange@CvBeliefEntry@@QBEHHH@Z	; CvBeliefEntry::GetResourceYieldChange
; Function compile flags: /Odtp
;	COMDAT ?GetResourceYieldChange@CvBeliefEntry@@QBEHHH@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
_this$ = -4						; size = 4
_i$ = 8							; size = 4
_j$ = 12						; size = 4
?GetResourceYieldChange@CvBeliefEntry@@QBEHHH@Z PROC	; CvBeliefEntry::GetResourceYieldChange, COMDAT
; _this$ = ecx

; 671  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 672  : 	CvAssertMsg(i < GC.getNumResourceInfos(), "Index out of bounds");
; 673  : 	CvAssertMsg(i > -1, "Index out of bounds");
; 674  : 	CvAssertMsg(j < NUM_YIELD_TYPES, "Index out of bounds");
; 675  : 	CvAssertMsg(j > -1, "Index out of bounds");
; 676  : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 677  : 	return m_ppaiResourceYieldChange.first ? m_ppaiResourceYieldChange.first[i][j] : -1;
; 678  : #else
; 679  : 	return m_ppaiResourceYieldChange ? m_ppaiResourceYieldChange[i][j] : -1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+540], 0
	je	SHORT $LN3@GetResourc@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	edx, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@GetResourc@2
$LN3@GetResourc@2:
	mov	DWORD PTR tv71[ebp], -1
$LN4@GetResourc@2:
	mov	eax, DWORD PTR tv71[ebp]

; 680  : #endif
; 681  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetResourceYieldChange@CvBeliefEntry@@QBEHHH@Z ENDP	; CvBeliefEntry::GetResourceYieldChange
_TEXT	ENDS
PUBLIC	?GetTerrainYieldChange@CvBeliefEntry@@QBEHHH@Z	; CvBeliefEntry::GetTerrainYieldChange
; Function compile flags: /Odtp
;	COMDAT ?GetTerrainYieldChange@CvBeliefEntry@@QBEHHH@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
_this$ = -4						; size = 4
_i$ = 8							; size = 4
_j$ = 12						; size = 4
?GetTerrainYieldChange@CvBeliefEntry@@QBEHHH@Z PROC	; CvBeliefEntry::GetTerrainYieldChange, COMDAT
; _this$ = ecx

; 685  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 686  : 	CvAssertMsg(i < GC.getNumTerrainInfos(), "Index out of bounds");
; 687  : 	CvAssertMsg(i > -1, "Index out of bounds");
; 688  : 	CvAssertMsg(j < NUM_YIELD_TYPES, "Index out of bounds");
; 689  : 	CvAssertMsg(j > -1, "Index out of bounds");
; 690  : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 691  : 	return m_ppaiTerrainYieldChange.first ? m_ppaiTerrainYieldChange.first[i][j] : -1;
; 692  : #else
; 693  : 	return m_ppaiTerrainYieldChange ? m_ppaiTerrainYieldChange[i][j] : -1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+544], 0
	je	SHORT $LN3@GetTerrain
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+544]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	edx, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@GetTerrain
$LN3@GetTerrain:
	mov	DWORD PTR tv71[ebp], -1
$LN4@GetTerrain:
	mov	eax, DWORD PTR tv71[ebp]

; 694  : #endif
; 695  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetTerrainYieldChange@CvBeliefEntry@@QBEHHH@Z ENDP	; CvBeliefEntry::GetTerrainYieldChange
_TEXT	ENDS
PUBLIC	?GetResourceHappiness@CvBeliefEntry@@QBEHH@Z	; CvBeliefEntry::GetResourceHappiness
; Function compile flags: /Odtp
;	COMDAT ?GetResourceHappiness@CvBeliefEntry@@QBEHH@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?GetResourceHappiness@CvBeliefEntry@@QBEHH@Z PROC	; CvBeliefEntry::GetResourceHappiness, COMDAT
; _this$ = ecx

; 699  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 700  : 	CvAssertMsg(i < GC.getNumResourceInfos(), "Index out of bounds");
; 701  : 	CvAssertMsg(i > -1, "Index out of bounds");
; 702  : 	return m_piResourceHappiness ? m_piResourceHappiness[i] : -1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+548], 0
	je	SHORT $LN3@GetResourc@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+548]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@GetResourc@3
$LN3@GetResourc@3:
	mov	DWORD PTR tv69[ebp], -1
$LN4@GetResourc@3:
	mov	eax, DWORD PTR tv69[ebp]

; 703  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetResourceHappiness@CvBeliefEntry@@QBEHH@Z ENDP	; CvBeliefEntry::GetResourceHappiness
_TEXT	ENDS
PUBLIC	?GetYieldChangeAnySpecialist@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangeAnySpecialist
; Function compile flags: /Odtp
;	COMDAT ?GetYieldChangeAnySpecialist@CvBeliefEntry@@QBEHH@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?GetYieldChangeAnySpecialist@CvBeliefEntry@@QBEHH@Z PROC ; CvBeliefEntry::GetYieldChangeAnySpecialist, COMDAT
; _this$ = ecx

; 707  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 708  : 	CvAssertMsg(i < NUM_YIELD_TYPES, "Index out of bounds");
; 709  : 	CvAssertMsg(i > -1, "Index out of bounds");
; 710  : 	return m_piYieldChangeAnySpecialist ? m_piYieldChangeAnySpecialist[i] : -1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+552], 0
	je	SHORT $LN3@GetYieldCh@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+552]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@GetYieldCh@3
$LN3@GetYieldCh@3:
	mov	DWORD PTR tv69[ebp], -1
$LN4@GetYieldCh@3:
	mov	eax, DWORD PTR tv69[ebp]

; 711  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetYieldChangeAnySpecialist@CvBeliefEntry@@QBEHH@Z ENDP ; CvBeliefEntry::GetYieldChangeAnySpecialist
_TEXT	ENDS
PUBLIC	?GetYieldChangeTradeRoute@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangeTradeRoute
; Function compile flags: /Odtp
;	COMDAT ?GetYieldChangeTradeRoute@CvBeliefEntry@@QBEHH@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?GetYieldChangeTradeRoute@CvBeliefEntry@@QBEHH@Z PROC	; CvBeliefEntry::GetYieldChangeTradeRoute, COMDAT
; _this$ = ecx

; 715  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 716  : 	CvAssertMsg(i < NUM_YIELD_TYPES, "Index out of bounds");
; 717  : 	CvAssertMsg(i > -1, "Index out of bounds");
; 718  : 	return m_piYieldChangeTradeRoute ? m_piYieldChangeTradeRoute[i] : -1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+556], 0
	je	SHORT $LN3@GetYieldCh@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+556]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@GetYieldCh@4
$LN3@GetYieldCh@4:
	mov	DWORD PTR tv69[ebp], -1
$LN4@GetYieldCh@4:
	mov	eax, DWORD PTR tv69[ebp]

; 719  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetYieldChangeTradeRoute@CvBeliefEntry@@QBEHH@Z ENDP	; CvBeliefEntry::GetYieldChangeTradeRoute
_TEXT	ENDS
PUBLIC	?GetYieldChangeNaturalWonder@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangeNaturalWonder
; Function compile flags: /Odtp
;	COMDAT ?GetYieldChangeNaturalWonder@CvBeliefEntry@@QBEHH@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?GetYieldChangeNaturalWonder@CvBeliefEntry@@QBEHH@Z PROC ; CvBeliefEntry::GetYieldChangeNaturalWonder, COMDAT
; _this$ = ecx

; 723  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 724  : 	CvAssertMsg(i < NUM_YIELD_TYPES, "Index out of bounds");
; 725  : 	CvAssertMsg(i > -1, "Index out of bounds");
; 726  : 	return m_piYieldChangeNaturalWonder ? m_piYieldChangeNaturalWonder[i] : -1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+560], 0
	je	SHORT $LN3@GetYieldCh@5
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+560]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@GetYieldCh@5
$LN3@GetYieldCh@5:
	mov	DWORD PTR tv69[ebp], -1
$LN4@GetYieldCh@5:
	mov	eax, DWORD PTR tv69[ebp]

; 727  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetYieldChangeNaturalWonder@CvBeliefEntry@@QBEHH@Z ENDP ; CvBeliefEntry::GetYieldChangeNaturalWonder
_TEXT	ENDS
PUBLIC	?GetYieldChangeWorldWonder@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangeWorldWonder
; Function compile flags: /Odtp
;	COMDAT ?GetYieldChangeWorldWonder@CvBeliefEntry@@QBEHH@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?GetYieldChangeWorldWonder@CvBeliefEntry@@QBEHH@Z PROC	; CvBeliefEntry::GetYieldChangeWorldWonder, COMDAT
; _this$ = ecx

; 731  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 732  : 	CvAssertMsg(i < NUM_YIELD_TYPES, "Index out of bounds");
; 733  : 	CvAssertMsg(i > -1, "Index out of bounds");
; 734  : 	return m_piYieldChangeWorldWonder ? m_piYieldChangeWorldWonder[i] : -1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+564], 0
	je	SHORT $LN3@GetYieldCh@6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+564]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@GetYieldCh@6
$LN3@GetYieldCh@6:
	mov	DWORD PTR tv69[ebp], -1
$LN4@GetYieldCh@6:
	mov	eax, DWORD PTR tv69[ebp]

; 735  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetYieldChangeWorldWonder@CvBeliefEntry@@QBEHH@Z ENDP	; CvBeliefEntry::GetYieldChangeWorldWonder
_TEXT	ENDS
PUBLIC	?GetYieldModifierNaturalWonder@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldModifierNaturalWonder
; Function compile flags: /Odtp
;	COMDAT ?GetYieldModifierNaturalWonder@CvBeliefEntry@@QBEHH@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?GetYieldModifierNaturalWonder@CvBeliefEntry@@QBEHH@Z PROC ; CvBeliefEntry::GetYieldModifierNaturalWonder, COMDAT
; _this$ = ecx

; 739  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 740  : 	CvAssertMsg(i < NUM_YIELD_TYPES, "Index out of bounds");
; 741  : 	CvAssertMsg(i > -1, "Index out of bounds");
; 742  : 	return m_piYieldModifierNaturalWonder ? m_piYieldModifierNaturalWonder[i] : -1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+568], 0
	je	SHORT $LN3@GetYieldMo
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+568]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@GetYieldMo
$LN3@GetYieldMo:
	mov	DWORD PTR tv69[ebp], -1
$LN4@GetYieldMo:
	mov	eax, DWORD PTR tv69[ebp]

; 743  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetYieldModifierNaturalWonder@CvBeliefEntry@@QBEHH@Z ENDP ; CvBeliefEntry::GetYieldModifierNaturalWonder
_TEXT	ENDS
PUBLIC	?GetMaxYieldModifierPerFollower@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetMaxYieldModifierPerFollower
; Function compile flags: /Odtp
;	COMDAT ?GetMaxYieldModifierPerFollower@CvBeliefEntry@@QBEHH@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?GetMaxYieldModifierPerFollower@CvBeliefEntry@@QBEHH@Z PROC ; CvBeliefEntry::GetMaxYieldModifierPerFollower, COMDAT
; _this$ = ecx

; 747  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 748  : 	CvAssertMsg(i < NUM_YIELD_TYPES, "Index out of bounds");
; 749  : 	CvAssertMsg(i > -1, "Index out of bounds");
; 750  : 	return m_piMaxYieldModifierPerFollower ? m_piMaxYieldModifierPerFollower[i] : -1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+572], 0
	je	SHORT $LN3@GetMaxYiel
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+572]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@GetMaxYiel
$LN3@GetMaxYiel:
	mov	DWORD PTR tv69[ebp], -1
$LN4@GetMaxYiel:
	mov	eax, DWORD PTR tv69[ebp]

; 751  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetMaxYieldModifierPerFollower@CvBeliefEntry@@QBEHH@Z ENDP ; CvBeliefEntry::GetMaxYieldModifierPerFollower
_TEXT	ENDS
PUBLIC	?IsFaithUnitPurchaseEra@CvBeliefEntry@@QBE_NH@Z	; CvBeliefEntry::IsFaithUnitPurchaseEra
; Function compile flags: /Odtp
;	COMDAT ?IsFaithUnitPurchaseEra@CvBeliefEntry@@QBE_NH@Z
_TEXT	SEGMENT
tv68 = -5						; size = 1
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?IsFaithUnitPurchaseEra@CvBeliefEntry@@QBE_NH@Z PROC	; CvBeliefEntry::IsFaithUnitPurchaseEra, COMDAT
; _this$ = ecx

; 755  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 756  : 	CvAssertMsg(i > -1, "Index out of bounds");
; 757  : 	CvAssertMsg(i < GC.getNumEraInfos(), "Index out of bounds");
; 758  : 	return m_pbFaithPurchaseUnitEraEnabled ? m_pbFaithPurchaseUnitEraEnabled[i] : false;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+576], 0
	je	SHORT $LN3@IsFaithUni
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+576]
	mov	eax, DWORD PTR _i$[ebp]
	mov	cl, BYTE PTR [edx+eax]
	mov	BYTE PTR tv68[ebp], cl
	jmp	SHORT $LN4@IsFaithUni
$LN3@IsFaithUni:
	mov	BYTE PTR tv68[ebp], 0
$LN4@IsFaithUni:
	mov	al, BYTE PTR tv68[ebp]

; 759  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsFaithUnitPurchaseEra@CvBeliefEntry@@QBE_NH@Z ENDP	; CvBeliefEntry::IsFaithUnitPurchaseEra
_TEXT	ENDS
PUBLIC	?IsBuildingClassEnabled@CvBeliefEntry@@QBE_NH@Z	; CvBeliefEntry::IsBuildingClassEnabled
; Function compile flags: /Odtp
;	COMDAT ?IsBuildingClassEnabled@CvBeliefEntry@@QBE_NH@Z
_TEXT	SEGMENT
tv68 = -5						; size = 1
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?IsBuildingClassEnabled@CvBeliefEntry@@QBE_NH@Z PROC	; CvBeliefEntry::IsBuildingClassEnabled, COMDAT
; _this$ = ecx

; 763  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 764  : 	CvAssertMsg(i > -1, "Index out of bounds");
; 765  : 	CvAssertMsg(i < GC.getNumBuildingClassInfos(), "Index out of bounds");
; 766  : 	return m_pbBuildingClassEnabled ? m_pbBuildingClassEnabled[i] : false;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+580], 0
	je	SHORT $LN3@IsBuilding
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+580]
	mov	eax, DWORD PTR _i$[ebp]
	mov	cl, BYTE PTR [edx+eax]
	mov	BYTE PTR tv68[ebp], cl
	jmp	SHORT $LN4@IsBuilding
$LN3@IsBuilding:
	mov	BYTE PTR tv68[ebp], 0
$LN4@IsBuilding:
	mov	al, BYTE PTR tv68[ebp]

; 767  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsBuildingClassEnabled@CvBeliefEntry@@QBE_NH@Z ENDP	; CvBeliefEntry::IsBuildingClassEnabled
_TEXT	ENDS
PUBLIC	??_C@_0NC@IMJDJKBC@select?5Terrains?4ID?5as?5TerrainID?0@ ; `string'
PUBLIC	??_C@_0BL@IEPAHKPA@Belief_TerrainYieldChanges?$AA@ ; `string'
PUBLIC	??_C@_08DHHJBCFH@Terrains?$AA@			; `string'
PUBLIC	??_C@_0NI@LJDABJEN@select?5Resources?4ID?5as?5ResourceI@ ; `string'
PUBLIC	??_C@_0BM@BDGNPPLB@Belief_ResourceYieldChanges?$AA@ ; `string'
PUBLIC	??_C@_0NC@EPEFBHPN@select?5Features?4ID?5as?5FeatureID?0@ ; `string'
PUBLIC	??_C@_0BL@CKFBOBGO@Belief_FeatureYieldChanges?$AA@ ; `string'
PUBLIC	??_C@_08CLANBDND@Features?$AA@			; `string'
PUBLIC	??_C@_0PP@IPHBIJJJ@select?5BuildingClasses?4ID?5as?5Bui@ ; `string'
PUBLIC	??_C@_0CB@IPGIPJMO@Belief_BuildingClassYieldChanges@ ; `string'
PUBLIC	??_C@_0OK@OIGMFHOD@select?5Improvements?4ID?5as?5Improv@ ; `string'
PUBLIC	??_C@_0BP@BJOPFIGE@Belief_ImprovementYieldChanges?$AA@ ; `string'
PUBLIC	??_C@_0N@CJDAHDJO@Improvements?$AA@		; `string'
PUBLIC	??_C@_0CC@JAJGAEJP@Belief_BuildingClassFaithPurchas@ ; `string'
PUBLIC	??_C@_04CFPPDMOO@Eras?$AA@			; `string'
PUBLIC	??_C@_0BM@ICCDNKGD@Belief_EraFaithUnitPurchase?$AA@ ; `string'
PUBLIC	??_C@_07NECAIAEN@EraType?$AA@			; `string'
PUBLIC	??_C@_0CH@KDFHLBFI@Belief_YieldChangePerXForeignFol@ ; `string'
PUBLIC	??_C@_0BB@DMIAOOOI@ForeignFollowers?$AA@	; `string'
PUBLIC	??_C@_0CB@JCPNMFPF@Belief_YieldChangePerForeignCity@ ; `string'
PUBLIC	??_C@_05LNDKIJIJ@Yield?$AA@			; `string'
PUBLIC	??_C@_0BM@BHGINAPH@Belief_BuildingClassTourism?$AA@ ; `string'
PUBLIC	??_C@_07COHILFBB@Tourism?$AA@			; `string'
PUBLIC	??_C@_0BA@GLDILOEP@BuildingClasses?$AA@		; `string'
PUBLIC	??_C@_0BO@PIGAJAJP@Belief_BuildingClassHappiness?$AA@ ; `string'
PUBLIC	??_C@_0BC@OELPCAJJ@BuildingClassType?$AA@	; `string'
PUBLIC	??_C@_09MNJMGIDC@Happiness?$AA@			; `string'
PUBLIC	??_C@_0CB@MMPPLJFK@Belief_ResourceQuantityModifiers@ ; `string'
PUBLIC	??_C@_0BJ@PKPOGINB@ResourceQuantityModifier?$AA@ ; `string'
PUBLIC	??_C@_09FDCBPLKG@Resources?$AA@			; `string'
PUBLIC	??_C@_0BJ@FDLBGGKA@Belief_ResourceHappiness?$AA@ ; `string'
PUBLIC	??_C@_0N@EPHJOCBJ@ResourceType?$AA@		; `string'
PUBLIC	??_C@_0BA@DFOMLPHM@HappinessChange?$AA@		; `string'
PUBLIC	??_C@_06JAMLCLDI@Yields?$AA@			; `string'
PUBLIC	??_C@_0CD@JIIFCHBL@Belief_MaxYieldModifierPerFollow@ ; `string'
PUBLIC	??_C@_09HJBDLJFJ@YieldType?$AA@			; `string'
PUBLIC	??_C@_03BJDGPCOK@Max?$AA@			; `string'
PUBLIC	??_C@_0CC@LPAKIDHD@Belief_YieldModifierNaturalWonde@ ; `string'
PUBLIC	??_C@_0BO@BIIHDBOL@Belief_YieldChangeWorldWonder?$AA@ ; `string'
PUBLIC	??_C@_0CA@BLEPNGBD@Belief_YieldChangeNaturalWonder?$AA@ ; `string'
PUBLIC	??_C@_0BN@OOODGMHG@Belief_YieldChangeTradeRoute?$AA@ ; `string'
PUBLIC	??_C@_0CA@BOBJCMLB@Belief_YieldChangeAnySpecialist?$AA@ ; `string'
PUBLIC	??_C@_0BM@PLGDMIJ@Belief_HolyCityYieldChanges?$AA@ ; `string'
PUBLIC	??_C@_0BI@DFLGJHKG@Belief_CityYieldChanges?$AA@	; `string'
PUBLIC	??_C@_0L@MIJNBGID@BeliefType?$AA@		; `string'
PUBLIC	??_C@_0BL@CPIAIPA@SpreadModifierDoublingTech?$AA@ ; `string'
PUBLIC	??_C@_0BB@DOBIFLJP@ResourceRevealed?$AA@	; `string'
PUBLIC	??_C@_0M@EIDDGBIN@ObsoleteEra?$AA@		; `string'
PUBLIC	??_C@_0BJ@JMCDNPIN@AllowsFaithGiftsToMinors?$AA@ ; `string'
PUBLIC	??_C@_0BM@GPMAKFFO@FaithPurchaseAllGreatPeople?$AA@ ; `string'
PUBLIC	??_C@_08NAEJHDBF@DeusVult?$AA@			; `string'
PUBLIC	??_C@_0BD@PBFIKNPB@ConvertsBarbarians?$AA@	; `string'
PUBLIC	??_C@_0O@PBJGPJNI@RequiresPeace?$AA@		; `string'
PUBLIC	??_C@_0M@BPPPKOLO@Reformation?$AA@		; `string'
PUBLIC	??_C@_08GPOHECJD@Enhancer?$AA@			; `string'
PUBLIC	??_C@_08DAAKKAHN@Follower?$AA@			; `string'
PUBLIC	??_C@_07JCGNPAEF@Founder?$AA@			; `string'
PUBLIC	??_C@_08CBJAIDOE@Pantheon?$AA@			; `string'
PUBLIC	??_C@_0BA@IIANOIAI@NumFreeSettlers?$AA@		; `string'
PUBLIC	??_C@_0BF@HNDNPDLG@FaithBuildingTourism?$AA@	; `string'
PUBLIC	??_C@_0BM@DFKCCJOC@InquisitorPressureRetention?$AA@ ; `string'
PUBLIC	??_C@_0M@FOMCGPBG@SpyPressure?$AA@		; `string'
PUBLIC	??_C@_0BN@MJDLEEMF@OtherReligionPressureErosion?$AA@ ; `string'
PUBLIC	??_C@_0BL@JGOLNMFL@CityStateInfluenceModifier?$AA@ ; `string'
PUBLIC	??_C@_0BK@GINNLOBP@CityStateMinimumInfluence?$AA@ ; `string'
PUBLIC	??_C@_0BJ@EBEAJELE@GreatPersonExpendedFaith?$AA@ ; `string'
PUBLIC	??_C@_0CA@NJKDINIG@FriendlyCityStateSpreadModifier?$AA@ ; `string'
PUBLIC	??_C@_0BH@JAMPHPGB@MissionaryCostModifier?$AA@	; `string'
PUBLIC	??_C@_0P@BJCGNFDJ@GoldenAgeTurns?$AA@		; `string'
PUBLIC	??_C@_0BK@MNAFKNJL@FaithPerForeignTradeRoute?$AA@ ; `string'
PUBLIC	??_C@_0BO@CJICLODO@FaithPerCityStateThisReligion?$AA@ ; `string'
PUBLIC	??_C@_0BB@ILNCMFHD@ExtraTradeRoutes?$AA@	; `string'
PUBLIC	??_C@_0BM@GMPKLCLC@SpreadModifierUnownedCities?$AA@ ; `string'
PUBLIC	??_C@_0BK@MCJEBHFP@SpreadModifierOwnedCities?$AA@ ; `string'
PUBLIC	??_C@_0BH@LKGFLFEC@MissionaryExtraSpreads?$AA@	; `string'
PUBLIC	??_C@_0BI@OJJPEILB@FlatFaithPerCitizenBorn?$AA@	; `string'
PUBLIC	??_C@_0BL@MKNJFHJM@MissionaryStrengthModifier?$AA@ ; `string'
PUBLIC	??_C@_0BE@CDPIOIMH@ProphetCostModifier?$AA@	; `string'
PUBLIC	??_C@_0BI@JIOKPNDC@ProphetStrengthModifier?$AA@	; `string'
PUBLIC	??_C@_0BH@GJJJHELJ@SpreadStrengthModifier?$AA@	; `string'
PUBLIC	??_C@_0BH@DLJLFOOG@SpreadDistanceModifier?$AA@	; `string'
PUBLIC	??_C@_0CA@GJHNAKLF@SciencePerOtherReligionFollower?$AA@ ; `string'
PUBLIC	??_C@_0BL@HPCBFDKM@GoldPerFirstCityConversion?$AA@ ; `string'
PUBLIC	??_C@_0BC@CIDJGLOF@GoldPerXFollowers?$AA@	; `string'
PUBLIC	??_C@_0BF@BGHBGPJL@GoldPerFollowingCity?$AA@	; `string'
PUBLIC	??_C@_0BK@GPMBPEPC@HappinessPerFollowingCity?$AA@ ; `string'
PUBLIC	??_C@_0BG@IJCGPGON@PlayerCultureModifier?$AA@	; `string'
PUBLIC	??_C@_0BA@DHDDIHGL@PlayerHappiness?$AA@		; `string'
PUBLIC	??_C@_0BJ@KGAAGHKI@WonderProductionModifier?$AA@ ; `string'
PUBLIC	??_C@_0BP@CBHCFKJC@LandBarbarianConversionPercent?$AA@ ; `string'
PUBLIC	??_C@_0BM@CJCOCPNL@CityStateFriendshipModifier?$AA@ ; `string'
PUBLIC	??_C@_0BD@FDKGEBJC@FriendlyHealChange?$AA@	; `string'
PUBLIC	??_C@_0BN@FLKKEMIP@CombatModifierFriendlyCities?$AA@ ; `string'
PUBLIC	??_C@_0BK@OIKDJFNK@CombatModifierEnemyCities?$AA@ ; `string'
PUBLIC	??_C@_0BI@OEHODPFF@CityRangeStrikeModifier?$AA@	; `string'
PUBLIC	??_C@_0BI@CCICLKEE@PlotCultureCostModifier?$AA@	; `string'
PUBLIC	??_C@_0CG@NNCCBIBO@HappinessPerXPeacefulForeignFoll@ ; `string'
PUBLIC	??_C@_0BB@HFLAGBOL@HappinessPerCity?$AA@	; `string'
PUBLIC	??_C@_0P@PBPPHFBK@RiverHappiness?$AA@		; `string'
PUBLIC	??_C@_0BE@LPDPODIM@FaithFromDyingUnits?$AA@	; `string'
PUBLIC	??_C@_0P@POALJMFH@FaithFromKills?$AA@		; `string'
PUBLIC	??_C@_0BD@BLPMJBEF@CityGrowthModifier?$AA@	; `string'
PUBLIC	??_C@_0M@HCHLFLLG@MaxDistance?$AA@		; `string'
PUBLIC	??_C@_0N@ILJABJJC@MinFollowers?$AA@		; `string'
PUBLIC	??_C@_0O@KBHEHOBG@MinPopulation?$AA@		; `string'
PUBLIC	??_C@_0BB@GBLDMPKE@ShortDescription?$AA@	; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_?GetInt@Results@Database@@QAEHH@Z:PROC
EXTRN	__imp_?Step@Results@Database@@QAE_NXZ:PROC
EXTRN	__imp_?Bind@Results@Database@@QAE_NHPBD_N@Z:PROC
EXTRN	?PrepareResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z:PROC ; CvDatabaseUtility::PrepareResults
EXTRN	?GetResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; CvDatabaseUtility::GetResults
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
EXTRN	?Initialize2DArray@CvDatabaseUtility@@QAE_NAAPAPAHPBD1H@Z:PROC ; CvDatabaseUtility::Initialize2DArray
EXTRN	?PopulateArrayByExistence@CvDatabaseUtility@@QAE_NAAPA_NPBD1111@Z:PROC ; CvDatabaseUtility::PopulateArrayByExistence
EXTRN	?PopulateArrayByValue@CvDatabaseUtility@@QAE_NAAPAHPBD11111HH@Z:PROC ; CvDatabaseUtility::PopulateArrayByValue
EXTRN	?SetYields@CvDatabaseUtility@@QAE_NAAPAHPBD11@Z:PROC ; CvDatabaseUtility::SetYields
EXTRN	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z:PROC ; CvGlobals::getInfoTypeForString
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
EXTRN	__imp_?GetBool@Results@Database@@QAE_NPBD@Z:PROC
EXTRN	__imp_?GetFloat@Results@Database@@QAEMPBD@Z:PROC
EXTRN	__imp_?GetInt@Results@Database@@QAEHPBD@Z:PROC
EXTRN	__imp_?GetText@Results@Database@@QAEPBDPBD@Z:PROC
EXTRN	?CacheResults@CvBaseInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z:PROC ; CvBaseInfo::CacheResults
;	COMDAT ??_C@_0NC@IMJDJKBC@select?5Terrains?4ID?5as?5TerrainID?0@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvinfos.h
CONST	SEGMENT
??_C@_0NC@IMJDJKBC@select?5Terrains?4ID?5as?5TerrainID?0@ DB 'select Terr'
	DB	'ains.ID as TerrainID, Yields.ID as YieldID, Yield from Belief'
	DB	'_TerrainYieldChanges inner join Terrains on Terrains.Type = T'
	DB	'errainType inner join Yields on Yields.Type = YieldType where'
	DB	' BeliefType = ?', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@IEPAHKPA@Belief_TerrainYieldChanges?$AA@
CONST	SEGMENT
??_C@_0BL@IEPAHKPA@Belief_TerrainYieldChanges?$AA@ DB 'Belief_TerrainYiel'
	DB	'dChanges', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08DHHJBCFH@Terrains?$AA@
CONST	SEGMENT
??_C@_08DHHJBCFH@Terrains?$AA@ DB 'Terrains', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0NI@LJDABJEN@select?5Resources?4ID?5as?5ResourceI@
CONST	SEGMENT
??_C@_0NI@LJDABJEN@select?5Resources?4ID?5as?5ResourceI@ DB 'select Resou'
	DB	'rces.ID as ResourceID, Yields.ID as YieldID, Yield from Belie'
	DB	'f_ResourceYieldChanges inner join Resources on Resources.Type'
	DB	' = ResourceType inner join Yields on Yields.Type = YieldType '
	DB	'where BeliefType = ?', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BDGNPPLB@Belief_ResourceYieldChanges?$AA@
CONST	SEGMENT
??_C@_0BM@BDGNPPLB@Belief_ResourceYieldChanges?$AA@ DB 'Belief_ResourceYi'
	DB	'eldChanges', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0NC@EPEFBHPN@select?5Features?4ID?5as?5FeatureID?0@
CONST	SEGMENT
??_C@_0NC@EPEFBHPN@select?5Features?4ID?5as?5FeatureID?0@ DB 'select Feat'
	DB	'ures.ID as FeatureID, Yields.ID as YieldID, Yield from Belief'
	DB	'_FeatureYieldChanges inner join Features on Features.Type = F'
	DB	'eatureType inner join Yields on Yields.Type = YieldType where'
	DB	' BeliefType = ?', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@CKFBOBGO@Belief_FeatureYieldChanges?$AA@
CONST	SEGMENT
??_C@_0BL@CKFBOBGO@Belief_FeatureYieldChanges?$AA@ DB 'Belief_FeatureYiel'
	DB	'dChanges', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08CLANBDND@Features?$AA@
CONST	SEGMENT
??_C@_08CLANBDND@Features?$AA@ DB 'Features', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0PP@IPHBIJJJ@select?5BuildingClasses?4ID?5as?5Bui@
CONST	SEGMENT
??_C@_0PP@IPHBIJJJ@select?5BuildingClasses?4ID?5as?5Bui@ DB 'select Build'
	DB	'ingClasses.ID as BuildingClassID, Yields.ID as YieldID, Yield'
	DB	'Change from Belief_BuildingClassYieldChanges inner join Build'
	DB	'ingClasses on BuildingClasses.Type = BuildingClassType inner '
	DB	'join Yields on Yields.Type = YieldType where BeliefType = ?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@IPGIPJMO@Belief_BuildingClassYieldChanges@
CONST	SEGMENT
??_C@_0CB@IPGIPJMO@Belief_BuildingClassYieldChanges@ DB 'Belief_BuildingC'
	DB	'lassYieldChanges', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0OK@OIGMFHOD@select?5Improvements?4ID?5as?5Improv@
CONST	SEGMENT
??_C@_0OK@OIGMFHOD@select?5Improvements?4ID?5as?5Improv@ DB 'select Impro'
	DB	'vements.ID as ImprovementID, Yields.ID as YieldID, Yield from'
	DB	' Belief_ImprovementYieldChanges inner join Improvements on Im'
	DB	'provements.Type = ImprovementType inner join Yields on Yields'
	DB	'.Type = YieldType where BeliefType = ?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@BJOPFIGE@Belief_ImprovementYieldChanges?$AA@
CONST	SEGMENT
??_C@_0BP@BJOPFIGE@Belief_ImprovementYieldChanges?$AA@ DB 'Belief_Improve'
	DB	'mentYieldChanges', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CJDAHDJO@Improvements?$AA@
CONST	SEGMENT
??_C@_0N@CJDAHDJO@Improvements?$AA@ DB 'Improvements', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@JAJGAEJP@Belief_BuildingClassFaithPurchas@
CONST	SEGMENT
??_C@_0CC@JAJGAEJP@Belief_BuildingClassFaithPurchas@ DB 'Belief_BuildingC'
	DB	'lassFaithPurchase', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04CFPPDMOO@Eras?$AA@
CONST	SEGMENT
??_C@_04CFPPDMOO@Eras?$AA@ DB 'Eras', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@ICCDNKGD@Belief_EraFaithUnitPurchase?$AA@
CONST	SEGMENT
??_C@_0BM@ICCDNKGD@Belief_EraFaithUnitPurchase?$AA@ DB 'Belief_EraFaithUn'
	DB	'itPurchase', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07NECAIAEN@EraType?$AA@
CONST	SEGMENT
??_C@_07NECAIAEN@EraType?$AA@ DB 'EraType', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@KDFHLBFI@Belief_YieldChangePerXForeignFol@
CONST	SEGMENT
??_C@_0CH@KDFHLBFI@Belief_YieldChangePerXForeignFol@ DB 'Belief_YieldChan'
	DB	'gePerXForeignFollowers', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DMIAOOOI@ForeignFollowers?$AA@
CONST	SEGMENT
??_C@_0BB@DMIAOOOI@ForeignFollowers?$AA@ DB 'ForeignFollowers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@JCPNMFPF@Belief_YieldChangePerForeignCity@
CONST	SEGMENT
??_C@_0CB@JCPNMFPF@Belief_YieldChangePerForeignCity@ DB 'Belief_YieldChan'
	DB	'gePerForeignCity', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05LNDKIJIJ@Yield?$AA@
CONST	SEGMENT
??_C@_05LNDKIJIJ@Yield?$AA@ DB 'Yield', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BHGINAPH@Belief_BuildingClassTourism?$AA@
CONST	SEGMENT
??_C@_0BM@BHGINAPH@Belief_BuildingClassTourism?$AA@ DB 'Belief_BuildingCl'
	DB	'assTourism', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07COHILFBB@Tourism?$AA@
CONST	SEGMENT
??_C@_07COHILFBB@Tourism?$AA@ DB 'Tourism', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GLDILOEP@BuildingClasses?$AA@
CONST	SEGMENT
??_C@_0BA@GLDILOEP@BuildingClasses?$AA@ DB 'BuildingClasses', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PIGAJAJP@Belief_BuildingClassHappiness?$AA@
CONST	SEGMENT
??_C@_0BO@PIGAJAJP@Belief_BuildingClassHappiness?$AA@ DB 'Belief_Building'
	DB	'ClassHappiness', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OELPCAJJ@BuildingClassType?$AA@
CONST	SEGMENT
??_C@_0BC@OELPCAJJ@BuildingClassType?$AA@ DB 'BuildingClassType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09MNJMGIDC@Happiness?$AA@
CONST	SEGMENT
??_C@_09MNJMGIDC@Happiness?$AA@ DB 'Happiness', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@MMPPLJFK@Belief_ResourceQuantityModifiers@
CONST	SEGMENT
??_C@_0CB@MMPPLJFK@Belief_ResourceQuantityModifiers@ DB 'Belief_ResourceQ'
	DB	'uantityModifiers', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PKPOGINB@ResourceQuantityModifier?$AA@
CONST	SEGMENT
??_C@_0BJ@PKPOGINB@ResourceQuantityModifier?$AA@ DB 'ResourceQuantityModi'
	DB	'fier', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_09FDCBPLKG@Resources?$AA@
CONST	SEGMENT
??_C@_09FDCBPLKG@Resources?$AA@ DB 'Resources', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FDLBGGKA@Belief_ResourceHappiness?$AA@
CONST	SEGMENT
??_C@_0BJ@FDLBGGKA@Belief_ResourceHappiness?$AA@ DB 'Belief_ResourceHappi'
	DB	'ness', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EPHJOCBJ@ResourceType?$AA@
CONST	SEGMENT
??_C@_0N@EPHJOCBJ@ResourceType?$AA@ DB 'ResourceType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DFOMLPHM@HappinessChange?$AA@
CONST	SEGMENT
??_C@_0BA@DFOMLPHM@HappinessChange?$AA@ DB 'HappinessChange', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06JAMLCLDI@Yields?$AA@
CONST	SEGMENT
??_C@_06JAMLCLDI@Yields?$AA@ DB 'Yields', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@JIIFCHBL@Belief_MaxYieldModifierPerFollow@
CONST	SEGMENT
??_C@_0CD@JIIFCHBL@Belief_MaxYieldModifierPerFollow@ DB 'Belief_MaxYieldM'
	DB	'odifierPerFollower', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09HJBDLJFJ@YieldType?$AA@
CONST	SEGMENT
??_C@_09HJBDLJFJ@YieldType?$AA@ DB 'YieldType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03BJDGPCOK@Max?$AA@
CONST	SEGMENT
??_C@_03BJDGPCOK@Max?$AA@ DB 'Max', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@LPAKIDHD@Belief_YieldModifierNaturalWonde@
CONST	SEGMENT
??_C@_0CC@LPAKIDHD@Belief_YieldModifierNaturalWonde@ DB 'Belief_YieldModi'
	DB	'fierNaturalWonder', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BIIHDBOL@Belief_YieldChangeWorldWonder?$AA@
CONST	SEGMENT
??_C@_0BO@BIIHDBOL@Belief_YieldChangeWorldWonder?$AA@ DB 'Belief_YieldCha'
	DB	'ngeWorldWonder', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@BLEPNGBD@Belief_YieldChangeNaturalWonder?$AA@
CONST	SEGMENT
??_C@_0CA@BLEPNGBD@Belief_YieldChangeNaturalWonder?$AA@ DB 'Belief_YieldC'
	DB	'hangeNaturalWonder', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@OOODGMHG@Belief_YieldChangeTradeRoute?$AA@
CONST	SEGMENT
??_C@_0BN@OOODGMHG@Belief_YieldChangeTradeRoute?$AA@ DB 'Belief_YieldChan'
	DB	'geTradeRoute', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@BOBJCMLB@Belief_YieldChangeAnySpecialist?$AA@
CONST	SEGMENT
??_C@_0CA@BOBJCMLB@Belief_YieldChangeAnySpecialist?$AA@ DB 'Belief_YieldC'
	DB	'hangeAnySpecialist', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@PLGDMIJ@Belief_HolyCityYieldChanges?$AA@
CONST	SEGMENT
??_C@_0BM@PLGDMIJ@Belief_HolyCityYieldChanges?$AA@ DB 'Belief_HolyCityYie'
	DB	'ldChanges', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@DFLGJHKG@Belief_CityYieldChanges?$AA@
CONST	SEGMENT
??_C@_0BI@DFLGJHKG@Belief_CityYieldChanges?$AA@ DB 'Belief_CityYieldChang'
	DB	'es', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MIJNBGID@BeliefType?$AA@
CONST	SEGMENT
??_C@_0L@MIJNBGID@BeliefType?$AA@ DB 'BeliefType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@CPIAIPA@SpreadModifierDoublingTech?$AA@
CONST	SEGMENT
??_C@_0BL@CPIAIPA@SpreadModifierDoublingTech?$AA@ DB 'SpreadModifierDoubl'
	DB	'ingTech', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DOBIFLJP@ResourceRevealed?$AA@
CONST	SEGMENT
??_C@_0BB@DOBIFLJP@ResourceRevealed?$AA@ DB 'ResourceRevealed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EIDDGBIN@ObsoleteEra?$AA@
CONST	SEGMENT
??_C@_0M@EIDDGBIN@ObsoleteEra?$AA@ DB 'ObsoleteEra', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JMCDNPIN@AllowsFaithGiftsToMinors?$AA@
CONST	SEGMENT
??_C@_0BJ@JMCDNPIN@AllowsFaithGiftsToMinors?$AA@ DB 'AllowsFaithGiftsToMi'
	DB	'nors', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GPMAKFFO@FaithPurchaseAllGreatPeople?$AA@
CONST	SEGMENT
??_C@_0BM@GPMAKFFO@FaithPurchaseAllGreatPeople?$AA@ DB 'FaithPurchaseAllG'
	DB	'reatPeople', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08NAEJHDBF@DeusVult?$AA@
CONST	SEGMENT
??_C@_08NAEJHDBF@DeusVult?$AA@ DB 'DeusVult', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PBFIKNPB@ConvertsBarbarians?$AA@
CONST	SEGMENT
??_C@_0BD@PBFIKNPB@ConvertsBarbarians?$AA@ DB 'ConvertsBarbarians', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PBJGPJNI@RequiresPeace?$AA@
CONST	SEGMENT
??_C@_0O@PBJGPJNI@RequiresPeace?$AA@ DB 'RequiresPeace', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BPPPKOLO@Reformation?$AA@
CONST	SEGMENT
??_C@_0M@BPPPKOLO@Reformation?$AA@ DB 'Reformation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08GPOHECJD@Enhancer?$AA@
CONST	SEGMENT
??_C@_08GPOHECJD@Enhancer?$AA@ DB 'Enhancer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08DAAKKAHN@Follower?$AA@
CONST	SEGMENT
??_C@_08DAAKKAHN@Follower?$AA@ DB 'Follower', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07JCGNPAEF@Founder?$AA@
CONST	SEGMENT
??_C@_07JCGNPAEF@Founder?$AA@ DB 'Founder', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08CBJAIDOE@Pantheon?$AA@
CONST	SEGMENT
??_C@_08CBJAIDOE@Pantheon?$AA@ DB 'Pantheon', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IIANOIAI@NumFreeSettlers?$AA@
CONST	SEGMENT
??_C@_0BA@IIANOIAI@NumFreeSettlers?$AA@ DB 'NumFreeSettlers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HNDNPDLG@FaithBuildingTourism?$AA@
CONST	SEGMENT
??_C@_0BF@HNDNPDLG@FaithBuildingTourism?$AA@ DB 'FaithBuildingTourism', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@DFKCCJOC@InquisitorPressureRetention?$AA@
CONST	SEGMENT
??_C@_0BM@DFKCCJOC@InquisitorPressureRetention?$AA@ DB 'InquisitorPressur'
	DB	'eRetention', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FOMCGPBG@SpyPressure?$AA@
CONST	SEGMENT
??_C@_0M@FOMCGPBG@SpyPressure?$AA@ DB 'SpyPressure', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@MJDLEEMF@OtherReligionPressureErosion?$AA@
CONST	SEGMENT
??_C@_0BN@MJDLEEMF@OtherReligionPressureErosion?$AA@ DB 'OtherReligionPre'
	DB	'ssureErosion', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JGOLNMFL@CityStateInfluenceModifier?$AA@
CONST	SEGMENT
??_C@_0BL@JGOLNMFL@CityStateInfluenceModifier?$AA@ DB 'CityStateInfluence'
	DB	'Modifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GINNLOBP@CityStateMinimumInfluence?$AA@
CONST	SEGMENT
??_C@_0BK@GINNLOBP@CityStateMinimumInfluence?$AA@ DB 'CityStateMinimumInf'
	DB	'luence', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EBEAJELE@GreatPersonExpendedFaith?$AA@
CONST	SEGMENT
??_C@_0BJ@EBEAJELE@GreatPersonExpendedFaith?$AA@ DB 'GreatPersonExpendedF'
	DB	'aith', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NJKDINIG@FriendlyCityStateSpreadModifier?$AA@
CONST	SEGMENT
??_C@_0CA@NJKDINIG@FriendlyCityStateSpreadModifier?$AA@ DB 'FriendlyCityS'
	DB	'tateSpreadModifier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JAMPHPGB@MissionaryCostModifier?$AA@
CONST	SEGMENT
??_C@_0BH@JAMPHPGB@MissionaryCostModifier?$AA@ DB 'MissionaryCostModifier'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BJCGNFDJ@GoldenAgeTurns?$AA@
CONST	SEGMENT
??_C@_0P@BJCGNFDJ@GoldenAgeTurns?$AA@ DB 'GoldenAgeTurns', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@MNAFKNJL@FaithPerForeignTradeRoute?$AA@
CONST	SEGMENT
??_C@_0BK@MNAFKNJL@FaithPerForeignTradeRoute?$AA@ DB 'FaithPerForeignTrad'
	DB	'eRoute', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@CJICLODO@FaithPerCityStateThisReligion?$AA@
CONST	SEGMENT
??_C@_0BO@CJICLODO@FaithPerCityStateThisReligion?$AA@ DB 'FaithPerCitySta'
	DB	'teThisReligion', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ILNCMFHD@ExtraTradeRoutes?$AA@
CONST	SEGMENT
??_C@_0BB@ILNCMFHD@ExtraTradeRoutes?$AA@ DB 'ExtraTradeRoutes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GMPKLCLC@SpreadModifierUnownedCities?$AA@
CONST	SEGMENT
??_C@_0BM@GMPKLCLC@SpreadModifierUnownedCities?$AA@ DB 'SpreadModifierUno'
	DB	'wnedCities', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@MCJEBHFP@SpreadModifierOwnedCities?$AA@
CONST	SEGMENT
??_C@_0BK@MCJEBHFP@SpreadModifierOwnedCities?$AA@ DB 'SpreadModifierOwned'
	DB	'Cities', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LKGFLFEC@MissionaryExtraSpreads?$AA@
CONST	SEGMENT
??_C@_0BH@LKGFLFEC@MissionaryExtraSpreads?$AA@ DB 'MissionaryExtraSpreads'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OJJPEILB@FlatFaithPerCitizenBorn?$AA@
CONST	SEGMENT
??_C@_0BI@OJJPEILB@FlatFaithPerCitizenBorn?$AA@ DB 'FlatFaithPerCitizenBo'
	DB	'rn', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MKNJFHJM@MissionaryStrengthModifier?$AA@
CONST	SEGMENT
??_C@_0BL@MKNJFHJM@MissionaryStrengthModifier?$AA@ DB 'MissionaryStrength'
	DB	'Modifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CDPIOIMH@ProphetCostModifier?$AA@
CONST	SEGMENT
??_C@_0BE@CDPIOIMH@ProphetCostModifier?$AA@ DB 'ProphetCostModifier', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JIOKPNDC@ProphetStrengthModifier?$AA@
CONST	SEGMENT
??_C@_0BI@JIOKPNDC@ProphetStrengthModifier?$AA@ DB 'ProphetStrengthModifi'
	DB	'er', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GJJJHELJ@SpreadStrengthModifier?$AA@
CONST	SEGMENT
??_C@_0BH@GJJJHELJ@SpreadStrengthModifier?$AA@ DB 'SpreadStrengthModifier'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DLJLFOOG@SpreadDistanceModifier?$AA@
CONST	SEGMENT
??_C@_0BH@DLJLFOOG@SpreadDistanceModifier?$AA@ DB 'SpreadDistanceModifier'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@GJHNAKLF@SciencePerOtherReligionFollower?$AA@
CONST	SEGMENT
??_C@_0CA@GJHNAKLF@SciencePerOtherReligionFollower?$AA@ DB 'SciencePerOth'
	DB	'erReligionFollower', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@HPCBFDKM@GoldPerFirstCityConversion?$AA@
CONST	SEGMENT
??_C@_0BL@HPCBFDKM@GoldPerFirstCityConversion?$AA@ DB 'GoldPerFirstCityCo'
	DB	'nversion', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CIDJGLOF@GoldPerXFollowers?$AA@
CONST	SEGMENT
??_C@_0BC@CIDJGLOF@GoldPerXFollowers?$AA@ DB 'GoldPerXFollowers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BGHBGPJL@GoldPerFollowingCity?$AA@
CONST	SEGMENT
??_C@_0BF@BGHBGPJL@GoldPerFollowingCity?$AA@ DB 'GoldPerFollowingCity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GPMBPEPC@HappinessPerFollowingCity?$AA@
CONST	SEGMENT
??_C@_0BK@GPMBPEPC@HappinessPerFollowingCity?$AA@ DB 'HappinessPerFollowi'
	DB	'ngCity', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IJCGPGON@PlayerCultureModifier?$AA@
CONST	SEGMENT
??_C@_0BG@IJCGPGON@PlayerCultureModifier?$AA@ DB 'PlayerCultureModifier', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DHDDIHGL@PlayerHappiness?$AA@
CONST	SEGMENT
??_C@_0BA@DHDDIHGL@PlayerHappiness?$AA@ DB 'PlayerHappiness', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KGAAGHKI@WonderProductionModifier?$AA@
CONST	SEGMENT
??_C@_0BJ@KGAAGHKI@WonderProductionModifier?$AA@ DB 'WonderProductionModi'
	DB	'fier', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@CBHCFKJC@LandBarbarianConversionPercent?$AA@
CONST	SEGMENT
??_C@_0BP@CBHCFKJC@LandBarbarianConversionPercent?$AA@ DB 'LandBarbarianC'
	DB	'onversionPercent', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@CJCOCPNL@CityStateFriendshipModifier?$AA@
CONST	SEGMENT
??_C@_0BM@CJCOCPNL@CityStateFriendshipModifier?$AA@ DB 'CityStateFriendsh'
	DB	'ipModifier', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FDKGEBJC@FriendlyHealChange?$AA@
CONST	SEGMENT
??_C@_0BD@FDKGEBJC@FriendlyHealChange?$AA@ DB 'FriendlyHealChange', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FLKKEMIP@CombatModifierFriendlyCities?$AA@
CONST	SEGMENT
??_C@_0BN@FLKKEMIP@CombatModifierFriendlyCities?$AA@ DB 'CombatModifierFr'
	DB	'iendlyCities', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@OIKDJFNK@CombatModifierEnemyCities?$AA@
CONST	SEGMENT
??_C@_0BK@OIKDJFNK@CombatModifierEnemyCities?$AA@ DB 'CombatModifierEnemy'
	DB	'Cities', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OEHODPFF@CityRangeStrikeModifier?$AA@
CONST	SEGMENT
??_C@_0BI@OEHODPFF@CityRangeStrikeModifier?$AA@ DB 'CityRangeStrikeModifi'
	DB	'er', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CCICLKEE@PlotCultureCostModifier?$AA@
CONST	SEGMENT
??_C@_0BI@CCICLKEE@PlotCultureCostModifier?$AA@ DB 'PlotCultureCostModifi'
	DB	'er', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@NNCCBIBO@HappinessPerXPeacefulForeignFoll@
CONST	SEGMENT
??_C@_0CG@NNCCBIBO@HappinessPerXPeacefulForeignFoll@ DB 'HappinessPerXPea'
	DB	'cefulForeignFollowers', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HFLAGBOL@HappinessPerCity?$AA@
CONST	SEGMENT
??_C@_0BB@HFLAGBOL@HappinessPerCity?$AA@ DB 'HappinessPerCity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PBPPHFBK@RiverHappiness?$AA@
CONST	SEGMENT
??_C@_0P@PBPPHFBK@RiverHappiness?$AA@ DB 'RiverHappiness', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LPDPODIM@FaithFromDyingUnits?$AA@
CONST	SEGMENT
??_C@_0BE@LPDPODIM@FaithFromDyingUnits?$AA@ DB 'FaithFromDyingUnits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@POALJMFH@FaithFromKills?$AA@
CONST	SEGMENT
??_C@_0P@POALJMFH@FaithFromKills?$AA@ DB 'FaithFromKills', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BLPMJBEF@CityGrowthModifier?$AA@
CONST	SEGMENT
??_C@_0BD@BLPMJBEF@CityGrowthModifier?$AA@ DB 'CityGrowthModifier', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HCHLFLLG@MaxDistance?$AA@
CONST	SEGMENT
??_C@_0M@HCHLFLLG@MaxDistance?$AA@ DB 'MaxDistance', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ILJABJJC@MinFollowers?$AA@
CONST	SEGMENT
??_C@_0N@ILJABJJC@MinFollowers?$AA@ DB 'MinFollowers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KBHEHOBG@MinPopulation?$AA@
CONST	SEGMENT
??_C@_0O@KBHEHOBG@MinPopulation?$AA@ DB 'MinPopulation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GBLDMPKE@ShortDescription?$AA@
CONST	SEGMENT
??_C@_0BB@GBLDMPKE@ShortDescription?$AA@ DB 'ShortDescription', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?CacheResults@CvBeliefEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?CacheResults@CvBeliefEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?CacheResults@CvBeliefEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CacheResults@CvBeliefEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CacheResults@CvBeliefEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CacheResults@CvBeliefEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CacheResults@CvBeliefEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CacheResults@CvBeliefEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$4
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvbeliefclasses.cpp
xdata$x	ENDS
;	COMDAT ?CacheResults@CvBeliefEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z
_TEXT	SEGMENT
_this$ = -248						; size = 4
_TerrainID$218129 = -244				; size = 4
_yield$218131 = -240					; size = 4
_YieldID$218130 = -236					; size = 4
_pResults$218123 = -232					; size = 4
_strKey$218121 = -228					; size = 28
_ResourceID$218117 = -200				; size = 4
_yield$218119 = -196					; size = 4
_YieldID$218118 = -192					; size = 4
_pResults$218111 = -188					; size = 4
_strKey$218109 = -184					; size = 28
_FeatureID$218106 = -156				; size = 4
_yield$218108 = -152					; size = 4
_YieldID$218107 = -148					; size = 4
_pResults$218100 = -144					; size = 4
_strKey$218098 = -140					; size = 28
_iYieldChange$218096 = -112				; size = 4
_BuildingClassID$218094 = -108				; size = 4
_iYieldID$218095 = -104					; size = 4
_pResults$218088 = -100					; size = 4
_strKey$218086 = -96					; size = 28
_yield$218085 = -68					; size = 4
_ImprovementID$218083 = -64				; size = 4
_YieldID$218084 = -60					; size = 4
_pResults$218077 = -56					; size = 4
_strKey$218075 = -52					; size = 28
__$ArrayPad$ = -24					; size = 4
_szBeliefType$ = -20					; size = 4
_szTextVal$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_kResults$ = 8						; size = 4
_kUtility$ = 12						; size = 4
?CacheResults@CvBeliefEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z PROC ; CvBeliefEntry::CacheResults, COMDAT
; _this$ = ecx

; 771  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CacheResults@CvBeliefEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 236				; 000000ecH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 772  : 	if(!CvBaseInfo::CacheResults(kResults, kUtility))

	mov	eax, DWORD PTR _kUtility$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kResults$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CacheResults@CvBaseInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z ; CvBaseInfo::CacheResults
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN16@CacheResul

; 773  : 		return false;

	xor	al, al
	jmp	$LN17@CacheResul
$LN16@CacheResul:

; 774  : 
; 775  : 	//Basic Properties
; 776  : 	setShortDescription(kResults.GetText("ShortDescription"));

	push	OFFSET ??_C@_0BB@GBLDMPKE@ShortDescription?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetText@Results@Database@@QAEPBDPBD@Z
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setShortDescription@CvBeliefEntry@@QAEXPBD@Z ; CvBeliefEntry::setShortDescription

; 777  : 
; 778  : 	m_iMinPopulation                  = kResults.GetInt("MinPopulation");

	push	OFFSET ??_C@_0O@KBHEHOBG@MinPopulation?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+260], eax

; 779  : 	m_iMinFollowers                   = kResults.GetInt("MinFollowers");

	push	OFFSET ??_C@_0N@ILJABJJC@MinFollowers?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+264], eax

; 780  : 	m_iMaxDistance					  = kResults.GetInt("MaxDistance");

	push	OFFSET ??_C@_0M@HCHLFLLG@MaxDistance?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+268], eax

; 781  : 	m_iCityGrowthModifier		      = kResults.GetInt("CityGrowthModifier");

	push	OFFSET ??_C@_0BD@BLPMJBEF@CityGrowthModifier?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+272], eax

; 782  : 	m_iFaithFromKills				  = kResults.GetInt("FaithFromKills");

	push	OFFSET ??_C@_0P@POALJMFH@FaithFromKills?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+276], eax

; 783  : 	m_iFaithFromDyingUnits			  = kResults.GetInt("FaithFromDyingUnits");

	push	OFFSET ??_C@_0BE@LPDPODIM@FaithFromDyingUnits?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+280], eax

; 784  : 	m_iRiverHappiness				  = kResults.GetInt("RiverHappiness");

	push	OFFSET ??_C@_0P@PBPPHFBK@RiverHappiness?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+284], eax

; 785  : 	m_iHappinessPerCity				  = kResults.GetInt("HappinessPerCity");

	push	OFFSET ??_C@_0BB@HFLAGBOL@HappinessPerCity?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+288], eax

; 786  : 	m_iHappinessPerXPeacefulForeignFollowers  = kResults.GetInt("HappinessPerXPeacefulForeignFollowers");

	push	OFFSET ??_C@_0CG@NNCCBIBO@HappinessPerXPeacefulForeignFoll@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+292], eax

; 787  : 	m_iPlotCultureCostModifier	      = kResults.GetInt("PlotCultureCostModifier");

	push	OFFSET ??_C@_0BI@CCICLKEE@PlotCultureCostModifier?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+296], eax

; 788  : 	m_iCityRangeStrikeModifier	      = kResults.GetInt("CityRangeStrikeModifier");

	push	OFFSET ??_C@_0BI@OEHODPFF@CityRangeStrikeModifier?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+300], eax

; 789  : 	m_iCombatModifierEnemyCities      = kResults.GetInt("CombatModifierEnemyCities");

	push	OFFSET ??_C@_0BK@OIKDJFNK@CombatModifierEnemyCities?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+304], eax

; 790  : 	m_iCombatModifierFriendlyCities   = kResults.GetInt("CombatModifierFriendlyCities");

	push	OFFSET ??_C@_0BN@FLKKEMIP@CombatModifierFriendlyCities?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+308], eax

; 791  : 	m_iFriendlyHealChange	          = kResults.GetInt("FriendlyHealChange");

	push	OFFSET ??_C@_0BD@FDKGEBJC@FriendlyHealChange?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+312], eax

; 792  : 	m_iCityStateFriendshipModifier    = kResults.GetInt("CityStateFriendshipModifier");

	push	OFFSET ??_C@_0BM@CJCOCPNL@CityStateFriendshipModifier?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+316], eax

; 793  : 	m_iLandBarbarianConversionPercent = kResults.GetInt("LandBarbarianConversionPercent");

	push	OFFSET ??_C@_0BP@CBHCFKJC@LandBarbarianConversionPercent?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+320], eax

; 794  : 	m_iWonderProductionModifier       = kResults.GetInt("WonderProductionModifier");

	push	OFFSET ??_C@_0BJ@KGAAGHKI@WonderProductionModifier?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+324], eax

; 795  : 	m_iPlayerHappiness			      = kResults.GetInt("PlayerHappiness");

	push	OFFSET ??_C@_0BA@DHDDIHGL@PlayerHappiness?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+328], eax

; 796  : 	m_iPlayerCultureModifier          = kResults.GetInt("PlayerCultureModifier");

	push	OFFSET ??_C@_0BG@IJCGPGON@PlayerCultureModifier?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+332], eax

; 797  : 	m_fHappinessPerFollowingCity      = kResults.GetFloat("HappinessPerFollowingCity");

	push	OFFSET ??_C@_0BK@GPMBPEPC@HappinessPerFollowingCity?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetFloat@Results@Database@@QAEMPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx+336]

; 798  : 	m_iGoldPerFollowingCity           = kResults.GetInt("GoldPerFollowingCity");

	push	OFFSET ??_C@_0BF@BGHBGPJL@GoldPerFollowingCity?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+340], eax

; 799  : 	m_iGoldPerXFollowers              = kResults.GetInt("GoldPerXFollowers");

	push	OFFSET ??_C@_0BC@CIDJGLOF@GoldPerXFollowers?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+344], eax

; 800  : 	m_iGoldWhenCityAdopts             = kResults.GetInt("GoldPerFirstCityConversion");

	push	OFFSET ??_C@_0BL@HPCBFDKM@GoldPerFirstCityConversion?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+348], eax

; 801  : 	m_iSciencePerOtherReligionFollower= kResults.GetInt("SciencePerOtherReligionFollower");

	push	OFFSET ??_C@_0CA@GJHNAKLF@SciencePerOtherReligionFollower?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+352], eax

; 802  : 	m_iSpreadDistanceModifier         = kResults.GetInt("SpreadDistanceModifier");

	push	OFFSET ??_C@_0BH@DLJLFOOG@SpreadDistanceModifier?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+356], eax

; 803  : 	m_iSpreadStrengthModifier		  = kResults.GetInt("SpreadStrengthModifier");

	push	OFFSET ??_C@_0BH@GJJJHELJ@SpreadStrengthModifier?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+360], eax

; 804  : 	m_iProphetStrengthModifier        = kResults.GetInt("ProphetStrengthModifier");

	push	OFFSET ??_C@_0BI@JIOKPNDC@ProphetStrengthModifier?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+364], eax

; 805  : 	m_iProphetCostModifier            = kResults.GetInt("ProphetCostModifier");

	push	OFFSET ??_C@_0BE@CDPIOIMH@ProphetCostModifier?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+368], eax

; 806  : 	m_iMissionaryStrengthModifier     = kResults.GetInt("MissionaryStrengthModifier");

	push	OFFSET ??_C@_0BL@MKNJFHJM@MissionaryStrengthModifier?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+372], eax

; 807  : #ifdef NQ_FLAT_FAITH_PER_CITIZEN_BORN_FROM_BELIEFS
; 808  : 	m_iFlatFaithPerCitizenBorn        = kResults.GetInt("FlatFaithPerCitizenBorn");

	push	OFFSET ??_C@_0BI@OJJPEILB@FlatFaithPerCitizenBorn?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+376], eax

; 809  : #endif
; 810  : #ifdef NQ_BELIEF_EXTRA_MISSIONARY_SPREADS
; 811  : 	m_iMissionaryExtraSpreads		  = kResults.GetInt("MissionaryExtraSpreads");

	push	OFFSET ??_C@_0BH@LKGFLFEC@MissionaryExtraSpreads?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+380], eax

; 812  : #endif
; 813  : #ifdef NQ_SPREAD_MODIFIER_OWNED_CITIES
; 814  : 	m_iSpreadModifierOwnedCities	  = kResults.GetInt("SpreadModifierOwnedCities");

	push	OFFSET ??_C@_0BK@MCJEBHFP@SpreadModifierOwnedCities?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+384], eax

; 815  : 	m_iSpreadModifierUnownedCities	  = kResults.GetInt("SpreadModifierUnownedCities");

	push	OFFSET ??_C@_0BM@GMPKLCLC@SpreadModifierUnownedCities?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+388], eax

; 816  : #endif
; 817  : #ifdef NQ_EXTRA_TRADE_ROUTES_FROM_BELIEF
; 818  : 	m_iExtraTradeRoutes				  = kResults.GetInt("ExtraTradeRoutes");

	push	OFFSET ??_C@_0BB@ILNCMFHD@ExtraTradeRoutes?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+392], eax

; 819  : #endif
; 820  : #ifdef NQ_FAITH_PER_CITY_STATE_THIS_RELIGION
; 821  : 	m_iFaithPerCityStateThisReligion  = kResults.GetInt("FaithPerCityStateThisReligion");

	push	OFFSET ??_C@_0BO@CJICLODO@FaithPerCityStateThisReligion?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+396], eax

; 822  : #endif
; 823  : #ifdef NQ_FAITH_PER_FOREIGN_TRADE_ROUTE
; 824  : 	m_iFaithPerForeignTradeRoute	  = kResults.GetInt("FaithPerForeignTradeRoute");

	push	OFFSET ??_C@_0BK@MNAFKNJL@FaithPerForeignTradeRoute?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+400], eax

; 825  : #endif
; 826  : #ifdef NQ_GOLDEN_AGE_TURNS_FROM_BELIEF
; 827  : 	m_iGoldenAgeTurns				  = kResults.GetInt("GoldenAgeTurns");

	push	OFFSET ??_C@_0P@BJCGNFDJ@GoldenAgeTurns?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+404], eax

; 828  : #endif
; 829  : 	m_iMissionaryCostModifier         = kResults.GetInt("MissionaryCostModifier");

	push	OFFSET ??_C@_0BH@JAMPHPGB@MissionaryCostModifier?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+408], eax

; 830  : 	m_iFriendlyCityStateSpreadModifier= kResults.GetInt("FriendlyCityStateSpreadModifier");

	push	OFFSET ??_C@_0CA@NJKDINIG@FriendlyCityStateSpreadModifier?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+412], eax

; 831  : 	m_iGreatPersonExpendedFaith       = kResults.GetInt("GreatPersonExpendedFaith");

	push	OFFSET ??_C@_0BJ@EBEAJELE@GreatPersonExpendedFaith?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+416], eax

; 832  : 	m_iCityStateMinimumInfluence      = kResults.GetInt("CityStateMinimumInfluence");

	push	OFFSET ??_C@_0BK@GINNLOBP@CityStateMinimumInfluence?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+420], eax

; 833  : 	m_iCityStateInfluenceModifier     = kResults.GetInt("CityStateInfluenceModifier");

	push	OFFSET ??_C@_0BL@JGOLNMFL@CityStateInfluenceModifier?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+424], eax

; 834  : 	m_iOtherReligionPressureErosion   = kResults.GetInt("OtherReligionPressureErosion");

	push	OFFSET ??_C@_0BN@MJDLEEMF@OtherReligionPressureErosion?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+428], eax

; 835  : 	m_iSpyPressure					  = kResults.GetInt("SpyPressure");

	push	OFFSET ??_C@_0M@FOMCGPBG@SpyPressure?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+432], eax

; 836  : 	m_iInquisitorPressureRetention    = kResults.GetInt("InquisitorPressureRetention");

	push	OFFSET ??_C@_0BM@DFKCCJOC@InquisitorPressureRetention?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+436], eax

; 837  : 	m_iFaithBuildingTourism           = kResults.GetInt("FaithBuildingTourism");

	push	OFFSET ??_C@_0BF@HNDNPDLG@FaithBuildingTourism?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+440], eax

; 838  : #ifdef NQ_FREE_SETTLERS_FROM_BELIEF
; 839  : 	m_iNumFreeSettlers				  = kResults.GetInt("NumFreeSettlers");

	push	OFFSET ??_C@_0BA@IIANOIAI@NumFreeSettlers?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+444], eax

; 840  : #endif
; 841  : 
; 842  : 	m_bPantheon						  = kResults.GetBool("Pantheon");

	push	OFFSET ??_C@_08CBJAIDOE@Pantheon?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetBool@Results@Database@@QAE_NPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+448], al

; 843  : 	m_bFounder						  = kResults.GetBool("Founder");

	push	OFFSET ??_C@_07JCGNPAEF@Founder?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetBool@Results@Database@@QAE_NPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+449], al

; 844  : 	m_bFollower						  = kResults.GetBool("Follower");

	push	OFFSET ??_C@_08DAAKKAHN@Follower?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetBool@Results@Database@@QAE_NPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+450], al

; 845  : 	m_bEnhancer						  = kResults.GetBool("Enhancer");

	push	OFFSET ??_C@_08GPOHECJD@Enhancer?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetBool@Results@Database@@QAE_NPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+451], al

; 846  : 	m_bReformer						  = kResults.GetBool("Reformation");

	push	OFFSET ??_C@_0M@BPPPKOLO@Reformation?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetBool@Results@Database@@QAE_NPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+452], al

; 847  : 	m_bRequiresPeace				  = kResults.GetBool("RequiresPeace");

	push	OFFSET ??_C@_0O@PBJGPJNI@RequiresPeace?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetBool@Results@Database@@QAE_NPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+453], al

; 848  : 	m_bConvertsBarbarians			  = kResults.GetBool("ConvertsBarbarians");

	push	OFFSET ??_C@_0BD@PBFIKNPB@ConvertsBarbarians?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetBool@Results@Database@@QAE_NPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+454], al

; 849  : #ifdef NQ_DEUS_VULT
; 850  : 	m_bDeusVult						  = kResults.GetBool("DeusVult");

	push	OFFSET ??_C@_08NAEJHDBF@DeusVult?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetBool@Results@Database@@QAE_NPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+455], al

; 851  : #endif
; 852  : 	m_bFaithPurchaseAllGreatPeople	  = kResults.GetBool("FaithPurchaseAllGreatPeople");

	push	OFFSET ??_C@_0BM@GPMAKFFO@FaithPurchaseAllGreatPeople?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetBool@Results@Database@@QAE_NPBD@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+456], al

; 853  : #ifdef NQ_BELIEF_TOGGLE_ALLOW_FAITH_GIFTS_TO_MINORS
; 854  : 	m_bAllowsFaithGiftsToMinors       = kResults.GetBool("AllowsFaithGiftsToMinors");

	push	OFFSET ??_C@_0BJ@JMCDNPIN@AllowsFaithGiftsToMinors?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetBool@Results@Database@@QAE_NPBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+457], al

; 855  : #endif
; 856  : 
; 857  : 	//References
; 858  : 	const char* szTextVal;
; 859  : 	szTextVal						  = kResults.GetText("ObsoleteEra");

	push	OFFSET ??_C@_0M@EIDDGBIN@ObsoleteEra?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetText@Results@Database@@QAEPBDPBD@Z
	mov	DWORD PTR _szTextVal$[ebp], eax

; 860  : 	m_eObsoleteEra					  = (EraTypes)GC.getInfoTypeForString(szTextVal, true);

	push	1
	mov	edx, DWORD PTR _szTextVal$[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+460], eax

; 861  : 	szTextVal						  = kResults.GetText("ResourceRevealed");

	push	OFFSET ??_C@_0BB@DOBIFLJP@ResourceRevealed?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetText@Results@Database@@QAEPBDPBD@Z
	mov	DWORD PTR _szTextVal$[ebp], eax

; 862  : 	m_eResourceRevealed				  = (ResourceTypes)GC.getInfoTypeForString(szTextVal, true);

	push	1
	mov	edx, DWORD PTR _szTextVal$[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+464], eax

; 863  : 	szTextVal						  = kResults.GetText("SpreadModifierDoublingTech");

	push	OFFSET ??_C@_0BL@CPIAIPA@SpreadModifierDoublingTech?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetText@Results@Database@@QAEPBDPBD@Z
	mov	DWORD PTR _szTextVal$[ebp], eax

; 864  : 	m_eSpreadModifierDoublingTech     = (TechTypes)GC.getInfoTypeForString(szTextVal, true);

	push	1
	mov	edx, DWORD PTR _szTextVal$[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+468], eax

; 865  : 
; 866  : 	//Arrays
; 867  : 	const char* szBeliefType = GetType();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 176				; 000000b0H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR _szBeliefType$[ebp], eax

; 868  : 	kUtility.SetYields(m_paiCityYieldChange, "Belief_CityYieldChanges", "BeliefType", szBeliefType);

	mov	edx, DWORD PTR _szBeliefType$[ebp]
	push	edx
	push	OFFSET ??_C@_0L@MIJNBGID@BeliefType?$AA@
	push	OFFSET ??_C@_0BI@DFLGJHKG@Belief_CityYieldChanges?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 500				; 000001f4H
	push	eax
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?SetYields@CvDatabaseUtility@@QAE_NAAPAHPBD11@Z ; CvDatabaseUtility::SetYields

; 869  : 	kUtility.SetYields(m_paiHolyCityYieldChange, "Belief_HolyCityYieldChanges", "BeliefType", szBeliefType);

	mov	ecx, DWORD PTR _szBeliefType$[ebp]
	push	ecx
	push	OFFSET ??_C@_0L@MIJNBGID@BeliefType?$AA@
	push	OFFSET ??_C@_0BM@PLGDMIJ@Belief_HolyCityYieldChanges?$AA@
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 504				; 000001f8H
	push	edx
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?SetYields@CvDatabaseUtility@@QAE_NAAPAHPBD11@Z ; CvDatabaseUtility::SetYields

; 870  : 	kUtility.SetYields(m_piYieldChangeAnySpecialist, "Belief_YieldChangeAnySpecialist", "BeliefType", szBeliefType);

	mov	eax, DWORD PTR _szBeliefType$[ebp]
	push	eax
	push	OFFSET ??_C@_0L@MIJNBGID@BeliefType?$AA@
	push	OFFSET ??_C@_0CA@BOBJCMLB@Belief_YieldChangeAnySpecialist?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 552				; 00000228H
	push	ecx
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?SetYields@CvDatabaseUtility@@QAE_NAAPAHPBD11@Z ; CvDatabaseUtility::SetYields

; 871  : 	kUtility.SetYields(m_piYieldChangeTradeRoute, "Belief_YieldChangeTradeRoute", "BeliefType", szBeliefType);

	mov	edx, DWORD PTR _szBeliefType$[ebp]
	push	edx
	push	OFFSET ??_C@_0L@MIJNBGID@BeliefType?$AA@
	push	OFFSET ??_C@_0BN@OOODGMHG@Belief_YieldChangeTradeRoute?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 556				; 0000022cH
	push	eax
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?SetYields@CvDatabaseUtility@@QAE_NAAPAHPBD11@Z ; CvDatabaseUtility::SetYields

; 872  : 	kUtility.SetYields(m_piYieldChangeNaturalWonder, "Belief_YieldChangeNaturalWonder", "BeliefType", szBeliefType);

	mov	ecx, DWORD PTR _szBeliefType$[ebp]
	push	ecx
	push	OFFSET ??_C@_0L@MIJNBGID@BeliefType?$AA@
	push	OFFSET ??_C@_0CA@BLEPNGBD@Belief_YieldChangeNaturalWonder?$AA@
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 560				; 00000230H
	push	edx
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?SetYields@CvDatabaseUtility@@QAE_NAAPAHPBD11@Z ; CvDatabaseUtility::SetYields

; 873  : 	kUtility.SetYields(m_piYieldChangeWorldWonder, "Belief_YieldChangeWorldWonder", "BeliefType", szBeliefType);

	mov	eax, DWORD PTR _szBeliefType$[ebp]
	push	eax
	push	OFFSET ??_C@_0L@MIJNBGID@BeliefType?$AA@
	push	OFFSET ??_C@_0BO@BIIHDBOL@Belief_YieldChangeWorldWonder?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 564				; 00000234H
	push	ecx
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?SetYields@CvDatabaseUtility@@QAE_NAAPAHPBD11@Z ; CvDatabaseUtility::SetYields

; 874  : 	kUtility.SetYields(m_piYieldModifierNaturalWonder, "Belief_YieldModifierNaturalWonder", "BeliefType", szBeliefType);

	mov	edx, DWORD PTR _szBeliefType$[ebp]
	push	edx
	push	OFFSET ??_C@_0L@MIJNBGID@BeliefType?$AA@
	push	OFFSET ??_C@_0CC@LPAKIDHD@Belief_YieldModifierNaturalWonde@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 568				; 00000238H
	push	eax
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?SetYields@CvDatabaseUtility@@QAE_NAAPAHPBD11@Z ; CvDatabaseUtility::SetYields

; 875  : 	kUtility.PopulateArrayByValue(m_piMaxYieldModifierPerFollower, "Yields", "Belief_MaxYieldModifierPerFollower", "YieldType", "BeliefType", szBeliefType, "Max");

	push	0
	push	0
	push	OFFSET ??_C@_03BJDGPCOK@Max?$AA@
	mov	ecx, DWORD PTR _szBeliefType$[ebp]
	push	ecx
	push	OFFSET ??_C@_0L@MIJNBGID@BeliefType?$AA@
	push	OFFSET ??_C@_09HJBDLJFJ@YieldType?$AA@
	push	OFFSET ??_C@_0CD@JIIFCHBL@Belief_MaxYieldModifierPerFollow@
	push	OFFSET ??_C@_06JAMLCLDI@Yields?$AA@
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 572				; 0000023cH
	push	edx
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?PopulateArrayByValue@CvDatabaseUtility@@QAE_NAAPAHPBD11111HH@Z ; CvDatabaseUtility::PopulateArrayByValue

; 876  : 	kUtility.PopulateArrayByValue(m_piResourceHappiness, "Resources", "Belief_ResourceHappiness", "ResourceType", "BeliefType", szBeliefType, "HappinessChange");

	push	0
	push	0
	push	OFFSET ??_C@_0BA@DFOMLPHM@HappinessChange?$AA@
	mov	eax, DWORD PTR _szBeliefType$[ebp]
	push	eax
	push	OFFSET ??_C@_0L@MIJNBGID@BeliefType?$AA@
	push	OFFSET ??_C@_0N@EPHJOCBJ@ResourceType?$AA@
	push	OFFSET ??_C@_0BJ@FDLBGGKA@Belief_ResourceHappiness?$AA@
	push	OFFSET ??_C@_09FDCBPLKG@Resources?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 548				; 00000224H
	push	ecx
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?PopulateArrayByValue@CvDatabaseUtility@@QAE_NAAPAHPBD11111HH@Z ; CvDatabaseUtility::PopulateArrayByValue

; 877  : 	kUtility.PopulateArrayByValue(m_piResourceQuantityModifiers, "Resources", "Belief_ResourceQuantityModifiers", "ResourceType", "BeliefType", szBeliefType, "ResourceQuantityModifier");

	push	0
	push	0
	push	OFFSET ??_C@_0BJ@PKPOGINB@ResourceQuantityModifier?$AA@
	mov	edx, DWORD PTR _szBeliefType$[ebp]
	push	edx
	push	OFFSET ??_C@_0L@MIJNBGID@BeliefType?$AA@
	push	OFFSET ??_C@_0N@EPHJOCBJ@ResourceType?$AA@
	push	OFFSET ??_C@_0CB@MMPPLJFK@Belief_ResourceQuantityModifiers@
	push	OFFSET ??_C@_09FDCBPLKG@Resources?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 516				; 00000204H
	push	eax
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?PopulateArrayByValue@CvDatabaseUtility@@QAE_NAAPAHPBD11111HH@Z ; CvDatabaseUtility::PopulateArrayByValue

; 878  : 	kUtility.PopulateArrayByValue(m_paiBuildingClassHappiness, "BuildingClasses", "Belief_BuildingClassHappiness", "BuildingClassType", "BeliefType", szBeliefType, "Happiness");

	push	0
	push	0
	push	OFFSET ??_C@_09MNJMGIDC@Happiness?$AA@
	mov	ecx, DWORD PTR _szBeliefType$[ebp]
	push	ecx
	push	OFFSET ??_C@_0L@MIJNBGID@BeliefType?$AA@
	push	OFFSET ??_C@_0BC@OELPCAJJ@BuildingClassType?$AA@
	push	OFFSET ??_C@_0BO@PIGAJAJP@Belief_BuildingClassHappiness?$AA@
	push	OFFSET ??_C@_0BA@GLDILOEP@BuildingClasses?$AA@
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 528				; 00000210H
	push	edx
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?PopulateArrayByValue@CvDatabaseUtility@@QAE_NAAPAHPBD11111HH@Z ; CvDatabaseUtility::PopulateArrayByValue

; 879  : 	kUtility.PopulateArrayByValue(m_paiBuildingClassTourism, "BuildingClasses", "Belief_BuildingClassTourism", "BuildingClassType", "BeliefType", szBeliefType, "Tourism");

	push	0
	push	0
	push	OFFSET ??_C@_07COHILFBB@Tourism?$AA@
	mov	eax, DWORD PTR _szBeliefType$[ebp]
	push	eax
	push	OFFSET ??_C@_0L@MIJNBGID@BeliefType?$AA@
	push	OFFSET ??_C@_0BC@OELPCAJJ@BuildingClassType?$AA@
	push	OFFSET ??_C@_0BM@BHGINAPH@Belief_BuildingClassTourism?$AA@
	push	OFFSET ??_C@_0BA@GLDILOEP@BuildingClasses?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 532				; 00000214H
	push	ecx
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?PopulateArrayByValue@CvDatabaseUtility@@QAE_NAAPAHPBD11111HH@Z ; CvDatabaseUtility::PopulateArrayByValue

; 880  : 	kUtility.PopulateArrayByValue(m_paiYieldChangePerForeignCity, "Yields", "Belief_YieldChangePerForeignCity", "YieldType", "BeliefType", szBeliefType, "Yield");

	push	0
	push	0
	push	OFFSET ??_C@_05LNDKIJIJ@Yield?$AA@
	mov	edx, DWORD PTR _szBeliefType$[ebp]
	push	edx
	push	OFFSET ??_C@_0L@MIJNBGID@BeliefType?$AA@
	push	OFFSET ??_C@_09HJBDLJFJ@YieldType?$AA@
	push	OFFSET ??_C@_0CB@JCPNMFPF@Belief_YieldChangePerForeignCity@
	push	OFFSET ??_C@_06JAMLCLDI@Yields?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 508				; 000001fcH
	push	eax
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?PopulateArrayByValue@CvDatabaseUtility@@QAE_NAAPAHPBD11111HH@Z ; CvDatabaseUtility::PopulateArrayByValue

; 881  : 	kUtility.PopulateArrayByValue(m_paiYieldChangePerXForeignFollowers, "Yields", "Belief_YieldChangePerXForeignFollowers", "YieldType", "BeliefType", szBeliefType, "ForeignFollowers");

	push	0
	push	0
	push	OFFSET ??_C@_0BB@DMIAOOOI@ForeignFollowers?$AA@
	mov	ecx, DWORD PTR _szBeliefType$[ebp]
	push	ecx
	push	OFFSET ??_C@_0L@MIJNBGID@BeliefType?$AA@
	push	OFFSET ??_C@_09HJBDLJFJ@YieldType?$AA@
	push	OFFSET ??_C@_0CH@KDFHLBFI@Belief_YieldChangePerXForeignFol@
	push	OFFSET ??_C@_06JAMLCLDI@Yields?$AA@
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 512				; 00000200H
	push	edx
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?PopulateArrayByValue@CvDatabaseUtility@@QAE_NAAPAHPBD11111HH@Z ; CvDatabaseUtility::PopulateArrayByValue

; 882  : 	kUtility.PopulateArrayByExistence(m_pbFaithPurchaseUnitEraEnabled, "Eras", "Belief_EraFaithUnitPurchase", "EraType", "BeliefType", szBeliefType);

	mov	eax, DWORD PTR _szBeliefType$[ebp]
	push	eax
	push	OFFSET ??_C@_0L@MIJNBGID@BeliefType?$AA@
	push	OFFSET ??_C@_07NECAIAEN@EraType?$AA@
	push	OFFSET ??_C@_0BM@ICCDNKGD@Belief_EraFaithUnitPurchase?$AA@
	push	OFFSET ??_C@_04CFPPDMOO@Eras?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 576				; 00000240H
	push	ecx
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?PopulateArrayByExistence@CvDatabaseUtility@@QAE_NAAPA_NPBD1111@Z ; CvDatabaseUtility::PopulateArrayByExistence

; 883  : 	kUtility.PopulateArrayByExistence(m_pbBuildingClassEnabled, "BuildingClasses", "Belief_BuildingClassFaithPurchase", "BuildingClassType", "BeliefType", szBeliefType);

	mov	edx, DWORD PTR _szBeliefType$[ebp]
	push	edx
	push	OFFSET ??_C@_0L@MIJNBGID@BeliefType?$AA@
	push	OFFSET ??_C@_0BC@OELPCAJJ@BuildingClassType?$AA@
	push	OFFSET ??_C@_0CC@JAJGAEJP@Belief_BuildingClassFaithPurchas@
	push	OFFSET ??_C@_0BA@GLDILOEP@BuildingClasses?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 580				; 00000244H
	push	eax
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?PopulateArrayByExistence@CvDatabaseUtility@@QAE_NAAPA_NPBD1111@Z ; CvDatabaseUtility::PopulateArrayByExistence

; 884  : 
; 885  : 	//ImprovementYieldChanges
; 886  : 	{
; 887  : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 888  : 		kUtility.Initialize2DArray(m_ppiImprovementYieldChanges.first, "Improvements", "Yields");
; 889  : 		m_ppiImprovementYieldChanges.second = kUtility.MaxRows("Improvements");
; 890  : #else
; 891  : 		kUtility.Initialize2DArray(m_ppiImprovementYieldChanges, "Improvements", "Yields");

	push	0
	push	OFFSET ??_C@_06JAMLCLDI@Yields?$AA@
	push	OFFSET ??_C@_0N@CJDAHDJO@Improvements?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 520				; 00000208H
	push	ecx
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?Initialize2DArray@CvDatabaseUtility@@QAE_NAAPAPAHPBD1H@Z ; CvDatabaseUtility::Initialize2DArray

; 892  : #endif
; 893  : 
; 894  : 		std::string strKey("Belief_ImprovementYieldChanges");

	push	OFFSET ??_C@_0BP@BJOPFIGE@Belief_ImprovementYieldChanges?$AA@
	lea	ecx, DWORD PTR _strKey$218075[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 895  : 		Database::Results* pResults = kUtility.GetResults(strKey);

	lea	edx, DWORD PTR _strKey$218075[ebp]
	push	edx
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?GetResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvDatabaseUtility::GetResults
	mov	DWORD PTR _pResults$218077[ebp], eax

; 896  : 		if(pResults == NULL)

	cmp	DWORD PTR _pResults$218077[ebp], 0
	jne	SHORT $LN15@CacheResul

; 897  : 		{
; 898  : 			pResults = kUtility.PrepareResults(strKey, "select Improvements.ID as ImprovementID, Yields.ID as YieldID, Yield from Belief_ImprovementYieldChanges inner join Improvements on Improvements.Type = ImprovementType inner join Yields on Yields.Type = YieldType where BeliefType = ?");

	push	OFFSET ??_C@_0OK@OIGMFHOD@select?5Improvements?4ID?5as?5Improv@
	lea	eax, DWORD PTR _strKey$218075[ebp]
	push	eax
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?PrepareResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CvDatabaseUtility::PrepareResults
	mov	DWORD PTR _pResults$218077[ebp], eax
$LN15@CacheResul:

; 899  : 		}
; 900  : 
; 901  : 		pResults->Bind(1, szBeliefType);

	push	1
	mov	ecx, DWORD PTR _szBeliefType$[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _pResults$218077[ebp]
	call	DWORD PTR __imp_?Bind@Results@Database@@QAE_NHPBD_N@Z
$LN14@CacheResul:

; 902  : 
; 903  : 		while(pResults->Step())

	mov	ecx, DWORD PTR _pResults$218077[ebp]
	call	DWORD PTR __imp_?Step@Results@Database@@QAE_NXZ
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN13@CacheResul

; 904  : 		{
; 905  : 			const int ImprovementID = pResults->GetInt(0);

	push	0
	mov	ecx, DWORD PTR _pResults$218077[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z
	mov	DWORD PTR _ImprovementID$218083[ebp], eax

; 906  : 			const int YieldID = pResults->GetInt(1);

	push	1
	mov	ecx, DWORD PTR _pResults$218077[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z
	mov	DWORD PTR _YieldID$218084[ebp], eax

; 907  : 			const int yield = pResults->GetInt(2);

	push	2
	mov	ecx, DWORD PTR _pResults$218077[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z
	mov	DWORD PTR _yield$218085[ebp], eax

; 908  : 
; 909  : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 910  : 			m_ppiImprovementYieldChanges.first[ImprovementID][YieldID] = yield;
; 911  : #else
; 912  : 			m_ppiImprovementYieldChanges[ImprovementID][YieldID] = yield;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+520]
	mov	edx, DWORD PTR _ImprovementID$218083[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _YieldID$218084[ebp]
	mov	edx, DWORD PTR _yield$218085[ebp]
	mov	DWORD PTR [eax+ecx*4], edx

; 913  : #endif
; 914  : 		}

	jmp	SHORT $LN14@CacheResul
$LN13@CacheResul:

; 915  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strKey$218075[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 916  : 
; 917  : 	//BuildingClassYieldChanges
; 918  : 	{
; 919  : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 920  : 		kUtility.Initialize2DArray(m_ppiBuildingClassYieldChanges.first, "BuildingClasses", "Yields");
; 921  : 		m_ppiBuildingClassYieldChanges.second = kUtility.MaxRows("BuildingClasses");
; 922  : #else
; 923  : 		kUtility.Initialize2DArray(m_ppiBuildingClassYieldChanges, "BuildingClasses", "Yields");

	push	0
	push	OFFSET ??_C@_06JAMLCLDI@Yields?$AA@
	push	OFFSET ??_C@_0BA@GLDILOEP@BuildingClasses?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 524				; 0000020cH
	push	eax
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?Initialize2DArray@CvDatabaseUtility@@QAE_NAAPAPAHPBD1H@Z ; CvDatabaseUtility::Initialize2DArray

; 924  : #endif
; 925  : 
; 926  : 		std::string strKey("Belief_BuildingClassYieldChanges");

	push	OFFSET ??_C@_0CB@IPGIPJMO@Belief_BuildingClassYieldChanges@
	lea	ecx, DWORD PTR _strKey$218086[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 927  : 		Database::Results* pResults = kUtility.GetResults(strKey);

	lea	ecx, DWORD PTR _strKey$218086[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?GetResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvDatabaseUtility::GetResults
	mov	DWORD PTR _pResults$218088[ebp], eax

; 928  : 		if(pResults == NULL)

	cmp	DWORD PTR _pResults$218088[ebp], 0
	jne	SHORT $LN12@CacheResul

; 929  : 		{
; 930  : 			pResults = kUtility.PrepareResults(strKey, "select BuildingClasses.ID as BuildingClassID, Yields.ID as YieldID, YieldChange from Belief_BuildingClassYieldChanges inner join BuildingClasses on BuildingClasses.Type = BuildingClassType inner join Yields on Yields.Type = YieldType where BeliefType = ?");

	push	OFFSET ??_C@_0PP@IPHBIJJJ@select?5BuildingClasses?4ID?5as?5Bui@
	lea	edx, DWORD PTR _strKey$218086[ebp]
	push	edx
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?PrepareResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CvDatabaseUtility::PrepareResults
	mov	DWORD PTR _pResults$218088[ebp], eax
$LN12@CacheResul:

; 931  : 		}
; 932  : 
; 933  : 		pResults->Bind(1, szBeliefType);

	push	1
	mov	eax, DWORD PTR _szBeliefType$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _pResults$218088[ebp]
	call	DWORD PTR __imp_?Bind@Results@Database@@QAE_NHPBD_N@Z
$LN11@CacheResul:

; 934  : 
; 935  : 		while(pResults->Step())

	mov	ecx, DWORD PTR _pResults$218088[ebp]
	call	DWORD PTR __imp_?Step@Results@Database@@QAE_NXZ
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@CacheResul

; 936  : 		{
; 937  : 			const int BuildingClassID = pResults->GetInt(0);

	push	0
	mov	ecx, DWORD PTR _pResults$218088[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z
	mov	DWORD PTR _BuildingClassID$218094[ebp], eax

; 938  : 			const int iYieldID = pResults->GetInt(1);

	push	1
	mov	ecx, DWORD PTR _pResults$218088[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z
	mov	DWORD PTR _iYieldID$218095[ebp], eax

; 939  : 			const int iYieldChange = pResults->GetInt(2);

	push	2
	mov	ecx, DWORD PTR _pResults$218088[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z
	mov	DWORD PTR _iYieldChange$218096[ebp], eax

; 940  : 
; 941  : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 942  : 			m_ppiBuildingClassYieldChanges.first[BuildingClassID][iYieldID] = iYieldChange;
; 943  : #else
; 944  : 			m_ppiBuildingClassYieldChanges[BuildingClassID][iYieldID] = iYieldChange;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+524]
	mov	ecx, DWORD PTR _BuildingClassID$218094[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _iYieldID$218095[ebp]
	mov	ecx, DWORD PTR _iYieldChange$218096[ebp]
	mov	DWORD PTR [edx+eax*4], ecx

; 945  : #endif
; 946  : 		}

	jmp	SHORT $LN11@CacheResul
$LN10@CacheResul:

; 947  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strKey$218086[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 948  : 
; 949  : #ifdef AUI_BELIEF_BUILDING_CLASS_FLAVOR_MODIFIERS
; 950  : 	//BuildingClassFlavorChanges
; 951  : 	{
; 952  : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 953  : 		kUtility.Initialize2DArray(m_ppiBuildingClassFlavorChanges.first, "BuildingClasses", "Flavors");
; 954  : 		m_ppiBuildingClassFlavorChanges.second = kUtility.MaxRows("BuildingClasses");
; 955  : #else
; 956  : 		kUtility.Initialize2DArray(m_ppiBuildingClassFlavorChanges, "BuildingClasses", "Flavors");
; 957  : #endif
; 958  : 
; 959  : 		std::string strKey("Belief_BuildingClassFlavorChanges");
; 960  : 		Database::Results* pResults = kUtility.GetResults(strKey);
; 961  : 		if (pResults == NULL)
; 962  : 		{
; 963  : 			pResults = kUtility.PrepareResults(strKey, "select BuildingClasses.ID as BuildingClassID, Flavors.ID as FlavorID, FlavorChange from Belief_BuildingClassFlavorChanges inner join BuildingClasses on BuildingClasses.Type = BuildingClassType inner join Flavors on Flavors.Type = FlavorType where BeliefType = ?");
; 964  : 		}
; 965  : 
; 966  : 		pResults->Bind(1, szBeliefType);
; 967  : 
; 968  : 		while (pResults->Step())
; 969  : 		{
; 970  : 			const int BuildingClassID = pResults->GetInt(0);
; 971  : 			const int iFlavorID = pResults->GetInt(1);
; 972  : 			const int iFlavorChange = pResults->GetInt(2);
; 973  : 
; 974  : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 975  : 			m_ppiBuildingClassFlavorChanges.first[BuildingClassID][iFlavorID] = iFlavorChange;
; 976  : #else
; 977  : 			m_ppiBuildingClassFlavorChanges[BuildingClassID][iFlavorID] = iFlavorChange;
; 978  : #endif
; 979  : 		}
; 980  : 	}
; 981  : #endif
; 982  : 
; 983  : 	//FeatureYieldChanges
; 984  : 	{
; 985  : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 986  : 		kUtility.Initialize2DArray(m_ppaiFeatureYieldChange.first, "Features", "Yields");
; 987  : 		m_ppaiFeatureYieldChange.second = kUtility.MaxRows("Features");
; 988  : #else
; 989  : 		kUtility.Initialize2DArray(m_ppaiFeatureYieldChange, "Features", "Yields");

	push	0
	push	OFFSET ??_C@_06JAMLCLDI@Yields?$AA@
	push	OFFSET ??_C@_08CLANBDND@Features?$AA@
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 536				; 00000218H
	push	edx
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?Initialize2DArray@CvDatabaseUtility@@QAE_NAAPAPAHPBD1H@Z ; CvDatabaseUtility::Initialize2DArray

; 990  : #endif
; 991  : 
; 992  : 		std::string strKey("Belief_FeatureYieldChanges");

	push	OFFSET ??_C@_0BL@CKFBOBGO@Belief_FeatureYieldChanges?$AA@
	lea	ecx, DWORD PTR _strKey$218098[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 2

; 993  : 		Database::Results* pResults = kUtility.GetResults(strKey);

	lea	eax, DWORD PTR _strKey$218098[ebp]
	push	eax
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?GetResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvDatabaseUtility::GetResults
	mov	DWORD PTR _pResults$218100[ebp], eax

; 994  : 		if(pResults == NULL)

	cmp	DWORD PTR _pResults$218100[ebp], 0
	jne	SHORT $LN9@CacheResul

; 995  : 		{
; 996  : 			pResults = kUtility.PrepareResults(strKey, "select Features.ID as FeatureID, Yields.ID as YieldID, Yield from Belief_FeatureYieldChanges inner join Features on Features.Type = FeatureType inner join Yields on Yields.Type = YieldType where BeliefType = ?");

	push	OFFSET ??_C@_0NC@EPEFBHPN@select?5Features?4ID?5as?5FeatureID?0@
	lea	ecx, DWORD PTR _strKey$218098[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?PrepareResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CvDatabaseUtility::PrepareResults
	mov	DWORD PTR _pResults$218100[ebp], eax
$LN9@CacheResul:

; 997  : 		}
; 998  : 
; 999  : 		pResults->Bind(1, szBeliefType);

	push	1
	mov	edx, DWORD PTR _szBeliefType$[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _pResults$218100[ebp]
	call	DWORD PTR __imp_?Bind@Results@Database@@QAE_NHPBD_N@Z
$LN8@CacheResul:

; 1000 : 
; 1001 : 		while(pResults->Step())

	mov	ecx, DWORD PTR _pResults$218100[ebp]
	call	DWORD PTR __imp_?Step@Results@Database@@QAE_NXZ
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@CacheResul

; 1002 : 		{
; 1003 : 			const int FeatureID = pResults->GetInt(0);

	push	0
	mov	ecx, DWORD PTR _pResults$218100[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z
	mov	DWORD PTR _FeatureID$218106[ebp], eax

; 1004 : 			const int YieldID = pResults->GetInt(1);

	push	1
	mov	ecx, DWORD PTR _pResults$218100[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z
	mov	DWORD PTR _YieldID$218107[ebp], eax

; 1005 : 			const int yield = pResults->GetInt(2);

	push	2
	mov	ecx, DWORD PTR _pResults$218100[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z
	mov	DWORD PTR _yield$218108[ebp], eax

; 1006 : 
; 1007 : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 1008 : 			m_ppaiFeatureYieldChange.first[FeatureID][YieldID] = yield;
; 1009 : #else
; 1010 : 			m_ppaiFeatureYieldChange[FeatureID][YieldID] = yield;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+536]
	mov	eax, DWORD PTR _FeatureID$218106[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	edx, DWORD PTR _YieldID$218107[ebp]
	mov	eax, DWORD PTR _yield$218108[ebp]
	mov	DWORD PTR [ecx+edx*4], eax

; 1011 : #endif
; 1012 : 		}

	jmp	SHORT $LN8@CacheResul
$LN7@CacheResul:

; 1013 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strKey$218098[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1014 : 
; 1015 : 	//ResourceYieldChanges
; 1016 : 	{
; 1017 : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 1018 : 		kUtility.Initialize2DArray(m_ppaiResourceYieldChange.first, "Resources", "Yields");
; 1019 : 		m_ppaiResourceYieldChange.second = kUtility.MaxRows("Resources");
; 1020 : #else
; 1021 : 		kUtility.Initialize2DArray(m_ppaiResourceYieldChange, "Resources", "Yields");

	push	0
	push	OFFSET ??_C@_06JAMLCLDI@Yields?$AA@
	push	OFFSET ??_C@_09FDCBPLKG@Resources?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 540				; 0000021cH
	push	ecx
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?Initialize2DArray@CvDatabaseUtility@@QAE_NAAPAPAHPBD1H@Z ; CvDatabaseUtility::Initialize2DArray

; 1022 : #endif
; 1023 : 
; 1024 : 		std::string strKey("Belief_ResourceYieldChanges");

	push	OFFSET ??_C@_0BM@BDGNPPLB@Belief_ResourceYieldChanges?$AA@
	lea	ecx, DWORD PTR _strKey$218109[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 3

; 1025 : 		Database::Results* pResults = kUtility.GetResults(strKey);

	lea	edx, DWORD PTR _strKey$218109[ebp]
	push	edx
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?GetResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvDatabaseUtility::GetResults
	mov	DWORD PTR _pResults$218111[ebp], eax

; 1026 : 		if(pResults == NULL)

	cmp	DWORD PTR _pResults$218111[ebp], 0
	jne	SHORT $LN6@CacheResul

; 1027 : 		{
; 1028 : 			pResults = kUtility.PrepareResults(strKey, "select Resources.ID as ResourceID, Yields.ID as YieldID, Yield from Belief_ResourceYieldChanges inner join Resources on Resources.Type = ResourceType inner join Yields on Yields.Type = YieldType where BeliefType = ?");

	push	OFFSET ??_C@_0NI@LJDABJEN@select?5Resources?4ID?5as?5ResourceI@
	lea	eax, DWORD PTR _strKey$218109[ebp]
	push	eax
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?PrepareResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CvDatabaseUtility::PrepareResults
	mov	DWORD PTR _pResults$218111[ebp], eax
$LN6@CacheResul:

; 1029 : 		}
; 1030 : 
; 1031 : 		pResults->Bind(1, szBeliefType);

	push	1
	mov	ecx, DWORD PTR _szBeliefType$[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _pResults$218111[ebp]
	call	DWORD PTR __imp_?Bind@Results@Database@@QAE_NHPBD_N@Z
$LN5@CacheResul:

; 1032 : 
; 1033 : 		while(pResults->Step())

	mov	ecx, DWORD PTR _pResults$218111[ebp]
	call	DWORD PTR __imp_?Step@Results@Database@@QAE_NXZ
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@CacheResul

; 1034 : 		{
; 1035 : 			const int ResourceID = pResults->GetInt(0);

	push	0
	mov	ecx, DWORD PTR _pResults$218111[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z
	mov	DWORD PTR _ResourceID$218117[ebp], eax

; 1036 : 			const int YieldID = pResults->GetInt(1);

	push	1
	mov	ecx, DWORD PTR _pResults$218111[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z
	mov	DWORD PTR _YieldID$218118[ebp], eax

; 1037 : 			const int yield = pResults->GetInt(2);

	push	2
	mov	ecx, DWORD PTR _pResults$218111[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z
	mov	DWORD PTR _yield$218119[ebp], eax

; 1038 : 
; 1039 : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 1040 : 			m_ppaiResourceYieldChange.first[ResourceID][YieldID] = yield;
; 1041 : #else
; 1042 : 			m_ppaiResourceYieldChange[ResourceID][YieldID] = yield;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	mov	edx, DWORD PTR _ResourceID$218117[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _YieldID$218118[ebp]
	mov	edx, DWORD PTR _yield$218119[ebp]
	mov	DWORD PTR [eax+ecx*4], edx

; 1043 : #endif
; 1044 : 		}

	jmp	SHORT $LN5@CacheResul
$LN4@CacheResul:

; 1045 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strKey$218109[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1046 : 
; 1047 : 	//TerrainYieldChanges
; 1048 : 	{
; 1049 : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 1050 : 		kUtility.Initialize2DArray(m_ppaiTerrainYieldChange.first, "Terrains", "Yields");
; 1051 : 		m_ppaiTerrainYieldChange.second = kUtility.MaxRows("Terrains");
; 1052 : #else
; 1053 : 		kUtility.Initialize2DArray(m_ppaiTerrainYieldChange, "Terrains", "Yields");

	push	0
	push	OFFSET ??_C@_06JAMLCLDI@Yields?$AA@
	push	OFFSET ??_C@_08DHHJBCFH@Terrains?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 544				; 00000220H
	push	eax
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?Initialize2DArray@CvDatabaseUtility@@QAE_NAAPAPAHPBD1H@Z ; CvDatabaseUtility::Initialize2DArray

; 1054 : #endif
; 1055 : 
; 1056 : 		std::string strKey("Belief_TerrainYieldChanges");

	push	OFFSET ??_C@_0BL@IEPAHKPA@Belief_TerrainYieldChanges?$AA@
	lea	ecx, DWORD PTR _strKey$218121[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 4

; 1057 : 		Database::Results* pResults = kUtility.GetResults(strKey);

	lea	ecx, DWORD PTR _strKey$218121[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?GetResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvDatabaseUtility::GetResults
	mov	DWORD PTR _pResults$218123[ebp], eax

; 1058 : 		if(pResults == NULL)

	cmp	DWORD PTR _pResults$218123[ebp], 0
	jne	SHORT $LN3@CacheResul

; 1059 : 		{
; 1060 : 			pResults = kUtility.PrepareResults(strKey, "select Terrains.ID as TerrainID, Yields.ID as YieldID, Yield from Belief_TerrainYieldChanges inner join Terrains on Terrains.Type = TerrainType inner join Yields on Yields.Type = YieldType where BeliefType = ?");

	push	OFFSET ??_C@_0NC@IMJDJKBC@select?5Terrains?4ID?5as?5TerrainID?0@
	lea	edx, DWORD PTR _strKey$218121[ebp]
	push	edx
	mov	ecx, DWORD PTR _kUtility$[ebp]
	call	?PrepareResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CvDatabaseUtility::PrepareResults
	mov	DWORD PTR _pResults$218123[ebp], eax
$LN3@CacheResul:

; 1061 : 		}
; 1062 : 
; 1063 : 		pResults->Bind(1, szBeliefType);

	push	1
	mov	eax, DWORD PTR _szBeliefType$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _pResults$218123[ebp]
	call	DWORD PTR __imp_?Bind@Results@Database@@QAE_NHPBD_N@Z
$LN2@CacheResul:

; 1064 : 
; 1065 : 		while(pResults->Step())

	mov	ecx, DWORD PTR _pResults$218123[ebp]
	call	DWORD PTR __imp_?Step@Results@Database@@QAE_NXZ
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@CacheResul

; 1066 : 		{
; 1067 : 			const int TerrainID = pResults->GetInt(0);

	push	0
	mov	ecx, DWORD PTR _pResults$218123[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z
	mov	DWORD PTR _TerrainID$218129[ebp], eax

; 1068 : 			const int YieldID = pResults->GetInt(1);

	push	1
	mov	ecx, DWORD PTR _pResults$218123[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z
	mov	DWORD PTR _YieldID$218130[ebp], eax

; 1069 : 			const int yield = pResults->GetInt(2);

	push	2
	mov	ecx, DWORD PTR _pResults$218123[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z
	mov	DWORD PTR _yield$218131[ebp], eax

; 1070 : 
; 1071 : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 1072 : 			m_ppaiTerrainYieldChange.first[TerrainID][YieldID] = yield;
; 1073 : #else
; 1074 : 			m_ppaiTerrainYieldChange[TerrainID][YieldID] = yield;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+544]
	mov	ecx, DWORD PTR _TerrainID$218129[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _YieldID$218130[ebp]
	mov	ecx, DWORD PTR _yield$218131[ebp]
	mov	DWORD PTR [edx+eax*4], ecx

; 1075 : #endif
; 1076 : 		}

	jmp	SHORT $LN2@CacheResul
$LN1@CacheResul:

; 1077 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strKey$218121[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1078 : 
; 1079 : 	return true;

	mov	al, 1
$LN17@CacheResul:

; 1080 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CacheResults@CvBeliefEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$0:
	lea	ecx, DWORD PTR _strKey$218075[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?CacheResults@CvBeliefEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$1:
	lea	ecx, DWORD PTR _strKey$218086[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?CacheResults@CvBeliefEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$2:
	lea	ecx, DWORD PTR _strKey$218098[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?CacheResults@CvBeliefEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$3:
	lea	ecx, DWORD PTR _strKey$218109[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?CacheResults@CvBeliefEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$4:
	lea	ecx, DWORD PTR _strKey$218121[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?CacheResults@CvBeliefEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-240]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CacheResults@CvBeliefEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CacheResults@CvBeliefEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z ENDP ; CvBeliefEntry::CacheResults
PUBLIC	??1?$_Vector_val@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE@XZ ; std::_Vector_val<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::~_Vector_val<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >
PUBLIC	?_Buy@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@IAE_NI@Z ; std::vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::_Buy
PUBLIC	??0CvBeliefXMLEntries@@QAE@XZ			; CvBeliefXMLEntries::CvBeliefXMLEntries
EXTRN	__CxxThrowException@8:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
xdata$x	SEGMENT
__unwindtable$??0CvBeliefXMLEntries@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CvBeliefXMLEntries@@QAE@XZ$1
__ehfuncinfo$??0CvBeliefXMLEntries@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CvBeliefXMLEntries@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvbeliefclasses.cpp
xdata$x	ENDS
;	COMDAT ??0CvBeliefXMLEntries@@QAE@XZ
_TEXT	SEGMENT
tv92 = -132						; size = 4
tv149 = -128						; size = 4
_this$ = -124						; size = 4
$T220208 = -30						; size = 1
$T220195 = -29						; size = 1
$T220191 = -28						; size = 4
$T220184 = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0CvBeliefXMLEntries@@QAE@XZ PROC			; CvBeliefXMLEntries::CvBeliefXMLEntries, COMDAT
; _this$ = ecx

; 1087 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CvBeliefXMLEntries@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 120				; 00000078H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T220208[ebp]
	mov	DWORD PTR $T220184[ebp], eax
	lea	ecx, DWORD PTR $T220195[ebp]
	mov	DWORD PTR $T220191[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv149[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv92[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@IAE_NI@Z ; std::vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::_Buy
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 1088 : 
; 1089 : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CvBeliefXMLEntries@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE@XZ
__ehhandler$??0CvBeliefXMLEntries@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-124]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CvBeliefXMLEntries@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CvBeliefXMLEntries@@QAE@XZ ENDP			; CvBeliefXMLEntries::CvBeliefXMLEntries
PUBLIC	??1?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE@XZ ; std::vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::~vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >
PUBLIC	?_Tidy@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@IAEXXZ ; std::vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::_Tidy
PUBLIC	?DeleteArray@CvBeliefXMLEntries@@QAEXXZ		; CvBeliefXMLEntries::DeleteArray
PUBLIC	??1CvBeliefXMLEntries@@QAE@XZ			; CvBeliefXMLEntries::~CvBeliefXMLEntries
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1CvBeliefXMLEntries@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvBeliefXMLEntries@@QAE@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvBeliefXMLEntries@@QAE@XZ$1
__ehfuncinfo$??1CvBeliefXMLEntries@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CvBeliefXMLEntries@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvbeliefclasses.cpp
xdata$x	ENDS
;	COMDAT ??1CvBeliefXMLEntries@@QAE@XZ
_TEXT	SEGMENT
_this$ = -44						; size = 4
__$EHRec$ = -12						; size = 12
??1CvBeliefXMLEntries@@QAE@XZ PROC			; CvBeliefXMLEntries::~CvBeliefXMLEntries, COMDAT
; _this$ = ecx

; 1093 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CvBeliefXMLEntries@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1094 : 	DeleteArray();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeleteArray@CvBeliefXMLEntries@@QAEXXZ	; CvBeliefXMLEntries::DeleteArray

; 1095 : }

	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@IAEXXZ ; std::vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CvBeliefXMLEntries@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE@XZ ; std::vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::~vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >
__unwindfunclet$??1CvBeliefXMLEntries@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE@XZ
__ehhandler$??1CvBeliefXMLEntries@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CvBeliefXMLEntries@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CvBeliefXMLEntries@@QAE@XZ ENDP			; CvBeliefXMLEntries::~CvBeliefXMLEntries
PUBLIC	?GetBeliefEntries@CvBeliefXMLEntries@@QAEAAV?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@XZ ; CvBeliefXMLEntries::GetBeliefEntries
; Function compile flags: /Odtp
;	COMDAT ?GetBeliefEntries@CvBeliefXMLEntries@@QAEAAV?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetBeliefEntries@CvBeliefXMLEntries@@QAEAAV?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@XZ PROC ; CvBeliefXMLEntries::GetBeliefEntries, COMDAT
; _this$ = ecx

; 1099 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1100 : 	return m_paBeliefEntries;

	mov	eax, DWORD PTR _this$[ebp]

; 1101 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetBeliefEntries@CvBeliefXMLEntries@@QAEAAV?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@XZ ENDP ; CvBeliefXMLEntries::GetBeliefEntries
_TEXT	ENDS
PUBLIC	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ	; CvBeliefXMLEntries::GetNumBeliefs
; Function compile flags: /Odtp
;	COMDAT ?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ PROC		; CvBeliefXMLEntries::GetNumBeliefs, COMDAT
; _this$ = ecx

; 1105 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1106 : 	return m_paBeliefEntries.size();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 1107 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ENDP		; CvBeliefXMLEntries::GetNumBeliefs
_TEXT	ENDS
PUBLIC	?erase@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@2@0@Z ; std::vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::erase
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp
;	COMDAT ?DeleteArray@CvBeliefXMLEntries@@QAEXXZ
_TEXT	SEGMENT
tv143 = -116						; size = 4
_this$ = -112						; size = 4
$T220451 = -56						; size = 4
$T220435 = -52						; size = 4
$T220555 = -48						; size = 4
$T220554 = -44						; size = 4
$T220553 = -40						; size = 4
$T220552 = -36						; size = 4
$T220551 = -32						; size = 4
$T220419 = -28						; size = 4
$T220413 = -24						; size = 4
$T220412 = -20						; size = 4
$T220378 = -16						; size = 4
$T220354 = -12						; size = 4
$T220344 = -8						; size = 4
_it$218304 = -4						; size = 4
?DeleteArray@CvBeliefXMLEntries@@QAEXXZ PROC		; CvBeliefXMLEntries::DeleteArray, COMDAT
; _this$ = ecx

; 1111 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 116				; 00000074H
	mov	DWORD PTR _this$[ebp], ecx

; 1112 : 	for(std::vector<CvBeliefEntry*>::iterator it = m_paBeliefEntries.begin(); it != m_paBeliefEntries.end(); ++it)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T220354[ebp], ecx
	mov	edx, DWORD PTR $T220354[ebp]
	mov	DWORD PTR _it$218304[ebp], edx
	jmp	SHORT $LN3@DeleteArra
$LN2@DeleteArra:
	mov	eax, DWORD PTR _it$218304[ebp]
	add	eax, 4
	mov	DWORD PTR _it$218304[ebp], eax
$LN3@DeleteArra:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T220378[ebp], edx
	mov	eax, DWORD PTR $T220378[ebp]
	mov	DWORD PTR $T220344[ebp], eax
	mov	ecx, DWORD PTR _it$218304[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR $T220344[ebp]
	sete	dl
	movzx	eax, dl
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@DeleteArra

; 1113 : 	{
; 1114 : 		SAFE_DELETE(*it);

	mov	edx, DWORD PTR _it$218304[ebp]
	mov	DWORD PTR $T220419[ebp], edx
	mov	eax, DWORD PTR $T220419[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T220413[ebp], ecx
	mov	edx, DWORD PTR $T220413[ebp]
	mov	DWORD PTR $T220412[ebp], edx
	cmp	DWORD PTR $T220412[ebp], 0
	je	SHORT $LN32@DeleteArra
	mov	ecx, DWORD PTR $T220412[ebp]
	call	??1CvBeliefEntry@@QAE@XZ		; CvBeliefEntry::~CvBeliefEntry
	mov	eax, 1
	and	eax, 1
	je	SHORT $LN35@DeleteArra
	mov	ecx, DWORD PTR $T220412[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN35@DeleteArra:
	mov	edx, DWORD PTR $T220412[ebp]
	mov	DWORD PTR tv143[ebp], edx
	jmp	SHORT $LN33@DeleteArra
$LN32@DeleteArra:
	mov	DWORD PTR tv143[ebp], 0
$LN33@DeleteArra:
	mov	eax, DWORD PTR $T220419[ebp]
	mov	DWORD PTR [eax], 0

; 1115 : 	}

	jmp	$LN2@DeleteArra
$LN1@DeleteArra:

; 1116 : 
; 1117 : 	m_paBeliefEntries.clear();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T220435[ebp], edx
	mov	eax, DWORD PTR $T220435[ebp]
	mov	DWORD PTR $T220552[ebp], eax
	mov	ecx, DWORD PTR $T220552[ebp]
	mov	DWORD PTR $T220551[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T220451[ebp], eax
	mov	ecx, DWORD PTR $T220451[ebp]
	mov	DWORD PTR $T220554[ebp], ecx
	mov	edx, DWORD PTR $T220554[ebp]
	mov	DWORD PTR $T220553[ebp], edx
	mov	eax, DWORD PTR $T220551[ebp]
	push	eax
	mov	ecx, DWORD PTR $T220553[ebp]
	push	ecx
	lea	edx, DWORD PTR $T220555[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@2@0@Z ; std::vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::erase

; 1118 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DeleteArray@CvBeliefXMLEntries@@QAEXXZ ENDP		; CvBeliefXMLEntries::DeleteArray
_TEXT	ENDS
PUBLIC	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
; Function compile flags: /Odtp
;	COMDAT ?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z PROC ; CvBeliefXMLEntries::GetEntry, COMDAT
; _this$ = ecx

; 1122 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1123 : 	return m_paBeliefEntries[index];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]

; 1124 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ENDP ; CvBeliefXMLEntries::GetEntry
_TEXT	ENDS
PUBLIC	??1?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ	; FStaticVector<int,5,0,297,0>::~FStaticVector<int,5,0,297,0>
PUBLIC	?Reset@CvReligionBeliefs@@QAEXXZ		; CvReligionBeliefs::Reset
PUBLIC	??0?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ	; FStaticVector<int,5,0,297,0>::FStaticVector<int,5,0,297,0>
PUBLIC	??0CvReligionBeliefs@@QAE@XZ			; CvReligionBeliefs::CvReligionBeliefs
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$??0CvReligionBeliefs@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CvReligionBeliefs@@QAE@XZ$0
__ehfuncinfo$??0CvReligionBeliefs@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CvReligionBeliefs@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvbeliefclasses.cpp
xdata$x	ENDS
;	COMDAT ??0CvReligionBeliefs@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
__$EHRec$ = -12						; size = 12
??0CvReligionBeliefs@@QAE@XZ PROC			; CvReligionBeliefs::CvReligionBeliefs, COMDAT
; _this$ = ecx

; 1132 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CvReligionBeliefs@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	??0?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<int,5,0,297,0>::FStaticVector<int,5,0,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+172], 0

; 1133 : 	Reset();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@CvReligionBeliefs@@QAEXXZ	; CvReligionBeliefs::Reset

; 1134 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CvReligionBeliefs@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	jmp	??1?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<int,5,0,297,0>::~FStaticVector<int,5,0,297,0>
__ehhandler$??0CvReligionBeliefs@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CvReligionBeliefs@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CvReligionBeliefs@@QAE@XZ ENDP			; CvReligionBeliefs::CvReligionBeliefs
PUBLIC	?Uninit@CvReligionBeliefs@@QAEXXZ		; CvReligionBeliefs::Uninit
PUBLIC	??1CvReligionBeliefs@@QAE@XZ			; CvReligionBeliefs::~CvReligionBeliefs
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$??1CvReligionBeliefs@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvReligionBeliefs@@QAE@XZ$0
__ehfuncinfo$??1CvReligionBeliefs@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CvReligionBeliefs@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvbeliefclasses.cpp
xdata$x	ENDS
;	COMDAT ??1CvReligionBeliefs@@QAE@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
__$EHRec$ = -12						; size = 12
??1CvReligionBeliefs@@QAE@XZ PROC			; CvReligionBeliefs::~CvReligionBeliefs, COMDAT
; _this$ = ecx

; 1138 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CvReligionBeliefs@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1139 : 	Uninit();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Uninit@CvReligionBeliefs@@QAEXXZ	; CvReligionBeliefs::Uninit

; 1140 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	??1?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<int,5,0,297,0>::~FStaticVector<int,5,0,297,0>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CvReligionBeliefs@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	jmp	??1?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<int,5,0,297,0>::~FStaticVector<int,5,0,297,0>
__ehhandler$??1CvReligionBeliefs@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CvReligionBeliefs@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CvReligionBeliefs@@QAE@XZ ENDP			; CvReligionBeliefs::~CvReligionBeliefs
PUBLIC	??4?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAEXABV0@@Z ; FStaticVector<int,5,0,297,0>::operator=
PUBLIC	??0CvReligionBeliefs@@QAE@ABV0@@Z		; CvReligionBeliefs::CvReligionBeliefs
EXTRN	?getBuildingClassInfo@CvGlobals@@QAEPAVCvBuildingClassInfo@@W4BuildingClassTypes@@@Z:PROC ; CvGlobals::getBuildingClassInfo
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ:PROC ; CvGlobals::getNumBuildingClassInfos
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\new
xdata$x	SEGMENT
__unwindtable$??0CvReligionBeliefs@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CvReligionBeliefs@@QAE@ABV0@@Z$0
__ehfuncinfo$??0CvReligionBeliefs@@QAE@ABV0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CvReligionBeliefs@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvbeliefclasses.cpp
xdata$x	ENDS
;	COMDAT ??0CvReligionBeliefs@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -68						; size = 4
$T220633 = -24						; size = 4
_pkBuildingClassInfo$218335 = -20			; size = 4
_iI$218331 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_source$ = 8						; size = 4
??0CvReligionBeliefs@@QAE@ABV0@@Z PROC			; CvReligionBeliefs::CvReligionBeliefs, COMDAT
; _this$ = ecx

; 1144 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CvReligionBeliefs@@QAE@ABV0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	??0?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<int,5,0,297,0>::FStaticVector<int,5,0,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1145 : 	m_iFaithFromDyingUnits = source.m_iFaithFromDyingUnits;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 1146 : 	m_iRiverHappiness = source.m_iRiverHappiness;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 1147 : 	m_iPlotCultureCostModifier = source.m_iPlotCultureCostModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx

; 1148 : 	m_iCityRangeStrikeModifier = source.m_iCityRangeStrikeModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx

; 1149 : 	m_iCombatModifierEnemyCities = source.m_iCombatModifierEnemyCities;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx

; 1150 : 	m_iCombatModifierFriendlyCities = source.m_iCombatModifierFriendlyCities;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx

; 1151 : 	m_iFriendlyHealChange = source.m_iFriendlyHealChange;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx

; 1152 : 	m_iCityStateFriendshipModifier = source.m_iCityStateFriendshipModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx

; 1153 : 	m_iLandBarbarianConversionPercent = source.m_iLandBarbarianConversionPercent;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx

; 1154 : 	m_iSpreadDistanceModifier = source.m_iSpreadDistanceModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+36], edx

; 1155 : 	m_iSpreadStrengthModifier = source.m_iSpreadStrengthModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR [eax+40], edx

; 1156 : 	m_iProphetStrengthModifier = source.m_iProphetStrengthModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR [eax+44], edx

; 1157 : 	m_iProphetCostModifier = source.m_iProphetCostModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax+48], edx

; 1158 : 	m_iMissionaryStrengthModifier = source.m_iMissionaryStrengthModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR [eax+52], edx

; 1159 : #ifdef NQ_FLAT_FAITH_PER_CITIZEN_BORN_FROM_BELIEFS
; 1160 : 	m_iFlatFaithPerCitizenBorn = source.m_iFlatFaithPerCitizenBorn;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	DWORD PTR [eax+56], edx

; 1161 : #endif
; 1162 : #ifdef NQ_BELIEF_EXTRA_MISSIONARY_SPREADS
; 1163 : 	m_iMissionaryExtraSpreads = source.m_iMissionaryExtraSpreads;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	mov	DWORD PTR [eax+60], edx

; 1164 : #endif
; 1165 : #ifdef NQ_SPREAD_MODIFIER_OWNED_CITIES
; 1166 : 	m_iSpreadModifierOwnedCities = source.m_iSpreadModifierOwnedCities;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	mov	DWORD PTR [eax+64], edx

; 1167 : 	m_iSpreadModifierUnownedCities = source.m_iSpreadModifierUnownedCities;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	DWORD PTR [eax+68], edx

; 1168 : #endif
; 1169 : #ifdef NQ_EXTRA_TRADE_ROUTES_FROM_BELIEF
; 1170 : 	m_iExtraTradeRoutes	= source.m_iExtraTradeRoutes;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	mov	DWORD PTR [eax+72], edx

; 1171 : #endif
; 1172 : #ifdef NQ_FAITH_PER_CITY_STATE_THIS_RELIGION
; 1173 : 	m_iFaithPerCityStateThisReligion = source.m_iFaithPerCityStateThisReligion;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	DWORD PTR [eax+76], edx

; 1174 : #endif
; 1175 : #ifdef NQ_FAITH_PER_FOREIGN_TRADE_ROUTE
; 1176 : 	m_iFaithPerForeignTradeRoute = source.m_iFaithPerForeignTradeRoute;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+80], edx

; 1177 : #endif
; 1178 : #ifdef NQ_GOLDEN_AGE_TURNS_FROM_BELIEF
; 1179 : 	m_iGoldenAgeTurns = source.m_iGoldenAgeTurns;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR [eax+84], edx

; 1180 : #endif
; 1181 : 	m_iMissionaryCostModifier = source.m_iMissionaryCostModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	mov	DWORD PTR [eax+88], edx

; 1182 : 	m_iFriendlyCityStateSpreadModifier = source.m_iFriendlyCityStateSpreadModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	mov	DWORD PTR [eax+92], edx

; 1183 : 	m_iGreatPersonExpendedFaith = source.m_iGreatPersonExpendedFaith;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR [eax+96], edx

; 1184 : 	m_iCityStateMinimumInfluence = source.m_iCityStateMinimumInfluence;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR [eax+100], edx

; 1185 : 	m_iCityStateInfluenceModifier = source.m_iCityStateInfluenceModifier;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	mov	DWORD PTR [eax+104], edx

; 1186 : 	m_iOtherReligionPressureErosion = source.m_iOtherReligionPressureErosion;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR [eax+108], edx

; 1187 : 	m_iSpyPressure = source.m_iSpyPressure;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	mov	DWORD PTR [eax+112], edx

; 1188 : 	m_iInquisitorPressureRetention = source.m_iInquisitorPressureRetention;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	mov	DWORD PTR [eax+116], edx

; 1189 : 	m_iFaithBuildingTourism = source.m_iFaithBuildingTourism;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	DWORD PTR [eax+120], edx

; 1190 : 
; 1191 : 	m_eObsoleteEra = source.m_eObsoleteEra;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	mov	DWORD PTR [eax+124], edx

; 1192 : 	m_eResourceRevealed = source.m_eResourceRevealed;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	mov	DWORD PTR [eax+128], edx

; 1193 : 	m_eSpreadModifierDoublingTech = source.m_eSpreadModifierDoublingTech;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	mov	DWORD PTR [eax+132], edx

; 1194 : 
; 1195 : 	m_ReligionBeliefs = source.m_ReligionBeliefs;

	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 136				; 00000088H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	??4?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAEXABV0@@Z ; FStaticVector<int,5,0,297,0>::operator=

; 1196 : 
; 1197 : 	m_paiBuildingClassEnabled = FNEW(int[GC.getNumBuildingClassInfos()], c_eCiv5GameplayDLL, 0);

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	xor	ecx, ecx
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T220633[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T220633[ebp]
	mov	DWORD PTR [eax+172], ecx

; 1198 : #ifdef AUI_WARNING_FIXES
; 1199 : 	for (uint iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)
; 1200 : 	{
; 1201 : #else
; 1202 : 	for(int iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)

	mov	DWORD PTR _iI$218331[ebp], 0
	jmp	SHORT $LN4@CvReligion
$LN3@CvReligion:
	mov	edx, DWORD PTR _iI$218331[ebp]
	add	edx, 1
	mov	DWORD PTR _iI$218331[ebp], edx
$LN4@CvReligion:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	cmp	DWORD PTR _iI$218331[ebp], eax
	jge	SHORT $LN5@CvReligion

; 1203 : 	{
; 1204 : 		CvBuildingClassInfo* pkBuildingClassInfo = GC.getBuildingClassInfo((BuildingClassTypes)iI);

	mov	eax, DWORD PTR _iI$218331[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingClassInfo@CvGlobals@@QAEPAVCvBuildingClassInfo@@W4BuildingClassTypes@@@Z ; CvGlobals::getBuildingClassInfo
	mov	DWORD PTR _pkBuildingClassInfo$218335[ebp], eax

; 1205 : 		if(!pkBuildingClassInfo)

	cmp	DWORD PTR _pkBuildingClassInfo$218335[ebp], 0
	jne	SHORT $LN1@CvReligion

; 1206 : 		{
; 1207 : 			continue;

	jmp	SHORT $LN3@CvReligion
$LN1@CvReligion:

; 1208 : 		}
; 1209 : #endif
; 1210 : 
; 1211 : 		m_paiBuildingClassEnabled[iI] = source.m_paiBuildingClassEnabled[iI];

	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+172]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	mov	eax, DWORD PTR _iI$218331[ebp]
	mov	esi, DWORD PTR _iI$218331[ebp]
	mov	edx, DWORD PTR [edx+esi*4]
	mov	DWORD PTR [ecx+eax*4], edx
	jmp	SHORT $LN3@CvReligion
$LN5@CvReligion:

; 1212 : 	}
; 1213 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CvReligionBeliefs@@QAE@ABV0@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	jmp	??1?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<int,5,0,297,0>::~FStaticVector<int,5,0,297,0>
__ehhandler$??0CvReligionBeliefs@@QAE@ABV0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CvReligionBeliefs@@QAE@ABV0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CvReligionBeliefs@@QAE@ABV0@@Z ENDP			; CvReligionBeliefs::CvReligionBeliefs
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
; Function compile flags: /Odtp
;	COMDAT ?Uninit@CvReligionBeliefs@@QAEXXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T220705 = -8						; size = 4
$T220704 = -4						; size = 4
?Uninit@CvReligionBeliefs@@QAEXXZ PROC			; CvReligionBeliefs::Uninit, COMDAT
; _this$ = ecx

; 1217 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1218 : 	SAFE_DELETE_ARRAY(m_paiBuildingClassEnabled);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 172				; 000000acH
	mov	DWORD PTR $T220705[ebp], eax
	mov	ecx, DWORD PTR $T220705[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T220704[ebp], edx
	mov	eax, DWORD PTR $T220704[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
	mov	ecx, DWORD PTR $T220705[ebp]
	mov	DWORD PTR [ecx], 0

; 1219 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Uninit@CvReligionBeliefs@@QAEXXZ ENDP			; CvReligionBeliefs::Uninit
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Reset@CvReligionBeliefs@@QAEXXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T220727 = -20						; size = 4
_i$220722 = -16						; size = 4
$T220708 = -12						; size = 4
_pkBuildingClassInfo$218354 = -8			; size = 4
_iI$218350 = -4						; size = 4
?Reset@CvReligionBeliefs@@QAEXXZ PROC			; CvReligionBeliefs::Reset, COMDAT
; _this$ = ecx

; 1223 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 1224 : 	m_iFaithFromDyingUnits = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 1225 : 	m_iRiverHappiness = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 1226 : 	m_iPlotCultureCostModifier = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 1227 : 	m_iCityRangeStrikeModifier = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 1228 : 	m_iCombatModifierEnemyCities = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0

; 1229 : 	m_iCombatModifierFriendlyCities = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], 0

; 1230 : 	m_iFriendlyHealChange = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0

; 1231 : 	m_iCityStateFriendshipModifier = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], 0

; 1232 : 	m_iLandBarbarianConversionPercent = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], 0

; 1233 : 	m_iSpreadDistanceModifier = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0

; 1234 : 	m_iSpreadStrengthModifier = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], 0

; 1235 : 	m_iProphetStrengthModifier = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], 0

; 1236 : 	m_iProphetCostModifier = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0

; 1237 : 	m_iMissionaryStrengthModifier = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+52], 0

; 1238 : #ifdef NQ_FLAT_FAITH_PER_CITIZEN_BORN_FROM_BELIEFS
; 1239 : 	m_iFlatFaithPerCitizenBorn = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], 0

; 1240 : #endif
; 1241 : #ifdef NQ_BELIEF_EXTRA_MISSIONARY_SPREADS
; 1242 : 	m_iMissionaryExtraSpreads = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 0

; 1243 : #endif
; 1244 : #ifdef NQ_SPREAD_MODIFIER_OWNED_CITIES
; 1245 : 	m_iSpreadModifierOwnedCities = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+64], 0

; 1246 : 	m_iSpreadModifierUnownedCities = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+68], 0

; 1247 : #endif
; 1248 : #ifdef NQ_EXTRA_TRADE_ROUTES_FROM_BELIEF
; 1249 : 	m_iExtraTradeRoutes	= 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0

; 1250 : #endif
; 1251 : #ifdef NQ_FAITH_PER_CITY_STATE_THIS_RELIGION
; 1252 : 	m_iFaithPerCityStateThisReligion = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+76], 0

; 1253 : #endif
; 1254 : #ifdef NQ_FAITH_PER_FOREIGN_TRADE_ROUTE
; 1255 : 	m_iFaithPerForeignTradeRoute = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+80], 0

; 1256 : #endif
; 1257 : #ifdef NQ_GOLDEN_AGE_TURNS_FROM_BELIEF
; 1258 : 	m_iGoldenAgeTurns = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0

; 1259 : #endif
; 1260 : 	m_iMissionaryCostModifier = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+88], 0

; 1261 : 	m_iFriendlyCityStateSpreadModifier = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+92], 0

; 1262 : 	m_iGreatPersonExpendedFaith = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+96], 0

; 1263 : 	m_iCityStateMinimumInfluence = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+100], 0

; 1264 : 	m_iCityStateInfluenceModifier = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+104], 0

; 1265 : 	m_iOtherReligionPressureErosion = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+108], 0

; 1266 : 	m_iSpyPressure = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+112], 0

; 1267 : 	m_iInquisitorPressureRetention = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+116], 0

; 1268 : 	m_iFaithBuildingTourism = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], 0

; 1269 : 
; 1270 : 	m_eObsoleteEra = NO_ERA;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+124], -1

; 1271 : 	m_eResourceRevealed = NO_RESOURCE;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+128], -1

; 1272 : 	m_eSpreadModifierDoublingTech = NO_TECH;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+132], -1

; 1273 : 
; 1274 : 	m_ReligionBeliefs.clear();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	mov	DWORD PTR $T220727[ebp], ecx
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN13@Reset
	mov	DWORD PTR _i$220722[ebp], 0
	jmp	SHORT $LN11@Reset
$LN10@Reset:
	mov	eax, DWORD PTR _i$220722[ebp]
	add	eax, 1
	mov	DWORD PTR _i$220722[ebp], eax
$LN11@Reset:
	mov	ecx, DWORD PTR $T220727[ebp]
	mov	edx, DWORD PTR _i$220722[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jae	SHORT $LN13@Reset
	jmp	SHORT $LN10@Reset
$LN13@Reset:
	mov	eax, DWORD PTR $T220727[ebp]
	mov	DWORD PTR [eax+4], 0

; 1275 : 
; 1276 : #ifdef AUI_WARNING_FIXES
; 1277 : 	SAFE_DELETE_ARRAY(m_paiBuildingClassEnabled);
; 1278 : #endif
; 1279 : 	m_paiBuildingClassEnabled = FNEW(int[GC.getNumBuildingClassInfos()], c_eCiv5GameplayDLL, 0);

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	xor	ecx, ecx
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T220708[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T220708[ebp]
	mov	DWORD PTR [eax+172], ecx

; 1280 : #ifdef AUI_WARNING_FIXES
; 1281 : 	for (uint iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)
; 1282 : 	{
; 1283 : #else
; 1284 : 	for(int iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)

	mov	DWORD PTR _iI$218350[ebp], 0
	jmp	SHORT $LN4@Reset
$LN3@Reset:
	mov	edx, DWORD PTR _iI$218350[ebp]
	add	edx, 1
	mov	DWORD PTR _iI$218350[ebp], edx
$LN4@Reset:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	cmp	DWORD PTR _iI$218350[ebp], eax
	jge	SHORT $LN5@Reset

; 1285 : 	{
; 1286 : 		CvBuildingClassInfo* pkBuildingClassInfo = GC.getBuildingClassInfo((BuildingClassTypes)iI);

	mov	eax, DWORD PTR _iI$218350[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingClassInfo@CvGlobals@@QAEPAVCvBuildingClassInfo@@W4BuildingClassTypes@@@Z ; CvGlobals::getBuildingClassInfo
	mov	DWORD PTR _pkBuildingClassInfo$218354[ebp], eax

; 1287 : 		if(!pkBuildingClassInfo)

	cmp	DWORD PTR _pkBuildingClassInfo$218354[ebp], 0
	jne	SHORT $LN1@Reset

; 1288 : 		{
; 1289 : 			continue;

	jmp	SHORT $LN3@Reset
$LN1@Reset:

; 1290 : 		}
; 1291 : #endif
; 1292 : 
; 1293 : 		m_paiBuildingClassEnabled[iI] = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+172]
	mov	eax, DWORD PTR _iI$218350[ebp]
	mov	DWORD PTR [edx+eax*4], 0
	jmp	SHORT $LN3@Reset
$LN5@Reset:

; 1294 : 	}
; 1295 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@CvReligionBeliefs@@QAEXXZ ENDP			; CvReligionBeliefs::Reset
_TEXT	ENDS
PUBLIC	?push_back@?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAEIABH@Z ; FStaticVector<int,5,0,297,0>::push_back
PUBLIC	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief
EXTRN	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ:PROC ; CvGlobals::GetGameBeliefs
; Function compile flags: /Odtp
;	COMDAT ?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z
_TEXT	SEGMENT
_this$ = -56						; size = 4
$T220730 = -12						; size = 4
_iI$218364 = -8						; size = 4
_belief$ = -4						; size = 4
_eBelief$ = 8						; size = 4
?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z PROC ; CvReligionBeliefs::AddBelief, COMDAT
; _this$ = ecx

; 1299 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	mov	DWORD PTR _this$[ebp], ecx

; 1300 : 	CvAssert(eBelief != NO_BELIEF);
; 1301 : 	if(eBelief == NO_BELIEF)

	cmp	DWORD PTR _eBelief$[ebp], -1
	jne	SHORT $LN7@AddBelief

; 1302 : 		return;

	jmp	$LN8@AddBelief
$LN7@AddBelief:

; 1303 : 
; 1304 : 	CvBeliefEntry* belief = GC.GetGameBeliefs()->GetEntry(eBelief);

	mov	eax, DWORD PTR _eBelief$[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	ecx, eax
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	DWORD PTR _belief$[ebp], eax

; 1305 : 	CvAssert(belief != NULL);
; 1306 : 	if(belief == NULL)

	cmp	DWORD PTR _belief$[ebp], 0
	jne	SHORT $LN6@AddBelief

; 1307 : 		return;

	jmp	$LN8@AddBelief
$LN6@AddBelief:

; 1308 : 
; 1309 : 	m_iFaithFromDyingUnits += belief->GetFaithFromDyingUnits();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetFaithFromDyingUnits@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFaithFromDyingUnits
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax

; 1310 : 	m_iRiverHappiness += belief->GetRiverHappiness();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetRiverHappiness@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetRiverHappiness
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax

; 1311 : 	m_iPlotCultureCostModifier += belief->GetPlotCultureCostModifier();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetPlotCultureCostModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetPlotCultureCostModifier
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax

; 1312 : 	m_iCityRangeStrikeModifier += belief->GetCityRangeStrikeModifier();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetCityRangeStrikeModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCityRangeStrikeModifier
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], eax

; 1313 : 	m_iCombatModifierEnemyCities += belief->GetCombatModifierEnemyCities();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetCombatModifierEnemyCities@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCombatModifierEnemyCities
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], eax

; 1314 : 	m_iCombatModifierFriendlyCities += belief->GetCombatModifierFriendlyCities();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetCombatModifierFriendlyCities@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCombatModifierFriendlyCities
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], eax

; 1315 : 	m_iFriendlyHealChange += belief->GetFriendlyHealChange();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetFriendlyHealChange@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFriendlyHealChange
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+24]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], eax

; 1316 : 	m_iCityStateFriendshipModifier += belief->GetCityStateFriendshipModifier();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetCityStateFriendshipModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCityStateFriendshipModifier
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+28]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], eax

; 1317 : 	m_iLandBarbarianConversionPercent += belief->GetLandBarbarianConversionPercent();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetLandBarbarianConversionPercent@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetLandBarbarianConversionPercent
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+32]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], eax

; 1318 : 	m_iSpreadDistanceModifier += belief->GetSpreadDistanceModifier();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetSpreadDistanceModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSpreadDistanceModifier
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+36]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], eax

; 1319 : 	m_iSpreadStrengthModifier += belief->GetSpreadStrengthModifier();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetSpreadStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSpreadStrengthModifier
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+40]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+40], eax

; 1320 : 	m_iProphetStrengthModifier += belief->GetProphetStrengthModifier();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetProphetStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetProphetStrengthModifier
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+44]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], eax

; 1321 : 	m_iProphetCostModifier += belief->GetProphetCostModifier();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetProphetCostModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetProphetCostModifier
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+48]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+48], eax

; 1322 : 	m_iMissionaryStrengthModifier += belief->GetMissionaryStrengthModifier();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetMissionaryStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetMissionaryStrengthModifier
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+52]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+52], eax

; 1323 : #ifdef NQ_FLAT_FAITH_PER_CITIZEN_BORN_FROM_BELIEFS
; 1324 : 	m_iFlatFaithPerCitizenBorn += belief->GetFlatFaithPerCitizenBorn();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetFlatFaithPerCitizenBorn@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFlatFaithPerCitizenBorn
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+56]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], eax

; 1325 : #endif
; 1326 : #ifdef NQ_BELIEF_EXTRA_MISSIONARY_SPREADS
; 1327 : 	m_iMissionaryExtraSpreads += belief->GetMissionaryExtraSpreads();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetMissionaryExtraSpreads@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetMissionaryExtraSpreads
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+60]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], eax

; 1328 : #endif
; 1329 : #ifdef NQ_SPREAD_MODIFIER_OWNED_CITIES
; 1330 : 	m_iSpreadModifierOwnedCities += belief->GetSpreadModifierOwnedCities();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetSpreadModifierOwnedCities@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSpreadModifierOwnedCities
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+64]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], eax

; 1331 : 	m_iSpreadModifierUnownedCities += belief->GetSpreadModifierUnownedCities();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetSpreadModifierUnownedCities@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSpreadModifierUnownedCities
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+68]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+68], eax

; 1332 : #endif
; 1333 : #ifdef NQ_EXTRA_TRADE_ROUTES_FROM_BELIEF
; 1334 : 	m_iExtraTradeRoutes	+= belief->GetExtraTradeRoutes();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetExtraTradeRoutes@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetExtraTradeRoutes
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+72]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+72], eax

; 1335 : #endif
; 1336 : #ifdef NQ_FAITH_PER_CITY_STATE_THIS_RELIGION
; 1337 : 	m_iFaithPerCityStateThisReligion += belief->GetFaithPerCityStateThisReligion();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetFaithPerCityStateThisReligion@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFaithPerCityStateThisReligion
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+76]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+76], eax

; 1338 : #endif
; 1339 : #ifdef NQ_FAITH_PER_FOREIGN_TRADE_ROUTE
; 1340 : 	m_iFaithPerForeignTradeRoute += belief->GetFaithPerForeignTradeRoute();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetFaithPerForeignTradeRoute@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFaithPerForeignTradeRoute
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+80]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+80], eax

; 1341 : #endif
; 1342 : #ifdef NQ_GOLDEN_AGE_TURNS_FROM_BELIEF
; 1343 : 	m_iGoldenAgeTurns += belief->GetGoldenAgeTurns();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetGoldenAgeTurns@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetGoldenAgeTurns
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+84]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+84], eax

; 1344 : #endif
; 1345 : 	m_iMissionaryCostModifier += belief->GetMissionaryCostModifier();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetMissionaryCostModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetMissionaryCostModifier
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+88]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+88], eax

; 1346 : 	m_iFriendlyCityStateSpreadModifier += belief->GetFriendlyCityStateSpreadModifier();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetFriendlyCityStateSpreadModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFriendlyCityStateSpreadModifier
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+92]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+92], eax

; 1347 : 	m_iGreatPersonExpendedFaith += belief->GetGreatPersonExpendedFaith();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetGreatPersonExpendedFaith@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetGreatPersonExpendedFaith
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+96]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+96], eax

; 1348 : 	m_iCityStateMinimumInfluence += belief->GetCityStateMinimumInfluence();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetCityStateMinimumInfluence@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCityStateMinimumInfluence
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+100]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+100], eax

; 1349 : 	m_iCityStateInfluenceModifier += belief->GetCityStateInfluenceModifier();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetCityStateInfluenceModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCityStateInfluenceModifier
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+104]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+104], eax

; 1350 : 	m_iOtherReligionPressureErosion += belief->GetOtherReligionPressureErosion();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetOtherReligionPressureErosion@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetOtherReligionPressureErosion
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+108]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+108], eax

; 1351 : 	m_iSpyPressure += belief->GetSpyPressure();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetSpyPressure@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetSpyPressure
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+112]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+112], eax

; 1352 : 	m_iInquisitorPressureRetention += belief->GetInquisitorPressureRetention();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetInquisitorPressureRetention@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetInquisitorPressureRetention
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+116]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+116], eax

; 1353 : 	m_iFaithBuildingTourism += belief->GetFaithBuildingTourism();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetFaithBuildingTourism@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFaithBuildingTourism
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+120]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+120], eax

; 1354 : 
; 1355 : 	m_eObsoleteEra = belief->GetObsoleteEra();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetObsoleteEra@CvBeliefEntry@@QBE?AW4EraTypes@@XZ ; CvBeliefEntry::GetObsoleteEra
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+124], eax

; 1356 : 	m_eResourceRevealed = belief->GetResourceRevealed();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetResourceRevealed@CvBeliefEntry@@QBE?AW4ResourceTypes@@XZ ; CvBeliefEntry::GetResourceRevealed
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+128], eax

; 1357 : 
; 1358 : #ifdef AUI_WARNING_FIXES
; 1359 : 	for (uint iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)
; 1360 : #else
; 1361 : 	for (int iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)

	mov	DWORD PTR _iI$218364[ebp], 0
	jmp	SHORT $LN5@AddBelief
$LN4@AddBelief:
	mov	eax, DWORD PTR _iI$218364[ebp]
	add	eax, 1
	mov	DWORD PTR _iI$218364[ebp], eax
$LN5@AddBelief:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	cmp	DWORD PTR _iI$218364[ebp], eax
	jge	SHORT $LN3@AddBelief

; 1362 : #endif
; 1363 : 	{
; 1364 : 		if (belief->IsBuildingClassEnabled(iI))

	mov	ecx, DWORD PTR _iI$218364[ebp]
	push	ecx
	mov	ecx, DWORD PTR _belief$[ebp]
	call	?IsBuildingClassEnabled@CvBeliefEntry@@QBE_NH@Z ; CvBeliefEntry::IsBuildingClassEnabled
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@AddBelief

; 1365 : 		{
; 1366 : 			m_paiBuildingClassEnabled[iI]++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	mov	edx, DWORD PTR _iI$218364[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+172]
	mov	ecx, DWORD PTR _iI$218364[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
$LN2@AddBelief:

; 1367 : 		}
; 1368 : 	}

	jmp	SHORT $LN4@AddBelief
$LN3@AddBelief:

; 1369 : 
; 1370 : 	if(belief->GetSpreadModifierDoublingTech() != NO_TECH)

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetSpreadModifierDoublingTech@CvBeliefEntry@@QBE?AW4TechTypes@@XZ ; CvBeliefEntry::GetSpreadModifierDoublingTech
	cmp	eax, -1
	je	SHORT $LN1@AddBelief

; 1371 : 	{
; 1372 : 		m_eSpreadModifierDoublingTech = belief->GetSpreadModifierDoublingTech();

	mov	ecx, DWORD PTR _belief$[ebp]
	call	?GetSpreadModifierDoublingTech@CvBeliefEntry@@QBE?AW4TechTypes@@XZ ; CvBeliefEntry::GetSpreadModifierDoublingTech
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+132], eax
$LN1@AddBelief:

; 1373 : 	}
; 1374 : 
; 1375 : 	m_ReligionBeliefs.push_back((int)eBelief);

	mov	eax, DWORD PTR _eBelief$[ebp]
	mov	DWORD PTR $T220730[ebp], eax
	lea	ecx, DWORD PTR $T220730[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	?push_back@?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAEIABH@Z ; FStaticVector<int,5,0,297,0>::push_back
$LN8@AddBelief:

; 1376 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ENDP ; CvReligionBeliefs::AddBelief
_TEXT	ENDS
PUBLIC	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
; Function compile flags: /Odtp
;	COMDAT ?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T220807 = -28						; size = 4
$T220803 = -24						; size = 4
$T220794 = -20						; size = 4
$T220785 = -16						; size = 4
$T220781 = -12						; size = 4
$T220780 = -8						; size = 4
$T220776 = -4						; size = 4
_eBelief$ = 8						; size = 4
?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z PROC ; CvReligionBeliefs::HasBelief, COMDAT
; _this$ = ecx

; 1380 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 1381 : 	return (find(m_ReligionBeliefs.begin(), m_ReligionBeliefs.end(), (int)eBelief) != m_ReligionBeliefs.end());

	mov	eax, DWORD PTR _eBelief$[ebp]
	mov	DWORD PTR $T220776[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	mov	DWORD PTR $T220780[ebp], ecx
	mov	edx, DWORD PTR $T220780[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR $T220780[ebp]
	mov	edx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR $T220781[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	mov	DWORD PTR $T220785[ebp], edx
	mov	eax, DWORD PTR $T220785[ebp]
	mov	DWORD PTR $T220803[ebp], eax
	mov	ecx, DWORD PTR $T220803[ebp]
	mov	DWORD PTR $T220794[ebp], ecx
	jmp	SHORT $LN12@HasBelief
$LN11@HasBelief:
	mov	edx, DWORD PTR $T220794[ebp]
	add	edx, 4
	mov	DWORD PTR $T220794[ebp], edx
$LN12@HasBelief:
	mov	eax, DWORD PTR $T220794[ebp]
	cmp	eax, DWORD PTR $T220781[ebp]
	je	SHORT $LN13@HasBelief
	mov	ecx, DWORD PTR $T220794[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR $T220776[ebp]
	jne	SHORT $LN9@HasBelief
	jmp	SHORT $LN13@HasBelief
$LN9@HasBelief:
	jmp	SHORT $LN11@HasBelief
$LN13@HasBelief:
	mov	eax, DWORD PTR $T220794[ebp]
	mov	DWORD PTR $T220803[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	mov	DWORD PTR $T220807[ebp], ecx
	mov	edx, DWORD PTR $T220807[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR $T220807[ebp]
	mov	edx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [edx+eax*4]
	xor	ecx, ecx
	cmp	DWORD PTR $T220803[ebp], eax
	setne	cl
	mov	al, cl

; 1382 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ENDP ; CvReligionBeliefs::HasBelief
_TEXT	ENDS
PUBLIC	?GetBelief@CvReligionBeliefs@@QBE?AW4BeliefTypes@@H@Z ; CvReligionBeliefs::GetBelief
; Function compile flags: /Odtp
;	COMDAT ?GetBelief@CvReligionBeliefs@@QBE?AW4BeliefTypes@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iIndex$ = 8						; size = 4
?GetBelief@CvReligionBeliefs@@QBE?AW4BeliefTypes@@H@Z PROC ; CvReligionBeliefs::GetBelief, COMDAT
; _this$ = ecx

; 1386 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1387 : 	return (BeliefTypes)m_ReligionBeliefs[iIndex];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	mov	edx, DWORD PTR _iIndex$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]

; 1388 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetBelief@CvReligionBeliefs@@QBE?AW4BeliefTypes@@H@Z ENDP ; CvReligionBeliefs::GetBelief
_TEXT	ENDS
PUBLIC	?GetNumBeliefs@CvReligionBeliefs@@QBEHXZ	; CvReligionBeliefs::GetNumBeliefs
; Function compile flags: /Odtp
;	COMDAT ?GetNumBeliefs@CvReligionBeliefs@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T220818 = -4						; size = 4
?GetNumBeliefs@CvReligionBeliefs@@QBEHXZ PROC		; CvReligionBeliefs::GetNumBeliefs, COMDAT
; _this$ = ecx

; 1392 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1393 : 	return m_ReligionBeliefs.size();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	mov	DWORD PTR $T220818[ebp], ecx
	mov	eax, DWORD PTR $T220818[ebp]

; 1394 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumBeliefs@CvReligionBeliefs@@QBEHXZ ENDP		; CvReligionBeliefs::GetNumBeliefs
_TEXT	ENDS
PUBLIC	?GetFaithFromKills@CvReligionBeliefs@@QBEHH@Z	; CvReligionBeliefs::GetFaithFromKills
; Function compile flags: /Odtp
;	COMDAT ?GetFaithFromKills@CvReligionBeliefs@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
_i$218400 = -16						; size = 4
_iRequiredDistance$ = -12				; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_iDistance$ = 8						; size = 4
?GetFaithFromKills@CvReligionBeliefs@@QBEHH@Z PROC	; CvReligionBeliefs::GetFaithFromKills, COMDAT
; _this$ = ecx

; 1398 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 1399 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1400 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1401 : 	int iRequiredDistance;
; 1402 : 
; 1403 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218400[ebp], 0
	jmp	SHORT $LN6@GetFaithFr
$LN5@GetFaithFr:
	mov	eax, DWORD PTR _i$218400[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218400[ebp], eax
$LN6@GetFaithFr:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218400[ebp], eax
	jge	SHORT $LN4@GetFaithFr

; 1404 : 	{
; 1405 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218400[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@GetFaithFr

; 1406 : 		{
; 1407 : 			iRequiredDistance = pBeliefs->GetEntry(i)->GetMaxDistance();

	mov	eax, DWORD PTR _i$218400[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetMaxDistance@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetMaxDistance
	mov	DWORD PTR _iRequiredDistance$[ebp], eax

; 1408 : 			if(iRequiredDistance == 0 || iDistance <= iRequiredDistance)

	cmp	DWORD PTR _iRequiredDistance$[ebp], 0
	je	SHORT $LN1@GetFaithFr
	mov	ecx, DWORD PTR _iDistance$[ebp]
	cmp	ecx, DWORD PTR _iRequiredDistance$[ebp]
	jg	SHORT $LN3@GetFaithFr
$LN1@GetFaithFr:

; 1409 : 			{
; 1410 : 				rtnValue += pBeliefs->GetEntry(i)->GetFaithFromKills();

	mov	edx, DWORD PTR _i$218400[ebp]
	push	edx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetFaithFromKills@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFaithFromKills
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN3@GetFaithFr:

; 1411 : 			}
; 1412 : 		}
; 1413 : 	}

	jmp	SHORT $LN5@GetFaithFr
$LN4@GetFaithFr:

; 1414 : 
; 1415 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1416 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetFaithFromKills@CvReligionBeliefs@@QBEHH@Z ENDP	; CvReligionBeliefs::GetFaithFromKills
_TEXT	ENDS
PUBLIC	?GetHappinessPerCity@CvReligionBeliefs@@QBEHH@Z	; CvReligionBeliefs::GetHappinessPerCity
; Function compile flags: /Odtp
;	COMDAT ?GetHappinessPerCity@CvReligionBeliefs@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218414 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_iPopulation$ = 8					; size = 4
?GetHappinessPerCity@CvReligionBeliefs@@QBEHH@Z PROC	; CvReligionBeliefs::GetHappinessPerCity, COMDAT
; _this$ = ecx

; 1420 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1421 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1422 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1423 : 
; 1424 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218414[ebp], 0
	jmp	SHORT $LN5@GetHappine
$LN4@GetHappine:
	mov	eax, DWORD PTR _i$218414[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218414[ebp], eax
$LN5@GetHappine:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218414[ebp], eax
	jge	SHORT $LN3@GetHappine

; 1425 : 	{
; 1426 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218414[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@GetHappine

; 1427 : 		{
; 1428 : 			if(iPopulation >= pBeliefs->GetEntry(i)->GetMinPopulation())

	mov	eax, DWORD PTR _i$218414[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetMinPopulation@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetMinPopulation
	cmp	DWORD PTR _iPopulation$[ebp], eax
	jl	SHORT $LN2@GetHappine

; 1429 : 			{
; 1430 : 				rtnValue += pBeliefs->GetEntry(i)->GetHappinessPerCity();

	mov	ecx, DWORD PTR _i$218414[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetHappinessPerCity@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetHappinessPerCity
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN2@GetHappine:

; 1431 : 			}
; 1432 : 		}
; 1433 : 	}

	jmp	SHORT $LN4@GetHappine
$LN3@GetHappine:

; 1434 : 
; 1435 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1436 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetHappinessPerCity@CvReligionBeliefs@@QBEHH@Z ENDP	; CvReligionBeliefs::GetHappinessPerCity
_TEXT	ENDS
PUBLIC	?GetHappinessPerXPeacefulForeignFollowers@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetHappinessPerXPeacefulForeignFollowers
; Function compile flags: /Odtp
;	COMDAT ?GetHappinessPerXPeacefulForeignFollowers@CvReligionBeliefs@@QBEHXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_i$218425 = -8						; size = 4
_pBeliefs$ = -4						; size = 4
?GetHappinessPerXPeacefulForeignFollowers@CvReligionBeliefs@@QBEHXZ PROC ; CvReligionBeliefs::GetHappinessPerXPeacefulForeignFollowers, COMDAT
; _this$ = ecx

; 1440 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1441 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1442 : 
; 1443 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218425[ebp], 0
	jmp	SHORT $LN4@GetHappine@2
$LN3@GetHappine@2:
	mov	eax, DWORD PTR _i$218425[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218425[ebp], eax
$LN4@GetHappine@2:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218425[ebp], eax
	jge	SHORT $LN2@GetHappine@2

; 1444 : 	{
; 1445 : 		if(HasBelief((BeliefTypes)i) && pBeliefs->GetEntry(i)->GetHappinessPerXPeacefulForeignFollowers() > 0)

	mov	ecx, DWORD PTR _i$218425[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetHappine@2
	mov	eax, DWORD PTR _i$218425[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetHappinessPerXPeacefulForeignFollowers@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetHappinessPerXPeacefulForeignFollowers
	test	eax, eax
	jle	SHORT $LN1@GetHappine@2

; 1446 : 		{
; 1447 : 			return pBeliefs->GetEntry(i)->GetHappinessPerXPeacefulForeignFollowers();

	mov	ecx, DWORD PTR _i$218425[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetHappinessPerXPeacefulForeignFollowers@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetHappinessPerXPeacefulForeignFollowers
	jmp	SHORT $LN5@GetHappine@2
$LN1@GetHappine@2:

; 1448 : 		}
; 1449 : 	}

	jmp	SHORT $LN3@GetHappine@2
$LN2@GetHappine@2:

; 1450 : 
; 1451 : 	return 0;

	xor	eax, eax
$LN5@GetHappine@2:

; 1452 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetHappinessPerXPeacefulForeignFollowers@CvReligionBeliefs@@QBEHXZ ENDP ; CvReligionBeliefs::GetHappinessPerXPeacefulForeignFollowers
_TEXT	ENDS
PUBLIC	?GetWonderProductionModifier@CvReligionBeliefs@@QBEHW4EraTypes@@@Z ; CvReligionBeliefs::GetWonderProductionModifier
; Function compile flags: /Odtp
;	COMDAT ?GetWonderProductionModifier@CvReligionBeliefs@@QBEHW4EraTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218437 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_eWonderEra$ = 8					; size = 4
?GetWonderProductionModifier@CvReligionBeliefs@@QBEHW4EraTypes@@@Z PROC ; CvReligionBeliefs::GetWonderProductionModifier, COMDAT
; _this$ = ecx

; 1456 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1457 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1458 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1459 : 
; 1460 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218437[ebp], 0
	jmp	SHORT $LN5@GetWonderP
$LN4@GetWonderP:
	mov	eax, DWORD PTR _i$218437[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218437[ebp], eax
$LN5@GetWonderP:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218437[ebp], eax
	jge	SHORT $LN3@GetWonderP

; 1461 : 	{
; 1462 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218437[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@GetWonderP

; 1463 : 		{
; 1464 : 			if((int)eWonderEra < (int)pBeliefs->GetEntry(i)->GetObsoleteEra())

	mov	eax, DWORD PTR _i$218437[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetObsoleteEra@CvBeliefEntry@@QBE?AW4EraTypes@@XZ ; CvBeliefEntry::GetObsoleteEra
	cmp	DWORD PTR _eWonderEra$[ebp], eax
	jge	SHORT $LN2@GetWonderP

; 1465 : 			{
; 1466 : 				rtnValue += pBeliefs->GetEntry(i)->GetWonderProductionModifier();

	mov	ecx, DWORD PTR _i$218437[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetWonderProductionModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetWonderProductionModifier
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN2@GetWonderP:

; 1467 : 			}
; 1468 : 		}
; 1469 : 	}

	jmp	SHORT $LN4@GetWonderP
$LN3@GetWonderP:

; 1470 : 
; 1471 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1472 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetWonderProductionModifier@CvReligionBeliefs@@QBEHW4EraTypes@@@Z ENDP ; CvReligionBeliefs::GetWonderProductionModifier
_TEXT	ENDS
PUBLIC	?GetPlayerHappiness@CvReligionBeliefs@@QBEH_N@Z	; CvReligionBeliefs::GetPlayerHappiness
; Function compile flags: /Odtp
;	COMDAT ?GetPlayerHappiness@CvReligionBeliefs@@QBEH_N@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218452 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_bAtPeace$ = 8						; size = 1
?GetPlayerHappiness@CvReligionBeliefs@@QBEH_N@Z PROC	; CvReligionBeliefs::GetPlayerHappiness, COMDAT
; _this$ = ecx

; 1476 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1477 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1478 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1479 : 
; 1480 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218452[ebp], 0
	jmp	SHORT $LN6@GetPlayerH
$LN5@GetPlayerH:
	mov	eax, DWORD PTR _i$218452[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218452[ebp], eax
$LN6@GetPlayerH:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218452[ebp], eax
	jge	SHORT $LN4@GetPlayerH

; 1481 : 	{
; 1482 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218452[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@GetPlayerH

; 1483 : 		{
; 1484 : 			if(bAtPeace || !pBeliefs->GetEntry(i)->RequiresPeace())

	movzx	eax, BYTE PTR _bAtPeace$[ebp]
	test	eax, eax
	jne	SHORT $LN1@GetPlayerH
	mov	ecx, DWORD PTR _i$218452[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?RequiresPeace@CvBeliefEntry@@QBE_NXZ	; CvBeliefEntry::RequiresPeace
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@GetPlayerH
$LN1@GetPlayerH:

; 1485 : 			{
; 1486 : 				rtnValue += pBeliefs->GetEntry(i)->GetPlayerHappiness();

	mov	eax, DWORD PTR _i$218452[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetPlayerHappiness@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetPlayerHappiness
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN3@GetPlayerH:

; 1487 : 			}
; 1488 : 		}
; 1489 : 	}

	jmp	SHORT $LN5@GetPlayerH
$LN4@GetPlayerH:

; 1490 : 
; 1491 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1492 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetPlayerHappiness@CvReligionBeliefs@@QBEH_N@Z ENDP	; CvReligionBeliefs::GetPlayerHappiness
_TEXT	ENDS
PUBLIC	?GetPlayerCultureModifier@CvReligionBeliefs@@QBEH_N@Z ; CvReligionBeliefs::GetPlayerCultureModifier
; Function compile flags: /Odtp
;	COMDAT ?GetPlayerCultureModifier@CvReligionBeliefs@@QBEH_N@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218466 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_bAtPeace$ = 8						; size = 1
?GetPlayerCultureModifier@CvReligionBeliefs@@QBEH_N@Z PROC ; CvReligionBeliefs::GetPlayerCultureModifier, COMDAT
; _this$ = ecx

; 1496 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1497 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1498 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1499 : 
; 1500 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218466[ebp], 0
	jmp	SHORT $LN6@GetPlayerC
$LN5@GetPlayerC:
	mov	eax, DWORD PTR _i$218466[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218466[ebp], eax
$LN6@GetPlayerC:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218466[ebp], eax
	jge	SHORT $LN4@GetPlayerC

; 1501 : 	{
; 1502 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218466[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@GetPlayerC

; 1503 : 		{
; 1504 : 			if(bAtPeace || !pBeliefs->GetEntry(i)->RequiresPeace())

	movzx	eax, BYTE PTR _bAtPeace$[ebp]
	test	eax, eax
	jne	SHORT $LN1@GetPlayerC
	mov	ecx, DWORD PTR _i$218466[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?RequiresPeace@CvBeliefEntry@@QBE_NXZ	; CvBeliefEntry::RequiresPeace
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@GetPlayerC
$LN1@GetPlayerC:

; 1505 : 			{
; 1506 : 				rtnValue += pBeliefs->GetEntry(i)->GetPlayerCultureModifier();

	mov	eax, DWORD PTR _i$218466[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetPlayerCultureModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetPlayerCultureModifier
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN3@GetPlayerC:

; 1507 : 			}
; 1508 : 		}
; 1509 : 	}

	jmp	SHORT $LN5@GetPlayerC
$LN4@GetPlayerC:

; 1510 : 
; 1511 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1512 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetPlayerCultureModifier@CvReligionBeliefs@@QBEH_N@Z ENDP ; CvReligionBeliefs::GetPlayerCultureModifier
_TEXT	ENDS
PUBLIC	?GetHappinessPerFollowingCity@CvReligionBeliefs@@QBEMXZ ; CvReligionBeliefs::GetHappinessPerFollowingCity
; Function compile flags: /Odtp
;	COMDAT ?GetHappinessPerFollowingCity@CvReligionBeliefs@@QBEMXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218479 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
?GetHappinessPerFollowingCity@CvReligionBeliefs@@QBEMXZ PROC ; CvReligionBeliefs::GetHappinessPerFollowingCity, COMDAT
; _this$ = ecx

; 1516 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1517 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1518 : 	float rtnValue = 0.0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _rtnValue$[ebp], xmm0

; 1519 : 
; 1520 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218479[ebp], 0
	jmp	SHORT $LN4@GetHappine@3
$LN3@GetHappine@3:
	mov	eax, DWORD PTR _i$218479[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218479[ebp], eax
$LN4@GetHappine@3:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218479[ebp], eax
	jge	SHORT $LN2@GetHappine@3

; 1521 : 	{
; 1522 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218479[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetHappine@3

; 1523 : 		{
; 1524 : 			rtnValue += pBeliefs->GetEntry(i)->GetHappinessPerFollowingCity();

	mov	eax, DWORD PTR _i$218479[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetHappinessPerFollowingCity@CvBeliefEntry@@QBEMXZ ; CvBeliefEntry::GetHappinessPerFollowingCity
	fadd	DWORD PTR _rtnValue$[ebp]
	fstp	DWORD PTR _rtnValue$[ebp]
$LN1@GetHappine@3:

; 1525 : 		}
; 1526 : 	}

	jmp	SHORT $LN3@GetHappine@3
$LN2@GetHappine@3:

; 1527 : 
; 1528 : 	return rtnValue;

	fld	DWORD PTR _rtnValue$[ebp]

; 1529 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetHappinessPerFollowingCity@CvReligionBeliefs@@QBEMXZ ENDP ; CvReligionBeliefs::GetHappinessPerFollowingCity
_TEXT	ENDS
PUBLIC	?GetGoldPerFollowingCity@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetGoldPerFollowingCity
; Function compile flags: /Odtp
;	COMDAT ?GetGoldPerFollowingCity@CvReligionBeliefs@@QBEHXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218490 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
?GetGoldPerFollowingCity@CvReligionBeliefs@@QBEHXZ PROC	; CvReligionBeliefs::GetGoldPerFollowingCity, COMDAT
; _this$ = ecx

; 1533 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1534 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1535 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1536 : 
; 1537 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218490[ebp], 0
	jmp	SHORT $LN4@GetGoldPer
$LN3@GetGoldPer:
	mov	eax, DWORD PTR _i$218490[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218490[ebp], eax
$LN4@GetGoldPer:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218490[ebp], eax
	jge	SHORT $LN2@GetGoldPer

; 1538 : 	{
; 1539 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218490[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetGoldPer

; 1540 : 		{
; 1541 : 			rtnValue += pBeliefs->GetEntry(i)->GetGoldPerFollowingCity();

	mov	eax, DWORD PTR _i$218490[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetGoldPerFollowingCity@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetGoldPerFollowingCity
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN1@GetGoldPer:

; 1542 : 		}
; 1543 : 	}

	jmp	SHORT $LN3@GetGoldPer
$LN2@GetGoldPer:

; 1544 : 
; 1545 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1546 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetGoldPerFollowingCity@CvReligionBeliefs@@QBEHXZ ENDP	; CvReligionBeliefs::GetGoldPerFollowingCity
_TEXT	ENDS
PUBLIC	?GetGoldPerXFollowers@CvReligionBeliefs@@QBEHXZ	; CvReligionBeliefs::GetGoldPerXFollowers
; Function compile flags: /Odtp
;	COMDAT ?GetGoldPerXFollowers@CvReligionBeliefs@@QBEHXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218501 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
?GetGoldPerXFollowers@CvReligionBeliefs@@QBEHXZ PROC	; CvReligionBeliefs::GetGoldPerXFollowers, COMDAT
; _this$ = ecx

; 1550 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1551 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1552 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1553 : 
; 1554 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218501[ebp], 0
	jmp	SHORT $LN4@GetGoldPer@2
$LN3@GetGoldPer@2:
	mov	eax, DWORD PTR _i$218501[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218501[ebp], eax
$LN4@GetGoldPer@2:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218501[ebp], eax
	jge	SHORT $LN2@GetGoldPer@2

; 1555 : 	{
; 1556 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218501[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetGoldPer@2

; 1557 : 		{
; 1558 : 			rtnValue += pBeliefs->GetEntry(i)->GetGoldPerXFollowers();

	mov	eax, DWORD PTR _i$218501[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetGoldPerXFollowers@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetGoldPerXFollowers
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN1@GetGoldPer@2:

; 1559 : 		}
; 1560 : 	}

	jmp	SHORT $LN3@GetGoldPer@2
$LN2@GetGoldPer@2:

; 1561 : 
; 1562 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1563 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetGoldPerXFollowers@CvReligionBeliefs@@QBEHXZ ENDP	; CvReligionBeliefs::GetGoldPerXFollowers
_TEXT	ENDS
PUBLIC	?GetGoldWhenCityAdopts@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetGoldWhenCityAdopts
; Function compile flags: /Odtp
;	COMDAT ?GetGoldWhenCityAdopts@CvReligionBeliefs@@QBEHXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218512 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
?GetGoldWhenCityAdopts@CvReligionBeliefs@@QBEHXZ PROC	; CvReligionBeliefs::GetGoldWhenCityAdopts, COMDAT
; _this$ = ecx

; 1567 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1568 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1569 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1570 : 
; 1571 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218512[ebp], 0
	jmp	SHORT $LN4@GetGoldWhe
$LN3@GetGoldWhe:
	mov	eax, DWORD PTR _i$218512[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218512[ebp], eax
$LN4@GetGoldWhe:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218512[ebp], eax
	jge	SHORT $LN2@GetGoldWhe

; 1572 : 	{
; 1573 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218512[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetGoldWhe

; 1574 : 		{
; 1575 : 			rtnValue += pBeliefs->GetEntry(i)->GetGoldWhenCityAdopts();

	mov	eax, DWORD PTR _i$218512[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetGoldWhenCityAdopts@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetGoldWhenCityAdopts
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN1@GetGoldWhe:

; 1576 : 		}
; 1577 : 	}

	jmp	SHORT $LN3@GetGoldWhe
$LN2@GetGoldWhe:

; 1578 : 
; 1579 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1580 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetGoldWhenCityAdopts@CvReligionBeliefs@@QBEHXZ ENDP	; CvReligionBeliefs::GetGoldWhenCityAdopts
_TEXT	ENDS
PUBLIC	?GetSciencePerOtherReligionFollower@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetSciencePerOtherReligionFollower
; Function compile flags: /Odtp
;	COMDAT ?GetSciencePerOtherReligionFollower@CvReligionBeliefs@@QBEHXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218523 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
?GetSciencePerOtherReligionFollower@CvReligionBeliefs@@QBEHXZ PROC ; CvReligionBeliefs::GetSciencePerOtherReligionFollower, COMDAT
; _this$ = ecx

; 1584 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1585 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1586 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1587 : 
; 1588 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218523[ebp], 0
	jmp	SHORT $LN4@GetScience
$LN3@GetScience:
	mov	eax, DWORD PTR _i$218523[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218523[ebp], eax
$LN4@GetScience:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218523[ebp], eax
	jge	SHORT $LN2@GetScience

; 1589 : 	{
; 1590 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218523[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetScience

; 1591 : 		{
; 1592 : 			rtnValue += pBeliefs->GetEntry(i)->GetSciencePerOtherReligionFollower();

	mov	eax, DWORD PTR _i$218523[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetSciencePerOtherReligionFollower@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSciencePerOtherReligionFollower
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN1@GetScience:

; 1593 : 		}
; 1594 : 	}

	jmp	SHORT $LN3@GetScience
$LN2@GetScience:

; 1595 : 
; 1596 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1597 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetSciencePerOtherReligionFollower@CvReligionBeliefs@@QBEHXZ ENDP ; CvReligionBeliefs::GetSciencePerOtherReligionFollower
_TEXT	ENDS
PUBLIC	?GetCityGrowthModifier@CvReligionBeliefs@@QBEH_N@Z ; CvReligionBeliefs::GetCityGrowthModifier
; Function compile flags: /Odtp
;	COMDAT ?GetCityGrowthModifier@CvReligionBeliefs@@QBEH_N@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218535 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_bAtPeace$ = 8						; size = 1
?GetCityGrowthModifier@CvReligionBeliefs@@QBEH_N@Z PROC	; CvReligionBeliefs::GetCityGrowthModifier, COMDAT
; _this$ = ecx

; 1601 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1602 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1603 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1604 : 
; 1605 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218535[ebp], 0
	jmp	SHORT $LN6@GetCityGro
$LN5@GetCityGro:
	mov	eax, DWORD PTR _i$218535[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218535[ebp], eax
$LN6@GetCityGro:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218535[ebp], eax
	jge	SHORT $LN4@GetCityGro

; 1606 : 	{
; 1607 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218535[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@GetCityGro

; 1608 : 		{
; 1609 : 			if(bAtPeace || !pBeliefs->GetEntry(i)->RequiresPeace())

	movzx	eax, BYTE PTR _bAtPeace$[ebp]
	test	eax, eax
	jne	SHORT $LN1@GetCityGro
	mov	ecx, DWORD PTR _i$218535[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?RequiresPeace@CvBeliefEntry@@QBE_NXZ	; CvBeliefEntry::RequiresPeace
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@GetCityGro
$LN1@GetCityGro:

; 1610 : 			{
; 1611 : 				rtnValue += pBeliefs->GetEntry(i)->GetCityGrowthModifier();

	mov	eax, DWORD PTR _i$218535[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetCityGrowthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCityGrowthModifier
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN3@GetCityGro:

; 1612 : 			}
; 1613 : 		}
; 1614 : 	}

	jmp	SHORT $LN5@GetCityGro
$LN4@GetCityGro:

; 1615 : 
; 1616 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1617 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetCityGrowthModifier@CvReligionBeliefs@@QBEH_N@Z ENDP	; CvReligionBeliefs::GetCityGrowthModifier
_TEXT	ENDS
PUBLIC	?GetCityYieldChange@CvReligionBeliefs@@QBEHHW4YieldTypes@@@Z ; CvReligionBeliefs::GetCityYieldChange
; Function compile flags: /Odtp
;	COMDAT ?GetCityYieldChange@CvReligionBeliefs@@QBEHHW4YieldTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218550 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_iPopulation$ = 8					; size = 4
_eYield$ = 12						; size = 4
?GetCityYieldChange@CvReligionBeliefs@@QBEHHW4YieldTypes@@@Z PROC ; CvReligionBeliefs::GetCityYieldChange, COMDAT
; _this$ = ecx

; 1621 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1622 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1623 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1624 : 
; 1625 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218550[ebp], 0
	jmp	SHORT $LN5@GetCityYie@2
$LN4@GetCityYie@2:
	mov	eax, DWORD PTR _i$218550[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218550[ebp], eax
$LN5@GetCityYie@2:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218550[ebp], eax
	jge	SHORT $LN3@GetCityYie@2

; 1626 : 	{
; 1627 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218550[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@GetCityYie@2

; 1628 : 		{
; 1629 : 			if(iPopulation >= pBeliefs->GetEntry(i)->GetMinPopulation())

	mov	eax, DWORD PTR _i$218550[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetMinPopulation@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetMinPopulation
	cmp	DWORD PTR _iPopulation$[ebp], eax
	jl	SHORT $LN2@GetCityYie@2

; 1630 : 			{
; 1631 : 				rtnValue += pBeliefs->GetEntry(i)->GetCityYieldChange(eYield);

	mov	ecx, DWORD PTR _eYield$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$218550[ebp]
	push	edx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetCityYieldChange@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetCityYieldChange
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN2@GetCityYie@2:

; 1632 : 			}
; 1633 : 		}
; 1634 : 	}

	jmp	SHORT $LN4@GetCityYie@2
$LN3@GetCityYie@2:

; 1635 : 
; 1636 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1637 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetCityYieldChange@CvReligionBeliefs@@QBEHHW4YieldTypes@@@Z ENDP ; CvReligionBeliefs::GetCityYieldChange
_TEXT	ENDS
PUBLIC	?GetHolyCityYieldChange@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z ; CvReligionBeliefs::GetHolyCityYieldChange
; Function compile flags: /Odtp
;	COMDAT ?GetHolyCityYieldChange@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218563 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_eYield$ = 8						; size = 4
?GetHolyCityYieldChange@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z PROC ; CvReligionBeliefs::GetHolyCityYieldChange, COMDAT
; _this$ = ecx

; 1641 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1642 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1643 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1644 : 
; 1645 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218563[ebp], 0
	jmp	SHORT $LN4@GetHolyCit@2
$LN3@GetHolyCit@2:
	mov	eax, DWORD PTR _i$218563[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218563[ebp], eax
$LN4@GetHolyCit@2:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218563[ebp], eax
	jge	SHORT $LN2@GetHolyCit@2

; 1646 : 	{
; 1647 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218563[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetHolyCit@2

; 1648 : 		{
; 1649 : 				rtnValue += pBeliefs->GetEntry(i)->GetHolyCityYieldChange(eYield);

	mov	eax, DWORD PTR _eYield$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$218563[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetHolyCityYieldChange@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetHolyCityYieldChange
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN1@GetHolyCit@2:

; 1650 : 		}
; 1651 : 	}

	jmp	SHORT $LN3@GetHolyCit@2
$LN2@GetHolyCit@2:

; 1652 : 
; 1653 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1654 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetHolyCityYieldChange@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z ENDP ; CvReligionBeliefs::GetHolyCityYieldChange
_TEXT	ENDS
PUBLIC	?GetYieldChangePerForeignCity@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z ; CvReligionBeliefs::GetYieldChangePerForeignCity
; Function compile flags: /Odtp
;	COMDAT ?GetYieldChangePerForeignCity@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218575 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_eYield$ = 8						; size = 4
?GetYieldChangePerForeignCity@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z PROC ; CvReligionBeliefs::GetYieldChangePerForeignCity, COMDAT
; _this$ = ecx

; 1658 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1659 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1660 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1661 : 
; 1662 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218575[ebp], 0
	jmp	SHORT $LN4@GetYieldCh@7
$LN3@GetYieldCh@7:
	mov	eax, DWORD PTR _i$218575[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218575[ebp], eax
$LN4@GetYieldCh@7:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218575[ebp], eax
	jge	SHORT $LN2@GetYieldCh@7

; 1663 : 	{
; 1664 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218575[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetYieldCh@7

; 1665 : 		{
; 1666 : 			rtnValue += pBeliefs->GetEntry(i)->GetYieldChangePerForeignCity(eYield);

	mov	eax, DWORD PTR _eYield$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$218575[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetYieldChangePerForeignCity@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangePerForeignCity
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN1@GetYieldCh@7:

; 1667 : 		}
; 1668 : 	}

	jmp	SHORT $LN3@GetYieldCh@7
$LN2@GetYieldCh@7:

; 1669 : 
; 1670 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1671 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetYieldChangePerForeignCity@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z ENDP ; CvReligionBeliefs::GetYieldChangePerForeignCity
_TEXT	ENDS
PUBLIC	?GetYieldChangePerXForeignFollowers@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z ; CvReligionBeliefs::GetYieldChangePerXForeignFollowers
; Function compile flags: /Odtp
;	COMDAT ?GetYieldChangePerXForeignFollowers@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218587 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_eYield$ = 8						; size = 4
?GetYieldChangePerXForeignFollowers@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z PROC ; CvReligionBeliefs::GetYieldChangePerXForeignFollowers, COMDAT
; _this$ = ecx

; 1675 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1676 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1677 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1678 : 
; 1679 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218587[ebp], 0
	jmp	SHORT $LN4@GetYieldCh@8
$LN3@GetYieldCh@8:
	mov	eax, DWORD PTR _i$218587[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218587[ebp], eax
$LN4@GetYieldCh@8:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218587[ebp], eax
	jge	SHORT $LN2@GetYieldCh@8

; 1680 : 	{
; 1681 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218587[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetYieldCh@8

; 1682 : 		{
; 1683 : 			rtnValue += pBeliefs->GetEntry(i)->GetYieldChangePerXForeignFollowers(eYield);

	mov	eax, DWORD PTR _eYield$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$218587[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetYieldChangePerXForeignFollowers@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangePerXForeignFollowers
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN1@GetYieldCh@8:

; 1684 : 		}
; 1685 : 	}

	jmp	SHORT $LN3@GetYieldCh@8
$LN2@GetYieldCh@8:

; 1686 : 
; 1687 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1688 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetYieldChangePerXForeignFollowers@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z ENDP ; CvReligionBeliefs::GetYieldChangePerXForeignFollowers
_TEXT	ENDS
PUBLIC	?GetResourceQuantityModifier@CvReligionBeliefs@@QBEHW4ResourceTypes@@@Z ; CvReligionBeliefs::GetResourceQuantityModifier
; Function compile flags: /Odtp
;	COMDAT ?GetResourceQuantityModifier@CvReligionBeliefs@@QBEHW4ResourceTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218599 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_eResource$ = 8						; size = 4
?GetResourceQuantityModifier@CvReligionBeliefs@@QBEHW4ResourceTypes@@@Z PROC ; CvReligionBeliefs::GetResourceQuantityModifier, COMDAT
; _this$ = ecx

; 1692 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1693 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1694 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1695 : 
; 1696 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218599[ebp], 0
	jmp	SHORT $LN4@GetResourc@4
$LN3@GetResourc@4:
	mov	eax, DWORD PTR _i$218599[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218599[ebp], eax
$LN4@GetResourc@4:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218599[ebp], eax
	jge	SHORT $LN2@GetResourc@4

; 1697 : 	{
; 1698 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218599[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetResourc@4

; 1699 : 		{
; 1700 : 			rtnValue += pBeliefs->GetEntry(i)->GetResourceQuantityModifier(eResource);

	mov	eax, DWORD PTR _eResource$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$218599[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetResourceQuantityModifier@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetResourceQuantityModifier
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN1@GetResourc@4:

; 1701 : 		}
; 1702 : 	}

	jmp	SHORT $LN3@GetResourc@4
$LN2@GetResourc@4:

; 1703 : 
; 1704 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1705 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetResourceQuantityModifier@CvReligionBeliefs@@QBEHW4ResourceTypes@@@Z ENDP ; CvReligionBeliefs::GetResourceQuantityModifier
_TEXT	ENDS
PUBLIC	?GetImprovementYieldChange@CvReligionBeliefs@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z ; CvReligionBeliefs::GetImprovementYieldChange
; Function compile flags: /Odtp
;	COMDAT ?GetImprovementYieldChange@CvReligionBeliefs@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218612 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_eImprovement$ = 8					; size = 4
_eYield$ = 12						; size = 4
?GetImprovementYieldChange@CvReligionBeliefs@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z PROC ; CvReligionBeliefs::GetImprovementYieldChange, COMDAT
; _this$ = ecx

; 1709 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1710 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1711 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1712 : 
; 1713 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218612[ebp], 0
	jmp	SHORT $LN4@GetImprove@2
$LN3@GetImprove@2:
	mov	eax, DWORD PTR _i$218612[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218612[ebp], eax
$LN4@GetImprove@2:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218612[ebp], eax
	jge	SHORT $LN2@GetImprove@2

; 1714 : 	{
; 1715 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218612[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetImprove@2

; 1716 : 		{
; 1717 : 			rtnValue += pBeliefs->GetEntry(i)->GetImprovementYieldChange(eImprovement, eYield);

	mov	eax, DWORD PTR _eYield$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eImprovement$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$218612[ebp]
	push	edx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetImprovementYieldChange@CvBeliefEntry@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z ; CvBeliefEntry::GetImprovementYieldChange
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN1@GetImprove@2:

; 1718 : 		}
; 1719 : 	}

	jmp	SHORT $LN3@GetImprove@2
$LN2@GetImprove@2:

; 1720 : 
; 1721 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1722 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetImprovementYieldChange@CvReligionBeliefs@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z ENDP ; CvReligionBeliefs::GetImprovementYieldChange
_TEXT	ENDS
PUBLIC	?GetBuildingClassYieldChange@CvReligionBeliefs@@QBEHW4BuildingClassTypes@@W4YieldTypes@@H@Z ; CvReligionBeliefs::GetBuildingClassYieldChange
; Function compile flags: /Odtp
;	COMDAT ?GetBuildingClassYieldChange@CvReligionBeliefs@@QBEHW4BuildingClassTypes@@W4YieldTypes@@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218626 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_eBuildingClass$ = 8					; size = 4
_eYieldType$ = 12					; size = 4
_iFollowers$ = 16					; size = 4
?GetBuildingClassYieldChange@CvReligionBeliefs@@QBEHW4BuildingClassTypes@@W4YieldTypes@@H@Z PROC ; CvReligionBeliefs::GetBuildingClassYieldChange, COMDAT
; _this$ = ecx

; 1726 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1727 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1728 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1729 : 
; 1730 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218626[ebp], 0
	jmp	SHORT $LN5@GetBuildin@3
$LN4@GetBuildin@3:
	mov	eax, DWORD PTR _i$218626[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218626[ebp], eax
$LN5@GetBuildin@3:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218626[ebp], eax
	jge	SHORT $LN3@GetBuildin@3

; 1731 : 	{
; 1732 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218626[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@GetBuildin@3

; 1733 : 		{
; 1734 : 			if(iFollowers >= pBeliefs->GetEntry(i)->GetMinFollowers())

	mov	eax, DWORD PTR _i$218626[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetMinFollowers@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetMinFollowers
	cmp	DWORD PTR _iFollowers$[ebp], eax
	jl	SHORT $LN2@GetBuildin@3

; 1735 : 			{
; 1736 : 				rtnValue += pBeliefs->GetEntry(i)->GetBuildingClassYieldChange(eBuildingClass, eYieldType);

	mov	ecx, DWORD PTR _eYieldType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eBuildingClass$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$218626[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetBuildingClassYieldChange@CvBeliefEntry@@QBEHHH@Z ; CvBeliefEntry::GetBuildingClassYieldChange
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN2@GetBuildin@3:

; 1737 : 			}
; 1738 : 		}
; 1739 : 	}

	jmp	SHORT $LN4@GetBuildin@3
$LN3@GetBuildin@3:

; 1740 : 
; 1741 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1742 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetBuildingClassYieldChange@CvReligionBeliefs@@QBEHW4BuildingClassTypes@@W4YieldTypes@@H@Z ENDP ; CvReligionBeliefs::GetBuildingClassYieldChange
_TEXT	ENDS
PUBLIC	?GetBuildingClassHappiness@CvReligionBeliefs@@QBEHW4BuildingClassTypes@@H@Z ; CvReligionBeliefs::GetBuildingClassHappiness
; Function compile flags: /Odtp
;	COMDAT ?GetBuildingClassHappiness@CvReligionBeliefs@@QBEHW4BuildingClassTypes@@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218640 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_eBuildingClass$ = 8					; size = 4
_iFollowers$ = 12					; size = 4
?GetBuildingClassHappiness@CvReligionBeliefs@@QBEHW4BuildingClassTypes@@H@Z PROC ; CvReligionBeliefs::GetBuildingClassHappiness, COMDAT
; _this$ = ecx

; 1764 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1765 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1766 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1767 : 
; 1768 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218640[ebp], 0
	jmp	SHORT $LN5@GetBuildin@4
$LN4@GetBuildin@4:
	mov	eax, DWORD PTR _i$218640[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218640[ebp], eax
$LN5@GetBuildin@4:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218640[ebp], eax
	jge	SHORT $LN3@GetBuildin@4

; 1769 : 	{
; 1770 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218640[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@GetBuildin@4

; 1771 : 		{
; 1772 : 			if(iFollowers >= pBeliefs->GetEntry(i)->GetMinFollowers())

	mov	eax, DWORD PTR _i$218640[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetMinFollowers@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetMinFollowers
	cmp	DWORD PTR _iFollowers$[ebp], eax
	jl	SHORT $LN2@GetBuildin@4

; 1773 : 			{
; 1774 : 				rtnValue += pBeliefs->GetEntry(i)->GetBuildingClassHappiness(eBuildingClass);

	mov	ecx, DWORD PTR _eBuildingClass$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$218640[ebp]
	push	edx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetBuildingClassHappiness@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetBuildingClassHappiness
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN2@GetBuildin@4:

; 1775 : 			}
; 1776 : 		}
; 1777 : 	}

	jmp	SHORT $LN4@GetBuildin@4
$LN3@GetBuildin@4:

; 1778 : 
; 1779 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1780 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetBuildingClassHappiness@CvReligionBeliefs@@QBEHW4BuildingClassTypes@@H@Z ENDP ; CvReligionBeliefs::GetBuildingClassHappiness
_TEXT	ENDS
PUBLIC	?GetBuildingClassTourism@CvReligionBeliefs@@QBEHW4BuildingClassTypes@@@Z ; CvReligionBeliefs::GetBuildingClassTourism
; Function compile flags: /Odtp
;	COMDAT ?GetBuildingClassTourism@CvReligionBeliefs@@QBEHW4BuildingClassTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218653 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_eBuildingClass$ = 8					; size = 4
?GetBuildingClassTourism@CvReligionBeliefs@@QBEHW4BuildingClassTypes@@@Z PROC ; CvReligionBeliefs::GetBuildingClassTourism, COMDAT
; _this$ = ecx

; 1784 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1785 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1786 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1787 : 
; 1788 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218653[ebp], 0
	jmp	SHORT $LN4@GetBuildin@5
$LN3@GetBuildin@5:
	mov	eax, DWORD PTR _i$218653[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218653[ebp], eax
$LN4@GetBuildin@5:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218653[ebp], eax
	jge	SHORT $LN2@GetBuildin@5

; 1789 : 	{
; 1790 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218653[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetBuildin@5

; 1791 : 		{
; 1792 : 			rtnValue += pBeliefs->GetEntry(i)->GetBuildingClassTourism(eBuildingClass);

	mov	eax, DWORD PTR _eBuildingClass$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$218653[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetBuildingClassTourism@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetBuildingClassTourism
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN1@GetBuildin@5:

; 1793 : 		}
; 1794 : 	}

	jmp	SHORT $LN3@GetBuildin@5
$LN2@GetBuildin@5:

; 1795 : 
; 1796 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1797 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetBuildingClassTourism@CvReligionBeliefs@@QBEHW4BuildingClassTypes@@@Z ENDP ; CvReligionBeliefs::GetBuildingClassTourism
_TEXT	ENDS
PUBLIC	?GetFeatureYieldChange@CvReligionBeliefs@@QBEHW4FeatureTypes@@W4YieldTypes@@@Z ; CvReligionBeliefs::GetFeatureYieldChange
; Function compile flags: /Odtp
;	COMDAT ?GetFeatureYieldChange@CvReligionBeliefs@@QBEHW4FeatureTypes@@W4YieldTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218666 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_eFeature$ = 8						; size = 4
_eYieldType$ = 12					; size = 4
?GetFeatureYieldChange@CvReligionBeliefs@@QBEHW4FeatureTypes@@W4YieldTypes@@@Z PROC ; CvReligionBeliefs::GetFeatureYieldChange, COMDAT
; _this$ = ecx

; 1801 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1802 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1803 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1804 : 
; 1805 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218666[ebp], 0
	jmp	SHORT $LN4@GetFeature@2
$LN3@GetFeature@2:
	mov	eax, DWORD PTR _i$218666[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218666[ebp], eax
$LN4@GetFeature@2:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218666[ebp], eax
	jge	SHORT $LN2@GetFeature@2

; 1806 : 	{
; 1807 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218666[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetFeature@2

; 1808 : 		{
; 1809 : 			rtnValue += pBeliefs->GetEntry(i)->GetFeatureYieldChange(eFeature, eYieldType);

	mov	eax, DWORD PTR _eYieldType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eFeature$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$218666[ebp]
	push	edx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetFeatureYieldChange@CvBeliefEntry@@QBEHHH@Z ; CvBeliefEntry::GetFeatureYieldChange
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN1@GetFeature@2:

; 1810 : 		}
; 1811 : 	}

	jmp	SHORT $LN3@GetFeature@2
$LN2@GetFeature@2:

; 1812 : 
; 1813 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1814 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetFeatureYieldChange@CvReligionBeliefs@@QBEHW4FeatureTypes@@W4YieldTypes@@@Z ENDP ; CvReligionBeliefs::GetFeatureYieldChange
_TEXT	ENDS
PUBLIC	?GetResourceYieldChange@CvReligionBeliefs@@QBEHW4ResourceTypes@@W4YieldTypes@@@Z ; CvReligionBeliefs::GetResourceYieldChange
; Function compile flags: /Odtp
;	COMDAT ?GetResourceYieldChange@CvReligionBeliefs@@QBEHW4ResourceTypes@@W4YieldTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218679 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_eResource$ = 8						; size = 4
_eYieldType$ = 12					; size = 4
?GetResourceYieldChange@CvReligionBeliefs@@QBEHW4ResourceTypes@@W4YieldTypes@@@Z PROC ; CvReligionBeliefs::GetResourceYieldChange, COMDAT
; _this$ = ecx

; 1818 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1819 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1820 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1821 : 
; 1822 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218679[ebp], 0
	jmp	SHORT $LN4@GetResourc@5
$LN3@GetResourc@5:
	mov	eax, DWORD PTR _i$218679[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218679[ebp], eax
$LN4@GetResourc@5:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218679[ebp], eax
	jge	SHORT $LN2@GetResourc@5

; 1823 : 	{
; 1824 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218679[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetResourc@5

; 1825 : 		{
; 1826 : 			rtnValue += pBeliefs->GetEntry(i)->GetResourceYieldChange(eResource, eYieldType);

	mov	eax, DWORD PTR _eYieldType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eResource$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$218679[ebp]
	push	edx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetResourceYieldChange@CvBeliefEntry@@QBEHHH@Z ; CvBeliefEntry::GetResourceYieldChange
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN1@GetResourc@5:

; 1827 : 		}
; 1828 : 	}

	jmp	SHORT $LN3@GetResourc@5
$LN2@GetResourc@5:

; 1829 : 
; 1830 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1831 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetResourceYieldChange@CvReligionBeliefs@@QBEHW4ResourceTypes@@W4YieldTypes@@@Z ENDP ; CvReligionBeliefs::GetResourceYieldChange
_TEXT	ENDS
PUBLIC	?GetTerrainYieldChange@CvReligionBeliefs@@QBEHW4TerrainTypes@@W4YieldTypes@@@Z ; CvReligionBeliefs::GetTerrainYieldChange
; Function compile flags: /Odtp
;	COMDAT ?GetTerrainYieldChange@CvReligionBeliefs@@QBEHW4TerrainTypes@@W4YieldTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218692 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_eTerrain$ = 8						; size = 4
_eYieldType$ = 12					; size = 4
?GetTerrainYieldChange@CvReligionBeliefs@@QBEHW4TerrainTypes@@W4YieldTypes@@@Z PROC ; CvReligionBeliefs::GetTerrainYieldChange, COMDAT
; _this$ = ecx

; 1835 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1836 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1837 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1838 : 
; 1839 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218692[ebp], 0
	jmp	SHORT $LN4@GetTerrain@2
$LN3@GetTerrain@2:
	mov	eax, DWORD PTR _i$218692[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218692[ebp], eax
$LN4@GetTerrain@2:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218692[ebp], eax
	jge	SHORT $LN2@GetTerrain@2

; 1840 : 	{
; 1841 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218692[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetTerrain@2

; 1842 : 		{
; 1843 : 			rtnValue += pBeliefs->GetEntry(i)->GetTerrainYieldChange(eTerrain, eYieldType);

	mov	eax, DWORD PTR _eYieldType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eTerrain$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$218692[ebp]
	push	edx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetTerrainYieldChange@CvBeliefEntry@@QBEHHH@Z ; CvBeliefEntry::GetTerrainYieldChange
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN1@GetTerrain@2:

; 1844 : 		}
; 1845 : 	}

	jmp	SHORT $LN3@GetTerrain@2
$LN2@GetTerrain@2:

; 1846 : 
; 1847 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1848 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetTerrainYieldChange@CvReligionBeliefs@@QBEHW4TerrainTypes@@W4YieldTypes@@@Z ENDP ; CvReligionBeliefs::GetTerrainYieldChange
_TEXT	ENDS
PUBLIC	?GetResourceHappiness@CvReligionBeliefs@@QBEHW4ResourceTypes@@@Z ; CvReligionBeliefs::GetResourceHappiness
; Function compile flags: /Odtp
;	COMDAT ?GetResourceHappiness@CvReligionBeliefs@@QBEHW4ResourceTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218704 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_eResource$ = 8						; size = 4
?GetResourceHappiness@CvReligionBeliefs@@QBEHW4ResourceTypes@@@Z PROC ; CvReligionBeliefs::GetResourceHappiness, COMDAT
; _this$ = ecx

; 1852 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1853 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1854 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1855 : 
; 1856 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218704[ebp], 0
	jmp	SHORT $LN4@GetResourc@6
$LN3@GetResourc@6:
	mov	eax, DWORD PTR _i$218704[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218704[ebp], eax
$LN4@GetResourc@6:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218704[ebp], eax
	jge	SHORT $LN2@GetResourc@6

; 1857 : 	{
; 1858 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218704[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetResourc@6

; 1859 : 		{
; 1860 : 			rtnValue += pBeliefs->GetEntry(i)->GetResourceHappiness(eResource);

	mov	eax, DWORD PTR _eResource$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$218704[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetResourceHappiness@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetResourceHappiness
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN1@GetResourc@6:

; 1861 : 		}
; 1862 : 	}

	jmp	SHORT $LN3@GetResourc@6
$LN2@GetResourc@6:

; 1863 : 
; 1864 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1865 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetResourceHappiness@CvReligionBeliefs@@QBEHW4ResourceTypes@@@Z ENDP ; CvReligionBeliefs::GetResourceHappiness
_TEXT	ENDS
PUBLIC	?GetYieldChangeAnySpecialist@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z ; CvReligionBeliefs::GetYieldChangeAnySpecialist
; Function compile flags: /Odtp
;	COMDAT ?GetYieldChangeAnySpecialist@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218716 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_eYieldType$ = 8					; size = 4
?GetYieldChangeAnySpecialist@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z PROC ; CvReligionBeliefs::GetYieldChangeAnySpecialist, COMDAT
; _this$ = ecx

; 1869 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1870 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1871 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1872 : 
; 1873 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218716[ebp], 0
	jmp	SHORT $LN4@GetYieldCh@9
$LN3@GetYieldCh@9:
	mov	eax, DWORD PTR _i$218716[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218716[ebp], eax
$LN4@GetYieldCh@9:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218716[ebp], eax
	jge	SHORT $LN2@GetYieldCh@9

; 1874 : 	{
; 1875 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218716[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetYieldCh@9

; 1876 : 		{
; 1877 : 			rtnValue += pBeliefs->GetEntry(i)->GetYieldChangeAnySpecialist(eYieldType);

	mov	eax, DWORD PTR _eYieldType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$218716[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetYieldChangeAnySpecialist@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangeAnySpecialist
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN1@GetYieldCh@9:

; 1878 : 		}
; 1879 : 	}

	jmp	SHORT $LN3@GetYieldCh@9
$LN2@GetYieldCh@9:

; 1880 : 
; 1881 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1882 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetYieldChangeAnySpecialist@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z ENDP ; CvReligionBeliefs::GetYieldChangeAnySpecialist
_TEXT	ENDS
PUBLIC	?GetYieldChangeTradeRoute@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z ; CvReligionBeliefs::GetYieldChangeTradeRoute
; Function compile flags: /Odtp
;	COMDAT ?GetYieldChangeTradeRoute@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218728 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_eYieldType$ = 8					; size = 4
?GetYieldChangeTradeRoute@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z PROC ; CvReligionBeliefs::GetYieldChangeTradeRoute, COMDAT
; _this$ = ecx

; 1886 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1887 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1888 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1889 : 
; 1890 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218728[ebp], 0
	jmp	SHORT $LN4@GetYieldCh@10
$LN3@GetYieldCh@10:
	mov	eax, DWORD PTR _i$218728[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218728[ebp], eax
$LN4@GetYieldCh@10:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218728[ebp], eax
	jge	SHORT $LN2@GetYieldCh@10

; 1891 : 	{
; 1892 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218728[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetYieldCh@10

; 1893 : 		{
; 1894 : 			rtnValue += pBeliefs->GetEntry(i)->GetYieldChangeTradeRoute(eYieldType);

	mov	eax, DWORD PTR _eYieldType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$218728[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetYieldChangeTradeRoute@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangeTradeRoute
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN1@GetYieldCh@10:

; 1895 : 		}
; 1896 : 	}

	jmp	SHORT $LN3@GetYieldCh@10
$LN2@GetYieldCh@10:

; 1897 : 
; 1898 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1899 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetYieldChangeTradeRoute@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z ENDP ; CvReligionBeliefs::GetYieldChangeTradeRoute
_TEXT	ENDS
PUBLIC	?GetYieldChangeNaturalWonder@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z ; CvReligionBeliefs::GetYieldChangeNaturalWonder
; Function compile flags: /Odtp
;	COMDAT ?GetYieldChangeNaturalWonder@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218740 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_eYieldType$ = 8					; size = 4
?GetYieldChangeNaturalWonder@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z PROC ; CvReligionBeliefs::GetYieldChangeNaturalWonder, COMDAT
; _this$ = ecx

; 1903 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1904 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1905 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1906 : 
; 1907 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218740[ebp], 0
	jmp	SHORT $LN4@GetYieldCh@11
$LN3@GetYieldCh@11:
	mov	eax, DWORD PTR _i$218740[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218740[ebp], eax
$LN4@GetYieldCh@11:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218740[ebp], eax
	jge	SHORT $LN2@GetYieldCh@11

; 1908 : 	{
; 1909 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218740[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetYieldCh@11

; 1910 : 		{
; 1911 : 			rtnValue += pBeliefs->GetEntry(i)->GetYieldChangeNaturalWonder(eYieldType);

	mov	eax, DWORD PTR _eYieldType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$218740[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetYieldChangeNaturalWonder@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangeNaturalWonder
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN1@GetYieldCh@11:

; 1912 : 		}
; 1913 : 	}

	jmp	SHORT $LN3@GetYieldCh@11
$LN2@GetYieldCh@11:

; 1914 : 
; 1915 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1916 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetYieldChangeNaturalWonder@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z ENDP ; CvReligionBeliefs::GetYieldChangeNaturalWonder
_TEXT	ENDS
PUBLIC	?GetYieldChangeWorldWonder@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z ; CvReligionBeliefs::GetYieldChangeWorldWonder
; Function compile flags: /Odtp
;	COMDAT ?GetYieldChangeWorldWonder@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218752 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_eYieldType$ = 8					; size = 4
?GetYieldChangeWorldWonder@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z PROC ; CvReligionBeliefs::GetYieldChangeWorldWonder, COMDAT
; _this$ = ecx

; 1920 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1921 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1922 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1923 : 
; 1924 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218752[ebp], 0
	jmp	SHORT $LN4@GetYieldCh@12
$LN3@GetYieldCh@12:
	mov	eax, DWORD PTR _i$218752[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218752[ebp], eax
$LN4@GetYieldCh@12:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218752[ebp], eax
	jge	SHORT $LN2@GetYieldCh@12

; 1925 : 	{
; 1926 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218752[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetYieldCh@12

; 1927 : 		{
; 1928 : 			rtnValue += pBeliefs->GetEntry(i)->GetYieldChangeWorldWonder(eYieldType);

	mov	eax, DWORD PTR _eYieldType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$218752[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetYieldChangeWorldWonder@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangeWorldWonder
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN1@GetYieldCh@12:

; 1929 : 		}
; 1930 : 	}

	jmp	SHORT $LN3@GetYieldCh@12
$LN2@GetYieldCh@12:

; 1931 : 
; 1932 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1933 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetYieldChangeWorldWonder@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z ENDP ; CvReligionBeliefs::GetYieldChangeWorldWonder
_TEXT	ENDS
PUBLIC	?GetYieldModifierNaturalWonder@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z ; CvReligionBeliefs::GetYieldModifierNaturalWonder
; Function compile flags: /Odtp
;	COMDAT ?GetYieldModifierNaturalWonder@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218764 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_eYieldType$ = 8					; size = 4
?GetYieldModifierNaturalWonder@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z PROC ; CvReligionBeliefs::GetYieldModifierNaturalWonder, COMDAT
; _this$ = ecx

; 1937 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1938 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1939 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1940 : 
; 1941 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218764[ebp], 0
	jmp	SHORT $LN4@GetYieldMo@2
$LN3@GetYieldMo@2:
	mov	eax, DWORD PTR _i$218764[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218764[ebp], eax
$LN4@GetYieldMo@2:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218764[ebp], eax
	jge	SHORT $LN2@GetYieldMo@2

; 1942 : 	{
; 1943 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218764[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetYieldMo@2

; 1944 : 		{
; 1945 : 			rtnValue += pBeliefs->GetEntry(i)->GetYieldModifierNaturalWonder(eYieldType);

	mov	eax, DWORD PTR _eYieldType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$218764[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetYieldModifierNaturalWonder@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldModifierNaturalWonder
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN1@GetYieldMo@2:

; 1946 : 		}
; 1947 : 	}

	jmp	SHORT $LN3@GetYieldMo@2
$LN2@GetYieldMo@2:

; 1948 : 
; 1949 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1950 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetYieldModifierNaturalWonder@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z ENDP ; CvReligionBeliefs::GetYieldModifierNaturalWonder
_TEXT	ENDS
PUBLIC	?GetMaxYieldModifierPerFollower@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z ; CvReligionBeliefs::GetMaxYieldModifierPerFollower
; Function compile flags: /Odtp
;	COMDAT ?GetMaxYieldModifierPerFollower@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218776 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_eYieldType$ = 8					; size = 4
?GetMaxYieldModifierPerFollower@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z PROC ; CvReligionBeliefs::GetMaxYieldModifierPerFollower, COMDAT
; _this$ = ecx

; 1954 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1955 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1956 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1957 : 
; 1958 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218776[ebp], 0
	jmp	SHORT $LN4@GetMaxYiel@2
$LN3@GetMaxYiel@2:
	mov	eax, DWORD PTR _i$218776[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218776[ebp], eax
$LN4@GetMaxYiel@2:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218776[ebp], eax
	jge	SHORT $LN2@GetMaxYiel@2

; 1959 : 	{
; 1960 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218776[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetMaxYiel@2

; 1961 : 		{
; 1962 : 			rtnValue += pBeliefs->GetEntry(i)->GetMaxYieldModifierPerFollower(eYieldType);

	mov	eax, DWORD PTR _eYieldType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$218776[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetMaxYieldModifierPerFollower@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetMaxYieldModifierPerFollower
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN1@GetMaxYiel@2:

; 1963 : 		}
; 1964 : 	}

	jmp	SHORT $LN3@GetMaxYiel@2
$LN2@GetMaxYiel@2:

; 1965 : 
; 1966 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1967 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetMaxYieldModifierPerFollower@CvReligionBeliefs@@QBEHW4YieldTypes@@@Z ENDP ; CvReligionBeliefs::GetMaxYieldModifierPerFollower
_TEXT	ENDS
PUBLIC	?GetNumFreeSettlers@CvReligionBeliefs@@QBEHXZ	; CvReligionBeliefs::GetNumFreeSettlers
; Function compile flags: /Odtp
;	COMDAT ?GetNumFreeSettlers@CvReligionBeliefs@@QBEHXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$218787 = -12						; size = 4
_rtnValue$ = -8						; size = 4
_pBeliefs$ = -4						; size = 4
?GetNumFreeSettlers@CvReligionBeliefs@@QBEHXZ PROC	; CvReligionBeliefs::GetNumFreeSettlers, COMDAT
; _this$ = ecx

; 1972 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1973 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1974 : 	int rtnValue = 0;

	mov	DWORD PTR _rtnValue$[ebp], 0

; 1975 : 
; 1976 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218787[ebp], 0
	jmp	SHORT $LN4@GetNumFree
$LN3@GetNumFree:
	mov	eax, DWORD PTR _i$218787[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218787[ebp], eax
$LN4@GetNumFree:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218787[ebp], eax
	jge	SHORT $LN2@GetNumFree

; 1977 : 	{
; 1978 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218787[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetNumFree

; 1979 : 		{
; 1980 : 			rtnValue += pBeliefs->GetEntry(i)->GetNumFreeSettlers();

	mov	eax, DWORD PTR _i$218787[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetNumFreeSettlers@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetNumFreeSettlers
	add	eax, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR _rtnValue$[ebp], eax
$LN1@GetNumFree:

; 1981 : 		}
; 1982 : 	}

	jmp	SHORT $LN3@GetNumFree
$LN2@GetNumFree:

; 1983 : 
; 1984 : 	return rtnValue;

	mov	eax, DWORD PTR _rtnValue$[ebp]

; 1985 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumFreeSettlers@CvReligionBeliefs@@QBEHXZ ENDP	; CvReligionBeliefs::GetNumFreeSettlers
_TEXT	ENDS
PUBLIC	?IsBuildingClassEnabled@CvReligionBeliefs@@QBE_NW4BuildingClassTypes@@@Z ; CvReligionBeliefs::IsBuildingClassEnabled
; Function compile flags: /Odtp
;	COMDAT ?IsBuildingClassEnabled@CvReligionBeliefs@@QBE_NW4BuildingClassTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eType$ = 8						; size = 4
?IsBuildingClassEnabled@CvReligionBeliefs@@QBE_NW4BuildingClassTypes@@@Z PROC ; CvReligionBeliefs::IsBuildingClassEnabled, COMDAT
; _this$ = ecx

; 1990 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1991 : 	return m_paiBuildingClassEnabled[(int)eType];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	mov	edx, DWORD PTR _eType$[ebp]
	cmp	DWORD PTR [ecx+edx*4], 0
	setne	al

; 1992 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsBuildingClassEnabled@CvReligionBeliefs@@QBE_NW4BuildingClassTypes@@@Z ENDP ; CvReligionBeliefs::IsBuildingClassEnabled
_TEXT	ENDS
PUBLIC	?IsFaithBuyingEnabled@CvReligionBeliefs@@QBE_NW4EraTypes@@@Z ; CvReligionBeliefs::IsFaithBuyingEnabled
; Function compile flags: /Odtp
;	COMDAT ?IsFaithBuyingEnabled@CvReligionBeliefs@@QBE_NW4EraTypes@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
_i$218803 = -8						; size = 4
_pBeliefs$ = -4						; size = 4
_eEra$ = 8						; size = 4
?IsFaithBuyingEnabled@CvReligionBeliefs@@QBE_NW4EraTypes@@@Z PROC ; CvReligionBeliefs::IsFaithBuyingEnabled, COMDAT
; _this$ = ecx

; 1996 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1997 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 1998 : 
; 1999 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218803[ebp], 0
	jmp	SHORT $LN5@IsFaithBuy
$LN4@IsFaithBuy:
	mov	eax, DWORD PTR _i$218803[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218803[ebp], eax
$LN5@IsFaithBuy:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218803[ebp], eax
	jge	SHORT $LN3@IsFaithBuy

; 2000 : 	{
; 2001 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218803[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@IsFaithBuy

; 2002 : 		{
; 2003 : 			if (pBeliefs->GetEntry(i)->IsFaithUnitPurchaseEra((int)eEra))

	mov	eax, DWORD PTR _eEra$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$218803[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?IsFaithUnitPurchaseEra@CvBeliefEntry@@QBE_NH@Z ; CvBeliefEntry::IsFaithUnitPurchaseEra
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@IsFaithBuy

; 2004 : 			{
; 2005 : 				return true;

	mov	al, 1
	jmp	SHORT $LN6@IsFaithBuy
$LN2@IsFaithBuy:

; 2006 : 			}
; 2007 : 		}
; 2008 : 	}

	jmp	SHORT $LN4@IsFaithBuy
$LN3@IsFaithBuy:

; 2009 : 
; 2010 : 	return false;

	xor	al, al
$LN6@IsFaithBuy:

; 2011 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsFaithBuyingEnabled@CvReligionBeliefs@@QBE_NW4EraTypes@@@Z ENDP ; CvReligionBeliefs::IsFaithBuyingEnabled
_TEXT	ENDS
PUBLIC	?IsConvertsBarbarians@CvReligionBeliefs@@QBE_NXZ ; CvReligionBeliefs::IsConvertsBarbarians
; Function compile flags: /Odtp
;	COMDAT ?IsConvertsBarbarians@CvReligionBeliefs@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_i$218815 = -8						; size = 4
_pBeliefs$ = -4						; size = 4
?IsConvertsBarbarians@CvReligionBeliefs@@QBE_NXZ PROC	; CvReligionBeliefs::IsConvertsBarbarians, COMDAT
; _this$ = ecx

; 2015 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2016 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 2017 : 
; 2018 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218815[ebp], 0
	jmp	SHORT $LN5@IsConverts
$LN4@IsConverts:
	mov	eax, DWORD PTR _i$218815[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218815[ebp], eax
$LN5@IsConverts:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218815[ebp], eax
	jge	SHORT $LN3@IsConverts

; 2019 : 	{
; 2020 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218815[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@IsConverts

; 2021 : 		{
; 2022 : 			if (pBeliefs->GetEntry(i)->ConvertsBarbarians())

	mov	eax, DWORD PTR _i$218815[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?ConvertsBarbarians@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::ConvertsBarbarians
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@IsConverts

; 2023 : 			{
; 2024 : 				return true;

	mov	al, 1
	jmp	SHORT $LN6@IsConverts
$LN2@IsConverts:

; 2025 : 			}
; 2026 : 		}
; 2027 : 	}

	jmp	SHORT $LN4@IsConverts
$LN3@IsConverts:

; 2028 : 
; 2029 : 	return false;

	xor	al, al
$LN6@IsConverts:

; 2030 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsConvertsBarbarians@CvReligionBeliefs@@QBE_NXZ ENDP	; CvReligionBeliefs::IsConvertsBarbarians
_TEXT	ENDS
PUBLIC	?IsDeusVult@CvReligionBeliefs@@QBE_NXZ		; CvReligionBeliefs::IsDeusVult
; Function compile flags: /Odtp
;	COMDAT ?IsDeusVult@CvReligionBeliefs@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_i$218826 = -8						; size = 4
_pBeliefs$ = -4						; size = 4
?IsDeusVult@CvReligionBeliefs@@QBE_NXZ PROC		; CvReligionBeliefs::IsDeusVult, COMDAT
; _this$ = ecx

; 2035 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2036 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 2037 : 
; 2038 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218826[ebp], 0
	jmp	SHORT $LN5@IsDeusVult
$LN4@IsDeusVult:
	mov	eax, DWORD PTR _i$218826[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218826[ebp], eax
$LN5@IsDeusVult:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218826[ebp], eax
	jge	SHORT $LN3@IsDeusVult

; 2039 : 	{
; 2040 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218826[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@IsDeusVult

; 2041 : 		{
; 2042 : 			if (pBeliefs->GetEntry(i)->DeusVult())

	mov	eax, DWORD PTR _i$218826[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?DeusVult@CvBeliefEntry@@QBE_NXZ	; CvBeliefEntry::DeusVult
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@IsDeusVult

; 2043 : 			{
; 2044 : 				return true;

	mov	al, 1
	jmp	SHORT $LN6@IsDeusVult
$LN2@IsDeusVult:

; 2045 : 			}
; 2046 : 		}
; 2047 : 	}

	jmp	SHORT $LN4@IsDeusVult
$LN3@IsDeusVult:

; 2048 : 
; 2049 : 	return false;

	xor	al, al
$LN6@IsDeusVult:

; 2050 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsDeusVult@CvReligionBeliefs@@QBE_NXZ ENDP		; CvReligionBeliefs::IsDeusVult
_TEXT	ENDS
PUBLIC	?IsFaithPurchaseAllGreatPeople@CvReligionBeliefs@@QBE_NXZ ; CvReligionBeliefs::IsFaithPurchaseAllGreatPeople
; Function compile flags: /Odtp
;	COMDAT ?IsFaithPurchaseAllGreatPeople@CvReligionBeliefs@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_i$218837 = -8						; size = 4
_pBeliefs$ = -4						; size = 4
?IsFaithPurchaseAllGreatPeople@CvReligionBeliefs@@QBE_NXZ PROC ; CvReligionBeliefs::IsFaithPurchaseAllGreatPeople, COMDAT
; _this$ = ecx

; 2055 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2056 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 2057 : 
; 2058 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218837[ebp], 0
	jmp	SHORT $LN5@IsFaithPur
$LN4@IsFaithPur:
	mov	eax, DWORD PTR _i$218837[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218837[ebp], eax
$LN5@IsFaithPur:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218837[ebp], eax
	jge	SHORT $LN3@IsFaithPur

; 2059 : 	{
; 2060 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218837[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@IsFaithPur

; 2061 : 		{
; 2062 : 			if (pBeliefs->GetEntry(i)->FaithPurchaseAllGreatPeople())

	mov	eax, DWORD PTR _i$218837[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?FaithPurchaseAllGreatPeople@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::FaithPurchaseAllGreatPeople
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@IsFaithPur

; 2063 : 			{
; 2064 : 				return true;

	mov	al, 1
	jmp	SHORT $LN6@IsFaithPur
$LN2@IsFaithPur:

; 2065 : 			}
; 2066 : 		}
; 2067 : 	}

	jmp	SHORT $LN4@IsFaithPur
$LN3@IsFaithPur:

; 2068 : 
; 2069 : 	return false;

	xor	al, al
$LN6@IsFaithPur:

; 2070 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsFaithPurchaseAllGreatPeople@CvReligionBeliefs@@QBE_NXZ ENDP ; CvReligionBeliefs::IsFaithPurchaseAllGreatPeople
_TEXT	ENDS
PUBLIC	?IsAllowsFaithGiftsToMinors@CvReligionBeliefs@@QBE_NXZ ; CvReligionBeliefs::IsAllowsFaithGiftsToMinors
; Function compile flags: /Odtp
;	COMDAT ?IsAllowsFaithGiftsToMinors@CvReligionBeliefs@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_i$218848 = -8						; size = 4
_pBeliefs$ = -4						; size = 4
?IsAllowsFaithGiftsToMinors@CvReligionBeliefs@@QBE_NXZ PROC ; CvReligionBeliefs::IsAllowsFaithGiftsToMinors, COMDAT
; _this$ = ecx

; 2075 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2076 : 	CvBeliefXMLEntries* pBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pBeliefs$[ebp], eax

; 2077 : 
; 2078 : 	for(int i = 0; i < pBeliefs->GetNumBeliefs(); i++)

	mov	DWORD PTR _i$218848[ebp], 0
	jmp	SHORT $LN5@IsAllowsFa
$LN4@IsAllowsFa:
	mov	eax, DWORD PTR _i$218848[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218848[ebp], eax
$LN5@IsAllowsFa:
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	cmp	DWORD PTR _i$218848[ebp], eax
	jge	SHORT $LN3@IsAllowsFa

; 2079 : 	{
; 2080 : 		if(HasBelief((BeliefTypes)i))

	mov	ecx, DWORD PTR _i$218848[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@IsAllowsFa

; 2081 : 		{
; 2082 : 			if (pBeliefs->GetEntry(i)->AllowsFaithGiftsToMinors())

	mov	eax, DWORD PTR _i$218848[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?AllowsFaithGiftsToMinors@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::AllowsFaithGiftsToMinors
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@IsAllowsFa

; 2083 : 			{
; 2084 : 				return true;

	mov	al, 1
	jmp	SHORT $LN6@IsAllowsFa
$LN2@IsAllowsFa:

; 2085 : 			}
; 2086 : 		}
; 2087 : 	}

	jmp	SHORT $LN4@IsAllowsFa
$LN3@IsAllowsFa:

; 2088 : 
; 2089 : 	return false;

	xor	al, al
$LN6@IsAllowsFa:

; 2090 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsAllowsFaithGiftsToMinors@CvReligionBeliefs@@QBE_NXZ ENDP ; CvReligionBeliefs::IsAllowsFaithGiftsToMinors
_TEXT	ENDS
PUBLIC	?Read@CvReligionBeliefs@@QAEXAAVFDataStream@@@Z	; CvReligionBeliefs::Read
EXTRN	?Read@BuildingClassArrayHelpers@@YAXAAVFDataStream@@PAH@Z:PROC ; BuildingClassArrayHelpers::Read
EXTRN	?ReadHashed@CvInfosSerializationHelper@@YAHAAVFDataStream@@PA_N@Z:PROC ; CvInfosSerializationHelper::ReadHashed
EXTRN	??5@YAAAVFDataStream@@AAV0@AAW4TechTypes@@@Z:PROC ; operator>>
EXTRN	??5@YAAAVFDataStream@@AAV0@AAW4ResourceTypes@@@Z:PROC ; operator>>
EXTRN	??5@YAAAVFDataStream@@AAV0@AAW4EraTypes@@@Z:PROC ; operator>>
EXTRN	?Read@FDataStream@@IAEXAAH@Z:PROC		; FDataStream::Read
EXTRN	?Read@FDataStream@@IAEXAAI@Z:PROC		; FDataStream::Read
; Function compile flags: /Odtp
;	COMDAT ?Read@CvReligionBeliefs@@QAEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_this$ = -64						; size = 4
$T221011 = -20						; size = 4
_i$221006 = -16						; size = 4
_iBeliefIndex$218875 = -12				; size = 4
_uiVersion$ = -8					; size = 4
_uiBeliefCount$ = -4					; size = 4
_kStream$ = 8						; size = 4
?Read@CvReligionBeliefs@@QAEXAAVFDataStream@@@Z PROC	; CvReligionBeliefs::Read, COMDAT
; _this$ = ecx

; 2095 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	mov	DWORD PTR _this$[ebp], ecx

; 2096 : 	// Version number to maintain backwards compatibility
; 2097 : 	uint uiVersion;
; 2098 : 	kStream >> uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 2099 : 
; 2100 : 	kStream >> m_iFaithFromDyingUnits;

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2101 : 	kStream >> m_iRiverHappiness;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2102 : 	kStream >> m_iPlotCultureCostModifier;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2103 : 	kStream >> m_iCityRangeStrikeModifier;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2104 : 	kStream >> m_iCombatModifierEnemyCities;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2105 : 	kStream >> m_iCombatModifierFriendlyCities;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2106 : 	kStream >> m_iFriendlyHealChange;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2107 : 	kStream >> m_iCityStateFriendshipModifier;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2108 : 	kStream >> m_iLandBarbarianConversionPercent;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2109 : 	kStream >> m_iSpreadStrengthModifier;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2110 : 	kStream >> m_iSpreadDistanceModifier;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 36					; 00000024H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2111 : 	kStream >> m_iProphetStrengthModifier;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2112 : 	kStream >> m_iProphetCostModifier;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2113 : 	kStream >> m_iMissionaryStrengthModifier;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 52					; 00000034H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2114 : #ifdef NQ_FLAT_FAITH_PER_CITIZEN_BORN_FROM_BELIEFS
; 2115 : 	kStream >> m_iFlatFaithPerCitizenBorn;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2116 : #endif
; 2117 : #ifdef NQ_BELIEF_EXTRA_MISSIONARY_SPREADS
; 2118 : 	kStream >> m_iMissionaryExtraSpreads;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2119 : #endif
; 2120 : #ifdef NQ_SPREAD_MODIFIER_OWNED_CITIES
; 2121 : 	kStream >> m_iSpreadModifierOwnedCities;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 64					; 00000040H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2122 : 	kStream >> m_iSpreadModifierUnownedCities;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 68					; 00000044H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2123 : #endif
; 2124 : #ifdef NQ_EXTRA_TRADE_ROUTES_FROM_BELIEF
; 2125 : 	kStream >> m_iExtraTradeRoutes;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2126 : #endif
; 2127 : #ifdef NQ_FAITH_PER_CITY_STATE_THIS_RELIGION
; 2128 : 	kStream >> m_iFaithPerCityStateThisReligion;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 76					; 0000004cH
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2129 : #endif
; 2130 : #ifdef NQ_FAITH_PER_FOREIGN_TRADE_ROUTE
; 2131 : 	kStream >> m_iFaithPerForeignTradeRoute;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 80					; 00000050H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2132 : #endif
; 2133 : #ifdef NQ_GOLDEN_AGE_TURNS_FROM_BELIEF
; 2134 : 	kStream >> m_iGoldenAgeTurns;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2135 : #endif
; 2136 : 	kStream >> m_iMissionaryCostModifier;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 88					; 00000058H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2137 : 	kStream >> m_iFriendlyCityStateSpreadModifier;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 92					; 0000005cH
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2138 : 	kStream >> m_iGreatPersonExpendedFaith;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2139 : 	kStream >> m_iCityStateMinimumInfluence;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 100				; 00000064H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2140 : 	kStream >> m_iCityStateInfluenceModifier;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 104				; 00000068H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2141 : 	kStream >> m_iOtherReligionPressureErosion;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2142 : 	kStream >> m_iSpyPressure;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 112				; 00000070H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2143 : 	kStream >> m_iInquisitorPressureRetention;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 116				; 00000074H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2144 : 	if (uiVersion >= 2)

	cmp	DWORD PTR _uiVersion$[ebp], 2
	jb	SHORT $LN4@Read

; 2145 : 	{
; 2146 : 		kStream >> m_iFaithBuildingTourism;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2147 : 	}
; 2148 : 	else

	jmp	SHORT $LN3@Read
$LN4@Read:

; 2149 : 	{
; 2150 : 		m_iFaithBuildingTourism = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+120], 0
$LN3@Read:

; 2151 : 	}
; 2152 : 
; 2153 : 	kStream >> m_eObsoleteEra;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 124				; 0000007cH
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??5@YAAAVFDataStream@@AAV0@AAW4EraTypes@@@Z ; operator>>
	add	esp, 8

; 2154 : 	kStream >> m_eResourceRevealed;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 128				; 00000080H
	push	edx
	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	call	??5@YAAAVFDataStream@@AAV0@AAW4ResourceTypes@@@Z ; operator>>
	add	esp, 8

; 2155 : 	kStream >> m_eSpreadModifierDoublingTech;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 132				; 00000084H
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??5@YAAAVFDataStream@@AAV0@AAW4TechTypes@@@Z ; operator>>
	add	esp, 8

; 2156 : 
; 2157 : 	m_ReligionBeliefs.clear();

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 136				; 00000088H
	mov	DWORD PTR $T221011[ebp], eax
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN77@Read
	mov	DWORD PTR _i$221006[ebp], 0
	jmp	SHORT $LN75@Read
$LN74@Read:
	mov	edx, DWORD PTR _i$221006[ebp]
	add	edx, 1
	mov	DWORD PTR _i$221006[ebp], edx
$LN75@Read:
	mov	eax, DWORD PTR $T221011[ebp]
	mov	ecx, DWORD PTR _i$221006[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN77@Read
	jmp	SHORT $LN74@Read
$LN77@Read:
	mov	edx, DWORD PTR $T221011[ebp]
	mov	DWORD PTR [edx+4], 0

; 2158 : 	uint uiBeliefCount;
; 2159 : 	kStream >> uiBeliefCount;

	lea	eax, DWORD PTR _uiBeliefCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read
$LN2@Read:

; 2160 : 	while(uiBeliefCount--)

	mov	ecx, DWORD PTR _uiBeliefCount$[ebp]
	mov	edx, DWORD PTR _uiBeliefCount$[ebp]
	sub	edx, 1
	mov	DWORD PTR _uiBeliefCount$[ebp], edx
	test	ecx, ecx
	je	SHORT $LN1@Read

; 2161 : 	{
; 2162 : 		int iBeliefIndex = CvInfosSerializationHelper::ReadHashed(kStream);

	push	0
	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	call	?ReadHashed@CvInfosSerializationHelper@@YAHAAVFDataStream@@PA_N@Z ; CvInfosSerializationHelper::ReadHashed
	add	esp, 8
	mov	DWORD PTR _iBeliefIndex$218875[ebp], eax

; 2163 : 		m_ReligionBeliefs.push_back(iBeliefIndex);

	lea	ecx, DWORD PTR _iBeliefIndex$218875[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	?push_back@?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAEIABH@Z ; FStaticVector<int,5,0,297,0>::push_back

; 2164 : 	}

	jmp	SHORT $LN2@Read
$LN1@Read:

; 2165 : 
; 2166 : 	BuildingClassArrayHelpers::Read(kStream, m_paiBuildingClassEnabled);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+172]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	?Read@BuildingClassArrayHelpers@@YAXAAVFDataStream@@PAH@Z ; BuildingClassArrayHelpers::Read
	add	esp, 8

; 2167 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Read@CvReligionBeliefs@@QAEXAAVFDataStream@@@Z ENDP	; CvReligionBeliefs::Read
_TEXT	ENDS
PUBLIC	?Write@CvReligionBeliefs@@QBEXAAVFDataStream@@@Z ; CvReligionBeliefs::Write
EXTRN	?Write@BuildingClassArrayHelpers@@YAXAAVFDataStream@@PAHH@Z:PROC ; BuildingClassArrayHelpers::Write
EXTRN	?WriteHashed@CvInfosSerializationHelper@@YA_NAAVFDataStream@@W4BeliefTypes@@@Z:PROC ; CvInfosSerializationHelper::WriteHashed
EXTRN	??6@YAAAVFDataStream@@AAV0@ABW4TechTypes@@@Z:PROC ; operator<<
EXTRN	??6@YAAAVFDataStream@@AAV0@ABW4ResourceTypes@@@Z:PROC ; operator<<
EXTRN	??6@YAAAVFDataStream@@AAV0@ABW4EraTypes@@@Z:PROC ; operator<<
EXTRN	?Write@FDataStream@@IAEXABH@Z:PROC		; FDataStream::Write
EXTRN	?Write@FDataStream@@IAEXABI@Z:PROC		; FDataStream::Write
; Function compile flags: /Odtp
;	COMDAT ?Write@CvReligionBeliefs@@QBEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T221167 = -20						; size = 4
$T221160 = -16						; size = 4
$T221060 = -12						; size = 4
_i$218906 = -8						; size = 4
_uiVersion$ = -4					; size = 4
_kStream$ = 8						; size = 4
?Write@CvReligionBeliefs@@QBEXAAVFDataStream@@@Z PROC	; CvReligionBeliefs::Write, COMDAT
; _this$ = ecx

; 2171 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 2172 : 	// Current version number
; 2173 : 	uint uiVersion = 2;

	mov	DWORD PTR _uiVersion$[ebp], 2

; 2174 : 	kStream << uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 2175 : 
; 2176 : 	kStream << m_iFaithFromDyingUnits;

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2177 : 	kStream << m_iRiverHappiness;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2178 : 	kStream << m_iPlotCultureCostModifier;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2179 : 	kStream << m_iCityRangeStrikeModifier;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2180 : 	kStream << m_iCombatModifierEnemyCities;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2181 : 	kStream << m_iCombatModifierFriendlyCities;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2182 : 	kStream << m_iFriendlyHealChange;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2183 : 	kStream << m_iCityStateFriendshipModifier;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2184 : 	kStream << m_iLandBarbarianConversionPercent;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2185 : 	kStream << m_iSpreadStrengthModifier;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2186 : 	kStream << m_iSpreadDistanceModifier;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 36					; 00000024H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2187 : 	kStream << m_iProphetStrengthModifier;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2188 : 	kStream << m_iProphetCostModifier;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2189 : 	kStream << m_iMissionaryStrengthModifier;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 52					; 00000034H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2190 : #ifdef NQ_FLAT_FAITH_PER_CITIZEN_BORN_FROM_BELIEFS
; 2191 : 	kStream << m_iFlatFaithPerCitizenBorn;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2192 : #endif
; 2193 : #ifdef NQ_BELIEF_EXTRA_MISSIONARY_SPREADS
; 2194 : 	kStream << m_iMissionaryExtraSpreads;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2195 : #endif
; 2196 : #ifdef NQ_SPREAD_MODIFIER_OWNED_CITIES
; 2197 : 	kStream << m_iSpreadModifierOwnedCities;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 64					; 00000040H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2198 : 	kStream << m_iSpreadModifierUnownedCities;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 68					; 00000044H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2199 : #endif
; 2200 : #ifdef NQ_EXTRA_TRADE_ROUTES_FROM_BELIEF
; 2201 : 	kStream << m_iExtraTradeRoutes;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2202 : #endif
; 2203 : #ifdef NQ_FAITH_PER_CITY_STATE_THIS_RELIGION
; 2204 : 	kStream << m_iFaithPerCityStateThisReligion;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 76					; 0000004cH
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2205 : #endif
; 2206 : #ifdef NQ_FAITH_PER_FOREIGN_TRADE_ROUTE
; 2207 : 	kStream << m_iFaithPerForeignTradeRoute;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 80					; 00000050H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2208 : #endif
; 2209 : #ifdef NQ_GOLDEN_AGE_TURNS_FROM_BELIEF
; 2210 : 	kStream << m_iGoldenAgeTurns;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2211 : #endif
; 2212 : 	kStream << m_iMissionaryCostModifier;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 88					; 00000058H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2213 : 	kStream << m_iFriendlyCityStateSpreadModifier;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 92					; 0000005cH
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2214 : 	kStream << m_iGreatPersonExpendedFaith;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2215 : 	kStream << m_iCityStateMinimumInfluence;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 100				; 00000064H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2216 : 	kStream << m_iCityStateInfluenceModifier;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 104				; 00000068H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2217 : 	kStream << m_iOtherReligionPressureErosion;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2218 : 	kStream << m_iSpyPressure;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 112				; 00000070H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2219 : 	kStream << m_iInquisitorPressureRetention;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 116				; 00000074H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2220 : 	kStream << m_iFaithBuildingTourism;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2221 : 
; 2222 : 	kStream << m_eObsoleteEra;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 124				; 0000007cH
	push	edx
	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	call	??6@YAAAVFDataStream@@AAV0@ABW4EraTypes@@@Z ; operator<<
	add	esp, 8

; 2223 : 	kStream << m_eResourceRevealed;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??6@YAAAVFDataStream@@AAV0@ABW4ResourceTypes@@@Z ; operator<<
	add	esp, 8

; 2224 : 	kStream << m_eSpreadModifierDoublingTech;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 132				; 00000084H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??6@YAAAVFDataStream@@AAV0@ABW4TechTypes@@@Z ; operator<<
	add	esp, 8

; 2225 : 
; 2226 : 	// m_ReligionBeliefs contains the BeliefTypes, which are indices into the religion info table (GC.getBeliefInfo).  Write out the info hashes
; 2227 : 	kStream << m_ReligionBeliefs.size();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+140]
	mov	DWORD PTR $T221160[ebp], eax
	mov	ecx, DWORD PTR $T221160[ebp]
	mov	DWORD PTR $T221060[ebp], ecx
	lea	edx, DWORD PTR $T221060[ebp]
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 2228 : 	for (uint i = 0; i < m_ReligionBeliefs.size(); ++i)

	mov	DWORD PTR _i$218906[ebp], 0
	jmp	SHORT $LN3@Write
$LN2@Write:
	mov	eax, DWORD PTR _i$218906[ebp]
	add	eax, 1
	mov	DWORD PTR _i$218906[ebp], eax
$LN3@Write:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+140]
	mov	DWORD PTR $T221167[ebp], edx
	mov	eax, DWORD PTR _i$218906[ebp]
	cmp	eax, DWORD PTR $T221167[ebp]
	jae	SHORT $LN1@Write

; 2229 : 	{
; 2230 : 		CvInfosSerializationHelper::WriteHashed(kStream, (BeliefTypes)m_ReligionBeliefs[i]);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	mov	eax, DWORD PTR _i$218906[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	?WriteHashed@CvInfosSerializationHelper@@YA_NAAVFDataStream@@W4BeliefTypes@@@Z ; CvInfosSerializationHelper::WriteHashed
	add	esp, 8

; 2231 : 	}

	jmp	SHORT $LN2@Write
$LN1@Write:

; 2232 : 
; 2233 : 	BuildingClassArrayHelpers::Write(kStream, m_paiBuildingClassEnabled, GC.getNumBuildingClassInfos());

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	?Write@BuildingClassArrayHelpers@@YAXAAVFDataStream@@PAHH@Z ; BuildingClassArrayHelpers::Write
	add	esp, 12					; 0000000cH

; 2234 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Write@CvReligionBeliefs@@QBEXAAVFDataStream@@@Z ENDP	; CvReligionBeliefs::Write
_TEXT	ENDS
PUBLIC	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
PUBLIC	??_C@_0CO@FKDMNHMP@TXT_KEY_NOTIFICATION_SUMMARY_HEA@ ; `string'
PUBLIC	?GetLocalizedText@@YA?AVCvString@@PBD@Z		; GetLocalizedText
PUBLIC	??_C@_0CG@PCBBNFI@TXT_KEY_NOTIFICATION_HEATHEN_CON@ ; `string'
PUBLIC	?Format@CvString@@QAAXPBDZZ			; CvString::Format
PUBLIC	??_C@_0DA@JCFEMLJD@Converted?5barbarian?5?$CIwith?5belief@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?ConvertBarbarianUnit@CvBeliefHelpers@@YA_NPAVCvPlayer@@V?$FObjectHandle@VCvUnit@@@@@Z ; CvBeliefHelpers::ConvertBarbarianUnit
EXTRN	?SetPlayerThatClearedBarbCampHere@CvPlot@@QAEXW4PlayerTypes@@@Z:PROC ; CvPlot::SetPlayerThatClearedBarbCampHere
EXTRN	?DoBarbCampCleared@CvBarbarians@@SAXPAVCvPlot@@W4PlayerTypes@@@Z:PROC ; CvBarbarians::DoBarbCampCleared
EXTRN	?setImprovementType@CvPlot@@QAEXW4ImprovementTypes@@W4PlayerTypes@@@Z:PROC ; CvPlot::setImprovementType
EXTRN	?getImprovementType@CvPlot@@QBE?AW4ImprovementTypes@@XZ:PROC ; CvPlot::getImprovementType
EXTRN	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z:PROC ; CvNotifications::Add
EXTRN	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ:PROC ; CvPlayer::GetNotifications
EXTRN	?LogHomelandMessage@CvHomelandAI@@QAEXAAVCvString@@@Z:PROC ; CvHomelandAI::LogHomelandMessage
EXTRN	?GetHomelandAI@CvPlayer@@QBEPAVCvHomelandAI@@XZ:PROC ; CvPlayer::GetHomelandAI
EXTRN	?getAILogging@CvGlobals@@QAE_NXZ:PROC		; CvGlobals::getAILogging
EXTRN	?getLogging@CvGlobals@@QAE_NXZ:PROC		; CvGlobals::getLogging
EXTRN	?finishMoves@CvUnit@@QAEXXZ:PROC		; CvUnit::finishMoves
EXTRN	?setupGraphical@CvUnit@@QAEXXZ:PROC		; CvUnit::setupGraphical
EXTRN	?convert@CvUnit@@QAEXPAV1@_N@Z:PROC		; CvUnit::convert
EXTRN	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ:PROC ; CvUnit::getDestructionNotification
EXTRN	?initUnit@CvPlayer@@QAEPAVCvUnit@@W4UnitTypes@@HHW4UnitAITypes@@W4DirectionTypes@@_N3HH@Z:PROC ; CvPlayer::initUnit
EXTRN	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ:PROC	; CvUnit::getUnitType
EXTRN	?AI_getUnitAIType@CvUnit@@QBE?AW4UnitAITypes@@XZ:PROC ; CvUnit::AI_getUnitAIType
EXTRN	?plot@CvUnit@@QBEPAVCvPlot@@XZ:PROC		; CvUnit::plot
;	COMDAT ??_C@_0CO@FKDMNHMP@TXT_KEY_NOTIFICATION_SUMMARY_HEA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
CONST	SEGMENT
??_C@_0CO@FKDMNHMP@TXT_KEY_NOTIFICATION_SUMMARY_HEA@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_HEATHEN_CONVERTS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@PCBBNFI@TXT_KEY_NOTIFICATION_HEATHEN_CON@
CONST	SEGMENT
??_C@_0CG@PCBBNFI@TXT_KEY_NOTIFICATION_HEATHEN_CON@ DB 'TXT_KEY_NOTIFICAT'
	DB	'ION_HEATHEN_CONVERTS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@JCFEMLJD@Converted?5barbarian?5?$CIwith?5belief@
CONST	SEGMENT
??_C@_0DA@JCFEMLJD@Converted?5barbarian?5?$CIwith?5belief@ DB 'Converted '
	DB	'barbarian (with belief), X: %d, Y: %d', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?ConvertBarbarianUnit@CvBeliefHelpers@@YA_NPAVCvPlayer@@V?$FObjectHandle@VCvUnit@@@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?ConvertBarbarianUnit@CvBeliefHelpers@@YA_NPAVCvPlayer@@V?$FObjectHandle@VCvUnit@@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?ConvertBarbarianUnit@CvBeliefHelpers@@YA_NPAVCvPlayer@@V?$FObjectHandle@VCvUnit@@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ConvertBarbarianUnit@CvBeliefHelpers@@YA_NPAVCvPlayer@@V?$FObjectHandle@VCvUnit@@@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ConvertBarbarianUnit@CvBeliefHelpers@@YA_NPAVCvPlayer@@V?$FObjectHandle@VCvUnit@@@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?ConvertBarbarianUnit@CvBeliefHelpers@@YA_NPAVCvPlayer@@V?$FObjectHandle@VCvUnit@@@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?ConvertBarbarianUnit@CvBeliefHelpers@@YA_NPAVCvPlayer@@V?$FObjectHandle@VCvUnit@@@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?ConvertBarbarianUnit@CvBeliefHelpers@@YA_NPAVCvPlayer@@V?$FObjectHandle@VCvUnit@@@@@Z$4
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvbeliefclasses.cpp
xdata$x	ENDS
;	COMDAT ?ConvertBarbarianUnit@CvBeliefHelpers@@YA_NPAVCvPlayer@@V?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
$T221339 = -204						; size = 4
$T221330 = -200						; size = 4
$T221321 = -196						; size = 4
$T221317 = -192						; size = 4
$T221313 = -188						; size = 4
$T221309 = -184						; size = 4
$T221300 = -180						; size = 4
$T221296 = -176						; size = 4
$T221287 = -172						; size = 4
$T221279 = -168						; size = 4
$T221270 = -164						; size = 4
$T221266 = -160						; size = 4
$T221257 = -156						; size = 4
$T221240 = -152						; size = 4
$T221236 = -148						; size = 4
$T221220 = -144						; size = 4
$T221216 = -140						; size = 4
$T221207 = -136						; size = 4
$T221203 = -132						; size = 4
$T221194 = -128						; size = 4
$T221190 = -124						; size = 4
$T221186 = -120						; size = 4
$T221174 = -113						; size = 1
_logMsg$218918 = -112					; size = 28
_pPlot$ = -84						; size = 4
_strBuffer$ = -80					; size = 28
_strSummary$ = -52					; size = 28
__$ArrayPad$ = -24					; size = 4
_pNewUnit$ = -20					; size = 8
__$EHRec$ = -12						; size = 12
_pPlayer$ = 8						; size = 4
_pUnit$ = 12						; size = 8
?ConvertBarbarianUnit@CvBeliefHelpers@@YA_NPAVCvPlayer@@V?$FObjectHandle@VCvUnit@@@@@Z PROC ; CvBeliefHelpers::ConvertBarbarianUnit, COMDAT

; 2240 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ConvertBarbarianUnit@CvBeliefHelpers@@YA_NPAVCvPlayer@@V?$FObjectHandle@VCvUnit@@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2241 : 	UnitHandle pNewUnit;

	mov	DWORD PTR _pNewUnit$[ebp], 0
	mov	BYTE PTR _pNewUnit$[ebp+4], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2242 : 	CvPlot *pPlot = pUnit->plot();

	mov	eax, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T221186[ebp], eax
	mov	ecx, DWORD PTR $T221186[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	DWORD PTR _pPlot$[ebp], eax

; 2243 : 
; 2244 : 	// Convert the barbarian into our unit
; 2245 : #ifdef AUI_UNIT_FIX_GIFTED_UNITS_ARE_GIFTED_NOT_CLONED
; 2246 : 	pNewUnit = pPlayer->initUnit(pUnit->getUnitType(), pUnit->getX(), pUnit->getY(), pUnit->AI_getUnitAIType(), NO_DIRECTION, true /*bNoMove*/, false, DEFAULT_UNIT_MAP_LAYER, 0, true);
; 2247 : #else
; 2248 : 	pNewUnit = pPlayer->initUnit(pUnit->getUnitType(), pUnit->getX(), pUnit->getY(), pUnit->AI_getUnitAIType(), NO_DIRECTION, true /*bNoMove*/, false);

	mov	ecx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T221190[ebp], ecx
	mov	edx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T221194[ebp], edx
	mov	eax, DWORD PTR $T221194[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	DWORD PTR $T221203[ebp], ecx
	mov	edx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T221207[ebp], edx
	mov	eax, DWORD PTR $T221207[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR $T221216[ebp], ecx
	mov	edx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T221220[ebp], edx
	push	0
	push	0
	push	0
	push	1
	push	-1
	mov	ecx, DWORD PTR $T221190[ebp]
	call	?AI_getUnitAIType@CvUnit@@QBE?AW4UnitAITypes@@XZ ; CvUnit::AI_getUnitAIType
	push	eax
	mov	eax, DWORD PTR $T221203[ebp]
	push	eax
	mov	ecx, DWORD PTR $T221216[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T221220[ebp]
	call	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ ; CvUnit::getUnitType
	push	eax
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?initUnit@CvPlayer@@QAEPAVCvUnit@@W4UnitTypes@@HHW4UnitAITypes@@W4DirectionTypes@@_N3HH@Z ; CvPlayer::initUnit
	mov	DWORD PTR $T221236[ebp], eax
	cmp	DWORD PTR _pNewUnit$[ebp], 0
	je	SHORT $LN31@ConvertBar
	mov	ecx, DWORD PTR _pNewUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN31@ConvertBar:
	mov	edx, DWORD PTR $T221236[ebp]
	mov	DWORD PTR _pNewUnit$[ebp], edx
	cmp	DWORD PTR _pNewUnit$[ebp], 0
	je	SHORT $LN32@ConvertBar
	mov	ecx, DWORD PTR _pNewUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN32@ConvertBar:

; 2249 : #endif
; 2250 : 	CvAssertMsg(pNewUnit, "pNewUnit is not assigned a valid value");
; 2251 : 	pNewUnit->convert(pUnit.pointer(), false);

	mov	eax, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T221240[ebp], eax
	push	0
	mov	ecx, DWORD PTR $T221240[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pNewUnit$[ebp]
	call	?convert@CvUnit@@QAEXPAV1@_N@Z		; CvUnit::convert

; 2252 : 	pNewUnit->setupGraphical();

	mov	ecx, DWORD PTR _pNewUnit$[ebp]
	call	?setupGraphical@CvUnit@@QAEXXZ		; CvUnit::setupGraphical

; 2253 : 	pNewUnit->finishMoves(); // No move first turn

	mov	ecx, DWORD PTR _pNewUnit$[ebp]
	call	?finishMoves@CvUnit@@QAEXXZ		; CvUnit::finishMoves

; 2254 : 
; 2255 : 	if(GC.getLogging() && GC.getAILogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	movzx	edx, al
	test	edx, edx
	je	$LN2@ConvertBar
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getAILogging@CvGlobals@@QAE_NXZ	; CvGlobals::getAILogging
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@ConvertBar

; 2256 : 	{
; 2257 : 		CvString logMsg;

	lea	ecx, DWORD PTR _logMsg$218918[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 2258 : 		logMsg.Format("Converted barbarian (with belief), X: %d, Y: %d", pUnit->getX(), pUnit->getY());

	mov	ecx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T221257[ebp], ecx
	mov	edx, DWORD PTR $T221257[ebp]
	mov	eax, DWORD PTR [edx+88]
	mov	DWORD PTR $T221266[ebp], eax
	mov	ecx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T221270[ebp], ecx
	mov	edx, DWORD PTR $T221270[ebp]
	mov	eax, DWORD PTR [edx+76]
	mov	DWORD PTR $T221279[ebp], eax
	mov	ecx, DWORD PTR $T221266[ebp]
	push	ecx
	mov	edx, DWORD PTR $T221279[ebp]
	push	edx
	push	OFFSET ??_C@_0DA@JCFEMLJD@Converted?5barbarian?5?$CIwith?5belief@
	lea	eax, DWORD PTR _logMsg$218918[ebp]
	push	eax
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format
	add	esp, 16					; 00000010H

; 2259 : 		pPlayer->GetHomelandAI()->LogHomelandMessage(logMsg);

	lea	ecx, DWORD PTR _logMsg$218918[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?GetHomelandAI@CvPlayer@@QBEPAVCvHomelandAI@@XZ ; CvPlayer::GetHomelandAI
	mov	ecx, eax
	call	?LogHomelandMessage@CvHomelandAI@@QAEXAAVCvString@@@Z ; CvHomelandAI::LogHomelandMessage

; 2260 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _logMsg$218918[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@ConvertBar:

; 2261 : 
; 2262 : 	CvString strBuffer = GetLocalizedText("TXT_KEY_NOTIFICATION_HEATHEN_CONVERTS");

	push	OFFSET ??_C@_0CG@PCBBNFI@TXT_KEY_NOTIFICATION_HEATHEN_CON@
	lea	edx, DWORD PTR _strBuffer$[ebp]
	push	edx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 2263 : 	CvString strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_HEATHEN_CONVERTS");

	push	OFFSET ??_C@_0CO@FKDMNHMP@TXT_KEY_NOTIFICATION_SUMMARY_HEA@
	lea	eax, DWORD PTR _strSummary$[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 2264 : 	pPlayer->GetNotifications()->Add(NOTIFICATION_GENERIC, strBuffer, strSummary, pUnit->getX(), pUnit->getY(), -1);

	mov	ecx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T221287[ebp], ecx
	mov	edx, DWORD PTR $T221287[ebp]
	mov	eax, DWORD PTR [edx+88]
	mov	DWORD PTR $T221296[ebp], eax
	mov	ecx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T221300[ebp], ecx
	mov	edx, DWORD PTR $T221300[ebp]
	mov	eax, DWORD PTR [edx+76]
	mov	DWORD PTR $T221309[ebp], eax
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T221313[ebp], eax
	lea	ecx, DWORD PTR _strBuffer$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T221317[ebp], eax
	push	-1
	push	-1
	mov	ecx, DWORD PTR $T221296[ebp]
	push	ecx
	mov	edx, DWORD PTR $T221309[ebp]
	push	edx
	mov	eax, DWORD PTR $T221313[ebp]
	push	eax
	mov	ecx, DWORD PTR $T221317[ebp]
	push	ecx
	push	-1097390650				; be9725c6H
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 2265 : 
; 2266 : 	if (pPlot->getImprovementType() == GC.getBARBARIAN_CAMP_IMPROVEMENT())

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8548
	mov	DWORD PTR $T221321[ebp], edx
	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?getImprovementType@CvPlot@@QBE?AW4ImprovementTypes@@XZ ; CvPlot::getImprovementType
	cmp	eax, DWORD PTR $T221321[ebp]
	jne	SHORT $LN1@ConvertBar

; 2267 : 	{
; 2268 : 		pPlot->setImprovementType(NO_IMPROVEMENT);

	push	-1
	push	-1
	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?setImprovementType@CvPlot@@QAEXW4ImprovementTypes@@W4PlayerTypes@@@Z ; CvPlot::setImprovementType

; 2269 : 
; 2270 : 		CvBarbarians::DoBarbCampCleared(pPlot, pPlayer->GetID());

	mov	eax, DWORD PTR _pPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T221330[ebp], ecx
	mov	edx, DWORD PTR $T221330[ebp]
	push	edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	call	?DoBarbCampCleared@CvBarbarians@@SAXPAVCvPlot@@W4PlayerTypes@@@Z ; CvBarbarians::DoBarbCampCleared
	add	esp, 8

; 2271 : 		pPlot->SetPlayerThatClearedBarbCampHere(pPlayer->GetID());

	mov	ecx, DWORD PTR _pPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T221339[ebp], edx
	mov	eax, DWORD PTR $T221339[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?SetPlayerThatClearedBarbCampHere@CvPlot@@QAEXW4PlayerTypes@@@Z ; CvPlot::SetPlayerThatClearedBarbCampHere
$LN1@ConvertBar:

; 2272 : 
; 2273 : 		// Don't give gold for Camps cleared by heathen conversion
; 2274 : 	}
; 2275 : 
; 2276 : 	return true;

	mov	BYTE PTR $T221174[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _strBuffer$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _pNewUnit$[ebp], 0
	je	SHORT $LN97@ConvertBar
	mov	ecx, DWORD PTR _pNewUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN97@ConvertBar:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _pUnit$[ebp], 0
	je	SHORT $LN102@ConvertBar
	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN102@ConvertBar:
	mov	al, BYTE PTR $T221174[ebp]

; 2277 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ConvertBarbarianUnit@CvBeliefHelpers@@YA_NPAVCvPlayer@@V?$FObjectHandle@VCvUnit@@@@@Z$0:
	lea	ecx, DWORD PTR _pUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__unwindfunclet$?ConvertBarbarianUnit@CvBeliefHelpers@@YA_NPAVCvPlayer@@V?$FObjectHandle@VCvUnit@@@@@Z$1:
	lea	ecx, DWORD PTR _pNewUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__unwindfunclet$?ConvertBarbarianUnit@CvBeliefHelpers@@YA_NPAVCvPlayer@@V?$FObjectHandle@VCvUnit@@@@@Z$2:
	lea	ecx, DWORD PTR _logMsg$218918[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?ConvertBarbarianUnit@CvBeliefHelpers@@YA_NPAVCvPlayer@@V?$FObjectHandle@VCvUnit@@@@@Z$3:
	lea	ecx, DWORD PTR _strBuffer$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?ConvertBarbarianUnit@CvBeliefHelpers@@YA_NPAVCvPlayer@@V?$FObjectHandle@VCvUnit@@@@@Z$4:
	lea	ecx, DWORD PTR _strSummary$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?ConvertBarbarianUnit@CvBeliefHelpers@@YA_NPAVCvPlayer@@V?$FObjectHandle@VCvUnit@@@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-196]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ConvertBarbarianUnit@CvBeliefHelpers@@YA_NPAVCvPlayer@@V?$FObjectHandle@VCvUnit@@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ConvertBarbarianUnit@CvBeliefHelpers@@YA_NPAVCvPlayer@@V?$FObjectHandle@VCvUnit@@@@@Z ENDP ; CvBeliefHelpers::ConvertBarbarianUnit
PUBLIC	__$ArrayPad$
EXTRN	__imp_??1String@Localization@@UAE@XZ:PROC
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:PROC
EXTRN	__imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z:PROC
EXTRN	__imp_?toUTF8@String@Localization@@QAEPBDAAIH@Z:PROC
EXTRN	__imp_?Lookup@Localization@@YA?AVString@1@PBD@Z:PROC
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?GetLocalizedText@@YA?AVCvString@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$1
__ehfuncinfo$?GetLocalizedText@@YA?AVCvString@@PBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?GetLocalizedText@@YA?AVCvString@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
xdata$x	ENDS
;	COMDAT ?GetLocalizedText@@YA?AVCvString@@PBD@Z
_TEXT	SEGMENT
$T221378 = -140						; size = 4
_str$ = -136						; size = 28
__$ArrayPad$ = -108					; size = 4
_bytes$ = -104						; size = 4
_text$ = -100						; size = 80
_szComposedString$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_szString$ = 12						; size = 4
?GetLocalizedText@@YA?AVCvString@@PBD@Z PROC		; GetLocalizedText, COMDAT

; 489  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetLocalizedText@@YA?AVCvString@@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 128				; 00000080H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T221378[ebp], 0

; 490  : 	Localization::String text = Localization::Lookup(szString);

	mov	eax, DWORD PTR _szString$[ebp]
	push	eax
	lea	ecx, DWORD PTR _text$[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 491  : 
; 492  : 	size_t bytes = 0;

	mov	DWORD PTR _bytes$[ebp], 0

; 493  : 	const char* szComposedString = text.toUTF8(bytes);

	push	1
	lea	edx, DWORD PTR _bytes$[ebp]
	push	edx
	lea	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDAAIH@Z
	mov	DWORD PTR _szComposedString$[ebp], eax

; 494  : 	CvString str;

	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 495  : 	str.assign(szComposedString, bytes);

	mov	eax, DWORD PTR _bytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szComposedString$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z

; 496  : 	return str;

	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T221378[ebp]
	or	eax, 1
	mov	DWORD PTR $T221378[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 497  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$0:
	lea	ecx, DWORD PTR _text$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$1:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$2:
	mov	eax, DWORD PTR $T221378[ebp]
	and	eax, 1
	je	$LN6@GetLocaliz
	and	DWORD PTR $T221378[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
$LN6@GetLocaliz:
	ret	0
__ehhandler$?GetLocalizedText@@YA?AVCvString@@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetLocalizedText@@YA?AVCvString@@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetLocalizedText@@YA?AVCvString@@PBD@Z ENDP		; GetLocalizedText
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
;	COMDAT ??1?$FObjectHandle@VCvUnit@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$FObjectHandle@VCvUnit@@@@QAE@XZ PROC		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>, COMDAT
; _this$ = ecx

; 146  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 147  : 		if(m_target) 

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@FObjectHan

; 148  : 		{
; 149  : 			m_target->getDestructionNotification().removeTarget(*this);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN2@FObjectHan:

; 150  : 		}
; 151  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$FObjectHandle@VCvUnit@@@@QAE@XZ ENDP		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??1?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -44						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE@XZ PROC ; std::vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::~vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 559  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@IAEXXZ ; std::vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::_Tidy

; 560  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE@XZ
__ehhandler$??1?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE@XZ ENDP ; std::vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::~vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >
PUBLIC	??1?$BaseVector@H$0A@@@QAE@XZ			; BaseVector<int,0>::~BaseVector<int,0>
PUBLIC	??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@ ; `string'
EXTRN	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z:PROC ; FireMallocAlignedNoTracking
;	COMDAT ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@ DB 'd:\sources\'
	DB	'lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\FF'
	DB	'astVector.h', 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??0?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T221471 = -20						; size = 4
_pRet$221468 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??0?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ PROC	; FStaticVector<int,5,0,297,0>::FStaticVector<int,5,0,297,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 5

; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T221471[ebp], edx
	cmp	DWORD PTR $T221471[ebp], 5
	jbe	SHORT $LN7@FStaticVec
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	eax, DWORD PTR $T221471[ebp]
	shl	eax, 2
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$221468[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T221471[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN8@FStaticVec
$LN7@FStaticVec:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pRet$221468[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 5
$LN8@FStaticVec:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pRet$221468[ebp]
	mov	DWORD PTR [edx], eax

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@H$0A@@@QAE@XZ		; BaseVector<int,0>::~BaseVector<int,0>
__ehhandler$??0?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ ENDP	; FStaticVector<int,5,0,297,0>::FStaticVector<int,5,0,297,0>
EXTRN	?FireFreeAlignedNoTracking@@YAXPAX@Z:PROC	; FireFreeAlignedNoTracking
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??1?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T221502 = -24						; size = 4
$T221501 = -20						; size = 4
_i$221494 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ PROC	; FStaticVector<int,5,0,297,0>::~FStaticVector<int,5,0,297,0>, COMDAT
; _this$ = ecx

; 617  : 	~FStaticVector(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T221502[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T221501[ebp], eax
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN5@FStaticVec@2
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@FStaticVec@2
	mov	DWORD PTR _i$221494[ebp], 0
	jmp	SHORT $LN10@FStaticVec@2
$LN9@FStaticVec@2:
	mov	eax, DWORD PTR _i$221494[ebp]
	add	eax, 1
	mov	DWORD PTR _i$221494[ebp], eax
$LN10@FStaticVec@2:
	mov	ecx, DWORD PTR _i$221494[ebp]
	cmp	ecx, DWORD PTR $T221502[ebp]
	jae	SHORT $LN5@FStaticVec@2
	jmp	SHORT $LN9@FStaticVec@2
$LN5@FStaticVec@2:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	cmp	DWORD PTR $T221501[ebp], edx
	je	SHORT $LN1@FStaticVec@2
	mov	eax, DWORD PTR $T221501[ebp]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN1@FStaticVec@2:

; 619  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@H$0A@@@QAE@XZ		; BaseVector<int,0>::~BaseVector<int,0>
__ehhandler$??1?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAE@XZ ENDP	; FStaticVector<int,5,0,297,0>::~FStaticVector<int,5,0,297,0>
PUBLIC	?Copy@?$BaseVector@H$0A@@@IAEXABV1@@Z		; BaseVector<int,0>::Copy
; Function compile flags: /Odtp
;	COMDAT ??4?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAEXABV0@@Z
_TEXT	SEGMENT
_this$ = -36						; size = 4
_i$221547 = -24						; size = 4
$T221542 = -20						; size = 4
_pRet$221539 = -16					; size = 4
$T221535 = -12						; size = 4
$T221534 = -8						; size = 4
_i$221527 = -4						; size = 4
_RHS$ = 8						; size = 4
??4?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAEXABV0@@Z PROC	; FStaticVector<int,5,0,297,0>::operator=, COMDAT
; _this$ = ecx

; 620  : 	void operator = (const THIS_TYPE& RHS){

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 621  : 		if( m_uiCurrMaxSize <= RHS.m_uiCurrSize){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _RHS$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	ja	$LN2@operator

; 622  : 			Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T221535[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T221534[ebp], eax
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN6@operator
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN6@operator
	mov	DWORD PTR _i$221527[ebp], 0
	jmp	SHORT $LN11@operator
$LN10@operator:
	mov	eax, DWORD PTR _i$221527[ebp]
	add	eax, 1
	mov	DWORD PTR _i$221527[ebp], eax
$LN11@operator:
	mov	ecx, DWORD PTR _i$221527[ebp]
	cmp	ecx, DWORD PTR $T221535[ebp]
	jae	SHORT $LN6@operator
	jmp	SHORT $LN10@operator
$LN6@operator:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	cmp	DWORD PTR $T221534[ebp], edx
	je	SHORT $LN7@operator
	mov	eax, DWORD PTR $T221534[ebp]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN7@operator:

; 623  : 			m_pData = Alloc(RHS.m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _RHS$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T221542[ebp], edx
	cmp	DWORD PTR $T221542[ebp], 5
	jbe	SHORT $LN16@operator
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	eax, DWORD PTR $T221542[ebp]
	shl	eax, 2
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$221539[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T221542[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN17@operator
$LN16@operator:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pRet$221539[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 5
$LN17@operator:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pRet$221539[ebp]
	mov	DWORD PTR [edx], eax

; 624  : 		}else{

	jmp	SHORT $LN1@operator
$LN2@operator:

; 625  : 			Destroy(m_pData, m_uiCurrSize);

	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN1@operator
	mov	DWORD PTR _i$221547[ebp], 0
	jmp	SHORT $LN21@operator
$LN20@operator:
	mov	edx, DWORD PTR _i$221547[ebp]
	add	edx, 1
	mov	DWORD PTR _i$221547[ebp], edx
$LN21@operator:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$221547[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN1@operator
	jmp	SHORT $LN20@operator
$LN1@operator:

; 626  : 		}
; 627  : 		Copy(RHS);

	mov	edx, DWORD PTR _RHS$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Copy@?$BaseVector@H$0A@@@IAEXABV1@@Z	; BaseVector<int,0>::Copy

; 628  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
??4?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAEXABV0@@Z ENDP	; FStaticVector<int,5,0,297,0>::operator=
_TEXT	ENDS
PUBLIC	?GrowSize@?$FStaticVector@H$04$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<int,5,0,297,0>::GrowSize
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAEIABH@Z
_TEXT	SEGMENT
tv140 = -52						; size = 4
tv131 = -48						; size = 4
_this$ = -44						; size = 4
$T221560 = -4						; size = 4
_element$ = 8						; size = 4
?push_back@?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAEIABH@Z PROC ; FStaticVector<int,5,0,297,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	DWORD PTR _this$[ebp], ecx

; 677  : 		m_bIsResized = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0

; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN35@push_back

; 679  : 			GrowSize(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GrowSize@?$FStaticVector@H$04$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<int,5,0,297,0>::GrowSize

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

$LN35@push_back:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR $T221560[ebp], ecx
	cmp	DWORD PTR $T221560[ebp], 0
	je	SHORT $LN4@push_back
	mov	edx, DWORD PTR $T221560[ebp]
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T221560[ebp]
	mov	DWORD PTR tv131[ebp], edx
	jmp	SHORT $LN5@push_back
$LN4@push_back:
	mov	DWORD PTR tv131[ebp], 0
$LN5@push_back:

; 681  : 		return m_uiCurrSize++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv140[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv140[ebp]

; 682  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$FStaticVector@H$04$0A@$0BCJ@$0A@@@QAEIABH@Z ENDP ; FStaticVector<int,5,0,297,0>::push_back
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::~_Vector_val<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::~_Vector_val<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >
_TEXT	ENDS
PUBLIC	??$unchecked_copy@PAPAVCvBeliefEntry@@PAPAV1@@stdext@@YAPAPAVCvBeliefEntry@@PAPAV1@00@Z ; stdext::unchecked_copy<CvBeliefEntry * *,CvBeliefEntry * *>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?erase@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@2@0@Z
_TEXT	SEGMENT
_this$ = -56						; size = 4
$T221700 = -52						; size = 4
$T221689 = -48						; size = 4
$T221688 = -44						; size = 4
__Cat$221695 = -40					; size = 1
$T221693 = -39						; size = 1
__Ptr$219019 = -12					; size = 4
__Last$ = -8						; size = 4
__First$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@2@0@Z PROC ; std::vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::erase, COMDAT
; _this$ = ecx

; 1028 : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	mov	DWORD PTR _this$[ebp], ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);

	mov	eax, DWORD PTR __First_arg$[ebp]
	mov	DWORD PTR __First$[ebp], eax

; 1030 : 		iterator _Last = _Make_iter(_Last_arg);

	mov	ecx, DWORD PTR __Last_arg$[ebp]
	mov	DWORD PTR __Last$[ebp], ecx

; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	edx, DWORD PTR __First$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR __Last$[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN1@erase

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$unchecked_copy@PAPAVCvBeliefEntry@@PAPAV1@@stdext@@YAPAPAVCvBeliefEntry@@PAPAV1@00@Z ; stdext::unchecked_copy<CvBeliefEntry * *,CvBeliefEntry * *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ptr$219019[ebp], eax

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T221700[ebp], edx
	mov	eax, DWORD PTR $T221700[ebp]
	mov	DWORD PTR $T221689[ebp], eax
	mov	ecx, DWORD PTR __Ptr$219019[ebp]
	mov	DWORD PTR $T221688[ebp], ecx
	mov	dl, BYTE PTR __Cat$221695[ebp]
	mov	BYTE PTR $T221693[ebp], dl

; 1049 : 			_Mylast = _Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$219019[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN1@erase:

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1055 : #endif
; 1056 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@2@0@Z ENDP ; std::vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::erase
_TEXT	ENDS
PUBLIC	??$_Allocate@PAVCvBeliefEntry@@@std@@YAPAPAVCvBeliefEntry@@IPAPAV1@@Z ; std::_Allocate<CvBeliefEntry *>
PUBLIC	?_Xlen@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@KAXXZ ; std::vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::_Xlen
; Function compile flags: /Odtp
;	COMDAT ?_Buy@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
tv94 = -96						; size = 4
_this$ = -92						; size = 4
__Count$221714 = -4					; size = 4
__Capacity$ = 8						; size = 4
?_Buy@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@IAE_NI@Z PROC ; std::vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	mov	DWORD PTR _this$[ebp], ecx

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 1104 : 		if (_Capacity == 0)

	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN4@Buy

; 1105 : 			return (false);

	xor	al, al
	jmp	SHORT $LN5@Buy
	jmp	SHORT $LN3@Buy
$LN4@Buy:

; 1106 : 		else if (max_size() < _Capacity)

	mov	DWORD PTR __Count$221714[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$221714[ebp], 0
	jbe	SHORT $LN11@Buy
	mov	eax, DWORD PTR __Count$221714[ebp]
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN7@Buy
$LN11@Buy:
	mov	DWORD PTR tv94[ebp], 1
$LN7@Buy:
	mov	ecx, DWORD PTR tv94[ebp]
	cmp	ecx, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN23@Buy

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@KAXXZ ; std::vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::_Xlen

; 1108 : 		else

	jmp	SHORT $LN3@Buy

; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

$LN23@Buy:
	push	0
	mov	edx, DWORD PTR __Capacity$[ebp]
	push	edx
	call	??$_Allocate@PAVCvBeliefEntry@@@std@@YAPAPAVCvBeliefEntry@@IPAPAV1@@Z ; std::_Allocate<CvBeliefEntry *>
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+8], ecx

; 1112 : 			_Myend = _Myfirst + _Capacity;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Capacity$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
$LN3@Buy:

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
$LN5@Buy:

; 1115 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::_Buy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T221781 = -28						; size = 4
$T221780 = -24						; size = 4
$T221776 = -20						; size = 4
$T221775 = -16						; size = 4
$T221764 = -12						; size = 4
$T221763 = -8						; size = 4
__Cat$221770 = -2					; size = 1
$T221768 = -1						; size = 1
?_Tidy@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@IAEXXZ PROC ; std::vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Tidy

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T221776[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T221775[ebp], ecx
	mov	edx, DWORD PTR $T221776[ebp]
	mov	DWORD PTR $T221764[ebp], edx
	mov	eax, DWORD PTR $T221775[ebp]
	mov	DWORD PTR $T221763[ebp], eax
	mov	cl, BYTE PTR __Cat$221770[ebp]
	mov	BYTE PTR $T221768[ebp], cl

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	mov	DWORD PTR $T221781[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T221780[ebp], eax
	mov	ecx, DWORD PTR $T221780[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@Tidy:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 1135 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@IAEXXZ ENDP ; std::vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::_Tidy
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?GrowSize@?$FStaticVector@H$04$0A@$0BCJ@$0A@@@IAEXI@Z
_TEXT	SEGMENT
tv178 = -44						; size = 4
_this$ = -40						; size = 4
$T221818 = -36						; size = 4
$T221817 = -32						; size = 4
_i$221810 = -28						; size = 4
$T221793 = -24						; size = 4
_pRet$221790 = -20					; size = 4
$T221784 = -16						; size = 4
_i$219058 = -12						; size = 4
_uiNewSize$219050 = -8					; size = 4
_pTemp$ = -4						; size = 4
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@H$04$0A@$0BCJ@$0A@@@IAEXI@Z PROC ; FStaticVector<int,5,0,297,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN8@GrowSize
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1
$LN8@GrowSize:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jb	SHORT $LN7@GrowSize

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shl	edx, 1
	mov	DWORD PTR _uiNewSize$219050[ebp], edx

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _uiNewSize$219050[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN6@GrowSize

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	mov	DWORD PTR [edx+8], eax

; 754  : 				break;

	jmp	SHORT $LN7@GrowSize
$LN6@GrowSize:

; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _uiNewSize$219050[ebp]
	mov	DWORD PTR [ecx+8], edx

; 759  : 		}

	jmp	SHORT $LN8@GrowSize
$LN7@GrowSize:

; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T221793[ebp], ecx
	cmp	DWORD PTR $T221793[ebp], 5
	jbe	SHORT $LN15@GrowSize
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	edx, DWORD PTR $T221793[ebp]
	shl	edx, 2
	push	edx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$221790[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T221793[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN16@GrowSize
$LN15@GrowSize:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _pRet$221790[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 5
$LN16@GrowSize:
	mov	ecx, DWORD PTR _pRet$221790[ebp]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 762  : 		if( bPODType ){

	xor	edx, edx
	je	SHORT $LN5@GrowSize

; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pTemp$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 764  : 		}else{

	jmp	SHORT $LN4@GrowSize
$LN5@GrowSize:

; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	mov	DWORD PTR _i$219058[ebp], 0
	jmp	SHORT $LN3@GrowSize
$LN2@GrowSize:
	mov	edx, DWORD PTR _i$219058[ebp]
	add	edx, 1
	mov	DWORD PTR _i$219058[ebp], edx
$LN3@GrowSize:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$219058[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN4@GrowSize

; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);

	mov	edx, DWORD PTR _i$219058[ebp]
	mov	eax, DWORD PTR _pTemp$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T221784[ebp], ecx
	cmp	DWORD PTR $T221784[ebp], 0
	je	SHORT $LN12@GrowSize
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T221784[ebp]
	mov	edx, DWORD PTR _i$219058[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR $T221784[ebp]
	mov	DWORD PTR tv178[ebp], ecx
	jmp	SHORT $LN13@GrowSize
$LN12@GrowSize:
	mov	DWORD PTR tv178[ebp], 0
$LN13@GrowSize:
	jmp	SHORT $LN2@GrowSize
$LN4@GrowSize:

; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T221818[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T221817[ebp], edx
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN21@GrowSize
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN21@GrowSize
	mov	DWORD PTR _i$221810[ebp], 0
	jmp	SHORT $LN26@GrowSize
$LN25@GrowSize:
	mov	edx, DWORD PTR _i$221810[ebp]
	add	edx, 1
	mov	DWORD PTR _i$221810[ebp], edx
$LN26@GrowSize:
	mov	eax, DWORD PTR _i$221810[ebp]
	cmp	eax, DWORD PTR $T221818[ebp]
	jae	SHORT $LN21@GrowSize
	jmp	SHORT $LN25@GrowSize
$LN21@GrowSize:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	cmp	DWORD PTR $T221817[ebp], ecx
	je	SHORT $LN22@GrowSize
	mov	edx, DWORD PTR $T221817[ebp]
	push	edx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN22@GrowSize:

; 769  : 		m_pData = pTemp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR [eax], ecx

; 770  : 
; 771  : 		m_bIsResized = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+32], 1

; 772  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?GrowSize@?$FStaticVector@H$04$0A@$0BCJ@$0A@@@IAEXI@Z ENDP ; FStaticVector<int,5,0,297,0>::GrowSize
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$BaseVector@H$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$BaseVector@H$0A@@@QAE@XZ PROC			; BaseVector<int,0>::~BaseVector<int,0>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$BaseVector@H$0A@@@QAE@XZ ENDP			; BaseVector<int,0>::~BaseVector<int,0>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Copy@?$BaseVector@H$0A@@@IAEXABV1@@Z
_TEXT	SEGMENT
tv83 = -16						; size = 4
_this$ = -12						; size = 4
$T221824 = -8						; size = 4
_i$219098 = -4						; size = 4
_RHS$ = 8						; size = 4
?Copy@?$BaseVector@H$0A@@@IAEXABV1@@Z PROC		; BaseVector<int,0>::Copy, COMDAT
; _this$ = ecx

; 229  : 	void Copy(const THIS_TYPE& RHS){

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 230  : 		m_uiCurrSize = RHS.m_uiCurrSize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _RHS$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 231  : 		if( bPODType ){

	xor	eax, eax
	je	SHORT $LN5@Copy

; 232  : 			memcpy( (void*)m_pData, (void*)RHS.m_pData, sizeof(T)*RHS.m_uiCurrSize);

	mov	ecx, DWORD PTR _RHS$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	shl	edx, 2
	push	edx
	mov	eax, DWORD PTR _RHS$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 233  : 		}else{

	jmp	SHORT $LN6@Copy
$LN5@Copy:

; 234  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i){

	mov	DWORD PTR _i$219098[ebp], 0
	jmp	SHORT $LN3@Copy
$LN2@Copy:
	mov	ecx, DWORD PTR _i$219098[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$219098[ebp], ecx
$LN3@Copy:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _i$219098[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jae	SHORT $LN6@Copy

; 235  : 				new( (void*)&m_pData[i] )T( RHS.m_pData[i] );

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _i$219098[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR $T221824[ebp], ecx
	cmp	DWORD PTR $T221824[ebp], 0
	je	SHORT $LN8@Copy
	mov	edx, DWORD PTR _RHS$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T221824[ebp]
	mov	edx, DWORD PTR _i$219098[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR $T221824[ebp]
	mov	DWORD PTR tv83[ebp], ecx
	jmp	SHORT $LN9@Copy
$LN8@Copy:
	mov	DWORD PTR tv83[ebp], 0
$LN9@Copy:

; 236  : 			}

	jmp	SHORT $LN2@Copy
$LN6@Copy:

; 237  : 		}
; 238  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?Copy@?$BaseVector@H$0A@@@IAEXABV1@@Z ENDP		; BaseVector<int,0>::Copy
_TEXT	ENDS
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
EXTRN	__imp_??0exception@std@@QAE@XZ:PROC
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:PROC		; std::length_error::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_Elength_error@std@@UAEPAXI@Z ; std::length_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_Elogic_error@std@@UAEPAXI@Z ; std::logic_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T221833 = -80						; size = 28
$T221832 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@KAXXZ PROC ; std::vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Xlen@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T221833[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T221832[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR $T221832[ebp], OFFSET ??_7logic_error@std@@6B@
	lea	eax, DWORD PTR $T221833[ebp]
	push	eax
	lea	ecx, DWORD PTR $T221832[ebp+12]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T221832[ebp], OFFSET ??_7length_error@std@@6B@
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T221832[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T221833[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@Xlen:

; 1261 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T221833[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T221832[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@KAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@PAVCvBeliefEntry@@V?$allocator@PAVCvBeliefEntry@@@std@@@std@@KAXXZ ENDP ; std::vector<CvBeliefEntry *,std::allocator<CvBeliefEntry *> >::_Xlen
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?what@logic_error@std@@UBEPBDXZ PROC			; std::logic_error::what, COMDAT
; _this$ = ecx

; 34   : 		{	// return pointer to message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 35   : 		return (_Str.c_str());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 36   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN1@scalar
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1length_error@std@@UAE@XZ PROC			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 109  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@

; 110  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC			; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	edx, DWORD PTR ___flags$[ebp]
	and	edx, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp__memmove_s:PROC
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$unchecked_copy@PAPAVCvBeliefEntry@@PAPAV1@@stdext@@YAPAPAVCvBeliefEntry@@PAPAV1@00@Z
_TEXT	SEGMENT
$T221896 = -26						; size = 1
$T221895 = -25						; size = 1
$T221894 = -24						; size = 4
$T221893 = -20						; size = 4
__Off$221889 = -16					; size = 4
__Result$221890 = -12					; size = 4
__Cat$221881 = -4					; size = 1
$T221878 = -3						; size = 1
$T221877 = -2						; size = 1
$T221876 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAPAVCvBeliefEntry@@PAPAV1@@stdext@@YAPAPAVCvBeliefEntry@@PAPAV1@00@Z PROC ; stdext::unchecked_copy<CvBeliefEntry * *,CvBeliefEntry * *>, COMDAT

; 3604 : 	{	// copy [_First, _Last) to [_Dest, ...)

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	xor	eax, eax
	mov	BYTE PTR $T221876[ebp], al
	mov	cl, BYTE PTR __Cat$221881[ebp]
	mov	BYTE PTR $T221877[ebp], cl
	mov	dl, BYTE PTR $T221876[ebp]
	mov	BYTE PTR $T221896[ebp], dl
	mov	al, BYTE PTR $T221878[ebp]
	mov	BYTE PTR $T221895[ebp], al
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T221894[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T221893[ebp], edx
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR $T221893[ebp]
	sar	eax, 2
	mov	DWORD PTR __Off$221889[ebp], eax
	mov	ecx, DWORD PTR __Off$221889[ebp]
	mov	edx, DWORD PTR $T221894[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR __Result$221890[ebp], eax
	cmp	DWORD PTR __Off$221889[ebp], 0
	jle	SHORT $LN8@unchecked_
	mov	ecx, DWORD PTR __Off$221889[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR $T221893[ebp]
	push	edx
	mov	eax, DWORD PTR __Off$221889[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR $T221894[ebp]
	push	ecx
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN8@unchecked_:
	mov	eax, DWORD PTR __Result$221890[ebp]

; 3607 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$unchecked_copy@PAPAVCvBeliefEntry@@PAPAV1@@stdext@@YAPAPAVCvBeliefEntry@@PAPAV1@00@Z ENDP ; stdext::unchecked_copy<CvBeliefEntry * *,CvBeliefEntry * *>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R0?AVbad_alloc@std@@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
xdata$x	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_Ebad_alloc@std@@UAEPAXI@Z ; std::bad_alloc::`vftable'
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
CONST	ENDS
;	COMDAT ??$_Allocate@PAVCvBeliefEntry@@@std@@YAPAPAVCvBeliefEntry@@IPAPAV1@@Z
_TEXT	SEGMENT
$T221903 = -16						; size = 4
$T221899 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVCvBeliefEntry@@@std@@YAPAPAVCvBeliefEntry@@IPAPAV1@@Z PROC ; std::_Allocate<CvBeliefEntry *>, COMDAT

; 36   : 	{	// check for integer overflow

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 37   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate

; 38   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate
$LN3@Allocate:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 4
	jae	SHORT $LN2@Allocate

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	mov	DWORD PTR $T221903[ebp], 0
	lea	eax, DWORD PTR $T221903[ebp]
	push	eax
	lea	ecx, DWORD PTR $T221899[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR $T221899[ebp], OFFSET ??_7bad_alloc@std@@6B@
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T221899[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@Allocate:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	mov	edx, DWORD PTR __Count$[ebp]
	shl	edx, 2
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate:

; 44   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@PAVCvBeliefEntry@@@std@@YAPAPAVCvBeliefEntry@@IPAPAV1@@Z ENDP ; std::_Allocate<CvBeliefEntry *>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
_TEXT	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 380  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 381  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN1@scalar@3
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
_TEXT	ENDS
PUBLIC	?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z ; CvString::formatv
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Format@CvString@@QAAXPBDZZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Format@CvString@@QAAXPBDZZ$0
__ehfuncinfo$?Format@CvString@@QAAXPBDZZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Format@CvString@@QAAXPBDZZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?Format@CvString@@QAAXPBDZZ
_TEXT	SEGMENT
_result$ = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
_args$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_lpszFormat$ = 12					; size = 4
?Format@CvString@@QAAXPBDZZ PROC			; CvString::Format, COMDAT

; 269  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Format@CvString@@QAAXPBDZZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 2124				; 0000084cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 270  : 	std::string result;

	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 271  : 	va_list args;
; 272  : 	va_start(args,lpszFormat);

	lea	eax, DWORD PTR _lpszFormat$[ebp+4]
	mov	DWORD PTR _args$[ebp], eax

; 273  : 	formatv(result,lpszFormat,args);

	mov	ecx, DWORD PTR _args$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpszFormat$[ebp]
	push	edx
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	call	?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z ; CvString::formatv
	add	esp, 12					; 0000000cH

; 274  : 	va_end(args);

	mov	DWORD PTR _args$[ebp], 0

; 275  : 	*this = result;

	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z

; 276  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Format@CvString@@QAAXPBDZZ$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?Format@CvString@@QAAXPBDZZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-2128]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Format@CvString@@QAAXPBDZZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Format@CvString@@QAAXPBDZZ ENDP			; CvString::Format
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:PROC
EXTRN	__imp___vsnprintf:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z
_TEXT	SEGMENT
tv74 = -2096						; size = 4
$T221951 = -2092					; size = 4
$T221950 = -2088					; size = 4
$T221949 = -2084					; size = 4
_maxlen$95294 = -2080					; size = 4
_kMaxAttempts$ = -2076					; size = 4
_buf$ = -2072						; size = 2048
__$ArrayPad$ = -20					; size = 4
_len$ = -16						; size = 4
_attempts$ = -12					; size = 4
_success$ = -5						; size = 1
_pbuf$ = -4						; size = 4
_out$ = 8						; size = 4
_fmt$ = 12						; size = 4
_args$ = 16						; size = 4
?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z PROC ; CvString::formatv, COMDAT

; 191  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 2096				; 00000830H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 192  : 	char buf[2048];
; 193  : 	char * pbuf = buf;

	lea	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR _pbuf$[ebp], eax

; 194  : 	int len = 0;

	mov	DWORD PTR _len$[ebp], 0

; 195  : 	int attempts = 0;

	mov	DWORD PTR _attempts$[ebp], 0

; 196  : 	bool success = false;

	mov	BYTE PTR _success$[ebp], 0

; 197  : 	const int kMaxAttempts = 40;

	mov	DWORD PTR _kMaxAttempts$[ebp], 40	; 00000028H
$LN10@formatv:

; 198  : 
; 199  : 	do
; 200  : 	{
; 201  : 		int maxlen = 2047+2048*attempts;

	mov	ecx, DWORD PTR _attempts$[ebp]
	shl	ecx, 11					; 0000000bH
	add	ecx, 2047				; 000007ffH
	mov	DWORD PTR _maxlen$95294[ebp], ecx

; 202  : 		len = _vsnprintf(pbuf,maxlen,fmt,args);

	mov	edx, DWORD PTR _args$[ebp]
	push	edx
	mov	eax, DWORD PTR _fmt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _maxlen$95294[ebp]
	push	ecx
	mov	edx, DWORD PTR _pbuf$[ebp]
	push	edx
	call	DWORD PTR __imp___vsnprintf
	add	esp, 16					; 00000010H
	mov	DWORD PTR _len$[ebp], eax

; 203  : 		attempts++;

	mov	eax, DWORD PTR _attempts$[ebp]
	add	eax, 1
	mov	DWORD PTR _attempts$[ebp], eax

; 204  : 		success = (len>=0 && len<=maxlen);

	cmp	DWORD PTR _len$[ebp], 0
	jl	SHORT $LN13@formatv
	mov	ecx, DWORD PTR _len$[ebp]
	cmp	ecx, DWORD PTR _maxlen$95294[ebp]
	jg	SHORT $LN13@formatv
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN14@formatv
$LN13@formatv:
	mov	DWORD PTR tv74[ebp], 0
$LN14@formatv:
	mov	dl, BYTE PTR tv74[ebp]
	mov	BYTE PTR _success$[ebp], dl

; 205  : 		if (!success)

	movzx	eax, BYTE PTR _success$[ebp]
	test	eax, eax
	jne	SHORT $LN9@formatv

; 206  : 		{
; 207  : 			if (pbuf!=buf)

	mov	ecx, DWORD PTR _pbuf$[ebp]
	lea	edx, DWORD PTR _buf$[ebp]
	cmp	ecx, edx
	je	SHORT $LN6@formatv

; 208  : 				delete [] pbuf;

	mov	eax, DWORD PTR _pbuf$[ebp]
	mov	DWORD PTR $T221949[ebp], eax
	mov	ecx, DWORD PTR $T221949[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN6@formatv:

; 209  : 			pbuf = new char[2048+2048*attempts];

	mov	edx, DWORD PTR _attempts$[ebp]
	shl	edx, 11					; 0000000bH
	add	edx, 2048				; 00000800H
	push	edx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T221950[ebp], eax
	mov	eax, DWORD PTR $T221950[ebp]
	mov	DWORD PTR _pbuf$[ebp], eax
$LN9@formatv:

; 210  : 		}
; 211  : 	}
; 212  : 	while (!success && attempts<kMaxAttempts);

	movzx	ecx, BYTE PTR _success$[ebp]
	test	ecx, ecx
	jne	SHORT $LN4@formatv
	cmp	DWORD PTR _attempts$[ebp], 40		; 00000028H
	jl	$LN10@formatv
$LN4@formatv:

; 213  : 
; 214  : 	if ( attempts==kMaxAttempts )
; 215  : 	{
; 216  : 		// dxPrintNL( "CvString::formatv - Max reallocs occurred while formatting string. Result is likely truncated!", 0 );
; 217  : 	}
; 218  : 
; 219  : 	if (success)

	movzx	edx, BYTE PTR _success$[ebp]
	test	edx, edx
	je	SHORT $LN3@formatv

; 220  : 		out = pbuf;

	mov	eax, DWORD PTR _pbuf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 221  : 	else

	jmp	SHORT $LN2@formatv
$LN3@formatv:

; 222  : 		out = "";

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR _out$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN2@formatv:

; 223  : 
; 224  : 	if (pbuf!=buf)

	mov	ecx, DWORD PTR _pbuf$[ebp]
	lea	edx, DWORD PTR _buf$[ebp]
	cmp	ecx, edx
	je	SHORT $LN1@formatv

; 225  : 		delete [] pbuf;

	mov	eax, DWORD PTR _pbuf$[ebp]
	mov	DWORD PTR $T221951[ebp], eax
	mov	ecx, DWORD PTR $T221951[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN1@formatv:

; 226  : 
; 227  : 	return success;

	mov	al, BYTE PTR _success$[ebp]

; 228  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z ENDP ; CvString::formatv
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0length_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$1
__ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0length_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC			; std::length_error::length_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0length_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0length_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
; Function compile flags: /Odtp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
END
