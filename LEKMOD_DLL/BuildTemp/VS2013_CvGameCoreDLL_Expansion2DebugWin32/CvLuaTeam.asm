; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\Lua\CvLuaTeam.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?pRegister@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::pRegister
PUBLIC	?Register@CvLuaTeam@@SAXPAUlua_State@@@Z	; CvLuaTeam::Register
EXTRN	?CCallWithErrorHandling@Details@FLua@@YA_NPAUlua_State@@P6AH0@ZPAX@Z:PROC ; FLua::Details::CCallWithErrorHandling
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluateam.cpp
;	COMDAT ?Register@CvLuaTeam@@SAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?Register@CvLuaTeam@@SAXPAUlua_State@@@Z PROC		; CvLuaTeam::Register, COMDAT

; 27   : {

	push	ebp
	mov	ebp, esp

; 28   : 	FLua::Details::CCallWithErrorHandling(L, pRegister);

	push	0
	push	OFFSET ?pRegister@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::pRegister
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?CCallWithErrorHandling@Details@FLua@@YA_NPAUlua_State@@P6AH0@ZPAX@Z ; FLua::Details::CCallWithErrorHandling
	add	esp, 12					; 0000000cH

; 29   : }

	pop	ebp
	ret	0
?Register@CvLuaTeam@@SAXPAUlua_State@@@Z ENDP		; CvLuaTeam::Register
_TEXT	ENDS
PUBLIC	?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@KAXPAUlua_State@@@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::DefaultHandleMissingInstance
PUBLIC	?HandleMissingInstance@CvLuaTeam@@SAXPAUlua_State@@@Z ; CvLuaTeam::HandleMissingInstance
; Function compile flags: /Odtp
;	COMDAT ?HandleMissingInstance@CvLuaTeam@@SAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?HandleMissingInstance@CvLuaTeam@@SAXPAUlua_State@@@Z PROC ; CvLuaTeam::HandleMissingInstance, COMDAT

; 32   : {

	push	ebp
	mov	ebp, esp

; 33   : 	DefaultHandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@KAXPAUlua_State@@@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::DefaultHandleMissingInstance
	add	esp, 4

; 34   : }

	pop	ebp
	ret	0
?HandleMissingInstance@CvLuaTeam@@SAXPAUlua_State@@@Z ENDP ; CvLuaTeam::HandleMissingInstance
_TEXT	ENDS
PUBLIC	??_C@_0BF@NOAGOBIP@UpdateEmbarkGraphics?$AA@	; `string'
PUBLIC	?lUpdateEmbarkGraphics@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lUpdateEmbarkGraphics
PUBLIC	??_C@_0O@EOCPPCIE@SetCurrentEra?$AA@		; `string'
PUBLIC	?lSetCurrentEra@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lSetCurrentEra
PUBLIC	??_C@_0O@DBDBEBPD@GetCurrentEra?$AA@		; `string'
PUBLIC	?lGetCurrentEra@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetCurrentEra
PUBLIC	??_C@_0BE@EPHHILCI@ChangeVictoryPoints?$AA@	; `string'
PUBLIC	?lChangeVictoryPoints@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeVictoryPoints
PUBLIC	??_C@_0BB@EMIECCCP@GetVictoryPoints?$AA@	; `string'
PUBLIC	?lGetVictoryPoints@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetVictoryPoints
PUBLIC	??_C@_09KKPMLEOP@CanLaunch?$AA@			; `string'
PUBLIC	?lCanLaunch@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lCanLaunch
PUBLIC	??_C@_0BA@HPOFMAMJ@GetVictoryDelay?$AA@		; `string'
PUBLIC	?lGetVictoryDelay@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetVictoryDelay
PUBLIC	??_C@_0BE@ICLOIKDM@GetVictoryCountdown?$AA@	; `string'
PUBLIC	?lGetVictoryCountdown@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetVictoryCountdown
PUBLIC	??_C@_0BG@BJMOOMMF@IsHomeOfUnitedNations?$AA@	; `string'
PUBLIC	?lIsHomeOfUnitedNations@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsHomeOfUnitedNations
PUBLIC	??_C@_0BN@CKJIDBEK@ChangeImprovementYieldChange?$AA@ ; `string'
PUBLIC	?lChangeImprovementYieldChange@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeImprovementYieldChange
PUBLIC	??_C@_0BK@CIPJPCMO@GetImprovementYieldChange?$AA@ ; `string'
PUBLIC	?lGetImprovementYieldChange@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetImprovementYieldChange
PUBLIC	??_C@_0N@DDNMCBKC@GetTeamTechs?$AA@		; `string'
PUBLIC	?lGetTeamTechs@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetTeamTechs
PUBLIC	??_C@_0L@JDHELDFB@SetHasTech?$AA@		; `string'
PUBLIC	?lSetHasTech@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lSetHasTech
PUBLIC	??_C@_09MLCFFPHJ@IsHasTech?$AA@			; `string'
PUBLIC	?lIsHasTech@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsHasTech
PUBLIC	??_C@_0BE@NNGJNGAK@IsHasTradeAgreement?$AA@	; `string'
PUBLIC	?lIsHasTradeAgreement@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsHasTradeAgreement
PUBLIC	??_C@_0BH@CMBGPOHA@IsHasResearchAgreement?$AA@	; `string'
PUBLIC	?lIsHasResearchAgreement@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsHasResearchAgreement
PUBLIC	??_C@_0BD@BHDHONFE@IsObsoleteBuilding?$AA@	; `string'
PUBLIC	?lIsObsoleteBuilding@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsObsoleteBuilding
PUBLIC	??_C@_0BJ@GGDHCIO@GetObsoleteBuildingCount?$AA@	; `string'
PUBLIC	?lGetObsoleteBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetObsoleteBuildingCount
PUBLIC	??_C@_0BI@BIOFBBJB@IsBuildingClassMaxedOut?$AA@	; `string'
PUBLIC	?lIsBuildingClassMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsBuildingClassMaxedOut
PUBLIC	??_C@_0BG@LKAPFNIF@GetBuildingClassCount?$AA@	; `string'
PUBLIC	?lGetBuildingClassCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetBuildingClassCount
PUBLIC	??_C@_0BE@KOKPIAGA@IsUnitClassMaxedOut?$AA@	; `string'
PUBLIC	?lIsUnitClassMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsUnitClassMaxedOut
PUBLIC	??_C@_0BC@OMEKCEJN@GetUnitClassCount?$AA@	; `string'
PUBLIC	?lGetUnitClassCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetUnitClassCount
PUBLIC	??_C@_0BB@MNJFAHNC@GetProjectMaking?$AA@	; `string'
PUBLIC	?lGetProjectMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectMaking
PUBLIC	??_C@_0BD@FEACKNGP@ChangeProjectCount?$AA@	; `string'
PUBLIC	?lChangeProjectCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeProjectCount
PUBLIC	??_C@_0BI@JBHBEBAH@IsProjectAndArtMaxedOut?$AA@	; `string'
PUBLIC	?lIsProjectAndArtMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsProjectAndArtMaxedOut
PUBLIC	??_C@_0BC@OBMJOMIK@IsProjectMaxedOut?$AA@	; `string'
PUBLIC	?lIsProjectMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsProjectMaxedOut
PUBLIC	??_C@_0BC@CLJOLHLF@SetProjectArtType?$AA@	; `string'
PUBLIC	?lSetProjectArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lSetProjectArtType
PUBLIC	??_C@_0BC@OJFDMKL@GetProjectArtType?$AA@	; `string'
PUBLIC	?lGetProjectArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectArtType
PUBLIC	??_C@_0BJ@BBDBBALM@SetProjectDefaultArtType?$AA@ ; `string'
PUBLIC	?lSetProjectDefaultArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lSetProjectDefaultArtType
PUBLIC	??_C@_0BJ@LCJLHNCJ@GetProjectDefaultArtType?$AA@ ; `string'
PUBLIC	?lGetProjectDefaultArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectDefaultArtType
PUBLIC	??_C@_0BA@BBEJKGON@GetProjectCount?$AA@		; `string'
PUBLIC	?lGetProjectCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectCount
PUBLIC	??_C@_0BC@BCAHCCOK@ChangeRouteChange?$AA@	; `string'
PUBLIC	?lChangeRouteChange@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeRouteChange
PUBLIC	??_C@_0P@IGFANFMH@GetRouteChange?$AA@		; `string'
PUBLIC	?lGetRouteChange@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetRouteChange
PUBLIC	??_C@_0BA@POCLIDPD@IsDefensivePact?$AA@		; `string'
PUBLIC	?lIsDefensivePact@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsDefensivePact
PUBLIC	??_C@_0N@FCDEFIBF@IsForcePeace?$AA@		; `string'
PUBLIC	?lIsForcePeace@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsForcePeace
PUBLIC	??_C@_0BK@EFEMHBAH@IsAllowsOpenBordersToTeam?$AA@ ; `string'
PUBLIC	?lIsAllowsOpenBordersToTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsAllowsOpenBordersToTeam
PUBLIC	??_C@_0BB@JJBFLANF@HasEmbassyAtTeam?$AA@	; `string'
PUBLIC	?lHasEmbassyAtTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lHasEmbassyAtTeam
PUBLIC	??_C@_0BA@NJNCGNLH@GetKilledByTeam?$AA@		; `string'
PUBLIC	?lGetKilledByTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetKilledByTeam
PUBLIC	??_C@_0BD@LGHLLPMK@GetLiberatedByTeam?$AA@	; `string'
PUBLIC	?lGetLiberatedByTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetLiberatedByTeam
PUBLIC	??_C@_0BF@EPDFKBOJ@SetPermanentWarPeace?$AA@	; `string'
PUBLIC	?lSetPermanentWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lSetPermanentWarPeace
PUBLIC	??_C@_0BE@EGALMELK@IsPermanentWarPeace?$AA@	; `string'
PUBLIC	?lIsPermanentWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsPermanentWarPeace
PUBLIC	??_C@_07LLBPCBFI@IsAtWar?$AA@			; `string'
PUBLIC	?lIsAtWar@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsAtWar
PUBLIC	??_C@_08CPBHIAFJ@IsHasMet?$AA@			; `string'
PUBLIC	?lIsHasMet@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsHasMet
PUBLIC	??_C@_0BD@JOGKCNGC@CanDefensiveEmbark?$AA@	; `string'
PUBLIC	?lCanDefensiveEmbark@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCanDefensiveEmbark
PUBLIC	??_C@_09PEMMPAAH@CanEmbark?$AA@			; `string'
PUBLIC	?lCanEmbark@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lCanEmbark
PUBLIC	??_C@_0BB@INOILHHC@ChangeExtraMoves?$AA@	; `string'
PUBLIC	?lChangeExtraMoves@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeExtraMoves
PUBLIC	??_C@_0O@LOCEBOPL@GetExtraMoves?$AA@		; `string'
PUBLIC	?lGetExtraMoves@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetExtraMoves
PUBLIC	??_C@_0BF@NIBKKJBC@ChangeTechShareCount?$AA@	; `string'
PUBLIC	?lChangeTechShareCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeTechShareCount
PUBLIC	??_C@_0M@OBCLDCGP@IsTechShare?$AA@		; `string'
PUBLIC	?lIsTechShare@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsTechShare
PUBLIC	??_C@_0BC@EGHNMPBI@GetTechShareCount?$AA@	; `string'
PUBLIC	?lGetTechShareCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTechShareCount
PUBLIC	??_C@_05CLBJHDA@GetID?$AA@			; `string'
PUBLIC	?lGetID@CvLuaTeam@@KAHPAUlua_State@@@Z		; CvLuaTeam::lGetID
PUBLIC	??_C@_0BA@IMBEDMDH@SetMapCentering?$AA@		; `string'
PUBLIC	?lSetMapCentering@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lSetMapCentering
PUBLIC	??_C@_0P@POBADFKJ@IsMapCentering?$AA@		; `string'
PUBLIC	?lIsMapCentering@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsMapCentering
PUBLIC	??_C@_0BK@GLKIAOMI@ChangeBorderObstacleCount?$AA@ ; `string'
PUBLIC	?lChangeBorderObstacleCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeBorderObstacleCount
PUBLIC	??_C@_0BB@GMOJKNBD@IsBorderObstacle?$AA@	; `string'
PUBLIC	?lIsBorderObstacle@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsBorderObstacle
PUBLIC	??_C@_0BH@JNAPMEIH@GetBorderObstacleCount?$AA@	; `string'
PUBLIC	?lGetBorderObstacleCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetBorderObstacleCount
PUBLIC	??_C@_0BF@MBAHMEHB@ChangeWaterWorkCount?$AA@	; `string'
PUBLIC	?lChangeWaterWorkCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeWaterWorkCount
PUBLIC	??_C@_0M@NBIECCOL@IsWaterWork?$AA@		; `string'
PUBLIC	?lIsWaterWork@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsWaterWork
PUBLIC	??_C@_0BC@FPGAKCHL@GetWaterWorkCount?$AA@	; `string'
PUBLIC	?lGetWaterWorkCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetWaterWorkCount
PUBLIC	??_C@_0BK@OOFPJIPJ@ChangeBridgeBuildingCount?$AA@ ; `string'
PUBLIC	?lChangeBridgeBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeBridgeBuildingCount
PUBLIC	??_C@_0BB@EOIEJOOG@IsBridgeBuilding?$AA@	; `string'
PUBLIC	?lIsBridgeBuilding@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsBridgeBuilding
PUBLIC	??_C@_0BH@BIPIFCLG@GetBridgeBuildingCount?$AA@	; `string'
PUBLIC	?lGetBridgeBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetBridgeBuildingCount
PUBLIC	??_C@_0CE@IDADOHMI@ChangePermanentAllianceTradingCo@ ; `string'
PUBLIC	?lChangePermanentAllianceTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangePermanentAllianceTradingCount
PUBLIC	??_C@_0BL@BIAKIMNH@IsPermanentAllianceTrading?$AA@ ; `string'
PUBLIC	?lIsPermanentAllianceTrading@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsPermanentAllianceTrading
PUBLIC	??_C@_0CB@GGHNNDEF@GetPermanentAllianceTradingCount@ ; `string'
PUBLIC	?lGetPermanentAllianceTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetPermanentAllianceTradingCount
PUBLIC	??_C@_0BP@ENAENOBB@IsTradeAgreementTradingAllowed?$AA@ ; `string'
PUBLIC	?lIsTradeAgreementTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsTradeAgreementTradingAllowed
PUBLIC	??_C@_0CK@KDMAAEHA@IsResearchAgreementTradingAllowe@ ; `string'
PUBLIC	?lIsResearchAgreementTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsResearchAgreementTradingAllowedWithTeam
PUBLIC	??_C@_0CC@GFNFBMJC@IsResearchAgreementTradingAllowe@ ; `string'
PUBLIC	?lIsResearchAgreementTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsResearchAgreementTradingAllowed
PUBLIC	??_C@_0CH@EICNJJPJ@ChangeDefensivePactTradingAllowe@ ; `string'
PUBLIC	?lChangeDefensivePactTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeDefensivePactTradingAllowedCount
PUBLIC	??_C@_0CG@BCPFPOEC@IsDefensivePactTradingAllowedWit@ ; `string'
PUBLIC	?lIsDefensivePactTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsDefensivePactTradingAllowedWithTeam
PUBLIC	??_C@_0BO@OFLLCFCN@IsDefensivePactTradingAllowed?$AA@ ; `string'
PUBLIC	?lIsDefensivePactTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsDefensivePactTradingAllowed
PUBLIC	??_C@_0CE@KNFHLOAD@GetDefensivePactTradingAllowedCo@ ; `string'
PUBLIC	?lGetDefensivePactTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetDefensivePactTradingAllowedCount
PUBLIC	??_C@_0CF@FCJFHANM@ChangeOpenBordersTradingAllowedC@ ; `string'
PUBLIC	?lChangeOpenBordersTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeOpenBordersTradingAllowedCount
PUBLIC	??_C@_0CE@BOMJELKF@IsOpenBordersTradingAllowedWithT@ ; `string'
PUBLIC	?lIsOpenBordersTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsOpenBordersTradingAllowedWithTeam
PUBLIC	??_C@_0BM@HLLMNION@IsOpenBordersTradingAllowed?$AA@ ; `string'
PUBLIC	?lIsOpenBordersTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsOpenBordersTradingAllowed
PUBLIC	??_C@_0CC@MBHJPBHF@GetOpenBordersTradingAllowedCoun@ ; `string'
PUBLIC	?lGetOpenBordersTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetOpenBordersTradingAllowedCount
PUBLIC	??_C@_0CG@BEHEJIFP@ChangeAllowEmbassyTradingAllowed@ ; `string'
PUBLIC	?lChangeAllowEmbassyTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeAllowEmbassyTradingAllowedCount
PUBLIC	??_C@_0BN@DIGFBHJI@IsAllowEmbassyTradingAllowed?$AA@ ; `string'
PUBLIC	?lIsAllowEmbassyTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsAllowEmbassyTradingAllowed
PUBLIC	??_C@_0CD@LLONGPJC@GetAllowEmbassyTradingAllowedCou@ ; `string'
PUBLIC	?lGetAllowEmbassyTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetAllowEmbassyTradingAllowedCount
PUBLIC	??_C@_0BH@EBFKFBMD@ChangeGoldTradingCount?$AA@	; `string'
PUBLIC	?lChangeGoldTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeGoldTradingCount
PUBLIC	??_C@_0O@KAEMAEJL@IsGoldTrading?$AA@		; `string'
PUBLIC	?lIsGoldTrading@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsGoldTrading
PUBLIC	??_C@_0BE@BPGEODED@GetGoldTradingCount?$AA@	; `string'
PUBLIC	?lGetGoldTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetGoldTradingCount
PUBLIC	??_C@_0BH@IPFPHLKG@ChangeTechTradingCount?$AA@	; `string'
PUBLIC	?lChangeTechTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeTechTradingCount
PUBLIC	??_C@_0O@COFKMLIK@IsTechTrading?$AA@		; `string'
PUBLIC	?lIsTechTrading@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsTechTrading
PUBLIC	??_C@_0BE@NBGBMJCG@GetTechTradingCount?$AA@	; `string'
PUBLIC	?lGetTechTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTechTradingCount
PUBLIC	??_C@_0BG@BEGIMMCG@ChangeMapTradingCount?$AA@	; `string'
PUBLIC	?lChangeMapTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeMapTradingCount
PUBLIC	??_C@_0N@GBEHBLMG@IsMapTrading?$AA@		; `string'
PUBLIC	?lIsMapTrading@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsMapTrading
PUBLIC	??_C@_0BD@PECDECFO@GetMapTradingCount?$AA@	; `string'
PUBLIC	?lGetMapTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetMapTradingCount
PUBLIC	??_C@_0BN@CGHPJAJB@ChangeExtraWaterSeeFromCount?$AA@ ; `string'
PUBLIC	?lChangeExtraWaterSeeFromCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeExtraWaterSeeFromCount
PUBLIC	??_C@_0BE@DBFHCFEG@IsExtraWaterSeeFrom?$AA@	; `string'
PUBLIC	?lIsExtraWaterSeeFrom@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsExtraWaterSeeFrom
PUBLIC	??_C@_0BK@CEBOFDBF@GetExtraWaterSeeFromCount?$AA@ ; `string'
PUBLIC	?lGetExtraWaterSeeFromCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetExtraWaterSeeFromCount
PUBLIC	??_C@_0CE@ILOAPAKI@ChangeForceTeamVoteEligibilityCo@ ; `string'
PUBLIC	?lChangeForceTeamVoteEligibilityCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeForceTeamVoteEligibilityCount
PUBLIC	??_C@_0BI@HELLGHLI@IsForceTeamVoteEligible?$AA@	; `string'
PUBLIC	?lIsForceTeamVoteEligible@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsForceTeamVoteEligible
PUBLIC	??_C@_0CB@GOJOMECF@GetForceTeamVoteEligibilityCount@ ; `string'
PUBLIC	?lGetForceTeamVoteEligibilityCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetForceTeamVoteEligibilityCount
PUBLIC	??_C@_0BH@OCNNKJKB@ChangeNukeInterception?$AA@	; `string'
PUBLIC	?lChangeNukeInterception@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeNukeInterception
PUBLIC	??_C@_0BE@LMODBLCB@GetNukeInterception?$AA@	; `string'
PUBLIC	?lGetNukeInterception@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetNukeInterception
PUBLIC	??_C@_0N@NKPGAGBN@GetTotalLand?$AA@		; `string'
PUBLIC	?lGetTotalLand@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetTotalLand
PUBLIC	??_C@_0BD@BKBNEN@GetTotalPopulation?$AA@	; `string'
PUBLIC	?lGetTotalPopulation@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTotalPopulation
PUBLIC	??_C@_0N@OFLMPMAK@GetNumCities?$AA@		; `string'
PUBLIC	?lGetNumCities@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetNumCities
PUBLIC	??_C@_0M@MAOIOJGJ@IsEverAlive?$AA@		; `string'
PUBLIC	?lIsEverAlive@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsEverAlive
PUBLIC	??_C@_07OHJBEDOK@IsAlive?$AA@			; `string'
PUBLIC	?lIsAlive@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsAlive
PUBLIC	??_C@_0O@GEMDAPOE@GetNumMembers?$AA@		; `string'
PUBLIC	?lGetNumMembers@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetNumMembers
PUBLIC	??_C@_0L@PJBAHION@GetNameKey?$AA@		; `string'
PUBLIC	?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetNameKey
PUBLIC	??_C@_07MMGEHGCI@GetName?$AA@			; `string'
PUBLIC	?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetName
PUBLIC	??_C@_0BA@NDPGKNBO@GetHandicapType?$AA@		; `string'
PUBLIC	?lGetHandicapType@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetHandicapType
PUBLIC	??_C@_0P@LIPJHPGA@GetSecretaryID?$AA@		; `string'
PUBLIC	?lGetSecretaryID@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetSecretaryID
PUBLIC	??_C@_0M@HLEDIAMC@GetLeaderID?$AA@		; `string'
PUBLIC	?lGetLeaderID@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetLeaderID
PUBLIC	??_C@_0BE@CEFMMBBJ@IsMinorCivWarmonger?$AA@	; `string'
PUBLIC	?lIsMinorCivWarmonger@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsMinorCivWarmonger
PUBLIC	??_C@_0L@NCIBOILG@IsMinorCiv?$AA@		; `string'
PUBLIC	?lIsMinorCiv@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsMinorCiv
PUBLIC	??_C@_0M@NJNEDJLP@IsBarbarian?$AA@		; `string'
PUBLIC	?lIsBarbarian@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsBarbarian
PUBLIC	??_C@_07NIJBBMLI@IsHuman?$AA@			; `string'
PUBLIC	?lIsHuman@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsHuman
PUBLIC	??_C@_0BH@NJBFHECJ@CountEnemyDangerByArea?$AA@	; `string'
PUBLIC	?lCountEnemyDangerByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCountEnemyDangerByArea
PUBLIC	??_C@_0BL@KLNPAOHL@CountTotalPopulationByArea?$AA@ ; `string'
PUBLIC	?lCountTotalPopulationByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCountTotalPopulationByArea
PUBLIC	??_C@_0BF@EGPJHEIC@CountNumCitiesByArea?$AA@	; `string'
PUBLIC	?lCountNumCitiesByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCountNumCitiesByArea
PUBLIC	??_C@_0BE@DLAJONFN@CountNumUnitsByArea?$AA@	; `string'
PUBLIC	?lCountNumUnitsByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCountNumUnitsByArea
PUBLIC	??_C@_0CA@NDNHGCMM@GetBuildingClassCountPlusMaking?$AA@ ; `string'
PUBLIC	?lGetBuildingClassCountPlusMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetBuildingClassCountPlusMaking
PUBLIC	??_C@_0BH@IOFHKIED@GetBuildingClassMaking?$AA@	; `string'
PUBLIC	?lGetBuildingClassMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetBuildingClassMaking
PUBLIC	??_C@_0BM@JKNGMGFK@GetUnitClassCountPlusMaking?$AA@ ; `string'
PUBLIC	?lGetUnitClassCountPlusMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetUnitClassCountPlusMaking
PUBLIC	??_C@_0BD@JNGNHFGM@GetUnitClassMaking?$AA@	; `string'
PUBLIC	?lGetUnitClassMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetUnitClassMaking
PUBLIC	??_C@_0BG@IODHCDCI@GetDefensivePactCount?$AA@	; `string'
PUBLIC	?lGetDefensivePactCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetDefensivePactCount
PUBLIC	??_C@_0M@DIIOBOBE@HasMetHuman?$AA@		; `string'
PUBLIC	?lHasMetHuman@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lHasMetHuman
PUBLIC	??_C@_0BC@EMHOJNKI@GetHasMetCivCount?$AA@	; `string'
PUBLIC	?lGetHasMetCivCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetHasMetCivCount
PUBLIC	??_C@_0O@GABEDELC@GetAtWarCount?$AA@		; `string'
PUBLIC	?lGetAtWarCount@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetAtWarCount
PUBLIC	??_C@_0BF@EBCIFBEE@GetTotalSecuredVotes?$AA@	; `string'
PUBLIC	?lGetTotalSecuredVotes@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTotalSecuredVotes
PUBLIC	??_C@_0BH@IGBGNJCJ@GetTotalProjectedVotes?$AA@	; `string'
PUBLIC	?lGetTotalProjectedVotes@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTotalProjectedVotes
PUBLIC	??_C@_0BK@OPJHGPDE@GetProjectedVotesFromCivs?$AA@ ; `string'
PUBLIC	?lGetProjectedVotesFromCivs@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectedVotesFromCivs
PUBLIC	??_C@_0CF@FBJGDJJB@GetProjectedVotesFromLiberatedMi@ ; `string'
PUBLIC	?lGetProjectedVotesFromLiberatedMinors@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectedVotesFromLiberatedMinors
PUBLIC	??_C@_0CB@PMNFBDPN@GetProjectedVotesFromMinorAllies@ ; `string'
PUBLIC	?lGetProjectedVotesFromMinorAllies@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectedVotesFromMinorAllies
PUBLIC	??_C@_0BI@NIJOKELF@GetTeamVotingForInDiplo?$AA@	; `string'
PUBLIC	?lGetTeamVotingForInDiplo@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTeamVotingForInDiplo
PUBLIC	??_C@_0BA@CHLGKBKN@GetNumNukeUnits?$AA@		; `string'
PUBLIC	?lGetNumNukeUnits@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetNumNukeUnits
PUBLIC	??_C@_0BC@PHPJMCJF@GetDefensivePower?$AA@	; `string'
PUBLIC	?lGetDefensivePower@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetDefensivePower
PUBLIC	??_C@_08JBDILNIJ@GetPower?$AA@			; `string'
PUBLIC	?lGetPower@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetPower
PUBLIC	??_C@_08FLBLGMDF@GetScore?$AA@			; `string'
PUBLIC	?lGetScore@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetScore
PUBLIC	??_C@_04JAAJCGBC@Meet?$AA@			; `string'
PUBLIC	?lMeet@CvLuaTeam@@KAHPAUlua_State@@@Z		; CvLuaTeam::lMeet
PUBLIC	??_C@_0BJ@HAADKADG@GetNumTurnsLockedIntoWar?$AA@ ; `string'
PUBLIC	?lGetNumTurnsLockedIntoWar@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetNumTurnsLockedIntoWar
PUBLIC	??_C@_09OEPLNLOG@MakePeace?$AA@			; `string'
PUBLIC	?lMakePeace@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lMakePeace
PUBLIC	??_C@_0L@BPLCHNAB@DeclareWar?$AA@		; `string'
PUBLIC	?lDeclareWar@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lDeclareWar
PUBLIC	??_C@_0O@IKFANLMN@CanDeclareWar?$AA@		; `string'
PUBLIC	?lCanDeclareWar@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lCanDeclareWar
PUBLIC	??_C@_0BC@OABCMNCH@CanChangeWarPeace?$AA@	; `string'
PUBLIC	?lCanChangeWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCanChangeWarPeace
PUBLIC	??_C@_07MLFLBNJI@AddTeam?$AA@			; `string'
PUBLIC	?lAddTeam@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lAddTeam
PUBLIC	??_C@_06OAPDBHPB@IsNone?$AA@			; `string'
PUBLIC	?lIsNone@CvLuaTeam@@KAHPAUlua_State@@@Z		; CvLuaTeam::lIsNone
PUBLIC	?PushMethods@CvLuaTeam@@SAXPAUlua_State@@H@Z	; CvLuaTeam::PushMethods
EXTRN	_lua_setfield:PROC
EXTRN	_lua_pushcclosure:PROC
;	COMDAT ??_C@_0BF@NOAGOBIP@UpdateEmbarkGraphics?$AA@
CONST	SEGMENT
??_C@_0BF@NOAGOBIP@UpdateEmbarkGraphics?$AA@ DB 'UpdateEmbarkGraphics', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EOCPPCIE@SetCurrentEra?$AA@
CONST	SEGMENT
??_C@_0O@EOCPPCIE@SetCurrentEra?$AA@ DB 'SetCurrentEra', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DBDBEBPD@GetCurrentEra?$AA@
CONST	SEGMENT
??_C@_0O@DBDBEBPD@GetCurrentEra?$AA@ DB 'GetCurrentEra', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EPHHILCI@ChangeVictoryPoints?$AA@
CONST	SEGMENT
??_C@_0BE@EPHHILCI@ChangeVictoryPoints?$AA@ DB 'ChangeVictoryPoints', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EMIECCCP@GetVictoryPoints?$AA@
CONST	SEGMENT
??_C@_0BB@EMIECCCP@GetVictoryPoints?$AA@ DB 'GetVictoryPoints', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09KKPMLEOP@CanLaunch?$AA@
CONST	SEGMENT
??_C@_09KKPMLEOP@CanLaunch?$AA@ DB 'CanLaunch', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HPOFMAMJ@GetVictoryDelay?$AA@
CONST	SEGMENT
??_C@_0BA@HPOFMAMJ@GetVictoryDelay?$AA@ DB 'GetVictoryDelay', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@ICLOIKDM@GetVictoryCountdown?$AA@
CONST	SEGMENT
??_C@_0BE@ICLOIKDM@GetVictoryCountdown?$AA@ DB 'GetVictoryCountdown', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BJMOOMMF@IsHomeOfUnitedNations?$AA@
CONST	SEGMENT
??_C@_0BG@BJMOOMMF@IsHomeOfUnitedNations?$AA@ DB 'IsHomeOfUnitedNations', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@CKJIDBEK@ChangeImprovementYieldChange?$AA@
CONST	SEGMENT
??_C@_0BN@CKJIDBEK@ChangeImprovementYieldChange?$AA@ DB 'ChangeImprovemen'
	DB	'tYieldChange', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CIPJPCMO@GetImprovementYieldChange?$AA@
CONST	SEGMENT
??_C@_0BK@CIPJPCMO@GetImprovementYieldChange?$AA@ DB 'GetImprovementYield'
	DB	'Change', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DDNMCBKC@GetTeamTechs?$AA@
CONST	SEGMENT
??_C@_0N@DDNMCBKC@GetTeamTechs?$AA@ DB 'GetTeamTechs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JDHELDFB@SetHasTech?$AA@
CONST	SEGMENT
??_C@_0L@JDHELDFB@SetHasTech?$AA@ DB 'SetHasTech', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09MLCFFPHJ@IsHasTech?$AA@
CONST	SEGMENT
??_C@_09MLCFFPHJ@IsHasTech?$AA@ DB 'IsHasTech', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NNGJNGAK@IsHasTradeAgreement?$AA@
CONST	SEGMENT
??_C@_0BE@NNGJNGAK@IsHasTradeAgreement?$AA@ DB 'IsHasTradeAgreement', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CMBGPOHA@IsHasResearchAgreement?$AA@
CONST	SEGMENT
??_C@_0BH@CMBGPOHA@IsHasResearchAgreement?$AA@ DB 'IsHasResearchAgreement'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BHDHONFE@IsObsoleteBuilding?$AA@
CONST	SEGMENT
??_C@_0BD@BHDHONFE@IsObsoleteBuilding?$AA@ DB 'IsObsoleteBuilding', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GGDHCIO@GetObsoleteBuildingCount?$AA@
CONST	SEGMENT
??_C@_0BJ@GGDHCIO@GetObsoleteBuildingCount?$AA@ DB 'GetObsoleteBuildingCo'
	DB	'unt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BIOFBBJB@IsBuildingClassMaxedOut?$AA@
CONST	SEGMENT
??_C@_0BI@BIOFBBJB@IsBuildingClassMaxedOut?$AA@ DB 'IsBuildingClassMaxedO'
	DB	'ut', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LKAPFNIF@GetBuildingClassCount?$AA@
CONST	SEGMENT
??_C@_0BG@LKAPFNIF@GetBuildingClassCount?$AA@ DB 'GetBuildingClassCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KOKPIAGA@IsUnitClassMaxedOut?$AA@
CONST	SEGMENT
??_C@_0BE@KOKPIAGA@IsUnitClassMaxedOut?$AA@ DB 'IsUnitClassMaxedOut', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OMEKCEJN@GetUnitClassCount?$AA@
CONST	SEGMENT
??_C@_0BC@OMEKCEJN@GetUnitClassCount?$AA@ DB 'GetUnitClassCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MNJFAHNC@GetProjectMaking?$AA@
CONST	SEGMENT
??_C@_0BB@MNJFAHNC@GetProjectMaking?$AA@ DB 'GetProjectMaking', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEACKNGP@ChangeProjectCount?$AA@
CONST	SEGMENT
??_C@_0BD@FEACKNGP@ChangeProjectCount?$AA@ DB 'ChangeProjectCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JBHBEBAH@IsProjectAndArtMaxedOut?$AA@
CONST	SEGMENT
??_C@_0BI@JBHBEBAH@IsProjectAndArtMaxedOut?$AA@ DB 'IsProjectAndArtMaxedO'
	DB	'ut', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OBMJOMIK@IsProjectMaxedOut?$AA@
CONST	SEGMENT
??_C@_0BC@OBMJOMIK@IsProjectMaxedOut?$AA@ DB 'IsProjectMaxedOut', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CLJOLHLF@SetProjectArtType?$AA@
CONST	SEGMENT
??_C@_0BC@CLJOLHLF@SetProjectArtType?$AA@ DB 'SetProjectArtType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OJFDMKL@GetProjectArtType?$AA@
CONST	SEGMENT
??_C@_0BC@OJFDMKL@GetProjectArtType?$AA@ DB 'GetProjectArtType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BBDBBALM@SetProjectDefaultArtType?$AA@
CONST	SEGMENT
??_C@_0BJ@BBDBBALM@SetProjectDefaultArtType?$AA@ DB 'SetProjectDefaultArt'
	DB	'Type', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LCJLHNCJ@GetProjectDefaultArtType?$AA@
CONST	SEGMENT
??_C@_0BJ@LCJLHNCJ@GetProjectDefaultArtType?$AA@ DB 'GetProjectDefaultArt'
	DB	'Type', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BBEJKGON@GetProjectCount?$AA@
CONST	SEGMENT
??_C@_0BA@BBEJKGON@GetProjectCount?$AA@ DB 'GetProjectCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BCAHCCOK@ChangeRouteChange?$AA@
CONST	SEGMENT
??_C@_0BC@BCAHCCOK@ChangeRouteChange?$AA@ DB 'ChangeRouteChange', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IGFANFMH@GetRouteChange?$AA@
CONST	SEGMENT
??_C@_0P@IGFANFMH@GetRouteChange?$AA@ DB 'GetRouteChange', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@POCLIDPD@IsDefensivePact?$AA@
CONST	SEGMENT
??_C@_0BA@POCLIDPD@IsDefensivePact?$AA@ DB 'IsDefensivePact', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FCDEFIBF@IsForcePeace?$AA@
CONST	SEGMENT
??_C@_0N@FCDEFIBF@IsForcePeace?$AA@ DB 'IsForcePeace', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EFEMHBAH@IsAllowsOpenBordersToTeam?$AA@
CONST	SEGMENT
??_C@_0BK@EFEMHBAH@IsAllowsOpenBordersToTeam?$AA@ DB 'IsAllowsOpenBorders'
	DB	'ToTeam', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JJBFLANF@HasEmbassyAtTeam?$AA@
CONST	SEGMENT
??_C@_0BB@JJBFLANF@HasEmbassyAtTeam?$AA@ DB 'HasEmbassyAtTeam', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NJNCGNLH@GetKilledByTeam?$AA@
CONST	SEGMENT
??_C@_0BA@NJNCGNLH@GetKilledByTeam?$AA@ DB 'GetKilledByTeam', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LGHLLPMK@GetLiberatedByTeam?$AA@
CONST	SEGMENT
??_C@_0BD@LGHLLPMK@GetLiberatedByTeam?$AA@ DB 'GetLiberatedByTeam', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EPDFKBOJ@SetPermanentWarPeace?$AA@
CONST	SEGMENT
??_C@_0BF@EPDFKBOJ@SetPermanentWarPeace?$AA@ DB 'SetPermanentWarPeace', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EGALMELK@IsPermanentWarPeace?$AA@
CONST	SEGMENT
??_C@_0BE@EGALMELK@IsPermanentWarPeace?$AA@ DB 'IsPermanentWarPeace', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07LLBPCBFI@IsAtWar?$AA@
CONST	SEGMENT
??_C@_07LLBPCBFI@IsAtWar?$AA@ DB 'IsAtWar', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08CPBHIAFJ@IsHasMet?$AA@
CONST	SEGMENT
??_C@_08CPBHIAFJ@IsHasMet?$AA@ DB 'IsHasMet', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JOGKCNGC@CanDefensiveEmbark?$AA@
CONST	SEGMENT
??_C@_0BD@JOGKCNGC@CanDefensiveEmbark?$AA@ DB 'CanDefensiveEmbark', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09PEMMPAAH@CanEmbark?$AA@
CONST	SEGMENT
??_C@_09PEMMPAAH@CanEmbark?$AA@ DB 'CanEmbark', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@INOILHHC@ChangeExtraMoves?$AA@
CONST	SEGMENT
??_C@_0BB@INOILHHC@ChangeExtraMoves?$AA@ DB 'ChangeExtraMoves', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LOCEBOPL@GetExtraMoves?$AA@
CONST	SEGMENT
??_C@_0O@LOCEBOPL@GetExtraMoves?$AA@ DB 'GetExtraMoves', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NIBKKJBC@ChangeTechShareCount?$AA@
CONST	SEGMENT
??_C@_0BF@NIBKKJBC@ChangeTechShareCount?$AA@ DB 'ChangeTechShareCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OBCLDCGP@IsTechShare?$AA@
CONST	SEGMENT
??_C@_0M@OBCLDCGP@IsTechShare?$AA@ DB 'IsTechShare', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EGHNMPBI@GetTechShareCount?$AA@
CONST	SEGMENT
??_C@_0BC@EGHNMPBI@GetTechShareCount?$AA@ DB 'GetTechShareCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05CLBJHDA@GetID?$AA@
CONST	SEGMENT
??_C@_05CLBJHDA@GetID?$AA@ DB 'GetID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IMBEDMDH@SetMapCentering?$AA@
CONST	SEGMENT
??_C@_0BA@IMBEDMDH@SetMapCentering?$AA@ DB 'SetMapCentering', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@POBADFKJ@IsMapCentering?$AA@
CONST	SEGMENT
??_C@_0P@POBADFKJ@IsMapCentering?$AA@ DB 'IsMapCentering', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GLKIAOMI@ChangeBorderObstacleCount?$AA@
CONST	SEGMENT
??_C@_0BK@GLKIAOMI@ChangeBorderObstacleCount?$AA@ DB 'ChangeBorderObstacl'
	DB	'eCount', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GMOJKNBD@IsBorderObstacle?$AA@
CONST	SEGMENT
??_C@_0BB@GMOJKNBD@IsBorderObstacle?$AA@ DB 'IsBorderObstacle', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JNAPMEIH@GetBorderObstacleCount?$AA@
CONST	SEGMENT
??_C@_0BH@JNAPMEIH@GetBorderObstacleCount?$AA@ DB 'GetBorderObstacleCount'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MBAHMEHB@ChangeWaterWorkCount?$AA@
CONST	SEGMENT
??_C@_0BF@MBAHMEHB@ChangeWaterWorkCount?$AA@ DB 'ChangeWaterWorkCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NBIECCOL@IsWaterWork?$AA@
CONST	SEGMENT
??_C@_0M@NBIECCOL@IsWaterWork?$AA@ DB 'IsWaterWork', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FPGAKCHL@GetWaterWorkCount?$AA@
CONST	SEGMENT
??_C@_0BC@FPGAKCHL@GetWaterWorkCount?$AA@ DB 'GetWaterWorkCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@OOFPJIPJ@ChangeBridgeBuildingCount?$AA@
CONST	SEGMENT
??_C@_0BK@OOFPJIPJ@ChangeBridgeBuildingCount?$AA@ DB 'ChangeBridgeBuildin'
	DB	'gCount', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EOIEJOOG@IsBridgeBuilding?$AA@
CONST	SEGMENT
??_C@_0BB@EOIEJOOG@IsBridgeBuilding?$AA@ DB 'IsBridgeBuilding', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BIPIFCLG@GetBridgeBuildingCount?$AA@
CONST	SEGMENT
??_C@_0BH@BIPIFCLG@GetBridgeBuildingCount?$AA@ DB 'GetBridgeBuildingCount'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@IDADOHMI@ChangePermanentAllianceTradingCo@
CONST	SEGMENT
??_C@_0CE@IDADOHMI@ChangePermanentAllianceTradingCo@ DB 'ChangePermanentA'
	DB	'llianceTradingCount', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@BIAKIMNH@IsPermanentAllianceTrading?$AA@
CONST	SEGMENT
??_C@_0BL@BIAKIMNH@IsPermanentAllianceTrading?$AA@ DB 'IsPermanentAllianc'
	DB	'eTrading', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@GGHNNDEF@GetPermanentAllianceTradingCount@
CONST	SEGMENT
??_C@_0CB@GGHNNDEF@GetPermanentAllianceTradingCount@ DB 'GetPermanentAlli'
	DB	'anceTradingCount', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@ENAENOBB@IsTradeAgreementTradingAllowed?$AA@
CONST	SEGMENT
??_C@_0BP@ENAENOBB@IsTradeAgreementTradingAllowed?$AA@ DB 'IsTradeAgreeme'
	DB	'ntTradingAllowed', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@KDMAAEHA@IsResearchAgreementTradingAllowe@
CONST	SEGMENT
??_C@_0CK@KDMAAEHA@IsResearchAgreementTradingAllowe@ DB 'IsResearchAgreem'
	DB	'entTradingAllowedWithTeam', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@GFNFBMJC@IsResearchAgreementTradingAllowe@
CONST	SEGMENT
??_C@_0CC@GFNFBMJC@IsResearchAgreementTradingAllowe@ DB 'IsResearchAgreem'
	DB	'entTradingAllowed', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@EICNJJPJ@ChangeDefensivePactTradingAllowe@
CONST	SEGMENT
??_C@_0CH@EICNJJPJ@ChangeDefensivePactTradingAllowe@ DB 'ChangeDefensiveP'
	DB	'actTradingAllowedCount', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@BCPFPOEC@IsDefensivePactTradingAllowedWit@
CONST	SEGMENT
??_C@_0CG@BCPFPOEC@IsDefensivePactTradingAllowedWit@ DB 'IsDefensivePactT'
	DB	'radingAllowedWithTeam', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@OFLLCFCN@IsDefensivePactTradingAllowed?$AA@
CONST	SEGMENT
??_C@_0BO@OFLLCFCN@IsDefensivePactTradingAllowed?$AA@ DB 'IsDefensivePact'
	DB	'TradingAllowed', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@KNFHLOAD@GetDefensivePactTradingAllowedCo@
CONST	SEGMENT
??_C@_0CE@KNFHLOAD@GetDefensivePactTradingAllowedCo@ DB 'GetDefensivePact'
	DB	'TradingAllowedCount', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@FCJFHANM@ChangeOpenBordersTradingAllowedC@
CONST	SEGMENT
??_C@_0CF@FCJFHANM@ChangeOpenBordersTradingAllowedC@ DB 'ChangeOpenBorder'
	DB	'sTradingAllowedCount', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@BOMJELKF@IsOpenBordersTradingAllowedWithT@
CONST	SEGMENT
??_C@_0CE@BOMJELKF@IsOpenBordersTradingAllowedWithT@ DB 'IsOpenBordersTra'
	DB	'dingAllowedWithTeam', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HLLMNION@IsOpenBordersTradingAllowed?$AA@
CONST	SEGMENT
??_C@_0BM@HLLMNION@IsOpenBordersTradingAllowed?$AA@ DB 'IsOpenBordersTrad'
	DB	'ingAllowed', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@MBHJPBHF@GetOpenBordersTradingAllowedCoun@
CONST	SEGMENT
??_C@_0CC@MBHJPBHF@GetOpenBordersTradingAllowedCoun@ DB 'GetOpenBordersTr'
	DB	'adingAllowedCount', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@BEHEJIFP@ChangeAllowEmbassyTradingAllowed@
CONST	SEGMENT
??_C@_0CG@BEHEJIFP@ChangeAllowEmbassyTradingAllowed@ DB 'ChangeAllowEmbas'
	DB	'syTradingAllowedCount', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DIGFBHJI@IsAllowEmbassyTradingAllowed?$AA@
CONST	SEGMENT
??_C@_0BN@DIGFBHJI@IsAllowEmbassyTradingAllowed?$AA@ DB 'IsAllowEmbassyTr'
	DB	'adingAllowed', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@LLONGPJC@GetAllowEmbassyTradingAllowedCou@
CONST	SEGMENT
??_C@_0CD@LLONGPJC@GetAllowEmbassyTradingAllowedCou@ DB 'GetAllowEmbassyT'
	DB	'radingAllowedCount', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EBFKFBMD@ChangeGoldTradingCount?$AA@
CONST	SEGMENT
??_C@_0BH@EBFKFBMD@ChangeGoldTradingCount?$AA@ DB 'ChangeGoldTradingCount'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KAEMAEJL@IsGoldTrading?$AA@
CONST	SEGMENT
??_C@_0O@KAEMAEJL@IsGoldTrading?$AA@ DB 'IsGoldTrading', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BPGEODED@GetGoldTradingCount?$AA@
CONST	SEGMENT
??_C@_0BE@BPGEODED@GetGoldTradingCount?$AA@ DB 'GetGoldTradingCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IPFPHLKG@ChangeTechTradingCount?$AA@
CONST	SEGMENT
??_C@_0BH@IPFPHLKG@ChangeTechTradingCount?$AA@ DB 'ChangeTechTradingCount'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@COFKMLIK@IsTechTrading?$AA@
CONST	SEGMENT
??_C@_0O@COFKMLIK@IsTechTrading?$AA@ DB 'IsTechTrading', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NBGBMJCG@GetTechTradingCount?$AA@
CONST	SEGMENT
??_C@_0BE@NBGBMJCG@GetTechTradingCount?$AA@ DB 'GetTechTradingCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BEGIMMCG@ChangeMapTradingCount?$AA@
CONST	SEGMENT
??_C@_0BG@BEGIMMCG@ChangeMapTradingCount?$AA@ DB 'ChangeMapTradingCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GBEHBLMG@IsMapTrading?$AA@
CONST	SEGMENT
??_C@_0N@GBEHBLMG@IsMapTrading?$AA@ DB 'IsMapTrading', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PECDECFO@GetMapTradingCount?$AA@
CONST	SEGMENT
??_C@_0BD@PECDECFO@GetMapTradingCount?$AA@ DB 'GetMapTradingCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@CGHPJAJB@ChangeExtraWaterSeeFromCount?$AA@
CONST	SEGMENT
??_C@_0BN@CGHPJAJB@ChangeExtraWaterSeeFromCount?$AA@ DB 'ChangeExtraWater'
	DB	'SeeFromCount', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DBFHCFEG@IsExtraWaterSeeFrom?$AA@
CONST	SEGMENT
??_C@_0BE@DBFHCFEG@IsExtraWaterSeeFrom?$AA@ DB 'IsExtraWaterSeeFrom', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CEBOFDBF@GetExtraWaterSeeFromCount?$AA@
CONST	SEGMENT
??_C@_0BK@CEBOFDBF@GetExtraWaterSeeFromCount?$AA@ DB 'GetExtraWaterSeeFro'
	DB	'mCount', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@ILOAPAKI@ChangeForceTeamVoteEligibilityCo@
CONST	SEGMENT
??_C@_0CE@ILOAPAKI@ChangeForceTeamVoteEligibilityCo@ DB 'ChangeForceTeamV'
	DB	'oteEligibilityCount', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HELLGHLI@IsForceTeamVoteEligible?$AA@
CONST	SEGMENT
??_C@_0BI@HELLGHLI@IsForceTeamVoteEligible?$AA@ DB 'IsForceTeamVoteEligib'
	DB	'le', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@GOJOMECF@GetForceTeamVoteEligibilityCount@
CONST	SEGMENT
??_C@_0CB@GOJOMECF@GetForceTeamVoteEligibilityCount@ DB 'GetForceTeamVote'
	DB	'EligibilityCount', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OCNNKJKB@ChangeNukeInterception?$AA@
CONST	SEGMENT
??_C@_0BH@OCNNKJKB@ChangeNukeInterception?$AA@ DB 'ChangeNukeInterception'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LMODBLCB@GetNukeInterception?$AA@
CONST	SEGMENT
??_C@_0BE@LMODBLCB@GetNukeInterception?$AA@ DB 'GetNukeInterception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NKPGAGBN@GetTotalLand?$AA@
CONST	SEGMENT
??_C@_0N@NKPGAGBN@GetTotalLand?$AA@ DB 'GetTotalLand', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BKBNEN@GetTotalPopulation?$AA@
CONST	SEGMENT
??_C@_0BD@BKBNEN@GetTotalPopulation?$AA@ DB 'GetTotalPopulation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OFLMPMAK@GetNumCities?$AA@
CONST	SEGMENT
??_C@_0N@OFLMPMAK@GetNumCities?$AA@ DB 'GetNumCities', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MAOIOJGJ@IsEverAlive?$AA@
CONST	SEGMENT
??_C@_0M@MAOIOJGJ@IsEverAlive?$AA@ DB 'IsEverAlive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07OHJBEDOK@IsAlive?$AA@
CONST	SEGMENT
??_C@_07OHJBEDOK@IsAlive?$AA@ DB 'IsAlive', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GEMDAPOE@GetNumMembers?$AA@
CONST	SEGMENT
??_C@_0O@GEMDAPOE@GetNumMembers?$AA@ DB 'GetNumMembers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PJBAHION@GetNameKey?$AA@
CONST	SEGMENT
??_C@_0L@PJBAHION@GetNameKey?$AA@ DB 'GetNameKey', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07MMGEHGCI@GetName?$AA@
CONST	SEGMENT
??_C@_07MMGEHGCI@GetName?$AA@ DB 'GetName', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NDPGKNBO@GetHandicapType?$AA@
CONST	SEGMENT
??_C@_0BA@NDPGKNBO@GetHandicapType?$AA@ DB 'GetHandicapType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LIPJHPGA@GetSecretaryID?$AA@
CONST	SEGMENT
??_C@_0P@LIPJHPGA@GetSecretaryID?$AA@ DB 'GetSecretaryID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HLEDIAMC@GetLeaderID?$AA@
CONST	SEGMENT
??_C@_0M@HLEDIAMC@GetLeaderID?$AA@ DB 'GetLeaderID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CEFMMBBJ@IsMinorCivWarmonger?$AA@
CONST	SEGMENT
??_C@_0BE@CEFMMBBJ@IsMinorCivWarmonger?$AA@ DB 'IsMinorCivWarmonger', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NCIBOILG@IsMinorCiv?$AA@
CONST	SEGMENT
??_C@_0L@NCIBOILG@IsMinorCiv?$AA@ DB 'IsMinorCiv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NJNEDJLP@IsBarbarian?$AA@
CONST	SEGMENT
??_C@_0M@NJNEDJLP@IsBarbarian?$AA@ DB 'IsBarbarian', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NIJBBMLI@IsHuman?$AA@
CONST	SEGMENT
??_C@_07NIJBBMLI@IsHuman?$AA@ DB 'IsHuman', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NJBFHECJ@CountEnemyDangerByArea?$AA@
CONST	SEGMENT
??_C@_0BH@NJBFHECJ@CountEnemyDangerByArea?$AA@ DB 'CountEnemyDangerByArea'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@KLNPAOHL@CountTotalPopulationByArea?$AA@
CONST	SEGMENT
??_C@_0BL@KLNPAOHL@CountTotalPopulationByArea?$AA@ DB 'CountTotalPopulati'
	DB	'onByArea', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EGPJHEIC@CountNumCitiesByArea?$AA@
CONST	SEGMENT
??_C@_0BF@EGPJHEIC@CountNumCitiesByArea?$AA@ DB 'CountNumCitiesByArea', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DLAJONFN@CountNumUnitsByArea?$AA@
CONST	SEGMENT
??_C@_0BE@DLAJONFN@CountNumUnitsByArea?$AA@ DB 'CountNumUnitsByArea', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NDNHGCMM@GetBuildingClassCountPlusMaking?$AA@
CONST	SEGMENT
??_C@_0CA@NDNHGCMM@GetBuildingClassCountPlusMaking?$AA@ DB 'GetBuildingCl'
	DB	'assCountPlusMaking', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IOFHKIED@GetBuildingClassMaking?$AA@
CONST	SEGMENT
??_C@_0BH@IOFHKIED@GetBuildingClassMaking?$AA@ DB 'GetBuildingClassMaking'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JKNGMGFK@GetUnitClassCountPlusMaking?$AA@
CONST	SEGMENT
??_C@_0BM@JKNGMGFK@GetUnitClassCountPlusMaking?$AA@ DB 'GetUnitClassCount'
	DB	'PlusMaking', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JNGNHFGM@GetUnitClassMaking?$AA@
CONST	SEGMENT
??_C@_0BD@JNGNHFGM@GetUnitClassMaking?$AA@ DB 'GetUnitClassMaking', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IODHCDCI@GetDefensivePactCount?$AA@
CONST	SEGMENT
??_C@_0BG@IODHCDCI@GetDefensivePactCount?$AA@ DB 'GetDefensivePactCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DIIOBOBE@HasMetHuman?$AA@
CONST	SEGMENT
??_C@_0M@DIIOBOBE@HasMetHuman?$AA@ DB 'HasMetHuman', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EMHOJNKI@GetHasMetCivCount?$AA@
CONST	SEGMENT
??_C@_0BC@EMHOJNKI@GetHasMetCivCount?$AA@ DB 'GetHasMetCivCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GABEDELC@GetAtWarCount?$AA@
CONST	SEGMENT
??_C@_0O@GABEDELC@GetAtWarCount?$AA@ DB 'GetAtWarCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EBCIFBEE@GetTotalSecuredVotes?$AA@
CONST	SEGMENT
??_C@_0BF@EBCIFBEE@GetTotalSecuredVotes?$AA@ DB 'GetTotalSecuredVotes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IGBGNJCJ@GetTotalProjectedVotes?$AA@
CONST	SEGMENT
??_C@_0BH@IGBGNJCJ@GetTotalProjectedVotes?$AA@ DB 'GetTotalProjectedVotes'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@OPJHGPDE@GetProjectedVotesFromCivs?$AA@
CONST	SEGMENT
??_C@_0BK@OPJHGPDE@GetProjectedVotesFromCivs?$AA@ DB 'GetProjectedVotesFr'
	DB	'omCivs', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@FBJGDJJB@GetProjectedVotesFromLiberatedMi@
CONST	SEGMENT
??_C@_0CF@FBJGDJJB@GetProjectedVotesFromLiberatedMi@ DB 'GetProjectedVote'
	DB	'sFromLiberatedMinors', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@PMNFBDPN@GetProjectedVotesFromMinorAllies@
CONST	SEGMENT
??_C@_0CB@PMNFBDPN@GetProjectedVotesFromMinorAllies@ DB 'GetProjectedVote'
	DB	'sFromMinorAllies', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NIJOKELF@GetTeamVotingForInDiplo?$AA@
CONST	SEGMENT
??_C@_0BI@NIJOKELF@GetTeamVotingForInDiplo?$AA@ DB 'GetTeamVotingForInDip'
	DB	'lo', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CHLGKBKN@GetNumNukeUnits?$AA@
CONST	SEGMENT
??_C@_0BA@CHLGKBKN@GetNumNukeUnits?$AA@ DB 'GetNumNukeUnits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PHPJMCJF@GetDefensivePower?$AA@
CONST	SEGMENT
??_C@_0BC@PHPJMCJF@GetDefensivePower?$AA@ DB 'GetDefensivePower', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08JBDILNIJ@GetPower?$AA@
CONST	SEGMENT
??_C@_08JBDILNIJ@GetPower?$AA@ DB 'GetPower', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08FLBLGMDF@GetScore?$AA@
CONST	SEGMENT
??_C@_08FLBLGMDF@GetScore?$AA@ DB 'GetScore', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04JAAJCGBC@Meet?$AA@
CONST	SEGMENT
??_C@_04JAAJCGBC@Meet?$AA@ DB 'Meet', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HAADKADG@GetNumTurnsLockedIntoWar?$AA@
CONST	SEGMENT
??_C@_0BJ@HAADKADG@GetNumTurnsLockedIntoWar?$AA@ DB 'GetNumTurnsLockedInt'
	DB	'oWar', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_09OEPLNLOG@MakePeace?$AA@
CONST	SEGMENT
??_C@_09OEPLNLOG@MakePeace?$AA@ DB 'MakePeace', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BPLCHNAB@DeclareWar?$AA@
CONST	SEGMENT
??_C@_0L@BPLCHNAB@DeclareWar?$AA@ DB 'DeclareWar', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IKFANLMN@CanDeclareWar?$AA@
CONST	SEGMENT
??_C@_0O@IKFANLMN@CanDeclareWar?$AA@ DB 'CanDeclareWar', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OABCMNCH@CanChangeWarPeace?$AA@
CONST	SEGMENT
??_C@_0BC@OABCMNCH@CanChangeWarPeace?$AA@ DB 'CanChangeWarPeace', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07MLFLBNJI@AddTeam?$AA@
CONST	SEGMENT
??_C@_07MLFLBNJI@AddTeam?$AA@ DB 'AddTeam', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OAPDBHPB@IsNone?$AA@
CONST	SEGMENT
??_C@_06OAPDBHPB@IsNone?$AA@ DB 'IsNone', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?PushMethods@CvLuaTeam@@SAXPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
?PushMethods@CvLuaTeam@@SAXPAUlua_State@@H@Z PROC	; CvLuaTeam::PushMethods, COMDAT

; 37   : {

	push	ebp
	mov	ebp, esp

; 38   : 	Method(IsNone);

	push	0
	push	OFFSET ?lIsNone@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsNone
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_06OAPDBHPB@IsNone?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 39   : 
; 40   : 	Method(AddTeam);

	push	0
	push	OFFSET ?lAddTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lAddTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07MLFLBNJI@AddTeam?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 41   : 
; 42   : 	Method(CanChangeWarPeace);

	push	0
	push	OFFSET ?lCanChangeWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCanChangeWarPeace
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@OABCMNCH@CanChangeWarPeace?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 43   : 	Method(CanDeclareWar);

	push	0
	push	OFFSET ?lCanDeclareWar@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCanDeclareWar
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@IKFANLMN@CanDeclareWar?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 44   : 	Method(DeclareWar);

	push	0
	push	OFFSET ?lDeclareWar@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lDeclareWar
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@BPLCHNAB@DeclareWar?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 45   : 	Method(MakePeace);

	push	0
	push	OFFSET ?lMakePeace@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lMakePeace
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09OEPLNLOG@MakePeace?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 46   : 	Method(GetNumTurnsLockedIntoWar);

	push	0
	push	OFFSET ?lGetNumTurnsLockedIntoWar@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetNumTurnsLockedIntoWar
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@HAADKADG@GetNumTurnsLockedIntoWar?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 47   : 	Method(Meet);

	push	0
	push	OFFSET ?lMeet@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lMeet
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_04JAAJCGBC@Meet?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 48   : 
; 49   : 	Method(GetScore);

	push	0
	push	OFFSET ?lGetScore@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetScore
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08FLBLGMDF@GetScore?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 50   : 	Method(GetPower);

	push	0
	push	OFFSET ?lGetPower@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetPower
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08JBDILNIJ@GetPower?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 51   : 	Method(GetDefensivePower);

	push	0
	push	OFFSET ?lGetDefensivePower@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetDefensivePower
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@PHPJMCJF@GetDefensivePower?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 52   : 	Method(GetNumNukeUnits);

	push	0
	push	OFFSET ?lGetNumNukeUnits@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetNumNukeUnits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@CHLGKBKN@GetNumNukeUnits?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 53   : 
; 54   : 	Method(GetTeamVotingForInDiplo);

	push	0
	push	OFFSET ?lGetTeamVotingForInDiplo@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTeamVotingForInDiplo
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@NIJOKELF@GetTeamVotingForInDiplo?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 55   : 	Method(GetProjectedVotesFromMinorAllies);

	push	0
	push	OFFSET ?lGetProjectedVotesFromMinorAllies@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectedVotesFromMinorAllies
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CB@PMNFBDPN@GetProjectedVotesFromMinorAllies@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 56   : 	Method(GetProjectedVotesFromLiberatedMinors);

	push	0
	push	OFFSET ?lGetProjectedVotesFromLiberatedMinors@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectedVotesFromLiberatedMinors
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CF@FBJGDJJB@GetProjectedVotesFromLiberatedMi@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 57   : 	Method(GetProjectedVotesFromCivs);

	push	0
	push	OFFSET ?lGetProjectedVotesFromCivs@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectedVotesFromCivs
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@OPJHGPDE@GetProjectedVotesFromCivs?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 58   : 	Method(GetTotalProjectedVotes);

	push	0
	push	OFFSET ?lGetTotalProjectedVotes@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTotalProjectedVotes
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@IGBGNJCJ@GetTotalProjectedVotes?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 59   : 	Method(GetTotalSecuredVotes); // DEPRECATED, use GetTotalProjectedVotes instead

	push	0
	push	OFFSET ?lGetTotalSecuredVotes@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTotalSecuredVotes
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@EBCIFBEE@GetTotalSecuredVotes?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 60   : 
; 61   : 	Method(GetAtWarCount);

	push	0
	push	OFFSET ?lGetAtWarCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetAtWarCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@GABEDELC@GetAtWarCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 62   : 	Method(GetHasMetCivCount);

	push	0
	push	OFFSET ?lGetHasMetCivCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetHasMetCivCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@EMHOJNKI@GetHasMetCivCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 63   : 	Method(HasMetHuman);

	push	0
	push	OFFSET ?lHasMetHuman@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lHasMetHuman
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@DIIOBOBE@HasMetHuman?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 64   : 	Method(GetDefensivePactCount);

	push	0
	push	OFFSET ?lGetDefensivePactCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetDefensivePactCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@IODHCDCI@GetDefensivePactCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 65   : 
; 66   : 	Method(GetUnitClassMaking);

	push	0
	push	OFFSET ?lGetUnitClassMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetUnitClassMaking
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@JNGNHFGM@GetUnitClassMaking?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 67   : 	Method(GetUnitClassCountPlusMaking);

	push	0
	push	OFFSET ?lGetUnitClassCountPlusMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetUnitClassCountPlusMaking
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@JKNGMGFK@GetUnitClassCountPlusMaking?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 68   : 	Method(GetBuildingClassMaking);

	push	0
	push	OFFSET ?lGetBuildingClassMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetBuildingClassMaking
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@IOFHKIED@GetBuildingClassMaking?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 69   : 	Method(GetBuildingClassCountPlusMaking);

	push	0
	push	OFFSET ?lGetBuildingClassCountPlusMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetBuildingClassCountPlusMaking
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CA@NDNHGCMM@GetBuildingClassCountPlusMaking?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 70   : 
; 71   : 	Method(CountNumUnitsByArea);

	push	0
	push	OFFSET ?lCountNumUnitsByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCountNumUnitsByArea
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@DLAJONFN@CountNumUnitsByArea?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 72   : 	Method(CountNumCitiesByArea);

	push	0
	push	OFFSET ?lCountNumCitiesByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCountNumCitiesByArea
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@EGPJHEIC@CountNumCitiesByArea?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 73   : 	Method(CountTotalPopulationByArea);

	push	0
	push	OFFSET ?lCountTotalPopulationByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCountTotalPopulationByArea
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@KLNPAOHL@CountTotalPopulationByArea?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 74   : 	Method(CountEnemyDangerByArea);

	push	0
	push	OFFSET ?lCountEnemyDangerByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCountEnemyDangerByArea
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@NJBFHECJ@CountEnemyDangerByArea?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 75   : 
; 76   : 	Method(IsHuman);

	push	0
	push	OFFSET ?lIsHuman@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsHuman
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07NIJBBMLI@IsHuman?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 77   : 	Method(IsBarbarian);

	push	0
	push	OFFSET ?lIsBarbarian@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsBarbarian
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@NJNEDJLP@IsBarbarian?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 78   : 
; 79   : 	Method(IsMinorCiv);

	push	0
	push	OFFSET ?lIsMinorCiv@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsMinorCiv
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@NCIBOILG@IsMinorCiv?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 80   : 	Method(IsMinorCivWarmonger);

	push	0
	push	OFFSET ?lIsMinorCivWarmonger@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsMinorCivWarmonger
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@CEFMMBBJ@IsMinorCivWarmonger?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 81   : 
; 82   : 	Method(GetLeaderID);

	push	0
	push	OFFSET ?lGetLeaderID@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetLeaderID
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@HLEDIAMC@GetLeaderID?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 83   : 	Method(GetSecretaryID);

	push	0
	push	OFFSET ?lGetSecretaryID@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetSecretaryID
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@LIPJHPGA@GetSecretaryID?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 84   : 	Method(GetHandicapType);

	push	0
	push	OFFSET ?lGetHandicapType@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetHandicapType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@NDPGKNBO@GetHandicapType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 85   : 	Method(GetName);

	push	0
	push	OFFSET ?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetName
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07MMGEHGCI@GetName?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 86   : 	Method(GetNameKey);

	push	0
	push	OFFSET ?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetNameKey
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@PJBAHION@GetNameKey?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 87   : 
; 88   : 	Method(GetNumMembers);

	push	0
	push	OFFSET ?lGetNumMembers@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetNumMembers
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@GEMDAPOE@GetNumMembers?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 89   : 	Method(IsAlive);

	push	0
	push	OFFSET ?lIsAlive@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsAlive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07OHJBEDOK@IsAlive?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 90   : 	Method(IsEverAlive);

	push	0
	push	OFFSET ?lIsEverAlive@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsEverAlive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@MAOIOJGJ@IsEverAlive?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 91   : 	Method(GetNumCities);

	push	0
	push	OFFSET ?lGetNumCities@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetNumCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@OFLMPMAK@GetNumCities?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 92   : 	Method(GetTotalPopulation);

	push	0
	push	OFFSET ?lGetTotalPopulation@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTotalPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@BKBNEN@GetTotalPopulation?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 93   : 	Method(GetTotalLand);

	push	0
	push	OFFSET ?lGetTotalLand@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTotalLand
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@NKPGAGBN@GetTotalLand?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 94   : 	Method(GetNukeInterception);

	push	0
	push	OFFSET ?lGetNukeInterception@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetNukeInterception
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@LMODBLCB@GetNukeInterception?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 95   : 	Method(ChangeNukeInterception);

	push	0
	push	OFFSET ?lChangeNukeInterception@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeNukeInterception
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@OCNNKJKB@ChangeNukeInterception?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 96   : 
; 97   : 	Method(GetForceTeamVoteEligibilityCount);

	push	0
	push	OFFSET ?lGetForceTeamVoteEligibilityCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetForceTeamVoteEligibilityCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CB@GOJOMECF@GetForceTeamVoteEligibilityCount@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 98   : 	Method(IsForceTeamVoteEligible);

	push	0
	push	OFFSET ?lIsForceTeamVoteEligible@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsForceTeamVoteEligible
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@HELLGHLI@IsForceTeamVoteEligible?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 99   : 	Method(ChangeForceTeamVoteEligibilityCount);

	push	0
	push	OFFSET ?lChangeForceTeamVoteEligibilityCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeForceTeamVoteEligibilityCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@ILOAPAKI@ChangeForceTeamVoteEligibilityCo@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 100  : 	Method(GetExtraWaterSeeFromCount);

	push	0
	push	OFFSET ?lGetExtraWaterSeeFromCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetExtraWaterSeeFromCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@CEBOFDBF@GetExtraWaterSeeFromCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 101  : 	Method(IsExtraWaterSeeFrom);

	push	0
	push	OFFSET ?lIsExtraWaterSeeFrom@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsExtraWaterSeeFrom
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@DBFHCFEG@IsExtraWaterSeeFrom?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 102  : 	Method(ChangeExtraWaterSeeFromCount);

	push	0
	push	OFFSET ?lChangeExtraWaterSeeFromCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeExtraWaterSeeFromCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@CGHPJAJB@ChangeExtraWaterSeeFromCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 103  : 	Method(GetMapTradingCount);

	push	0
	push	OFFSET ?lGetMapTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetMapTradingCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@PECDECFO@GetMapTradingCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 104  : 	Method(IsMapTrading);

	push	0
	push	OFFSET ?lIsMapTrading@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsMapTrading
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@GBEHBLMG@IsMapTrading?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 105  : 	Method(ChangeMapTradingCount);

	push	0
	push	OFFSET ?lChangeMapTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeMapTradingCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@BEGIMMCG@ChangeMapTradingCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 106  : 	Method(GetTechTradingCount);

	push	0
	push	OFFSET ?lGetTechTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTechTradingCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@NBGBMJCG@GetTechTradingCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 107  : 	Method(IsTechTrading);

	push	0
	push	OFFSET ?lIsTechTrading@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsTechTrading
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@COFKMLIK@IsTechTrading?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 108  : 	Method(ChangeTechTradingCount);

	push	0
	push	OFFSET ?lChangeTechTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeTechTradingCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@IPFPHLKG@ChangeTechTradingCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 109  : 	Method(GetGoldTradingCount);

	push	0
	push	OFFSET ?lGetGoldTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetGoldTradingCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@BPGEODED@GetGoldTradingCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 110  : 	Method(IsGoldTrading);

	push	0
	push	OFFSET ?lIsGoldTrading@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsGoldTrading
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@KAEMAEJL@IsGoldTrading?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 111  : 	Method(ChangeGoldTradingCount);

	push	0
	push	OFFSET ?lChangeGoldTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeGoldTradingCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@EBFKFBMD@ChangeGoldTradingCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 112  : 	Method(GetAllowEmbassyTradingAllowedCount);

	push	0
	push	OFFSET ?lGetAllowEmbassyTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetAllowEmbassyTradingAllowedCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CD@LLONGPJC@GetAllowEmbassyTradingAllowedCou@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 113  : 	Method(IsAllowEmbassyTradingAllowed);

	push	0
	push	OFFSET ?lIsAllowEmbassyTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsAllowEmbassyTradingAllowed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@DIGFBHJI@IsAllowEmbassyTradingAllowed?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 114  : 	Method(ChangeAllowEmbassyTradingAllowedCount);

	push	0
	push	OFFSET ?lChangeAllowEmbassyTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeAllowEmbassyTradingAllowedCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CG@BEHEJIFP@ChangeAllowEmbassyTradingAllowed@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 115  : 	Method(GetOpenBordersTradingAllowedCount);

	push	0
	push	OFFSET ?lGetOpenBordersTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetOpenBordersTradingAllowedCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@MBHJPBHF@GetOpenBordersTradingAllowedCoun@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 116  : 	Method(IsOpenBordersTradingAllowed);

	push	0
	push	OFFSET ?lIsOpenBordersTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsOpenBordersTradingAllowed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BM@HLLMNION@IsOpenBordersTradingAllowed?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 117  : 	Method(IsOpenBordersTradingAllowedWithTeam);

	push	0
	push	OFFSET ?lIsOpenBordersTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsOpenBordersTradingAllowedWithTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@BOMJELKF@IsOpenBordersTradingAllowedWithT@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 118  : 	Method(ChangeOpenBordersTradingAllowedCount);

	push	0
	push	OFFSET ?lChangeOpenBordersTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeOpenBordersTradingAllowedCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CF@FCJFHANM@ChangeOpenBordersTradingAllowedC@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 119  : 	Method(GetDefensivePactTradingAllowedCount);

	push	0
	push	OFFSET ?lGetDefensivePactTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetDefensivePactTradingAllowedCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@KNFHLOAD@GetDefensivePactTradingAllowedCo@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 120  : 	Method(IsDefensivePactTradingAllowed);

	push	0
	push	OFFSET ?lIsDefensivePactTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsDefensivePactTradingAllowed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BO@OFLLCFCN@IsDefensivePactTradingAllowed?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 121  : 	Method(IsDefensivePactTradingAllowedWithTeam);

	push	0
	push	OFFSET ?lIsDefensivePactTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsDefensivePactTradingAllowedWithTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CG@BCPFPOEC@IsDefensivePactTradingAllowedWit@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 122  : 	Method(ChangeDefensivePactTradingAllowedCount);

	push	0
	push	OFFSET ?lChangeDefensivePactTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeDefensivePactTradingAllowedCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CH@EICNJJPJ@ChangeDefensivePactTradingAllowe@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 123  : 	Method(IsResearchAgreementTradingAllowed);

	push	0
	push	OFFSET ?lIsResearchAgreementTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsResearchAgreementTradingAllowed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CC@GFNFBMJC@IsResearchAgreementTradingAllowe@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 124  : 	Method(IsResearchAgreementTradingAllowedWithTeam);

	push	0
	push	OFFSET ?lIsResearchAgreementTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsResearchAgreementTradingAllowedWithTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CK@KDMAAEHA@IsResearchAgreementTradingAllowe@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 125  : 	Method(IsTradeAgreementTradingAllowed);

	push	0
	push	OFFSET ?lIsTradeAgreementTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsTradeAgreementTradingAllowed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BP@ENAENOBB@IsTradeAgreementTradingAllowed?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 126  : 	Method(GetPermanentAllianceTradingCount);

	push	0
	push	OFFSET ?lGetPermanentAllianceTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetPermanentAllianceTradingCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CB@GGHNNDEF@GetPermanentAllianceTradingCount@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 127  : 	Method(IsPermanentAllianceTrading);

	push	0
	push	OFFSET ?lIsPermanentAllianceTrading@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsPermanentAllianceTrading
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BL@BIAKIMNH@IsPermanentAllianceTrading?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 128  : 	Method(ChangePermanentAllianceTradingCount);

	push	0
	push	OFFSET ?lChangePermanentAllianceTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangePermanentAllianceTradingCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0CE@IDADOHMI@ChangePermanentAllianceTradingCo@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 129  : 	Method(GetBridgeBuildingCount);

	push	0
	push	OFFSET ?lGetBridgeBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetBridgeBuildingCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@BIPIFCLG@GetBridgeBuildingCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 130  : 	Method(IsBridgeBuilding);

	push	0
	push	OFFSET ?lIsBridgeBuilding@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsBridgeBuilding
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@EOIEJOOG@IsBridgeBuilding?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 131  : 	Method(ChangeBridgeBuildingCount);

	push	0
	push	OFFSET ?lChangeBridgeBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeBridgeBuildingCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@OOFPJIPJ@ChangeBridgeBuildingCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 132  : 	Method(GetWaterWorkCount);

	push	0
	push	OFFSET ?lGetWaterWorkCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetWaterWorkCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@FPGAKCHL@GetWaterWorkCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 133  : 	Method(IsWaterWork);

	push	0
	push	OFFSET ?lIsWaterWork@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsWaterWork
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@NBIECCOL@IsWaterWork?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 134  : 	Method(ChangeWaterWorkCount);

	push	0
	push	OFFSET ?lChangeWaterWorkCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeWaterWorkCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@MBAHMEHB@ChangeWaterWorkCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 135  : 
; 136  : 	Method(GetBorderObstacleCount);

	push	0
	push	OFFSET ?lGetBorderObstacleCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetBorderObstacleCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@JNAPMEIH@GetBorderObstacleCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 137  : 	Method(IsBorderObstacle);

	push	0
	push	OFFSET ?lIsBorderObstacle@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsBorderObstacle
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@GMOJKNBD@IsBorderObstacle?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 138  : 	Method(ChangeBorderObstacleCount);

	push	0
	push	OFFSET ?lChangeBorderObstacleCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeBorderObstacleCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@GLKIAOMI@ChangeBorderObstacleCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 139  : 
; 140  : 	Method(IsMapCentering);

	push	0
	push	OFFSET ?lIsMapCentering@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsMapCentering
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@POBADFKJ@IsMapCentering?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 141  : 	Method(SetMapCentering);

	push	0
	push	OFFSET ?lSetMapCentering@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lSetMapCentering
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@IMBEDMDH@SetMapCentering?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 142  : 
; 143  : 	Method(GetID);

	push	0
	push	OFFSET ?lGetID@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetID
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_05CLBJHDA@GetID?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 144  : 
; 145  : 	Method(GetTechShareCount);

	push	0
	push	OFFSET ?lGetTechShareCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTechShareCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@EGHNMPBI@GetTechShareCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 146  : 	Method(IsTechShare);

	push	0
	push	OFFSET ?lIsTechShare@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsTechShare
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0M@OBCLDCGP@IsTechShare?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 147  : 	Method(ChangeTechShareCount);

	push	0
	push	OFFSET ?lChangeTechShareCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeTechShareCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@NIBKKJBC@ChangeTechShareCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 148  : 
; 149  : 	Method(GetExtraMoves);

	push	0
	push	OFFSET ?lGetExtraMoves@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetExtraMoves
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@LOCEBOPL@GetExtraMoves?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 150  : 	Method(ChangeExtraMoves);

	push	0
	push	OFFSET ?lChangeExtraMoves@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeExtraMoves
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@INOILHHC@ChangeExtraMoves?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 151  : 
; 152  : 	Method(CanEmbark);

	push	0
	push	OFFSET ?lCanEmbark@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCanEmbark
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09PEMMPAAH@CanEmbark?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 153  : 	Method(CanDefensiveEmbark);

	push	0
	push	OFFSET ?lCanDefensiveEmbark@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCanDefensiveEmbark
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@JOGKCNGC@CanDefensiveEmbark?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 154  : 
; 155  : 	Method(IsHasMet);

	push	0
	push	OFFSET ?lIsHasMet@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsHasMet
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_08CPBHIAFJ@IsHasMet?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 156  : 	Method(IsAtWar);

	push	0
	push	OFFSET ?lIsAtWar@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsAtWar
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_07LLBPCBFI@IsAtWar?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 157  : 	Method(IsPermanentWarPeace);

	push	0
	push	OFFSET ?lIsPermanentWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsPermanentWarPeace
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@EGALMELK@IsPermanentWarPeace?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 158  : 	Method(SetPermanentWarPeace);

	push	0
	push	OFFSET ?lSetPermanentWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lSetPermanentWarPeace
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@EPDFKBOJ@SetPermanentWarPeace?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 159  : 
; 160  : 	Method(GetLiberatedByTeam);

	push	0
	push	OFFSET ?lGetLiberatedByTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetLiberatedByTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@LGHLLPMK@GetLiberatedByTeam?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 161  : 	Method(GetKilledByTeam);

	push	0
	push	OFFSET ?lGetKilledByTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetKilledByTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@NJNCGNLH@GetKilledByTeam?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 162  : 
; 163  : 	Method(HasEmbassyAtTeam);

	push	0
	push	OFFSET ?lHasEmbassyAtTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lHasEmbassyAtTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@JJBFLANF@HasEmbassyAtTeam?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 164  : 	Method(IsAllowsOpenBordersToTeam);

	push	0
	push	OFFSET ?lIsAllowsOpenBordersToTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsAllowsOpenBordersToTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@EFEMHBAH@IsAllowsOpenBordersToTeam?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 165  : 	Method(IsForcePeace);

	push	0
	push	OFFSET ?lIsForcePeace@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsForcePeace
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@FCDEFIBF@IsForcePeace?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 166  : 	Method(IsDefensivePact);

	push	0
	push	OFFSET ?lIsDefensivePact@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsDefensivePact
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@POCLIDPD@IsDefensivePact?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 167  : 	Method(GetRouteChange);

	push	0
	push	OFFSET ?lGetRouteChange@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetRouteChange
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0P@IGFANFMH@GetRouteChange?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 168  : 	Method(ChangeRouteChange);

	push	0
	push	OFFSET ?lChangeRouteChange@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeRouteChange
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@BCAHCCOK@ChangeRouteChange?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 169  : 	Method(GetProjectCount);

	push	0
	push	OFFSET ?lGetProjectCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@BBEJKGON@GetProjectCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 170  : 	Method(GetProjectDefaultArtType);

	push	0
	push	OFFSET ?lGetProjectDefaultArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectDefaultArtType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@LCJLHNCJ@GetProjectDefaultArtType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 171  : 	Method(SetProjectDefaultArtType);

	push	0
	push	OFFSET ?lSetProjectDefaultArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lSetProjectDefaultArtType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@BBDBBALM@SetProjectDefaultArtType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 172  : 	Method(GetProjectArtType);

	push	0
	push	OFFSET ?lGetProjectArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectArtType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@OJFDMKL@GetProjectArtType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 173  : 	Method(SetProjectArtType);

	push	0
	push	OFFSET ?lSetProjectArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lSetProjectArtType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@CLJOLHLF@SetProjectArtType?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 174  : 	Method(IsProjectMaxedOut);

	push	0
	push	OFFSET ?lIsProjectMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsProjectMaxedOut
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@OBMJOMIK@IsProjectMaxedOut?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 175  : 	Method(IsProjectAndArtMaxedOut);

	push	0
	push	OFFSET ?lIsProjectAndArtMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsProjectAndArtMaxedOut
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@JBHBEBAH@IsProjectAndArtMaxedOut?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 176  : 	Method(ChangeProjectCount);

	push	0
	push	OFFSET ?lChangeProjectCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeProjectCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@FEACKNGP@ChangeProjectCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 177  : 	Method(GetProjectMaking);

	push	0
	push	OFFSET ?lGetProjectMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectMaking
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@MNJFAHNC@GetProjectMaking?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 178  : 	Method(GetUnitClassCount);

	push	0
	push	OFFSET ?lGetUnitClassCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetUnitClassCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BC@OMEKCEJN@GetUnitClassCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 179  : 	Method(IsUnitClassMaxedOut);

	push	0
	push	OFFSET ?lIsUnitClassMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsUnitClassMaxedOut
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@KOKPIAGA@IsUnitClassMaxedOut?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 180  : 	Method(GetBuildingClassCount);

	push	0
	push	OFFSET ?lGetBuildingClassCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetBuildingClassCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@LKAPFNIF@GetBuildingClassCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 181  : 	Method(IsBuildingClassMaxedOut);

	push	0
	push	OFFSET ?lIsBuildingClassMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsBuildingClassMaxedOut
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BI@BIOFBBJB@IsBuildingClassMaxedOut?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 182  : 	Method(GetObsoleteBuildingCount);

	push	0
	push	OFFSET ?lGetObsoleteBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetObsoleteBuildingCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BJ@GGDHCIO@GetObsoleteBuildingCount?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 183  : 	Method(IsObsoleteBuilding);

	push	0
	push	OFFSET ?lIsObsoleteBuilding@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsObsoleteBuilding
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BD@BHDHONFE@IsObsoleteBuilding?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 184  : 
; 185  : 	Method(IsHasResearchAgreement);

	push	0
	push	OFFSET ?lIsHasResearchAgreement@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsHasResearchAgreement
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BH@CMBGPOHA@IsHasResearchAgreement?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 186  : 	Method(IsHasTradeAgreement);

	push	0
	push	OFFSET ?lIsHasTradeAgreement@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsHasTradeAgreement
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@NNGJNGAK@IsHasTradeAgreement?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 187  : 
; 188  : 	Method(IsHasTech);

	push	0
	push	OFFSET ?lIsHasTech@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsHasTech
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09MLCFFPHJ@IsHasTech?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 189  : 	Method(SetHasTech);

	push	0
	push	OFFSET ?lSetHasTech@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lSetHasTech
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0L@JDHELDFB@SetHasTech?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 190  : 
; 191  : 	Method(GetTeamTechs);

	push	0
	push	OFFSET ?lGetTeamTechs@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTeamTechs
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0N@DDNMCBKC@GetTeamTechs?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 192  : 
; 193  : 	Method(GetImprovementYieldChange);

	push	0
	push	OFFSET ?lGetImprovementYieldChange@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetImprovementYieldChange
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BK@CIPJPCMO@GetImprovementYieldChange?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 194  : 	Method(ChangeImprovementYieldChange);

	push	0
	push	OFFSET ?lChangeImprovementYieldChange@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeImprovementYieldChange
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BN@CKJIDBEK@ChangeImprovementYieldChange?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 195  : 
; 196  : 	Method(IsHomeOfUnitedNations);

	push	0
	push	OFFSET ?lIsHomeOfUnitedNations@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsHomeOfUnitedNations
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BG@BJMOOMMF@IsHomeOfUnitedNations?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 197  : 
; 198  : 	Method(GetVictoryCountdown);

	push	0
	push	OFFSET ?lGetVictoryCountdown@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetVictoryCountdown
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@ICLOIKDM@GetVictoryCountdown?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 199  : 	Method(GetVictoryDelay);

	push	0
	push	OFFSET ?lGetVictoryDelay@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetVictoryDelay
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BA@HPOFMAMJ@GetVictoryDelay?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 200  : 	Method(CanLaunch);

	push	0
	push	OFFSET ?lCanLaunch@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCanLaunch
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_09KKPMLEOP@CanLaunch?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 201  : 
; 202  : 	Method(GetVictoryPoints);

	push	0
	push	OFFSET ?lGetVictoryPoints@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetVictoryPoints
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BB@EMIECCCP@GetVictoryPoints?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 203  : 	Method(ChangeVictoryPoints);

	push	0
	push	OFFSET ?lChangeVictoryPoints@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeVictoryPoints
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BE@EPHHILCI@ChangeVictoryPoints?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 204  : 
; 205  : 	Method(GetCurrentEra);

	push	0
	push	OFFSET ?lGetCurrentEra@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetCurrentEra
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@DBDBEBPD@GetCurrentEra?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 206  : 	Method(SetCurrentEra);

	push	0
	push	OFFSET ?lSetCurrentEra@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lSetCurrentEra
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0O@EOCPPCIE@SetCurrentEra?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 207  : 
; 208  : 	Method(UpdateEmbarkGraphics);

	push	0
	push	OFFSET ?lUpdateEmbarkGraphics@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lUpdateEmbarkGraphics
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_0BF@NOAGOBIP@UpdateEmbarkGraphics?$AA@
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 209  : }

	pop	ebp
	ret	0
?PushMethods@CvLuaTeam@@SAXPAUlua_State@@H@Z ENDP	; CvLuaTeam::PushMethods
_TEXT	ENDS
PUBLIC	??_C@_04GBPANCCF@Team?$AA@			; `string'
PUBLIC	?GetTypeName@CvLuaTeam@@SAPBDXZ			; CvLuaTeam::GetTypeName
;	COMDAT ??_C@_04GBPANCCF@Team?$AA@
CONST	SEGMENT
??_C@_04GBPANCCF@Team?$AA@ DB 'Team', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?GetTypeName@CvLuaTeam@@SAPBDXZ
_TEXT	SEGMENT
?GetTypeName@CvLuaTeam@@SAPBDXZ PROC			; CvLuaTeam::GetTypeName, COMDAT

; 212  : {

	push	ebp
	mov	ebp, esp

; 213  : 	return "Team";

	mov	eax, OFFSET ??_C@_04GBPANCCF@Team?$AA@

; 214  : }

	pop	ebp
	ret	0
?GetTypeName@CvLuaTeam@@SAPBDXZ ENDP			; CvLuaTeam::GetTypeName
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAXPAUlua_State@@PAVCvTeam@@@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::Push
PUBLIC	??_C@_05EPHHAOKA@Teams?$AA@			; `string'
EXTRN	_lua_rawseti:PROC
EXTRN	?m_aTeams@CvTeam@@1PAV1@A:DWORD			; CvTeam::m_aTeams
EXTRN	_lua_pushvalue:PROC
EXTRN	_lua_createtable:PROC
EXTRN	_lua_settop:PROC
EXTRN	_lua_type:PROC
EXTRN	_lua_getfield:PROC
;	COMDAT ??_C@_05EPHHAOKA@Teams?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvteam.h
CONST	SEGMENT
??_C@_05EPHHAOKA@Teams?$AA@ DB 'Teams', 00H		; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluateam.cpp
CONST	ENDS
;	COMDAT ?pRegister@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkTeam$217754 = -8					; size = 4
_i$217750 = -4						; size = 4
_L$ = 8							; size = 4
?pRegister@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::pRegister, COMDAT

; 222  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 223  : 	lua_getglobal(L, "Teams");

	push	OFFSET ??_C@_05EPHHAOKA@Teams?$AA@
	push	-10002					; ffffd8eeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 224  : 	if(lua_isnil(L, -1))

	push	-1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@pRegister

; 225  : 	{
; 226  : 		lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 227  : 		lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 228  : 		lua_pushvalue(L, -1);

	push	-1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushvalue
	add	esp, 8

; 229  : 		lua_setglobal(L, "Teams");

	push	OFFSET ??_C@_05EPHHAOKA@Teams?$AA@
	push	-10002					; ffffd8eeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH
$LN4@pRegister:

; 230  : 	}
; 231  : 
; 232  : 	for(int i = 0; i < MAX_TEAMS; ++i)

	mov	DWORD PTR _i$217750[ebp], 0
	jmp	SHORT $LN3@pRegister
$LN2@pRegister:
	mov	eax, DWORD PTR _i$217750[ebp]
	add	eax, 1
	mov	DWORD PTR _i$217750[ebp], eax
$LN3@pRegister:
	cmp	DWORD PTR _i$217750[ebp], 64		; 00000040H
	jge	SHORT $LN1@pRegister

; 233  : 	{
; 234  : 		CvTeam* pkTeam = &(GET_TEAM((TeamTypes)i));

	mov	ecx, DWORD PTR _i$217750[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _pkTeam$217754[ebp], ecx

; 235  : 		CvLuaTeam::Push(L, pkTeam);

	mov	edx, DWORD PTR _pkTeam$217754[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?Push@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAXPAUlua_State@@PAVCvTeam@@@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::Push
	add	esp, 8

; 236  : 		lua_rawseti(L, -2, i);

	mov	ecx, DWORD PTR _i$217750[ebp]
	push	ecx
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH

; 237  : 	}

	jmp	SHORT $LN2@pRegister
$LN1@pRegister:

; 238  : 
; 239  : 	return 0;

	xor	eax, eax

; 240  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?pRegister@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::pRegister
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
EXTRN	_lua_pushboolean:PROC
; Function compile flags: /Odtp
;	COMDAT ?lIsNone@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bDoesNotExist$ = -1					; size = 1
_L$ = 8							; size = 4
?lIsNone@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lIsNone, COMDAT

; 246  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 247  : #ifdef AUI_WARNING_FIXES
; 248  : 	const bool bDoesNotExist = (GetInstance(L, 1, false) == NULL);
; 249  : 	lua_pushboolean(L, bDoesNotExist ? 1 : 0);
; 250  : #else
; 251  : 	const bool bDoesNotExist = (GetInstance(L, false) == NULL);

	push	1
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	test	eax, eax
	sete	cl
	mov	BYTE PTR _bDoesNotExist$[ebp], cl

; 252  : 	lua_pushboolean(L, bDoesNotExist);

	movzx	edx, BYTE PTR _bDoesNotExist$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 253  : #endif
; 254  : 
; 255  : 	return 1;

	mov	eax, 1

; 256  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsNone@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lIsNone
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes>
EXTRN	?addTeam@CvTeam@@QAEXW4TeamTypes@@@Z:PROC	; CvTeam::addTeam
; Function compile flags: /Odtp
;	COMDAT ?lAddTeam@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddTeam@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lAddTeam, COMDAT

; 262  : {

	push	ebp
	mov	ebp, esp

; 263  : 	return BasicLuaMethod(L, &CvTeam::addTeam);

	push	OFFSET ?addTeam@CvTeam@@QAEXW4TeamTypes@@@Z ; CvTeam::addTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes>
	add	esp, 8

; 264  : }

	pop	ebp
	ret	0
?lAddTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lAddTeam
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
EXTRN	?canChangeWarPeace@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC ; CvTeam::canChangeWarPeace
; Function compile flags: /Odtp
;	COMDAT ?lCanChangeWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanChangeWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lCanChangeWarPeace, COMDAT

; 270  : {

	push	ebp
	mov	ebp, esp

; 271  : 	return BasicLuaMethod(L, &CvTeam::canChangeWarPeace);

	push	OFFSET ?canChangeWarPeace@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::canChangeWarPeace
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 272  : }

	pop	ebp
	ret	0
?lCanChangeWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lCanChangeWarPeace
_TEXT	ENDS
EXTRN	?canDeclareWar@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC ; CvTeam::canDeclareWar
; Function compile flags: /Odtp
;	COMDAT ?lCanDeclareWar@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanDeclareWar@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lCanDeclareWar, COMDAT

; 277  : {

	push	ebp
	mov	ebp, esp

; 278  : 	return BasicLuaMethod(L, &CvTeam::canDeclareWar);

	push	OFFSET ?canDeclareWar@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::canDeclareWar
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 279  : }

	pop	ebp
	ret	0
?lCanDeclareWar@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lCanDeclareWar
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes,bool>
EXTRN	?declareWar@CvTeam@@QAEXW4TeamTypes@@_N@Z:PROC	; CvTeam::declareWar
; Function compile flags: /Odtp
;	COMDAT ?lDeclareWar@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDeclareWar@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lDeclareWar, COMDAT

; 284  : {

	push	ebp
	mov	ebp, esp

; 285  : 	return BasicLuaMethod(L, &CvTeam::declareWar);

	push	OFFSET ?declareWar@CvTeam@@QAEXW4TeamTypes@@_N@Z ; CvTeam::declareWar
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes,bool>
	add	esp, 8

; 286  : }

	pop	ebp
	ret	0
?lDeclareWar@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lDeclareWar
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@_N2@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes,bool,bool>
EXTRN	?makePeace@CvTeam@@QAEXW4TeamTypes@@_N1@Z:PROC	; CvTeam::makePeace
; Function compile flags: /Odtp
;	COMDAT ?lMakePeace@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lMakePeace@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lMakePeace, COMDAT

; 291  : {

	push	ebp
	mov	ebp, esp

; 292  : 	return BasicLuaMethod(L, &CvTeam::makePeace);

	push	OFFSET ?makePeace@CvTeam@@QAEXW4TeamTypes@@_N1@Z ; CvTeam::makePeace
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@_N2@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes,bool,bool>
	add	esp, 8

; 293  : }

	pop	ebp
	ret	0
?lMakePeace@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lMakePeace
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum TeamTypes>
EXTRN	?GetNumTurnsLockedIntoWar@CvTeam@@QBEHW4TeamTypes@@@Z:PROC ; CvTeam::GetNumTurnsLockedIntoWar
; Function compile flags: /Odtp
;	COMDAT ?lGetNumTurnsLockedIntoWar@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumTurnsLockedIntoWar@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetNumTurnsLockedIntoWar, COMDAT

; 298  : {

	push	ebp
	mov	ebp, esp

; 299  : 	return BasicLuaMethod(L, &CvTeam::GetNumTurnsLockedIntoWar);

	push	OFFSET ?GetNumTurnsLockedIntoWar@CvTeam@@QBEHW4TeamTypes@@@Z ; CvTeam::GetNumTurnsLockedIntoWar
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum TeamTypes>
	add	esp, 8

; 300  : }

	pop	ebp
	ret	0
?lGetNumTurnsLockedIntoWar@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetNumTurnsLockedIntoWar
_TEXT	ENDS
EXTRN	?meet@CvTeam@@QAEXW4TeamTypes@@_N@Z:PROC	; CvTeam::meet
EXTRN	_lua_toboolean:PROC
EXTRN	_lua_tointeger:PROC
; Function compile flags: /Odtp
;	COMDAT ?lMeet@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkTeam$ = -12						; size = 4
_eOtherTeam$ = -8					; size = 4
_bSuppressMessages$ = -1				; size = 1
_L$ = 8							; size = 4
?lMeet@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lMeet, COMDAT

; 305  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 306  : 	CvTeam* pkTeam = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkTeam$[ebp], eax

; 307  : 	TeamTypes eOtherTeam = (TeamTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOtherTeam$[ebp], eax

; 308  : 	const bool bSuppressMessages = lua_toboolean(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bSuppressMessages$[ebp], al

; 309  : 
; 310  : 	pkTeam->meet(eOtherTeam, bSuppressMessages);

	movzx	ecx, BYTE PTR _bSuppressMessages$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eOtherTeam$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkTeam$[ebp]
	call	?meet@CvTeam@@QAEXW4TeamTypes@@_N@Z	; CvTeam::meet

; 311  : 	return 0;

	xor	eax, eax

; 312  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lMeet@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lMeet
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
EXTRN	?GetScore@CvTeam@@QBEHXZ:PROC			; CvTeam::GetScore
; Function compile flags: /Odtp
;	COMDAT ?lGetScore@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScore@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lGetScore, COMDAT

; 316  : {

	push	ebp
	mov	ebp, esp

; 317  : 	return BasicLuaMethod(L, &CvTeam::GetScore);

	push	OFFSET ?GetScore@CvTeam@@QBEHXZ		; CvTeam::GetScore
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 318  : }

	pop	ebp
	ret	0
?lGetScore@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lGetScore
_TEXT	ENDS
EXTRN	?getPower@CvTeam@@QBEHXZ:PROC			; CvTeam::getPower
; Function compile flags: /Odtp
;	COMDAT ?lGetPower@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPower@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lGetPower, COMDAT

; 323  : {

	push	ebp
	mov	ebp, esp

; 324  : 	return BasicLuaMethod(L, &CvTeam::getPower);

	push	OFFSET ?getPower@CvTeam@@QBEHXZ		; CvTeam::getPower
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 325  : }

	pop	ebp
	ret	0
?lGetPower@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lGetPower
_TEXT	ENDS
EXTRN	?getDefensivePower@CvTeam@@QBEHXZ:PROC		; CvTeam::getDefensivePower
; Function compile flags: /Odtp
;	COMDAT ?lGetDefensivePower@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetDefensivePower@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetDefensivePower, COMDAT

; 330  : {

	push	ebp
	mov	ebp, esp

; 331  : 	return BasicLuaMethod(L, &CvTeam::getDefensivePower);

	push	OFFSET ?getDefensivePower@CvTeam@@QBEHXZ ; CvTeam::getDefensivePower
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 332  : }

	pop	ebp
	ret	0
?lGetDefensivePower@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetDefensivePower
_TEXT	ENDS
EXTRN	?getNumNukeUnits@CvTeam@@QBEHXZ:PROC		; CvTeam::getNumNukeUnits
; Function compile flags: /Odtp
;	COMDAT ?lGetNumNukeUnits@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumNukeUnits@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetNumNukeUnits, COMDAT

; 337  : {

	push	ebp
	mov	ebp, esp

; 338  : 	return BasicLuaMethod(L, &CvTeam::getNumNukeUnits);

	push	OFFSET ?getNumNukeUnits@CvTeam@@QBEHXZ	; CvTeam::getNumNukeUnits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 339  : }

	pop	ebp
	ret	0
?lGetNumNukeUnits@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetNumNukeUnits
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes>
EXTRN	?GetTeamVotingForInDiplo@CvTeam@@QBE?AW4TeamTypes@@XZ:PROC ; CvTeam::GetTeamVotingForInDiplo
; Function compile flags: /Odtp
;	COMDAT ?lGetTeamVotingForInDiplo@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTeamVotingForInDiplo@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetTeamVotingForInDiplo, COMDAT

; 344  : {

	push	ebp
	mov	ebp, esp

; 345  : 	return BasicLuaMethod(L, &CvTeam::GetTeamVotingForInDiplo);

	push	OFFSET ?GetTeamVotingForInDiplo@CvTeam@@QBE?AW4TeamTypes@@XZ ; CvTeam::GetTeamVotingForInDiplo
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes>
	add	esp, 8

; 346  : }

	pop	ebp
	ret	0
?lGetTeamVotingForInDiplo@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetTeamVotingForInDiplo
_TEXT	ENDS
EXTRN	?GetProjectedVotesFromMinorAllies@CvTeam@@QBEHXZ:PROC ; CvTeam::GetProjectedVotesFromMinorAllies
; Function compile flags: /Odtp
;	COMDAT ?lGetProjectedVotesFromMinorAllies@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectedVotesFromMinorAllies@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetProjectedVotesFromMinorAllies, COMDAT

; 351  : {

	push	ebp
	mov	ebp, esp

; 352  : 	return BasicLuaMethod(L, &CvTeam::GetProjectedVotesFromMinorAllies);

	push	OFFSET ?GetProjectedVotesFromMinorAllies@CvTeam@@QBEHXZ ; CvTeam::GetProjectedVotesFromMinorAllies
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 353  : }

	pop	ebp
	ret	0
?lGetProjectedVotesFromMinorAllies@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetProjectedVotesFromMinorAllies
_TEXT	ENDS
EXTRN	?GetProjectedVotesFromLiberatedMinors@CvTeam@@QBEHXZ:PROC ; CvTeam::GetProjectedVotesFromLiberatedMinors
; Function compile flags: /Odtp
;	COMDAT ?lGetProjectedVotesFromLiberatedMinors@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectedVotesFromLiberatedMinors@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetProjectedVotesFromLiberatedMinors, COMDAT

; 358  : {

	push	ebp
	mov	ebp, esp

; 359  : 	return BasicLuaMethod(L, &CvTeam::GetProjectedVotesFromLiberatedMinors);

	push	OFFSET ?GetProjectedVotesFromLiberatedMinors@CvTeam@@QBEHXZ ; CvTeam::GetProjectedVotesFromLiberatedMinors
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 360  : }

	pop	ebp
	ret	0
?lGetProjectedVotesFromLiberatedMinors@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetProjectedVotesFromLiberatedMinors
_TEXT	ENDS
EXTRN	?GetProjectedVotesFromCivs@CvTeam@@QBEHXZ:PROC	; CvTeam::GetProjectedVotesFromCivs
; Function compile flags: /Odtp
;	COMDAT ?lGetProjectedVotesFromCivs@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectedVotesFromCivs@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetProjectedVotesFromCivs, COMDAT

; 365  : {

	push	ebp
	mov	ebp, esp

; 366  : 	return BasicLuaMethod(L, &CvTeam::GetProjectedVotesFromCivs);

	push	OFFSET ?GetProjectedVotesFromCivs@CvTeam@@QBEHXZ ; CvTeam::GetProjectedVotesFromCivs
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 367  : }

	pop	ebp
	ret	0
?lGetProjectedVotesFromCivs@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetProjectedVotesFromCivs
_TEXT	ENDS
EXTRN	?GetTotalProjectedVotes@CvTeam@@QBEHXZ:PROC	; CvTeam::GetTotalProjectedVotes
; Function compile flags: /Odtp
;	COMDAT ?lGetTotalProjectedVotes@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalProjectedVotes@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetTotalProjectedVotes, COMDAT

; 372  : {

	push	ebp
	mov	ebp, esp

; 373  : 	return BasicLuaMethod(L, &CvTeam::GetTotalProjectedVotes);

	push	OFFSET ?GetTotalProjectedVotes@CvTeam@@QBEHXZ ; CvTeam::GetTotalProjectedVotes
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 374  : }

	pop	ebp
	ret	0
?lGetTotalProjectedVotes@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetTotalProjectedVotes
_TEXT	ENDS
EXTRN	?GetTotalSecuredVotes@CvTeam@@QBEHXZ:PROC	; CvTeam::GetTotalSecuredVotes
; Function compile flags: /Odtp
;	COMDAT ?lGetTotalSecuredVotes@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalSecuredVotes@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetTotalSecuredVotes, COMDAT

; 379  : {

	push	ebp
	mov	ebp, esp

; 380  : 	return BasicLuaMethod(L, &CvTeam::GetTotalSecuredVotes);

	push	OFFSET ?GetTotalSecuredVotes@CvTeam@@QBEHXZ ; CvTeam::GetTotalSecuredVotes
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 381  : }

	pop	ebp
	ret	0
?lGetTotalSecuredVotes@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetTotalSecuredVotes
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEH_N@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,bool>
EXTRN	?getAtWarCount@CvTeam@@QBEH_N@Z:PROC		; CvTeam::getAtWarCount
; Function compile flags: /Odtp
;	COMDAT ?lGetAtWarCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAtWarCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetAtWarCount, COMDAT

; 386  : {

	push	ebp
	mov	ebp, esp

; 387  : 	return BasicLuaMethod(L, &CvTeam::getAtWarCount);

	push	OFFSET ?getAtWarCount@CvTeam@@QBEH_N@Z	; CvTeam::getAtWarCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEH_N@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,bool>
	add	esp, 8

; 388  : }

	pop	ebp
	ret	0
?lGetAtWarCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetAtWarCount
_TEXT	ENDS
EXTRN	?getHasMetCivCount@CvTeam@@QBEH_N@Z:PROC	; CvTeam::getHasMetCivCount
; Function compile flags: /Odtp
;	COMDAT ?lGetHasMetCivCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHasMetCivCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetHasMetCivCount, COMDAT

; 393  : {

	push	ebp
	mov	ebp, esp

; 394  : 	return BasicLuaMethod(L, &CvTeam::getHasMetCivCount);

	push	OFFSET ?getHasMetCivCount@CvTeam@@QBEH_N@Z ; CvTeam::getHasMetCivCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEH_N@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,bool>
	add	esp, 8

; 395  : }

	pop	ebp
	ret	0
?lGetHasMetCivCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetHasMetCivCount
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
EXTRN	?hasMetHuman@CvTeam@@QBE_NXZ:PROC		; CvTeam::hasMetHuman
; Function compile flags: /Odtp
;	COMDAT ?lHasMetHuman@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasMetHuman@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lHasMetHuman, COMDAT

; 400  : {

	push	ebp
	mov	ebp, esp

; 401  : 	return BasicLuaMethod(L, &CvTeam::hasMetHuman);

	push	OFFSET ?hasMetHuman@CvTeam@@QBE_NXZ	; CvTeam::hasMetHuman
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 402  : }

	pop	ebp
	ret	0
?lHasMetHuman@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lHasMetHuman
_TEXT	ENDS
EXTRN	?getDefensivePactCount@CvTeam@@QBEHW4TeamTypes@@@Z:PROC ; CvTeam::getDefensivePactCount
; Function compile flags: /Odtp
;	COMDAT ?lGetDefensivePactCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetDefensivePactCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetDefensivePactCount, COMDAT

; 407  : {

	push	ebp
	mov	ebp, esp

; 408  : 	return BasicLuaMethod(L, &CvTeam::getDefensivePactCount);

	push	OFFSET ?getDefensivePactCount@CvTeam@@QBEHW4TeamTypes@@@Z ; CvTeam::getDefensivePactCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum TeamTypes>
	add	esp, 8

; 409  : }

	pop	ebp
	ret	0
?lGetDefensivePactCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetDefensivePactCount
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4UnitClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum UnitClassTypes>
EXTRN	?getUnitClassMaking@CvTeam@@QBEHW4UnitClassTypes@@@Z:PROC ; CvTeam::getUnitClassMaking
; Function compile flags: /Odtp
;	COMDAT ?lGetUnitClassMaking@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitClassMaking@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetUnitClassMaking, COMDAT

; 414  : {

	push	ebp
	mov	ebp, esp

; 415  : 	return BasicLuaMethod(L, &CvTeam::getUnitClassMaking);

	push	OFFSET ?getUnitClassMaking@CvTeam@@QBEHW4UnitClassTypes@@@Z ; CvTeam::getUnitClassMaking
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4UnitClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum UnitClassTypes>
	add	esp, 8

; 416  : }

	pop	ebp
	ret	0
?lGetUnitClassMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetUnitClassMaking
_TEXT	ENDS
EXTRN	?getUnitClassCountPlusMaking@CvTeam@@QBEHW4UnitClassTypes@@@Z:PROC ; CvTeam::getUnitClassCountPlusMaking
; Function compile flags: /Odtp
;	COMDAT ?lGetUnitClassCountPlusMaking@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitClassCountPlusMaking@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetUnitClassCountPlusMaking, COMDAT

; 421  : {

	push	ebp
	mov	ebp, esp

; 422  : 	return BasicLuaMethod(L, &CvTeam::getUnitClassCountPlusMaking);

	push	OFFSET ?getUnitClassCountPlusMaking@CvTeam@@QBEHW4UnitClassTypes@@@Z ; CvTeam::getUnitClassCountPlusMaking
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4UnitClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum UnitClassTypes>
	add	esp, 8

; 423  : }

	pop	ebp
	ret	0
?lGetUnitClassCountPlusMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetUnitClassCountPlusMaking
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum BuildingClassTypes>
EXTRN	?getBuildingClassMaking@CvTeam@@QBEHW4BuildingClassTypes@@@Z:PROC ; CvTeam::getBuildingClassMaking
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingClassMaking@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingClassMaking@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetBuildingClassMaking, COMDAT

; 428  : {

	push	ebp
	mov	ebp, esp

; 429  : 	return BasicLuaMethod(L, &CvTeam::getBuildingClassMaking);

	push	OFFSET ?getBuildingClassMaking@CvTeam@@QBEHW4BuildingClassTypes@@@Z ; CvTeam::getBuildingClassMaking
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum BuildingClassTypes>
	add	esp, 8

; 430  : }

	pop	ebp
	ret	0
?lGetBuildingClassMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetBuildingClassMaking
_TEXT	ENDS
EXTRN	?getBuildingClassCountPlusMaking@CvTeam@@QBEHW4BuildingClassTypes@@@Z:PROC ; CvTeam::getBuildingClassCountPlusMaking
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingClassCountPlusMaking@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingClassCountPlusMaking@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetBuildingClassCountPlusMaking, COMDAT

; 435  : {

	push	ebp
	mov	ebp, esp

; 436  : 	return BasicLuaMethod(L, &CvTeam::getBuildingClassCountPlusMaking);

	push	OFFSET ?getBuildingClassCountPlusMaking@CvTeam@@QBEHW4BuildingClassTypes@@@Z ; CvTeam::getBuildingClassCountPlusMaking
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum BuildingClassTypes>
	add	esp, 8

; 437  : }

	pop	ebp
	ret	0
?lGetBuildingClassCountPlusMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetBuildingClassCountPlusMaking
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HPAVCvArea@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHPAVCvArea@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,CvArea *>
EXTRN	?countNumUnitsByArea@CvTeam@@QBEHPAVCvArea@@@Z:PROC ; CvTeam::countNumUnitsByArea
; Function compile flags: /Odtp
;	COMDAT ?lCountNumUnitsByArea@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountNumUnitsByArea@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lCountNumUnitsByArea, COMDAT

; 443  : {

	push	ebp
	mov	ebp, esp

; 444  : 	return BasicLuaMethod(L, &CvTeam::countNumUnitsByArea);

	push	OFFSET ?countNumUnitsByArea@CvTeam@@QBEHPAVCvArea@@@Z ; CvTeam::countNumUnitsByArea
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HPAVCvArea@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHPAVCvArea@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,CvArea *>
	add	esp, 8

; 445  : }

	pop	ebp
	ret	0
?lCountNumUnitsByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lCountNumUnitsByArea
_TEXT	ENDS
EXTRN	?countNumCitiesByArea@CvTeam@@QBEHPAVCvArea@@@Z:PROC ; CvTeam::countNumCitiesByArea
; Function compile flags: /Odtp
;	COMDAT ?lCountNumCitiesByArea@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountNumCitiesByArea@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lCountNumCitiesByArea, COMDAT

; 450  : {

	push	ebp
	mov	ebp, esp

; 451  : 	return BasicLuaMethod(L, &CvTeam::countNumCitiesByArea);

	push	OFFSET ?countNumCitiesByArea@CvTeam@@QBEHPAVCvArea@@@Z ; CvTeam::countNumCitiesByArea
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HPAVCvArea@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHPAVCvArea@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,CvArea *>
	add	esp, 8

; 452  : }

	pop	ebp
	ret	0
?lCountNumCitiesByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lCountNumCitiesByArea
_TEXT	ENDS
EXTRN	?countTotalPopulationByArea@CvTeam@@QBEHPAVCvArea@@@Z:PROC ; CvTeam::countTotalPopulationByArea
; Function compile flags: /Odtp
;	COMDAT ?lCountTotalPopulationByArea@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountTotalPopulationByArea@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lCountTotalPopulationByArea, COMDAT

; 457  : {

	push	ebp
	mov	ebp, esp

; 458  : 	return BasicLuaMethod(L, &CvTeam::countTotalPopulationByArea);

	push	OFFSET ?countTotalPopulationByArea@CvTeam@@QBEHPAVCvArea@@@Z ; CvTeam::countTotalPopulationByArea
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HPAVCvArea@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHPAVCvArea@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,CvArea *>
	add	esp, 8

; 459  : }

	pop	ebp
	ret	0
?lCountTotalPopulationByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lCountTotalPopulationByArea
_TEXT	ENDS
EXTRN	?countEnemyDangerByArea@CvTeam@@QBEHPAVCvArea@@@Z:PROC ; CvTeam::countEnemyDangerByArea
; Function compile flags: /Odtp
;	COMDAT ?lCountEnemyDangerByArea@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountEnemyDangerByArea@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lCountEnemyDangerByArea, COMDAT

; 464  : {

	push	ebp
	mov	ebp, esp

; 465  : 	return BasicLuaMethod(L, &CvTeam::countEnemyDangerByArea);

	push	OFFSET ?countEnemyDangerByArea@CvTeam@@QBEHPAVCvArea@@@Z ; CvTeam::countEnemyDangerByArea
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HPAVCvArea@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHPAVCvArea@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,CvArea *>
	add	esp, 8

; 466  : }

	pop	ebp
	ret	0
?lCountEnemyDangerByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lCountEnemyDangerByArea
_TEXT	ENDS
EXTRN	?isHuman@CvTeam@@QBE_NXZ:PROC			; CvTeam::isHuman
; Function compile flags: /Odtp
;	COMDAT ?lIsHuman@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHuman@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lIsHuman, COMDAT

; 471  : {

	push	ebp
	mov	ebp, esp

; 472  : 	return BasicLuaMethod(L, &CvTeam::isHuman);

	push	OFFSET ?isHuman@CvTeam@@QBE_NXZ		; CvTeam::isHuman
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 473  : }

	pop	ebp
	ret	0
?lIsHuman@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lIsHuman
_TEXT	ENDS
EXTRN	?isBarbarian@CvTeam@@QBE_NXZ:PROC		; CvTeam::isBarbarian
; Function compile flags: /Odtp
;	COMDAT ?lIsBarbarian@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBarbarian@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsBarbarian, COMDAT

; 478  : {

	push	ebp
	mov	ebp, esp

; 479  : 	return BasicLuaMethod(L, &CvTeam::isBarbarian);

	push	OFFSET ?isBarbarian@CvTeam@@QBE_NXZ	; CvTeam::isBarbarian
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 480  : }

	pop	ebp
	ret	0
?lIsBarbarian@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsBarbarian
_TEXT	ENDS
EXTRN	?isMinorCiv@CvTeam@@QBE_NXZ:PROC		; CvTeam::isMinorCiv
; Function compile flags: /Odtp
;	COMDAT ?lIsMinorCiv@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMinorCiv@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsMinorCiv, COMDAT

; 485  : {

	push	ebp
	mov	ebp, esp

; 486  : 	return BasicLuaMethod(L, &CvTeam::isMinorCiv);

	push	OFFSET ?isMinorCiv@CvTeam@@QBE_NXZ	; CvTeam::isMinorCiv
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 487  : }

	pop	ebp
	ret	0
?lIsMinorCiv@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsMinorCiv
_TEXT	ENDS
EXTRN	?IsMinorCivWarmonger@CvTeam@@QBE_NXZ:PROC	; CvTeam::IsMinorCivWarmonger
; Function compile flags: /Odtp
;	COMDAT ?lIsMinorCivWarmonger@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMinorCivWarmonger@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsMinorCivWarmonger, COMDAT

; 492  : {

	push	ebp
	mov	ebp, esp

; 493  : 	return BasicLuaMethod(L, &CvTeam::IsMinorCivWarmonger);

	push	OFFSET ?IsMinorCivWarmonger@CvTeam@@QBE_NXZ ; CvTeam::IsMinorCivWarmonger
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 494  : }

	pop	ebp
	ret	0
?lIsMinorCivWarmonger@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsMinorCivWarmonger
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum PlayerTypes>
EXTRN	?getLeaderID@CvTeam@@QBE?AW4PlayerTypes@@XZ:PROC ; CvTeam::getLeaderID
; Function compile flags: /Odtp
;	COMDAT ?lGetLeaderID@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLeaderID@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetLeaderID, COMDAT

; 499  : {

	push	ebp
	mov	ebp, esp

; 500  : 	return BasicLuaMethod(L, &CvTeam::getLeaderID);

	push	OFFSET ?getLeaderID@CvTeam@@QBE?AW4PlayerTypes@@XZ ; CvTeam::getLeaderID
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 501  : }

	pop	ebp
	ret	0
?lGetLeaderID@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetLeaderID
_TEXT	ENDS
EXTRN	?getSecretaryID@CvTeam@@QBE?AW4PlayerTypes@@XZ:PROC ; CvTeam::getSecretaryID
; Function compile flags: /Odtp
;	COMDAT ?lGetSecretaryID@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSecretaryID@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetSecretaryID, COMDAT

; 506  : {

	push	ebp
	mov	ebp, esp

; 507  : 	return BasicLuaMethod(L, &CvTeam::getSecretaryID);

	push	OFFSET ?getSecretaryID@CvTeam@@QBE?AW4PlayerTypes@@XZ ; CvTeam::getSecretaryID
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 508  : }

	pop	ebp
	ret	0
?lGetSecretaryID@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetSecretaryID
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4HandicapTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum HandicapTypes>
EXTRN	?getHandicapType@CvTeam@@QBE?AW4HandicapTypes@@XZ:PROC ; CvTeam::getHandicapType
; Function compile flags: /Odtp
;	COMDAT ?lGetHandicapType@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHandicapType@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetHandicapType, COMDAT

; 513  : {

	push	ebp
	mov	ebp, esp

; 514  : 	return BasicLuaMethod(L, &CvTeam::getHandicapType);

	push	OFFSET ?getHandicapType@CvTeam@@QBE?AW4HandicapTypes@@XZ ; CvTeam::getHandicapType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4HandicapTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum HandicapTypes>
	add	esp, 8

; 515  : }

	pop	ebp
	ret	0
?lGetHandicapType@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetHandicapType
_TEXT	ENDS
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	_lua_pushstring:PROC
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
EXTRN	?getName@CvTeam@@QBE?AVCvString@@XZ:PROC	; CvTeam::getName
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluateam.cpp
xdata$x	ENDS
;	COMDAT ?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv71 = -52						; size = 4
$T220332 = -48						; size = 4
$T220327 = -44						; size = 28
_pkTeam$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lGetName, COMDAT

; 520  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 521  : 	CvTeam* pkTeam = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkTeam$[ebp], eax

; 522  : 
; 523  : 	lua_pushstring(L, pkTeam->getName());

	lea	ecx, DWORD PTR $T220327[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkTeam$[ebp]
	call	?getName@CvTeam@@QBE?AVCvString@@XZ	; CvTeam::getName
	mov	DWORD PTR tv71[ebp], eax
	mov	edx, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T220332[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T220332[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T220327[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 524  : 	return 1;

	mov	eax, 1

; 525  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T220327[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lGetName
EXTRN	?getNameKey@CvTeam@@QBE?AVCvString@@XZ:PROC	; CvTeam::getNameKey
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluateam.cpp
xdata$x	ENDS
;	COMDAT ?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv71 = -52						; size = 4
$T220355 = -48						; size = 4
$T220350 = -44						; size = 28
_pkTeam$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetNameKey, COMDAT

; 530  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 531  : 	CvTeam* pkTeam = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkTeam$[ebp], eax

; 532  : 
; 533  : 	lua_pushstring(L, pkTeam->getNameKey());

	lea	ecx, DWORD PTR $T220350[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkTeam$[ebp]
	call	?getNameKey@CvTeam@@QBE?AVCvString@@XZ	; CvTeam::getNameKey
	mov	DWORD PTR tv71[ebp], eax
	mov	edx, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T220355[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T220355[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T220350[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 534  : 	return 1;

	mov	eax, 1

; 535  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T220350[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetNameKey
EXTRN	?getNumMembers@CvTeam@@QBEHXZ:PROC		; CvTeam::getNumMembers
; Function compile flags: /Odtp
;	COMDAT ?lGetNumMembers@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumMembers@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetNumMembers, COMDAT

; 539  : {

	push	ebp
	mov	ebp, esp

; 540  : 	return BasicLuaMethod(L, &CvTeam::getNumMembers);

	push	OFFSET ?getNumMembers@CvTeam@@QBEHXZ	; CvTeam::getNumMembers
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 541  : }

	pop	ebp
	ret	0
?lGetNumMembers@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetNumMembers
_TEXT	ENDS
PUBLIC	?isAlive@CvTeam@@QBE_NXZ			; CvTeam::isAlive
; Function compile flags: /Odtp
;	COMDAT ?lIsAlive@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAlive@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lIsAlive, COMDAT

; 546  : {

	push	ebp
	mov	ebp, esp

; 547  : 	return BasicLuaMethod(L, &CvTeam::isAlive);

	push	OFFSET ?isAlive@CvTeam@@QBE_NXZ		; CvTeam::isAlive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 548  : }

	pop	ebp
	ret	0
?lIsAlive@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lIsAlive
_TEXT	ENDS
EXTRN	?isEverAlive@CvTeam@@QBEHXZ:PROC		; CvTeam::isEverAlive
; Function compile flags: /Odtp
;	COMDAT ?lIsEverAlive@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsEverAlive@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsEverAlive, COMDAT

; 553  : {

	push	ebp
	mov	ebp, esp

; 554  : 	return BasicLuaMethod(L, &CvTeam::isEverAlive);

	push	OFFSET ?isEverAlive@CvTeam@@QBEHXZ	; CvTeam::isEverAlive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 555  : }

	pop	ebp
	ret	0
?lIsEverAlive@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsEverAlive
_TEXT	ENDS
EXTRN	?getNumCities@CvTeam@@QBEHXZ:PROC		; CvTeam::getNumCities
; Function compile flags: /Odtp
;	COMDAT ?lGetNumCities@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumCities@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetNumCities, COMDAT

; 560  : {

	push	ebp
	mov	ebp, esp

; 561  : 	return BasicLuaMethod(L, &CvTeam::getNumCities);

	push	OFFSET ?getNumCities@CvTeam@@QBEHXZ	; CvTeam::getNumCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 562  : }

	pop	ebp
	ret	0
?lGetNumCities@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetNumCities
_TEXT	ENDS
EXTRN	?getTotalPopulation@CvTeam@@QBEHXZ:PROC		; CvTeam::getTotalPopulation
; Function compile flags: /Odtp
;	COMDAT ?lGetTotalPopulation@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalPopulation@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetTotalPopulation, COMDAT

; 567  : {

	push	ebp
	mov	ebp, esp

; 568  : 	return BasicLuaMethod(L, &CvTeam::getTotalPopulation);

	push	OFFSET ?getTotalPopulation@CvTeam@@QBEHXZ ; CvTeam::getTotalPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 569  : }

	pop	ebp
	ret	0
?lGetTotalPopulation@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetTotalPopulation
_TEXT	ENDS
EXTRN	?getTotalLand@CvTeam@@QBEHXZ:PROC		; CvTeam::getTotalLand
; Function compile flags: /Odtp
;	COMDAT ?lGetTotalLand@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalLand@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetTotalLand, COMDAT

; 574  : {

	push	ebp
	mov	ebp, esp

; 575  : 	return BasicLuaMethod(L, &CvTeam::getTotalLand);

	push	OFFSET ?getTotalLand@CvTeam@@QBEHXZ	; CvTeam::getTotalLand
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 576  : }

	pop	ebp
	ret	0
?lGetTotalLand@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetTotalLand
_TEXT	ENDS
EXTRN	?getNukeInterception@CvTeam@@QBEHXZ:PROC	; CvTeam::getNukeInterception
; Function compile flags: /Odtp
;	COMDAT ?lGetNukeInterception@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNukeInterception@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetNukeInterception, COMDAT

; 581  : {

	push	ebp
	mov	ebp, esp

; 582  : 	return BasicLuaMethod(L, &CvTeam::getNukeInterception);

	push	OFFSET ?getNukeInterception@CvTeam@@QBEHXZ ; CvTeam::getNukeInterception
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 583  : }

	pop	ebp
	ret	0
?lGetNukeInterception@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetNukeInterception
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
EXTRN	?changeNukeInterception@CvTeam@@QAEXH@Z:PROC	; CvTeam::changeNukeInterception
; Function compile flags: /Odtp
;	COMDAT ?lChangeNukeInterception@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeNukeInterception@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeNukeInterception, COMDAT

; 588  : {

	push	ebp
	mov	ebp, esp

; 589  : 	return BasicLuaMethod(L, &CvTeam::changeNukeInterception);

	push	OFFSET ?changeNukeInterception@CvTeam@@QAEXH@Z ; CvTeam::changeNukeInterception
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 590  : }

	pop	ebp
	ret	0
?lChangeNukeInterception@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeNukeInterception
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4VoteSourceTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4VoteSourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum VoteSourceTypes>
EXTRN	?getForceTeamVoteEligibilityCount@CvTeam@@QBEHW4VoteSourceTypes@@@Z:PROC ; CvTeam::getForceTeamVoteEligibilityCount
; Function compile flags: /Odtp
;	COMDAT ?lGetForceTeamVoteEligibilityCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetForceTeamVoteEligibilityCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetForceTeamVoteEligibilityCount, COMDAT

; 596  : {

	push	ebp
	mov	ebp, esp

; 597  : 	return BasicLuaMethod(L, &CvTeam::getForceTeamVoteEligibilityCount);

	push	OFFSET ?getForceTeamVoteEligibilityCount@CvTeam@@QBEHW4VoteSourceTypes@@@Z ; CvTeam::getForceTeamVoteEligibilityCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4VoteSourceTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4VoteSourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum VoteSourceTypes>
	add	esp, 8

; 598  : }

	pop	ebp
	ret	0
?lGetForceTeamVoteEligibilityCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetForceTeamVoteEligibilityCount
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4VoteSourceTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4VoteSourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum VoteSourceTypes>
EXTRN	?isForceTeamVoteEligible@CvTeam@@QBE_NW4VoteSourceTypes@@@Z:PROC ; CvTeam::isForceTeamVoteEligible
; Function compile flags: /Odtp
;	COMDAT ?lIsForceTeamVoteEligible@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsForceTeamVoteEligible@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsForceTeamVoteEligible, COMDAT

; 603  : {

	push	ebp
	mov	ebp, esp

; 604  : 	return BasicLuaMethod(L, &CvTeam::isForceTeamVoteEligible);

	push	OFFSET ?isForceTeamVoteEligible@CvTeam@@QBE_NW4VoteSourceTypes@@@Z ; CvTeam::isForceTeamVoteEligible
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4VoteSourceTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4VoteSourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum VoteSourceTypes>
	add	esp, 8

; 605  : }

	pop	ebp
	ret	0
?lIsForceTeamVoteEligible@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsForceTeamVoteEligible
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4VoteSourceTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4VoteSourceTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum VoteSourceTypes,int>
EXTRN	?changeForceTeamVoteEligibilityCount@CvTeam@@QAEXW4VoteSourceTypes@@H@Z:PROC ; CvTeam::changeForceTeamVoteEligibilityCount
; Function compile flags: /Odtp
;	COMDAT ?lChangeForceTeamVoteEligibilityCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeForceTeamVoteEligibilityCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeForceTeamVoteEligibilityCount, COMDAT

; 610  : {

	push	ebp
	mov	ebp, esp

; 611  : 	return BasicLuaMethod(L, &CvTeam::changeForceTeamVoteEligibilityCount);

	push	OFFSET ?changeForceTeamVoteEligibilityCount@CvTeam@@QAEXW4VoteSourceTypes@@H@Z ; CvTeam::changeForceTeamVoteEligibilityCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4VoteSourceTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4VoteSourceTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum VoteSourceTypes,int>
	add	esp, 8

; 612  : }

	pop	ebp
	ret	0
?lChangeForceTeamVoteEligibilityCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeForceTeamVoteEligibilityCount
_TEXT	ENDS
EXTRN	?getExtraWaterSeeFromCount@CvTeam@@QBEHXZ:PROC	; CvTeam::getExtraWaterSeeFromCount
; Function compile flags: /Odtp
;	COMDAT ?lGetExtraWaterSeeFromCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetExtraWaterSeeFromCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetExtraWaterSeeFromCount, COMDAT

; 617  : {

	push	ebp
	mov	ebp, esp

; 618  : 	return BasicLuaMethod(L, &CvTeam::getExtraWaterSeeFromCount);

	push	OFFSET ?getExtraWaterSeeFromCount@CvTeam@@QBEHXZ ; CvTeam::getExtraWaterSeeFromCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 619  : }

	pop	ebp
	ret	0
?lGetExtraWaterSeeFromCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetExtraWaterSeeFromCount
_TEXT	ENDS
EXTRN	?isExtraWaterSeeFrom@CvTeam@@QBE_NXZ:PROC	; CvTeam::isExtraWaterSeeFrom
; Function compile flags: /Odtp
;	COMDAT ?lIsExtraWaterSeeFrom@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsExtraWaterSeeFrom@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsExtraWaterSeeFrom, COMDAT

; 624  : {

	push	ebp
	mov	ebp, esp

; 625  : 	return BasicLuaMethod(L, &CvTeam::isExtraWaterSeeFrom);

	push	OFFSET ?isExtraWaterSeeFrom@CvTeam@@QBE_NXZ ; CvTeam::isExtraWaterSeeFrom
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 626  : }

	pop	ebp
	ret	0
?lIsExtraWaterSeeFrom@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsExtraWaterSeeFrom
_TEXT	ENDS
EXTRN	?changeExtraWaterSeeFromCount@CvTeam@@QAEXH@Z:PROC ; CvTeam::changeExtraWaterSeeFromCount
; Function compile flags: /Odtp
;	COMDAT ?lChangeExtraWaterSeeFromCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeExtraWaterSeeFromCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeExtraWaterSeeFromCount, COMDAT

; 631  : {

	push	ebp
	mov	ebp, esp

; 632  : 	return BasicLuaMethod(L, &CvTeam::changeExtraWaterSeeFromCount);

	push	OFFSET ?changeExtraWaterSeeFromCount@CvTeam@@QAEXH@Z ; CvTeam::changeExtraWaterSeeFromCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 633  : }

	pop	ebp
	ret	0
?lChangeExtraWaterSeeFromCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeExtraWaterSeeFromCount
_TEXT	ENDS
EXTRN	?getMapTradingCount@CvTeam@@QBEHXZ:PROC		; CvTeam::getMapTradingCount
; Function compile flags: /Odtp
;	COMDAT ?lGetMapTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMapTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetMapTradingCount, COMDAT

; 638  : {

	push	ebp
	mov	ebp, esp

; 639  : 	return BasicLuaMethod(L, &CvTeam::getMapTradingCount);

	push	OFFSET ?getMapTradingCount@CvTeam@@QBEHXZ ; CvTeam::getMapTradingCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 640  : }

	pop	ebp
	ret	0
?lGetMapTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetMapTradingCount
_TEXT	ENDS
EXTRN	?isMapTrading@CvTeam@@QBE_NXZ:PROC		; CvTeam::isMapTrading
; Function compile flags: /Odtp
;	COMDAT ?lIsMapTrading@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMapTrading@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsMapTrading, COMDAT

; 645  : {

	push	ebp
	mov	ebp, esp

; 646  : 	return BasicLuaMethod(L, &CvTeam::isMapTrading);

	push	OFFSET ?isMapTrading@CvTeam@@QBE_NXZ	; CvTeam::isMapTrading
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 647  : }

	pop	ebp
	ret	0
?lIsMapTrading@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsMapTrading
_TEXT	ENDS
EXTRN	?changeMapTradingCount@CvTeam@@QAEXH@Z:PROC	; CvTeam::changeMapTradingCount
; Function compile flags: /Odtp
;	COMDAT ?lChangeMapTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeMapTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeMapTradingCount, COMDAT

; 652  : {

	push	ebp
	mov	ebp, esp

; 653  : 	return BasicLuaMethod(L, &CvTeam::changeMapTradingCount);

	push	OFFSET ?changeMapTradingCount@CvTeam@@QAEXH@Z ; CvTeam::changeMapTradingCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 654  : }

	pop	ebp
	ret	0
?lChangeMapTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeMapTradingCount
_TEXT	ENDS
EXTRN	?getTechTradingCount@CvTeam@@QBEHXZ:PROC	; CvTeam::getTechTradingCount
; Function compile flags: /Odtp
;	COMDAT ?lGetTechTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTechTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetTechTradingCount, COMDAT

; 659  : {

	push	ebp
	mov	ebp, esp

; 660  : 	return BasicLuaMethod(L, &CvTeam::getTechTradingCount);

	push	OFFSET ?getTechTradingCount@CvTeam@@QBEHXZ ; CvTeam::getTechTradingCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 661  : }

	pop	ebp
	ret	0
?lGetTechTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetTechTradingCount
_TEXT	ENDS
EXTRN	?isTechTrading@CvTeam@@QBE_NXZ:PROC		; CvTeam::isTechTrading
; Function compile flags: /Odtp
;	COMDAT ?lIsTechTrading@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsTechTrading@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsTechTrading, COMDAT

; 666  : {

	push	ebp
	mov	ebp, esp

; 667  : 	return BasicLuaMethod(L, &CvTeam::isTechTrading);

	push	OFFSET ?isTechTrading@CvTeam@@QBE_NXZ	; CvTeam::isTechTrading
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 668  : }

	pop	ebp
	ret	0
?lIsTechTrading@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsTechTrading
_TEXT	ENDS
EXTRN	?changeTechTradingCount@CvTeam@@QAEXH@Z:PROC	; CvTeam::changeTechTradingCount
; Function compile flags: /Odtp
;	COMDAT ?lChangeTechTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeTechTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeTechTradingCount, COMDAT

; 673  : {

	push	ebp
	mov	ebp, esp

; 674  : 	return BasicLuaMethod(L, &CvTeam::changeTechTradingCount);

	push	OFFSET ?changeTechTradingCount@CvTeam@@QAEXH@Z ; CvTeam::changeTechTradingCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 675  : }

	pop	ebp
	ret	0
?lChangeTechTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeTechTradingCount
_TEXT	ENDS
EXTRN	?getGoldTradingCount@CvTeam@@QBEHXZ:PROC	; CvTeam::getGoldTradingCount
; Function compile flags: /Odtp
;	COMDAT ?lGetGoldTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetGoldTradingCount, COMDAT

; 680  : {

	push	ebp
	mov	ebp, esp

; 681  : 	return BasicLuaMethod(L, &CvTeam::getGoldTradingCount);

	push	OFFSET ?getGoldTradingCount@CvTeam@@QBEHXZ ; CvTeam::getGoldTradingCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 682  : }

	pop	ebp
	ret	0
?lGetGoldTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetGoldTradingCount
_TEXT	ENDS
EXTRN	?isGoldTrading@CvTeam@@QBE_NXZ:PROC		; CvTeam::isGoldTrading
; Function compile flags: /Odtp
;	COMDAT ?lIsGoldTrading@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsGoldTrading@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsGoldTrading, COMDAT

; 687  : {

	push	ebp
	mov	ebp, esp

; 688  : 	return BasicLuaMethod(L, &CvTeam::isGoldTrading);

	push	OFFSET ?isGoldTrading@CvTeam@@QBE_NXZ	; CvTeam::isGoldTrading
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 689  : }

	pop	ebp
	ret	0
?lIsGoldTrading@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsGoldTrading
_TEXT	ENDS
EXTRN	?changeGoldTradingCount@CvTeam@@QAEXH@Z:PROC	; CvTeam::changeGoldTradingCount
; Function compile flags: /Odtp
;	COMDAT ?lChangeGoldTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeGoldTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeGoldTradingCount, COMDAT

; 694  : {

	push	ebp
	mov	ebp, esp

; 695  : 	return BasicLuaMethod(L, &CvTeam::changeGoldTradingCount);

	push	OFFSET ?changeGoldTradingCount@CvTeam@@QAEXH@Z ; CvTeam::changeGoldTradingCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 696  : }

	pop	ebp
	ret	0
?lChangeGoldTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeGoldTradingCount
_TEXT	ENDS
EXTRN	?getAllowEmbassyTradingAllowedCount@CvTeam@@QBEHXZ:PROC ; CvTeam::getAllowEmbassyTradingAllowedCount
; Function compile flags: /Odtp
;	COMDAT ?lGetAllowEmbassyTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAllowEmbassyTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetAllowEmbassyTradingAllowedCount, COMDAT

; 700  : {

	push	ebp
	mov	ebp, esp

; 701  : 	return BasicLuaMethod(L, &CvTeam::getAllowEmbassyTradingAllowedCount);

	push	OFFSET ?getAllowEmbassyTradingAllowedCount@CvTeam@@QBEHXZ ; CvTeam::getAllowEmbassyTradingAllowedCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 702  : }

	pop	ebp
	ret	0
?lGetAllowEmbassyTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetAllowEmbassyTradingAllowedCount
_TEXT	ENDS
EXTRN	?isAllowEmbassyTradingAllowed@CvTeam@@QBE_NXZ:PROC ; CvTeam::isAllowEmbassyTradingAllowed
; Function compile flags: /Odtp
;	COMDAT ?lIsAllowEmbassyTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAllowEmbassyTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsAllowEmbassyTradingAllowed, COMDAT

; 706  : {

	push	ebp
	mov	ebp, esp

; 707  : 	return BasicLuaMethod(L, &CvTeam::isAllowEmbassyTradingAllowed);

	push	OFFSET ?isAllowEmbassyTradingAllowed@CvTeam@@QBE_NXZ ; CvTeam::isAllowEmbassyTradingAllowed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 708  : }

	pop	ebp
	ret	0
?lIsAllowEmbassyTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsAllowEmbassyTradingAllowed
_TEXT	ENDS
EXTRN	?changeAllowEmbassyTradingAllowedCount@CvTeam@@QAEXH@Z:PROC ; CvTeam::changeAllowEmbassyTradingAllowedCount
; Function compile flags: /Odtp
;	COMDAT ?lChangeAllowEmbassyTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeAllowEmbassyTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeAllowEmbassyTradingAllowedCount, COMDAT

; 712  : {

	push	ebp
	mov	ebp, esp

; 713  : 	return BasicLuaMethod(L, &CvTeam::changeAllowEmbassyTradingAllowedCount);

	push	OFFSET ?changeAllowEmbassyTradingAllowedCount@CvTeam@@QAEXH@Z ; CvTeam::changeAllowEmbassyTradingAllowedCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 714  : }

	pop	ebp
	ret	0
?lChangeAllowEmbassyTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeAllowEmbassyTradingAllowedCount
_TEXT	ENDS
EXTRN	?getOpenBordersTradingAllowedCount@CvTeam@@QBEHXZ:PROC ; CvTeam::getOpenBordersTradingAllowedCount
; Function compile flags: /Odtp
;	COMDAT ?lGetOpenBordersTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetOpenBordersTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetOpenBordersTradingAllowedCount, COMDAT

; 719  : {

	push	ebp
	mov	ebp, esp

; 720  : 	return BasicLuaMethod(L, &CvTeam::getOpenBordersTradingAllowedCount);

	push	OFFSET ?getOpenBordersTradingAllowedCount@CvTeam@@QBEHXZ ; CvTeam::getOpenBordersTradingAllowedCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 721  : }

	pop	ebp
	ret	0
?lGetOpenBordersTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetOpenBordersTradingAllowedCount
_TEXT	ENDS
EXTRN	?isOpenBordersTradingAllowed@CvTeam@@QBE_NXZ:PROC ; CvTeam::isOpenBordersTradingAllowed
; Function compile flags: /Odtp
;	COMDAT ?lIsOpenBordersTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsOpenBordersTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsOpenBordersTradingAllowed, COMDAT

; 726  : {

	push	ebp
	mov	ebp, esp

; 727  : 	return BasicLuaMethod(L, &CvTeam::isOpenBordersTradingAllowed);

	push	OFFSET ?isOpenBordersTradingAllowed@CvTeam@@QBE_NXZ ; CvTeam::isOpenBordersTradingAllowed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 728  : }

	pop	ebp
	ret	0
?lIsOpenBordersTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsOpenBordersTradingAllowed
_TEXT	ENDS
EXTRN	?isOpenBordersTradingAllowedWithTeam@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC ; CvTeam::isOpenBordersTradingAllowedWithTeam
; Function compile flags: /Odtp
;	COMDAT ?lIsOpenBordersTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsOpenBordersTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsOpenBordersTradingAllowedWithTeam, COMDAT

; 733  : {

	push	ebp
	mov	ebp, esp

; 734  : 	return BasicLuaMethod(L, &CvTeam::isOpenBordersTradingAllowedWithTeam);

	push	OFFSET ?isOpenBordersTradingAllowedWithTeam@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::isOpenBordersTradingAllowedWithTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 735  : }

	pop	ebp
	ret	0
?lIsOpenBordersTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsOpenBordersTradingAllowedWithTeam
_TEXT	ENDS
EXTRN	?changeOpenBordersTradingAllowedCount@CvTeam@@QAEXH@Z:PROC ; CvTeam::changeOpenBordersTradingAllowedCount
; Function compile flags: /Odtp
;	COMDAT ?lChangeOpenBordersTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeOpenBordersTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeOpenBordersTradingAllowedCount, COMDAT

; 740  : {

	push	ebp
	mov	ebp, esp

; 741  : 	return BasicLuaMethod(L, &CvTeam::changeOpenBordersTradingAllowedCount);

	push	OFFSET ?changeOpenBordersTradingAllowedCount@CvTeam@@QAEXH@Z ; CvTeam::changeOpenBordersTradingAllowedCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 742  : }

	pop	ebp
	ret	0
?lChangeOpenBordersTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeOpenBordersTradingAllowedCount
_TEXT	ENDS
EXTRN	?getDefensivePactTradingAllowedCount@CvTeam@@QBEHXZ:PROC ; CvTeam::getDefensivePactTradingAllowedCount
; Function compile flags: /Odtp
;	COMDAT ?lGetDefensivePactTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetDefensivePactTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetDefensivePactTradingAllowedCount, COMDAT

; 747  : {

	push	ebp
	mov	ebp, esp

; 748  : 	return BasicLuaMethod(L, &CvTeam::getDefensivePactTradingAllowedCount);

	push	OFFSET ?getDefensivePactTradingAllowedCount@CvTeam@@QBEHXZ ; CvTeam::getDefensivePactTradingAllowedCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 749  : }

	pop	ebp
	ret	0
?lGetDefensivePactTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetDefensivePactTradingAllowedCount
_TEXT	ENDS
EXTRN	?isDefensivePactTradingAllowed@CvTeam@@QBE_NXZ:PROC ; CvTeam::isDefensivePactTradingAllowed
; Function compile flags: /Odtp
;	COMDAT ?lIsDefensivePactTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsDefensivePactTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsDefensivePactTradingAllowed, COMDAT

; 754  : {

	push	ebp
	mov	ebp, esp

; 755  : 	return BasicLuaMethod(L, &CvTeam::isDefensivePactTradingAllowed);

	push	OFFSET ?isDefensivePactTradingAllowed@CvTeam@@QBE_NXZ ; CvTeam::isDefensivePactTradingAllowed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 756  : }

	pop	ebp
	ret	0
?lIsDefensivePactTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsDefensivePactTradingAllowed
_TEXT	ENDS
EXTRN	?isDefensivePactTradingAllowedWithTeam@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC ; CvTeam::isDefensivePactTradingAllowedWithTeam
; Function compile flags: /Odtp
;	COMDAT ?lIsDefensivePactTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsDefensivePactTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsDefensivePactTradingAllowedWithTeam, COMDAT

; 761  : {

	push	ebp
	mov	ebp, esp

; 762  : 	return BasicLuaMethod(L, &CvTeam::isDefensivePactTradingAllowedWithTeam);

	push	OFFSET ?isDefensivePactTradingAllowedWithTeam@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::isDefensivePactTradingAllowedWithTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 763  : }

	pop	ebp
	ret	0
?lIsDefensivePactTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsDefensivePactTradingAllowedWithTeam
_TEXT	ENDS
EXTRN	?changeDefensivePactTradingAllowedCount@CvTeam@@QAEXH@Z:PROC ; CvTeam::changeDefensivePactTradingAllowedCount
; Function compile flags: /Odtp
;	COMDAT ?lChangeDefensivePactTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeDefensivePactTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeDefensivePactTradingAllowedCount, COMDAT

; 768  : {

	push	ebp
	mov	ebp, esp

; 769  : 	return BasicLuaMethod(L, &CvTeam::changeDefensivePactTradingAllowedCount);

	push	OFFSET ?changeDefensivePactTradingAllowedCount@CvTeam@@QAEXH@Z ; CvTeam::changeDefensivePactTradingAllowedCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 770  : }

	pop	ebp
	ret	0
?lChangeDefensivePactTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeDefensivePactTradingAllowedCount
_TEXT	ENDS
EXTRN	?IsResearchAgreementTradingAllowed@CvTeam@@QBE_NXZ:PROC ; CvTeam::IsResearchAgreementTradingAllowed
; Function compile flags: /Odtp
;	COMDAT ?lIsResearchAgreementTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsResearchAgreementTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsResearchAgreementTradingAllowed, COMDAT

; 775  : {

	push	ebp
	mov	ebp, esp

; 776  : 	return BasicLuaMethod(L, &CvTeam::IsResearchAgreementTradingAllowed);

	push	OFFSET ?IsResearchAgreementTradingAllowed@CvTeam@@QBE_NXZ ; CvTeam::IsResearchAgreementTradingAllowed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 777  : }

	pop	ebp
	ret	0
?lIsResearchAgreementTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsResearchAgreementTradingAllowed
_TEXT	ENDS
EXTRN	?IsResearchAgreementTradingAllowedWithTeam@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC ; CvTeam::IsResearchAgreementTradingAllowedWithTeam
; Function compile flags: /Odtp
;	COMDAT ?lIsResearchAgreementTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsResearchAgreementTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsResearchAgreementTradingAllowedWithTeam, COMDAT

; 782  : {

	push	ebp
	mov	ebp, esp

; 783  : 	return BasicLuaMethod(L, &CvTeam::IsResearchAgreementTradingAllowedWithTeam);

	push	OFFSET ?IsResearchAgreementTradingAllowedWithTeam@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::IsResearchAgreementTradingAllowedWithTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 784  : }

	pop	ebp
	ret	0
?lIsResearchAgreementTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsResearchAgreementTradingAllowedWithTeam
_TEXT	ENDS
EXTRN	?IsTradeAgreementTradingAllowed@CvTeam@@QBE_NXZ:PROC ; CvTeam::IsTradeAgreementTradingAllowed
; Function compile flags: /Odtp
;	COMDAT ?lIsTradeAgreementTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsTradeAgreementTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsTradeAgreementTradingAllowed, COMDAT

; 789  : {

	push	ebp
	mov	ebp, esp

; 790  : 	return BasicLuaMethod(L, &CvTeam::IsTradeAgreementTradingAllowed);

	push	OFFSET ?IsTradeAgreementTradingAllowed@CvTeam@@QBE_NXZ ; CvTeam::IsTradeAgreementTradingAllowed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 791  : }

	pop	ebp
	ret	0
?lIsTradeAgreementTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsTradeAgreementTradingAllowed
_TEXT	ENDS
EXTRN	?getPermanentAllianceTradingCount@CvTeam@@QBEHXZ:PROC ; CvTeam::getPermanentAllianceTradingCount
; Function compile flags: /Odtp
;	COMDAT ?lGetPermanentAllianceTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPermanentAllianceTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetPermanentAllianceTradingCount, COMDAT

; 796  : {

	push	ebp
	mov	ebp, esp

; 797  : 	return BasicLuaMethod(L, &CvTeam::getPermanentAllianceTradingCount);

	push	OFFSET ?getPermanentAllianceTradingCount@CvTeam@@QBEHXZ ; CvTeam::getPermanentAllianceTradingCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 798  : }

	pop	ebp
	ret	0
?lGetPermanentAllianceTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetPermanentAllianceTradingCount
_TEXT	ENDS
EXTRN	?isPermanentAllianceTrading@CvTeam@@QBE_NXZ:PROC ; CvTeam::isPermanentAllianceTrading
; Function compile flags: /Odtp
;	COMDAT ?lIsPermanentAllianceTrading@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPermanentAllianceTrading@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsPermanentAllianceTrading, COMDAT

; 803  : {

	push	ebp
	mov	ebp, esp

; 804  : 	return BasicLuaMethod(L, &CvTeam::isPermanentAllianceTrading);

	push	OFFSET ?isPermanentAllianceTrading@CvTeam@@QBE_NXZ ; CvTeam::isPermanentAllianceTrading
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 805  : }

	pop	ebp
	ret	0
?lIsPermanentAllianceTrading@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsPermanentAllianceTrading
_TEXT	ENDS
EXTRN	?changePermanentAllianceTradingCount@CvTeam@@QAEXH@Z:PROC ; CvTeam::changePermanentAllianceTradingCount
; Function compile flags: /Odtp
;	COMDAT ?lChangePermanentAllianceTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangePermanentAllianceTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangePermanentAllianceTradingCount, COMDAT

; 810  : {

	push	ebp
	mov	ebp, esp

; 811  : 	return BasicLuaMethod(L, &CvTeam::changePermanentAllianceTradingCount);

	push	OFFSET ?changePermanentAllianceTradingCount@CvTeam@@QAEXH@Z ; CvTeam::changePermanentAllianceTradingCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 812  : }

	pop	ebp
	ret	0
?lChangePermanentAllianceTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangePermanentAllianceTradingCount
_TEXT	ENDS
EXTRN	?getBridgeBuildingCount@CvTeam@@QBEHXZ:PROC	; CvTeam::getBridgeBuildingCount
; Function compile flags: /Odtp
;	COMDAT ?lGetBridgeBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBridgeBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetBridgeBuildingCount, COMDAT

; 817  : {

	push	ebp
	mov	ebp, esp

; 818  : 	return BasicLuaMethod(L, &CvTeam::getBridgeBuildingCount);

	push	OFFSET ?getBridgeBuildingCount@CvTeam@@QBEHXZ ; CvTeam::getBridgeBuildingCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 819  : }

	pop	ebp
	ret	0
?lGetBridgeBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetBridgeBuildingCount
_TEXT	ENDS
EXTRN	?isBridgeBuilding@CvTeam@@QBE_NXZ:PROC		; CvTeam::isBridgeBuilding
; Function compile flags: /Odtp
;	COMDAT ?lIsBridgeBuilding@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBridgeBuilding@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsBridgeBuilding, COMDAT

; 824  : {

	push	ebp
	mov	ebp, esp

; 825  : 	return BasicLuaMethod(L, &CvTeam::isBridgeBuilding);

	push	OFFSET ?isBridgeBuilding@CvTeam@@QBE_NXZ ; CvTeam::isBridgeBuilding
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 826  : }

	pop	ebp
	ret	0
?lIsBridgeBuilding@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsBridgeBuilding
_TEXT	ENDS
EXTRN	?changeBridgeBuildingCount@CvTeam@@QAEXH@Z:PROC	; CvTeam::changeBridgeBuildingCount
; Function compile flags: /Odtp
;	COMDAT ?lChangeBridgeBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeBridgeBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeBridgeBuildingCount, COMDAT

; 831  : {

	push	ebp
	mov	ebp, esp

; 832  : 	return BasicLuaMethod(L, &CvTeam::changeBridgeBuildingCount);

	push	OFFSET ?changeBridgeBuildingCount@CvTeam@@QAEXH@Z ; CvTeam::changeBridgeBuildingCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 833  : }

	pop	ebp
	ret	0
?lChangeBridgeBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeBridgeBuildingCount
_TEXT	ENDS
EXTRN	?getWaterWorkCount@CvTeam@@QBEHXZ:PROC		; CvTeam::getWaterWorkCount
; Function compile flags: /Odtp
;	COMDAT ?lGetWaterWorkCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetWaterWorkCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetWaterWorkCount, COMDAT

; 838  : {

	push	ebp
	mov	ebp, esp

; 839  : 	return BasicLuaMethod(L, &CvTeam::getWaterWorkCount);

	push	OFFSET ?getWaterWorkCount@CvTeam@@QBEHXZ ; CvTeam::getWaterWorkCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 840  : }

	pop	ebp
	ret	0
?lGetWaterWorkCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetWaterWorkCount
_TEXT	ENDS
EXTRN	?isWaterWork@CvTeam@@QBE_NXZ:PROC		; CvTeam::isWaterWork
; Function compile flags: /Odtp
;	COMDAT ?lIsWaterWork@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsWaterWork@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsWaterWork, COMDAT

; 845  : {

	push	ebp
	mov	ebp, esp

; 846  : 	return BasicLuaMethod(L, &CvTeam::isWaterWork);

	push	OFFSET ?isWaterWork@CvTeam@@QBE_NXZ	; CvTeam::isWaterWork
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 847  : }

	pop	ebp
	ret	0
?lIsWaterWork@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsWaterWork
_TEXT	ENDS
EXTRN	?changeWaterWorkCount@CvTeam@@QAEXH@Z:PROC	; CvTeam::changeWaterWorkCount
; Function compile flags: /Odtp
;	COMDAT ?lChangeWaterWorkCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeWaterWorkCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeWaterWorkCount, COMDAT

; 852  : {

	push	ebp
	mov	ebp, esp

; 853  : 	return BasicLuaMethod(L, &CvTeam::changeWaterWorkCount);

	push	OFFSET ?changeWaterWorkCount@CvTeam@@QAEXH@Z ; CvTeam::changeWaterWorkCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 854  : }

	pop	ebp
	ret	0
?lChangeWaterWorkCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeWaterWorkCount
_TEXT	ENDS
EXTRN	?getBorderObstacleCount@CvTeam@@QBEHXZ:PROC	; CvTeam::getBorderObstacleCount
; Function compile flags: /Odtp
;	COMDAT ?lGetBorderObstacleCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBorderObstacleCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetBorderObstacleCount, COMDAT

; 859  : {

	push	ebp
	mov	ebp, esp

; 860  : 	return BasicLuaMethod(L, &CvTeam::getBorderObstacleCount);

	push	OFFSET ?getBorderObstacleCount@CvTeam@@QBEHXZ ; CvTeam::getBorderObstacleCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 861  : }

	pop	ebp
	ret	0
?lGetBorderObstacleCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetBorderObstacleCount
_TEXT	ENDS
EXTRN	?isBorderObstacle@CvTeam@@QBE_NXZ:PROC		; CvTeam::isBorderObstacle
; Function compile flags: /Odtp
;	COMDAT ?lIsBorderObstacle@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBorderObstacle@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsBorderObstacle, COMDAT

; 866  : {

	push	ebp
	mov	ebp, esp

; 867  : 	return BasicLuaMethod(L, &CvTeam::isBorderObstacle);

	push	OFFSET ?isBorderObstacle@CvTeam@@QBE_NXZ ; CvTeam::isBorderObstacle
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 868  : }

	pop	ebp
	ret	0
?lIsBorderObstacle@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsBorderObstacle
_TEXT	ENDS
EXTRN	?changeBorderObstacleCount@CvTeam@@QAEXH@Z:PROC	; CvTeam::changeBorderObstacleCount
; Function compile flags: /Odtp
;	COMDAT ?lChangeBorderObstacleCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeBorderObstacleCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeBorderObstacleCount, COMDAT

; 873  : {

	push	ebp
	mov	ebp, esp

; 874  : 	return BasicLuaMethod(L, &CvTeam::changeBorderObstacleCount);

	push	OFFSET ?changeBorderObstacleCount@CvTeam@@QAEXH@Z ; CvTeam::changeBorderObstacleCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 875  : }

	pop	ebp
	ret	0
?lChangeBorderObstacleCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeBorderObstacleCount
_TEXT	ENDS
EXTRN	?isMapCentering@CvTeam@@QBE_NXZ:PROC		; CvTeam::isMapCentering
; Function compile flags: /Odtp
;	COMDAT ?lIsMapCentering@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMapCentering@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsMapCentering, COMDAT

; 881  : {

	push	ebp
	mov	ebp, esp

; 882  : 	return BasicLuaMethod(L, &CvTeam::isMapCentering);

	push	OFFSET ?isMapCentering@CvTeam@@QBE_NXZ	; CvTeam::isMapCentering
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 883  : }

	pop	ebp
	ret	0
?lIsMapCentering@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsMapCentering
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
EXTRN	?setMapCentering@CvTeam@@QAEX_N@Z:PROC		; CvTeam::setMapCentering
; Function compile flags: /Odtp
;	COMDAT ?lSetMapCentering@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetMapCentering@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lSetMapCentering, COMDAT

; 888  : {

	push	ebp
	mov	ebp, esp

; 889  : 	return BasicLuaMethod(L, &CvTeam::setMapCentering);

	push	OFFSET ?setMapCentering@CvTeam@@QAEX_N@Z ; CvTeam::setMapCentering
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 890  : }

	pop	ebp
	ret	0
?lSetMapCentering@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lSetMapCentering
_TEXT	ENDS
EXTRN	?GetID@CvTeam@@QBE?AW4TeamTypes@@XZ:PROC	; CvTeam::GetID
; Function compile flags: /Odtp
;	COMDAT ?lGetID@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetID@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lGetID, COMDAT

; 896  : {

	push	ebp
	mov	ebp, esp

; 897  : 	return BasicLuaMethod(L, &CvTeam::GetID);

	push	OFFSET ?GetID@CvTeam@@QBE?AW4TeamTypes@@XZ ; CvTeam::GetID
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes>
	add	esp, 8

; 898  : }

	pop	ebp
	ret	0
?lGetID@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lGetID
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,int>
EXTRN	?getTechShareCount@CvTeam@@QBEHH@Z:PROC		; CvTeam::getTechShareCount
; Function compile flags: /Odtp
;	COMDAT ?lGetTechShareCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTechShareCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetTechShareCount, COMDAT

; 903  : {

	push	ebp
	mov	ebp, esp

; 904  : 	return BasicLuaMethod(L, &CvTeam::getTechShareCount);

	push	OFFSET ?getTechShareCount@CvTeam@@QBEHH@Z ; CvTeam::getTechShareCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,int>
	add	esp, 8

; 905  : }

	pop	ebp
	ret	0
?lGetTechShareCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetTechShareCount
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,int>
EXTRN	?isTechShare@CvTeam@@QBE_NH@Z:PROC		; CvTeam::isTechShare
; Function compile flags: /Odtp
;	COMDAT ?lIsTechShare@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsTechShare@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsTechShare, COMDAT

; 910  : {

	push	ebp
	mov	ebp, esp

; 911  : 	return BasicLuaMethod(L, &CvTeam::isTechShare);

	push	OFFSET ?isTechShare@CvTeam@@QBE_NH@Z	; CvTeam::isTechShare
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,int>
	add	esp, 8

; 912  : }

	pop	ebp
	ret	0
?lIsTechShare@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsTechShare
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXHH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,int>
EXTRN	?changeTechShareCount@CvTeam@@QAEXHH@Z:PROC	; CvTeam::changeTechShareCount
; Function compile flags: /Odtp
;	COMDAT ?lChangeTechShareCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeTechShareCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeTechShareCount, COMDAT

; 917  : {

	push	ebp
	mov	ebp, esp

; 918  : 	return BasicLuaMethod(L, &CvTeam::changeTechShareCount);

	push	OFFSET ?changeTechShareCount@CvTeam@@QAEXHH@Z ; CvTeam::changeTechShareCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXHH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,int>
	add	esp, 8

; 919  : }

	pop	ebp
	ret	0
?lChangeTechShareCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeTechShareCount
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4DomainTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4DomainTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum DomainTypes>
EXTRN	?getExtraMoves@CvTeam@@QBEHW4DomainTypes@@@Z:PROC ; CvTeam::getExtraMoves
; Function compile flags: /Odtp
;	COMDAT ?lGetExtraMoves@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetExtraMoves@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetExtraMoves, COMDAT

; 925  : {

	push	ebp
	mov	ebp, esp

; 926  : 	return BasicLuaMethod(L, &CvTeam::getExtraMoves);

	push	OFFSET ?getExtraMoves@CvTeam@@QBEHW4DomainTypes@@@Z ; CvTeam::getExtraMoves
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4DomainTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4DomainTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum DomainTypes>
	add	esp, 8

; 927  : }

	pop	ebp
	ret	0
?lGetExtraMoves@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetExtraMoves
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4DomainTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4DomainTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum DomainTypes,int>
EXTRN	?changeExtraMoves@CvTeam@@QAEXW4DomainTypes@@H@Z:PROC ; CvTeam::changeExtraMoves
; Function compile flags: /Odtp
;	COMDAT ?lChangeExtraMoves@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeExtraMoves@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lChangeExtraMoves, COMDAT

; 932  : {

	push	ebp
	mov	ebp, esp

; 933  : 	return BasicLuaMethod(L, &CvTeam::changeExtraMoves);

	push	OFFSET ?changeExtraMoves@CvTeam@@QAEXW4DomainTypes@@H@Z ; CvTeam::changeExtraMoves
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4DomainTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4DomainTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum DomainTypes,int>
	add	esp, 8

; 934  : }

	pop	ebp
	ret	0
?lChangeExtraMoves@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lChangeExtraMoves
_TEXT	ENDS
EXTRN	?canEmbark@CvTeam@@QBE_NXZ:PROC			; CvTeam::canEmbark
; Function compile flags: /Odtp
;	COMDAT ?lCanEmbark@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanEmbark@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lCanEmbark, COMDAT

; 938  : {

	push	ebp
	mov	ebp, esp

; 939  : 	return BasicLuaMethod(L, &CvTeam::canEmbark);

	push	OFFSET ?canEmbark@CvTeam@@QBE_NXZ	; CvTeam::canEmbark
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 940  : }

	pop	ebp
	ret	0
?lCanEmbark@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lCanEmbark
_TEXT	ENDS
EXTRN	?canDefensiveEmbark@CvTeam@@QBE_NXZ:PROC	; CvTeam::canDefensiveEmbark
; Function compile flags: /Odtp
;	COMDAT ?lCanDefensiveEmbark@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanDefensiveEmbark@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lCanDefensiveEmbark, COMDAT

; 944  : {

	push	ebp
	mov	ebp, esp

; 945  : 	return BasicLuaMethod(L, &CvTeam::canDefensiveEmbark);

	push	OFFSET ?canDefensiveEmbark@CvTeam@@QBE_NXZ ; CvTeam::canDefensiveEmbark
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 946  : }

	pop	ebp
	ret	0
?lCanDefensiveEmbark@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lCanDefensiveEmbark
_TEXT	ENDS
EXTRN	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC	; CvTeam::isHasMet
; Function compile flags: /Odtp
;	COMDAT ?lIsHasMet@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHasMet@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lIsHasMet, COMDAT

; 951  : {

	push	ebp
	mov	ebp, esp

; 952  : 	return BasicLuaMethod(L, &CvTeam::isHasMet);

	push	OFFSET ?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::isHasMet
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 953  : }

	pop	ebp
	ret	0
?lIsHasMet@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lIsHasMet
_TEXT	ENDS
EXTRN	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC	; CvTeam::isAtWar
; Function compile flags: /Odtp
;	COMDAT ?lIsAtWar@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAtWar@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lIsAtWar, COMDAT

; 958  : {

	push	ebp
	mov	ebp, esp

; 959  : 	return BasicLuaMethod(L, &CvTeam::isAtWar);

	push	OFFSET ?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::isAtWar
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 960  : }

	pop	ebp
	ret	0
?lIsAtWar@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lIsAtWar
_TEXT	ENDS
EXTRN	?isPermanentWarPeace@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC ; CvTeam::isPermanentWarPeace
; Function compile flags: /Odtp
;	COMDAT ?lIsPermanentWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPermanentWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsPermanentWarPeace, COMDAT

; 965  : {

	push	ebp
	mov	ebp, esp

; 966  : 	return BasicLuaMethod(L, &CvTeam::isPermanentWarPeace);

	push	OFFSET ?isPermanentWarPeace@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::isPermanentWarPeace
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 967  : }

	pop	ebp
	ret	0
?lIsPermanentWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsPermanentWarPeace
_TEXT	ENDS
EXTRN	?setPermanentWarPeace@CvTeam@@QAEXW4TeamTypes@@_N@Z:PROC ; CvTeam::setPermanentWarPeace
; Function compile flags: /Odtp
;	COMDAT ?lSetPermanentWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetPermanentWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lSetPermanentWarPeace, COMDAT

; 972  : {

	push	ebp
	mov	ebp, esp

; 973  : 	return BasicLuaMethod(L, &CvTeam::setPermanentWarPeace);

	push	OFFSET ?setPermanentWarPeace@CvTeam@@QAEXW4TeamTypes@@_N@Z ; CvTeam::setPermanentWarPeace
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes,bool>
	add	esp, 8

; 974  : }

	pop	ebp
	ret	0
?lSetPermanentWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lSetPermanentWarPeace
_TEXT	ENDS
EXTRN	?GetLiberatedByTeam@CvTeam@@QBE?AW4TeamTypes@@XZ:PROC ; CvTeam::GetLiberatedByTeam
; Function compile flags: /Odtp
;	COMDAT ?lGetLiberatedByTeam@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLiberatedByTeam@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetLiberatedByTeam, COMDAT

; 978  : {

	push	ebp
	mov	ebp, esp

; 979  : 	return BasicLuaMethod(L, &CvTeam::GetLiberatedByTeam);

	push	OFFSET ?GetLiberatedByTeam@CvTeam@@QBE?AW4TeamTypes@@XZ ; CvTeam::GetLiberatedByTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes>
	add	esp, 8

; 980  : }

	pop	ebp
	ret	0
?lGetLiberatedByTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetLiberatedByTeam
_TEXT	ENDS
EXTRN	?GetKilledByTeam@CvTeam@@QBE?AW4TeamTypes@@XZ:PROC ; CvTeam::GetKilledByTeam
; Function compile flags: /Odtp
;	COMDAT ?lGetKilledByTeam@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetKilledByTeam@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetKilledByTeam, COMDAT

; 984  : {

	push	ebp
	mov	ebp, esp

; 985  : 	return BasicLuaMethod(L, &CvTeam::GetKilledByTeam);

	push	OFFSET ?GetKilledByTeam@CvTeam@@QBE?AW4TeamTypes@@XZ ; CvTeam::GetKilledByTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes>
	add	esp, 8

; 986  : }

	pop	ebp
	ret	0
?lGetKilledByTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetKilledByTeam
_TEXT	ENDS
EXTRN	?HasEmbassyAtTeam@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC ; CvTeam::HasEmbassyAtTeam
; Function compile flags: /Odtp
;	COMDAT ?lHasEmbassyAtTeam@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasEmbassyAtTeam@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lHasEmbassyAtTeam, COMDAT

; 989  : {

	push	ebp
	mov	ebp, esp

; 990  : 	return BasicLuaMethod(L, &CvTeam::HasEmbassyAtTeam);

	push	OFFSET ?HasEmbassyAtTeam@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::HasEmbassyAtTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 991  : }

	pop	ebp
	ret	0
?lHasEmbassyAtTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lHasEmbassyAtTeam
_TEXT	ENDS
EXTRN	?IsAllowsOpenBordersToTeam@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC ; CvTeam::IsAllowsOpenBordersToTeam
; Function compile flags: /Odtp
;	COMDAT ?lIsAllowsOpenBordersToTeam@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAllowsOpenBordersToTeam@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsAllowsOpenBordersToTeam, COMDAT

; 995  : {

	push	ebp
	mov	ebp, esp

; 996  : 	return BasicLuaMethod(L, &CvTeam::IsAllowsOpenBordersToTeam);

	push	OFFSET ?IsAllowsOpenBordersToTeam@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::IsAllowsOpenBordersToTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 997  : }

	pop	ebp
	ret	0
?lIsAllowsOpenBordersToTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsAllowsOpenBordersToTeam
_TEXT	ENDS
EXTRN	?isForcePeace@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC	; CvTeam::isForcePeace
; Function compile flags: /Odtp
;	COMDAT ?lIsForcePeace@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsForcePeace@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsForcePeace, COMDAT

; 1002 : {

	push	ebp
	mov	ebp, esp

; 1003 : 	return BasicLuaMethod(L, &CvTeam::isForcePeace);

	push	OFFSET ?isForcePeace@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::isForcePeace
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 1004 : }

	pop	ebp
	ret	0
?lIsForcePeace@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsForcePeace
_TEXT	ENDS
EXTRN	?IsHasDefensivePact@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC ; CvTeam::IsHasDefensivePact
; Function compile flags: /Odtp
;	COMDAT ?lIsDefensivePact@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsDefensivePact@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsDefensivePact, COMDAT

; 1009 : {

	push	ebp
	mov	ebp, esp

; 1010 : 	return BasicLuaMethod(L, &CvTeam::IsHasDefensivePact);

	push	OFFSET ?IsHasDefensivePact@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::IsHasDefensivePact
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 1011 : }

	pop	ebp
	ret	0
?lIsDefensivePact@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsDefensivePact
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4RouteTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4RouteTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum RouteTypes>
EXTRN	?getRouteChange@CvTeam@@QBEHW4RouteTypes@@@Z:PROC ; CvTeam::getRouteChange
; Function compile flags: /Odtp
;	COMDAT ?lGetRouteChange@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRouteChange@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetRouteChange, COMDAT

; 1016 : {

	push	ebp
	mov	ebp, esp

; 1017 : 	return BasicLuaMethod(L, &CvTeam::getRouteChange);

	push	OFFSET ?getRouteChange@CvTeam@@QBEHW4RouteTypes@@@Z ; CvTeam::getRouteChange
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4RouteTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4RouteTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum RouteTypes>
	add	esp, 8

; 1018 : }

	pop	ebp
	ret	0
?lGetRouteChange@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetRouteChange
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4RouteTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4RouteTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum RouteTypes,int>
EXTRN	?changeRouteChange@CvTeam@@QAEXW4RouteTypes@@H@Z:PROC ; CvTeam::changeRouteChange
; Function compile flags: /Odtp
;	COMDAT ?lChangeRouteChange@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeRouteChange@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lChangeRouteChange, COMDAT

; 1023 : {

	push	ebp
	mov	ebp, esp

; 1024 : 	return BasicLuaMethod(L, &CvTeam::changeRouteChange);

	push	OFFSET ?changeRouteChange@CvTeam@@QAEXW4RouteTypes@@H@Z ; CvTeam::changeRouteChange
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4RouteTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4RouteTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum RouteTypes,int>
	add	esp, 8

; 1025 : }

	pop	ebp
	ret	0
?lChangeRouteChange@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lChangeRouteChange
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ProjectTypes>
EXTRN	?getProjectCount@CvTeam@@QBEHW4ProjectTypes@@@Z:PROC ; CvTeam::getProjectCount
; Function compile flags: /Odtp
;	COMDAT ?lGetProjectCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetProjectCount, COMDAT

; 1030 : {

	push	ebp
	mov	ebp, esp

; 1031 : 	return BasicLuaMethod(L, &CvTeam::getProjectCount);

	push	OFFSET ?getProjectCount@CvTeam@@QBEHW4ProjectTypes@@@Z ; CvTeam::getProjectCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ProjectTypes>
	add	esp, 8

; 1032 : }

	pop	ebp
	ret	0
?lGetProjectCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetProjectCount
_TEXT	ENDS
EXTRN	?getProjectDefaultArtType@CvTeam@@QBEHW4ProjectTypes@@@Z:PROC ; CvTeam::getProjectDefaultArtType
; Function compile flags: /Odtp
;	COMDAT ?lGetProjectDefaultArtType@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectDefaultArtType@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetProjectDefaultArtType, COMDAT

; 1037 : {

	push	ebp
	mov	ebp, esp

; 1038 : 	return BasicLuaMethod(L, &CvTeam::getProjectDefaultArtType);

	push	OFFSET ?getProjectDefaultArtType@CvTeam@@QBEHW4ProjectTypes@@@Z ; CvTeam::getProjectDefaultArtType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ProjectTypes>
	add	esp, 8

; 1039 : }

	pop	ebp
	ret	0
?lGetProjectDefaultArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetProjectDefaultArtType
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ProjectTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ProjectTypes,int>
EXTRN	?setProjectDefaultArtType@CvTeam@@QAEXW4ProjectTypes@@H@Z:PROC ; CvTeam::setProjectDefaultArtType
; Function compile flags: /Odtp
;	COMDAT ?lSetProjectDefaultArtType@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetProjectDefaultArtType@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lSetProjectDefaultArtType, COMDAT

; 1044 : {

	push	ebp
	mov	ebp, esp

; 1045 : 	return BasicLuaMethod(L, &CvTeam::setProjectDefaultArtType);

	push	OFFSET ?setProjectDefaultArtType@CvTeam@@QAEXW4ProjectTypes@@H@Z ; CvTeam::setProjectDefaultArtType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ProjectTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ProjectTypes,int>
	add	esp, 8

; 1046 : }

	pop	ebp
	ret	0
?lSetProjectDefaultArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lSetProjectDefaultArtType
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ProjectTypes,int>
EXTRN	?getProjectArtType@CvTeam@@QBEHW4ProjectTypes@@H@Z:PROC ; CvTeam::getProjectArtType
; Function compile flags: /Odtp
;	COMDAT ?lGetProjectArtType@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectArtType@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetProjectArtType, COMDAT

; 1051 : {

	push	ebp
	mov	ebp, esp

; 1052 : 	return BasicLuaMethod(L, &CvTeam::getProjectArtType);

	push	OFFSET ?getProjectArtType@CvTeam@@QBEHW4ProjectTypes@@H@Z ; CvTeam::getProjectArtType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ProjectTypes,int>
	add	esp, 8

; 1053 : }

	pop	ebp
	ret	0
?lGetProjectArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetProjectArtType
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4ProjectTypes@@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ProjectTypes@@HH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ProjectTypes,int,int>
EXTRN	?setProjectArtType@CvTeam@@QAEXW4ProjectTypes@@HH@Z:PROC ; CvTeam::setProjectArtType
; Function compile flags: /Odtp
;	COMDAT ?lSetProjectArtType@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetProjectArtType@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lSetProjectArtType, COMDAT

; 1058 : {

	push	ebp
	mov	ebp, esp

; 1059 : 	return BasicLuaMethod(L, &CvTeam::setProjectArtType);

	push	OFFSET ?setProjectArtType@CvTeam@@QAEXW4ProjectTypes@@HH@Z ; CvTeam::setProjectArtType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4ProjectTypes@@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ProjectTypes@@HH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ProjectTypes,int,int>
	add	esp, 8

; 1060 : }

	pop	ebp
	ret	0
?lSetProjectArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lSetProjectArtType
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4ProjectTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum ProjectTypes,int>
EXTRN	?isProjectMaxedOut@CvTeam@@QBE_NW4ProjectTypes@@H@Z:PROC ; CvTeam::isProjectMaxedOut
; Function compile flags: /Odtp
;	COMDAT ?lIsProjectMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProjectMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsProjectMaxedOut, COMDAT

; 1065 : {

	push	ebp
	mov	ebp, esp

; 1066 : 	return BasicLuaMethod(L, &CvTeam::isProjectMaxedOut);

	push	OFFSET ?isProjectMaxedOut@CvTeam@@QBE_NW4ProjectTypes@@H@Z ; CvTeam::isProjectMaxedOut
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4ProjectTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum ProjectTypes,int>
	add	esp, 8

; 1067 : }

	pop	ebp
	ret	0
?lIsProjectMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsProjectMaxedOut
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum ProjectTypes>
EXTRN	?isProjectAndArtMaxedOut@CvTeam@@QBE_NW4ProjectTypes@@@Z:PROC ; CvTeam::isProjectAndArtMaxedOut
; Function compile flags: /Odtp
;	COMDAT ?lIsProjectAndArtMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProjectAndArtMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsProjectAndArtMaxedOut, COMDAT

; 1072 : {

	push	ebp
	mov	ebp, esp

; 1073 : 	return BasicLuaMethod(L, &CvTeam::isProjectAndArtMaxedOut);

	push	OFFSET ?isProjectAndArtMaxedOut@CvTeam@@QBE_NW4ProjectTypes@@@Z ; CvTeam::isProjectAndArtMaxedOut
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum ProjectTypes>
	add	esp, 8

; 1074 : }

	pop	ebp
	ret	0
?lIsProjectAndArtMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsProjectAndArtMaxedOut
_TEXT	ENDS
EXTRN	?changeProjectCount@CvTeam@@QAEXW4ProjectTypes@@H@Z:PROC ; CvTeam::changeProjectCount
; Function compile flags: /Odtp
;	COMDAT ?lChangeProjectCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeProjectCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeProjectCount, COMDAT

; 1079 : {

	push	ebp
	mov	ebp, esp

; 1080 : 	return BasicLuaMethod(L, &CvTeam::changeProjectCount);

	push	OFFSET ?changeProjectCount@CvTeam@@QAEXW4ProjectTypes@@H@Z ; CvTeam::changeProjectCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ProjectTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ProjectTypes,int>
	add	esp, 8

; 1081 : }

	pop	ebp
	ret	0
?lChangeProjectCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeProjectCount
_TEXT	ENDS
EXTRN	?getProjectMaking@CvTeam@@QBEHW4ProjectTypes@@@Z:PROC ; CvTeam::getProjectMaking
; Function compile flags: /Odtp
;	COMDAT ?lGetProjectMaking@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectMaking@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetProjectMaking, COMDAT

; 1086 : {

	push	ebp
	mov	ebp, esp

; 1087 : 	return BasicLuaMethod(L, &CvTeam::getProjectMaking);

	push	OFFSET ?getProjectMaking@CvTeam@@QBEHW4ProjectTypes@@@Z ; CvTeam::getProjectMaking
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ProjectTypes>
	add	esp, 8

; 1088 : }

	pop	ebp
	ret	0
?lGetProjectMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetProjectMaking
_TEXT	ENDS
EXTRN	?getUnitClassCount@CvTeam@@QBEHW4UnitClassTypes@@@Z:PROC ; CvTeam::getUnitClassCount
; Function compile flags: /Odtp
;	COMDAT ?lGetUnitClassCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitClassCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetUnitClassCount, COMDAT

; 1093 : {

	push	ebp
	mov	ebp, esp

; 1094 : 	return BasicLuaMethod(L, &CvTeam::getUnitClassCount);

	push	OFFSET ?getUnitClassCount@CvTeam@@QBEHW4UnitClassTypes@@@Z ; CvTeam::getUnitClassCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4UnitClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum UnitClassTypes>
	add	esp, 8

; 1095 : }

	pop	ebp
	ret	0
?lGetUnitClassCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetUnitClassCount
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4UnitClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum UnitClassTypes,int>
EXTRN	?isUnitClassMaxedOut@CvTeam@@QBE_NW4UnitClassTypes@@H@Z:PROC ; CvTeam::isUnitClassMaxedOut
; Function compile flags: /Odtp
;	COMDAT ?lIsUnitClassMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsUnitClassMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsUnitClassMaxedOut, COMDAT

; 1100 : {

	push	ebp
	mov	ebp, esp

; 1101 : 	return BasicLuaMethod(L, &CvTeam::isUnitClassMaxedOut);

	push	OFFSET ?isUnitClassMaxedOut@CvTeam@@QBE_NW4UnitClassTypes@@H@Z ; CvTeam::isUnitClassMaxedOut
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4UnitClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum UnitClassTypes,int>
	add	esp, 8

; 1102 : }

	pop	ebp
	ret	0
?lIsUnitClassMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsUnitClassMaxedOut
_TEXT	ENDS
EXTRN	?getBuildingClassCount@CvTeam@@QBEHW4BuildingClassTypes@@@Z:PROC ; CvTeam::getBuildingClassCount
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingClassCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingClassCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetBuildingClassCount, COMDAT

; 1107 : {

	push	ebp
	mov	ebp, esp

; 1108 : 	return BasicLuaMethod(L, &CvTeam::getBuildingClassCount);

	push	OFFSET ?getBuildingClassCount@CvTeam@@QBEHW4BuildingClassTypes@@@Z ; CvTeam::getBuildingClassCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum BuildingClassTypes>
	add	esp, 8

; 1109 : }

	pop	ebp
	ret	0
?lGetBuildingClassCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetBuildingClassCount
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4BuildingClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum BuildingClassTypes,int>
EXTRN	?isBuildingClassMaxedOut@CvTeam@@QBE_NW4BuildingClassTypes@@H@Z:PROC ; CvTeam::isBuildingClassMaxedOut
; Function compile flags: /Odtp
;	COMDAT ?lIsBuildingClassMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBuildingClassMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsBuildingClassMaxedOut, COMDAT

; 1114 : {

	push	ebp
	mov	ebp, esp

; 1115 : 	return BasicLuaMethod(L, &CvTeam::isBuildingClassMaxedOut);

	push	OFFSET ?isBuildingClassMaxedOut@CvTeam@@QBE_NW4BuildingClassTypes@@H@Z ; CvTeam::isBuildingClassMaxedOut
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4BuildingClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum BuildingClassTypes,int>
	add	esp, 8

; 1116 : }

	pop	ebp
	ret	0
?lIsBuildingClassMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsBuildingClassMaxedOut
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum BuildingTypes>
EXTRN	?getObsoleteBuildingCount@CvTeam@@QBEHW4BuildingTypes@@@Z:PROC ; CvTeam::getObsoleteBuildingCount
; Function compile flags: /Odtp
;	COMDAT ?lGetObsoleteBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetObsoleteBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetObsoleteBuildingCount, COMDAT

; 1121 : {

	push	ebp
	mov	ebp, esp

; 1122 : 	return BasicLuaMethod(L, &CvTeam::getObsoleteBuildingCount);

	push	OFFSET ?getObsoleteBuildingCount@CvTeam@@QBEHW4BuildingTypes@@@Z ; CvTeam::getObsoleteBuildingCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum BuildingTypes>
	add	esp, 8

; 1123 : }

	pop	ebp
	ret	0
?lGetObsoleteBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetObsoleteBuildingCount
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum BuildingTypes>
EXTRN	?isObsoleteBuilding@CvTeam@@QBE_NW4BuildingTypes@@@Z:PROC ; CvTeam::isObsoleteBuilding
; Function compile flags: /Odtp
;	COMDAT ?lIsObsoleteBuilding@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsObsoleteBuilding@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsObsoleteBuilding, COMDAT

; 1128 : {

	push	ebp
	mov	ebp, esp

; 1129 : 	return BasicLuaMethod(L, &CvTeam::isObsoleteBuilding);

	push	OFFSET ?isObsoleteBuilding@CvTeam@@QBE_NW4BuildingTypes@@@Z ; CvTeam::isObsoleteBuilding
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum BuildingTypes>
	add	esp, 8

; 1130 : }

	pop	ebp
	ret	0
?lIsObsoleteBuilding@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsObsoleteBuilding
_TEXT	ENDS
EXTRN	?IsHasResearchAgreement@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC ; CvTeam::IsHasResearchAgreement
; Function compile flags: /Odtp
;	COMDAT ?lIsHasResearchAgreement@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHasResearchAgreement@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsHasResearchAgreement, COMDAT

; 1135 : {

	push	ebp
	mov	ebp, esp

; 1136 : 	return BasicLuaMethod(L, &CvTeam::IsHasResearchAgreement);

	push	OFFSET ?IsHasResearchAgreement@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::IsHasResearchAgreement
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 1137 : }

	pop	ebp
	ret	0
?lIsHasResearchAgreement@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsHasResearchAgreement
_TEXT	ENDS
EXTRN	?IsHasTradeAgreement@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC ; CvTeam::IsHasTradeAgreement
; Function compile flags: /Odtp
;	COMDAT ?lIsHasTradeAgreement@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHasTradeAgreement@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsHasTradeAgreement, COMDAT

; 1142 : {

	push	ebp
	mov	ebp, esp

; 1143 : 	return BasicLuaMethod(L, &CvTeam::IsHasTradeAgreement);

	push	OFFSET ?IsHasTradeAgreement@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::IsHasTradeAgreement
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 1144 : }

	pop	ebp
	ret	0
?lIsHasTradeAgreement@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsHasTradeAgreement
_TEXT	ENDS
EXTRN	?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z:PROC	; CvTeamTechs::HasTech
EXTRN	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ:PROC ; CvTeam::GetTeamTechs
; Function compile flags: /Odtp
;	COMDAT ?lIsHasTech@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eTech$ = -8						; size = 4
_pkTeam$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsHasTech@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lIsHasTech, COMDAT

; 1149 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1150 : 	CvTeam* pkTeam = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkTeam$[ebp], eax

; 1151 : 	const TechTypes eTech = (TechTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eTech$[ebp], eax

; 1152 : 
; 1153 : 	lua_pushboolean(L, pkTeam->GetTeamTechs()->HasTech(eTech));

	mov	edx, DWORD PTR _eTech$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkTeam$[ebp]
	call	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ ; CvTeam::GetTeamTechs
	mov	ecx, eax
	call	?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z ; CvTeamTechs::HasTech
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 1154 : 	return 1;

	mov	eax, 1

; 1155 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsHasTech@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lIsHasTech
_TEXT	ENDS
EXTRN	?setHasTech@CvTeam@@QAEXW4TechTypes@@_NW4PlayerTypes@@11@Z:PROC ; CvTeam::setHasTech
; Function compile flags: /Odtp
;	COMDAT ?lSetHasTech@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bNewValue$ = -17					; size = 1
_ePlayer$ = -16						; size = 4
_bAnnounce$ = -10					; size = 1
_bFirst$ = -9						; size = 1
_eIndex$ = -8						; size = 4
_pkTeam$ = -4						; size = 4
_L$ = 8							; size = 4
?lSetHasTech@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lSetHasTech, COMDAT

; 1160 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 1161 : 	CvTeam* pkTeam = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkTeam$[ebp], eax

; 1162 : 	const TechTypes eIndex = (TechTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eIndex$[ebp], eax

; 1163 : 	const bool bNewValue = lua_toboolean(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bNewValue$[ebp], al

; 1164 : 	const PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 4);

	push	4
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 1165 : 	const bool bFirst = lua_toboolean(L, 4);

	push	4
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bFirst$[ebp], al

; 1166 : 	const bool bAnnounce = lua_toboolean(L, 5);

	push	5
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bAnnounce$[ebp], dl

; 1167 : 
; 1168 : 	pkTeam->setHasTech(eIndex, bNewValue, ePlayer, bFirst, bAnnounce);

	movzx	eax, BYTE PTR _bAnnounce$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bFirst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	movzx	eax, BYTE PTR _bNewValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkTeam$[ebp]
	call	?setHasTech@CvTeam@@QAEXW4TechTypes@@_NW4PlayerTypes@@11@Z ; CvTeam::setHasTech

; 1169 : 	return 0;

	xor	eax, eax

; 1170 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetHasTech@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lSetHasTech
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAXPAUlua_State@@PAVCvTeamTechs@@@Z ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::Push
; Function compile flags: /Odtp
;	COMDAT ?lGetTeamTechs@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkTeamTechs$ = -8					; size = 4
_pkTeam$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetTeamTechs@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetTeamTechs, COMDAT

; 1175 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1176 : 	CvTeam* pkTeam = GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkTeam$[ebp], eax

; 1177 : 	CvTeamTechs* pkTeamTechs = pkTeam->GetTeamTechs();

	mov	ecx, DWORD PTR _pkTeam$[ebp]
	call	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ ; CvTeam::GetTeamTechs
	mov	DWORD PTR _pkTeamTechs$[ebp], eax

; 1178 : 
; 1179 : 	CvLuaTeamTech::Push(L, pkTeamTechs);

	mov	ecx, DWORD PTR _pkTeamTechs$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?Push@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAXPAUlua_State@@PAVCvTeamTechs@@@Z ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::Push
	add	esp, 8

; 1180 : 	return 1;

	mov	eax, 1

; 1181 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTeamTechs@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetTeamTechs
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ImprovementTypes@@W4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ImprovementTypes@@W4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ImprovementTypes,enum YieldTypes>
EXTRN	?getImprovementYieldChange@CvTeam@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z:PROC ; CvTeam::getImprovementYieldChange
; Function compile flags: /Odtp
;	COMDAT ?lGetImprovementYieldChange@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetImprovementYieldChange@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetImprovementYieldChange, COMDAT

; 1186 : {

	push	ebp
	mov	ebp, esp

; 1187 : 	return BasicLuaMethod(L, &CvTeam::getImprovementYieldChange);

	push	OFFSET ?getImprovementYieldChange@CvTeam@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z ; CvTeam::getImprovementYieldChange
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4ImprovementTypes@@W4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ImprovementTypes@@W4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ImprovementTypes,enum YieldTypes>
	add	esp, 8

; 1188 : }

	pop	ebp
	ret	0
?lGetImprovementYieldChange@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetImprovementYieldChange
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4ImprovementTypes@@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ImprovementTypes@@W4YieldTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ImprovementTypes,enum YieldTypes,int>
EXTRN	?changeImprovementYieldChange@CvTeam@@QAEXW4ImprovementTypes@@W4YieldTypes@@H@Z:PROC ; CvTeam::changeImprovementYieldChange
; Function compile flags: /Odtp
;	COMDAT ?lChangeImprovementYieldChange@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeImprovementYieldChange@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeImprovementYieldChange, COMDAT

; 1193 : {

	push	ebp
	mov	ebp, esp

; 1194 : 	return BasicLuaMethod(L, &CvTeam::changeImprovementYieldChange);

	push	OFFSET ?changeImprovementYieldChange@CvTeam@@QAEXW4ImprovementTypes@@W4YieldTypes@@H@Z ; CvTeam::changeImprovementYieldChange
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4ImprovementTypes@@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ImprovementTypes@@W4YieldTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ImprovementTypes,enum YieldTypes,int>
	add	esp, 8

; 1195 : }

	pop	ebp
	ret	0
?lChangeImprovementYieldChange@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeImprovementYieldChange
_TEXT	ENDS
EXTRN	?IsHomeOfUnitedNations@CvTeam@@QBE_NXZ:PROC	; CvTeam::IsHomeOfUnitedNations
; Function compile flags: /Odtp
;	COMDAT ?lIsHomeOfUnitedNations@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHomeOfUnitedNations@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsHomeOfUnitedNations, COMDAT

; 1201 : {

	push	ebp
	mov	ebp, esp

; 1202 : 	return BasicLuaMethod(L, &CvTeam::IsHomeOfUnitedNations);

	push	OFFSET ?IsHomeOfUnitedNations@CvTeam@@QBE_NXZ ; CvTeam::IsHomeOfUnitedNations
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 1203 : }

	pop	ebp
	ret	0
?lIsHomeOfUnitedNations@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsHomeOfUnitedNations
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4VictoryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum VictoryTypes>
EXTRN	?getVictoryCountdown@CvTeam@@QBEHW4VictoryTypes@@@Z:PROC ; CvTeam::getVictoryCountdown
; Function compile flags: /Odtp
;	COMDAT ?lGetVictoryCountdown@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetVictoryCountdown@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetVictoryCountdown, COMDAT

; 1208 : {

	push	ebp
	mov	ebp, esp

; 1209 : 	return BasicLuaMethod(L, &CvTeam::getVictoryCountdown);

	push	OFFSET ?getVictoryCountdown@CvTeam@@QBEHW4VictoryTypes@@@Z ; CvTeam::getVictoryCountdown
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4VictoryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum VictoryTypes>
	add	esp, 8

; 1210 : }

	pop	ebp
	ret	0
?lGetVictoryCountdown@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetVictoryCountdown
_TEXT	ENDS
EXTRN	?getVictoryDelay@CvTeam@@QBEHW4VictoryTypes@@@Z:PROC ; CvTeam::getVictoryDelay
; Function compile flags: /Odtp
;	COMDAT ?lGetVictoryDelay@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetVictoryDelay@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetVictoryDelay, COMDAT

; 1215 : {

	push	ebp
	mov	ebp, esp

; 1216 : 	return BasicLuaMethod(L, &CvTeam::getVictoryDelay);

	push	OFFSET ?getVictoryDelay@CvTeam@@QBEHW4VictoryTypes@@@Z ; CvTeam::getVictoryDelay
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4VictoryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum VictoryTypes>
	add	esp, 8

; 1217 : }

	pop	ebp
	ret	0
?lGetVictoryDelay@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetVictoryDelay
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4VictoryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum VictoryTypes>
EXTRN	?canLaunch@CvTeam@@QBE_NW4VictoryTypes@@@Z:PROC	; CvTeam::canLaunch
; Function compile flags: /Odtp
;	COMDAT ?lCanLaunch@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanLaunch@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lCanLaunch, COMDAT

; 1222 : {

	push	ebp
	mov	ebp, esp

; 1223 : 	return BasicLuaMethod(L, &CvTeam::canLaunch);

	push	OFFSET ?canLaunch@CvTeam@@QBE_NW4VictoryTypes@@@Z ; CvTeam::canLaunch
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4VictoryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum VictoryTypes>
	add	esp, 8

; 1224 : }

	pop	ebp
	ret	0
?lCanLaunch@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lCanLaunch
_TEXT	ENDS
EXTRN	?getVictoryPoints@CvTeam@@QBEHXZ:PROC		; CvTeam::getVictoryPoints
; Function compile flags: /Odtp
;	COMDAT ?lGetVictoryPoints@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetVictoryPoints@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetVictoryPoints, COMDAT

; 1230 : {

	push	ebp
	mov	ebp, esp

; 1231 : 	return BasicLuaMethod(L, &CvTeam::getVictoryPoints);

	push	OFFSET ?getVictoryPoints@CvTeam@@QBEHXZ	; CvTeam::getVictoryPoints
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 1232 : }

	pop	ebp
	ret	0
?lGetVictoryPoints@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetVictoryPoints
_TEXT	ENDS
EXTRN	?changeVictoryPoints@CvTeam@@QAEXH@Z:PROC	; CvTeam::changeVictoryPoints
; Function compile flags: /Odtp
;	COMDAT ?lChangeVictoryPoints@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeVictoryPoints@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeVictoryPoints, COMDAT

; 1237 : {

	push	ebp
	mov	ebp, esp

; 1238 : 	return BasicLuaMethod(L, &CvTeam::changeVictoryPoints);

	push	OFFSET ?changeVictoryPoints@CvTeam@@QAEXH@Z ; CvTeam::changeVictoryPoints
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 1239 : }

	pop	ebp
	ret	0
?lChangeVictoryPoints@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeVictoryPoints
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4EraTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum EraTypes>
EXTRN	?GetCurrentEra@CvTeam@@QBE?AW4EraTypes@@XZ:PROC	; CvTeam::GetCurrentEra
; Function compile flags: /Odtp
;	COMDAT ?lGetCurrentEra@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCurrentEra@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetCurrentEra, COMDAT

; 1244 : {

	push	ebp
	mov	ebp, esp

; 1245 : 	return BasicLuaMethod(L, &CvTeam::GetCurrentEra);

	push	OFFSET ?GetCurrentEra@CvTeam@@QBE?AW4EraTypes@@XZ ; CvTeam::GetCurrentEra
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4EraTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum EraTypes>
	add	esp, 8

; 1246 : }

	pop	ebp
	ret	0
?lGetCurrentEra@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetCurrentEra
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4EraTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum EraTypes>
EXTRN	?SetCurrentEra@CvTeam@@QAEXW4EraTypes@@@Z:PROC	; CvTeam::SetCurrentEra
; Function compile flags: /Odtp
;	COMDAT ?lSetCurrentEra@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetCurrentEra@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lSetCurrentEra, COMDAT

; 1250 : {

	push	ebp
	mov	ebp, esp

; 1251 : 	return BasicLuaMethod(L, &CvTeam::SetCurrentEra);

	push	OFFSET ?SetCurrentEra@CvTeam@@QAEXW4EraTypes@@@Z ; CvTeam::SetCurrentEra
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4EraTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum EraTypes>
	add	esp, 8

; 1252 : }

	pop	ebp
	ret	0
?lSetCurrentEra@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lSetCurrentEra
_TEXT	ENDS
PUBLIC	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod
EXTRN	?UpdateEmbarkGraphics@CvTeam@@QAEXXZ:PROC	; CvTeam::UpdateEmbarkGraphics
; Function compile flags: /Odtp
;	COMDAT ?lUpdateEmbarkGraphics@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lUpdateEmbarkGraphics@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lUpdateEmbarkGraphics, COMDAT

; 1256 : {

	push	ebp
	mov	ebp, esp

; 1257 : 	return BasicLuaMethod(L, &CvTeam::UpdateEmbarkGraphics);

	push	OFFSET ?UpdateEmbarkGraphics@CvTeam@@QAEXXZ ; CvTeam::UpdateEmbarkGraphics
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod
	add	esp, 8

; 1258 : }

	pop	ebp
	ret	0
?lUpdateEmbarkGraphics@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lUpdateEmbarkGraphics
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXXZ@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod, COMDAT

; 222  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 223  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 224  : 	(pkType->*func)();

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 225  : 	return 0;

	xor	eax, eax

; 226  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod
_TEXT	ENDS
PUBLIC	??_C@_07NHABFFHN@__index?$AA@			; `string'
PUBLIC	??_C@_0L@GCADIOHF@__instance?$AA@		; `string'
PUBLIC	??_C@_01MHEDDDHA@v?$AA@				; `string'
PUBLIC	??_C@_06BPGFKLEK@__mode?$AA@			; `string'
PUBLIC	??_C@_0M@CEBPKMAI@__instances?$AA@		; `string'
EXTRN	_lua_pushnil:PROC
EXTRN	_lua_remove:PROC
EXTRN	_lua_pushlightuserdata:PROC
EXTRN	_lua_rawget:PROC
EXTRN	_lua_gettop:PROC
EXTRN	_lua_setmetatable:PROC
EXTRN	_lua_rawset:PROC
;	COMDAT ??_C@_07NHABFFHN@__index?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
CONST	SEGMENT
??_C@_07NHABFFHN@__index?$AA@ DB '__index', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GCADIOHF@__instance?$AA@
CONST	SEGMENT
??_C@_0L@GCADIOHF@__instance?$AA@ DB '__instance', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01MHEDDDHA@v?$AA@
CONST	SEGMENT
??_C@_01MHEDDDHA@v?$AA@ DB 'v', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06BPGFKLEK@__mode?$AA@
CONST	SEGMENT
??_C@_06BPGFKLEK@__mode?$AA@ DB '__mode', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CEBPKMAI@__instances?$AA@
CONST	SEGMENT
??_C@_0M@CEBPKMAI@__instances?$AA@ DB '__instances', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAXPAUlua_State@@PAVCvTeam@@@Z
_TEXT	SEGMENT
_instances_index$219474 = -8				; size = 4
_type_index$219473 = -4					; size = 4
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAXPAUlua_State@@PAVCvTeam@@@Z PROC ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::Push, COMDAT

; 39   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	cmp	DWORD PTR _pkType$[ebp], 0
	je	$LN4@Push

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaTeam@@SAPBDXZ		; CvLuaTeam::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN3@Push

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 59   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 63   : 			lua_newtable(L);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET ??_C@_06BPGFKLEK@__mode?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET ??_C@_01MHEDDDHA@v?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawset
	add	esp, 8

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushvalue
	add	esp, 8

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaTeam@@SAPBDXZ		; CvLuaTeam::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?PushMethods@CvLuaTeam@@SAXPAUlua_State@@H@Z ; CvLuaTeam::PushMethods
	add	esp, 8
$LN3@Push:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _type_index$219473[ebp], eax

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawget
	add	esp, 8

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _instances_index$219474[ebp], eax

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawget
	add	esp, 8

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN2@Push

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settop
	add	esp, 8

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 97   : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET ??_C@_07NHABFFHN@__index?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 102  : 			lua_pushvalue(L, type_index);

	mov	ecx, DWORD PTR _type_index$219473[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushvalue
	add	esp, 8

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushvalue
	add	esp, 8

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	mov	edx, DWORD PTR _instances_index$219474[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8
$LN2@Push:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	mov	ecx, DWORD PTR _instances_index$219474[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_remove
	add	esp, 8

; 114  : 		lua_remove(L, type_index);

	mov	eax, DWORD PTR _type_index$219473[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_remove
	add	esp, 8

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else

	jmp	SHORT $LN5@Push
$LN4@Push:

; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushnil
	add	esp, 4
$LN5@Push:

; 122  : 	}
; 123  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAXPAUlua_State@@PAVCvTeam@@@Z ENDP ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::Push
_TEXT	ENDS
PUBLIC	??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@ ; `string'
EXTRN	_luaL_error:PROC
EXTRN	_lua_touserdata:PROC
;	COMDAT ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
CONST	SEGMENT
??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@ DB 'Not a val'
	DB	'id instance.  Either the instance is NULL or you used ''.'' i'
	DB	'nstead of '':''.', 00H			; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_stack_size$ = -12					; size = 4
_pkInstance$ = -8					; size = 4
_bFail$ = -1						; size = 1
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 128  : 	const int stack_size = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _stack_size$[ebp], eax

; 129  : 	bool bFail = true;

	mov	BYTE PTR _bFail$[ebp], 1

; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;

	mov	DWORD PTR _pkInstance$[ebp], 0

; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 5
	jne	SHORT $LN5@GetInstanc

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN5@GetInstanc

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$[ebp], eax

; 138  : 			if(pkInstance)

	cmp	DWORD PTR _pkInstance$[ebp], 0
	je	SHORT $LN5@GetInstanc

; 139  : 			{
; 140  : 				bFail = false;

	mov	BYTE PTR _bFail$[ebp], 0
$LN5@GetInstanc:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	mov	ecx, DWORD PTR _stack_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	movzx	eax, BYTE PTR _bFail$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetInstanc
	movzx	ecx, BYTE PTR _bErrorOnFail$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@GetInstanc

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[ebp], 1
	jne	SHORT $LN1@GetInstanc

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc:

; 151  : 		Derived::HandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?HandleMissingInstance@CvLuaTeam@@SAXPAUlua_State@@@Z ; CvLuaTeam::HandleMissingInstance
	add	esp, 4
$LN2@GetInstanc:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, DWORD PTR _pkInstance$[ebp]

; 154  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
_TEXT	ENDS
PUBLIC	??_C@_0BJ@GHLHFGFM@Instance?5does?5not?5exist?4?$AA@ ; `string'
;	COMDAT ??_C@_0BJ@GHLHFGFM@Instance?5does?5not?5exist?4?$AA@
CONST	SEGMENT
??_C@_0BJ@GHLHFGFM@Instance?5does?5not?5exist?4?$AA@ DB 'Instance does no'
	DB	't exist.', 00H				; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@KAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@KAXPAUlua_State@@@Z PROC ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::DefaultHandleMissingInstance, COMDAT

; 164  : {

	push	ebp
	mov	ebp, esp

; 165  : 	luaL_error(L, "Instance does not exist.");

	push	OFFSET ??_C@_0BJ@GHLHFGFM@Instance?5does?5not?5exist?4?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_error
	add	esp, 8

; 166  : }

	pop	ebp
	ret	0
?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@KAXPAUlua_State@@@Z ENDP ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::DefaultHandleMissingInstance
_TEXT	ENDS
EXTRN	?PushMethods@CvLuaTeamTech@@SAXPAUlua_State@@H@Z:PROC ; CvLuaTeamTech::PushMethods
EXTRN	?GetTypeName@CvLuaTeamTech@@SAPBDXZ:PROC	; CvLuaTeamTech::GetTypeName
; Function compile flags: /Odtp
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAXPAUlua_State@@PAVCvTeamTechs@@@Z
_TEXT	SEGMENT
_instances_index$219517 = -8				; size = 4
_type_index$219516 = -4					; size = 4
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAXPAUlua_State@@PAVCvTeamTechs@@@Z PROC ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::Push, COMDAT

; 39   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	cmp	DWORD PTR _pkType$[ebp], 0
	je	$LN4@Push@2

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaTeamTech@@SAPBDXZ	; CvLuaTeamTech::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN3@Push@2

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 59   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 63   : 			lua_newtable(L);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET ??_C@_06BPGFKLEK@__mode?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET ??_C@_01MHEDDDHA@v?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawset
	add	esp, 8

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushvalue
	add	esp, 8

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaTeamTech@@SAPBDXZ	; CvLuaTeamTech::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?PushMethods@CvLuaTeamTech@@SAXPAUlua_State@@H@Z ; CvLuaTeamTech::PushMethods
	add	esp, 8
$LN3@Push@2:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _type_index$219516[ebp], eax

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawget
	add	esp, 8

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _instances_index$219517[ebp], eax

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawget
	add	esp, 8

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN2@Push@2

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settop
	add	esp, 8

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 97   : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET ??_C@_07NHABFFHN@__index?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 102  : 			lua_pushvalue(L, type_index);

	mov	ecx, DWORD PTR _type_index$219516[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushvalue
	add	esp, 8

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushvalue
	add	esp, 8

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	mov	edx, DWORD PTR _instances_index$219517[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8
$LN2@Push@2:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	mov	ecx, DWORD PTR _instances_index$219517[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_remove
	add	esp, 8

; 114  : 		lua_remove(L, type_index);

	mov	eax, DWORD PTR _type_index$219516[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_remove
	add	esp, 8

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else

	jmp	SHORT $LN5@Push@2
$LN4@Push@2:

; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushnil
	add	esp, 4
$LN5@Push@2:

; 122  : 	}
; 123  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAXPAUlua_State@@PAVCvTeamTechs@@@Z ENDP ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::Push
_TEXT	ENDS
PUBLIC	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TeamTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TeamTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 1
??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z PROC	; CvLuaArgs::pushValue<bool>, COMDAT

; 44   : 	{

	push	ebp
	mov	ebp, esp

; 45   : 		lua_pushboolean(L, t);

	movzx	eax, BYTE PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 46   : 	}

	pop	ebp
	ret	0
??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ENDP	; CvLuaArgs::pushValue<bool>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes,bool>, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 240  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TeamTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 243  : 	return 0;

	xor	eax, eax

; 244  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes,bool>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z PROC	; CvLuaArgs::toValue<bool>, COMDAT

; 23   : 	{

	push	ebp
	mov	ebp, esp

; 24   : 		return lua_toboolean(L, idx) != 0;

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	neg	eax
	sbb	eax, eax
	neg	eax

; 25   : 	}

	pop	ebp
	ret	0
??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ENDP	; CvLuaArgs::toValue<bool>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@_N2@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@_N2@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes,bool,bool>, COMDAT

; 249  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 250  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 251  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 252  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TeamTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 253  : 	return 0;

	xor	eax, eax

; 254  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4TeamTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@_N2@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes,bool,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4TeamTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4TeamTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum TeamTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TeamTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4TeamTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum TeamTypes>
_TEXT	ENDS
EXTRN	_lua_pushinteger:PROC
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
;	COMDAT ??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z PROC	; CvLuaArgs::pushValue<int>, COMDAT

; 38   : 	{

	push	ebp
	mov	ebp, esp

; 39   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 40   : 	}

	pop	ebp
	ret	0
??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ENDP	; CvLuaArgs::pushValue<int>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4TeamTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4TeamTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z ; CvLuaArgs::pushValue<enum TeamTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4TeamTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEH_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEH_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,bool>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEH_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4UnitClassTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4UnitClassTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum UnitClassTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum UnitClassTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4UnitClassTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum UnitClassTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingClassTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingClassTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum BuildingClassTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingClassTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingClassTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum BuildingClassTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HPAVCvArea@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHPAVCvArea@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HPAVCvArea@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHPAVCvArea@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,CvArea *>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@PAVCvArea@@@CvLuaArgs@@YAPAVCvArea@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<CvArea *>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HPAVCvArea@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHPAVCvArea@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,CvArea *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4PlayerTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4PlayerTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum PlayerTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z ; CvLuaArgs::pushValue<enum PlayerTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4PlayerTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4HandicapTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4HandicapTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum HandicapTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z ; CvLuaArgs::pushValue<enum HandicapTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4HandicapTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum HandicapTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z PROC	; CvLuaArgs::toValue<int>, COMDAT

; 18   : 	{

	push	ebp
	mov	ebp, esp

; 19   : 		return lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 20   : 	}

	pop	ebp
	ret	0
??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ENDP	; CvLuaArgs::toValue<int>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4VoteSourceTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4VoteSourceTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4VoteSourceTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4VoteSourceTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum VoteSourceTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4VoteSourceTypes@@@CvLuaArgs@@YA?AW4VoteSourceTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum VoteSourceTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4VoteSourceTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4VoteSourceTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum VoteSourceTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4VoteSourceTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4VoteSourceTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4VoteSourceTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4VoteSourceTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum VoteSourceTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4VoteSourceTypes@@@CvLuaArgs@@YA?AW4VoteSourceTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum VoteSourceTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4VoteSourceTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4VoteSourceTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum VoteSourceTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4VoteSourceTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4VoteSourceTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4VoteSourceTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4VoteSourceTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum VoteSourceTypes,int>, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 240  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4VoteSourceTypes@@@CvLuaArgs@@YA?AW4VoteSourceTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum VoteSourceTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 243  : 	return 0;

	xor	eax, eax

; 244  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4VoteSourceTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4VoteSourceTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum VoteSourceTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEX_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEX_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEX_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHH@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,int>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NH@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,int>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXHH@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXHH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,int>, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 240  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 243  : 	return 0;

	xor	eax, eax

; 244  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXHH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4DomainTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4DomainTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4DomainTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4DomainTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum DomainTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4DomainTypes@@@CvLuaArgs@@YA?AW4DomainTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum DomainTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4DomainTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4DomainTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum DomainTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4DomainTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4DomainTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4DomainTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4DomainTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum DomainTypes,int>, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 240  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4DomainTypes@@@CvLuaArgs@@YA?AW4DomainTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum DomainTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 243  : 	return 0;

	xor	eax, eax

; 244  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4DomainTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4DomainTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum DomainTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4RouteTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4RouteTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4RouteTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4RouteTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum RouteTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4RouteTypes@@@CvLuaArgs@@YA?AW4RouteTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum RouteTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4RouteTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4RouteTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum RouteTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4RouteTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4RouteTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4RouteTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4RouteTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum RouteTypes,int>, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 240  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4RouteTypes@@@CvLuaArgs@@YA?AW4RouteTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum RouteTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 243  : 	return 0;

	xor	eax, eax

; 244  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4RouteTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4RouteTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum RouteTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ProjectTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ProjectTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ProjectTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ProjectTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ProjectTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ProjectTypes,int>, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 240  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ProjectTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 243  : 	return 0;

	xor	eax, eax

; 244  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ProjectTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ProjectTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ProjectTypes,int>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ProjectTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ProjectTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4ProjectTypes@@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ProjectTypes@@HH@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4ProjectTypes@@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ProjectTypes@@HH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ProjectTypes,int,int>, COMDAT

; 249  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 250  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 251  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 252  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _idx$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ProjectTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 253  : 	return 0;

	xor	eax, eax

; 254  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4ProjectTypes@@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ProjectTypes@@HH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ProjectTypes,int,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4ProjectTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4ProjectTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum ProjectTypes,int>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ProjectTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4ProjectTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum ProjectTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4ProjectTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4ProjectTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum ProjectTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ProjectTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4ProjectTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum ProjectTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4UnitClassTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4UnitClassTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum UnitClassTypes,int>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum UnitClassTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4UnitClassTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum UnitClassTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4BuildingClassTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4BuildingClassTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum BuildingClassTypes,int>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingClassTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4BuildingClassTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum BuildingClassTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum BuildingTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum BuildingTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4BuildingTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4BuildingTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum BuildingTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4BuildingTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum BuildingTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4ImprovementTypes@@W4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ImprovementTypes@@W4YieldTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ImprovementTypes@@W4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ImprovementTypes@@W4YieldTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ImprovementTypes,enum YieldTypes>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum YieldTypes>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4ImprovementTypes@@@CvLuaArgs@@YA?AW4ImprovementTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ImprovementTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4ImprovementTypes@@W4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ImprovementTypes@@W4YieldTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ImprovementTypes,enum YieldTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4ImprovementTypes@@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ImprovementTypes@@W4YieldTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4ImprovementTypes@@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ImprovementTypes@@W4YieldTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ImprovementTypes,enum YieldTypes,int>, COMDAT

; 249  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 250  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 251  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 252  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum YieldTypes>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _idx$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$toValue@W4ImprovementTypes@@@CvLuaArgs@@YA?AW4ImprovementTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ImprovementTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 253  : 	return 0;

	xor	eax, eax

; 254  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4ImprovementTypes@@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ImprovementTypes@@W4YieldTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ImprovementTypes,enum YieldTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4VictoryTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4VictoryTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum VictoryTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4VictoryTypes@@@CvLuaArgs@@YA?AW4VictoryTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum VictoryTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4VictoryTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum VictoryTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4VictoryTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4VictoryTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum VictoryTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4VictoryTypes@@@CvLuaArgs@@YA?AW4VictoryTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum VictoryTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4VictoryTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum VictoryTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4EraTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4EraTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum EraTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4EraTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EraTypes@@@Z ; CvLuaArgs::pushValue<enum EraTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4EraTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum EraTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4EraTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4EraTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum EraTypes>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4EraTypes@@@CvLuaArgs@@YA?AW4EraTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum EraTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4EraTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum EraTypes>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
_TEXT	ENDS
;	COMDAT ?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ
_TEXT	SEGMENT
?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ PROC ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex, COMDAT

; 158  : {

	push	ebp
	mov	ebp, esp

; 159  : 	return 2;

	mov	eax, 2

; 160  : }

	pop	ebp
	ret	0
?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ENDP ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum TeamTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum TeamTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z PROC ; CvLuaArgs::pushValue<enum TeamTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum TeamTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum UnitClassTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum UnitClassTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum BuildingClassTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum BuildingClassTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@PAVCvArea@@@CvLuaArgs@@YAPAVCvArea@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@PAVCvArea@@@CvLuaArgs@@YAPAVCvArea@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<CvArea *>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@PAVCvArea@@@CvLuaArgs@@YAPAVCvArea@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<CvArea *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z PROC ; CvLuaArgs::pushValue<enum PlayerTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z PROC ; CvLuaArgs::pushValue<enum HandicapTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum HandicapTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4VoteSourceTypes@@@CvLuaArgs@@YA?AW4VoteSourceTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4VoteSourceTypes@@@CvLuaArgs@@YA?AW4VoteSourceTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum VoteSourceTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4VoteSourceTypes@@@CvLuaArgs@@YA?AW4VoteSourceTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum VoteSourceTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4DomainTypes@@@CvLuaArgs@@YA?AW4DomainTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4DomainTypes@@@CvLuaArgs@@YA?AW4DomainTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum DomainTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4DomainTypes@@@CvLuaArgs@@YA?AW4DomainTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum DomainTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4RouteTypes@@@CvLuaArgs@@YA?AW4RouteTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4RouteTypes@@@CvLuaArgs@@YA?AW4RouteTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum RouteTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4RouteTypes@@@CvLuaArgs@@YA?AW4RouteTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum RouteTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum ProjectTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum ProjectTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum BuildingTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum BuildingTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4ImprovementTypes@@@CvLuaArgs@@YA?AW4ImprovementTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4ImprovementTypes@@@CvLuaArgs@@YA?AW4ImprovementTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum ImprovementTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4ImprovementTypes@@@CvLuaArgs@@YA?AW4ImprovementTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum ImprovementTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum YieldTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum YieldTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4VictoryTypes@@@CvLuaArgs@@YA?AW4VictoryTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4VictoryTypes@@@CvLuaArgs@@YA?AW4VictoryTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum VictoryTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4VictoryTypes@@@CvLuaArgs@@YA?AW4VictoryTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum VictoryTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4EraTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EraTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4EraTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EraTypes@@@Z PROC ; CvLuaArgs::pushValue<enum EraTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4EraTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EraTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum EraTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4EraTypes@@@CvLuaArgs@@YA?AW4EraTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4EraTypes@@@CvLuaArgs@@YA?AW4EraTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum EraTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4EraTypes@@@CvLuaArgs@@YA?AW4EraTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum EraTypes>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
_TEXT	ENDS
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvteam.h
_TEXT	ENDS
;	COMDAT ?isAlive@CvTeam@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?isAlive@CvTeam@@QBE_NXZ PROC				; CvTeam::isAlive, COMDAT
; _this$ = ecx

; 130  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 131  : 		return m_iAliveCount > 0;

	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+12], 0
	setg	cl
	mov	al, cl

; 132  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?isAlive@CvTeam@@QBE_NXZ ENDP				; CvTeam::isAlive
_TEXT	ENDS
END
