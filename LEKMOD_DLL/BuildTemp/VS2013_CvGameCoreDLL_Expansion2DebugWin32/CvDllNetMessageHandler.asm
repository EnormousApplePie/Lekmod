; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvDllNetMessageHandler.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_05OCFELOIJ@1?40?40?$AA@			; `string'
PUBLIC	?NO_QUEST_DATA@CvMinorCivQuest@@2HB		; CvMinorCivQuest::NO_QUEST_DATA
PUBLIC	?NO_TURN@CvMinorCivQuest@@2HB			; CvMinorCivQuest::NO_TURN
CONST	SEGMENT
_guidICvUnknown DD 0d89ba82fH
	DW	09fa3H
	DW	04696H
	DB	0b3H
	DB	0f4H
	DB	052H
	DB	0bdH
	DB	0b1H
	DB	01H
	DB	0cfH
	DB	0b2H
_guidICvNetMessageHandler1 DD 055b80da7H
	DW	0d175H
	DW	04ea7H
	DB	0b5H
	DB	055H
	DB	0b9H
	DB	088H
	DB	045H
	DB	0ddH
	DB	0dcH
	DB	08eH
_guidICvNetMessageHandler2 DD 0a8d76617H
	DW	0571dH
	DW	040a5H
	DB	0b8H
	DB	02cH
	DB	0ffH
	DB	0cH
	DB	051H
	DB	049H
	DB	07cH
	DB	013H
_guidICvNetMessageHandler3 DD 09b606e9aH
	DW	0670cH
	DW	046fbH
	DB	0beH
	DB	0c9H
	DB	0e6H
	DB	06aH
	DB	02eH
	DB	08eH
	DB	072H
	DB	06bH
CONST	ENDS
;	COMDAT ?NO_TURN@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_TURN@CvMinorCivQuest@@2HB DD 0ffffffffH		; CvMinorCivQuest::NO_TURN
CONST	ENDS
;	COMDAT ?NO_QUEST_DATA@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_QUEST_DATA@CvMinorCivQuest@@2HB DD 0ffffffffH	; CvMinorCivQuest::NO_QUEST_DATA
CONST	ENDS
_DATA	SEGMENT
_CIV5_XP2_DLL_VERSION DD FLAT:??_C@_05OCFELOIJ@1?40?40?$AA@
_DATA	ENDS
;	COMDAT ??_C@_05OCFELOIJ@1?40?40?$AA@
CONST	SEGMENT
??_C@_05OCFELOIJ@1?40?40?$AA@ DB '1.0.0', 00H		; `string'
CONST	ENDS
PUBLIC	??_7CvDllNetMessageHandler@@6B@			; CvDllNetMessageHandler::`vftable'
PUBLIC	??_7ICvNetMessageHandler3@@6B@			; ICvNetMessageHandler3::`vftable'
PUBLIC	??_7ICvNetMessageHandler2@@6B@			; ICvNetMessageHandler2::`vftable'
PUBLIC	??_7ICvNetMessageHandler1@@6B@			; ICvNetMessageHandler1::`vftable'
PUBLIC	??_7ICvUnknown@@6B@				; ICvUnknown::`vftable'
PUBLIC	??0CvDllNetMessageHandler@@QAE@XZ		; CvDllNetMessageHandler::CvDllNetMessageHandler
PUBLIC	?QueryInterface@CvDllNetMessageHandler@@UAGPAXU_GUID@@@Z ; CvDllNetMessageHandler::QueryInterface
PUBLIC	?Destroy@CvDllNetMessageHandler@@EAGXXZ		; CvDllNetMessageHandler::Destroy
PUBLIC	?ResponseAdvancedStartAction@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4AdvancedStartActionTypes@@HHH_N@Z ; CvDllNetMessageHandler::ResponseAdvancedStartAction
PUBLIC	?ResponseAutoMission@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H@Z ; CvDllNetMessageHandler::ResponseAutoMission
PUBLIC	?ResponseBarbarianRansom@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z ; CvDllNetMessageHandler::ResponseBarbarianRansom
PUBLIC	?ResponseChangeWar@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4TeamTypes@@_N@Z ; CvDllNetMessageHandler::ResponseChangeWar
PUBLIC	?ResponseCityBuyPlot@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HHH@Z ; CvDllNetMessageHandler::ResponseCityBuyPlot
PUBLIC	?ResponseCityDoTask@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4TaskTypes@@HH_N222@Z ; CvDllNetMessageHandler::ResponseCityDoTask
PUBLIC	?ResponseCityPopOrder@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z ; CvDllNetMessageHandler::ResponseCityPopOrder
PUBLIC	?ResponseCityPurchase@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@@Z ; CvDllNetMessageHandler::ResponseCityPurchase
PUBLIC	?ResponseCityPushOrder@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4OrderTypes@@H_N22@Z ; CvDllNetMessageHandler::ResponseCityPushOrder
PUBLIC	?ResponseCitySwapOrder@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z ; CvDllNetMessageHandler::ResponseCitySwapOrder
PUBLIC	?ResponseChooseElection@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z ; CvDllNetMessageHandler::ResponseChooseElection
PUBLIC	?ResponseDestroyUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H@Z ; CvDllNetMessageHandler::ResponseDestroyUnit
PUBLIC	?ResponseDiplomacyFromUI@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0W4FromUIDiploEventTypes@@HH@Z ; CvDllNetMessageHandler::ResponseDiplomacyFromUI
PUBLIC	?ResponseDiploVote@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0@Z ; CvDllNetMessageHandler::ResponseDiploVote
PUBLIC	?ResponseDoCommand@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4CommandTypes@@HH_N@Z ; CvDllNetMessageHandler::ResponseDoCommand
PUBLIC	?ResponseExtendedGame@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@@Z ; CvDllNetMessageHandler::ResponseExtendedGame
PUBLIC	?ResponseGiftUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z ; CvDllNetMessageHandler::ResponseGiftUnit
PUBLIC	?ResponseGreatPersonChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4UnitTypes@@@Z ; CvDllNetMessageHandler::ResponseGreatPersonChoice
PUBLIC	?ResponseLaunchSpaceship@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4VictoryTypes@@@Z ; CvDllNetMessageHandler::ResponseLaunchSpaceship
PUBLIC	?ResponseLiberatePlayer@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z ; CvDllNetMessageHandler::ResponseLiberatePlayer
PUBLIC	?ResponseMinorCivGiftGold@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z ; CvDllNetMessageHandler::ResponseMinorCivGiftGold
PUBLIC	?ResponseMinorNoUnitSpawning@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0_N@Z ; CvDllNetMessageHandler::ResponseMinorNoUnitSpawning
PUBLIC	?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z ; CvDllNetMessageHandler::ResponsePlayerDealFinalized
PUBLIC	?ResponsePlayerOption@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4PlayerOptionTypes@@_N@Z ; CvDllNetMessageHandler::ResponsePlayerOption
PUBLIC	?ResponsePushMission@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4MissionTypes@@HHH_N@Z ; CvDllNetMessageHandler::ResponsePushMission
PUBLIC	?ResponseRenameCity@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z ; CvDllNetMessageHandler::ResponseRenameCity
PUBLIC	?ResponseRenameUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z ; CvDllNetMessageHandler::ResponseRenameUnit
PUBLIC	?ResponseResearch@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4TechTypes@@H_N@Z ; CvDllNetMessageHandler::ResponseResearch
PUBLIC	?ResponseReturnCivilian@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H_N@Z ; CvDllNetMessageHandler::ResponseReturnCivilian
PUBLIC	?ResponseSellBuilding@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4BuildingTypes@@@Z ; CvDllNetMessageHandler::ResponseSellBuilding
PUBLIC	?ResponseSetCityAIFocus@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4CityAIFocusTypes@@@Z ; CvDllNetMessageHandler::ResponseSetCityAIFocus
PUBLIC	?ResponseSetCityAvoidGrowth@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H_N@Z ; CvDllNetMessageHandler::ResponseSetCityAvoidGrowth
PUBLIC	?ResponseSwapUnits@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4MissionTypes@@HHH_N@Z ; CvDllNetMessageHandler::ResponseSwapUnits
PUBLIC	?ResponseUpdateCityCitizens@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H@Z ; CvDllNetMessageHandler::ResponseUpdateCityCitizens
PUBLIC	?ResponseUpdatePolicies@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@_NH1@Z ; CvDllNetMessageHandler::ResponseUpdatePolicies
PUBLIC	?ResponseCityPurchase@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@H@Z ; CvDllNetMessageHandler::ResponseCityPurchase
PUBLIC	?ResponseFoundPantheon@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4BeliefTypes@@@Z ; CvDllNetMessageHandler::ResponseFoundPantheon
PUBLIC	?ResponseFoundReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333HH@Z ; CvDllNetMessageHandler::ResponseFoundReligion
PUBLIC	?ResponseEnhanceReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@3HH@Z ; CvDllNetMessageHandler::ResponseEnhanceReligion
PUBLIC	?ResponseMayaBonusChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4UnitTypes@@@Z ; CvDllNetMessageHandler::ResponseMayaBonusChoice
PUBLIC	?ResponseFaithGreatPersonChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4UnitTypes@@@Z ; CvDllNetMessageHandler::ResponseFaithGreatPersonChoice
PUBLIC	?ResponseMoveSpy@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HHH_N@Z ; CvDllNetMessageHandler::ResponseMoveSpy
PUBLIC	?ResponseStageCoup@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H@Z ; CvDllNetMessageHandler::ResponseStageCoup
PUBLIC	?ResponseFaithPurchase@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4FaithPurchaseTypes@@H@Z ; CvDllNetMessageHandler::ResponseFaithPurchase
PUBLIC	?ResponseMinorCivBullyGold@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z ; CvDllNetMessageHandler::ResponseMinorCivBullyGold
PUBLIC	?ResponseMinorCivBullyUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0W4UnitTypes@@@Z ; CvDllNetMessageHandler::ResponseMinorCivBullyUnit
PUBLIC	?ResponseMinorCivGiftTileImprovement@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0HH@Z ; CvDllNetMessageHandler::ResponseMinorCivGiftTileImprovement
PUBLIC	?ResponseMinorCivBuyout@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0@Z ; CvDllNetMessageHandler::ResponseMinorCivBuyout
PUBLIC	?ResponsePledgeMinorProtection@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0_N1@Z ; CvDllNetMessageHandler::ResponsePledgeMinorProtection
PUBLIC	?ResponseResearch@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4TechTypes@@H0_N@Z ; CvDllNetMessageHandler::ResponseResearch
PUBLIC	?ResponseIgnoreWarning@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4TeamTypes@@@Z ; CvDllNetMessageHandler::ResponseIgnoreWarning
PUBLIC	?ResponseArchaeologyChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ArchaeologyChoiceType@@@Z ; CvDllNetMessageHandler::ResponseArchaeologyChoice
PUBLIC	?ResponseIdeologyChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4PolicyBranchTypes@@@Z ; CvDllNetMessageHandler::ResponseIdeologyChoice
PUBLIC	?ResponseLeagueVoteEnact@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@HW4PlayerTypes@@HH@Z ; CvDllNetMessageHandler::ResponseLeagueVoteEnact
PUBLIC	?ResponseLeagueVoteRepeal@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@HW4PlayerTypes@@HH@Z ; CvDllNetMessageHandler::ResponseLeagueVoteRepeal
PUBLIC	?ResponseLeagueVoteAbstain@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@W4PlayerTypes@@H@Z ; CvDllNetMessageHandler::ResponseLeagueVoteAbstain
PUBLIC	?ResponseLeagueProposeEnact@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@W4ResolutionTypes@@W4PlayerTypes@@H@Z ; CvDllNetMessageHandler::ResponseLeagueProposeEnact
PUBLIC	?ResponseLeagueProposeRepeal@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@HW4PlayerTypes@@@Z ; CvDllNetMessageHandler::ResponseLeagueProposeRepeal
PUBLIC	?ResponseLeagueEditName@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@W4PlayerTypes@@PBD@Z ; CvDllNetMessageHandler::ResponseLeagueEditName
PUBLIC	?ResponseGoodyChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HHW4GoodyTypes@@H@Z ; CvDllNetMessageHandler::ResponseGoodyChoice
PUBLIC	?ResponseSetSwappableGreatWork@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z ; CvDllNetMessageHandler::ResponseSetSwappableGreatWork
PUBLIC	?ResponseSwapGreatWorks@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H0H@Z ; CvDllNetMessageHandler::ResponseSwapGreatWorks
PUBLIC	?ResponseMoveGreatWorks@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HHHHHH@Z ; CvDllNetMessageHandler::ResponseMoveGreatWorks
PUBLIC	?ResponseChangeIdeology@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@@Z ; CvDllNetMessageHandler::ResponseChangeIdeology
EXTRN	__purecall:PROC
;	COMDAT ??_7CvDllNetMessageHandler@@6B@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdllnetmessagehandler.cpp
CONST	SEGMENT
??_7CvDllNetMessageHandler@@6B@ DD FLAT:?QueryInterface@CvDllNetMessageHandler@@UAGPAXU_GUID@@@Z ; CvDllNetMessageHandler::`vftable'
	DD	FLAT:?Destroy@CvDllNetMessageHandler@@EAGXXZ
	DD	FLAT:?ResponseAdvancedStartAction@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4AdvancedStartActionTypes@@HHH_N@Z
	DD	FLAT:?ResponseAutoMission@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H@Z
	DD	FLAT:?ResponseBarbarianRansom@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z
	DD	FLAT:?ResponseChangeWar@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4TeamTypes@@_N@Z
	DD	FLAT:?ResponseCityBuyPlot@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HHH@Z
	DD	FLAT:?ResponseCityDoTask@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4TaskTypes@@HH_N222@Z
	DD	FLAT:?ResponseCityPopOrder@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z
	DD	FLAT:?ResponseCityPurchase@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@@Z
	DD	FLAT:?ResponseCityPushOrder@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4OrderTypes@@H_N22@Z
	DD	FLAT:?ResponseCitySwapOrder@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z
	DD	FLAT:?ResponseChooseElection@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z
	DD	FLAT:?ResponseDestroyUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H@Z
	DD	FLAT:?ResponseDiplomacyFromUI@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0W4FromUIDiploEventTypes@@HH@Z
	DD	FLAT:?ResponseDiploVote@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0@Z
	DD	FLAT:?ResponseDoCommand@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4CommandTypes@@HH_N@Z
	DD	FLAT:?ResponseExtendedGame@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@@Z
	DD	FLAT:?ResponseGiftUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z
	DD	FLAT:?ResponseGreatPersonChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4UnitTypes@@@Z
	DD	FLAT:?ResponseLaunchSpaceship@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4VictoryTypes@@@Z
	DD	FLAT:?ResponseLiberatePlayer@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z
	DD	FLAT:?ResponseMinorCivGiftGold@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z
	DD	FLAT:?ResponseMinorNoUnitSpawning@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0_N@Z
	DD	FLAT:?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z
	DD	FLAT:?ResponsePlayerOption@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4PlayerOptionTypes@@_N@Z
	DD	FLAT:?ResponsePushMission@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4MissionTypes@@HHH_N@Z
	DD	FLAT:?ResponseRenameCity@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z
	DD	FLAT:?ResponseRenameUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z
	DD	FLAT:?ResponseResearch@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4TechTypes@@H_N@Z
	DD	FLAT:?ResponseReturnCivilian@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H_N@Z
	DD	FLAT:?ResponseSellBuilding@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4BuildingTypes@@@Z
	DD	FLAT:?ResponseSetCityAIFocus@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4CityAIFocusTypes@@@Z
	DD	FLAT:?ResponseSetCityAvoidGrowth@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H_N@Z
	DD	FLAT:?ResponseSwapUnits@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4MissionTypes@@HHH_N@Z
	DD	FLAT:?ResponseUpdateCityCitizens@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H@Z
	DD	FLAT:?ResponseUpdatePolicies@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@_NH1@Z
	DD	FLAT:?ResponseCityPurchase@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@H@Z
	DD	FLAT:?ResponseFoundPantheon@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4BeliefTypes@@@Z
	DD	FLAT:?ResponseFoundReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333HH@Z
	DD	FLAT:?ResponseEnhanceReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@3HH@Z
	DD	FLAT:?ResponseMayaBonusChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4UnitTypes@@@Z
	DD	FLAT:?ResponseFaithGreatPersonChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4UnitTypes@@@Z
	DD	FLAT:?ResponseMoveSpy@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HHH_N@Z
	DD	FLAT:?ResponseStageCoup@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H@Z
	DD	FLAT:?ResponseFaithPurchase@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4FaithPurchaseTypes@@H@Z
	DD	FLAT:?ResponseMinorCivBullyGold@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z
	DD	FLAT:?ResponseMinorCivBullyUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0W4UnitTypes@@@Z
	DD	FLAT:?ResponseMinorCivGiftTileImprovement@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0HH@Z
	DD	FLAT:?ResponseMinorCivBuyout@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0@Z
	DD	FLAT:?ResponsePledgeMinorProtection@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0_N1@Z
	DD	FLAT:?ResponseResearch@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4TechTypes@@H0_N@Z
	DD	FLAT:?ResponseIgnoreWarning@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4TeamTypes@@@Z
	DD	FLAT:?ResponseArchaeologyChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ArchaeologyChoiceType@@@Z
	DD	FLAT:?ResponseIdeologyChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4PolicyBranchTypes@@@Z
	DD	FLAT:?ResponseLeagueVoteEnact@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@HW4PlayerTypes@@HH@Z
	DD	FLAT:?ResponseLeagueVoteRepeal@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@HW4PlayerTypes@@HH@Z
	DD	FLAT:?ResponseLeagueVoteAbstain@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@W4PlayerTypes@@H@Z
	DD	FLAT:?ResponseLeagueProposeEnact@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@W4ResolutionTypes@@W4PlayerTypes@@H@Z
	DD	FLAT:?ResponseLeagueProposeRepeal@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@HW4PlayerTypes@@@Z
	DD	FLAT:?ResponseLeagueEditName@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@W4PlayerTypes@@PBD@Z
	DD	FLAT:?ResponseGoodyChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HHW4GoodyTypes@@H@Z
	DD	FLAT:?ResponseSetSwappableGreatWork@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z
	DD	FLAT:?ResponseSwapGreatWorks@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H0H@Z
	DD	FLAT:?ResponseMoveGreatWorks@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HHHHHH@Z
	DD	FLAT:?ResponseChangeIdeology@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@@Z
CONST	ENDS
;	COMDAT ??_7ICvNetMessageHandler3@@6B@
CONST	SEGMENT
??_7ICvNetMessageHandler3@@6B@ DD FLAT:__purecall	; ICvNetMessageHandler3::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ICvNetMessageHandler2@@6B@
CONST	SEGMENT
??_7ICvNetMessageHandler2@@6B@ DD FLAT:__purecall	; ICvNetMessageHandler2::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ICvNetMessageHandler1@@6B@
CONST	SEGMENT
??_7ICvNetMessageHandler1@@6B@ DD FLAT:__purecall	; ICvNetMessageHandler1::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ICvUnknown@@6B@
CONST	SEGMENT
??_7ICvUnknown@@6B@ DD FLAT:__purecall			; ICvUnknown::`vftable'
	DD	FLAT:__purecall
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ??0CvDllNetMessageHandler@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CvDllNetMessageHandler@@QAE@XZ PROC			; CvDllNetMessageHandler::CvDllNetMessageHandler, COMDAT
; _this$ = ecx

; 17   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICvUnknown@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7ICvNetMessageHandler1@@6B@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7ICvNetMessageHandler2@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICvNetMessageHandler3@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7CvDllNetMessageHandler@@6B@

; 18   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CvDllNetMessageHandler@@QAE@XZ ENDP			; CvDllNetMessageHandler::CvDllNetMessageHandler
_TEXT	ENDS
PUBLIC	??1CvDllNetMessageHandler@@QAE@XZ		; CvDllNetMessageHandler::~CvDllNetMessageHandler
; Function compile flags: /Odtp
;	COMDAT ??1CvDllNetMessageHandler@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvDllNetMessageHandler@@QAE@XZ PROC			; CvDllNetMessageHandler::~CvDllNetMessageHandler, COMDAT
; _this$ = ecx

; 21   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CvDllNetMessageHandler@@6B@

; 22   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1CvDllNetMessageHandler@@QAE@XZ ENDP			; CvDllNetMessageHandler::~CvDllNetMessageHandler
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?QueryInterface@CvDllNetMessageHandler@@UAGPAXU_GUID@@@Z
_TEXT	SEGMENT
tv145 = -168						; size = 4
tv264 = -164						; size = 4
tv140 = -160						; size = 4
tv208 = -156						; size = 4
tv135 = -152						; size = 4
tv184 = -148						; size = 4
tv130 = -144						; size = 4
tv160 = -140						; size = 4
$T223257 = -136						; size = 16
$T223256 = -120						; size = 16
$T223255 = -104						; size = 16
$T223254 = -88						; size = 16
$T223253 = -72						; size = 16
$T223252 = -56						; size = 16
$T223251 = -40						; size = 16
$T223250 = -20						; size = 16
_this$ = 8						; size = 4
_guidInterface$ = 12					; size = 16
?QueryInterface@CvDllNetMessageHandler@@UAGPAXU_GUID@@@Z PROC ; CvDllNetMessageHandler::QueryInterface, COMDAT

; 25   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 168				; 000000a8H
	push	esi
	push	edi

; 26   : 	if(guidInterface == ICvUnknown::GetInterfaceId() ||
; 27   : 	        guidInterface == ICvNetMessageHandler1::GetInterfaceId() ||
; 28   : 	        guidInterface == ICvNetMessageHandler2::GetInterfaceId() ||
; 29   : 			guidInterface == ICvNetMessageHandler3::GetInterfaceId())

	mov	eax, DWORD PTR _guidICvUnknown
	mov	DWORD PTR $T223251[ebp], eax
	mov	ecx, DWORD PTR _guidICvUnknown+4
	mov	DWORD PTR $T223251[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvUnknown+8
	mov	DWORD PTR $T223251[ebp+8], edx
	mov	eax, DWORD PTR _guidICvUnknown+12
	mov	DWORD PTR $T223251[ebp+12], eax
	mov	ecx, DWORD PTR $T223251[ebp]
	mov	DWORD PTR $T223250[ebp], ecx
	mov	edx, DWORD PTR $T223251[ebp+4]
	mov	DWORD PTR $T223250[ebp+4], edx
	mov	eax, DWORD PTR $T223251[ebp+8]
	mov	DWORD PTR $T223250[ebp+8], eax
	mov	ecx, DWORD PTR $T223251[ebp+12]
	mov	DWORD PTR $T223250[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T223250[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv160[ebp], edx
	repe cmpsb
	je	SHORT $LN29@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv160[ebp], eax
$LN29@QueryInter:
	mov	ecx, DWORD PTR tv160[ebp]
	mov	DWORD PTR tv130[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv130[ebp], 0
	sete	dl
	test	edx, edx
	jne	$LN1@QueryInter
	mov	eax, DWORD PTR _guidICvNetMessageHandler1
	mov	DWORD PTR $T223253[ebp], eax
	mov	ecx, DWORD PTR _guidICvNetMessageHandler1+4
	mov	DWORD PTR $T223253[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvNetMessageHandler1+8
	mov	DWORD PTR $T223253[ebp+8], edx
	mov	eax, DWORD PTR _guidICvNetMessageHandler1+12
	mov	DWORD PTR $T223253[ebp+12], eax
	mov	ecx, DWORD PTR $T223253[ebp]
	mov	DWORD PTR $T223252[ebp], ecx
	mov	edx, DWORD PTR $T223253[ebp+4]
	mov	DWORD PTR $T223252[ebp+4], edx
	mov	eax, DWORD PTR $T223253[ebp+8]
	mov	DWORD PTR $T223252[ebp+8], eax
	mov	ecx, DWORD PTR $T223253[ebp+12]
	mov	DWORD PTR $T223252[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T223252[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv184[ebp], edx
	repe cmpsb
	je	SHORT $LN30@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv184[ebp], eax
$LN30@QueryInter:
	mov	ecx, DWORD PTR tv184[ebp]
	mov	DWORD PTR tv135[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv135[ebp], 0
	sete	dl
	test	edx, edx
	jne	$LN1@QueryInter
	mov	eax, DWORD PTR _guidICvNetMessageHandler2
	mov	DWORD PTR $T223255[ebp], eax
	mov	ecx, DWORD PTR _guidICvNetMessageHandler2+4
	mov	DWORD PTR $T223255[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvNetMessageHandler2+8
	mov	DWORD PTR $T223255[ebp+8], edx
	mov	eax, DWORD PTR _guidICvNetMessageHandler2+12
	mov	DWORD PTR $T223255[ebp+12], eax
	mov	ecx, DWORD PTR $T223255[ebp]
	mov	DWORD PTR $T223254[ebp], ecx
	mov	edx, DWORD PTR $T223255[ebp+4]
	mov	DWORD PTR $T223254[ebp+4], edx
	mov	eax, DWORD PTR $T223255[ebp+8]
	mov	DWORD PTR $T223254[ebp+8], eax
	mov	ecx, DWORD PTR $T223255[ebp+12]
	mov	DWORD PTR $T223254[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T223254[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv208[ebp], edx
	repe cmpsb
	je	SHORT $LN31@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv208[ebp], eax
$LN31@QueryInter:
	mov	ecx, DWORD PTR tv208[ebp]
	mov	DWORD PTR tv140[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv140[ebp], 0
	sete	dl
	test	edx, edx
	jne	$LN1@QueryInter
	mov	eax, DWORD PTR _guidICvNetMessageHandler3
	mov	DWORD PTR $T223257[ebp], eax
	mov	ecx, DWORD PTR _guidICvNetMessageHandler3+4
	mov	DWORD PTR $T223257[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvNetMessageHandler3+8
	mov	DWORD PTR $T223257[ebp+8], edx
	mov	eax, DWORD PTR _guidICvNetMessageHandler3+12
	mov	DWORD PTR $T223257[ebp+12], eax
	mov	ecx, DWORD PTR $T223257[ebp]
	mov	DWORD PTR $T223256[ebp], ecx
	mov	edx, DWORD PTR $T223257[ebp+4]
	mov	DWORD PTR $T223256[ebp+4], edx
	mov	eax, DWORD PTR $T223257[ebp+8]
	mov	DWORD PTR $T223256[ebp+8], eax
	mov	ecx, DWORD PTR $T223257[ebp+12]
	mov	DWORD PTR $T223256[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T223256[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv264[ebp], edx
	repe cmpsb
	je	SHORT $LN32@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv264[ebp], eax
$LN32@QueryInter:
	mov	ecx, DWORD PTR tv264[ebp]
	mov	DWORD PTR tv145[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv145[ebp], 0
	sete	dl
	test	edx, edx
	je	SHORT $LN2@QueryInter
$LN1@QueryInter:

; 30   : 	{
; 31   : 		return this;

	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN3@QueryInter
$LN2@QueryInter:

; 32   : 	}
; 33   : 
; 34   : 	return NULL;

	xor	eax, eax
$LN3@QueryInter:

; 35   : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?QueryInterface@CvDllNetMessageHandler@@UAGPAXU_GUID@@@Z ENDP ; CvDllNetMessageHandler::QueryInterface
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Destroy@CvDllNetMessageHandler@@EAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Destroy@CvDllNetMessageHandler@@EAGXXZ PROC		; CvDllNetMessageHandler::Destroy, COMDAT

; 38   : {

	push	ebp
	mov	ebp, esp

; 39   : 	// Do nothing.
; 40   : 	// This is a static class whose instance is managed externally.
; 41   : }

	pop	ebp
	ret	4
?Destroy@CvDllNetMessageHandler@@EAGXXZ ENDP		; CvDllNetMessageHandler::Destroy
_TEXT	ENDS
PUBLIC	??3CvDllNetMessageHandler@@SAXPAX@Z		; CvDllNetMessageHandler::operator delete
EXTRN	?Free@CvDllGameContext@@SAXPAX@Z:PROC		; CvDllGameContext::Free
; Function compile flags: /Odtp
;	COMDAT ??3CvDllNetMessageHandler@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CvDllNetMessageHandler@@SAXPAX@Z PROC		; CvDllNetMessageHandler::operator delete, COMDAT

; 44   : {

	push	ebp
	mov	ebp, esp

; 45   : 	CvDllGameContext::Free(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?Free@CvDllGameContext@@SAXPAX@Z	; CvDllGameContext::Free
	add	esp, 4

; 46   : }

	pop	ebp
	ret	0
??3CvDllNetMessageHandler@@SAXPAX@Z ENDP		; CvDllNetMessageHandler::operator delete
_TEXT	ENDS
PUBLIC	??2CvDllNetMessageHandler@@SAPAXI@Z		; CvDllNetMessageHandler::operator new
EXTRN	?Allocate@CvDllGameContext@@SAPAXI@Z:PROC	; CvDllGameContext::Allocate
; Function compile flags: /Odtp
;	COMDAT ??2CvDllNetMessageHandler@@SAPAXI@Z
_TEXT	SEGMENT
_bytes$ = 8						; size = 4
??2CvDllNetMessageHandler@@SAPAXI@Z PROC		; CvDllNetMessageHandler::operator new, COMDAT

; 49   : {

	push	ebp
	mov	ebp, esp

; 50   : 	return CvDllGameContext::Allocate(bytes);

	mov	eax, DWORD PTR _bytes$[ebp]
	push	eax
	call	?Allocate@CvDllGameContext@@SAPAXI@Z	; CvDllGameContext::Allocate
	add	esp, 4

; 51   : }

	pop	ebp
	ret	0
??2CvDllNetMessageHandler@@SAPAXI@Z ENDP		; CvDllNetMessageHandler::operator new
_TEXT	ENDS
EXTRN	?doAdvancedStartAction@CvPlayer@@QAEXW4AdvancedStartActionTypes@@HHH_N@Z:PROC ; CvPlayer::doAdvancedStartAction
EXTRN	?m_aPlayers@CvPlayerAI@@1PAV1@A:DWORD		; CvPlayerAI::m_aPlayers
; Function compile flags: /Odtp
;	COMDAT ?ResponseAdvancedStartAction@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4AdvancedStartActionTypes@@HHH_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eAction$ = 16						; size = 4
_iX$ = 20						; size = 4
_iY$ = 24						; size = 4
_iData$ = 28						; size = 4
_bAdd$ = 32						; size = 1
?ResponseAdvancedStartAction@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4AdvancedStartActionTypes@@HHH_N@Z PROC ; CvDllNetMessageHandler::ResponseAdvancedStartAction, COMDAT

; 54   : {

	push	ebp
	mov	ebp, esp

; 55   : 	GET_PLAYER(ePlayer).doAdvancedStartAction(eAction, iX, iY, iData, bAdd);

	movzx	eax, BYTE PTR _bAdd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iY$[ebp]
	push	edx
	mov	eax, DWORD PTR _iX$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eAction$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?doAdvancedStartAction@CvPlayer@@QAEXW4AdvancedStartActionTypes@@HHH_N@Z ; CvPlayer::doAdvancedStartAction

; 56   : }

	pop	ebp
	ret	28					; 0000001cH
?ResponseAdvancedStartAction@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4AdvancedStartActionTypes@@HHH_N@Z ENDP ; CvDllNetMessageHandler::ResponseAdvancedStartAction
_TEXT	ENDS
EXTRN	?AutoMission@CvUnit@@QAEXXZ:PROC		; CvUnit::AutoMission
EXTRN	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z:PROC	; CvPlayer::getUnit
; Function compile flags: /Odtp
;	COMDAT ?ResponseAutoMission@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H@Z
_TEXT	SEGMENT
_pkUnit$ = -8						; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iUnitID$ = 16						; size = 4
?ResponseAutoMission@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H@Z PROC ; CvDllNetMessageHandler::ResponseAutoMission, COMDAT

; 59   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 60   : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 61   : 	CvUnit* pkUnit = kPlayer.getUnit(iUnitID);

	mov	ecx, DWORD PTR _iUnitID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z	; CvPlayer::getUnit
	mov	DWORD PTR _pkUnit$[ebp], eax

; 62   : 	if(pkUnit)

	cmp	DWORD PTR _pkUnit$[ebp], 0
	je	SHORT $LN2@ResponseAu

; 63   : 	{
; 64   : 		pkUnit->AutoMission();

	mov	ecx, DWORD PTR _pkUnit$[ebp]
	call	?AutoMission@CvUnit@@QAEXXZ		; CvUnit::AutoMission
$LN2@ResponseAu:

; 65   : 	}
; 66   : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ResponseAutoMission@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H@Z ENDP ; CvDllNetMessageHandler::ResponseAutoMission
_TEXT	ENDS
EXTRN	?kill@CvUnit@@QAEX_NW4PlayerTypes@@@Z:PROC	; CvUnit::kill
EXTRN	?ChangeGold@CvTreasury@@QAEXH@Z:PROC		; CvTreasury::ChangeGold
EXTRN	?GetGold@CvTreasury@@QBEHXZ:PROC		; CvTreasury::GetGold
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
EXTRN	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ:PROC ; CvPlayer::GetTreasury
; Function compile flags: /Odtp
;	COMDAT ?ResponseBarbarianRansom@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z
_TEXT	SEGMENT
_pkUnit$222218 = -20					; size = 4
_iNumGold$222213 = -16					; size = 4
_pkTreasury$222212 = -12				; size = 4
_iTreasuryGold$222214 = -8				; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iOptionChosen$ = 16					; size = 4
_iUnitID$ = 20						; size = 4
?ResponseBarbarianRansom@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z PROC ; CvDllNetMessageHandler::ResponseBarbarianRansom, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 70   : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 71   : 
; 72   : 	// Pay ransom
; 73   : 	if(iOptionChosen == 0)

	cmp	DWORD PTR _iOptionChosen$[ebp], 0
	jne	SHORT $LN5@ResponseBa

; 74   : 	{
; 75   : 		CvTreasury* pkTreasury = kPlayer.GetTreasury();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	DWORD PTR _pkTreasury$222212[ebp], eax

; 76   : 		int iNumGold = /*100*/ GC.getBARBARIAN_UNIT_GOLD_RANSOM_exp();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7076
	mov	DWORD PTR _iNumGold$222213[ebp], ecx

; 77   : 		const int iTreasuryGold = pkTreasury->GetGold();

	mov	ecx, DWORD PTR _pkTreasury$222212[ebp]
	call	?GetGold@CvTreasury@@QBEHXZ		; CvTreasury::GetGold
	mov	DWORD PTR _iTreasuryGold$222214[ebp], eax

; 78   : 		if(iNumGold > iTreasuryGold)

	mov	edx, DWORD PTR _iNumGold$222213[ebp]
	cmp	edx, DWORD PTR _iTreasuryGold$222214[ebp]
	jle	SHORT $LN4@ResponseBa

; 79   : 		{
; 80   : 			iNumGold = iTreasuryGold;

	mov	eax, DWORD PTR _iTreasuryGold$222214[ebp]
	mov	DWORD PTR _iNumGold$222213[ebp], eax
$LN4@ResponseBa:

; 81   : 		}
; 82   : 
; 83   : 		pkTreasury->ChangeGold(-iNumGold);

	mov	ecx, DWORD PTR _iNumGold$222213[ebp]
	neg	ecx
	push	ecx
	mov	ecx, DWORD PTR _pkTreasury$222212[ebp]
	call	?ChangeGold@CvTreasury@@QAEXH@Z		; CvTreasury::ChangeGold
	jmp	SHORT $LN6@ResponseBa
$LN5@ResponseBa:

; 84   : 	}
; 85   : 	// Abandon Unit
; 86   : 	else if(iOptionChosen == 1)

	cmp	DWORD PTR _iOptionChosen$[ebp], 1
	jne	SHORT $LN6@ResponseBa

; 87   : 	{
; 88   : 		CvUnit* pkUnit = kPlayer.getUnit(iUnitID);

	mov	edx, DWORD PTR _iUnitID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z	; CvPlayer::getUnit
	mov	DWORD PTR _pkUnit$222218[ebp], eax

; 89   : 		if(pkUnit != NULL)

	cmp	DWORD PTR _pkUnit$222218[ebp], 0
	je	SHORT $LN6@ResponseBa

; 90   : 			pkUnit->kill(true, BARBARIAN_PLAYER);

	push	63					; 0000003fH
	push	1
	mov	ecx, DWORD PTR _pkUnit$222218[ebp]
	call	?kill@CvUnit@@QAEX_NW4PlayerTypes@@@Z	; CvUnit::kill
$LN6@ResponseBa:

; 91   : 	}
; 92   : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?ResponseBarbarianRansom@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z ENDP ; CvDllNetMessageHandler::ResponseBarbarianRansom
_TEXT	ENDS
EXTRN	?makePeace@CvTeam@@QAEXW4TeamTypes@@_N1@Z:PROC	; CvTeam::makePeace
EXTRN	?declareWar@CvTeam@@QAEXW4TeamTypes@@_N@Z:PROC	; CvTeam::declareWar
EXTRN	?m_aTeams@CvTeam@@1PAV1@A:DWORD			; CvTeam::m_aTeams
; Function compile flags: /Odtp
;	COMDAT ?ResponseChangeWar@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4TeamTypes@@_N@Z
_TEXT	SEGMENT
$T223347 = -16						; size = 4
_kTeam$ = -12						; size = 4
_eTeam$ = -8						; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eRivalTeam$ = 16					; size = 4
_bWar$ = 20						; size = 1
?ResponseChangeWar@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4TeamTypes@@_N@Z PROC ; CvDllNetMessageHandler::ResponseChangeWar, COMDAT

; 95   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 96   : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 97   : #ifdef AUI_WARNING_FIXES
; 98   : 	const TeamTypes eTeam = kPlayer.getTeam();
; 99   : 	CvTeam& kTeam = GET_TEAM(eTeam);
; 100  : #else
; 101  : 	CvTeam& kTeam = GET_TEAM(kPlayer.getTeam());

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T223347[ebp], eax
	mov	eax, DWORD PTR $T223347[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _kTeam$[ebp], eax

; 102  : 	const TeamTypes eTeam = kPlayer.getTeam();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR _eTeam$[ebp], eax

; 103  : #endif
; 104  : 
; 105  : 	FAssert(eTeam != eRivalTeam);
; 106  : 
; 107  : 	if(bWar)

	movzx	eax, BYTE PTR _bWar$[ebp]
	test	eax, eax
	je	SHORT $LN2@ResponseCh

; 108  : 	{
; 109  : 		kTeam.declareWar(eRivalTeam);

	push	0
	mov	ecx, DWORD PTR _eRivalTeam$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kTeam$[ebp]
	call	?declareWar@CvTeam@@QAEXW4TeamTypes@@_N@Z ; CvTeam::declareWar

; 110  : 	}
; 111  : 	else

	jmp	SHORT $LN3@ResponseCh
$LN2@ResponseCh:

; 112  : 	{
; 113  : 		kTeam.makePeace(eRivalTeam);

	push	0
	push	1
	mov	edx, DWORD PTR _eRivalTeam$[ebp]
	push	edx
	mov	ecx, DWORD PTR _kTeam$[ebp]
	call	?makePeace@CvTeam@@QAEXW4TeamTypes@@_N1@Z ; CvTeam::makePeace
$LN3@ResponseCh:

; 114  : 	}
; 115  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?ResponseChangeWar@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4TeamTypes@@_N@Z ENDP ; CvDllNetMessageHandler::ResponseChangeWar
_TEXT	ENDS
EXTRN	?PushIgnoreWarning@CvTeam@@QAEXW4TeamTypes@@@Z:PROC ; CvTeam::PushIgnoreWarning
; Function compile flags: /Odtp
;	COMDAT ?ResponseIgnoreWarning@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4TeamTypes@@@Z
_TEXT	SEGMENT
$T223372 = -16						; size = 4
_kTeam$ = -12						; size = 4
_eTeam$ = -8						; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eRivalTeam$ = 16					; size = 4
?ResponseIgnoreWarning@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4TeamTypes@@@Z PROC ; CvDllNetMessageHandler::ResponseIgnoreWarning, COMDAT

; 118  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 119  : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 120  : #ifdef AUI_WARNING_FIXES
; 121  : 	const TeamTypes eTeam = kPlayer.getTeam();
; 122  : 	CvTeam& kTeam = GET_TEAM(eTeam);
; 123  : #else
; 124  : 	CvTeam& kTeam = GET_TEAM(kPlayer.getTeam());

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T223372[ebp], eax
	mov	eax, DWORD PTR $T223372[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _kTeam$[ebp], eax

; 125  : 	const TeamTypes eTeam = kPlayer.getTeam();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR _eTeam$[ebp], eax

; 126  : #endif
; 127  : 	FAssert(eTeam != eRivalTeam);
; 128  : 	
; 129  : 	kTeam.PushIgnoreWarning(eRivalTeam);

	mov	eax, DWORD PTR _eRivalTeam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kTeam$[ebp]
	call	?PushIgnoreWarning@CvTeam@@QAEXW4TeamTypes@@@Z ; CvTeam::PushIgnoreWarning

; 130  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ResponseIgnoreWarning@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4TeamTypes@@@Z ENDP ; CvDllNetMessageHandler::ResponseIgnoreWarning
_TEXT	ENDS
PUBLIC	?coordRange@@YAHHH_N@Z				; coordRange
EXTRN	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ:PROC ; CvGame::getActivePlayer
EXTRN	?BuyPlot@CvCity@@QAEXHH@Z:PROC			; CvCity::BuyPlot
EXTRN	?CanBuyPlot@CvCity@@QAE_NHH_N@Z:PROC		; CvCity::CanBuyPlot
EXTRN	?GetNextBuyablePlot@CvCity@@QAEPAVCvPlot@@XZ:PROC ; CvCity::GetNextBuyablePlot
EXTRN	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z:PROC	; CvPlayer::getCity
; Function compile flags: /Odtp
;	COMDAT ?ResponseCityBuyPlot@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HHH@Z
_TEXT	SEGMENT
tv160 = -92						; size = 4
tv147 = -88						; size = 4
tv196 = -84						; size = 4
tv208 = -80						; size = 4
$T223507 = -76						; size = 4
$T223503 = -72						; size = 4
$T223499 = -68						; size = 4
$T223492 = -64						; size = 4
$T223488 = -60						; size = 4
$T223484 = -56						; size = 4
$T223442 = -52						; size = 4
$T223429 = -48						; size = 4
$T223425 = -44						; size = 4
$T223418 = -40						; size = 4
$T223414 = -33						; size = 1
$T223403 = -32						; size = 4
$T223399 = -25						; size = 1
_iMapY$223480 = -24					; size = 4
_iMapX$223479 = -20					; size = 4
$T223392 = -16						; size = 4
_pkPlot$222250 = -12					; size = 4
_pkCity$ = -8						; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iCityID$ = 16						; size = 4
_iX$ = 20						; size = 4
_iY$ = 24						; size = 4
?ResponseCityBuyPlot@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HHH@Z PROC ; CvDllNetMessageHandler::ResponseCityBuyPlot, COMDAT

; 133  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH

; 134  : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 135  : 	CvCity* pkCity = kPlayer.getCity(iCityID);

	mov	ecx, DWORD PTR _iCityID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	DWORD PTR _pkCity$[ebp], eax

; 136  : 	if(pkCity != NULL)

	cmp	DWORD PTR _pkCity$[ebp], 0
	je	$LN7@ResponseCi

; 137  : 	{
; 138  : 		CvPlot* pkPlot = NULL;

	mov	DWORD PTR _pkPlot$222250[ebp], 0

; 139  : 
; 140  : 		// (-1,-1) means pick a random plot to buy
; 141  : 		if(iX == -1 && iY == -1)

	cmp	DWORD PTR _iX$[ebp], -1
	jne	SHORT $LN5@ResponseCi
	cmp	DWORD PTR _iY$[ebp], -1
	jne	SHORT $LN5@ResponseCi

; 142  : 		{
; 143  : 			pkPlot = pkCity->GetNextBuyablePlot();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetNextBuyablePlot@CvCity@@QAEPAVCvPlot@@XZ ; CvCity::GetNextBuyablePlot
	mov	DWORD PTR _pkPlot$222250[ebp], eax

; 144  : 		}
; 145  : 		else

	jmp	$LN4@ResponseCi
$LN5@ResponseCi:

; 146  : 		{
; 147  : 			pkPlot = GC.getMap().plot(iX, iY);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T223392[ebp], edx
	cmp	DWORD PTR _iX$[ebp], -2147483647	; 80000001H
	je	SHORT $LN13@ResponseCi
	cmp	DWORD PTR _iY$[ebp], -2147483647	; 80000001H
	jne	SHORT $LN14@ResponseCi
$LN13@ResponseCi:
	mov	DWORD PTR _pkPlot$222250[ebp], 0
	jmp	$LN4@ResponseCi
$LN14@ResponseCi:
	mov	eax, DWORD PTR $T223392[ebp]
	mov	cl, BYTE PTR [eax+4056]
	mov	BYTE PTR $T223399[ebp], cl
	mov	edx, DWORD PTR $T223392[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T223403[ebp], eax
	movzx	ecx, BYTE PTR $T223399[ebp]
	test	ecx, ecx
	je	SHORT $LN26@ResponseCi
	cmp	DWORD PTR _iX$[ebp], 0
	jge	SHORT $LN25@ResponseCi
	mov	eax, DWORD PTR _iX$[ebp]
	cdq
	idiv	DWORD PTR $T223403[ebp]
	add	edx, DWORD PTR $T223403[ebp]
	mov	DWORD PTR _iMapX$223479[ebp], edx
	jmp	SHORT $LN27@ResponseCi
	jmp	SHORT $LN26@ResponseCi
$LN25@ResponseCi:
	mov	edx, DWORD PTR _iX$[ebp]
	cmp	edx, DWORD PTR $T223403[ebp]
	jl	SHORT $LN26@ResponseCi
	mov	eax, DWORD PTR _iX$[ebp]
	cdq
	idiv	DWORD PTR $T223403[ebp]
	mov	DWORD PTR _iMapX$223479[ebp], edx
	jmp	SHORT $LN27@ResponseCi
$LN26@ResponseCi:
	mov	eax, DWORD PTR _iX$[ebp]
	mov	DWORD PTR _iMapX$223479[ebp], eax
$LN27@ResponseCi:
	mov	ecx, DWORD PTR $T223392[ebp]
	mov	dl, BYTE PTR [ecx+4057]
	mov	BYTE PTR $T223414[ebp], dl
	mov	eax, DWORD PTR $T223392[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T223418[ebp], ecx
	movzx	edx, BYTE PTR $T223414[ebp]
	push	edx
	mov	eax, DWORD PTR $T223418[ebp]
	push	eax
	mov	ecx, DWORD PTR _iY$[ebp]
	push	ecx
	call	?coordRange@@YAHHH_N@Z			; coordRange
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iMapY$223480[ebp], eax
	cmp	DWORD PTR _iMapX$223479[ebp], 0
	jl	SHORT $LN35@ResponseCi
	mov	edx, DWORD PTR $T223392[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T223425[ebp], eax
	mov	ecx, DWORD PTR _iMapX$223479[ebp]
	cmp	ecx, DWORD PTR $T223425[ebp]
	jge	SHORT $LN35@ResponseCi
	cmp	DWORD PTR _iMapY$223480[ebp], 0
	jl	SHORT $LN35@ResponseCi
	mov	edx, DWORD PTR $T223392[ebp]
	mov	eax, DWORD PTR [edx+4024]
	mov	DWORD PTR $T223429[ebp], eax
	mov	ecx, DWORD PTR _iMapY$223480[ebp]
	cmp	ecx, DWORD PTR $T223429[ebp]
	jge	SHORT $LN35@ResponseCi
	mov	DWORD PTR tv208[ebp], 1
	jmp	SHORT $LN33@ResponseCi
$LN35@ResponseCi:
	mov	DWORD PTR tv208[ebp], 0
$LN33@ResponseCi:
	cmp	DWORD PTR tv208[ebp], 0
	je	SHORT $LN17@ResponseCi
	mov	edx, DWORD PTR $T223392[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T223442[ebp], eax
	mov	ecx, DWORD PTR _iMapY$223480[ebp]
	imul	ecx, DWORD PTR $T223442[ebp]
	add	ecx, DWORD PTR _iMapX$223479[ebp]
	imul	ecx, 484				; 000001e4H
	mov	edx, DWORD PTR $T223392[ebp]
	add	ecx, DWORD PTR [edx+4068]
	mov	DWORD PTR tv196[ebp], ecx
	jmp	SHORT $LN18@ResponseCi
$LN17@ResponseCi:
	mov	DWORD PTR tv196[ebp], 0
$LN18@ResponseCi:
	mov	eax, DWORD PTR tv196[ebp]
	mov	DWORD PTR _pkPlot$222250[ebp], eax
$LN4@ResponseCi:

; 148  : 		}
; 149  : 
; 150  : 		if(pkPlot != NULL)

	cmp	DWORD PTR _pkPlot$222250[ebp], 0
	je	$LN7@ResponseCi

; 151  : 		{
; 152  : 			if(pkCity->CanBuyPlot(pkPlot->getX(), pkPlot->getY()))

	mov	ecx, DWORD PTR _pkPlot$222250[ebp]
	movsx	edx, WORD PTR [ecx+2]
	mov	DWORD PTR $T223484[ebp], edx
	mov	eax, DWORD PTR _pkPlot$222250[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	DWORD PTR $T223488[ebp], ecx
	push	0
	mov	edx, DWORD PTR $T223484[ebp]
	push	edx
	mov	eax, DWORD PTR $T223488[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?CanBuyPlot@CvCity@@QAE_NHH_N@Z		; CvCity::CanBuyPlot
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@ResponseCi

; 153  : 			{
; 154  : 				pkCity->BuyPlot(pkPlot->getX(), pkPlot->getY());

	mov	edx, DWORD PTR _pkPlot$222250[ebp]
	movsx	eax, WORD PTR [edx+2]
	mov	DWORD PTR $T223492[ebp], eax
	mov	ecx, DWORD PTR $T223492[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkPlot$222250[ebp]
	movsx	eax, WORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?BuyPlot@CvCity@@QAEXHH@Z		; CvCity::BuyPlot

; 155  : 				if(ePlayer == GC.getGame().getActivePlayer() && GC.GetEngineUserInterface()->isCityScreenUp())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T223499[ebp], ecx
	mov	ecx, DWORD PTR $T223499[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR _ePlayer$[ebp], eax
	jne	SHORT $LN7@ResponseCi
	mov	edx, DWORD PTR $T223503[ebp]
	mov	DWORD PTR tv147[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv147[ebp], eax
	mov	ecx, DWORD PTR tv147[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv147[ebp]
	mov	eax, DWORD PTR [edx+312]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@ResponseCi

; 156  : 				{
; 157  : 					GC.GetEngineUserInterface()->setDirty(CityScreen_DIRTY_BIT, true);

	mov	edx, DWORD PTR $T223507[ebp]
	mov	DWORD PTR tv160[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv160[ebp], eax
	push	1
	push	21					; 00000015H
	mov	ecx, DWORD PTR tv160[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv160[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax
$LN7@ResponseCi:

; 158  : 				}
; 159  : 			}
; 160  : 		}
; 161  : 	}
; 162  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?ResponseCityBuyPlot@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HHH@Z ENDP ; CvDllNetMessageHandler::ResponseCityBuyPlot
_TEXT	ENDS
EXTRN	?doTask@CvCity@@QAE?AW4CityTaskResult@@W4TaskTypes@@HH_N111@Z:PROC ; CvCity::doTask
; Function compile flags: /Odtp
;	COMDAT ?ResponseCityDoTask@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4TaskTypes@@HH_N222@Z
_TEXT	SEGMENT
_pkCity$ = -8						; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iCityID$ = 16						; size = 4
_eTask$ = 20						; size = 4
_iData1$ = 24						; size = 4
_iData2$ = 28						; size = 4
_bOption$ = 32						; size = 1
_bAlt$ = 36						; size = 1
_bShift$ = 40						; size = 1
_bCtrl$ = 44						; size = 1
?ResponseCityDoTask@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4TaskTypes@@HH_N222@Z PROC ; CvDllNetMessageHandler::ResponseCityDoTask, COMDAT

; 165  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 166  : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 167  : 	CvCity* pkCity = kPlayer.getCity(iCityID);

	mov	ecx, DWORD PTR _iCityID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	DWORD PTR _pkCity$[ebp], eax

; 168  : 
; 169  : 	if(pkCity != NULL)

	cmp	DWORD PTR _pkCity$[ebp], 0
	je	SHORT $LN2@ResponseCi@2

; 170  : 	{
; 171  : 		pkCity->doTask(eTask, iData1, iData2, bOption, bAlt, bShift, bCtrl);

	movzx	edx, BYTE PTR _bCtrl$[ebp]
	push	edx
	movzx	eax, BYTE PTR _bShift$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bAlt$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bOption$[ebp]
	push	edx
	mov	eax, DWORD PTR _iData2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iData1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eTask$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?doTask@CvCity@@QAE?AW4CityTaskResult@@W4TaskTypes@@HH_N111@Z ; CvCity::doTask
$LN2@ResponseCi@2:

; 172  : 	}
; 173  : }

	mov	esp, ebp
	pop	ebp
	ret	40					; 00000028H
?ResponseCityDoTask@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4TaskTypes@@HH_N222@Z ENDP ; CvDllNetMessageHandler::ResponseCityDoTask
_TEXT	ENDS
EXTRN	?popOrder@CvCity@@QAEXH_N0@Z:PROC		; CvCity::popOrder
; Function compile flags: /Odtp
;	COMDAT ?ResponseCityPopOrder@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z
_TEXT	SEGMENT
_pkCity$ = -8						; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iCityID$ = 16						; size = 4
_iNum$ = 20						; size = 4
?ResponseCityPopOrder@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z PROC ; CvDllNetMessageHandler::ResponseCityPopOrder, COMDAT

; 176  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 177  : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 178  : 	CvCity* pkCity = kPlayer.getCity(iCityID);

	mov	ecx, DWORD PTR _iCityID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	DWORD PTR _pkCity$[ebp], eax

; 179  : 	if(pkCity != NULL)

	cmp	DWORD PTR _pkCity$[ebp], 0
	je	SHORT $LN2@ResponseCi@3

; 180  : 	{
; 181  : 		pkCity->popOrder(iNum);

	push	0
	push	0
	mov	edx, DWORD PTR _iNum$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?popOrder@CvCity@@QAEXH_N0@Z		; CvCity::popOrder
$LN2@ResponseCi@3:

; 182  : 	}
; 183  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?ResponseCityPopOrder@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z ENDP ; CvDllNetMessageHandler::ResponseCityPopOrder
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?ResponseCityPurchase@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iCityID$ = 16						; size = 4
_eUnitType$ = 20					; size = 4
_eBuildingType$ = 24					; size = 4
_eProjectType$ = 28					; size = 4
?ResponseCityPurchase@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@@Z PROC ; CvDllNetMessageHandler::ResponseCityPurchase, COMDAT

; 186  : {

	push	ebp
	mov	ebp, esp

; 187  : 	ResponseCityPurchase(ePlayer, iCityID, eUnitType, eBuildingType, eProjectType, NO_YIELD);

	push	-1
	mov	eax, DWORD PTR _eProjectType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eBuildingType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eUnitType$[ebp]
	push	edx
	mov	eax, DWORD PTR _iCityID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+148]
	call	edx

; 188  : }

	pop	ebp
	ret	24					; 00000018H
?ResponseCityPurchase@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@@Z ENDP ; CvDllNetMessageHandler::ResponseCityPurchase
_TEXT	ENDS
EXTRN	?Purchase@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z:PROC ; CvCity::Purchase
; Function compile flags: /Odtp
;	COMDAT ?ResponseCityPurchase@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@H@Z
_TEXT	SEGMENT
_pkCity$ = -8						; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iCityID$ = 16						; size = 4
_eUnitType$ = 20					; size = 4
_eBuildingType$ = 24					; size = 4
_eProjectType$ = 28					; size = 4
_ePurchaseYield$ = 32					; size = 4
?ResponseCityPurchase@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@H@Z PROC ; CvDllNetMessageHandler::ResponseCityPurchase, COMDAT

; 191  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 192  : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 193  : 	CvCity* pkCity = kPlayer.getCity(iCityID);

	mov	ecx, DWORD PTR _iCityID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	DWORD PTR _pkCity$[ebp], eax

; 194  : 	if(pkCity && ePurchaseYield >= -1 && ePurchaseYield < NUM_YIELD_TYPES)

	cmp	DWORD PTR _pkCity$[ebp], 0
	je	SHORT $LN2@ResponseCi@4
	cmp	DWORD PTR _ePurchaseYield$[ebp], -1
	jl	SHORT $LN2@ResponseCi@4
	cmp	DWORD PTR _ePurchaseYield$[ebp], 6
	jge	SHORT $LN2@ResponseCi@4

; 195  : 	{
; 196  : 		pkCity->Purchase(eUnitType, eBuildingType, eProjectType, static_cast<YieldTypes>(ePurchaseYield));

	mov	edx, DWORD PTR _ePurchaseYield$[ebp]
	push	edx
	mov	eax, DWORD PTR _eProjectType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eBuildingType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eUnitType$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?Purchase@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::Purchase
$LN2@ResponseCi@4:

; 197  : 	}
; 198  : }

	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?ResponseCityPurchase@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@H@Z ENDP ; CvDllNetMessageHandler::ResponseCityPurchase
_TEXT	ENDS
EXTRN	?pushOrder@CvCity@@QAEXW4OrderTypes@@HH_N111@Z:PROC ; CvCity::pushOrder
; Function compile flags: /Odtp
;	COMDAT ?ResponseCityPushOrder@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4OrderTypes@@H_N22@Z
_TEXT	SEGMENT
_pkCity$ = -8						; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iCityID$ = 16						; size = 4
_eOrder$ = 20						; size = 4
_iData$ = 24						; size = 4
_bAlt$ = 28						; size = 1
_bShift$ = 32						; size = 1
_bCtrl$ = 36						; size = 1
?ResponseCityPushOrder@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4OrderTypes@@H_N22@Z PROC ; CvDllNetMessageHandler::ResponseCityPushOrder, COMDAT

; 201  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 202  : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 203  : 	CvCity* pkCity = kPlayer.getCity(iCityID);

	mov	ecx, DWORD PTR _iCityID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	DWORD PTR _pkCity$[ebp], eax

; 204  : 	if(pkCity != NULL)

	cmp	DWORD PTR _pkCity$[ebp], 0
	je	SHORT $LN2@ResponseCi@5

; 205  : 	{
; 206  : 		pkCity->pushOrder(eOrder, iData, -1, bAlt, bShift, bCtrl);

	push	0
	movzx	edx, BYTE PTR _bCtrl$[ebp]
	push	edx
	movzx	eax, BYTE PTR _bShift$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bAlt$[ebp]
	push	ecx
	push	-1
	mov	edx, DWORD PTR _iData$[ebp]
	push	edx
	mov	eax, DWORD PTR _eOrder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?pushOrder@CvCity@@QAEXW4OrderTypes@@HH_N111@Z ; CvCity::pushOrder
$LN2@ResponseCi@5:

; 207  : 	}
; 208  : }

	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?ResponseCityPushOrder@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4OrderTypes@@H_N22@Z ENDP ; CvDllNetMessageHandler::ResponseCityPushOrder
_TEXT	ENDS
EXTRN	?swapOrder@CvCity@@QAEXH@Z:PROC			; CvCity::swapOrder
; Function compile flags: /Odtp
;	COMDAT ?ResponseCitySwapOrder@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z
_TEXT	SEGMENT
_pkCity$ = -8						; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iCityID$ = 16						; size = 4
_iNum$ = 20						; size = 4
?ResponseCitySwapOrder@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z PROC ; CvDllNetMessageHandler::ResponseCitySwapOrder, COMDAT

; 211  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 212  : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 213  : 	CvCity* pkCity = kPlayer.getCity(iCityID);

	mov	ecx, DWORD PTR _iCityID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	DWORD PTR _pkCity$[ebp], eax

; 214  : 	if(pkCity != NULL)

	cmp	DWORD PTR _pkCity$[ebp], 0
	je	SHORT $LN2@ResponseCi@6

; 215  : 	{
; 216  : 		pkCity->swapOrder(iNum);

	mov	edx, DWORD PTR _iNum$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?swapOrder@CvCity@@QAEXH@Z		; CvCity::swapOrder
$LN2@ResponseCi@6:

; 217  : 	}
; 218  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?ResponseCitySwapOrder@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z ENDP ; CvDllNetMessageHandler::ResponseCitySwapOrder
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?ResponseChooseElection@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iSelection$ = 16					; size = 4
_iVoteId$ = 20						; size = 4
?ResponseChooseElection@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z PROC ; CvDllNetMessageHandler::ResponseChooseElection, COMDAT

; 225  : {

	push	ebp
	mov	ebp, esp

; 226  : 	// Unused
; 227  : }

	pop	ebp
	ret	16					; 00000010H
?ResponseChooseElection@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z ENDP ; CvDllNetMessageHandler::ResponseChooseElection
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?ResponseDestroyUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H@Z
_TEXT	SEGMENT
_pkUnit$ = -8						; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iUnitID$ = 16						; size = 4
?ResponseDestroyUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H@Z PROC ; CvDllNetMessageHandler::ResponseDestroyUnit, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 232  : 	CvUnit* pkUnit = kPlayer.getUnit(iUnitID);

	mov	ecx, DWORD PTR _iUnitID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z	; CvPlayer::getUnit
	mov	DWORD PTR _pkUnit$[ebp], eax

; 233  : 
; 234  : 	if(pkUnit)

	cmp	DWORD PTR _pkUnit$[ebp], 0
	je	SHORT $LN2@ResponseDe

; 235  : 	{
; 236  : 		pkUnit->kill(true, ePlayer);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _pkUnit$[ebp]
	call	?kill@CvUnit@@QAEX_NW4PlayerTypes@@@Z	; CvUnit::kill
$LN2@ResponseDe:

; 237  : 	}
; 238  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ResponseDestroyUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H@Z ENDP ; CvDllNetMessageHandler::ResponseDestroyUnit
_TEXT	ENDS
EXTRN	?DoFromUIDiploEvent@CvDiplomacyAI@@QAEXW4PlayerTypes@@W4FromUIDiploEventTypes@@HH@Z:PROC ; CvDiplomacyAI::DoFromUIDiploEvent
EXTRN	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ:PROC ; CvPlayer::GetDiplomacyAI
; Function compile flags: /Odtp
;	COMDAT ?ResponseDiplomacyFromUI@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0W4FromUIDiploEventTypes@@HH@Z
_TEXT	SEGMENT
$T223547 = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eOtherPlayer$ = 16					; size = 4
_eEvent$ = 20						; size = 4
_iArg1$ = 24						; size = 4
_iArg2$ = 28						; size = 4
?ResponseDiplomacyFromUI@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0W4FromUIDiploEventTypes@@HH@Z PROC ; CvDllNetMessageHandler::ResponseDiplomacyFromUI, COMDAT

; 241  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 242  : 	GET_PLAYER(eOtherPlayer).GetDiplomacyAI()->DoFromUIDiploEvent(ePlayer, eEvent, iArg1, iArg2);

	mov	eax, DWORD PTR _eOtherPlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T223547[ebp], eax
	mov	ecx, DWORD PTR _iArg2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iArg1$[ebp]
	push	edx
	mov	eax, DWORD PTR _eEvent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T223547[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?DoFromUIDiploEvent@CvDiplomacyAI@@QAEXW4PlayerTypes@@W4FromUIDiploEventTypes@@HH@Z ; CvDiplomacyAI::DoFromUIDiploEvent

; 243  : }

	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?ResponseDiplomacyFromUI@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0W4FromUIDiploEventTypes@@HH@Z ENDP ; CvDllNetMessageHandler::ResponseDiplomacyFromUI
_TEXT	ENDS
EXTRN	?SetVoteCast@CvGame@@QAEXW4TeamTypes@@0_N@Z:PROC ; CvGame::SetVoteCast
; Function compile flags: /Odtp
;	COMDAT ?ResponseDiploVote@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0@Z
_TEXT	SEGMENT
$T223577 = -20						; size = 4
$T223565 = -16						; size = 4
$T223553 = -12						; size = 4
_eVotingTeam$ = -8					; size = 4
_eVote$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eVotePlayer$ = 16					; size = 4
?ResponseDiploVote@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0@Z PROC ; CvDllNetMessageHandler::ResponseDiploVote, COMDAT

; 246  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 247  : 	TeamTypes eVotingTeam = GET_PLAYER(ePlayer).getTeam();

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T223553[ebp], eax
	mov	ecx, DWORD PTR $T223553[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR _eVotingTeam$[ebp], eax

; 248  : 	TeamTypes eVote = GET_PLAYER(eVotePlayer).getTeam();

	mov	eax, DWORD PTR _eVotePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T223565[ebp], eax
	mov	ecx, DWORD PTR $T223565[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR _eVote$[ebp], eax

; 249  : 
; 250  : 	GC.getGame().SetVoteCast(eVotingTeam, eVote);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T223577[ebp], eax
	push	0
	mov	ecx, DWORD PTR _eVote$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eVotingTeam$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T223577[ebp]
	call	?SetVoteCast@CvGame@@QAEXW4TeamTypes@@0_N@Z ; CvGame::SetVoteCast

; 251  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ResponseDiploVote@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0@Z ENDP ; CvDllNetMessageHandler::ResponseDiploVote
_TEXT	ENDS
EXTRN	?doCommand@CvUnit@@QAEXW4CommandTypes@@HH@Z:PROC ; CvUnit::doCommand
EXTRN	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z:PROC	; CvPlayer::nextUnit
EXTRN	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z:PROC	; CvPlayer::firstUnit
EXTRN	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ:PROC	; CvUnit::getUnitType
EXTRN	?getAll@CvCommandInfo@@QBE_NXZ:PROC		; CvCommandInfo::getAll
EXTRN	?getCommandInfo@CvGlobals@@QAEPAVCvCommandInfo@@W4CommandTypes@@@Z:PROC ; CvGlobals::getCommandInfo
; Function compile flags: /Odtp
;	COMDAT ?ResponseDoCommand@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4CommandTypes@@HH_N@Z
_TEXT	SEGMENT
_eUnitType$222365 = -20					; size = 4
_pkLoopUnit$222366 = -16				; size = 4
_iLoop$222367 = -12					; size = 4
_pkUnit$ = -8						; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iUnitID$ = 16						; size = 4
_eCommand$ = 20						; size = 4
_iData1$ = 24						; size = 4
_iData2$ = 28						; size = 4
_bAlt$ = 32						; size = 1
?ResponseDoCommand@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4CommandTypes@@HH_N@Z PROC ; CvDllNetMessageHandler::ResponseDoCommand, COMDAT

; 254  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 255  : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 256  : 	CvUnit* pkUnit = kPlayer.getUnit(iUnitID);

	mov	ecx, DWORD PTR _iUnitID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z	; CvPlayer::getUnit
	mov	DWORD PTR _pkUnit$[ebp], eax

; 257  : 
; 258  : 	if(pkUnit != NULL)

	cmp	DWORD PTR _pkUnit$[ebp], 0
	je	$LN8@ResponseDo

; 259  : 	{
; 260  : #ifdef AUI_WARNING_FIXES
; 261  : 		CvCommandInfo* pCommandInfo = GC.getCommandInfo(eCommand);
; 262  : 		if (bAlt && pCommandInfo && pCommandInfo->getAll())
; 263  : #else
; 264  : 		if(bAlt && GC.getCommandInfo(eCommand)->getAll())

	movzx	edx, BYTE PTR _bAlt$[ebp]
	test	edx, edx
	je	$LN6@ResponseDo
	mov	eax, DWORD PTR _eCommand$[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getCommandInfo@CvGlobals@@QAEPAVCvCommandInfo@@W4CommandTypes@@@Z ; CvGlobals::getCommandInfo
	mov	ecx, eax
	call	?getAll@CvCommandInfo@@QBE_NXZ		; CvCommandInfo::getAll
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@ResponseDo

; 265  : #endif
; 266  : 		{
; 267  : 			const UnitTypes eUnitType = pkUnit->getUnitType();

	mov	ecx, DWORD PTR _pkUnit$[ebp]
	call	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ ; CvUnit::getUnitType
	mov	DWORD PTR _eUnitType$222365[ebp], eax

; 268  : 
; 269  : 			CvUnit* pkLoopUnit = NULL;

	mov	DWORD PTR _pkLoopUnit$222366[ebp], 0

; 270  : 			int iLoop = 0;

	mov	DWORD PTR _iLoop$222367[ebp], 0

; 271  : 
; 272  : 			for(pkLoopUnit = kPlayer.firstUnit(&iLoop); pkLoopUnit != NULL; pkLoopUnit = kPlayer.nextUnit(&iLoop))

	push	0
	lea	edx, DWORD PTR _iLoop$222367[ebp]
	push	edx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::firstUnit
	mov	DWORD PTR _pkLoopUnit$222366[ebp], eax
	jmp	SHORT $LN5@ResponseDo
$LN4@ResponseDo:
	push	0
	lea	eax, DWORD PTR _iLoop$222367[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::nextUnit
	mov	DWORD PTR _pkLoopUnit$222366[ebp], eax
$LN5@ResponseDo:
	cmp	DWORD PTR _pkLoopUnit$222366[ebp], 0
	je	SHORT $LN3@ResponseDo

; 273  : 			{
; 274  : 				if(pkLoopUnit->getUnitType() == eUnitType)

	mov	ecx, DWORD PTR _pkLoopUnit$222366[ebp]
	call	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ ; CvUnit::getUnitType
	cmp	eax, DWORD PTR _eUnitType$222365[ebp]
	jne	SHORT $LN2@ResponseDo

; 275  : 				{
; 276  : 					pkLoopUnit->doCommand(eCommand, iData1, iData2);

	mov	ecx, DWORD PTR _iData2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iData1$[ebp]
	push	edx
	mov	eax, DWORD PTR _eCommand$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkLoopUnit$222366[ebp]
	call	?doCommand@CvUnit@@QAEXW4CommandTypes@@HH@Z ; CvUnit::doCommand
$LN2@ResponseDo:

; 277  : 				}
; 278  : 			}

	jmp	SHORT $LN4@ResponseDo
$LN3@ResponseDo:

; 279  : 		}
; 280  : 		else

	jmp	SHORT $LN8@ResponseDo
$LN6@ResponseDo:

; 281  : 		{
; 282  : 			pkUnit->doCommand(eCommand, iData1, iData2);

	mov	ecx, DWORD PTR _iData2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iData1$[ebp]
	push	edx
	mov	eax, DWORD PTR _eCommand$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkUnit$[ebp]
	call	?doCommand@CvUnit@@QAEXW4CommandTypes@@HH@Z ; CvUnit::doCommand
$LN8@ResponseDo:

; 283  : 		}
; 284  : 	}
; 285  : }

	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?ResponseDoCommand@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4CommandTypes@@HH_N@Z ENDP ; CvDllNetMessageHandler::ResponseDoCommand
_TEXT	ENDS
EXTRN	?makeExtendedGame@CvPlayer@@QAEXXZ:PROC		; CvPlayer::makeExtendedGame
; Function compile flags: /Odtp
;	COMDAT ?ResponseExtendedGame@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
?ResponseExtendedGame@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@@Z PROC ; CvDllNetMessageHandler::ResponseExtendedGame, COMDAT

; 288  : {

	push	ebp
	mov	ebp, esp

; 289  : 	GET_PLAYER(ePlayer).makeExtendedGame();

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?makeExtendedGame@CvPlayer@@QAEXXZ	; CvPlayer::makeExtendedGame

; 290  : }

	pop	ebp
	ret	8
?ResponseExtendedGame@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@@Z ENDP ; CvDllNetMessageHandler::ResponseExtendedGame
_TEXT	ENDS
EXTRN	?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z:PROC ; CvGameReligions::AddReformationBelief
EXTRN	?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ:PROC ; CvPlayerReligions::GetReligionCreatedByPlayer
EXTRN	?HasCreatedReligion@CvPlayerReligions@@QBE_NXZ:PROC ; CvPlayerReligions::HasCreatedReligion
EXTRN	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ:PROC ; CvPlayer::GetReligions
EXTRN	?HasAddedReformationBelief@CvGameReligions@@QBE_NW4PlayerTypes@@@Z:PROC ; CvGameReligions::HasAddedReformationBelief
EXTRN	?IsReformationBelief@CvBeliefEntry@@QBE_NXZ:PROC ; CvBeliefEntry::IsReformationBelief
EXTRN	?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z:PROC ; CvGameReligions::NotifyPlayer
EXTRN	?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z:PROC ; CvGameReligions::FoundPantheon
EXTRN	?IsPantheonBeliefAvailable@CvGameReligions@@QAE_NW4BeliefTypes@@@Z:PROC ; CvGameReligions::IsPantheonBeliefAvailable
EXTRN	?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z:PROC ; CvGameReligions::CanCreatePantheon
EXTRN	?IsPantheonBelief@CvBeliefEntry@@QBE_NXZ:PROC	; CvBeliefEntry::IsPantheonBelief
EXTRN	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z:PROC ; CvBeliefXMLEntries::GetEntry
EXTRN	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ:PROC ; CvGlobals::GetGameBeliefs
EXTRN	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ:PROC ; CvGame::GetGameReligions
; Function compile flags: /Odtp
;	COMDAT ?ResponseFoundPantheon@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4BeliefTypes@@@Z
_TEXT	SEGMENT
_eReligion$222398 = -28					; size = 4
_kPlayer$222396 = -24					; size = 4
_eResult$222389 = -20					; size = 4
_pkGameReligions$ = -16					; size = 4
_kGame$ = -12						; size = 4
_pkBeliefs$ = -8					; size = 4
_pEntry$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eBelief$ = 16						; size = 4
?ResponseFoundPantheon@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4BeliefTypes@@@Z PROC ; CvDllNetMessageHandler::ResponseFoundPantheon, COMDAT

; 293  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 294  : 	CvGame& kGame(GC.getGame());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR _kGame$[ebp], eax

; 295  : 	CvGameReligions* pkGameReligions(kGame.GetGameReligions());

	mov	ecx, DWORD PTR _kGame$[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	DWORD PTR _pkGameReligions$[ebp], eax

; 296  : 	CvBeliefXMLEntries* pkBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pkBeliefs$[ebp], eax

; 297  : 	CvBeliefEntry* pEntry = pkBeliefs->GetEntry((int)eBelief);

	mov	ecx, DWORD PTR _eBelief$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	DWORD PTR _pEntry$[ebp], eax

; 298  : 
; 299  : 	// Pantheon belief, or adding one through Reformation?
; 300  : 	if (pEntry && ePlayer != NO_PLAYER)

	cmp	DWORD PTR _pEntry$[ebp], 0
	je	$LN10@ResponseFo
	cmp	DWORD PTR _ePlayer$[ebp], -1
	je	$LN10@ResponseFo

; 301  : 	{
; 302  : 		if (pEntry->IsPantheonBelief())

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?IsPantheonBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsPantheonBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN8@ResponseFo

; 303  : 		{
; 304  : 			CvGameReligions::FOUNDING_RESULT eResult = pkGameReligions->CanCreatePantheon(ePlayer, true);

	push	1
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkGameReligions$[ebp]
	call	?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z ; CvGameReligions::CanCreatePantheon
	mov	DWORD PTR _eResult$222389[ebp], eax

; 305  : 			if(eResult == CvGameReligions::FOUNDING_OK)

	cmp	DWORD PTR _eResult$222389[ebp], 0
	jne	SHORT $LN7@ResponseFo

; 306  : 			{
; 307  : 				if(pkGameReligions->IsPantheonBeliefAvailable(eBelief))

	mov	ecx, DWORD PTR _eBelief$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkGameReligions$[ebp]
	call	?IsPantheonBeliefAvailable@CvGameReligions@@QAE_NW4BeliefTypes@@@Z ; CvGameReligions::IsPantheonBeliefAvailable
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN6@ResponseFo

; 308  : 				{
; 309  : 					pkGameReligions->FoundPantheon(ePlayer, eBelief);

	mov	eax, DWORD PTR _eBelief$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkGameReligions$[ebp]
	call	?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z ; CvGameReligions::FoundPantheon

; 310  : 				}
; 311  : 				else

	jmp	SHORT $LN5@ResponseFo
$LN6@ResponseFo:

; 312  : 				{
; 313  : 					CvGameReligions::NotifyPlayer(ePlayer, CvGameReligions::FOUNDING_BELIEF_IN_USE);

	push	1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	call	?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z ; CvGameReligions::NotifyPlayer
	add	esp, 8
$LN5@ResponseFo:

; 314  : 				}
; 315  : 			}
; 316  : 			else

	jmp	SHORT $LN4@ResponseFo
$LN7@ResponseFo:

; 317  : 			{
; 318  : 				CvGameReligions::NotifyPlayer(ePlayer, eResult);

	mov	eax, DWORD PTR _eResult$222389[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	call	?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z ; CvGameReligions::NotifyPlayer
	add	esp, 8
$LN4@ResponseFo:

; 319  : 			}

	jmp	SHORT $LN10@ResponseFo
$LN8@ResponseFo:

; 320  : 		}
; 321  : 		else if (pEntry->IsReformationBelief())

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?IsReformationBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsReformationBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN10@ResponseFo

; 322  : 		{
; 323  : #ifdef AUI_RELIGION_FIX_NO_BELIEFS_AVAILABLE_CHECK_FOR_NON_PANTHEON_MOVED
; 324  : 			CvGameReligions::FOUNDING_RESULT eResult = pkGameReligions->CanAddReformationBelief(ePlayer, eBelief);
; 325  : 			if (eResult == CvGameReligions::FOUNDING_OK)
; 326  : 			{
; 327  : 				ReligionTypes eReligion = GET_PLAYER(ePlayer).GetReligions()->GetReligionCreatedByPlayer();
; 328  : #else
; 329  : 			CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$222396[ebp], eax

; 330  : 			if (!pkGameReligions->HasAddedReformationBelief(ePlayer) && kPlayer.GetReligions()->HasCreatedReligion())

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkGameReligions$[ebp]
	call	?HasAddedReformationBelief@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ; CvGameReligions::HasAddedReformationBelief
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN10@ResponseFo
	mov	ecx, DWORD PTR _kPlayer$222396[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?HasCreatedReligion@CvPlayerReligions@@QBE_NXZ ; CvPlayerReligions::HasCreatedReligion
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@ResponseFo

; 331  : 			{
; 332  : 				ReligionTypes eReligion = kPlayer.GetReligions()->GetReligionCreatedByPlayer();

	mov	ecx, DWORD PTR _kPlayer$222396[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ ; CvPlayerReligions::GetReligionCreatedByPlayer
	mov	DWORD PTR _eReligion$222398[ebp], eax

; 333  : #endif
; 334  : 				pkGameReligions->AddReformationBelief(ePlayer, eReligion, eBelief);

	mov	ecx, DWORD PTR _eBelief$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eReligion$222398[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkGameReligions$[ebp]
	call	?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z ; CvGameReligions::AddReformationBelief
$LN10@ResponseFo:

; 335  : 			}
; 336  : #ifdef AUI_RELIGION_FIX_NO_BELIEFS_AVAILABLE_CHECK_FOR_NON_PANTHEON_MOVED
; 337  : 			else
; 338  : 			{
; 339  : 				CvGameReligions::NotifyPlayer(ePlayer, eResult);
; 340  : 			}
; 341  : #endif
; 342  : 		}
; 343  : 	}
; 344  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ResponseFoundPantheon@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4BeliefTypes@@@Z ENDP ; CvDllNetMessageHandler::ResponseFoundPantheon
_TEXT	ENDS
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
PUBLIC	??_C@_0CM@JJDGNDMF@TXT_KEY_NOTIFICATION_SUMMARY_FOU@ ; `string'
PUBLIC	?GetLocalizedText@@YA?AVCvString@@PBD@Z		; GetLocalizedText
PUBLIC	??_C@_0CE@MCMJBDBC@TXT_KEY_NOTIFICATION_FOUND_RELIG@ ; `string'
PUBLIC	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ		; CvPlot::getPlotCity
PUBLIC	__$ArrayPad$
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z:PROC ; CvNotifications::Add
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
EXTRN	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ:PROC ; CvPlayer::GetNotifications
EXTRN	?isHuman@CvPlayer@@QBE_NXZ:PROC			; CvPlayer::isHuman
EXTRN	?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z:PROC ; CvGameReligions::FoundReligion
EXTRN	?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z:PROC ; CvGameReligions::CanFoundReligion
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT ??_C@_0CM@JJDGNDMF@TXT_KEY_NOTIFICATION_SUMMARY_FOU@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.h
CONST	SEGMENT
??_C@_0CM@JJDGNDMF@TXT_KEY_NOTIFICATION_SUMMARY_FOU@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_FOUND_RELIGION', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@MCMJBDBC@TXT_KEY_NOTIFICATION_FOUND_RELIG@
CONST	SEGMENT
??_C@_0CE@MCMJBDBC@TXT_KEY_NOTIFICATION_FOUND_RELIG@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_FOUND_RELIGION', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ResponseFoundReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ResponseFoundReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333HH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ResponseFoundReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333HH@Z$1
__ehfuncinfo$?ResponseFoundReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333HH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?ResponseFoundReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdllnetmessagehandler.cpp
xdata$x	ENDS
;	COMDAT ?ResponseFoundReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333HH@Z
_TEXT	SEGMENT
tv211 = -164						; size = 4
tv223 = -160						; size = 4
$T223732 = -156						; size = 4
$T223717 = -152						; size = 4
$T223713 = -148						; size = 4
$T223696 = -140						; size = 4
$T223657 = -136						; size = 4
$T223644 = -132						; size = 4
$T223640 = -128						; size = 4
$T223633 = -124						; size = 4
$T223629 = -117						; size = 1
$T223618 = -116						; size = 4
$T223614 = -109						; size = 1
_iMapY$223695 = -108					; size = 4
_iMapX$223694 = -104					; size = 4
$T223607 = -100						; size = 4
_strBuffer$222422 = -96					; size = 28
_strSummary$222425 = -68				; size = 28
__$ArrayPad$ = -40					; size = 4
_pNotifications$222420 = -36				; size = 4
_kPlayer$222418 = -32					; size = 4
_eResult$222415 = -28					; size = 4
_pkGameReligions$ = -24					; size = 4
_kGame$ = -20						; size = 4
_pkCity$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eReligion$ = 16					; size = 4
_szCustomName$ = 20					; size = 4
_eBelief1$ = 24						; size = 4
_eBelief2$ = 28						; size = 4
_eBelief3$ = 32						; size = 4
_eBelief4$ = 36						; size = 4
_iCityX$ = 40						; size = 4
_iCityY$ = 44						; size = 4
?ResponseFoundReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333HH@Z PROC ; CvDllNetMessageHandler::ResponseFoundReligion, COMDAT

; 347  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ResponseFoundReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 152				; 00000098H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 348  : 	CvGame& kGame(GC.getGame());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR _kGame$[ebp], eax

; 349  : 	CvGameReligions* pkGameReligions(kGame.GetGameReligions());

	mov	ecx, DWORD PTR _kGame$[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	DWORD PTR _pkGameReligions$[ebp], eax

; 350  : 
; 351  : 	CvCity* pkCity = GC.getMap().plot(iCityX, iCityY)->getPlotCity();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T223607[ebp], ecx
	cmp	DWORD PTR _iCityX$[ebp], -2147483647	; 80000001H
	je	SHORT $LN14@ResponseFo@2
	cmp	DWORD PTR _iCityY$[ebp], -2147483647	; 80000001H
	jne	SHORT $LN15@ResponseFo@2
$LN14@ResponseFo@2:
	mov	DWORD PTR $T223696[ebp], 0
	jmp	$LN16@ResponseFo@2
$LN15@ResponseFo@2:
	mov	edx, DWORD PTR $T223607[ebp]
	mov	al, BYTE PTR [edx+4056]
	mov	BYTE PTR $T223614[ebp], al
	mov	ecx, DWORD PTR $T223607[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T223618[ebp], edx
	movzx	eax, BYTE PTR $T223614[ebp]
	test	eax, eax
	je	SHORT $LN27@ResponseFo@2
	cmp	DWORD PTR _iCityX$[ebp], 0
	jge	SHORT $LN26@ResponseFo@2
	mov	eax, DWORD PTR _iCityX$[ebp]
	cdq
	idiv	DWORD PTR $T223618[ebp]
	add	edx, DWORD PTR $T223618[ebp]
	mov	DWORD PTR _iMapX$223694[ebp], edx
	jmp	SHORT $LN28@ResponseFo@2
	jmp	SHORT $LN27@ResponseFo@2
$LN26@ResponseFo@2:
	mov	ecx, DWORD PTR _iCityX$[ebp]
	cmp	ecx, DWORD PTR $T223618[ebp]
	jl	SHORT $LN27@ResponseFo@2
	mov	eax, DWORD PTR _iCityX$[ebp]
	cdq
	idiv	DWORD PTR $T223618[ebp]
	mov	DWORD PTR _iMapX$223694[ebp], edx
	jmp	SHORT $LN28@ResponseFo@2
$LN27@ResponseFo@2:
	mov	edx, DWORD PTR _iCityX$[ebp]
	mov	DWORD PTR _iMapX$223694[ebp], edx
$LN28@ResponseFo@2:
	mov	eax, DWORD PTR $T223607[ebp]
	mov	cl, BYTE PTR [eax+4057]
	mov	BYTE PTR $T223629[ebp], cl
	mov	edx, DWORD PTR $T223607[ebp]
	mov	eax, DWORD PTR [edx+4024]
	mov	DWORD PTR $T223633[ebp], eax
	movzx	ecx, BYTE PTR $T223629[ebp]
	push	ecx
	mov	edx, DWORD PTR $T223633[ebp]
	push	edx
	mov	eax, DWORD PTR _iCityY$[ebp]
	push	eax
	call	?coordRange@@YAHHH_N@Z			; coordRange
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iMapY$223695[ebp], eax
	cmp	DWORD PTR _iMapX$223694[ebp], 0
	jl	SHORT $LN36@ResponseFo@2
	mov	ecx, DWORD PTR $T223607[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T223640[ebp], edx
	mov	eax, DWORD PTR _iMapX$223694[ebp]
	cmp	eax, DWORD PTR $T223640[ebp]
	jge	SHORT $LN36@ResponseFo@2
	cmp	DWORD PTR _iMapY$223695[ebp], 0
	jl	SHORT $LN36@ResponseFo@2
	mov	ecx, DWORD PTR $T223607[ebp]
	mov	edx, DWORD PTR [ecx+4024]
	mov	DWORD PTR $T223644[ebp], edx
	mov	eax, DWORD PTR _iMapY$223695[ebp]
	cmp	eax, DWORD PTR $T223644[ebp]
	jge	SHORT $LN36@ResponseFo@2
	mov	DWORD PTR tv223[ebp], 1
	jmp	SHORT $LN34@ResponseFo@2
$LN36@ResponseFo@2:
	mov	DWORD PTR tv223[ebp], 0
$LN34@ResponseFo@2:
	cmp	DWORD PTR tv223[ebp], 0
	je	SHORT $LN18@ResponseFo@2
	mov	ecx, DWORD PTR $T223607[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T223657[ebp], edx
	mov	eax, DWORD PTR _iMapY$223695[ebp]
	imul	eax, DWORD PTR $T223657[ebp]
	add	eax, DWORD PTR _iMapX$223694[ebp]
	imul	eax, 484				; 000001e4H
	mov	ecx, DWORD PTR $T223607[ebp]
	add	eax, DWORD PTR [ecx+4068]
	mov	DWORD PTR tv211[ebp], eax
	jmp	SHORT $LN19@ResponseFo@2
$LN18@ResponseFo@2:
	mov	DWORD PTR tv211[ebp], 0
$LN19@ResponseFo@2:
	mov	edx, DWORD PTR tv211[ebp]
	mov	DWORD PTR $T223696[ebp], edx
$LN16@ResponseFo@2:
	mov	ecx, DWORD PTR $T223696[ebp]
	call	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ	; CvPlot::getPlotCity
	mov	DWORD PTR _pkCity$[ebp], eax

; 352  : 	if(pkCity && ePlayer != NO_PLAYER)

	cmp	DWORD PTR _pkCity$[ebp], 0
	je	$LN6@ResponseFo@2
	cmp	DWORD PTR _ePlayer$[ebp], -1
	je	$LN6@ResponseFo@2

; 353  : 	{
; 354  : 		CvGameReligions::FOUNDING_RESULT eResult = pkGameReligions->CanFoundReligion(ePlayer, eReligion, szCustomName, eBelief1, eBelief2, eBelief3, eBelief4, pkCity);

	mov	eax, DWORD PTR _pkCity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eBelief4$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eBelief3$[ebp]
	push	edx
	mov	eax, DWORD PTR _eBelief2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eBelief1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _szCustomName$[ebp]
	push	edx
	mov	eax, DWORD PTR _eReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkGameReligions$[ebp]
	call	?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z ; CvGameReligions::CanFoundReligion
	mov	DWORD PTR _eResult$222415[ebp], eax

; 355  : 		if(eResult == CvGameReligions::FOUNDING_OK)

	cmp	DWORD PTR _eResult$222415[ebp], 0
	jne	SHORT $LN4@ResponseFo@2

; 356  : 			pkGameReligions->FoundReligion(ePlayer, eReligion, szCustomName, eBelief1, eBelief2, eBelief3, eBelief4, pkCity);

	mov	edx, DWORD PTR _pkCity$[ebp]
	push	edx
	mov	eax, DWORD PTR _eBelief4$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eBelief3$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eBelief2$[ebp]
	push	edx
	mov	eax, DWORD PTR _eBelief1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szCustomName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkGameReligions$[ebp]
	call	?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z ; CvGameReligions::FoundReligion

; 357  : 		else

	jmp	$LN6@ResponseFo@2
$LN4@ResponseFo@2:

; 358  : 		{
; 359  : 			CvGameReligions::NotifyPlayer(ePlayer, eResult);

	mov	ecx, DWORD PTR _eResult$222415[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	call	?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z ; CvGameReligions::NotifyPlayer
	add	esp, 8

; 360  : 			// We don't want them to lose the opportunity to found the religion, and the Great Prophet is already gone so just repost the notification
; 361  : 			// If someone beat them to the last religion, well... tough luck.
; 362  : 			CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$222418[ebp], eax

; 363  : #ifdef AUI_DLLNETMESSAGEHANDLER_FIX_RESPAWN_PROPHET_IF_BEATEN_TO_LAST_RELIGION
; 364  : 			if (kPlayer.isHuman() && eResult != CvGameReligions::FOUNDING_NO_RELIGIONS_AVAILABLE && eResult != CvGameReligions::FOUNDING_NO_BELIEFS_AVAILABLE)
; 365  : #else
; 366  : 			if(kPlayer.isHuman() && eResult != CvGameReligions::FOUNDING_NO_RELIGIONS_AVAILABLE)

	mov	ecx, DWORD PTR _kPlayer$222418[ebp]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	movzx	ecx, al
	test	ecx, ecx
	je	$LN6@ResponseFo@2
	cmp	DWORD PTR _eResult$222415[ebp], 4
	je	$LN6@ResponseFo@2

; 367  : #endif
; 368  : 			{
; 369  : 				CvNotifications* pNotifications = kPlayer.GetNotifications();

	mov	ecx, DWORD PTR _kPlayer$222418[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	DWORD PTR _pNotifications$222420[ebp], eax

; 370  : 				if(pNotifications)

	cmp	DWORD PTR _pNotifications$222420[ebp], 0
	je	$LN1@ResponseFo@2

; 371  : 				{
; 372  : 					CvString strBuffer = GetLocalizedText("TXT_KEY_NOTIFICATION_FOUND_RELIGION");

	push	OFFSET ??_C@_0CE@MCMJBDBC@TXT_KEY_NOTIFICATION_FOUND_RELIG@
	lea	edx, DWORD PTR _strBuffer$222422[ebp]
	push	edx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 373  : 					CvString strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_FOUND_RELIGION");

	push	OFFSET ??_C@_0CM@JJDGNDMF@TXT_KEY_NOTIFICATION_SUMMARY_FOU@
	lea	eax, DWORD PTR _strSummary$222425[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 374  : 					pNotifications->Add(NOTIFICATION_FOUND_RELIGION, strBuffer, strSummary, iCityX, iCityY, -1, pkCity->GetID());

	mov	ecx, DWORD PTR _pkCity$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	DWORD PTR $T223713[ebp], edx
	lea	ecx, DWORD PTR _strSummary$222425[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T223717[ebp], eax
	mov	eax, DWORD PTR $T223713[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _iCityY$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iCityX$[ebp]
	push	edx
	mov	eax, DWORD PTR $T223717[ebp]
	push	eax
	lea	ecx, DWORD PTR _strBuffer$222422[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	2128612861				; 7ee00dfdH
	mov	ecx, DWORD PTR _pNotifications$222420[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 375  : 				}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$222425[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strBuffer$222422[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN1@ResponseFo@2:

; 376  : 				kPlayer.GetReligions()->SetFoundingReligion(true);

	mov	ecx, DWORD PTR _kPlayer$222418[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	DWORD PTR $T223732[ebp], eax
	mov	ecx, 1
	mov	edx, DWORD PTR $T223732[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN6@ResponseFo@2:

; 377  : 			}
; 378  : #ifdef AUI_DLLNETMESSAGEHANDLER_FIX_RESPAWN_PROPHET_IF_BEATEN_TO_LAST_RELIGION
; 379  : 			else if (kPlayer.getCapitalCity())
; 380  : 			{
; 381  : 				UnitTypes eUnit = (UnitTypes)GC.getInfoTypeForString("UNIT_PROPHET", true);
; 382  : 				if (eUnit != NO_UNIT)
; 383  : 				{
; 384  : 					kPlayer.getCapitalCity()->GetCityCitizens()->DoSpawnGreatPerson(eUnit, false /*bIncrementCount*/, false, true);
; 385  : 				}
; 386  : 			}
; 387  : #endif
; 388  : 		}
; 389  : 	}
; 390  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	40					; 00000028H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ResponseFoundReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333HH@Z$0:
	lea	ecx, DWORD PTR _strBuffer$222422[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?ResponseFoundReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333HH@Z$1:
	lea	ecx, DWORD PTR _strSummary$222425[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?ResponseFoundReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-156]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ResponseFoundReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ResponseFoundReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333HH@Z ENDP ; CvDllNetMessageHandler::ResponseFoundReligion
PUBLIC	__$ArrayPad$
EXTRN	__imp_??1String@Localization@@UAE@XZ:PROC
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:PROC
EXTRN	__imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z:PROC
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	__imp_?toUTF8@String@Localization@@QAEPBDAAIH@Z:PROC
EXTRN	__imp_?Lookup@Localization@@YA?AVString@1@PBD@Z:PROC
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?GetLocalizedText@@YA?AVCvString@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$1
__ehfuncinfo$?GetLocalizedText@@YA?AVCvString@@PBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?GetLocalizedText@@YA?AVCvString@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
xdata$x	ENDS
;	COMDAT ?GetLocalizedText@@YA?AVCvString@@PBD@Z
_TEXT	SEGMENT
$T223750 = -140						; size = 4
_str$ = -136						; size = 28
__$ArrayPad$ = -108					; size = 4
_bytes$ = -104						; size = 4
_text$ = -100						; size = 80
_szComposedString$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_szString$ = 12						; size = 4
?GetLocalizedText@@YA?AVCvString@@PBD@Z PROC		; GetLocalizedText, COMDAT

; 489  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetLocalizedText@@YA?AVCvString@@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 128				; 00000080H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T223750[ebp], 0

; 490  : 	Localization::String text = Localization::Lookup(szString);

	mov	eax, DWORD PTR _szString$[ebp]
	push	eax
	lea	ecx, DWORD PTR _text$[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 491  : 
; 492  : 	size_t bytes = 0;

	mov	DWORD PTR _bytes$[ebp], 0

; 493  : 	const char* szComposedString = text.toUTF8(bytes);

	push	1
	lea	edx, DWORD PTR _bytes$[ebp]
	push	edx
	lea	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDAAIH@Z
	mov	DWORD PTR _szComposedString$[ebp], eax

; 494  : 	CvString str;

	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 495  : 	str.assign(szComposedString, bytes);

	mov	eax, DWORD PTR _bytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szComposedString$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z

; 496  : 	return str;

	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T223750[ebp]
	or	eax, 1
	mov	DWORD PTR $T223750[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 497  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$0:
	lea	ecx, DWORD PTR _text$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$1:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$2:
	mov	eax, DWORD PTR $T223750[ebp]
	and	eax, 1
	je	$LN6@GetLocaliz
	and	DWORD PTR $T223750[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
$LN6@GetLocaliz:
	ret	0
__ehhandler$?GetLocalizedText@@YA?AVCvString@@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetLocalizedText@@YA?AVCvString@@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetLocalizedText@@YA?AVCvString@@PBD@Z ENDP		; GetLocalizedText
PUBLIC	??_C@_0CO@LHGAKPJJ@TXT_KEY_NOTIFICATION_SUMMARY_ENH@ ; `string'
PUBLIC	??_C@_0CG@OCHNGFAO@TXT_KEY_NOTIFICATION_ENHANCE_REL@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z:PROC ; CvGameReligions::EnhanceReligion
EXTRN	?CanEnhanceReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z:PROC ; CvGameReligions::CanEnhanceReligion
;	COMDAT ??_C@_0CO@LHGAKPJJ@TXT_KEY_NOTIFICATION_SUMMARY_ENH@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.h
CONST	SEGMENT
??_C@_0CO@LHGAKPJJ@TXT_KEY_NOTIFICATION_SUMMARY_ENH@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_ENHANCE_RELIGION', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@OCHNGFAO@TXT_KEY_NOTIFICATION_ENHANCE_REL@
CONST	SEGMENT
??_C@_0CG@OCHNGFAO@TXT_KEY_NOTIFICATION_ENHANCE_REL@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_ENHANCE_RELIGION', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ResponseEnhanceReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@3HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ResponseEnhanceReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@3HH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ResponseEnhanceReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@3HH@Z$1
__ehfuncinfo$?ResponseEnhanceReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@3HH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?ResponseEnhanceReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@3HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdllnetmessagehandler.cpp
xdata$x	ENDS
;	COMDAT ?ResponseEnhanceReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@3HH@Z
_TEXT	SEGMENT
tv202 = -164						; size = 4
tv214 = -160						; size = 4
$T223906 = -156						; size = 4
$T223891 = -152						; size = 4
$T223887 = -148						; size = 4
$T223870 = -140						; size = 4
$T223831 = -136						; size = 4
$T223818 = -132						; size = 4
$T223814 = -128						; size = 4
$T223807 = -124						; size = 4
$T223803 = -117						; size = 1
$T223792 = -116						; size = 4
$T223788 = -109						; size = 1
_iMapY$223869 = -108					; size = 4
_iMapX$223868 = -104					; size = 4
$T223781 = -100						; size = 4
_strBuffer$222448 = -96					; size = 28
_strSummary$222451 = -68				; size = 28
__$ArrayPad$ = -40					; size = 4
_pNotifications$222446 = -36				; size = 4
_pkCity$222443 = -32					; size = 4
_kPlayer$222444 = -28					; size = 4
_pkGameReligions$ = -24					; size = 4
_eResult$ = -20						; size = 4
_kGame$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eReligion$ = 16					; size = 4
_szCustomName$ = 20					; size = 4
_eBelief1$ = 24						; size = 4
_eBelief2$ = 28						; size = 4
_iCityX$ = 32						; size = 4
_iCityY$ = 36						; size = 4
?ResponseEnhanceReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@3HH@Z PROC ; CvDllNetMessageHandler::ResponseEnhanceReligion, COMDAT

; 397  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ResponseEnhanceReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@3HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 152				; 00000098H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 398  : 	CvGame& kGame(GC.getGame());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR _kGame$[ebp], eax

; 399  : 	CvGameReligions* pkGameReligions(kGame.GetGameReligions());

	mov	ecx, DWORD PTR _kGame$[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	DWORD PTR _pkGameReligions$[ebp], eax

; 400  : 
; 401  : 	CvGameReligions::FOUNDING_RESULT eResult = pkGameReligions->CanEnhanceReligion(ePlayer, eReligion, eBelief1, eBelief2);

	mov	ecx, DWORD PTR _eBelief2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eBelief1$[ebp]
	push	edx
	mov	eax, DWORD PTR _eReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkGameReligions$[ebp]
	call	?CanEnhanceReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z ; CvGameReligions::CanEnhanceReligion
	mov	DWORD PTR _eResult$[ebp], eax

; 402  : 	if(eResult == CvGameReligions::FOUNDING_OK)

	cmp	DWORD PTR _eResult$[ebp], 0
	jne	SHORT $LN4@ResponseEn

; 403  : 		pkGameReligions->EnhanceReligion(ePlayer, eReligion, eBelief1, eBelief2);

	mov	edx, DWORD PTR _eBelief2$[ebp]
	push	edx
	mov	eax, DWORD PTR _eBelief1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkGameReligions$[ebp]
	call	?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z ; CvGameReligions::EnhanceReligion

; 404  : 	else

	jmp	$LN5@ResponseEn
$LN4@ResponseEn:

; 405  : 	{
; 406  : 		CvGameReligions::NotifyPlayer(ePlayer, eResult);

	mov	eax, DWORD PTR _eResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	call	?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z ; CvGameReligions::NotifyPlayer
	add	esp, 8

; 407  : 		// We don't want them to lose the opportunity to enhance the religion, and the Great Prophet is already gone so just repost the notification
; 408  : 		CvCity* pkCity = GC.getMap().plot(iCityX, iCityY)->getPlotCity();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T223781[ebp], edx
	cmp	DWORD PTR _iCityX$[ebp], -2147483647	; 80000001H
	je	SHORT $LN13@ResponseEn
	cmp	DWORD PTR _iCityY$[ebp], -2147483647	; 80000001H
	jne	SHORT $LN14@ResponseEn
$LN13@ResponseEn:
	mov	DWORD PTR $T223870[ebp], 0
	jmp	$LN15@ResponseEn
$LN14@ResponseEn:
	mov	eax, DWORD PTR $T223781[ebp]
	mov	cl, BYTE PTR [eax+4056]
	mov	BYTE PTR $T223788[ebp], cl
	mov	edx, DWORD PTR $T223781[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T223792[ebp], eax
	movzx	ecx, BYTE PTR $T223788[ebp]
	test	ecx, ecx
	je	SHORT $LN26@ResponseEn
	cmp	DWORD PTR _iCityX$[ebp], 0
	jge	SHORT $LN25@ResponseEn
	mov	eax, DWORD PTR _iCityX$[ebp]
	cdq
	idiv	DWORD PTR $T223792[ebp]
	add	edx, DWORD PTR $T223792[ebp]
	mov	DWORD PTR _iMapX$223868[ebp], edx
	jmp	SHORT $LN27@ResponseEn
	jmp	SHORT $LN26@ResponseEn
$LN25@ResponseEn:
	mov	edx, DWORD PTR _iCityX$[ebp]
	cmp	edx, DWORD PTR $T223792[ebp]
	jl	SHORT $LN26@ResponseEn
	mov	eax, DWORD PTR _iCityX$[ebp]
	cdq
	idiv	DWORD PTR $T223792[ebp]
	mov	DWORD PTR _iMapX$223868[ebp], edx
	jmp	SHORT $LN27@ResponseEn
$LN26@ResponseEn:
	mov	eax, DWORD PTR _iCityX$[ebp]
	mov	DWORD PTR _iMapX$223868[ebp], eax
$LN27@ResponseEn:
	mov	ecx, DWORD PTR $T223781[ebp]
	mov	dl, BYTE PTR [ecx+4057]
	mov	BYTE PTR $T223803[ebp], dl
	mov	eax, DWORD PTR $T223781[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T223807[ebp], ecx
	movzx	edx, BYTE PTR $T223803[ebp]
	push	edx
	mov	eax, DWORD PTR $T223807[ebp]
	push	eax
	mov	ecx, DWORD PTR _iCityY$[ebp]
	push	ecx
	call	?coordRange@@YAHHH_N@Z			; coordRange
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iMapY$223869[ebp], eax
	cmp	DWORD PTR _iMapX$223868[ebp], 0
	jl	SHORT $LN35@ResponseEn
	mov	edx, DWORD PTR $T223781[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T223814[ebp], eax
	mov	ecx, DWORD PTR _iMapX$223868[ebp]
	cmp	ecx, DWORD PTR $T223814[ebp]
	jge	SHORT $LN35@ResponseEn
	cmp	DWORD PTR _iMapY$223869[ebp], 0
	jl	SHORT $LN35@ResponseEn
	mov	edx, DWORD PTR $T223781[ebp]
	mov	eax, DWORD PTR [edx+4024]
	mov	DWORD PTR $T223818[ebp], eax
	mov	ecx, DWORD PTR _iMapY$223869[ebp]
	cmp	ecx, DWORD PTR $T223818[ebp]
	jge	SHORT $LN35@ResponseEn
	mov	DWORD PTR tv214[ebp], 1
	jmp	SHORT $LN33@ResponseEn
$LN35@ResponseEn:
	mov	DWORD PTR tv214[ebp], 0
$LN33@ResponseEn:
	cmp	DWORD PTR tv214[ebp], 0
	je	SHORT $LN17@ResponseEn
	mov	edx, DWORD PTR $T223781[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T223831[ebp], eax
	mov	ecx, DWORD PTR _iMapY$223869[ebp]
	imul	ecx, DWORD PTR $T223831[ebp]
	add	ecx, DWORD PTR _iMapX$223868[ebp]
	imul	ecx, 484				; 000001e4H
	mov	edx, DWORD PTR $T223781[ebp]
	add	ecx, DWORD PTR [edx+4068]
	mov	DWORD PTR tv202[ebp], ecx
	jmp	SHORT $LN18@ResponseEn
$LN17@ResponseEn:
	mov	DWORD PTR tv202[ebp], 0
$LN18@ResponseEn:
	mov	eax, DWORD PTR tv202[ebp]
	mov	DWORD PTR $T223870[ebp], eax
$LN15@ResponseEn:
	mov	ecx, DWORD PTR $T223870[ebp]
	call	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ	; CvPlot::getPlotCity
	mov	DWORD PTR _pkCity$222443[ebp], eax

; 409  : 		CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$222444[ebp], ecx

; 410  : #ifdef AUI_DLLNETMESSAGEHANDLER_FIX_RESPAWN_PROPHET_IF_BEATEN_TO_LAST_RELIGION
; 411  : 		if (kPlayer.isHuman() && pkCity && eResult != CvGameReligions::FOUNDING_NO_BELIEFS_AVAILABLE)
; 412  : #else
; 413  : 		if(kPlayer.isHuman() && eResult != CvGameReligions::FOUNDING_NO_RELIGIONS_AVAILABLE && pkCity)

	mov	ecx, DWORD PTR _kPlayer$222444[ebp]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	movzx	edx, al
	test	edx, edx
	je	$LN5@ResponseEn
	cmp	DWORD PTR _eResult$[ebp], 4
	je	$LN5@ResponseEn
	cmp	DWORD PTR _pkCity$222443[ebp], 0
	je	$LN5@ResponseEn

; 414  : #endif
; 415  : 		{
; 416  : 			CvNotifications* pNotifications = kPlayer.GetNotifications();

	mov	ecx, DWORD PTR _kPlayer$222444[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	DWORD PTR _pNotifications$222446[ebp], eax

; 417  : 			if(pNotifications)

	cmp	DWORD PTR _pNotifications$222446[ebp], 0
	je	$LN1@ResponseEn

; 418  : 			{
; 419  : 				CvString strBuffer = GetLocalizedText("TXT_KEY_NOTIFICATION_ENHANCE_RELIGION");

	push	OFFSET ??_C@_0CG@OCHNGFAO@TXT_KEY_NOTIFICATION_ENHANCE_REL@
	lea	eax, DWORD PTR _strBuffer$222448[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 420  : 				CvString strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_ENHANCE_RELIGION");

	push	OFFSET ??_C@_0CO@LHGAKPJJ@TXT_KEY_NOTIFICATION_SUMMARY_ENH@
	lea	ecx, DWORD PTR _strSummary$222451[ebp]
	push	ecx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 421  : 				pNotifications->Add(NOTIFICATION_ENHANCE_RELIGION, strBuffer, strSummary, iCityX, iCityY, -1, pkCity->GetID());

	mov	edx, DWORD PTR _pkCity$222443[ebp]
	mov	eax, DWORD PTR [edx+120]
	mov	DWORD PTR $T223887[ebp], eax
	lea	ecx, DWORD PTR _strSummary$222451[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T223891[ebp], eax
	mov	ecx, DWORD PTR $T223887[ebp]
	push	ecx
	push	-1
	mov	edx, DWORD PTR _iCityY$[ebp]
	push	edx
	mov	eax, DWORD PTR _iCityX$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T223891[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strBuffer$222448[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	-372818113				; e9c73f3fH
	mov	ecx, DWORD PTR _pNotifications$222446[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 422  : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$222451[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strBuffer$222448[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN1@ResponseEn:

; 423  : 			kPlayer.GetReligions()->SetFoundingReligion(true);

	mov	ecx, DWORD PTR _kPlayer$222444[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	DWORD PTR $T223906[ebp], eax
	mov	edx, 1
	mov	eax, DWORD PTR $T223906[ebp]
	mov	DWORD PTR [eax+8], edx
$LN5@ResponseEn:

; 424  : 		}
; 425  : #ifdef AUI_DLLNETMESSAGEHANDLER_FIX_RESPAWN_PROPHET_IF_BEATEN_TO_LAST_RELIGION
; 426  : 		else if (kPlayer.getCapitalCity())
; 427  : 		{
; 428  : 			UnitTypes eUnit = (UnitTypes)GC.getInfoTypeForString("UNIT_PROPHET", true);
; 429  : 			if (eUnit != NO_UNIT)
; 430  : 			{
; 431  : 				kPlayer.getCapitalCity()->GetCityCitizens()->DoSpawnGreatPerson(eUnit, false /*bIncrementCount*/, false, true);
; 432  : 			}
; 433  : 		}
; 434  : #endif
; 435  : 	}
; 436  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ResponseEnhanceReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@3HH@Z$0:
	lea	ecx, DWORD PTR _strBuffer$222448[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?ResponseEnhanceReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@3HH@Z$1:
	lea	ecx, DWORD PTR _strSummary$222451[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?ResponseEnhanceReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@3HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-156]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ResponseEnhanceReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@3HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ResponseEnhanceReligion@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@3HH@Z ENDP ; CvDllNetMessageHandler::ResponseEnhanceReligion
EXTRN	?MoveSpyTo@CvPlayerEspionage@@QAE_NPAVCvCity@@I_N@Z:PROC ; CvPlayerEspionage::MoveSpyTo
EXTRN	?ExtractSpyFromCity@CvPlayerEspionage@@QAE_NI@Z:PROC ; CvPlayerEspionage::ExtractSpyFromCity
EXTRN	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ:PROC ; CvPlayer::GetEspionage
; Function compile flags: /Odtp
;	COMDAT ?ResponseMoveSpy@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HHH_N@Z
_TEXT	SEGMENT
tv142 = -36						; size = 4
tv83 = -32						; size = 4
$T223929 = -28						; size = 4
$T223925 = -24						; size = 4
$T223921 = -20						; size = 4
_eTargetPlayer$222468 = -16				; size = 4
_pCity$222470 = -12					; size = 4
_pPlayerEspionage$ = -8					; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iSpyIndex$ = 16					; size = 4
_iTargetPlayer$ = 20					; size = 4
_iTargetCity$ = 24					; size = 4
_bAsDiplomat$ = 28					; size = 1
?ResponseMoveSpy@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HHH_N@Z PROC ; CvDllNetMessageHandler::ResponseMoveSpy, COMDAT

; 439  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H

; 440  : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 441  : 	CvPlayerEspionage* pPlayerEspionage = kPlayer.GetEspionage();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	DWORD PTR _pPlayerEspionage$[ebp], eax

; 442  : 
; 443  : 	if(pPlayerEspionage)

	cmp	DWORD PTR _pPlayerEspionage$[ebp], 0
	je	$LN6@ResponseMo

; 444  : 	{
; 445  : 		if(iTargetCity == -1)

	cmp	DWORD PTR _iTargetCity$[ebp], -1
	jne	SHORT $LN4@ResponseMo

; 446  : 		{
; 447  : 			pPlayerEspionage->ExtractSpyFromCity(iSpyIndex);

	mov	ecx, DWORD PTR _iSpyIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerEspionage$[ebp]
	call	?ExtractSpyFromCity@CvPlayerEspionage@@QAE_NI@Z ; CvPlayerEspionage::ExtractSpyFromCity

; 448  : 			GC.GetEngineUserInterface()->setDirty(EspionageScreen_DIRTY_BIT, true);

	mov	edx, DWORD PTR $T223921[ebp]
	mov	DWORD PTR tv83[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv83[ebp], eax
	push	1
	push	34					; 00000022H
	mov	ecx, DWORD PTR tv83[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv83[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 449  : 		}
; 450  : 		else

	jmp	SHORT $LN6@ResponseMo
$LN4@ResponseMo:

; 451  : 		{
; 452  : 			CvAssertMsg(iTargetPlayer != -1, "iTargetPlayer is -1");
; 453  : 			if(iTargetPlayer != -1)

	cmp	DWORD PTR _iTargetPlayer$[ebp], -1
	je	SHORT $LN6@ResponseMo

; 454  : 			{
; 455  : 				PlayerTypes eTargetPlayer = (PlayerTypes)iTargetPlayer;

	mov	ecx, DWORD PTR _iTargetPlayer$[ebp]
	mov	DWORD PTR _eTargetPlayer$222468[ebp], ecx

; 456  : 				CvCity* pCity = GET_PLAYER(eTargetPlayer).getCity(iTargetCity);

	mov	edx, DWORD PTR _eTargetPlayer$222468[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T223925[ebp], edx
	mov	eax, DWORD PTR _iTargetCity$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T223925[ebp]
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	DWORD PTR _pCity$222470[ebp], eax

; 457  : 				CvAssertMsg(pCity, "pCity is null");
; 458  : 				if(pCity)

	cmp	DWORD PTR _pCity$222470[ebp], 0
	je	SHORT $LN6@ResponseMo

; 459  : 				{
; 460  : 					pPlayerEspionage->MoveSpyTo(pCity, iSpyIndex, bAsDiplomat);

	movzx	ecx, BYTE PTR _bAsDiplomat$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iSpyIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _pCity$222470[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayerEspionage$[ebp]
	call	?MoveSpyTo@CvPlayerEspionage@@QAE_NPAVCvCity@@I_N@Z ; CvPlayerEspionage::MoveSpyTo

; 461  : 					GC.GetEngineUserInterface()->setDirty(EspionageScreen_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T223929[ebp]
	mov	DWORD PTR tv142[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv142[ebp], edx
	push	1
	push	34					; 00000022H
	mov	eax, DWORD PTR tv142[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv142[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax
$LN6@ResponseMo:

; 462  : 				}
; 463  : 			}
; 464  : 		}
; 465  : 	}
; 466  : }

	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?ResponseMoveSpy@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HHH_N@Z ENDP ; CvDllNetMessageHandler::ResponseMoveSpy
_TEXT	ENDS
EXTRN	?AttemptCoup@CvPlayerEspionage@@QAE_NI@Z:PROC	; CvPlayerEspionage::AttemptCoup
; Function compile flags: /Odtp
;	COMDAT ?ResponseStageCoup@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H@Z
_TEXT	SEGMENT
_bCoupSuccess$222480 = -9				; size = 1
_pPlayerEspionage$ = -8					; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_eSpyPlayer$ = 12					; size = 4
_iSpyIndex$ = 16					; size = 4
?ResponseStageCoup@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H@Z PROC ; CvDllNetMessageHandler::ResponseStageCoup, COMDAT

; 469  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 470  : 	CvAssertMsg(eSpyPlayer != NO_PLAYER, "eSpyPlayer invalid");
; 471  : 	CvAssertMsg(iSpyIndex >= 0, "iSpyIndex invalid");
; 472  : 
; 473  : 	CvPlayerAI& kPlayer = GET_PLAYER(eSpyPlayer);

	mov	eax, DWORD PTR _eSpyPlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 474  : 	CvPlayerEspionage* pPlayerEspionage = kPlayer.GetEspionage();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	DWORD PTR _pPlayerEspionage$[ebp], eax

; 475  : 
; 476  : 	CvAssertMsg(pPlayerEspionage, "pPlayerEspionage is null");
; 477  : 	if(pPlayerEspionage)

	cmp	DWORD PTR _pPlayerEspionage$[ebp], 0
	je	SHORT $LN2@ResponseSt

; 478  : 	{
; 479  : #ifdef AUI_WARNING_FIXES
; 480  : 		pPlayerEspionage->AttemptCoup(iSpyIndex);
; 481  : #else
; 482  : 		bool bCoupSuccess = pPlayerEspionage->AttemptCoup(iSpyIndex);

	mov	ecx, DWORD PTR _iSpyIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerEspionage$[ebp]
	call	?AttemptCoup@CvPlayerEspionage@@QAE_NI@Z ; CvPlayerEspionage::AttemptCoup
	mov	BYTE PTR _bCoupSuccess$222480[ebp], al
$LN2@ResponseSt:

; 483  : #endif
; 484  : 	}
; 485  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ResponseStageCoup@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H@Z ENDP ; CvDllNetMessageHandler::ResponseStageCoup
_TEXT	ENDS
EXTRN	?SetFaithPurchaseIndex@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::SetFaithPurchaseIndex
EXTRN	?SetFaithPurchaseType@CvPlayer@@QAEXW4FaithPurchaseTypes@@@Z:PROC ; CvPlayer::SetFaithPurchaseType
; Function compile flags: /Odtp
;	COMDAT ?ResponseFaithPurchase@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4FaithPurchaseTypes@@H@Z
_TEXT	SEGMENT
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eFaithPurchaseType$ = 16				; size = 4
_iFaithPurchaseIndex$ = 20				; size = 4
?ResponseFaithPurchase@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4FaithPurchaseTypes@@H@Z PROC ; CvDllNetMessageHandler::ResponseFaithPurchase, COMDAT

; 488  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 489  : 	CvAssertMsg(ePlayer != NO_PLAYER, "ePlayer invalid");
; 490  : 	CvAssertMsg(eFaithPurchaseType > -1, "Faith Purchase Type invalid");
; 491  : 	CvAssertMsg(iFaithPurchaseIndex > -1, "Faith Purchase Index invalid");
; 492  : 
; 493  : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 494  : 	kPlayer.SetFaithPurchaseType(eFaithPurchaseType);

	mov	ecx, DWORD PTR _eFaithPurchaseType$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?SetFaithPurchaseType@CvPlayer@@QAEXW4FaithPurchaseTypes@@@Z ; CvPlayer::SetFaithPurchaseType

; 495  : 	kPlayer.SetFaithPurchaseIndex(iFaithPurchaseIndex);

	mov	edx, DWORD PTR _iFaithPurchaseIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?SetFaithPurchaseIndex@CvPlayer@@QAEXH@Z ; CvPlayer::SetFaithPurchaseIndex

; 496  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?ResponseFaithPurchase@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4FaithPurchaseTypes@@H@Z ENDP ; CvDllNetMessageHandler::ResponseFaithPurchase
_TEXT	ENDS
EXTRN	?DoVoteEnact@CvLeague@@QAEXHW4PlayerTypes@@HH@Z:PROC ; CvLeague::DoVoteEnact
EXTRN	?GetLeague@CvGameLeagues@@QAEPAVCvLeague@@W4LeagueTypes@@@Z:PROC ; CvGameLeagues::GetLeague
EXTRN	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ:PROC ; CvGame::GetGameLeagues
; Function compile flags: /Odtp
;	COMDAT ?ResponseLeagueVoteEnact@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@HW4PlayerTypes@@HH@Z
_TEXT	SEGMENT
$T223945 = -8						; size = 4
_pLeague$ = -4						; size = 4
_this$ = 8						; size = 4
_eLeague$ = 12						; size = 4
_iResolutionID$ = 16					; size = 4
_eVoter$ = 20						; size = 4
_iNumVotes$ = 24					; size = 4
_iChoice$ = 28						; size = 4
?ResponseLeagueVoteEnact@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@HW4PlayerTypes@@HH@Z PROC ; CvDllNetMessageHandler::ResponseLeagueVoteEnact, COMDAT

; 509  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 510  : 	CvAssertMsg(eLeague != NO_LEAGUE, "eLeague invalid");
; 511  : 	CvAssertMsg(eVoter != NO_PLAYER, "eVoter invalid");
; 512  : 
; 513  : 	CvLeague* pLeague = GC.getGame().GetGameLeagues()->GetLeague(eLeague);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T223945[ebp], eax
	mov	ecx, DWORD PTR _eLeague$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T223945[ebp]
	call	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ ; CvGame::GetGameLeagues
	mov	ecx, eax
	call	?GetLeague@CvGameLeagues@@QAEPAVCvLeague@@W4LeagueTypes@@@Z ; CvGameLeagues::GetLeague
	mov	DWORD PTR _pLeague$[ebp], eax

; 514  : #endif
; 515  : 	CvAssertMsg(pLeague->CanVote(eVoter), "eVoter not allowed to vote. Please send Anton your save file and version.");
; 516  : 	pLeague->DoVoteEnact(iResolutionID, eVoter, iNumVotes, iChoice);

	mov	edx, DWORD PTR _iChoice$[ebp]
	push	edx
	mov	eax, DWORD PTR _iNumVotes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eVoter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iResolutionID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?DoVoteEnact@CvLeague@@QAEXHW4PlayerTypes@@HH@Z ; CvLeague::DoVoteEnact

; 517  : }

	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?ResponseLeagueVoteEnact@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@HW4PlayerTypes@@HH@Z ENDP ; CvDllNetMessageHandler::ResponseLeagueVoteEnact
_TEXT	ENDS
EXTRN	?DoVoteRepeal@CvLeague@@QAEXHW4PlayerTypes@@HH@Z:PROC ; CvLeague::DoVoteRepeal
; Function compile flags: /Odtp
;	COMDAT ?ResponseLeagueVoteRepeal@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@HW4PlayerTypes@@HH@Z
_TEXT	SEGMENT
$T223951 = -8						; size = 4
_pLeague$ = -4						; size = 4
_this$ = 8						; size = 4
_eLeague$ = 12						; size = 4
_iResolutionID$ = 16					; size = 4
_eVoter$ = 20						; size = 4
_iNumVotes$ = 24					; size = 4
_iChoice$ = 28						; size = 4
?ResponseLeagueVoteRepeal@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@HW4PlayerTypes@@HH@Z PROC ; CvDllNetMessageHandler::ResponseLeagueVoteRepeal, COMDAT

; 530  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 531  : 	CvAssertMsg(eLeague != NO_LEAGUE, "eLeague invalid");
; 532  : 	CvAssertMsg(eVoter != NO_PLAYER, "eVoter invalid");
; 533  : 
; 534  : 	CvLeague* pLeague = GC.getGame().GetGameLeagues()->GetLeague(eLeague);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T223951[ebp], eax
	mov	ecx, DWORD PTR _eLeague$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T223951[ebp]
	call	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ ; CvGame::GetGameLeagues
	mov	ecx, eax
	call	?GetLeague@CvGameLeagues@@QAEPAVCvLeague@@W4LeagueTypes@@@Z ; CvGameLeagues::GetLeague
	mov	DWORD PTR _pLeague$[ebp], eax

; 535  : #endif
; 536  : 	CvAssertMsg(pLeague->CanVote(eVoter), "eVoter not allowed to vote. Please send Anton your save file and version.");
; 537  : 	pLeague->DoVoteRepeal(iResolutionID, eVoter, iNumVotes, iChoice);

	mov	edx, DWORD PTR _iChoice$[ebp]
	push	edx
	mov	eax, DWORD PTR _iNumVotes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eVoter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iResolutionID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?DoVoteRepeal@CvLeague@@QAEXHW4PlayerTypes@@HH@Z ; CvLeague::DoVoteRepeal

; 538  : }

	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?ResponseLeagueVoteRepeal@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@HW4PlayerTypes@@HH@Z ENDP ; CvDllNetMessageHandler::ResponseLeagueVoteRepeal
_TEXT	ENDS
EXTRN	?DoVoteAbstain@CvLeague@@QAEXW4PlayerTypes@@H@Z:PROC ; CvLeague::DoVoteAbstain
; Function compile flags: /Odtp
;	COMDAT ?ResponseLeagueVoteAbstain@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@W4PlayerTypes@@H@Z
_TEXT	SEGMENT
$T223957 = -8						; size = 4
_pLeague$ = -4						; size = 4
_this$ = 8						; size = 4
_eLeague$ = 12						; size = 4
_eVoter$ = 16						; size = 4
_iNumVotes$ = 20					; size = 4
?ResponseLeagueVoteAbstain@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@W4PlayerTypes@@H@Z PROC ; CvDllNetMessageHandler::ResponseLeagueVoteAbstain, COMDAT

; 551  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 552  : 	CvAssertMsg(eLeague != NO_LEAGUE, "eLeague invalid");
; 553  : 	CvAssertMsg(eVoter != NO_PLAYER, "eVoter invalid");
; 554  : 
; 555  : 	CvLeague* pLeague = GC.getGame().GetGameLeagues()->GetLeague(eLeague);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T223957[ebp], eax
	mov	ecx, DWORD PTR _eLeague$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T223957[ebp]
	call	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ ; CvGame::GetGameLeagues
	mov	ecx, eax
	call	?GetLeague@CvGameLeagues@@QAEPAVCvLeague@@W4LeagueTypes@@@Z ; CvGameLeagues::GetLeague
	mov	DWORD PTR _pLeague$[ebp], eax

; 556  : #endif
; 557  : 	CvAssertMsg(pLeague->CanVote(eVoter), "eVoter not allowed to vote. Please send Anton your save file and version.");
; 558  : 	pLeague->DoVoteAbstain(eVoter, iNumVotes);

	mov	edx, DWORD PTR _iNumVotes$[ebp]
	push	edx
	mov	eax, DWORD PTR _eVoter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?DoVoteAbstain@CvLeague@@QAEXW4PlayerTypes@@H@Z ; CvLeague::DoVoteAbstain

; 559  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?ResponseLeagueVoteAbstain@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@W4PlayerTypes@@H@Z ENDP ; CvDllNetMessageHandler::ResponseLeagueVoteAbstain
_TEXT	ENDS
EXTRN	?DoProposeEnact@CvLeague@@QAEXW4ResolutionTypes@@W4PlayerTypes@@H@Z:PROC ; CvLeague::DoProposeEnact
; Function compile flags: /Odtp
;	COMDAT ?ResponseLeagueProposeEnact@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@W4ResolutionTypes@@W4PlayerTypes@@H@Z
_TEXT	SEGMENT
$T223963 = -8						; size = 4
_pLeague$ = -4						; size = 4
_this$ = 8						; size = 4
_eLeague$ = 12						; size = 4
_eResolution$ = 16					; size = 4
_eProposer$ = 20					; size = 4
_iChoice$ = 24						; size = 4
?ResponseLeagueProposeEnact@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@W4ResolutionTypes@@W4PlayerTypes@@H@Z PROC ; CvDllNetMessageHandler::ResponseLeagueProposeEnact, COMDAT

; 573  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 574  : 	CvAssertMsg(eLeague != NO_LEAGUE, "eLeague invalid");
; 575  : 	CvAssertMsg(eResolution != NO_RESOLUTION, "eResolution invalid");
; 576  : 	CvAssertMsg(eProposer != NO_PLAYER, "eProposer invalid");
; 577  : 
; 578  : 	CvLeague* pLeague = GC.getGame().GetGameLeagues()->GetLeague(eLeague);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T223963[ebp], eax
	mov	ecx, DWORD PTR _eLeague$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T223963[ebp]
	call	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ ; CvGame::GetGameLeagues
	mov	ecx, eax
	call	?GetLeague@CvGameLeagues@@QAEPAVCvLeague@@W4LeagueTypes@@@Z ; CvGameLeagues::GetLeague
	mov	DWORD PTR _pLeague$[ebp], eax

; 579  : #endif
; 580  : 	CvAssertMsg(pLeague->CanProposeEnact(eResolution, eProposer, iChoice), "eProposer not allowed to enact Resolution. Please send Anton your save file and version.");
; 581  : 	pLeague->DoProposeEnact(eResolution, eProposer, iChoice);

	mov	edx, DWORD PTR _iChoice$[ebp]
	push	edx
	mov	eax, DWORD PTR _eProposer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eResolution$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?DoProposeEnact@CvLeague@@QAEXW4ResolutionTypes@@W4PlayerTypes@@H@Z ; CvLeague::DoProposeEnact

; 582  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?ResponseLeagueProposeEnact@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@W4ResolutionTypes@@W4PlayerTypes@@H@Z ENDP ; CvDllNetMessageHandler::ResponseLeagueProposeEnact
_TEXT	ENDS
EXTRN	?DoProposeRepeal@CvLeague@@QAEXHW4PlayerTypes@@@Z:PROC ; CvLeague::DoProposeRepeal
; Function compile flags: /Odtp
;	COMDAT ?ResponseLeagueProposeRepeal@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@HW4PlayerTypes@@@Z
_TEXT	SEGMENT
$T223969 = -8						; size = 4
_pLeague$ = -4						; size = 4
_this$ = 8						; size = 4
_eLeague$ = 12						; size = 4
_iResolutionID$ = 16					; size = 4
_eProposer$ = 20					; size = 4
?ResponseLeagueProposeRepeal@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@HW4PlayerTypes@@@Z PROC ; CvDllNetMessageHandler::ResponseLeagueProposeRepeal, COMDAT

; 595  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 596  : 	CvAssertMsg(eLeague != NO_LEAGUE, "eLeague invalid");
; 597  : 	CvAssertMsg(eProposer != NO_PLAYER, "eProposer invalid");
; 598  : 
; 599  : 	CvLeague* pLeague = GC.getGame().GetGameLeagues()->GetLeague(eLeague);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T223969[ebp], eax
	mov	ecx, DWORD PTR _eLeague$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T223969[ebp]
	call	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ ; CvGame::GetGameLeagues
	mov	ecx, eax
	call	?GetLeague@CvGameLeagues@@QAEPAVCvLeague@@W4LeagueTypes@@@Z ; CvGameLeagues::GetLeague
	mov	DWORD PTR _pLeague$[ebp], eax

; 600  : #endif
; 601  : 	CvAssertMsg(pLeague->CanProposeRepeal(iResolutionID, eProposer), "eProposer not allowed to repeal Resolution. Please send Anton your save file and version.");
; 602  : 	pLeague->DoProposeRepeal(iResolutionID, eProposer);

	mov	edx, DWORD PTR _eProposer$[ebp]
	push	edx
	mov	eax, DWORD PTR _iResolutionID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?DoProposeRepeal@CvLeague@@QAEXHW4PlayerTypes@@@Z ; CvLeague::DoProposeRepeal

; 603  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?ResponseLeagueProposeRepeal@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@HW4PlayerTypes@@@Z ENDP ; CvDllNetMessageHandler::ResponseLeagueProposeRepeal
_TEXT	ENDS
EXTRN	?DoChangeCustomName@CvLeague@@QAEXW4PlayerTypes@@PBD@Z:PROC ; CvLeague::DoChangeCustomName
; Function compile flags: /Odtp
;	COMDAT ?ResponseLeagueEditName@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@W4PlayerTypes@@PBD@Z
_TEXT	SEGMENT
$T223975 = -8						; size = 4
_pLeague$ = -4						; size = 4
_this$ = 8						; size = 4
_eLeague$ = 12						; size = 4
_ePlayer$ = 16						; size = 4
_szCustomName$ = 20					; size = 4
?ResponseLeagueEditName@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@W4PlayerTypes@@PBD@Z PROC ; CvDllNetMessageHandler::ResponseLeagueEditName, COMDAT

; 615  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 616  : 	CvAssertMsg(eLeague != NO_LEAGUE, "eLeague invalid");
; 617  : 
; 618  : 	CvLeague* pLeague = GC.getGame().GetGameLeagues()->GetLeague(eLeague);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T223975[ebp], eax
	mov	ecx, DWORD PTR _eLeague$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T223975[ebp]
	call	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ ; CvGame::GetGameLeagues
	mov	ecx, eax
	call	?GetLeague@CvGameLeagues@@QAEPAVCvLeague@@W4LeagueTypes@@@Z ; CvGameLeagues::GetLeague
	mov	DWORD PTR _pLeague$[ebp], eax

; 619  : #endif
; 620  : 	pLeague->DoChangeCustomName(ePlayer, szCustomName);

	mov	edx, DWORD PTR _szCustomName$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pLeague$[ebp]
	call	?DoChangeCustomName@CvLeague@@QAEXW4PlayerTypes@@PBD@Z ; CvLeague::DoChangeCustomName

; 621  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?ResponseLeagueEditName@CvDllNetMessageHandler@@UAGXW4LeagueTypes@@W4PlayerTypes@@PBD@Z ENDP ; CvDllNetMessageHandler::ResponseLeagueEditName
_TEXT	ENDS
PUBLIC	??_C@_0BB@FLEDFIEC@GREAT_WORK_MUSIC?$AA@	; `string'
PUBLIC	??_C@_0BG@BOBAMEPE@GREAT_WORK_LITERATURE?$AA@	; `string'
PUBLIC	??_C@_0P@CLPANGAI@GREAT_WORK_ART?$AA@		; `string'
PUBLIC	??_C@_0BE@IALMEBOB@GREAT_WORK_ARTIFACT?$AA@	; `string'
EXTRN	?ControlsGreatWork@CvPlayerCulture@@QAE_NH@Z:PROC ; CvPlayerCulture::ControlsGreatWork
EXTRN	?SetSwappableMusicIndex@CvPlayerCulture@@QAEXH@Z:PROC ; CvPlayerCulture::SetSwappableMusicIndex
EXTRN	?SetSwappableWritingIndex@CvPlayerCulture@@QAEXH@Z:PROC ; CvPlayerCulture::SetSwappableWritingIndex
EXTRN	?SetSwappableArtIndex@CvPlayerCulture@@QAEXH@Z:PROC ; CvPlayerCulture::SetSwappableArtIndex
EXTRN	?SetSwappableArtifactIndex@CvPlayerCulture@@QAEXH@Z:PROC ; CvPlayerCulture::SetSwappableArtifactIndex
EXTRN	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ:PROC ; CvPlayer::GetCulture
EXTRN	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z:PROC ; CvGlobals::getInfoTypeForString
;	COMDAT ??_C@_0BB@FLEDFIEC@GREAT_WORK_MUSIC?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
CONST	SEGMENT
??_C@_0BB@FLEDFIEC@GREAT_WORK_MUSIC?$AA@ DB 'GREAT_WORK_MUSIC', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BOBAMEPE@GREAT_WORK_LITERATURE?$AA@
CONST	SEGMENT
??_C@_0BG@BOBAMEPE@GREAT_WORK_LITERATURE?$AA@ DB 'GREAT_WORK_LITERATURE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CLPANGAI@GREAT_WORK_ART?$AA@
CONST	SEGMENT
??_C@_0P@CLPANGAI@GREAT_WORK_ART?$AA@ DB 'GREAT_WORK_ART', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IALMEBOB@GREAT_WORK_ARTIFACT?$AA@
CONST	SEGMENT
??_C@_0BE@IALMEBOB@GREAT_WORK_ARTIFACT?$AA@ DB 'GREAT_WORK_ARTIFACT', 00H ; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdllnetmessagehandler.cpp
CONST	ENDS
;	COMDAT ?ResponseSetSwappableGreatWork@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z
_TEXT	SEGMENT
tv247 = -52						; size = 4
$T224030 = -48						; size = 4
$T224026 = -44						; size = 4
$T224022 = -40						; size = 4
$T224018 = -36						; size = 4
$T224014 = -32						; size = 4
$T224010 = -28						; size = 4
$T224006 = -24						; size = 4
$T224002 = -20						; size = 4
$T223998 = -16						; size = 4
$T223994 = -12						; size = 4
$T223990 = -5						; size = 1
$T223981 = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iWorkClass$ = 16					; size = 4
_iWorkIndex$ = 20					; size = 4
?ResponseSetSwappableGreatWork@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z PROC ; CvDllNetMessageHandler::ResponseSetSwappableGreatWork, COMDAT

; 624  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H

; 625  : 	CvAssertMsg(ePlayer != NO_PLAYER, "ePlayer invalid");
; 626  : 	
; 627  : 	// is this player alive
; 628  : 	if (GET_PLAYER(ePlayer).isAlive())

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T223981[ebp], eax
	mov	ecx, DWORD PTR $T223981[ebp]
	mov	dl, BYTE PTR [ecx+2256]
	mov	BYTE PTR $T223990[ebp], dl
	movzx	eax, BYTE PTR $T223990[ebp]
	test	eax, eax
	je	$LN19@ResponseSe

; 629  : 	{
; 630  : 		// -1 indicates that they want to clear the slot
; 631  : 		if (iWorkIndex == -1)

	cmp	DWORD PTR _iWorkIndex$[ebp], -1
	jne	$LN17@ResponseSe

; 632  : 		{
; 633  : 			if (iWorkClass == GC.getInfoTypeForString("GREAT_WORK_ARTIFACT"))

	push	0
	push	OFFSET ??_C@_0BE@IALMEBOB@GREAT_WORK_ARTIFACT?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _iWorkClass$[ebp], eax
	jne	SHORT $LN16@ResponseSe

; 634  : 			{
; 635  : 				GET_PLAYER(ePlayer).GetCulture()->SetSwappableArtifactIndex(-1);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T223994[ebp], ecx
	push	-1
	mov	ecx, DWORD PTR $T223994[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?SetSwappableArtifactIndex@CvPlayerCulture@@QAEXH@Z ; CvPlayerCulture::SetSwappableArtifactIndex
	jmp	$LN15@ResponseSe
$LN16@ResponseSe:

; 636  : 			}
; 637  : 			else if (iWorkClass == GC.getInfoTypeForString("GREAT_WORK_ART"))

	push	0
	push	OFFSET ??_C@_0P@CLPANGAI@GREAT_WORK_ART?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _iWorkClass$[ebp], eax
	jne	SHORT $LN14@ResponseSe

; 638  : 			{
; 639  : 				GET_PLAYER(ePlayer).GetCulture()->SetSwappableArtIndex(-1);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T223998[ebp], edx
	push	-1
	mov	ecx, DWORD PTR $T223998[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?SetSwappableArtIndex@CvPlayerCulture@@QAEXH@Z ; CvPlayerCulture::SetSwappableArtIndex
	jmp	SHORT $LN15@ResponseSe
$LN14@ResponseSe:

; 640  : 			}
; 641  : 			else if (iWorkClass == GC.getInfoTypeForString("GREAT_WORK_LITERATURE"))

	push	0
	push	OFFSET ??_C@_0BG@BOBAMEPE@GREAT_WORK_LITERATURE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _iWorkClass$[ebp], eax
	jne	SHORT $LN12@ResponseSe

; 642  : 			{
; 643  : 				GET_PLAYER(ePlayer).GetCulture()->SetSwappableWritingIndex(-1);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224002[ebp], eax
	push	-1
	mov	ecx, DWORD PTR $T224002[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?SetSwappableWritingIndex@CvPlayerCulture@@QAEXH@Z ; CvPlayerCulture::SetSwappableWritingIndex
	jmp	SHORT $LN15@ResponseSe
$LN12@ResponseSe:

; 644  : 			}			
; 645  : 			else if (iWorkClass == GC.getInfoTypeForString("GREAT_WORK_MUSIC"))

	push	0
	push	OFFSET ??_C@_0BB@FLEDFIEC@GREAT_WORK_MUSIC?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _iWorkClass$[ebp], eax
	jne	SHORT $LN15@ResponseSe

; 646  : 			{
; 647  : 				GET_PLAYER(ePlayer).GetCulture()->SetSwappableMusicIndex(-1);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224006[ebp], ecx
	push	-1
	mov	ecx, DWORD PTR $T224006[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?SetSwappableMusicIndex@CvPlayerCulture@@QAEXH@Z ; CvPlayerCulture::SetSwappableMusicIndex
$LN15@ResponseSe:

; 648  : 			}
; 649  : 		}
; 650  : 		else

	jmp	$LN9@ResponseSe
$LN17@ResponseSe:

; 651  : 		{
; 652  : 			// does this player control this work
; 653  : 			if (GET_PLAYER(ePlayer).GetCulture()->ControlsGreatWork(iWorkIndex))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224010[ebp], edx
	mov	eax, DWORD PTR _iWorkIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T224010[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?ControlsGreatWork@CvPlayerCulture@@QAE_NH@Z ; CvPlayerCulture::ControlsGreatWork
	movzx	ecx, al
	test	ecx, ecx
	je	$LN9@ResponseSe

; 654  : 			{
; 655  : 				if (iWorkClass == GC.getInfoTypeForString("GREAT_WORK_ARTIFACT"))

	push	0
	push	OFFSET ??_C@_0BE@IALMEBOB@GREAT_WORK_ARTIFACT?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _iWorkClass$[ebp], eax
	jne	SHORT $LN7@ResponseSe

; 656  : 				{
; 657  : 					GET_PLAYER(ePlayer).GetCulture()->SetSwappableArtifactIndex(iWorkIndex);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224014[ebp], edx
	mov	eax, DWORD PTR _iWorkIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T224014[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?SetSwappableArtifactIndex@CvPlayerCulture@@QAEXH@Z ; CvPlayerCulture::SetSwappableArtifactIndex
	jmp	$LN9@ResponseSe
$LN7@ResponseSe:

; 658  : 				}
; 659  : 				else if (iWorkClass == GC.getInfoTypeForString("GREAT_WORK_ART"))

	push	0
	push	OFFSET ??_C@_0P@CLPANGAI@GREAT_WORK_ART?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _iWorkClass$[ebp], eax
	jne	SHORT $LN5@ResponseSe

; 660  : 				{
; 661  : 					GET_PLAYER(ePlayer).GetCulture()->SetSwappableArtIndex(iWorkIndex);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224018[ebp], ecx
	mov	edx, DWORD PTR _iWorkIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T224018[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?SetSwappableArtIndex@CvPlayerCulture@@QAEXH@Z ; CvPlayerCulture::SetSwappableArtIndex
	jmp	SHORT $LN9@ResponseSe
$LN5@ResponseSe:

; 662  : 				}
; 663  : 				else if (iWorkClass == GC.getInfoTypeForString("GREAT_WORK_LITERATURE"))

	push	0
	push	OFFSET ??_C@_0BG@BOBAMEPE@GREAT_WORK_LITERATURE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _iWorkClass$[ebp], eax
	jne	SHORT $LN3@ResponseSe

; 664  : 				{
; 665  : 					GET_PLAYER(ePlayer).GetCulture()->SetSwappableWritingIndex(iWorkIndex);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224022[ebp], eax
	mov	ecx, DWORD PTR _iWorkIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T224022[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?SetSwappableWritingIndex@CvPlayerCulture@@QAEXH@Z ; CvPlayerCulture::SetSwappableWritingIndex
	jmp	SHORT $LN9@ResponseSe
$LN3@ResponseSe:

; 666  : 				}			
; 667  : 				else if (iWorkClass == GC.getInfoTypeForString("GREAT_WORK_MUSIC"))

	push	0
	push	OFFSET ??_C@_0BB@FLEDFIEC@GREAT_WORK_MUSIC?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _iWorkClass$[ebp], eax
	jne	SHORT $LN9@ResponseSe

; 668  : 				{
; 669  : 					GET_PLAYER(ePlayer).GetCulture()->SetSwappableMusicIndex(iWorkIndex);

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224026[ebp], edx
	mov	eax, DWORD PTR _iWorkIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T224026[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?SetSwappableMusicIndex@CvPlayerCulture@@QAEXH@Z ; CvPlayerCulture::SetSwappableMusicIndex
$LN9@ResponseSe:

; 670  : 				}				
; 671  : 			}
; 672  : 		}
; 673  : 		GC.GetEngineUserInterface()->setDirty(GreatWorksScreen_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T224030[ebp]
	mov	DWORD PTR tv247[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv247[ebp], edx
	push	1
	push	36					; 00000024H
	mov	eax, DWORD PTR tv247[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv247[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax
$LN19@ResponseSe:

; 674  : 	}
; 675  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?ResponseSetSwappableGreatWork@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HH@Z ENDP ; CvDllNetMessageHandler::ResponseSetSwappableGreatWork
_TEXT	ENDS
EXTRN	?SwapGreatWorks@CvGameCulture@@QAE_NW4PlayerTypes@@H0H@Z:PROC ; CvGameCulture::SwapGreatWorks
EXTRN	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ:PROC ; CvGame::GetGameCulture
; Function compile flags: /Odtp
;	COMDAT ?ResponseSwapGreatWorks@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H0H@Z
_TEXT	SEGMENT
$T224036 = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer1$ = 12						; size = 4
_iWorkIndex1$ = 16					; size = 4
_ePlayer2$ = 20						; size = 4
_iWorkIndex2$ = 24					; size = 4
?ResponseSwapGreatWorks@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H0H@Z PROC ; CvDllNetMessageHandler::ResponseSwapGreatWorks, COMDAT

; 678  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 679  : 	GC.getGame().GetGameCulture()->SwapGreatWorks(ePlayer1, iWorkIndex1, ePlayer2, iWorkIndex2);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T224036[ebp], eax
	mov	ecx, DWORD PTR _iWorkIndex2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer2$[ebp]
	push	edx
	mov	eax, DWORD PTR _iWorkIndex1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T224036[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?SwapGreatWorks@CvGameCulture@@QAE_NW4PlayerTypes@@H0H@Z ; CvGameCulture::SwapGreatWorks

; 680  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?ResponseSwapGreatWorks@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H0H@Z ENDP ; CvDllNetMessageHandler::ResponseSwapGreatWorks
_TEXT	ENDS
EXTRN	?MoveGreatWorks@CvGameCulture@@QAEXW4PlayerTypes@@HHHHHH@Z:PROC ; CvGameCulture::MoveGreatWorks
; Function compile flags: /Odtp
;	COMDAT ?ResponseMoveGreatWorks@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HHHHHH@Z
_TEXT	SEGMENT
$T224042 = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iCity1$ = 16						; size = 4
_iBuildingClass1$ = 20					; size = 4
_iWorkIndex1$ = 24					; size = 4
_iCity2$ = 28						; size = 4
_iBuildingClass2$ = 32					; size = 4
_iWorkIndex2$ = 36					; size = 4
?ResponseMoveGreatWorks@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HHHHHH@Z PROC ; CvDllNetMessageHandler::ResponseMoveGreatWorks, COMDAT

; 685  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 686  : 	GC.getGame().GetGameCulture()->MoveGreatWorks(ePlayer, iCity1, iBuildingClass1, iWorkIndex1, iCity2, iBuildingClass2, iWorkIndex2);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T224042[ebp], eax
	mov	ecx, DWORD PTR _iWorkIndex2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iBuildingClass2$[ebp]
	push	edx
	mov	eax, DWORD PTR _iCity2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iWorkIndex1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iBuildingClass1$[ebp]
	push	edx
	mov	eax, DWORD PTR _iCity1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T224042[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?MoveGreatWorks@CvGameCulture@@QAEXW4PlayerTypes@@HHHHHH@Z ; CvGameCulture::MoveGreatWorks

; 687  : }

	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?ResponseMoveGreatWorks@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HHHHHH@Z ENDP ; CvDllNetMessageHandler::ResponseMoveGreatWorks
_TEXT	ENDS
EXTRN	?DoSwitchIdeologies@CvPlayerPolicies@@QAEXW4PolicyBranchTypes@@@Z:PROC ; CvPlayerPolicies::DoSwitchIdeologies
EXTRN	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ:PROC ; CvPlayer::GetPlayerPolicies
EXTRN	?SetAnarchyNumTurns@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::SetAnarchyNumTurns
EXTRN	?GetPublicOpinionPreferredIdeology@CvPlayerCulture@@QBE?AW4PolicyBranchTypes@@XZ:PROC ; CvPlayerCulture::GetPublicOpinionPreferredIdeology
; Function compile flags: /Odtp
;	COMDAT ?ResponseChangeIdeology@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@@Z
_TEXT	SEGMENT
$T224060 = -16						; size = 4
$T224056 = -9						; size = 1
_ePreferredIdeology$222586 = -8				; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
?ResponseChangeIdeology@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@@Z PROC ; CvDllNetMessageHandler::ResponseChangeIdeology, COMDAT

; 690  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 691  : 	CvAssertMsg(ePlayer != NO_PLAYER, "ePlayer invalid");
; 692  : 
; 693  : 	// is this player alive
; 694  : 	CvPlayer &kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 695  : 	if (kPlayer.isAlive())

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	mov	dl, BYTE PTR [ecx+2256]
	mov	BYTE PTR $T224056[ebp], dl
	movzx	eax, BYTE PTR $T224056[ebp]
	test	eax, eax
	je	SHORT $LN2@ResponseCh@2

; 696  : 	{
; 697  : 		PolicyBranchTypes ePreferredIdeology = kPlayer.GetCulture()->GetPublicOpinionPreferredIdeology();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetPublicOpinionPreferredIdeology@CvPlayerCulture@@QBE?AW4PolicyBranchTypes@@XZ ; CvPlayerCulture::GetPublicOpinionPreferredIdeology
	mov	DWORD PTR _ePreferredIdeology$222586[ebp], eax

; 698  : 		kPlayer.SetAnarchyNumTurns(GC.getSWITCH_POLICY_BRANCHES_ANARCHY_TURNS());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+6976
	mov	DWORD PTR $T224060[ebp], ecx
	mov	edx, DWORD PTR $T224060[ebp]
	push	edx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?SetAnarchyNumTurns@CvPlayer@@QAEXH@Z	; CvPlayer::SetAnarchyNumTurns

; 699  : 		kPlayer.GetPlayerPolicies()->DoSwitchIdeologies(ePreferredIdeology);

	mov	eax, DWORD PTR _ePreferredIdeology$222586[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?DoSwitchIdeologies@CvPlayerPolicies@@QAEXW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::DoSwitchIdeologies
$LN2@ResponseCh@2:

; 700  : 	}
; 701  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?ResponseChangeIdeology@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@@Z ENDP ; CvDllNetMessageHandler::ResponseChangeIdeology
_TEXT	ENDS
PUBLIC	??$GetLocalizedText@PBD@@YA?AVCvString@@PBD0@Z	; GetLocalizedText<char const *>
PUBLIC	??_C@_0BO@NMNONPPF@TXT_KEY_MISC_TURN_TIMER_RESET?$AA@ ; `string'
EXTRN	?DoDistanceGift@CvPlayer@@QAEXW4PlayerTypes@@PAVCvUnit@@@Z:PROC ; CvPlayer::DoDistanceGift
EXTRN	?activePlayer@CvPreGame@@YA?AW4PlayerTypes@@XZ:PROC ; CvPreGame::activePlayer
EXTRN	?getName@CvPlayer@@QBEPBDXZ:PROC		; CvPlayer::getName
EXTRN	?resetTurnTimer@CvGame@@QAEX_N@Z:PROC		; CvGame::resetTurnTimer
;	COMDAT ??_C@_0BO@NMNONPPF@TXT_KEY_MISC_TURN_TIMER_RESET?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvplayerai.h
CONST	SEGMENT
??_C@_0BO@NMNONPPF@TXT_KEY_MISC_TURN_TIMER_RESET?$AA@ DB 'TXT_KEY_MISC_TU'
	DB	'RN_TIMER_RESET', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ResponseGiftUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ResponseGiftUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z$0
__ehfuncinfo$?ResponseGiftUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ResponseGiftUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdllnetmessagehandler.cpp
xdata$x	ENDS
;	COMDAT ?ResponseGiftUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z
_TEXT	SEGMENT
tv156 = -80						; size = 4
tv76 = -76						; size = 4
$T224093 = -72						; size = 4
$T224085 = -68						; size = 4
$T224081 = -64						; size = 4
$T224080 = -60						; size = 4
$T224076 = -56						; size = 4
$T224072 = -52						; size = 4
$T224068 = -48						; size = 4
$T224063 = -44						; size = 28
_pkUnit$222602 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eMinor$ = 16						; size = 4
_iUnitID$ = 20						; size = 4
?ResponseGiftUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z PROC ; CvDllNetMessageHandler::ResponseGiftUnit, COMDAT

; 704  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ResponseGiftUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 705  : #ifdef TURN_TIMER_RESET_BUTTON
; 706  : 	// here we intercept response, when UnitID equals -1 we agree to reset timer
; 707  : 	if (iUnitID == -1) {

	cmp	DWORD PTR _iUnitID$[ebp], -1
	jne	$LN2@ResponseGi

; 708  : 		GC.getGame().resetTurnTimer(true);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T224068[ebp], eax
	push	1
	mov	ecx, DWORD PTR $T224068[ebp]
	call	?resetTurnTimer@CvGame@@QAEX_N@Z	; CvGame::resetTurnTimer

; 709  : 		DLLUI->AddMessage(0, CvPreGame::activePlayer(), true, GC.getEVENT_MESSAGE_TIME(), GetLocalizedText("TXT_KEY_MISC_TURN_TIMER_RESET", GET_PLAYER(ePlayer).getName()).GetCString());

	mov	ecx, DWORD PTR $T224072[ebp]
	mov	DWORD PTR tv76[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv76[ebp], edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224076[ebp], eax
	mov	ecx, DWORD PTR $T224076[ebp]
	call	?getName@CvPlayer@@QBEPBDXZ		; CvPlayer::getName
	push	eax
	push	OFFSET ??_C@_0BO@NMNONPPF@TXT_KEY_MISC_TURN_TIMER_RESET?$AA@
	lea	ecx, DWORD PTR $T224063[ebp]
	push	ecx
	call	??$GetLocalizedText@PBD@@YA?AVCvString@@PBD0@Z ; GetLocalizedText<char const *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv156[ebp], eax
	mov	edx, DWORD PTR tv156[ebp]
	mov	DWORD PTR $T224080[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T224080[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T224081[ebp], eax
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+6176
	mov	DWORD PTR $T224085[ebp], eax
	push	0
	push	0
	push	-1
	push	-1
	push	-1
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR $T224081[ebp]
	push	ecx
	mov	edx, DWORD PTR $T224085[ebp]
	push	edx
	push	1
	call	?activePlayer@CvPreGame@@YA?AW4PlayerTypes@@XZ ; CvPreGame::activePlayer
	push	eax
	push	0
	mov	eax, DWORD PTR tv76[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv76[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T224063[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 710  : 	}
; 711  : 	else

	jmp	SHORT $LN3@ResponseGi
$LN2@ResponseGi:

; 712  : 	{
; 713  : #endif
; 714  : 	CvUnit* pkUnit = GET_PLAYER(ePlayer).getUnit(iUnitID);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224093[ebp], ecx
	mov	edx, DWORD PTR _iUnitID$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T224093[ebp]
	call	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z	; CvPlayer::getUnit
	mov	DWORD PTR _pkUnit$222602[ebp], eax

; 715  : 	GET_PLAYER(eMinor).DoDistanceGift(ePlayer, pkUnit);

	mov	eax, DWORD PTR _pkUnit$222602[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _eMinor$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?DoDistanceGift@CvPlayer@@QAEXW4PlayerTypes@@PAVCvUnit@@@Z ; CvPlayer::DoDistanceGift
$LN3@ResponseGi:

; 716  : #ifdef TURN_TIMER_RESET_BUTTON
; 717  : 	}
; 718  : #endif
; 719  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ResponseGiftUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z$0:
	lea	ecx, DWORD PTR $T224063[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?ResponseGiftUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ResponseGiftUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ResponseGiftUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z ENDP ; CvDllNetMessageHandler::ResponseGiftUnit
EXTRN	?launch@CvPlayer@@QAEXW4VictoryTypes@@@Z:PROC	; CvPlayer::launch
EXTRN	?canLaunch@CvTeam@@QBE_NW4VictoryTypes@@@Z:PROC	; CvTeam::canLaunch
; Function compile flags: /Odtp
;	COMDAT ?ResponseLaunchSpaceship@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4VictoryTypes@@@Z
_TEXT	SEGMENT
$T224116 = -12						; size = 4
_kTeam$ = -8						; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eVictory$ = 16						; size = 4
?ResponseLaunchSpaceship@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4VictoryTypes@@@Z PROC ; CvDllNetMessageHandler::ResponseLaunchSpaceship, COMDAT

; 722  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 723  : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 724  : 	CvTeam& kTeam = GET_TEAM(kPlayer.getTeam());

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T224116[ebp], eax
	mov	eax, DWORD PTR $T224116[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _kTeam$[ebp], eax

; 725  : 
; 726  : 	if(kTeam.canLaunch(eVictory))

	mov	ecx, DWORD PTR _eVictory$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kTeam$[ebp]
	call	?canLaunch@CvTeam@@QBE_NW4VictoryTypes@@@Z ; CvTeam::canLaunch
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@ResponseLa

; 727  : 	{
; 728  : 		kPlayer.launch(eVictory);

	mov	eax, DWORD PTR _eVictory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?launch@CvPlayer@@QAEXW4VictoryTypes@@@Z ; CvPlayer::launch
$LN2@ResponseLa:

; 729  : 	}
; 730  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ResponseLaunchSpaceship@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4VictoryTypes@@@Z ENDP ; CvDllNetMessageHandler::ResponseLaunchSpaceship
_TEXT	ENDS
EXTRN	?DoLiberatePlayer@CvPlayer@@QAEXW4PlayerTypes@@H@Z:PROC ; CvPlayer::DoLiberatePlayer
; Function compile flags: /Odtp
;	COMDAT ?ResponseLiberatePlayer@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eLiberatedPlayer$ = 16					; size = 4
_iCityID$ = 20						; size = 4
?ResponseLiberatePlayer@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z PROC ; CvDllNetMessageHandler::ResponseLiberatePlayer, COMDAT

; 733  : {

	push	ebp
	mov	ebp, esp

; 734  : 	GET_PLAYER(ePlayer).DoLiberatePlayer(eLiberatedPlayer, iCityID);

	mov	eax, DWORD PTR _iCityID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eLiberatedPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?DoLiberatePlayer@CvPlayer@@QAEXW4PlayerTypes@@H@Z ; CvPlayer::DoLiberatePlayer

; 735  : }

	pop	ebp
	ret	16					; 00000010H
?ResponseLiberatePlayer@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z ENDP ; CvDllNetMessageHandler::ResponseLiberatePlayer
_TEXT	ENDS
EXTRN	?DoMajorBullyGold@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z:PROC ; CvMinorCivAI::DoMajorBullyGold
EXTRN	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ:PROC ; CvPlayer::GetMinorCivAI
; Function compile flags: /Odtp
;	COMDAT ?ResponseMinorCivBullyGold@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z
_TEXT	SEGMENT
$T224130 = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eMinor$ = 16						; size = 4
_iGold$ = 20						; size = 4
?ResponseMinorCivBullyGold@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z PROC ; CvDllNetMessageHandler::ResponseMinorCivBullyGold, COMDAT

; 738  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 739  : 	GET_PLAYER(eMinor).GetMinorCivAI()->DoMajorBullyGold(ePlayer, iGold);

	mov	eax, DWORD PTR _eMinor$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224130[ebp], eax
	mov	ecx, DWORD PTR _iGold$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T224130[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?DoMajorBullyGold@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::DoMajorBullyGold

; 740  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?ResponseMinorCivBullyGold@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z ENDP ; CvDllNetMessageHandler::ResponseMinorCivBullyGold
_TEXT	ENDS
EXTRN	?DoMajorBullyUnit@CvMinorCivAI@@QAEXW4PlayerTypes@@W4UnitTypes@@@Z:PROC ; CvMinorCivAI::DoMajorBullyUnit
; Function compile flags: /Odtp
;	COMDAT ?ResponseMinorCivBullyUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0W4UnitTypes@@@Z
_TEXT	SEGMENT
$T224136 = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eMinor$ = 16						; size = 4
_eUnitType$ = 20					; size = 4
?ResponseMinorCivBullyUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0W4UnitTypes@@@Z PROC ; CvDllNetMessageHandler::ResponseMinorCivBullyUnit, COMDAT

; 743  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 744  : 	GET_PLAYER(eMinor).GetMinorCivAI()->DoMajorBullyUnit(ePlayer, eUnitType);

	mov	eax, DWORD PTR _eMinor$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224136[ebp], eax
	mov	ecx, DWORD PTR _eUnitType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T224136[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?DoMajorBullyUnit@CvMinorCivAI@@QAEXW4PlayerTypes@@W4UnitTypes@@@Z ; CvMinorCivAI::DoMajorBullyUnit

; 745  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?ResponseMinorCivBullyUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0W4UnitTypes@@@Z ENDP ; CvDllNetMessageHandler::ResponseMinorCivBullyUnit
_TEXT	ENDS
EXTRN	?DoGoldGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z:PROC ; CvMinorCivAI::DoGoldGiftFromMajor
EXTRN	?DoFaithGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z:PROC ; CvMinorCivAI::DoFaithGiftFromMajor
EXTRN	?GetFaith@CvPlayer@@QBEHXZ:PROC			; CvPlayer::GetFaith
; Function compile flags: /Odtp
;	COMDAT ?ResponseMinorCivGiftGold@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z
_TEXT	SEGMENT
$T224154 = -20						; size = 4
$T224150 = -16						; size = 4
$T224146 = -12						; size = 4
$T224142 = -8						; size = 4
_iFaith$222636 = -4					; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eMinor$ = 16						; size = 4
_iGold$ = 20						; size = 4
?ResponseMinorCivGiftGold@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z PROC ; CvDllNetMessageHandler::ResponseMinorCivGiftGold, COMDAT

; 748  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 749  : #ifdef NQ_BELIEF_TOGGLE_ALLOW_FAITH_GIFTS_TO_MINORS
; 750  : 	if (iGold > 100000) // HACK!!! ... when sending a faith gift, we still use this function but we add in 100K to clue us in

	cmp	DWORD PTR _iGold$[ebp], 100000		; 000186a0H
	jle	SHORT $LN4@ResponseMi

; 751  : 	{
; 752  : 		int iFaith = iGold - 100000;

	mov	eax, DWORD PTR _iGold$[ebp]
	sub	eax, 100000				; 000186a0H
	mov	DWORD PTR _iFaith$222636[ebp], eax

; 753  : 		// Enough Faith?
; 754  : 		if(GET_PLAYER(ePlayer).GetFaith() >= iFaith)

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224142[ebp], ecx
	mov	ecx, DWORD PTR $T224142[ebp]
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith
	cmp	eax, DWORD PTR _iFaith$222636[ebp]
	jl	SHORT $LN3@ResponseMi

; 755  : 		{
; 756  : 			GET_PLAYER(eMinor).GetMinorCivAI()->DoFaithGiftFromMajor(ePlayer, iFaith);

	mov	edx, DWORD PTR _eMinor$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224146[ebp], edx
	mov	eax, DWORD PTR _iFaith$222636[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T224146[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?DoFaithGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::DoFaithGiftFromMajor
$LN3@ResponseMi:

; 757  : 		}
; 758  : 	}
; 759  : 	else

	jmp	SHORT $LN5@ResponseMi
$LN4@ResponseMi:

; 760  : 	{
; 761  : 		// Enough Gold?
; 762  : 		if(GET_PLAYER(ePlayer).GetTreasury()->GetGold() >= iGold)

	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224150[ebp], edx
	mov	ecx, DWORD PTR $T224150[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGold@CvTreasury@@QBEHXZ		; CvTreasury::GetGold
	cmp	eax, DWORD PTR _iGold$[ebp]
	jl	SHORT $LN5@ResponseMi

; 763  : 		{
; 764  : 			GET_PLAYER(eMinor).GetMinorCivAI()->DoGoldGiftFromMajor(ePlayer, iGold);

	mov	eax, DWORD PTR _eMinor$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224154[ebp], eax
	mov	ecx, DWORD PTR _iGold$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T224154[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?DoGoldGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H@Z ; CvMinorCivAI::DoGoldGiftFromMajor
$LN5@ResponseMi:

; 765  : 		}
; 766  : 	}
; 767  : #else
; 768  : 	// Enough Gold?
; 769  : 	if(GET_PLAYER(ePlayer).GetTreasury()->GetGold() >= iGold)
; 770  : 	{
; 771  : 		GET_PLAYER(eMinor).GetMinorCivAI()->DoGoldGiftFromMajor(ePlayer, iGold);
; 772  : 	}
; 773  : #endif
; 774  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?ResponseMinorCivGiftGold@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H@Z ENDP ; CvDllNetMessageHandler::ResponseMinorCivGiftGold
_TEXT	ENDS
EXTRN	?DoTileImprovementGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z:PROC ; CvMinorCivAI::DoTileImprovementGiftFromMajor
; Function compile flags: /Odtp
;	COMDAT ?ResponseMinorCivGiftTileImprovement@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0HH@Z
_TEXT	SEGMENT
$T224160 = -4						; size = 4
_this$ = 8						; size = 4
_eMajor$ = 12						; size = 4
_eMinor$ = 16						; size = 4
_iPlotX$ = 20						; size = 4
_iPlotY$ = 24						; size = 4
?ResponseMinorCivGiftTileImprovement@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0HH@Z PROC ; CvDllNetMessageHandler::ResponseMinorCivGiftTileImprovement, COMDAT

; 777  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 778  : 	GET_PLAYER(eMinor).GetMinorCivAI()->DoTileImprovementGiftFromMajor(eMajor, iPlotX, iPlotY);

	mov	eax, DWORD PTR _eMinor$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224160[ebp], eax
	mov	ecx, DWORD PTR _iPlotY$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iPlotX$[ebp]
	push	edx
	mov	eax, DWORD PTR _eMajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T224160[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?DoTileImprovementGiftFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@HH@Z ; CvMinorCivAI::DoTileImprovementGiftFromMajor

; 779  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?ResponseMinorCivGiftTileImprovement@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0HH@Z ENDP ; CvDllNetMessageHandler::ResponseMinorCivGiftTileImprovement
_TEXT	ENDS
EXTRN	?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::DoBuyout
; Function compile flags: /Odtp
;	COMDAT ?ResponseMinorCivBuyout@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0@Z
_TEXT	SEGMENT
$T224166 = -4						; size = 4
_this$ = 8						; size = 4
_eMajor$ = 12						; size = 4
_eMinor$ = 16						; size = 4
?ResponseMinorCivBuyout@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0@Z PROC ; CvDllNetMessageHandler::ResponseMinorCivBuyout, COMDAT

; 782  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 783  : 	GET_PLAYER(eMinor).GetMinorCivAI()->DoBuyout(eMajor);

	mov	eax, DWORD PTR _eMinor$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224166[ebp], eax
	mov	ecx, DWORD PTR _eMajor$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T224166[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?DoBuyout@CvMinorCivAI@@QAEXW4PlayerTypes@@@Z ; CvMinorCivAI::DoBuyout

; 784  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ResponseMinorCivBuyout@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0@Z ENDP ; CvDllNetMessageHandler::ResponseMinorCivBuyout
_TEXT	ENDS
EXTRN	?SetUnitSpawningDisabled@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z:PROC ; CvMinorCivAI::SetUnitSpawningDisabled
; Function compile flags: /Odtp
;	COMDAT ?ResponseMinorNoUnitSpawning@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0_N@Z
_TEXT	SEGMENT
$T224172 = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eMinor$ = 16						; size = 4
_bValue$ = 20						; size = 1
?ResponseMinorNoUnitSpawning@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0_N@Z PROC ; CvDllNetMessageHandler::ResponseMinorNoUnitSpawning, COMDAT

; 787  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 788  : 	GET_PLAYER(eMinor).GetMinorCivAI()->SetUnitSpawningDisabled(ePlayer, bValue);

	mov	eax, DWORD PTR _eMinor$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224172[ebp], eax
	movzx	ecx, BYTE PTR _bValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T224172[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?SetUnitSpawningDisabled@CvMinorCivAI@@QAEXW4PlayerTypes@@_N@Z ; CvMinorCivAI::SetUnitSpawningDisabled

; 789  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?ResponseMinorNoUnitSpawning@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0_N@Z ENDP ; CvDllNetMessageHandler::ResponseMinorNoUnitSpawning
_TEXT	ENDS
PUBLIC	??_C@_0BN@GHECCKEK@TXT_KEY_DEAL_REJECTED_BY_YOU?$AA@ ; `string'
PUBLIC	??_C@_0BO@KKNIIEJE@TXT_KEY_DEAL_REJECTED_BY_THEM?$AA@ ; `string'
PUBLIC	??_C@_0BG@KJMNLEOA@TXT_KEY_DEAL_REJECTED?$AA@	; `string'
PUBLIC	??_C@_0BP@OMCALFCE@TXT_KEY_DEAL_WITHDRAWN_BY_THEM?$AA@ ; `string'
PUBLIC	??_C@_0BO@PGMNODOF@TXT_KEY_DEAL_WITHDRAWN_BY_YOU?$AA@ ; `string'
PUBLIC	??_C@_0BH@MFOFHIKI@TXT_KEY_DEAL_WITHDRAWN?$AA@	; `string'
PUBLIC	??_C@_0BN@FPIHLEJI@TXT_KEY_DEAL_ACCEPTED_BY_YOU?$AA@ ; `string'
PUBLIC	??_C@_0BO@MCDNPCPC@TXT_KEY_DEAL_ACCEPTED_BY_THEM?$AA@ ; `string'
PUBLIC	??_C@_0BG@EIDHGLFC@TXT_KEY_DEAL_ACCEPTED?$AA@	; `string'
PUBLIC	??_C@_0BP@KFACAMEM@TXT_KEY_DEAL_EXPIRED_FROM_THEM?$AA@ ; `string'
PUBLIC	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
PUBLIC	??_C@_0BO@LNDDMGAD@TXT_KEY_DEAL_EXPIRED_FROM_YOU?$AA@ ; `string'
PUBLIC	??_C@_0BF@PLDLPHFJ@TXT_KEY_DEAL_EXPIRED?$AA@	; `string'
EXTRN	__imp_?toUTF8@String@Localization@@QAEPBDXZ:PROC
EXTRN	?getNickName@CvPlayer@@QBEQBDXZ:PROC		; CvPlayer::getNickName
EXTRN	__imp_??4String@Localization@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_??0String@Localization@@QAE@XZ:PROC
EXTRN	?FinalizeDeal@CvGameDeals@@QAE_NW4PlayerTypes@@0_N@Z:PROC ; CvGameDeals::FinalizeDeal
EXTRN	?GetGameDeals@CvGame@@QAEPAVCvGameDeals@@XZ:PROC ; CvGame::GetGameDeals
;	COMDAT ??_C@_0BN@GHECCKEK@TXT_KEY_DEAL_REJECTED_BY_YOU?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvplayerai.h
CONST	SEGMENT
??_C@_0BN@GHECCKEK@TXT_KEY_DEAL_REJECTED_BY_YOU?$AA@ DB 'TXT_KEY_DEAL_REJ'
	DB	'ECTED_BY_YOU', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@KKNIIEJE@TXT_KEY_DEAL_REJECTED_BY_THEM?$AA@
CONST	SEGMENT
??_C@_0BO@KKNIIEJE@TXT_KEY_DEAL_REJECTED_BY_THEM?$AA@ DB 'TXT_KEY_DEAL_RE'
	DB	'JECTED_BY_THEM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KJMNLEOA@TXT_KEY_DEAL_REJECTED?$AA@
CONST	SEGMENT
??_C@_0BG@KJMNLEOA@TXT_KEY_DEAL_REJECTED?$AA@ DB 'TXT_KEY_DEAL_REJECTED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OMCALFCE@TXT_KEY_DEAL_WITHDRAWN_BY_THEM?$AA@
CONST	SEGMENT
??_C@_0BP@OMCALFCE@TXT_KEY_DEAL_WITHDRAWN_BY_THEM?$AA@ DB 'TXT_KEY_DEAL_W'
	DB	'ITHDRAWN_BY_THEM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PGMNODOF@TXT_KEY_DEAL_WITHDRAWN_BY_YOU?$AA@
CONST	SEGMENT
??_C@_0BO@PGMNODOF@TXT_KEY_DEAL_WITHDRAWN_BY_YOU?$AA@ DB 'TXT_KEY_DEAL_WI'
	DB	'THDRAWN_BY_YOU', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MFOFHIKI@TXT_KEY_DEAL_WITHDRAWN?$AA@
CONST	SEGMENT
??_C@_0BH@MFOFHIKI@TXT_KEY_DEAL_WITHDRAWN?$AA@ DB 'TXT_KEY_DEAL_WITHDRAWN'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FPIHLEJI@TXT_KEY_DEAL_ACCEPTED_BY_YOU?$AA@
CONST	SEGMENT
??_C@_0BN@FPIHLEJI@TXT_KEY_DEAL_ACCEPTED_BY_YOU?$AA@ DB 'TXT_KEY_DEAL_ACC'
	DB	'EPTED_BY_YOU', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@MCDNPCPC@TXT_KEY_DEAL_ACCEPTED_BY_THEM?$AA@
CONST	SEGMENT
??_C@_0BO@MCDNPCPC@TXT_KEY_DEAL_ACCEPTED_BY_THEM?$AA@ DB 'TXT_KEY_DEAL_AC'
	DB	'CEPTED_BY_THEM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EIDHGLFC@TXT_KEY_DEAL_ACCEPTED?$AA@
CONST	SEGMENT
??_C@_0BG@EIDHGLFC@TXT_KEY_DEAL_ACCEPTED?$AA@ DB 'TXT_KEY_DEAL_ACCEPTED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KFACAMEM@TXT_KEY_DEAL_EXPIRED_FROM_THEM?$AA@
CONST	SEGMENT
??_C@_0BP@KFACAMEM@TXT_KEY_DEAL_EXPIRED_FROM_THEM?$AA@ DB 'TXT_KEY_DEAL_E'
	DB	'XPIRED_FROM_THEM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@LNDDMGAD@TXT_KEY_DEAL_EXPIRED_FROM_YOU?$AA@
CONST	SEGMENT
??_C@_0BO@LNDDMGAD@TXT_KEY_DEAL_EXPIRED_FROM_YOU?$AA@ DB 'TXT_KEY_DEAL_EX'
	DB	'PIRED_FROM_YOU', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PLDLPHFJ@TXT_KEY_DEAL_EXPIRED?$AA@
CONST	SEGMENT
??_C@_0BF@PLDLPHFJ@TXT_KEY_DEAL_EXPIRED?$AA@ DB 'TXT_KEY_DEAL_EXPIRED', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z DD 019930522H
	DD	010H
	DD	FLAT:__unwindtable$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$6
	DD	05H
	DD	FLAT:__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$10
	DD	09H
	DD	FLAT:__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$11
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$12
	DD	0cH
	DD	FLAT:__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$13
	DD	0dH
	DD	FLAT:__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$14
	DD	0dH
	DD	FLAT:__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$15
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdllnetmessagehandler.cpp
xdata$x	ENDS
;	COMDAT ?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z
_TEXT	SEGMENT
tv472 = -1420						; size = 4
tv332 = -1416						; size = 4
tv470 = -1412						; size = 4
tv347 = -1408						; size = 4
tv466 = -1404						; size = 4
tv269 = -1400						; size = 4
tv464 = -1396						; size = 4
tv273 = -1392						; size = 4
tv460 = -1388						; size = 4
tv194 = -1384						; size = 4
tv458 = -1380						; size = 4
tv198 = -1376						; size = 4
tv454 = -1372						; size = 4
tv78 = -1368						; size = 4
tv452 = -1364						; size = 4
tv80 = -1360						; size = 4
$T224190 = -1356					; size = 4
$T224189 = -1352					; size = 80
$T224188 = -1272					; size = 80
$T224187 = -1192					; size = 4
$T224186 = -1188					; size = 4
$T224185 = -1184					; size = 80
$T224184 = -1104					; size = 80
$T224183 = -1024					; size = 4
$T224182 = -1020					; size = 4
$T224181 = -1016					; size = 80
$T224180 = -936						; size = 80
$T224179 = -856						; size = 4
$T224178 = -852						; size = 4
$T224177 = -848						; size = 80
$T224176 = -768						; size = 4
$T224175 = -764						; size = 80
_strMessage$222718 = -684				; size = 80
_strSummary$222715 = -604				; size = 80
_strMessage$222706 = -524				; size = 80
_strSummary$222703 = -444				; size = 80
_strMessage$222693 = -364				; size = 80
_strSummary$222690 = -284				; size = 80
_kToPlayer$222687 = -200				; size = 4
_kFromPlayer$222688 = -196				; size = 4
_kActivePlayer$222674 = -192				; size = 4
_strMessage$222668 = -188				; size = 80
_strSummary$222669 = -108				; size = 80
_kToPlayer$222672 = -28					; size = 4
_kFromPlayer$222673 = -24				; size = 4
_game$ = -20						; size = 4
_eActivePlayer$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_eFromPlayer$ = 12					; size = 4
_eToPlayer$ = 16					; size = 4
_eActBy$ = 20						; size = 4
_bAccepted$ = 24					; size = 1
?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z PROC ; CvDllNetMessageHandler::ResponsePlayerDealFinalized, COMDAT

; 792  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1408				; 00000580H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 793  : 	CvGame& game = GC.getGame();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR _game$[ebp], eax

; 794  : #ifndef AUI_WARNING_FIXES
; 795  : 	PlayerTypes eActivePlayer = game.getActivePlayer();

	mov	ecx, DWORD PTR _game$[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	mov	DWORD PTR _eActivePlayer$[ebp], eax

; 796  : #endif
; 797  : 
; 798  : 	// is the deal valid?
; 799  : 	if(!game.GetGameDeals()->FinalizeDeal(eFromPlayer, eToPlayer, bAccepted))

	movzx	ecx, BYTE PTR _bAccepted$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eToPlayer$[ebp]
	push	edx
	mov	eax, DWORD PTR _eFromPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _game$[ebp]
	call	?GetGameDeals@CvGame@@QAEPAVCvGameDeals@@XZ ; CvGame::GetGameDeals
	mov	ecx, eax
	call	?FinalizeDeal@CvGameDeals@@QAE_NW4PlayerTypes@@0_N@Z ; CvGameDeals::FinalizeDeal
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN33@ResponsePl

; 800  : 	{
; 801  : 		Localization::String strMessage;

	lea	ecx, DWORD PTR _strMessage$222668[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 802  : 		Localization::String strSummary = Localization::Lookup("TXT_KEY_DEAL_EXPIRED");

	push	OFFSET ??_C@_0BF@PLDLPHFJ@TXT_KEY_DEAL_EXPIRED?$AA@
	lea	edx, DWORD PTR _strSummary$222669[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 803  : 
; 804  : 		CvPlayerAI& kToPlayer = GET_PLAYER(eToPlayer);

	mov	eax, DWORD PTR _eToPlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kToPlayer$222672[ebp], eax

; 805  : 		CvPlayerAI& kFromPlayer = GET_PLAYER(eFromPlayer);

	mov	ecx, DWORD PTR _eFromPlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kFromPlayer$222673[ebp], ecx

; 806  : #ifndef AUI_WARNING_FIXES
; 807  : 		CvPlayerAI& kActivePlayer = GET_PLAYER(eActivePlayer);

	mov	edx, DWORD PTR _eActivePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kActivePlayer$222674[ebp], edx

; 808  : #endif
; 809  : 
; 810  : 		strMessage = Localization::Lookup("TXT_KEY_DEAL_EXPIRED_FROM_YOU");

	push	OFFSET ??_C@_0BO@LNDDMGAD@TXT_KEY_DEAL_EXPIRED_FROM_YOU?$AA@
	lea	eax, DWORD PTR $T224175[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv80[ebp], eax
	mov	ecx, DWORD PTR tv80[ebp]
	mov	DWORD PTR tv452[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv452[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$222668[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T224175[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 811  : 		strMessage << kToPlayer.getNickName();

	mov	ecx, DWORD PTR _kToPlayer$222672[ebp]
	call	?getNickName@CvPlayer@@QBEQBDXZ		; CvPlayer::getNickName
	mov	DWORD PTR $T224176[ebp], eax
	lea	eax, DWORD PTR $T224176[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$222668[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 812  : 		kFromPlayer.GetNotifications()->Add(NOTIFICATION_PLAYER_DEAL_RESOLVED, strMessage.toUTF8(), strSummary.toUTF8(), eToPlayer, -1, -1);

	push	-1
	push	-1
	push	-1
	mov	edx, DWORD PTR _eToPlayer$[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$222669[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strMessage$222668[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	-991884431				; c4e10b71H
	mov	ecx, DWORD PTR _kFromPlayer$222673[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 813  : 
; 814  : 		strMessage = Localization::Lookup("TXT_KEY_DEAL_EXPIRED_FROM_THEM");

	push	OFFSET ??_C@_0BP@KFACAMEM@TXT_KEY_DEAL_EXPIRED_FROM_THEM?$AA@
	lea	eax, DWORD PTR $T224177[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv78[ebp], eax
	mov	ecx, DWORD PTR tv78[ebp]
	mov	DWORD PTR tv454[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR tv454[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$222668[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T224177[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 815  : 		strMessage << kFromPlayer.getNickName();

	mov	ecx, DWORD PTR _kFromPlayer$222673[ebp]
	call	?getNickName@CvPlayer@@QBEQBDXZ		; CvPlayer::getNickName
	mov	DWORD PTR $T224178[ebp], eax
	lea	eax, DWORD PTR $T224178[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$222668[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 816  : 		kToPlayer.GetNotifications()->Add(NOTIFICATION_PLAYER_DEAL_RESOLVED, strMessage.toUTF8(), strSummary.toUTF8(), eFromPlayer, -1, -1);

	push	-1
	push	-1
	push	-1
	mov	edx, DWORD PTR _eFromPlayer$[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$222669[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strMessage$222668[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	-991884431				; c4e10b71H
	mov	ecx, DWORD PTR _kToPlayer$222672[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 817  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$222669[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strMessage$222668[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 818  : 	else

	jmp	$LN7@ResponsePl

; 819  : 	{
; 820  : 		CvPlayerAI& kToPlayer = GET_PLAYER(eToPlayer);

$LN33@ResponsePl:
	mov	eax, DWORD PTR _eToPlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kToPlayer$222687[ebp], eax

; 821  : 		CvPlayerAI& kFromPlayer = GET_PLAYER(eFromPlayer);

	mov	ecx, DWORD PTR _eFromPlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kFromPlayer$222688[ebp], ecx

; 822  : 		if(bAccepted)

	movzx	edx, BYTE PTR _bAccepted$[ebp]
	test	edx, edx
	je	$LN4@ResponsePl

; 823  : 		{
; 824  : 			Localization::String strSummary = Localization::Lookup("TXT_KEY_DEAL_ACCEPTED");

	push	OFFSET ??_C@_0BG@EIDHGLFC@TXT_KEY_DEAL_ACCEPTED?$AA@
	lea	eax, DWORD PTR _strSummary$222690[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 4

; 825  : 			Localization::String strMessage = Localization::Lookup("TXT_KEY_DEAL_ACCEPTED_BY_THEM");

	push	OFFSET ??_C@_0BO@MCDNPCPC@TXT_KEY_DEAL_ACCEPTED_BY_THEM?$AA@
	lea	ecx, DWORD PTR _strMessage$222693[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 5

; 826  : 			strMessage << kToPlayer.getNickName();

	mov	ecx, DWORD PTR _kToPlayer$222687[ebp]
	call	?getNickName@CvPlayer@@QBEQBDXZ		; CvPlayer::getNickName
	mov	DWORD PTR $T224179[ebp], eax
	lea	edx, DWORD PTR $T224179[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$222693[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 827  : 			kFromPlayer.GetNotifications()->Add(NOTIFICATION_PLAYER_DEAL_RESOLVED, strMessage.toUTF8(), strSummary.toUTF8(), eToPlayer, -1, -1);

	push	-1
	push	-1
	push	-1
	mov	ecx, DWORD PTR _eToPlayer$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$222690[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strMessage$222693[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	-991884431				; c4e10b71H
	mov	ecx, DWORD PTR _kFromPlayer$222688[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 828  : 
; 829  : 			strSummary = Localization::Lookup("TXT_KEY_DEAL_ACCEPTED");

	push	OFFSET ??_C@_0BG@EIDHGLFC@TXT_KEY_DEAL_ACCEPTED?$AA@
	lea	edx, DWORD PTR $T224180[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv198[ebp], eax
	mov	eax, DWORD PTR tv198[ebp]
	mov	DWORD PTR tv458[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR tv458[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$222690[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T224180[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 830  : 			strMessage = Localization::Lookup("TXT_KEY_DEAL_ACCEPTED_BY_YOU");

	push	OFFSET ??_C@_0BN@FPIHLEJI@TXT_KEY_DEAL_ACCEPTED_BY_YOU?$AA@
	lea	edx, DWORD PTR $T224181[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv194[ebp], eax
	mov	eax, DWORD PTR tv194[ebp]
	mov	DWORD PTR tv460[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR tv460[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strMessage$222693[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T224181[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 831  : 			strMessage << kFromPlayer.getNickName();

	mov	ecx, DWORD PTR _kFromPlayer$222688[ebp]
	call	?getNickName@CvPlayer@@QBEQBDXZ		; CvPlayer::getNickName
	mov	DWORD PTR $T224182[ebp], eax
	lea	edx, DWORD PTR $T224182[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$222693[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 832  : 			kToPlayer.GetNotifications()->Add(NOTIFICATION_PLAYER_DEAL_RESOLVED, strMessage.toUTF8(), strSummary.toUTF8(), eFromPlayer, -1, -1);

	push	-1
	push	-1
	push	-1
	mov	ecx, DWORD PTR _eFromPlayer$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$222690[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strMessage$222693[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	-991884431				; c4e10b71H
	mov	ecx, DWORD PTR _kToPlayer$222687[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 833  : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _strMessage$222693[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strSummary$222690[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 834  : 		else

	jmp	$LN7@ResponsePl
$LN4@ResponsePl:

; 835  : 		{
; 836  : 			if(eActBy == eFromPlayer)

	mov	edx, DWORD PTR _eActBy$[ebp]
	cmp	edx, DWORD PTR _eFromPlayer$[ebp]
	jne	$LN2@ResponsePl

; 837  : 			{
; 838  : 				Localization::String strSummary = Localization::Lookup("TXT_KEY_DEAL_WITHDRAWN");

	push	OFFSET ??_C@_0BH@MFOFHIKI@TXT_KEY_DEAL_WITHDRAWN?$AA@
	lea	eax, DWORD PTR _strSummary$222703[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 8

; 839  : 				Localization::String strMessage = Localization::Lookup("TXT_KEY_DEAL_WITHDRAWN_BY_YOU");

	push	OFFSET ??_C@_0BO@PGMNODOF@TXT_KEY_DEAL_WITHDRAWN_BY_YOU?$AA@
	lea	ecx, DWORD PTR _strMessage$222706[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 9

; 840  : 				strMessage << kToPlayer.getNickName();

	mov	ecx, DWORD PTR _kToPlayer$222687[ebp]
	call	?getNickName@CvPlayer@@QBEQBDXZ		; CvPlayer::getNickName
	mov	DWORD PTR $T224183[ebp], eax
	lea	edx, DWORD PTR $T224183[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$222706[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 841  : 				kFromPlayer.GetNotifications()->Add(NOTIFICATION_PLAYER_DEAL_RESOLVED, strMessage.toUTF8(), strSummary.toUTF8(), eToPlayer, -1, -1);

	push	-1
	push	-1
	push	-1
	mov	ecx, DWORD PTR _eToPlayer$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$222703[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strMessage$222706[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	-991884431				; c4e10b71H
	mov	ecx, DWORD PTR _kFromPlayer$222688[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 842  : 
; 843  : 				strSummary = Localization::Lookup("TXT_KEY_DEAL_WITHDRAWN");

	push	OFFSET ??_C@_0BH@MFOFHIKI@TXT_KEY_DEAL_WITHDRAWN?$AA@
	lea	edx, DWORD PTR $T224184[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv273[ebp], eax
	mov	eax, DWORD PTR tv273[ebp]
	mov	DWORD PTR tv464[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	ecx, DWORD PTR tv464[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$222703[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T224184[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 844  : 				strMessage = Localization::Lookup("TXT_KEY_DEAL_WITHDRAWN_BY_THEM");

	push	OFFSET ??_C@_0BP@OMCALFCE@TXT_KEY_DEAL_WITHDRAWN_BY_THEM?$AA@
	lea	edx, DWORD PTR $T224185[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv269[ebp], eax
	mov	eax, DWORD PTR tv269[ebp]
	mov	DWORD PTR tv466[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	ecx, DWORD PTR tv466[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strMessage$222706[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T224185[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 845  : 				strMessage << kFromPlayer.getNickName();

	mov	ecx, DWORD PTR _kFromPlayer$222688[ebp]
	call	?getNickName@CvPlayer@@QBEQBDXZ		; CvPlayer::getNickName
	mov	DWORD PTR $T224186[ebp], eax
	lea	edx, DWORD PTR $T224186[ebp]
	push	edx
	lea	eax, DWORD PTR _strMessage$222706[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 846  : 				kToPlayer.GetNotifications()->Add(NOTIFICATION_PLAYER_DEAL_RESOLVED, strMessage.toUTF8(), strSummary.toUTF8(), eFromPlayer, -1, -1);

	push	-1
	push	-1
	push	-1
	mov	ecx, DWORD PTR _eFromPlayer$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strSummary$222703[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strMessage$222706[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	-991884431				; c4e10b71H
	mov	ecx, DWORD PTR _kToPlayer$222687[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 847  : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR _strMessage$222706[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strSummary$222703[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 848  : 			else

	jmp	$LN7@ResponsePl
$LN2@ResponsePl:

; 849  : 			{
; 850  : 				Localization::String strSummary = Localization::Lookup("TXT_KEY_DEAL_REJECTED");

	push	OFFSET ??_C@_0BG@KJMNLEOA@TXT_KEY_DEAL_REJECTED?$AA@
	lea	edx, DWORD PTR _strSummary$222715[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 12		; 0000000cH

; 851  : 				Localization::String strMessage = Localization::Lookup("TXT_KEY_DEAL_REJECTED_BY_THEM");

	push	OFFSET ??_C@_0BO@KKNIIEJE@TXT_KEY_DEAL_REJECTED_BY_THEM?$AA@
	lea	eax, DWORD PTR _strMessage$222718[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH

; 852  : 				strMessage << kToPlayer.getNickName();

	mov	ecx, DWORD PTR _kToPlayer$222687[ebp]
	call	?getNickName@CvPlayer@@QBEQBDXZ		; CvPlayer::getNickName
	mov	DWORD PTR $T224187[ebp], eax
	lea	ecx, DWORD PTR $T224187[ebp]
	push	ecx
	lea	edx, DWORD PTR _strMessage$222718[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 853  : 				kFromPlayer.GetNotifications()->Add(NOTIFICATION_PLAYER_DEAL_RESOLVED, strMessage.toUTF8(), strSummary.toUTF8(), eToPlayer, -1, -1);

	push	-1
	push	-1
	push	-1
	mov	eax, DWORD PTR _eToPlayer$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$222715[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strMessage$222718[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	-991884431				; c4e10b71H
	mov	ecx, DWORD PTR _kFromPlayer$222688[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 854  : 
; 855  : 				strSummary = Localization::Lookup("TXT_KEY_DEAL_REJECTED");

	push	OFFSET ??_C@_0BG@KJMNLEOA@TXT_KEY_DEAL_REJECTED?$AA@
	lea	ecx, DWORD PTR $T224188[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv347[ebp], eax
	mov	edx, DWORD PTR tv347[ebp]
	mov	DWORD PTR tv470[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	eax, DWORD PTR tv470[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$222715[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	lea	ecx, DWORD PTR $T224188[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 856  : 				strMessage = Localization::Lookup("TXT_KEY_DEAL_REJECTED_BY_YOU");

	push	OFFSET ??_C@_0BN@GHECCKEK@TXT_KEY_DEAL_REJECTED_BY_YOU?$AA@
	lea	ecx, DWORD PTR $T224189[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv332[ebp], eax
	mov	edx, DWORD PTR tv332[ebp]
	mov	DWORD PTR tv472[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	eax, DWORD PTR tv472[ebp]
	push	eax
	lea	ecx, DWORD PTR _strMessage$222718[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	lea	ecx, DWORD PTR $T224189[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 857  : 				strMessage << kFromPlayer.getNickName();

	mov	ecx, DWORD PTR _kFromPlayer$222688[ebp]
	call	?getNickName@CvPlayer@@QBEQBDXZ		; CvPlayer::getNickName
	mov	DWORD PTR $T224190[ebp], eax
	lea	ecx, DWORD PTR $T224190[ebp]
	push	ecx
	lea	edx, DWORD PTR _strMessage$222718[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 858  : 				kToPlayer.GetNotifications()->Add(NOTIFICATION_PLAYER_DEAL_RESOLVED, strMessage.toUTF8(), strSummary.toUTF8(), eFromPlayer, -1, -1);

	push	-1
	push	-1
	push	-1
	mov	eax, DWORD PTR _eFromPlayer$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$222715[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strMessage$222718[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	-991884431				; c4e10b71H
	mov	ecx, DWORD PTR _kToPlayer$222687[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 859  : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	lea	ecx, DWORD PTR _strMessage$222718[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strSummary$222715[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN7@ResponsePl:

; 860  : 		}
; 861  : 	}
; 862  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$0:
	lea	ecx, DWORD PTR _strMessage$222668[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$1:
	lea	ecx, DWORD PTR _strSummary$222669[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$2:
	lea	ecx, DWORD PTR $T224175[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$3:
	lea	ecx, DWORD PTR $T224177[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$4:
	lea	ecx, DWORD PTR _strSummary$222690[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$5:
	lea	ecx, DWORD PTR _strMessage$222693[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$6:
	lea	ecx, DWORD PTR $T224180[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$7:
	lea	ecx, DWORD PTR $T224181[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$8:
	lea	ecx, DWORD PTR _strSummary$222703[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$9:
	lea	ecx, DWORD PTR _strMessage$222706[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$10:
	lea	ecx, DWORD PTR $T224184[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$11:
	lea	ecx, DWORD PTR $T224185[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$12:
	lea	ecx, DWORD PTR _strSummary$222715[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$13:
	lea	ecx, DWORD PTR _strMessage$222718[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$14:
	lea	ecx, DWORD PTR $T224188[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z$15:
	lea	ecx, DWORD PTR $T224189[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1412]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ResponsePlayerDealFinalized@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@00_N@Z ENDP ; CvDllNetMessageHandler::ResponsePlayerDealFinalized
EXTRN	?setOption@CvPlayer@@QAEXW4PlayerOptionTypes@@_N@Z:PROC ; CvPlayer::setOption
; Function compile flags: /Odtp
;	COMDAT ?ResponsePlayerOption@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4PlayerOptionTypes@@_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eOption$ = 16						; size = 4
_bValue$ = 20						; size = 1
?ResponsePlayerOption@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4PlayerOptionTypes@@_N@Z PROC ; CvDllNetMessageHandler::ResponsePlayerOption, COMDAT

; 865  : {

	push	ebp
	mov	ebp, esp

; 866  : 	GET_PLAYER(ePlayer).setOption(eOption, bValue);

	movzx	eax, BYTE PTR _bValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eOption$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?setOption@CvPlayer@@QAEXW4PlayerOptionTypes@@_N@Z ; CvPlayer::setOption

; 867  : }

	pop	ebp
	ret	16					; 00000010H
?ResponsePlayerOption@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4PlayerOptionTypes@@_N@Z ENDP ; CvDllNetMessageHandler::ResponsePlayerOption
_TEXT	ENDS
EXTRN	?DoChangeProtectionFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@_N1@Z:PROC ; CvMinorCivAI::DoChangeProtectionFromMajor
; Function compile flags: /Odtp
;	COMDAT ?ResponsePledgeMinorProtection@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0_N1@Z
_TEXT	SEGMENT
$T224241 = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eMinor$ = 16						; size = 4
_bValue$ = 20						; size = 1
_bPledgeNowBroken$ = 24					; size = 1
?ResponsePledgeMinorProtection@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0_N1@Z PROC ; CvDllNetMessageHandler::ResponsePledgeMinorProtection, COMDAT

; 870  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 871  : 	GET_PLAYER(eMinor).GetMinorCivAI()->DoChangeProtectionFromMajor(ePlayer, bValue, bPledgeNowBroken);

	mov	eax, DWORD PTR _eMinor$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224241[ebp], eax
	movzx	ecx, BYTE PTR _bPledgeNowBroken$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bValue$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T224241[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?DoChangeProtectionFromMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@_N1@Z ; CvMinorCivAI::DoChangeProtectionFromMajor

; 872  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?ResponsePledgeMinorProtection@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0_N1@Z ENDP ; CvDllNetMessageHandler::ResponsePledgeMinorProtection
_TEXT	ENDS
EXTRN	?PushMission@CvUnit@@QAEXW4MissionTypes@@HHH_N1W4MissionAITypes@@PAVCvPlot@@PAV1@@Z:PROC ; CvUnit::PushMission
EXTRN	?dispatchingNetMessage@CvUnit@@SAX_N@Z:PROC	; CvUnit::dispatchingNetMessage
; Function compile flags: /Odtp
;	COMDAT ?ResponsePushMission@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4MissionTypes@@HHH_N@Z
_TEXT	SEGMENT
_pkUnit$ = -8						; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iUnitID$ = 16						; size = 4
_eMission$ = 20						; size = 4
_iData1$ = 24						; size = 4
_iData2$ = 28						; size = 4
_iFlags$ = 32						; size = 4
_bShift$ = 36						; size = 1
?ResponsePushMission@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4MissionTypes@@HHH_N@Z PROC ; CvDllNetMessageHandler::ResponsePushMission, COMDAT

; 875  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 876  : 	CvUnit::dispatchingNetMessage(true);

	push	1
	call	?dispatchingNetMessage@CvUnit@@SAX_N@Z	; CvUnit::dispatchingNetMessage
	add	esp, 4

; 877  : 
; 878  : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 879  : 	CvUnit* pkUnit = kPlayer.getUnit(iUnitID);

	mov	ecx, DWORD PTR _iUnitID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z	; CvPlayer::getUnit
	mov	DWORD PTR _pkUnit$[ebp], eax

; 880  : 
; 881  : 	if(pkUnit != NULL)

	cmp	DWORD PTR _pkUnit$[ebp], 0
	je	SHORT $LN1@ResponsePu

; 882  : 	{
; 883  : 		pkUnit->PushMission(eMission, iData1, iData2, iFlags, bShift, true);

	push	0
	push	0
	push	-1
	push	1
	movzx	edx, BYTE PTR _bShift$[ebp]
	push	edx
	mov	eax, DWORD PTR _iFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iData2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iData1$[ebp]
	push	edx
	mov	eax, DWORD PTR _eMission$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkUnit$[ebp]
	call	?PushMission@CvUnit@@QAEXW4MissionTypes@@HHH_N1W4MissionAITypes@@PAVCvPlot@@PAV1@@Z ; CvUnit::PushMission
$LN1@ResponsePu:

; 884  : 	}
; 885  : 
; 886  : 	CvUnit::dispatchingNetMessage(false);

	push	0
	call	?dispatchingNetMessage@CvUnit@@SAX_N@Z	; CvUnit::dispatchingNetMessage
	add	esp, 4

; 887  : }

	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?ResponsePushMission@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4MissionTypes@@HHH_N@Z ENDP ; CvDllNetMessageHandler::ResponsePushMission
_TEXT	ENDS
EXTRN	?ChangeNumFreeGreatPeople@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeNumFreeGreatPeople
EXTRN	?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z:PROC ; CvCityCitizens::DoSpawnGreatPerson
EXTRN	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ:PROC ; CvCity::GetCityCitizens
EXTRN	?GetGreatPersonSpawnCity@CvPlayer@@QAEPAVCvCity@@W4UnitTypes@@@Z:PROC ; CvPlayer::GetGreatPersonSpawnCity
; Function compile flags: /Odtp
;	COMDAT ?ResponseGreatPersonChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4UnitTypes@@@Z
_TEXT	SEGMENT
_pCity$ = -8						; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eGreatPersonUnit$ = 16					; size = 4
?ResponseGreatPersonChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4UnitTypes@@@Z PROC ; CvDllNetMessageHandler::ResponseGreatPersonChoice, COMDAT

; 890  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 891  : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 892  : 	CvCity* pCity = kPlayer.GetGreatPersonSpawnCity(eGreatPersonUnit);

	mov	ecx, DWORD PTR _eGreatPersonUnit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetGreatPersonSpawnCity@CvPlayer@@QAEPAVCvCity@@W4UnitTypes@@@Z ; CvPlayer::GetGreatPersonSpawnCity
	mov	DWORD PTR _pCity$[ebp], eax

; 893  : 	if(pCity)

	cmp	DWORD PTR _pCity$[ebp], 0
	je	SHORT $LN1@ResponseGr

; 894  : 	{
; 895  : 		// GJS NQMP - changed 2nd parameter to false so that "free" Great People from liberty finisher & buildings are actually free
; 896  : 		pCity->GetCityCitizens()->DoSpawnGreatPerson(eGreatPersonUnit, false, false);

	push	0
	push	0
	mov	edx, DWORD PTR _eGreatPersonUnit$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z ; CvCityCitizens::DoSpawnGreatPerson
$LN1@ResponseGr:

; 897  : 	}
; 898  : 	kPlayer.ChangeNumFreeGreatPeople(-1);

	push	-1
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?ChangeNumFreeGreatPeople@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeNumFreeGreatPeople

; 899  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ResponseGreatPersonChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4UnitTypes@@@Z ENDP ; CvDllNetMessageHandler::ResponseGreatPersonChoice
_TEXT	ENDS
EXTRN	?SetUnitBaktun@CvPlayerTraits@@QAEXW4UnitTypes@@@Z:PROC ; CvPlayerTraits::SetUnitBaktun
EXTRN	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ:PROC ; CvPlayer::GetPlayerTraits
EXTRN	?ChangeNumMayaBoosts@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::ChangeNumMayaBoosts
; Function compile flags: /Odtp
;	COMDAT ?ResponseMayaBonusChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4UnitTypes@@@Z
_TEXT	SEGMENT
_pCity$ = -8						; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eGreatPersonUnit$ = 16					; size = 4
?ResponseMayaBonusChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4UnitTypes@@@Z PROC ; CvDllNetMessageHandler::ResponseMayaBonusChoice, COMDAT

; 902  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 903  : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 904  : 	CvCity* pCity = kPlayer.GetGreatPersonSpawnCity(eGreatPersonUnit);

	mov	ecx, DWORD PTR _eGreatPersonUnit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetGreatPersonSpawnCity@CvPlayer@@QAEPAVCvCity@@W4UnitTypes@@@Z ; CvPlayer::GetGreatPersonSpawnCity
	mov	DWORD PTR _pCity$[ebp], eax

; 905  : 	if(pCity)

	cmp	DWORD PTR _pCity$[ebp], 0
	je	SHORT $LN1@ResponseMa

; 906  : 	{
; 907  : 		pCity->GetCityCitizens()->DoSpawnGreatPerson(eGreatPersonUnit, true, false);

	push	0
	push	1
	mov	edx, DWORD PTR _eGreatPersonUnit$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z ; CvCityCitizens::DoSpawnGreatPerson
$LN1@ResponseMa:

; 908  : 	}
; 909  : 	kPlayer.ChangeNumMayaBoosts(-1);

	push	-1
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?ChangeNumMayaBoosts@CvPlayer@@QAEXH@Z	; CvPlayer::ChangeNumMayaBoosts

; 910  : 	kPlayer.GetPlayerTraits()->SetUnitBaktun(eGreatPersonUnit);

	mov	eax, DWORD PTR _eGreatPersonUnit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	ecx, eax
	call	?SetUnitBaktun@CvPlayerTraits@@QAEXW4UnitTypes@@@Z ; CvPlayerTraits::SetUnitBaktun

; 911  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ResponseMayaBonusChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4UnitTypes@@@Z ENDP ; CvDllNetMessageHandler::ResponseMayaBonusChoice
_TEXT	ENDS
EXTRN	?ChangeNumFaithGreatPeople@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeNumFaithGreatPeople
; Function compile flags: /Odtp
;	COMDAT ?ResponseFaithGreatPersonChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4UnitTypes@@@Z
_TEXT	SEGMENT
_pCity$ = -8						; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eGreatPersonUnit$ = 16					; size = 4
?ResponseFaithGreatPersonChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4UnitTypes@@@Z PROC ; CvDllNetMessageHandler::ResponseFaithGreatPersonChoice, COMDAT

; 914  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 915  : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 916  : 	CvCity* pCity = kPlayer.GetGreatPersonSpawnCity(eGreatPersonUnit);

	mov	ecx, DWORD PTR _eGreatPersonUnit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetGreatPersonSpawnCity@CvPlayer@@QAEPAVCvCity@@W4UnitTypes@@@Z ; CvPlayer::GetGreatPersonSpawnCity
	mov	DWORD PTR _pCity$[ebp], eax

; 917  : 	if(pCity)

	cmp	DWORD PTR _pCity$[ebp], 0
	je	SHORT $LN1@ResponseFa

; 918  : 	{
; 919  : 		pCity->GetCityCitizens()->DoSpawnGreatPerson(eGreatPersonUnit, true, true);

	push	1
	push	1
	mov	edx, DWORD PTR _eGreatPersonUnit$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z ; CvCityCitizens::DoSpawnGreatPerson
$LN1@ResponseFa:

; 920  : 	}
; 921  : 	kPlayer.ChangeNumFaithGreatPeople(-1);

	push	-1
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?ChangeNumFaithGreatPeople@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeNumFaithGreatPeople

; 922  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ResponseFaithGreatPersonChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4UnitTypes@@@Z ENDP ; CvDllNetMessageHandler::ResponseFaithGreatPersonChoice
_TEXT	ENDS
EXTRN	?receiveGoody@CvPlayer@@QAEXPAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@Z:PROC ; CvPlayer::receiveGoody
; Function compile flags: /Odtp
;	COMDAT ?ResponseGoodyChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HHW4GoodyTypes@@H@Z
_TEXT	SEGMENT
tv150 = -60						; size = 4
tv165 = -56						; size = 4
$T224327 = -52						; size = 4
$T224314 = -48						; size = 4
$T224310 = -44						; size = 4
$T224296 = -40						; size = 4
$T224292 = -33						; size = 1
$T224281 = -32						; size = 4
$T224277 = -25						; size = 1
_iMapY$224371 = -24					; size = 4
_iMapX$224370 = -20					; size = 4
$T224270 = -16						; size = 4
_pUnit$ = -12						; size = 4
_pPlot$ = -8						; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iPlotX$ = 16						; size = 4
_iPlotY$ = 20						; size = 4
_eGoody$ = 24						; size = 4
_iUnitID$ = 28						; size = 4
?ResponseGoodyChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HHW4GoodyTypes@@H@Z PROC ; CvDllNetMessageHandler::ResponseGoodyChoice, COMDAT

; 925  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH

; 926  : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 927  : 	CvPlot* pPlot = GC.getMap().plot(iPlotX, iPlotY);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T224270[ebp], ecx
	cmp	DWORD PTR _iPlotX$[ebp], -2147483647	; 80000001H
	je	SHORT $LN7@ResponseGo
	cmp	DWORD PTR _iPlotY$[ebp], -2147483647	; 80000001H
	jne	SHORT $LN8@ResponseGo
$LN7@ResponseGo:
	mov	DWORD PTR _pPlot$[ebp], 0
	jmp	$LN9@ResponseGo
$LN8@ResponseGo:
	mov	edx, DWORD PTR $T224270[ebp]
	mov	al, BYTE PTR [edx+4056]
	mov	BYTE PTR $T224277[ebp], al
	mov	ecx, DWORD PTR $T224270[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T224281[ebp], edx
	movzx	eax, BYTE PTR $T224277[ebp]
	test	eax, eax
	je	SHORT $LN20@ResponseGo
	cmp	DWORD PTR _iPlotX$[ebp], 0
	jge	SHORT $LN19@ResponseGo
	mov	eax, DWORD PTR _iPlotX$[ebp]
	cdq
	idiv	DWORD PTR $T224281[ebp]
	add	edx, DWORD PTR $T224281[ebp]
	mov	DWORD PTR _iMapX$224370[ebp], edx
	jmp	SHORT $LN21@ResponseGo
	jmp	SHORT $LN20@ResponseGo
$LN19@ResponseGo:
	mov	ecx, DWORD PTR _iPlotX$[ebp]
	cmp	ecx, DWORD PTR $T224281[ebp]
	jl	SHORT $LN20@ResponseGo
	mov	eax, DWORD PTR _iPlotX$[ebp]
	cdq
	idiv	DWORD PTR $T224281[ebp]
	mov	DWORD PTR _iMapX$224370[ebp], edx
	jmp	SHORT $LN21@ResponseGo
$LN20@ResponseGo:
	mov	edx, DWORD PTR _iPlotX$[ebp]
	mov	DWORD PTR _iMapX$224370[ebp], edx
$LN21@ResponseGo:
	mov	eax, DWORD PTR $T224270[ebp]
	mov	cl, BYTE PTR [eax+4057]
	mov	BYTE PTR $T224292[ebp], cl
	mov	edx, DWORD PTR $T224270[ebp]
	mov	eax, DWORD PTR [edx+4024]
	mov	DWORD PTR $T224296[ebp], eax
	movzx	ecx, BYTE PTR $T224292[ebp]
	test	ecx, ecx
	je	SHORT $LN30@ResponseGo
	cmp	DWORD PTR _iPlotY$[ebp], 0
	jge	SHORT $LN29@ResponseGo
	mov	eax, DWORD PTR _iPlotY$[ebp]
	cdq
	idiv	DWORD PTR $T224296[ebp]
	add	edx, DWORD PTR $T224296[ebp]
	mov	DWORD PTR _iMapY$224371[ebp], edx
	jmp	SHORT $LN31@ResponseGo
	jmp	SHORT $LN30@ResponseGo
$LN29@ResponseGo:
	mov	edx, DWORD PTR _iPlotY$[ebp]
	cmp	edx, DWORD PTR $T224296[ebp]
	jl	SHORT $LN30@ResponseGo
	mov	eax, DWORD PTR _iPlotY$[ebp]
	cdq
	idiv	DWORD PTR $T224296[ebp]
	mov	DWORD PTR _iMapY$224371[ebp], edx
	jmp	SHORT $LN31@ResponseGo
$LN30@ResponseGo:
	mov	eax, DWORD PTR _iPlotY$[ebp]
	mov	DWORD PTR _iMapY$224371[ebp], eax
$LN31@ResponseGo:
	cmp	DWORD PTR _iMapX$224370[ebp], 0
	jl	SHORT $LN35@ResponseGo
	mov	ecx, DWORD PTR $T224270[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T224310[ebp], edx
	mov	eax, DWORD PTR _iMapX$224370[ebp]
	cmp	eax, DWORD PTR $T224310[ebp]
	jge	SHORT $LN35@ResponseGo
	cmp	DWORD PTR _iMapY$224371[ebp], 0
	jl	SHORT $LN35@ResponseGo
	mov	ecx, DWORD PTR $T224270[ebp]
	mov	edx, DWORD PTR [ecx+4024]
	mov	DWORD PTR $T224314[ebp], edx
	mov	eax, DWORD PTR _iMapY$224371[ebp]
	cmp	eax, DWORD PTR $T224314[ebp]
	jge	SHORT $LN35@ResponseGo
	mov	DWORD PTR tv165[ebp], 1
	jmp	SHORT $LN33@ResponseGo
$LN35@ResponseGo:
	mov	DWORD PTR tv165[ebp], 0
$LN33@ResponseGo:
	cmp	DWORD PTR tv165[ebp], 0
	je	SHORT $LN11@ResponseGo
	mov	ecx, DWORD PTR $T224270[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T224327[ebp], edx
	mov	eax, DWORD PTR _iMapY$224371[ebp]
	imul	eax, DWORD PTR $T224327[ebp]
	add	eax, DWORD PTR _iMapX$224370[ebp]
	imul	eax, 484				; 000001e4H
	mov	ecx, DWORD PTR $T224270[ebp]
	add	eax, DWORD PTR [ecx+4068]
	mov	DWORD PTR tv150[ebp], eax
	jmp	SHORT $LN12@ResponseGo
$LN11@ResponseGo:
	mov	DWORD PTR tv150[ebp], 0
$LN12@ResponseGo:
	mov	edx, DWORD PTR tv150[ebp]
	mov	DWORD PTR _pPlot$[ebp], edx
$LN9@ResponseGo:

; 928  : 	CvUnit* pUnit = kPlayer.getUnit(iUnitID);

	mov	eax, DWORD PTR _iUnitID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z	; CvPlayer::getUnit
	mov	DWORD PTR _pUnit$[ebp], eax

; 929  : 	kPlayer.receiveGoody(pPlot, eGoody, pUnit);

	mov	ecx, DWORD PTR _pUnit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eGoody$[ebp]
	push	edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?receiveGoody@CvPlayer@@QAEXPAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@Z ; CvPlayer::receiveGoody

; 930  : }

	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?ResponseGoodyChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HHW4GoodyTypes@@H@Z ENDP ; CvDllNetMessageHandler::ResponseGoodyChoice
_TEXT	ENDS
EXTRN	?DoArchaeologyChoice@CvPlayerCulture@@QAEXW4ArchaeologyChoiceType@@@Z:PROC ; CvPlayerCulture::DoArchaeologyChoice
; Function compile flags: /Odtp
;	COMDAT ?ResponseArchaeologyChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ArchaeologyChoiceType@@@Z
_TEXT	SEGMENT
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eChoice$ = 16						; size = 4
?ResponseArchaeologyChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ArchaeologyChoiceType@@@Z PROC ; CvDllNetMessageHandler::ResponseArchaeologyChoice, COMDAT

; 934  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 935  : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 936  : 	kPlayer.GetCulture()->DoArchaeologyChoice(eChoice);

	mov	ecx, DWORD PTR _eChoice$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?DoArchaeologyChoice@CvPlayerCulture@@QAEXW4ArchaeologyChoiceType@@@Z ; CvPlayerCulture::DoArchaeologyChoice

; 937  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ResponseArchaeologyChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4ArchaeologyChoiceType@@@Z ENDP ; CvDllNetMessageHandler::ResponseArchaeologyChoice
_TEXT	ENDS
EXTRN	?SetPolicyBranchUnlocked@CvPlayerPolicies@@QAEXW4PolicyBranchTypes@@_N1@Z:PROC ; CvPlayerPolicies::SetPolicyBranchUnlocked
; Function compile flags: /Odtp
;	COMDAT ?ResponseIdeologyChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4PolicyBranchTypes@@@Z
_TEXT	SEGMENT
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eChoice$ = 16						; size = 4
?ResponseIdeologyChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4PolicyBranchTypes@@@Z PROC ; CvDllNetMessageHandler::ResponseIdeologyChoice, COMDAT

; 940  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 941  : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 942  : 	kPlayer.GetPlayerPolicies()->SetPolicyBranchUnlocked(eChoice, true, false);

	push	0
	push	1
	mov	ecx, DWORD PTR _eChoice$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?SetPolicyBranchUnlocked@CvPlayerPolicies@@QAEXW4PolicyBranchTypes@@_N1@Z ; CvPlayerPolicies::SetPolicyBranchUnlocked

; 943  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ResponseIdeologyChoice@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4PolicyBranchTypes@@@Z ENDP ; CvDllNetMessageHandler::ResponseIdeologyChoice
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	__$ArrayPad$
EXTRN	?setName@CvCity@@QAEXPBD_N@Z:PROC		; CvCity::setName
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ResponseRenameCity@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ResponseRenameCity@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z$0
__ehfuncinfo$?ResponseRenameCity@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ResponseRenameCity@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdllnetmessagehandler.cpp
xdata$x	ENDS
;	COMDAT ?ResponseRenameCity@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z
_TEXT	SEGMENT
tv92 = -56						; size = 4
_strName$222808 = -52					; size = 28
__$ArrayPad$ = -24					; size = 4
_pkCity$ = -20						; size = 4
_kPlayer$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iCityID$ = 16						; size = 4
_szName$ = 20						; size = 4
?ResponseRenameCity@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z PROC ; CvDllNetMessageHandler::ResponseRenameCity, COMDAT

; 950  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ResponseRenameCity@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 951  : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 952  : 	CvCity* pkCity = kPlayer.getCity(iCityID);

	mov	ecx, DWORD PTR _iCityID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	DWORD PTR _pkCity$[ebp], eax

; 953  : 	if(pkCity)

	cmp	DWORD PTR _pkCity$[ebp], 0
	je	SHORT $LN2@ResponseRe

; 954  : 	{
; 955  : 		CvString strName = szName;

	cmp	DWORD PTR _szName$[ebp], 0
	je	SHORT $LN9@ResponseRe
	mov	edx, DWORD PTR _szName$[ebp]
	mov	DWORD PTR tv92[ebp], edx
	jmp	SHORT $LN10@ResponseRe
$LN9@ResponseRe:
	mov	DWORD PTR tv92[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN10@ResponseRe:
	mov	eax, DWORD PTR tv92[ebp]
	push	eax
	lea	ecx, DWORD PTR _strName$222808[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 956  : 		pkCity->setName(strName);

	push	0
	lea	ecx, DWORD PTR _strName$222808[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?setName@CvCity@@QAEXPBD_N@Z		; CvCity::setName

; 957  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strName$222808[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@ResponseRe:

; 958  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ResponseRenameCity@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z$0:
	lea	ecx, DWORD PTR _strName$222808[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?ResponseRenameCity@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ResponseRenameCity@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ResponseRenameCity@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z ENDP ; CvDllNetMessageHandler::ResponseRenameCity
PUBLIC	__$ArrayPad$
EXTRN	?setName@CvUnit@@QAEXVCvString@@@Z:PROC		; CvUnit::setName
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?ResponseRenameUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ResponseRenameUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z$0
__ehfuncinfo$?ResponseRenameUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ResponseRenameUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdllnetmessagehandler.cpp
xdata$x	ENDS
;	COMDAT ?ResponseRenameUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z
_TEXT	SEGMENT
tv95 = -68						; size = 4
tv136 = -64						; size = 4
$T224431 = -60						; size = 4
$T224413 = -56						; size = 4
_strName$222818 = -52					; size = 28
__$ArrayPad$ = -24					; size = 4
_pkUnit$ = -20						; size = 4
_kPlayer$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iUnitID$ = 16						; size = 4
_szName$ = 20						; size = 4
?ResponseRenameUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z PROC ; CvDllNetMessageHandler::ResponseRenameUnit, COMDAT

; 965  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ResponseRenameUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 966  : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 967  : 	CvUnit* pkUnit = kPlayer.getUnit(iUnitID);

	mov	ecx, DWORD PTR _iUnitID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z	; CvPlayer::getUnit
	mov	DWORD PTR _pkUnit$[ebp], eax

; 968  : 	if(pkUnit)

	cmp	DWORD PTR _pkUnit$[ebp], 0
	je	SHORT $LN2@ResponseRe@2

; 969  : 	{
; 970  : 		CvString strName = szName;

	cmp	DWORD PTR _szName$[ebp], 0
	je	SHORT $LN10@ResponseRe@2
	mov	edx, DWORD PTR _szName$[ebp]
	mov	DWORD PTR tv136[ebp], edx
	jmp	SHORT $LN11@ResponseRe@2
$LN10@ResponseRe@2:
	mov	DWORD PTR tv136[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN11@ResponseRe@2:
	mov	eax, DWORD PTR tv136[ebp]
	push	eax
	lea	ecx, DWORD PTR _strName$222818[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 971  : 		pkUnit->setName(strName);

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T224413[ebp], esp
	mov	DWORD PTR $T224431[ebp], ecx
	lea	edx, DWORD PTR _strName$222818[ebp]
	push	edx
	mov	ecx, DWORD PTR $T224431[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T224431[ebp]
	mov	DWORD PTR tv95[ebp], eax
	mov	ecx, DWORD PTR _pkUnit$[ebp]
	call	?setName@CvUnit@@QAEXVCvString@@@Z	; CvUnit::setName

; 972  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strName$222818[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@ResponseRe@2:

; 973  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ResponseRenameUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z$0:
	lea	ecx, DWORD PTR _strName$222818[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?ResponseRenameUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ResponseRenameUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ResponseRenameUnit@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HPBD@Z ENDP ; CvDllNetMessageHandler::ResponseRenameUnit
; Function compile flags: /Odtp
;	COMDAT ?ResponseResearch@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4TechTypes@@H_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eTech$ = 16						; size = 4
_iDiscover$ = 20					; size = 4
_bShift$ = 24						; size = 1
?ResponseResearch@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4TechTypes@@H_N@Z PROC ; CvDllNetMessageHandler::ResponseResearch, COMDAT

; 976  : {

	push	ebp
	mov	ebp, esp

; 977  : 	ResponseResearch(ePlayer, eTech, iDiscover, NO_PLAYER, bShift);

	movzx	eax, BYTE PTR _bShift$[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _iDiscover$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eTech$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+204]
	call	ecx

; 978  : }

	pop	ebp
	ret	20					; 00000014H
?ResponseResearch@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4TechTypes@@H_N@Z ENDP ; CvDllNetMessageHandler::ResponseResearch
_TEXT	ENDS
EXTRN	?pushResearch@CvPlayer@@QAE_NW4TechTypes@@_N@Z:PROC ; CvPlayer::pushResearch
EXTRN	?IsResearchingTech@CvPlayerTechs@@QBE_NW4TechTypes@@@Z:PROC ; CvPlayerTechs::IsResearchingTech
EXTRN	?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z:PROC	; CvTeamTechs::HasTech
EXTRN	?CanEverResearch@CvPlayerTechs@@QBE_NW4TechTypes@@@Z:PROC ; CvPlayerTechs::CanEverResearch
EXTRN	?clearResearchQueue@CvPlayer@@QAEXXZ:PROC	; CvPlayer::clearResearchQueue
EXTRN	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ:PROC ; CvTeam::GetTeamTechs
EXTRN	?SetNumFreeTechs@CvPlayer@@QAEXH@Z:PROC		; CvPlayer::SetNumFreeTechs
EXTRN	?chooseTech@CvPlayer@@QAEXHPBDW4TechTypes@@@Z:PROC ; CvPlayer::chooseTech
EXTRN	?setHasTech@CvTeam@@QAEXW4TechTypes@@_NW4PlayerTypes@@11@Z:PROC ; CvTeam::setHasTech
EXTRN	?CanResearchForFree@CvPlayerTechs@@QBE_NW4TechTypes@@@Z:PROC ; CvPlayerTechs::CanResearchForFree
EXTRN	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ:PROC ; CvPlayer::GetPlayerTechs
; Function compile flags: /Odtp
;	COMDAT ?ResponseResearch@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4TechTypes@@H0_N@Z
_TEXT	SEGMENT
tv185 = -52						; size = 4
tv240 = -48						; size = 4
$T224483 = -44						; size = 4
$T224479 = -40						; size = 4
$T224472 = -36						; size = 4
$T224466 = -32						; size = 4
$T224459 = -28						; size = 4
$T224447 = -24						; size = 4
$T224446 = -20						; size = 4
_pTeamTechs$222848 = -16				; size = 4
_pPlayerTechs$222847 = -12				; size = 4
_kTeam$ = -8						; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eTech$ = 16						; size = 4
_iDiscover$ = 20					; size = 4
_ePlayerToStealFrom$ = 24				; size = 4
_bShift$ = 28						; size = 1
?ResponseResearch@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4TechTypes@@H0_N@Z PROC ; CvDllNetMessageHandler::ResponseResearch, COMDAT

; 981  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H

; 982  : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 983  : 	CvTeam& kTeam = GET_TEAM(kPlayer.getTeam());

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T224459[ebp], eax
	mov	eax, DWORD PTR $T224459[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _kTeam$[ebp], eax

; 984  : 
; 985  : 	// Free tech
; 986  : 	if(iDiscover > 0)

	cmp	DWORD PTR _iDiscover$[ebp], 0
	jle	$LN13@ResponseRe@3

; 987  : 	{
; 988  : 		// Make sure we can research this tech for free
; 989  : 		if(kPlayer.GetPlayerTechs()->CanResearchForFree(eTech))

	mov	ecx, DWORD PTR _eTech$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?CanResearchForFree@CvPlayerTechs@@QBE_NW4TechTypes@@@Z ; CvPlayerTechs::CanResearchForFree
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN12@ResponseRe@3

; 990  : 		{
; 991  : 			kTeam.setHasTech(eTech, true, ePlayer, true, true);

	push	1
	push	1
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _eTech$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kTeam$[ebp]
	call	?setHasTech@CvTeam@@QAEXW4TechTypes@@_NW4PlayerTypes@@11@Z ; CvTeam::setHasTech

; 992  : 
; 993  : 			if(iDiscover > 1)

	cmp	DWORD PTR _iDiscover$[ebp], 1
	jle	SHORT $LN11@ResponseRe@3

; 994  : 			{
; 995  : 				if(ePlayer == GC.getGame().getActivePlayer())

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T224466[ebp], edx
	mov	ecx, DWORD PTR $T224466[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR _ePlayer$[ebp], eax
	jne	SHORT $LN11@ResponseRe@3

; 996  : 				{
; 997  : 					kPlayer.chooseTech(iDiscover - 1);

	push	-1
	push	0
	mov	eax, DWORD PTR _iDiscover$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?chooseTech@CvPlayer@@QAEXHPBDW4TechTypes@@@Z ; CvPlayer::chooseTech
$LN11@ResponseRe@3:

; 998  : 				}
; 999  : 			}
; 1000 : 			kPlayer.SetNumFreeTechs(max(0, iDiscover - 1));

	mov	ecx, DWORD PTR _iDiscover$[ebp]
	sub	ecx, 1
	mov	DWORD PTR $T224446[ebp], ecx
	mov	DWORD PTR $T224447[ebp], 0
	mov	edx, DWORD PTR $T224447[ebp]
	cmp	edx, DWORD PTR $T224446[ebp]
	jge	SHORT $LN28@ResponseRe@3
	lea	eax, DWORD PTR $T224446[ebp]
	mov	DWORD PTR tv240[ebp], eax
	jmp	SHORT $LN29@ResponseRe@3
$LN28@ResponseRe@3:
	lea	ecx, DWORD PTR $T224447[ebp]
	mov	DWORD PTR tv240[ebp], ecx
$LN29@ResponseRe@3:
	mov	edx, DWORD PTR tv240[ebp]
	mov	DWORD PTR $T224472[ebp], edx
	mov	eax, DWORD PTR $T224472[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?SetNumFreeTechs@CvPlayer@@QAEXH@Z	; CvPlayer::SetNumFreeTechs
$LN12@ResponseRe@3:

; 1001 : 		}
; 1002 : 	}

	jmp	$LN14@ResponseRe@3
$LN13@ResponseRe@3:

; 1003 : 	// Stealing tech
; 1004 : 	else if(ePlayerToStealFrom != NO_PLAYER)

	cmp	DWORD PTR _ePlayerToStealFrom$[ebp], -1
	je	SHORT $LN8@ResponseRe@3

; 1005 : 	{
; 1006 : 		// make sure we can still take a tech
; 1007 : 		CvAssertMsg(kPlayer.GetEspionage()->m_aiNumTechsToStealList[ePlayerToStealFrom] > 0, "No techs to steal from player");
; 1008 : 		CvAssertMsg(kPlayer.GetEspionage()->m_aaPlayerStealableTechList[ePlayerToStealFrom].size() > 0, "No techs to be stolen from this player");
; 1009 : 		CvAssertMsg(kPlayer.GetPlayerTechs()->CanResearch(eTech), "Player can't research this technology");
; 1010 : 		CvAssertMsg(GET_TEAM(GET_PLAYER(ePlayerToStealFrom).getTeam()).GetTeamTechs()->HasTech(eTech), "ePlayerToStealFrom does not have the requested tech");
; 1011 : 		if (kPlayer.GetEspionage()->m_aiNumTechsToStealList[ePlayerToStealFrom] > 0)

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	add	eax, 720				; 000002d0H
	mov	DWORD PTR $T224479[ebp], eax
	mov	edx, DWORD PTR $T224479[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ePlayerToStealFrom$[ebp]
	cmp	DWORD PTR [eax+ecx*4], 0
	jle	SHORT $LN7@ResponseRe@3

; 1012 : 		{
; 1013 : 			kTeam.setHasTech(eTech, true, ePlayer, true, true);

	push	1
	push	1
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _eTech$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kTeam$[ebp]
	call	?setHasTech@CvTeam@@QAEXW4TechTypes@@_NW4PlayerTypes@@11@Z ; CvTeam::setHasTech

; 1014 : 			kPlayer.GetEspionage()->m_aiNumTechsToStealList[ePlayerToStealFrom]--;

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	add	eax, 720				; 000002d0H
	mov	DWORD PTR $T224483[ebp], eax
	mov	ecx, DWORD PTR $T224483[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _ePlayerToStealFrom$[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR tv185[ebp], ecx
	mov	edx, DWORD PTR tv185[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR tv185[ebp]
	mov	DWORD PTR [ecx], eax
$LN7@ResponseRe@3:

; 1015 : 		}
; 1016 : 	}
; 1017 : 	// Normal tech
; 1018 : 	else

	jmp	$LN14@ResponseRe@3
$LN8@ResponseRe@3:

; 1019 : 	{
; 1020 : 		CvPlayerTechs* pPlayerTechs = kPlayer.GetPlayerTechs();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	DWORD PTR _pPlayerTechs$222847[ebp], eax

; 1021 : 		CvTeamTechs* pTeamTechs = kTeam.GetTeamTechs();

	mov	ecx, DWORD PTR _kTeam$[ebp]
	call	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ ; CvTeam::GetTeamTechs
	mov	DWORD PTR _pTeamTechs$222848[ebp], eax

; 1022 : 
; 1023 : 		if(eTech == NO_TECH)

	cmp	DWORD PTR _eTech$[ebp], -1
	jne	SHORT $LN5@ResponseRe@3

; 1024 : 		{
; 1025 : 			kPlayer.clearResearchQueue();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?clearResearchQueue@CvPlayer@@QAEXXZ	; CvPlayer::clearResearchQueue
	jmp	SHORT $LN14@ResponseRe@3
$LN5@ResponseRe@3:

; 1026 : 		}
; 1027 : 		else if(pPlayerTechs->CanEverResearch(eTech))

	mov	edx, DWORD PTR _eTech$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pPlayerTechs$222847[ebp]
	call	?CanEverResearch@CvPlayerTechs@@QBE_NW4TechTypes@@@Z ; CvPlayerTechs::CanEverResearch
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@ResponseRe@3

; 1028 : 		{
; 1029 : 			if((pTeamTechs->HasTech(eTech) || pPlayerTechs->IsResearchingTech(eTech)) && !bShift)

	mov	ecx, DWORD PTR _eTech$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pTeamTechs$222848[ebp]
	call	?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z ; CvTeamTechs::HasTech
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@ResponseRe@3
	mov	eax, DWORD PTR _eTech$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayerTechs$222847[ebp]
	call	?IsResearchingTech@CvPlayerTechs@@QBE_NW4TechTypes@@@Z ; CvPlayerTechs::IsResearchingTech
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@ResponseRe@3
$LN1@ResponseRe@3:
	movzx	edx, BYTE PTR _bShift$[ebp]
	test	edx, edx
	jne	SHORT $LN2@ResponseRe@3

; 1030 : 			{
; 1031 : 				kPlayer.clearResearchQueue();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?clearResearchQueue@CvPlayer@@QAEXXZ	; CvPlayer::clearResearchQueue
$LN2@ResponseRe@3:

; 1032 : 			}
; 1033 : 
; 1034 : 			kPlayer.pushResearch(eTech, !bShift);

	movzx	eax, BYTE PTR _bShift$[ebp]
	test	eax, eax
	sete	cl
	movzx	edx, cl
	push	edx
	mov	eax, DWORD PTR _eTech$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?pushResearch@CvPlayer@@QAE_NW4TechTypes@@_N@Z ; CvPlayer::pushResearch
$LN14@ResponseRe@3:

; 1035 : 		}
; 1036 : 	}
; 1037 : }

	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?ResponseResearch@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@W4TechTypes@@H0_N@Z ENDP ; CvDllNetMessageHandler::ResponseResearch
_TEXT	ENDS
EXTRN	?DoCivilianReturnLogic@CvPlayer@@QAEX_NW4PlayerTypes@@H@Z:PROC ; CvPlayer::DoCivilianReturnLogic
; Function compile flags: /Odtp
;	COMDAT ?ResponseReturnCivilian@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_eToPlayer$ = 16					; size = 4
_iUnitID$ = 20						; size = 4
_bReturn$ = 24						; size = 1
?ResponseReturnCivilian@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H_N@Z PROC ; CvDllNetMessageHandler::ResponseReturnCivilian, COMDAT

; 1040 : {

	push	ebp
	mov	ebp, esp

; 1041 : 	GET_PLAYER(ePlayer).DoCivilianReturnLogic(bReturn, eToPlayer, iUnitID);

	mov	eax, DWORD PTR _iUnitID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eToPlayer$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bReturn$[ebp]
	push	edx
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?DoCivilianReturnLogic@CvPlayer@@QAEX_NW4PlayerTypes@@H@Z ; CvPlayer::DoCivilianReturnLogic

; 1042 : }

	pop	ebp
	ret	20					; 00000014H
?ResponseReturnCivilian@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@0H_N@Z ENDP ; CvDllNetMessageHandler::ResponseReturnCivilian
_TEXT	ENDS
PUBLIC	??_C@_0BB@EPAOEILO@CitySoldBuilding?$AA@	; `string'
EXTRN	??1CvLuaArgsHandle@@QAE@XZ:PROC			; CvLuaArgsHandle::~CvLuaArgsHandle
EXTRN	?CallHook@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z:PROC ; LuaSupport::CallHook
EXTRN	??0CvLuaArgsHandle@@QAE@XZ:PROC			; CvLuaArgsHandle::CvLuaArgsHandle
EXTRN	?DoSellBuilding@CvCityBuildings@@QAEXW4BuildingTypes@@@Z:PROC ; CvCityBuildings::DoSellBuilding
EXTRN	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ:PROC ; CvCity::GetCityBuildings
;	COMDAT ??_C@_0BB@EPAOEILO@CitySoldBuilding?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaargshandle.h
CONST	SEGMENT
??_C@_0BB@EPAOEILO@CitySoldBuilding?$AA@ DB 'CitySoldBuilding', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ResponseSellBuilding@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4BuildingTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ResponseSellBuilding@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4BuildingTypes@@@Z$0
__ehfuncinfo$?ResponseSellBuilding@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4BuildingTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ResponseSellBuilding@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4BuildingTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdllnetmessagehandler.cpp
xdata$x	ENDS
;	COMDAT ?ResponseSellBuilding@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4BuildingTypes@@@Z
_TEXT	SEGMENT
tv142 = -52						; size = 4
tv135 = -48						; size = 4
tv128 = -44						; size = 4
tv85 = -40						; size = 4
$T224499 = -36						; size = 4
$T224495 = -32						; size = 4
_bResult$222872 = -25					; size = 1
_args$222871 = -24					; size = 4
_pkScriptSystem$222869 = -20				; size = 4
_pCity$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iCityID$ = 16						; size = 4
_eBuilding$ = 20					; size = 4
?ResponseSellBuilding@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4BuildingTypes@@@Z PROC ; CvDllNetMessageHandler::ResponseSellBuilding, COMDAT

; 1045 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ResponseSellBuilding@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4BuildingTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1046 : 	CvCity* pCity = GET_PLAYER(ePlayer).getCity(iCityID);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224495[ebp], eax
	mov	ecx, DWORD PTR _iCityID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T224495[ebp]
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	DWORD PTR _pCity$[ebp], eax

; 1047 : 	if(pCity)

	cmp	DWORD PTR _pCity$[ebp], 0
	je	$LN3@ResponseSe@2

; 1048 : 	{
; 1049 : 		pCity->GetCityBuildings()->DoSellBuilding(eBuilding);

	mov	edx, DWORD PTR _eBuilding$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?DoSellBuilding@CvCityBuildings@@QAEXW4BuildingTypes@@@Z ; CvCityBuildings::DoSellBuilding

; 1050 : 
; 1051 : 		ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	eax, DWORD PTR $T224499[ebp]
	mov	DWORD PTR tv85[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv85[ebp], ecx
	mov	edx, DWORD PTR tv85[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv85[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	DWORD PTR _pkScriptSystem$222869[ebp], eax

; 1052 : 		if (pkScriptSystem) 

	cmp	DWORD PTR _pkScriptSystem$222869[ebp], 0
	je	SHORT $LN3@ResponseSe@2

; 1053 : 		{
; 1054 : 			CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$222871[ebp]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1055 : 			args->Push(ePlayer);

	mov	eax, DWORD PTR _args$222871[ebp]
	mov	DWORD PTR tv128[ebp], eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv128[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv128[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 1056 : 			args->Push(iCityID);

	mov	eax, DWORD PTR _args$222871[ebp]
	mov	DWORD PTR tv135[ebp], eax
	mov	ecx, DWORD PTR _iCityID$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv135[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv135[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 1057 : 			args->Push(eBuilding);

	mov	eax, DWORD PTR _args$222871[ebp]
	mov	DWORD PTR tv142[ebp], eax
	mov	ecx, DWORD PTR _eBuilding$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv142[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv142[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 1058 : 
; 1059 : 			bool bResult;
; 1060 : 			LuaSupport::CallHook(pkScriptSystem, "CitySoldBuilding", args.get(), bResult);

	lea	eax, DWORD PTR _bResult$222872[ebp]
	push	eax
	mov	ecx, DWORD PTR _args$222871[ebp]
	push	ecx
	push	OFFSET ??_C@_0BB@EPAOEILO@CitySoldBuilding?$AA@
	mov	edx, DWORD PTR _pkScriptSystem$222869[ebp]
	push	edx
	call	?CallHook@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z ; LuaSupport::CallHook
	add	esp, 16					; 00000010H

; 1061 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _args$222871[ebp]
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN3@ResponseSe@2:

; 1062 : 	}
; 1063 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ResponseSellBuilding@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4BuildingTypes@@@Z$0:
	lea	ecx, DWORD PTR _args$222871[ebp]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__ehhandler$?ResponseSellBuilding@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4BuildingTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ResponseSellBuilding@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4BuildingTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ResponseSellBuilding@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4BuildingTypes@@@Z ENDP ; CvDllNetMessageHandler::ResponseSellBuilding
EXTRN	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z:PROC ; CvCityCitizens::SetFocusType
; Function compile flags: /Odtp
;	COMDAT ?ResponseSetCityAIFocus@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4CityAIFocusTypes@@@Z
_TEXT	SEGMENT
$T224523 = -12						; size = 4
_pkCitizens$222882 = -8					; size = 4
_pCity$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iCityID$ = 16						; size = 4
_eFocus$ = 20						; size = 4
?ResponseSetCityAIFocus@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4CityAIFocusTypes@@@Z PROC ; CvDllNetMessageHandler::ResponseSetCityAIFocus, COMDAT

; 1066 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1067 : 	CvCity* pCity = GET_PLAYER(ePlayer).getCity(iCityID);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224523[ebp], eax
	mov	ecx, DWORD PTR _iCityID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T224523[ebp]
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	DWORD PTR _pCity$[ebp], eax

; 1068 : 	if(pCity != NULL)

	cmp	DWORD PTR _pCity$[ebp], 0
	je	SHORT $LN3@ResponseSe@3

; 1069 : 	{
; 1070 : 		CvCityCitizens* pkCitizens = pCity->GetCityCitizens();

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	DWORD PTR _pkCitizens$222882[ebp], eax

; 1071 : 		if(pkCitizens != NULL)

	cmp	DWORD PTR _pkCitizens$222882[ebp], 0
	je	SHORT $LN3@ResponseSe@3

; 1072 : 		{
; 1073 : 			pkCitizens->SetFocusType(eFocus);

	mov	edx, DWORD PTR _eFocus$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCitizens$222882[ebp]
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType
$LN3@ResponseSe@3:

; 1074 : 		}
; 1075 : 	}
; 1076 : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?ResponseSetCityAIFocus@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4CityAIFocusTypes@@@Z ENDP ; CvDllNetMessageHandler::ResponseSetCityAIFocus
_TEXT	ENDS
EXTRN	?SetForcedAvoidGrowth@CvCityCitizens@@QAEX_N@Z:PROC ; CvCityCitizens::SetForcedAvoidGrowth
; Function compile flags: /Odtp
;	COMDAT ?ResponseSetCityAvoidGrowth@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H_N@Z
_TEXT	SEGMENT
$T224529 = -12						; size = 4
_pkCitizens$222892 = -8					; size = 4
_pCity$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iCityID$ = 16						; size = 4
_bAvoidGrowth$ = 20					; size = 1
?ResponseSetCityAvoidGrowth@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H_N@Z PROC ; CvDllNetMessageHandler::ResponseSetCityAvoidGrowth, COMDAT

; 1079 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1080 : 	CvCity* pCity = GET_PLAYER(ePlayer).getCity(iCityID);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224529[ebp], eax
	mov	ecx, DWORD PTR _iCityID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T224529[ebp]
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	DWORD PTR _pCity$[ebp], eax

; 1081 : 	if(pCity != NULL)

	cmp	DWORD PTR _pCity$[ebp], 0
	je	SHORT $LN3@ResponseSe@4

; 1082 : 	{
; 1083 : 		CvCityCitizens* pkCitizens = pCity->GetCityCitizens();

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	DWORD PTR _pkCitizens$222892[ebp], eax

; 1084 : 		if(pkCitizens != NULL)

	cmp	DWORD PTR _pkCitizens$222892[ebp], 0
	je	SHORT $LN3@ResponseSe@4

; 1085 : 		{
; 1086 : 			pkCitizens->SetForcedAvoidGrowth(bAvoidGrowth);

	movzx	edx, BYTE PTR _bAvoidGrowth$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkCitizens$222892[ebp]
	call	?SetForcedAvoidGrowth@CvCityCitizens@@QAEX_N@Z ; CvCityCitizens::SetForcedAvoidGrowth
$LN3@ResponseSe@4:

; 1087 : 		}
; 1088 : 	}
; 1089 : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?ResponseSetCityAvoidGrowth@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H_N@Z ENDP ; CvDllNetMessageHandler::ResponseSetCityAvoidGrowth
_TEXT	ENDS
EXTRN	?getMISSION_MOVE_TO@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_MOVE_TO
EXTRN	?AreUnitsOfSameType@CvUnit@@QBE_NABV1@_N@Z:PROC	; CvUnit::AreUnitsOfSameType
EXTRN	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z:PROC	; CvPlot::getUnitByIndex
EXTRN	?getNumUnits@CvPlot@@QBEHXZ:PROC		; CvPlot::getNumUnits
EXTRN	?plot@CvUnit@@QBEPAVCvPlot@@XZ:PROC		; CvUnit::plot
; Function compile flags: /Odtp
;	COMDAT ?ResponseSwapUnits@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4MissionTypes@@HHH_N@Z
_TEXT	SEGMENT
tv187 = -80						; size = 4
tv202 = -76						; size = 4
$T224646 = -72						; size = 4
$T224642 = -68						; size = 4
$T224594 = -64						; size = 4
$T224581 = -60						; size = 4
$T224577 = -56						; size = 4
$T224563 = -52						; size = 4
$T224559 = -45						; size = 1
$T224548 = -44						; size = 4
$T224544 = -37						; size = 1
_iMapY$224638 = -36					; size = 4
_iMapX$224637 = -32					; size = 4
_pkUnit2$222915 = -28					; size = 4
_iI$222911 = -24					; size = 4
_pkOriginationPlot$222910 = -20				; size = 4
_kMap$222907 = -16					; size = 4
_pkTargetPlot$222908 = -12				; size = 4
_pkUnit$ = -8						; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iUnitID$ = 16						; size = 4
_eMission$ = 20						; size = 4
_iData1$ = 24						; size = 4
_iData2$ = 28						; size = 4
_iFlags$ = 32						; size = 4
_bShift$ = 36						; size = 1
?ResponseSwapUnits@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4MissionTypes@@HHH_N@Z PROC ; CvDllNetMessageHandler::ResponseSwapUnits, COMDAT

; 1096 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H

; 1097 : 	CvUnit::dispatchingNetMessage(true);

	push	1
	call	?dispatchingNetMessage@CvUnit@@SAX_N@Z	; CvUnit::dispatchingNetMessage
	add	esp, 4

; 1098 : 
; 1099 : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 1100 : 	CvUnit* pkUnit = kPlayer.getUnit(iUnitID);

	mov	ecx, DWORD PTR _iUnitID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z	; CvPlayer::getUnit
	mov	DWORD PTR _pkUnit$[ebp], eax

; 1101 : 
; 1102 : 	if(pkUnit != NULL)

	cmp	DWORD PTR _pkUnit$[ebp], 0
	je	$LN6@ResponseSw

; 1103 : 	{
; 1104 : 		// Get target plot
; 1105 : 		CvMap& kMap = GC.getMap();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR _kMap$222907[ebp], edx

; 1106 : 		CvPlot* pkTargetPlot = kMap.plot(iData1, iData2);

	cmp	DWORD PTR _iData1$[ebp], -2147483647	; 80000001H
	je	SHORT $LN13@ResponseSw
	cmp	DWORD PTR _iData2$[ebp], -2147483647	; 80000001H
	jne	SHORT $LN14@ResponseSw
$LN13@ResponseSw:
	mov	DWORD PTR _pkTargetPlot$222908[ebp], 0
	jmp	$LN15@ResponseSw
$LN14@ResponseSw:
	mov	eax, DWORD PTR _kMap$222907[ebp]
	mov	cl, BYTE PTR [eax+4056]
	mov	BYTE PTR $T224544[ebp], cl
	mov	edx, DWORD PTR _kMap$222907[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T224548[ebp], eax
	movzx	ecx, BYTE PTR $T224544[ebp]
	test	ecx, ecx
	je	SHORT $LN26@ResponseSw
	cmp	DWORD PTR _iData1$[ebp], 0
	jge	SHORT $LN25@ResponseSw
	mov	eax, DWORD PTR _iData1$[ebp]
	cdq
	idiv	DWORD PTR $T224548[ebp]
	add	edx, DWORD PTR $T224548[ebp]
	mov	DWORD PTR _iMapX$224637[ebp], edx
	jmp	SHORT $LN27@ResponseSw
	jmp	SHORT $LN26@ResponseSw
$LN25@ResponseSw:
	mov	edx, DWORD PTR _iData1$[ebp]
	cmp	edx, DWORD PTR $T224548[ebp]
	jl	SHORT $LN26@ResponseSw
	mov	eax, DWORD PTR _iData1$[ebp]
	cdq
	idiv	DWORD PTR $T224548[ebp]
	mov	DWORD PTR _iMapX$224637[ebp], edx
	jmp	SHORT $LN27@ResponseSw
$LN26@ResponseSw:
	mov	eax, DWORD PTR _iData1$[ebp]
	mov	DWORD PTR _iMapX$224637[ebp], eax
$LN27@ResponseSw:
	mov	ecx, DWORD PTR _kMap$222907[ebp]
	mov	dl, BYTE PTR [ecx+4057]
	mov	BYTE PTR $T224559[ebp], dl
	mov	eax, DWORD PTR _kMap$222907[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T224563[ebp], ecx
	movzx	edx, BYTE PTR $T224559[ebp]
	test	edx, edx
	je	SHORT $LN36@ResponseSw
	cmp	DWORD PTR _iData2$[ebp], 0
	jge	SHORT $LN35@ResponseSw
	mov	eax, DWORD PTR _iData2$[ebp]
	cdq
	idiv	DWORD PTR $T224563[ebp]
	add	edx, DWORD PTR $T224563[ebp]
	mov	DWORD PTR _iMapY$224638[ebp], edx
	jmp	SHORT $LN37@ResponseSw
	jmp	SHORT $LN36@ResponseSw
$LN35@ResponseSw:
	mov	eax, DWORD PTR _iData2$[ebp]
	cmp	eax, DWORD PTR $T224563[ebp]
	jl	SHORT $LN36@ResponseSw
	mov	eax, DWORD PTR _iData2$[ebp]
	cdq
	idiv	DWORD PTR $T224563[ebp]
	mov	DWORD PTR _iMapY$224638[ebp], edx
	jmp	SHORT $LN37@ResponseSw
$LN36@ResponseSw:
	mov	ecx, DWORD PTR _iData2$[ebp]
	mov	DWORD PTR _iMapY$224638[ebp], ecx
$LN37@ResponseSw:
	cmp	DWORD PTR _iMapX$224637[ebp], 0
	jl	SHORT $LN41@ResponseSw
	mov	edx, DWORD PTR _kMap$222907[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T224577[ebp], eax
	mov	ecx, DWORD PTR _iMapX$224637[ebp]
	cmp	ecx, DWORD PTR $T224577[ebp]
	jge	SHORT $LN41@ResponseSw
	cmp	DWORD PTR _iMapY$224638[ebp], 0
	jl	SHORT $LN41@ResponseSw
	mov	edx, DWORD PTR _kMap$222907[ebp]
	mov	eax, DWORD PTR [edx+4024]
	mov	DWORD PTR $T224581[ebp], eax
	mov	ecx, DWORD PTR _iMapY$224638[ebp]
	cmp	ecx, DWORD PTR $T224581[ebp]
	jge	SHORT $LN41@ResponseSw
	mov	DWORD PTR tv202[ebp], 1
	jmp	SHORT $LN39@ResponseSw
$LN41@ResponseSw:
	mov	DWORD PTR tv202[ebp], 0
$LN39@ResponseSw:
	cmp	DWORD PTR tv202[ebp], 0
	je	SHORT $LN17@ResponseSw
	mov	edx, DWORD PTR _kMap$222907[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T224594[ebp], eax
	mov	ecx, DWORD PTR _iMapY$224638[ebp]
	imul	ecx, DWORD PTR $T224594[ebp]
	add	ecx, DWORD PTR _iMapX$224637[ebp]
	imul	ecx, 484				; 000001e4H
	mov	edx, DWORD PTR _kMap$222907[ebp]
	add	ecx, DWORD PTR [edx+4068]
	mov	DWORD PTR tv187[ebp], ecx
	jmp	SHORT $LN18@ResponseSw
$LN17@ResponseSw:
	mov	DWORD PTR tv187[ebp], 0
$LN18@ResponseSw:
	mov	eax, DWORD PTR tv187[ebp]
	mov	DWORD PTR _pkTargetPlot$222908[ebp], eax
$LN15@ResponseSw:

; 1107 : 
; 1108 : 		if(pkTargetPlot != NULL)

	cmp	DWORD PTR _pkTargetPlot$222908[ebp], 0
	je	$LN6@ResponseSw

; 1109 : 		{
; 1110 : 			CvPlot* pkOriginationPlot = pkUnit->plot();

	mov	ecx, DWORD PTR _pkUnit$[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	DWORD PTR _pkOriginationPlot$222910[ebp], eax

; 1111 : 
; 1112 : 			// Find unit to move out
; 1113 : #ifdef AUI_WARNING_FIXES
; 1114 : 			for (uint iI = 0; iI < pkTargetPlot->getNumUnits(); iI++)
; 1115 : #else
; 1116 : 			for(int iI = 0; iI < pkTargetPlot->getNumUnits(); iI++)

	mov	DWORD PTR _iI$222911[ebp], 0
	jmp	SHORT $LN4@ResponseSw
$LN3@ResponseSw:
	mov	ecx, DWORD PTR _iI$222911[ebp]
	add	ecx, 1
	mov	DWORD PTR _iI$222911[ebp], ecx
$LN4@ResponseSw:
	mov	ecx, DWORD PTR _pkTargetPlot$222908[ebp]
	call	?getNumUnits@CvPlot@@QBEHXZ		; CvPlot::getNumUnits
	cmp	DWORD PTR _iI$222911[ebp], eax
	jge	$LN6@ResponseSw

; 1117 : #endif
; 1118 : 			{
; 1119 : 				CvUnit* pkUnit2 = pkTargetPlot->getUnitByIndex(iI);

	mov	edx, DWORD PTR _iI$222911[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkTargetPlot$222908[ebp]
	call	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z ; CvPlot::getUnitByIndex
	mov	DWORD PTR _pkUnit2$222915[ebp], eax

; 1120 : 
; 1121 : 				if(pkUnit2 && pkUnit2->AreUnitsOfSameType(*pkUnit))

	cmp	DWORD PTR _pkUnit2$222915[ebp], 0
	je	SHORT $LN1@ResponseSw
	push	0
	mov	eax, DWORD PTR _pkUnit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkUnit2$222915[ebp]
	call	?AreUnitsOfSameType@CvUnit@@QBE_NABV1@_N@Z ; CvUnit::AreUnitsOfSameType
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@ResponseSw

; 1122 : 				{
; 1123 : 					// Start the swap
; 1124 : 					pkUnit->PushMission(CvTypes::getMISSION_MOVE_TO(), iData1, iData2, MOVE_IGNORE_STACKING, bShift, true);

	push	0
	push	0
	push	-1
	push	1
	movzx	edx, BYTE PTR _bShift$[ebp]
	push	edx
	push	4
	mov	eax, DWORD PTR _iData2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iData1$[ebp]
	push	ecx
	call	?getMISSION_MOVE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MOVE_TO
	push	eax
	mov	ecx, DWORD PTR _pkUnit$[ebp]
	call	?PushMission@CvUnit@@QAEXW4MissionTypes@@HHH_N1W4MissionAITypes@@PAVCvPlot@@PAV1@@Z ; CvUnit::PushMission

; 1125 : 
; 1126 : 					// Move the other unit back out, again splitting if necessary
; 1127 : 					pkUnit2->PushMission(CvTypes::getMISSION_MOVE_TO(), pkOriginationPlot->getX(), pkOriginationPlot->getY());

	mov	edx, DWORD PTR _pkOriginationPlot$222910[ebp]
	movsx	eax, WORD PTR [edx+2]
	mov	DWORD PTR $T224642[ebp], eax
	mov	ecx, DWORD PTR _pkOriginationPlot$222910[ebp]
	movsx	edx, WORD PTR [ecx]
	mov	DWORD PTR $T224646[ebp], edx
	push	0
	push	0
	push	-1
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR $T224642[ebp]
	push	eax
	mov	ecx, DWORD PTR $T224646[ebp]
	push	ecx
	call	?getMISSION_MOVE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MOVE_TO
	push	eax
	mov	ecx, DWORD PTR _pkUnit2$222915[ebp]
	call	?PushMission@CvUnit@@QAEXW4MissionTypes@@HHH_N1W4MissionAITypes@@PAVCvPlot@@PAV1@@Z ; CvUnit::PushMission
$LN1@ResponseSw:

; 1128 : 				}
; 1129 : 			}

	jmp	$LN3@ResponseSw
$LN6@ResponseSw:

; 1130 : 		}
; 1131 : 	}
; 1132 : 	CvUnit::dispatchingNetMessage(false);

	push	0
	call	?dispatchingNetMessage@CvUnit@@SAX_N@Z	; CvUnit::dispatchingNetMessage
	add	esp, 4

; 1133 : }

	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?ResponseSwapUnits@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@HW4MissionTypes@@HHH_N@Z ENDP ; CvDllNetMessageHandler::ResponseSwapUnits
_TEXT	ENDS
EXTRN	?DoReallocateCitizens@CvCityCitizens@@QAEXXZ:PROC ; CvCityCitizens::DoReallocateCitizens
EXTRN	?DoVerifyWorkingPlots@CvCityCitizens@@QAEXXZ:PROC ; CvCityCitizens::DoVerifyWorkingPlots
; Function compile flags: /Odtp
;	COMDAT ?ResponseUpdateCityCitizens@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H@Z
_TEXT	SEGMENT
$T224652 = -12						; size = 4
_pkCitizens$222924 = -8					; size = 4
_pCity$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_iCityID$ = 16						; size = 4
?ResponseUpdateCityCitizens@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H@Z PROC ; CvDllNetMessageHandler::ResponseUpdateCityCitizens, COMDAT

; 1136 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1137 : 	CvCity* pCity = GET_PLAYER(ePlayer).getCity(iCityID);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224652[ebp], eax
	mov	ecx, DWORD PTR _iCityID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T224652[ebp]
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	DWORD PTR _pCity$[ebp], eax

; 1138 : 	if(NULL != pCity && pCity->GetCityCitizens())

	cmp	DWORD PTR _pCity$[ebp], 0
	je	SHORT $LN3@ResponseUp
	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	test	eax, eax
	je	SHORT $LN3@ResponseUp

; 1139 : 	{
; 1140 : 		CvCityCitizens* pkCitizens = pCity->GetCityCitizens();

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	DWORD PTR _pkCitizens$222924[ebp], eax

; 1141 : 		if(pkCitizens != NULL)

	cmp	DWORD PTR _pkCitizens$222924[ebp], 0
	je	SHORT $LN3@ResponseUp

; 1142 : 		{
; 1143 : 			pkCitizens->DoVerifyWorkingPlots();

	mov	ecx, DWORD PTR _pkCitizens$222924[ebp]
	call	?DoVerifyWorkingPlots@CvCityCitizens@@QAEXXZ ; CvCityCitizens::DoVerifyWorkingPlots

; 1144 : 			pkCitizens->DoReallocateCitizens();

	mov	ecx, DWORD PTR _pkCitizens$222924[ebp]
	call	?DoReallocateCitizens@CvCityCitizens@@QAEXXZ ; CvCityCitizens::DoReallocateCitizens
$LN3@ResponseUp:

; 1145 : 		}
; 1146 : 	}
; 1147 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ResponseUpdateCityCitizens@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@H@Z ENDP ; CvDllNetMessageHandler::ResponseUpdateCityCitizens
_TEXT	ENDS
EXTRN	?DoUnlockPolicyBranch@CvPlayerPolicies@@QAEXW4PolicyBranchTypes@@@Z:PROC ; CvPlayerPolicies::DoUnlockPolicyBranch
EXTRN	?DoSwitchToPolicyBranch@CvPlayerPolicies@@QAEXW4PolicyBranchTypes@@@Z:PROC ; CvPlayerPolicies::DoSwitchToPolicyBranch
EXTRN	?IsPolicyBranchUnlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z:PROC ; CvPlayerPolicies::IsPolicyBranchUnlocked
EXTRN	?IsPolicyBranchBlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z:PROC ; CvPlayerPolicies::IsPolicyBranchBlocked
EXTRN	?DoUpdateHappiness@CvPlayer@@QAEXXZ:PROC	; CvPlayer::DoUpdateHappiness
EXTRN	?setHasPolicy@CvPlayer@@QAEXW4PolicyTypes@@_N@Z:PROC ; CvPlayer::setHasPolicy
EXTRN	?doAdoptPolicy@CvPlayer@@QAEXW4PolicyTypes@@@Z:PROC ; CvPlayer::doAdoptPolicy
; Function compile flags: /Odtp
;	COMDAT ?ResponseUpdatePolicies@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@_NH1@Z
_TEXT	SEGMENT
_eBranch$222940 = -16					; size = 4
_pPlayerPolicies$222942 = -12				; size = 4
_ePolicy$222935 = -8					; size = 4
_kPlayer$ = -4						; size = 4
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_bNOTPolicyBranch$ = 16					; size = 1
_iPolicyID$ = 20					; size = 4
_bValue$ = 24						; size = 1
?ResponseUpdatePolicies@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@_NH1@Z PROC ; CvDllNetMessageHandler::ResponseUpdatePolicies, COMDAT

; 1150 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1151 : 	CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 1152 : 
; 1153 : 	// Policy Update
; 1154 : 	if(bNOTPolicyBranch)

	movzx	ecx, BYTE PTR _bNOTPolicyBranch$[ebp]
	test	ecx, ecx
	je	SHORT $LN7@ResponseUp@2

; 1155 : 	{
; 1156 : 		const PolicyTypes ePolicy = static_cast<PolicyTypes>(iPolicyID);

	mov	edx, DWORD PTR _iPolicyID$[ebp]
	mov	DWORD PTR _ePolicy$222935[ebp], edx

; 1157 : 		if(bValue)

	movzx	eax, BYTE PTR _bValue$[ebp]
	test	eax, eax
	je	SHORT $LN6@ResponseUp@2

; 1158 : 		{
; 1159 : 			kPlayer.doAdoptPolicy(ePolicy);

	mov	ecx, DWORD PTR _ePolicy$222935[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?doAdoptPolicy@CvPlayer@@QAEXW4PolicyTypes@@@Z ; CvPlayer::doAdoptPolicy

; 1160 : 		}
; 1161 : 		else

	jmp	SHORT $LN5@ResponseUp@2
$LN6@ResponseUp@2:

; 1162 : 		{
; 1163 : 			kPlayer.setHasPolicy(ePolicy, bValue);

	movzx	edx, BYTE PTR _bValue$[ebp]
	push	edx
	mov	eax, DWORD PTR _ePolicy$222935[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?setHasPolicy@CvPlayer@@QAEXW4PolicyTypes@@_N@Z ; CvPlayer::setHasPolicy

; 1164 : 			kPlayer.DoUpdateHappiness();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?DoUpdateHappiness@CvPlayer@@QAEXXZ	; CvPlayer::DoUpdateHappiness
$LN5@ResponseUp@2:

; 1165 : #ifdef AUI_CITIZENS_MID_TURN_ASSIGN_RUNS_SELF_CONSISTENCY
; 1166 : 			kPlayer.doSelfConsistencyCheckAllCities();
; 1167 : #endif
; 1168 : 		}
; 1169 : 	}
; 1170 : 	// Policy Branch Update
; 1171 : 	else

	jmp	SHORT $LN8@ResponseUp@2
$LN7@ResponseUp@2:

; 1172 : 	{
; 1173 : 		const PolicyBranchTypes eBranch = static_cast<PolicyBranchTypes>(iPolicyID);

	mov	ecx, DWORD PTR _iPolicyID$[ebp]
	mov	DWORD PTR _eBranch$222940[ebp], ecx

; 1174 : 		CvPlayerPolicies* pPlayerPolicies = kPlayer.GetPlayerPolicies();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	DWORD PTR _pPlayerPolicies$222942[ebp], eax

; 1175 : 
; 1176 : 		// If Branch was blocked by another branch, then unblock this one - this may be the only thing this NetMessage does
; 1177 : 		if(pPlayerPolicies->IsPolicyBranchBlocked(eBranch))

	mov	edx, DWORD PTR _eBranch$222940[ebp]
	push	edx
	mov	ecx, DWORD PTR _pPlayerPolicies$222942[ebp]
	call	?IsPolicyBranchBlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchBlocked
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@ResponseUp@2

; 1178 : 		{
; 1179 : 			// Can't switch to a Branch that's still locked. DoUnlockPolicyBranch below will handle this for us
; 1180 : 			if(pPlayerPolicies->IsPolicyBranchUnlocked(eBranch))

	mov	ecx, DWORD PTR _eBranch$222940[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerPolicies$222942[ebp]
	call	?IsPolicyBranchUnlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchUnlocked
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@ResponseUp@2

; 1181 : 			{
; 1182 : 				//pPlayerPolicies->ChangePolicyBranchBlockedCount(eBranch, -1);
; 1183 : 				pPlayerPolicies->DoSwitchToPolicyBranch(eBranch);

	mov	eax, DWORD PTR _eBranch$222940[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayerPolicies$222942[ebp]
	call	?DoSwitchToPolicyBranch@CvPlayerPolicies@@QAEXW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::DoSwitchToPolicyBranch
$LN3@ResponseUp@2:

; 1184 : 			}
; 1185 : 		}
; 1186 : 
; 1187 : 		// Unlock the branch if it hasn't been already
; 1188 : 		if(!pPlayerPolicies->IsPolicyBranchUnlocked(eBranch))

	mov	ecx, DWORD PTR _eBranch$222940[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerPolicies$222942[ebp]
	call	?IsPolicyBranchUnlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchUnlocked
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN8@ResponseUp@2

; 1189 : 		{
; 1190 : 			pPlayerPolicies->DoUnlockPolicyBranch(eBranch);

	mov	eax, DWORD PTR _eBranch$222940[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayerPolicies$222942[ebp]
	call	?DoUnlockPolicyBranch@CvPlayerPolicies@@QAEXW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::DoUnlockPolicyBranch
$LN8@ResponseUp@2:

; 1191 : 		}
; 1192 : 	}
; 1193 : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?ResponseUpdatePolicies@CvDllNetMessageHandler@@UAGXW4PlayerTypes@@_NH1@Z ENDP ; CvDllNetMessageHandler::ResponseUpdatePolicies
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$??$GetLocalizedText@PBD@@YA?AVCvString@@PBD0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$GetLocalizedText@PBD@@YA?AVCvString@@PBD0@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$GetLocalizedText@PBD@@YA?AVCvString@@PBD0@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$GetLocalizedText@PBD@@YA?AVCvString@@PBD0@Z$1
__ehfuncinfo$??$GetLocalizedText@PBD@@YA?AVCvString@@PBD0@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$GetLocalizedText@PBD@@YA?AVCvString@@PBD0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
xdata$x	ENDS
;	COMDAT ??$GetLocalizedText@PBD@@YA?AVCvString@@PBD0@Z
_TEXT	SEGMENT
$T224664 = -140						; size = 4
_str$ = -136						; size = 28
__$ArrayPad$ = -108					; size = 4
_bytes$ = -104						; size = 4
_text$ = -100						; size = 80
_szComposedString$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_szString$ = 12						; size = 4
_arg1$ = 16						; size = 4
??$GetLocalizedText@PBD@@YA?AVCvString@@PBD0@Z PROC	; GetLocalizedText<char const *>, COMDAT

; 501  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$GetLocalizedText@PBD@@YA?AVCvString@@PBD0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 128				; 00000080H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T224664[ebp], 0

; 502  : 	Localization::String text = Localization::Lookup(szString);

	mov	eax, DWORD PTR _szString$[ebp]
	push	eax
	lea	ecx, DWORD PTR _text$[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 503  : 	text << arg1;

	lea	edx, DWORD PTR _arg1$[ebp]
	push	edx
	lea	eax, DWORD PTR _text$[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 504  : 
; 505  : 	size_t bytes = 0;

	mov	DWORD PTR _bytes$[ebp], 0

; 506  : 	const char* szComposedString = text.toUTF8(bytes);

	push	1
	lea	ecx, DWORD PTR _bytes$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDAAIH@Z
	mov	DWORD PTR _szComposedString$[ebp], eax

; 507  : 	CvString str;

	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 508  : 	str.assign(szComposedString, bytes);

	mov	edx, DWORD PTR _bytes$[ebp]
	push	edx
	mov	eax, DWORD PTR _szComposedString$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z

; 509  : 	return str;

	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T224664[ebp]
	or	edx, 1
	mov	DWORD PTR $T224664[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 510  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$GetLocalizedText@PBD@@YA?AVCvString@@PBD0@Z$0:
	lea	ecx, DWORD PTR _text$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$??$GetLocalizedText@PBD@@YA?AVCvString@@PBD0@Z$1:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??$GetLocalizedText@PBD@@YA?AVCvString@@PBD0@Z$2:
	mov	eax, DWORD PTR $T224664[ebp]
	and	eax, 1
	je	$LN6@GetLocaliz@2
	and	DWORD PTR $T224664[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
$LN6@GetLocaliz@2:
	ret	0
__ehhandler$??$GetLocalizedText@PBD@@YA?AVCvString@@PBD0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$GetLocalizedText@PBD@@YA?AVCvString@@PBD0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$GetLocalizedText@PBD@@YA?AVCvString@@PBD0@Z ENDP	; GetLocalizedText<char const *>
EXTRN	__imp_?PushArgument@String@Localization@@QAE_NPBD@Z:PROC
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvlocalization\include\cvlocalization.h
;	COMDAT ??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z PROC	; operator<<<char const *>, COMDAT

; 490  : {

	push	ebp
	mov	ebp, esp

; 491  : 	s.PushArgument(val);

	mov	eax, DWORD PTR _val$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z

; 492  : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 493  : }

	pop	ebp
	ret	0
??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ENDP	; operator<<<char const *>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
_TEXT	ENDS
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
_TEXT	ENDS
EXTRN	?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B:DWORD ; CvPreGame::sr_TeamTypes
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvpregame.h
;	COMDAT ?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z PROC ; CvPreGame::teamType, COMDAT

; 298  : {

	push	ebp
	mov	ebp, esp

; 299  : 	if(p >= 0 && p < MAX_PLAYERS)

	cmp	DWORD PTR _p$[ebp], 0
	jl	SHORT $LN1@teamType
	cmp	DWORD PTR _p$[ebp], 64			; 00000040H
	jge	SHORT $LN1@teamType

; 300  : 		return sr_TeamTypes[p];

	mov	eax, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	jmp	SHORT $LN2@teamType
$LN1@teamType:

; 301  : 	return NO_TEAM;

	or	eax, -1
$LN2@teamType:

; 302  : }

	pop	ebp
	ret	0
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ENDP ; CvPreGame::teamType
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvplot.h
_TEXT	ENDS
;	COMDAT ?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T224699 = -4						; size = 4
?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ PROC		; CvPlot::getPlotCity, COMDAT
; _this$ = ecx

; 532  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 533  : 		if((m_plotCity.eOwner >= 0) && m_plotCity.eOwner < MAX_PLAYERS)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+104], 0
	jl	SHORT $LN1@getPlotCit
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+104], 64			; 00000040H
	jge	SHORT $LN1@getPlotCit

; 534  : 			return (GET_PLAYER((PlayerTypes)m_plotCity.eOwner).getCity(m_plotCity.iID));

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+104]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T224699[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	ecx, DWORD PTR $T224699[ebp]
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	jmp	SHORT $LN2@getPlotCit
$LN1@getPlotCit:

; 535  : 
; 536  : 		return NULL;

	xor	eax, eax
$LN2@getPlotCit:

; 537  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ ENDP		; CvPlot::getPlotCity
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
_TEXT	ENDS
;	COMDAT ?coordRange@@YAHHH_N@Z
_TEXT	SEGMENT
_iCoord$ = 8						; size = 4
_iRange$ = 12						; size = 4
_bWrap$ = 16						; size = 1
?coordRange@@YAHHH_N@Z PROC				; coordRange, COMDAT

; 87   : {

	push	ebp
	mov	ebp, esp

; 88   : 	if(bWrap)

	movzx	eax, BYTE PTR _bWrap$[ebp]
	test	eax, eax
	je	SHORT $LN4@coordRange

; 89   : 	{
; 90   : 		if(iCoord < 0)

	cmp	DWORD PTR _iCoord$[ebp], 0
	jge	SHORT $LN3@coordRange

; 91   : 		{
; 92   : 			return (iRange + (iCoord % iRange));

	mov	eax, DWORD PTR _iCoord$[ebp]
	cdq
	idiv	DWORD PTR _iRange$[ebp]
	add	edx, DWORD PTR _iRange$[ebp]
	mov	eax, edx
	jmp	SHORT $LN5@coordRange
	jmp	SHORT $LN4@coordRange
$LN3@coordRange:

; 93   : 		}
; 94   : 		else if(iCoord >= iRange)

	mov	ecx, DWORD PTR _iCoord$[ebp]
	cmp	ecx, DWORD PTR _iRange$[ebp]
	jl	SHORT $LN4@coordRange

; 95   : 		{
; 96   : 			return (iCoord % iRange);

	mov	eax, DWORD PTR _iCoord$[ebp]
	cdq
	idiv	DWORD PTR _iRange$[ebp]
	mov	eax, edx
	jmp	SHORT $LN5@coordRange
$LN4@coordRange:

; 97   : 		}
; 98   : 	}
; 99   : 
; 100  : 	return iCoord;

	mov	eax, DWORD PTR _iCoord$[ebp]
$LN5@coordRange:

; 101  : }

	pop	ebp
	ret	0
?coordRange@@YAHHH_N@Z ENDP				; coordRange
_TEXT	ENDS
END
